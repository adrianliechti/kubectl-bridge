{"version":3,"sources":["webpack:///./public/components/modals/add-users-modal.tsx"],"names":["AddUsersModal","props","values","setValues","t","onSubmit","e","preventDefault","patch","group","users","value","op","path","handlePromise","close","name","className","metadata","label","required","initialValues","onChange","errorMessage","inProgress","submitText","cancel","addUsersModal"],"mappings":"4FAAA,4JAeO,MAAMA,EAAgB,aAAmBC,IAC9C,MAAOC,EAAQC,GAAa,WAAe,CAAC,MAUtC,EAAEC,GAAM,2BAEd,OACE,wBAAMC,SAXiDC,IACvDA,EAAEC,iBAEF,MAAMC,EAAQP,EAAMQ,MAAMC,MACtB,IAAMR,EAASS,IAAkB,CAAGC,GAAI,MAAOC,KAAM,WAAYF,WACjE,CAAC,CAAEC,GAAI,MAAOC,KAAM,SAAUF,MAAOT,IACzC,OAAOD,EAAMa,cAAc,aAAS,aAAYb,EAAMQ,MAAOD,GAAQP,EAAMc,QAKnDC,KAAK,OAAOC,UAAU,kBAC5C,gBAAC,IAAU,KAAEb,EAAE,qBACf,gBAAC,IAAS,KACR,yBAAIA,EAAE,0CAA2CH,EAAMQ,MAAMS,WAC7D,gBAAC,IAAS,CAACC,MAAOf,EAAE,gBAAiBgB,UAAQ,EAACC,cAAenB,EAAQoB,SAAUnB,KAEjF,gBAAC,IAAiB,CAChBoB,aAActB,EAAMsB,aACpBC,WAAYvB,EAAMuB,WAClBC,WAAYrB,EAAE,eACdsB,OAAQzB,EAAMyB,YAMTC,EAAgB,YAAoB3B","file":"add-users-modal-chunk-ca57f3a4e5ba53166e6d.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\n\nimport { GroupModel } from '../../models';\nimport { GroupKind, k8sPatch } from '../../module/k8s';\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n  createModalLauncher,\n} from '../factory/modal';\nimport { ListInput, HandlePromiseProps, withHandlePromise } from '../utils';\nimport { useTranslation } from 'react-i18next';\n\nexport const AddUsersModal = withHandlePromise((props: AddUsersModalProps) => {\n  const [values, setValues] = React.useState(['']);\n\n  const submit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    // Append to an existing array, but handle the special case when the array is null.\n    const patch = props.group.users\n      ? _.map(values, (value: string) => ({ op: 'add', path: '/users/-', value }))\n      : [{ op: 'add', path: '/users', value: values }];\n    return props.handlePromise(k8sPatch(GroupModel, props.group, patch), props.close);\n  };\n  const { t } = useTranslation();\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content \">\n      <ModalTitle>{t('public~Add Users')}</ModalTitle>\n      <ModalBody>\n        <p>{t('public~Add new Users to Group {{name}}.', props.group.metadata)}</p>\n        <ListInput label={t('public~Users')} required initialValues={values} onChange={setValues} />\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={props.errorMessage}\n        inProgress={props.inProgress}\n        submitText={t('public~Save')}\n        cancel={props.cancel}\n      />\n    </form>\n  );\n});\n\nexport const addUsersModal = createModalLauncher(AddUsersModal);\n\nexport type AddUsersModalProps = {\n  group: GroupKind;\n} & ModalComponentProps &\n  HandlePromiseProps;\n"],"sourceRoot":""}