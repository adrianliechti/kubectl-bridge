{"version":3,"sources":["webpack:///./public/components/hpa.tsx"],"names":["common","factory","menuActions","getExtensionsActionsForKind","MetricsRow","type","current","target","className","MetricsTable","obj","hpa","t","resourceRow","metric","key","resource","targetUtilization","averageUtilization","resourceLabel","name","currentValue","currentMetric","currentUtilization","currentAverageValue","averageValue","getResourceUtilization","targetValue","text","spec","metrics","map","i","external","value","externalRow","ns","scaleTarget","object","kind","namespace","title","objectRow","metadata","scaleTargetRef","pods","podRow","HorizontalPodAutoscalersDetails","label","path","timestamp","status","lastScaleTime","conditions","pages","details","editYaml","events","HorizontalPodAutoscalersDetailsPage","props","displayName","tableColumnClasses","columnClass","HorizontalPodAutoscalersTableRow","columnID","labels","minReplicas","maxReplicas","actions","HorizontalPodAutoscalersList","Header","sortField","transforms","id","Row","virtualize","HorizontalPodAutoscalersPage","ListComponent","canCreate"],"mappings":"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","file":"hpa-chunk-3a3b2479f4a9339581ed.min.js","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  HorizontalPodAutoscalerKind,\n} from '../module/k8s';\nimport { HorizontalPodAutoscalerModel } from '../models';\nimport { Conditions } from './conditions';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  DetailsItem,\n  Kebab,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  navFactory,\n} from './utils';\nimport { ResourceEventStream } from './events';\n\nconst HorizontalPodAutoscalersReference: K8sResourceKindReference = 'HorizontalPodAutoscaler';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(HorizontalPodAutoscalerModel), ...common];\n\nconst MetricsRow: React.FC<MetricsRowProps> = ({ type, current, target }) => (\n  <div className=\"row\">\n    <div className=\"col-xs-6\">{type}</div>\n    <div className=\"col-xs-3\">{current || '-'}</div>\n    <div className=\"col-xs-3\">{target || '-'}</div>\n  </div>\n);\n\nconst externalRow = (metric, current, key) => {\n  const { external } = metric;\n  const type = external.metric.name;\n  const currentValue =\n    current?.external?.current?.averageValue || current?.external?.current?.value;\n  const targetValue = external.target.averageValue || external.target.value;\n\n  return <MetricsRow key={key} type={type} current={currentValue} target={targetValue} />;\n};\n\nconst getResourceUtilization = (currentMetric) => {\n  const currentUtilization = currentMetric?.resource?.current?.averageUtilization;\n\n  // Use _.isFinite so that 0 evaluates to true, but null / undefined / NaN don't\n  if (!_.isFinite(currentUtilization)) {\n    return null;\n  }\n\n  const currentAverageValue = currentMetric?.resource?.current?.averageValue;\n  // Only show currentAverageValue in parens if set and non-zero to avoid things like \"0% (0)\"\n  return currentAverageValue && currentAverageValue !== '0'\n    ? `${currentUtilization}% (${currentAverageValue})`\n    : `${currentUtilization}%`;\n};\n\nconst MetricsTable: React.FC<MetricsTableProps> = ({ obj: hpa }) => {\n  const { t } = useTranslation();\n  const resourceRow = (metric, current, key) => {\n    const { resource } = metric;\n    const targetUtilization = resource.target.averageUtilization;\n    const resourceLabel = t('public~resource {{name}}', { name: resource.name });\n    const type = targetUtilization ? (\n      <>\n        {resourceLabel}&nbsp;\n        <span className=\"small text-muted\">{t('public~(as a percentage of request)')}</span>\n      </>\n    ) : (\n      resourceLabel\n    );\n    const currentValue = targetUtilization\n      ? getResourceUtilization(current)\n      : current?.resource?.current?.averageValue;\n    const targetValue = targetUtilization ? `${targetUtilization}%` : resource.target.averageValue;\n\n    return <MetricsRow key={key} type={type} current={currentValue} target={targetValue} />;\n  };\n\n  const podRow = (metric, current, key) => {\n    const { pods } = metric;\n    const type = t('public~{{name}} on pods', { name: pods.metric.name });\n    const currentValue = current?.pods?.current.averageValue;\n    const targetValue = pods.target.averageValue;\n\n    return <MetricsRow key={key} type={type} current={currentValue} target={targetValue} />;\n  };\n\n  const objectRow = (metric, current, ns, key, scaleTarget) => {\n    const { object } = metric;\n    const name = object.metric.name;\n    const type = (\n      <Trans t={t} ns=\"public\">\n        {{ name }} on\n        <ResourceLink\n          kind={scaleTarget.kind}\n          name={scaleTarget.name}\n          namespace={ns}\n          title={object.metric.name}\n        />\n      </Trans>\n    );\n    const currentValue = current?.object?.current.value;\n    const targetValue = object.target.value;\n\n    return <MetricsRow key={key} type={type} current={currentValue} target={targetValue} />;\n  };\n\n  return (\n    <>\n      <SectionHeading text={t('public~Metrics')} />\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-xs-6\">{t('public~Type')}</div>\n          <div className=\"col-xs-3\">{t('public~Current')}</div>\n          <div className=\"col-xs-3\">{t('public~Target')}</div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {hpa.spec.metrics.map((metric, i) => {\n            // https://github.com/kubernetes/api/blob/master/autoscaling/v2beta1/types.go\n            const current = _.get(hpa, ['status', 'currentMetrics', i]);\n            switch (metric.type) {\n              case 'External':\n                return externalRow(metric, current, i);\n              case 'Object':\n                return objectRow(\n                  metric,\n                  current,\n                  hpa.metadata.namespace,\n                  i,\n                  hpa.spec.scaleTargetRef,\n                );\n              case 'Pods':\n                return podRow(metric, current, i);\n              case 'Resource':\n                return resourceRow(metric, current, i);\n              default:\n                return (\n                  <div key={i} className=\"row\">\n                    <div className=\"col-xs-12\">\n                      {metric.type}{' '}\n                      <span className=\"small text-muted\">{t('public~(unrecognized type)')}</span>\n                    </div>\n                  </div>\n                );\n            }\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const HorizontalPodAutoscalersDetails: React.FC<HorizontalPodAutoscalersDetailsProps> = ({\n  obj: hpa,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~HorizontalPodAutoscaler details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={hpa} />\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('public~Scale target')} obj={hpa} path=\"spec.scaleTargetRef\">\n                <ResourceLink\n                  kind={hpa.spec.scaleTargetRef.kind}\n                  name={hpa.spec.scaleTargetRef.name}\n                  namespace={hpa.metadata.namespace}\n                  title={hpa.spec.scaleTargetRef.name}\n                />\n              </DetailsItem>\n              <DetailsItem label={t('public~Min replicas')} obj={hpa} path=\"spec.minReplicas\" />\n              <DetailsItem label={t('public~Max replicas')} obj={hpa} path=\"spec.maxReplicas\" />\n              <DetailsItem\n                label={t('public~Last scale time')}\n                obj={hpa}\n                path=\"status.lastScaleTime\"\n              >\n                <Timestamp timestamp={hpa.status.lastScaleTime} />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Current replicas')}\n                obj={hpa}\n                path=\"status.currentReplicas\"\n              />\n              <DetailsItem\n                label={t('public~Desired replicas')}\n                obj={hpa}\n                path=\"status.desiredReplicas\"\n              />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <MetricsTable obj={hpa} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={hpa.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst pages = [\n  navFactory.details(HorizontalPodAutoscalersDetails),\n  navFactory.editYaml(),\n  navFactory.events(ResourceEventStream),\n];\nexport const HorizontalPodAutoscalersDetailsPage: React.FC = (props) => (\n  <DetailsPage\n    {...props}\n    kind={HorizontalPodAutoscalersReference}\n    menuActions={menuActions}\n    pages={pages}\n  />\n);\nHorizontalPodAutoscalersDetailsPage.displayName = 'HorizontalPodAutoscalersDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst kind = 'HorizontalPodAutoscaler';\n\nconst HorizontalPodAutoscalersTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={HorizontalPodAutoscalersReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        <ResourceLink\n          kind={obj.spec.scaleTargetRef.kind}\n          name={obj.spec.scaleTargetRef.name}\n          namespace={obj.metadata.namespace}\n          title={obj.spec.scaleTargetRef.name}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>{obj.spec.minReplicas}</TableData>\n      <TableData className={tableColumnClasses[5]}>{obj.spec.maxReplicas}</TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab\n          actions={menuActions}\n          kind={HorizontalPodAutoscalersReference}\n          resource={obj}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst HorizontalPodAutoscalersList: React.FC = (props) => {\n  const { t } = useTranslation();\n  const HorizontalPodAutoscalersTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Scale target'),\n      sortField: 'spec.scaleTargetRef.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Min pods'),\n      sortField: 'spec.minReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Max pods'),\n      sortField: 'spec.maxReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~HorizontalPodAutoScalers')}\n      Header={HorizontalPodAutoscalersTableHeader}\n      Row={HorizontalPodAutoscalersTableRow}\n      virtualize\n    />\n  );\n};\nHorizontalPodAutoscalersList.displayName = 'HorizontalPodAutoscalersList';\n\nexport const HorizontalPodAutoscalersPage: React.FC<HorizontalPodAutoscalersPageProps> = (\n  props,\n) => (\n  <ListPage\n    {...props}\n    kind={HorizontalPodAutoscalersReference}\n    ListComponent={HorizontalPodAutoscalersList}\n    canCreate={true}\n  />\n);\nHorizontalPodAutoscalersPage.displayName = 'HorizontalPodAutoscalersListPage';\n\nexport type HorizontalPodAutoscalersDetailsProps = {\n  obj: HorizontalPodAutoscalerKind;\n};\n\nexport type HorizontalPodAutoscalersPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype MetricsTableProps = {\n  obj: HorizontalPodAutoscalerKind;\n};\n\ntype MetricsRowProps = {\n  type: any;\n  current: any;\n  target: any;\n};\n"],"sourceRoot":""}