{"version":3,"sources":["webpack:///./public/components/modals/configure-ns-pull-secret-modal.jsx"],"names":["ConfigureNamespacePullSecretWithTranslation","props","super","this","_submit","bind","_cancel","cancel","_onMethodChange","_onFileChange","state","Object","assign","method","fileData","invalidJson","event","setState","target","value","file","files","type","reader","FileReader","onload","e","input","result","JSON","parse","error","readAsText","preventDefault","namespace","secretData","encode","elements","formData","config","auths","authParts","username","length","push","password","address","auth","join","email","stringify","generateSecretData","data","pullSecretName","PULL_SECRET_DATA","secret","metadata","name","PULL_SECRET_TYPE","defaultServiceAccountPatch","op","path","promise","then","handlePromise","close","t","onSubmit","className","kind","htmlFor","id","required","checked","onChange","placeholder","isInline","variant","title","errorMessage","inProgress","submitText","submitDisabled","ConfigureNamespacePullSecret","configureNamespacePullSecretModal","propTypes","isRequired","pullSecret"],"mappings":"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","file":"configure-ns-pull-secret-modal-chunk-b9ae4abb7a67585d69a5.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Base64 } from 'js-base64';\nimport { Alert, CodeBlock, CodeBlockCode } from '@patternfly/react-core';\nimport { withTranslation } from 'react-i18next';\n\nimport { CONST } from '@console/shared';\nimport { k8sPatchByName, k8sCreate } from '../../module/k8s';\nimport { SecretModel, ServiceAccountModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { PromiseComponent, ResourceIcon } from '../utils';\n\nconst generateSecretData = (formData) => {\n  const config = {\n    auths: {},\n  };\n\n  const authParts = [];\n\n  if (_.trim(formData.username).length >= 1) {\n    authParts.push(formData.username);\n  }\n  authParts.push(formData.password);\n\n  config.auths[formData.address] = {\n    auth: Base64.encode(authParts.join(':')),\n    email: formData.email,\n  };\n\n  return Base64.encode(JSON.stringify(config));\n};\n\nclass ConfigureNamespacePullSecretWithTranslation extends PromiseComponent {\n  constructor(props) {\n    super(props);\n\n    this._submit = this._submit.bind(this);\n    this._cancel = this.props.cancel.bind(this);\n\n    this._onMethodChange = this._onMethodChange.bind(this);\n    this._onFileChange = this._onFileChange.bind(this);\n\n    this.state = Object.assign(this.state, {\n      method: 'form',\n      fileData: null,\n      invalidJson: false,\n    });\n  }\n\n  _onMethodChange(event) {\n    this.setState({ method: event.target.value });\n  }\n\n  _onFileChange(event) {\n    this.setState({ invalidJson: false, fileData: null });\n\n    const file = event.target.files[0];\n    if (!file || file.type !== 'application/json') {\n      this.setState({ invalidJson: true });\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const input = e.target.result;\n      try {\n        JSON.parse(input);\n      } catch (error) {\n        this.setState({ invalidJson: true });\n        return;\n      }\n      this.setState({ fileData: input });\n    };\n    reader.readAsText(file, 'UTF-8');\n  }\n\n  _submit(event) {\n    event.preventDefault();\n    const { namespace } = this.props;\n\n    let secretData;\n\n    if (this.state.method === 'upload') {\n      secretData = Base64.encode(this.state.fileData);\n    } else {\n      const elements = event.target.elements;\n      const formData = {\n        username: elements['namespace-pull-secret-username'].value,\n        password: elements['namespace-pull-secret-password'].value,\n        email: elements['namespace-pull-secret-email'].value || '',\n        address: elements['namespace-pull-secret-address'].value,\n      };\n      secretData = generateSecretData(formData);\n    }\n\n    const data = {};\n    const pullSecretName = event.target.elements['namespace-pull-secret-name'].value;\n    data[CONST.PULL_SECRET_DATA] = secretData;\n\n    const secret = {\n      metadata: {\n        name: pullSecretName,\n        namespace: namespace.metadata.name,\n      },\n      data,\n      type: CONST.PULL_SECRET_TYPE,\n    };\n    const defaultServiceAccountPatch = [\n      {\n        op: 'add',\n        path: '/imagePullSecrets/-',\n        value: { name: pullSecretName },\n      },\n    ];\n    const promise = k8sCreate(SecretModel, secret).then(() =>\n      k8sPatchByName(\n        ServiceAccountModel,\n        'default',\n        namespace.metadata.name,\n        defaultServiceAccountPatch,\n      ),\n    );\n\n    this.handlePromise(promise).then(this.props.close);\n  }\n\n  render() {\n    const { namespace, t } = this.props;\n\n    return (\n      <form onSubmit={this._submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>{t('public~Default pull Secret')}</ModalTitle>\n        <ModalBody>\n          <p>\n            {t(\n              'public~Specify default credentials to be used to authenticate and download containers within this namespace. These credentials will be the default unless a pod references a specific pull Secret.',\n            )}\n          </p>\n\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-xs-3\">\n              <label>{t('public~Namespace')}</label>\n            </div>\n            <div className=\"col-xs-9\">\n              <ResourceIcon kind=\"Namespace\" /> &nbsp;{namespace.metadata.name}\n            </div>\n          </div>\n\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-xs-3\">\n              <label htmlFor=\"namespace-pull-secret-name\">{t('public~Secret name')}</label>\n            </div>\n\n            <div className=\"col-xs-9\">\n              <input\n                type=\"text\"\n                className=\"pf-v5-c-form-control\"\n                id=\"namespace-pull-secret-name\"\n                aria-describedby=\"namespace-pull-secret-name-help\"\n                required\n              />\n              <p className=\"help-block text-muted\" id=\"namespace-pull-secret-name-help\">\n                {t('public~Friendly name to help you manage this in the future')}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"row co-m-form-row form-group\">\n            <div className=\"col-xs-3\">\n              <label>{t('public~Method')}</label>\n            </div>\n            <div className=\"col-xs-9\">\n              <div className=\"radio\">\n                <label className=\"control-label\">\n                  <input\n                    type=\"radio\"\n                    id=\"namespace-pull-secret-method--form\"\n                    checked={this.state.method === 'form'}\n                    onChange={this._onMethodChange}\n                    value=\"form\"\n                  />\n                  {t('public~Enter username/password')}\n                </label>\n              </div>\n              <div className=\"radio\">\n                <label className=\"control-label\">\n                  <input\n                    type=\"radio\"\n                    checked={this.state.method === 'upload'}\n                    onChange={this._onMethodChange}\n                    id=\"namespace-pull-secret-method--upload\"\n                    value=\"upload\"\n                  />\n                  {t('public~Upload Docker config.json')}\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {this.state.method === 'form' && (\n            <div>\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-xs-3\">\n                  <label htmlFor=\"namespace-pull-secret-address\">\n                    {t('public~Registry address')}\n                  </label>\n                </div>\n                <div className=\"col-xs-9\">\n                  <input\n                    type=\"text\"\n                    className=\"pf-v5-c-form-control\"\n                    id=\"namespace-pull-secret-address\"\n                    placeholder={t('public~quay.io')}\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-xs-3\">\n                  <label htmlFor=\"namespace-pull-secret-email\">{t('public~Email address')}</label>\n                </div>\n                <div className=\"col-xs-9\">\n                  <input\n                    type=\"email\"\n                    className=\"pf-v5-c-form-control\"\n                    id=\"namespace-pull-secret-email\"\n                    aria-describedby=\"namespace-pull-secret-email-help\"\n                  />\n                  <p className=\"help-block text-muted\" id=\"namespace-pull-secret-email-help\">\n                    {t('public~Optional, depending on registry provider')}\n                  </p>\n                </div>\n              </div>\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-xs-3\">\n                  <label htmlFor=\"namespace-pull-secret-username\">{t('public~Username')}</label>\n                </div>\n                <div className=\"col-xs-9\">\n                  <input\n                    type=\"text\"\n                    className=\"pf-v5-c-form-control\"\n                    id=\"namespace-pull-secret-username\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-xs-3\">\n                  <label htmlFor=\"namespace-pull-secret-password\">{t('public~Password')}</label>\n                </div>\n                <div className=\"col-xs-9\">\n                  <input\n                    type=\"password\"\n                    className=\"pf-v5-c-form-control\"\n                    id=\"namespace-pull-secret-password\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {this.state.method === 'upload' && (\n            <div>\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-xs-3\">\n                  <label htmlFor=\"namespace-pull-secret-file\">{t('public~File upload')}</label>\n                </div>\n                <div className=\"col-xs-9\">\n                  <input\n                    type=\"file\"\n                    id=\"namespace-pull-secret-file\"\n                    onChange={this._onFileChange}\n                    aria-describedby=\"namespace-pull-secret-file-help\"\n                  />\n                  <p className=\"help-block etext-muted\" id=\"namespace-pull-secret-file-help\">\n                    {t(\n                      'public~Properly configured Docker config file in JSON format. Will be base64 encoded after upload.',\n                    )}\n                  </p>\n                </div>\n              </div>\n              {this.state.invalidJson && (\n                <div className=\"row co-m-form-row\">\n                  <div className=\"col-xs-9 col-sm-offset-3\">\n                    <Alert\n                      isInline\n                      className=\"co-alert\"\n                      variant=\"danger\"\n                      title={t('public~Invalid JSON')}\n                    >\n                      {t('public~The uploaded file is not properly-formatted JSON.')}\n                    </Alert>\n                  </div>\n                </div>\n              )}\n              {this.state.fileData && (\n                <div className=\"row co-m-form-row\">\n                  <div className=\"col-xs-9 col-sm-offset-3\">\n                    <CodeBlock>\n                      <CodeBlockCode>{this.state.fileData}</CodeBlockCode>\n                    </CodeBlock>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={this.state.errorMessage}\n          inProgress={this.state.inProgress}\n          submitText={t('public~Save')}\n          cancel={this._cancel}\n          submitDisabled={\n            this.state.method === 'upload' && (!this.state.fileData || this.state.invalidJson)\n          }\n        />\n      </form>\n    );\n  }\n}\n\nconst ConfigureNamespacePullSecret = withTranslation()(ConfigureNamespacePullSecretWithTranslation);\nexport const configureNamespacePullSecretModal = createModalLauncher(ConfigureNamespacePullSecret);\nConfigureNamespacePullSecret.propTypes = {\n  namespace: PropTypes.object.isRequired,\n  pullSecret: PropTypes.object,\n};\n"],"sourceRoot":""}