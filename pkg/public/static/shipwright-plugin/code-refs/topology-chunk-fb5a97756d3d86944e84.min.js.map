{"version":3,"sources":["webpack:///./packages/shipwright-plugin/src/components/build-decorators/ShipwrightBuildDecorator.tsx","webpack:///./packages/shipwright-plugin/src/components/build-tabsection/BuildOverview.tsx","webpack:///./packages/shipwright-plugin/src/components/build-tabsection/BuildRunItem.tsx","webpack:///./packages/shipwright-plugin/src/components/build-tabsection/StartBuildButton.tsx","webpack:///./packages/shipwright-plugin/src/components/build-tabsection/TriggerLastBuildButton.tsx","webpack:///./packages/shipwright-plugin/src/topology.ts","webpack:///./packages/topology/src/components/workload/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/topology/src/actions/provider.ts","webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./public/components/replicaset.jsx","webpack:///./public/components/daemon-set.tsx","webpack:///./public/components/deployment.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarTabSection.tsx","webpack:///./packages/topology/src/topology-types.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/Decorator.tsx","webpack:///./packages/topology/src/filters/index.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/BaseEdge.tsx","webpack:///./packages/topology/src/components/workload/utils.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/topology/src/filters/const.ts","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./packages/topology/src/actions/edgeActions.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/topology/src/actions/modify-application.ts","webpack:///./packages/topology/src/filters/filter-utils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/topology/src/actions/contextMenuActions.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/BaseNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecoratorBubble.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNode.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./packages/topology/src/components/graph-view/components/index.ts","webpack:///./packages/topology/src/components/graph-view/components/componentUtils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodeContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/index.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/index.ts","webpack:///./packages/topology/src/filters/useDisplayFilters.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNodeAnchor.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/ResourceKindsInfo.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/PodSet.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./packages/topology/src/elements/OdcBaseEdge.ts","webpack:///./packages/topology/src/components/graph-view/index.ts","webpack:///./packages/topology/src/filters/FilterProvider.tsx","webpack:///./packages/shipwright-plugin/src/types.ts","webpack:///./packages/topology/src/actions/index.ts","webpack:///./packages/topology/src/filters/useShowLabel.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/nodeUtils.ts","webpack:///./packages/topology/src/components/workload/CronJobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DaemonSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentConfigSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/JobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/pods-tab-section.tsx","webpack:///./packages/topology/src/components/workload/ResolveAdapter.ts","webpack:///./packages/topology/src/components/workload/StatefulSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/workload-resource-link.tsx","webpack:///./packages/topology/src/components/workload/build-tab-section.tsx","webpack:///./packages/topology/src/components/workload/network-tab-section.tsx","webpack:///./packages/topology/src/components/workload/jobs-tab-section.tsx","webpack:///./packages/topology/src/components/workload/PodSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/resource-alert.tsx","webpack:///./packages/topology/src/components/workload/vpa-tab-section.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/EditDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/MonitoringAlertsDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/UrlDecorator.tsx","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/topology/src/actions/nodeActions.ts","webpack:///./packages/topology/src/behavior/useHover.ts","webpack:///./packages/topology/src/behavior/withCreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/componentFactory.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/AggregateEdge.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ConnectsTo.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/CreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ServiceBinding.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/TrafficConnector.tsx","webpack:///./packages/topology/src/filters/useAppliedDisplayFilters.ts","webpack:///./packages/topology/src/filters/useSearchFilter.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/Application.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/WorkloadNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/index.ts","webpack:///./packages/topology/src/components/graph-view/components/NodeShadows.tsx","webpack:///./packages/topology/src/components/graph-view/Topology.tsx","webpack:///./packages/topology/src/elements/odcElementFactory.ts","webpack:///./packages/shipwright-plugin/src/utils.ts","webpack:///./packages/dev-console/src/components/import/render-utils.tsx","webpack:///./packages/dev-console/src/components/import/CheIcon.tsx","webpack:///./packages/topology/src/components/modals/MoveConnectionModal.tsx","webpack:///./packages/topology/src/components/modals/index.ts","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx","webpack:///./packages/topology/src/elements/index.ts","webpack:///./packages/topology/src/redux/action.ts","webpack:///./packages/console-shared/src/components/pod/PodsOverview.tsx","webpack:///./packages/topology/src/components/workload/BuildOverview.tsx","webpack:///./packages/topology/src/components/workload/NetworkingOverview.tsx","webpack:///./packages/topology/src/components/workload/JobsOverview.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/getNodeDecorators.tsx","webpack:///./packages/topology/src/data-transforms/useRoutesURL.ts","webpack:///./packages/topology/src/components/graph-view/components/withTopologyContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/GraphComponent.tsx","webpack:///./packages/topology/src/redux/const.ts","webpack:///./packages/topology/src/components/graph-view/components/RegroupHint.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/ApplicationGroupExpanded.tsx","webpack:///./packages/topology/src/components/graph-view/layouts/layoutFactory.ts","webpack:///./packages/topology/src/components/graph-view/layouts/TopologyColaLayout.ts","webpack:///./packages/knative-plugin/src/topology/layouts/layoutConstraints.ts","webpack:///./packages/topology/src/components/graph-view/TopologyControlBar.tsx","webpack:///./packages/shipwright-plugin/src/components/buildrun-status/BuildRunStatus.tsx","webpack:///./packages/shipwright-plugin/src/api.ts","webpack:///./packages/shipwright-plugin/src/components/build-decorators/getShipWrightBuildDecorator.tsx","webpack:///./packages/shipwright-plugin/src/components/build-decorators/getShipwrightDataModelReconcilor.tsx","webpack:///./packages/shipwright-plugin/src/components/build-tabsection/useBuildSideBarTabSection.tsx"],"names":["buildRuns","resource","radius","x","y","ref","t","latestBuildRun","status","statusIcon","iconOnly","noTooltip","tooltipContent","decoratorContent","resourceLabel","metadata","labels","buildRunModel","link","name","namespace","to","ariaLabel","triggerRef","content","position","left","item","builds","obj","buildRunsforResource","filter","buildRun","buildsForResource","build","length","text","className","undefined","encodeURIComponent","buildLength","map","buildRunsforBuild","spec","buildRef","sort","justifyContent","default","inline","kind","slice","br","key","uid","creationTimestamp","path","lastUpdated","completionTime","startTime","hasGutter","span","impersonate","defaultAccessReview","group","apiGroup","plural","verb","isAllowed","variant","onClick","catch","err","error","message","isDisabled","useTopologyWorkloadActionProvider","element","actions","getType","k8sKind","useTopologyVisualConnectorActionProvider","getSource","kindObj","inFlight","ModifyCount","AddStorage","common","factory","menuActions","labelKey","callback","dc","req","apiVersion","latest","force","opts","ns","rollout","accessReview","subresource","paused","getDeploymentConfigStatus","conditions","progressingFailure","type","reason","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","timeout","updatePeriod","interval","triggers","join","label","hideEmpty","strategy","count","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","isInline","title","href","deprecatedDeploymentConfig","additionalClassName","DeploymentConfigsDetails","model","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","props","loader","then","c","envPath","pages","details","editYaml","nameKey","component","showTitle","selector","canCreate","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","context","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","displayName","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","Header","Row","virtualize","DeploymentConfigsPage","createProps","ListComponent","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","annotations","replicationController","revision","phase","tableColumnClasses","columnClass","ReplicationControllerTableRow","columnID","statusReplicas","specReplicas","timestamp","ReplicationControllersList","sortField","transforms","id","sortFunc","ReplicationControllersPage","Details","replicaSet","ReplicaSetPods","ReplicaSetsDetailsPage","ReplicaSetTableRow","count1","count2","ReplicaSetsList","ReplicaSetsPage","getExtensionsActionsForKind","DaemonSetDetailsList","ds","DaemonSetDetails","daemonset","podData","resourceKind","enableScaling","EnvironmentTab","DaemonSetTableRow","currentNumber","currentNumberScheduled","desiredNumber","desiredNumberScheduled","DaemonSets","DaemonSetsPage","DaemonSetPods","DaemonSetsDetailsPage","prometheusIsAvailable","metrics","deployment","DeploymentDetailsList","rollingUpdate","progressDeadlineSeconds","DeploymentDetails","ReplicaSetsTab","DeploymentsDetailsPage","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","getRoutesURL","routes","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","itemData","Promise","reject","updates","push","groupResources","groupResource","nextResource","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","labelPluralKey","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","channelModels","resourceModel","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","edges","targetNode","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","metric","newValues","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","deploymentData","inProgressDeploymentData","completedDeploymentData","previous","progressRC","completedRC","rc","isRollingOut","size","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","editAccess","canEdit","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","TopologyViewType","TopologyDisplayFilterType","SHOW_GROUPING_HINT_EVENT","external","rest","decorator","showBackground","rel","stopPropagation","role","endTerminalType","directional","onShowRemoveConnector","onHideRemoveConnector","targetDragRef","sourceDragRef","onSelect","controlled","getDataFromAdapter","resolvedExtensions","properties","adapt","usePodsAdapterForWorkloads","podsAdapterForWorkloads","provider","buildsAdapterForWorkloads","networkAdapterForWorkloads","usePodsAdapterForCronJobWorkloads","setPods","setLoaded","setLoadError","watchedResources","errorKey","updatedPods","podsAdapterForCronJobWorkload","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","SHOW_POD_COUNT_FILTER_ID","SHOW_LABELS_FILTER_ID","EXPAND_APPLICATION_GROUPS_FILTER_ID","EXPAND_GROUPS_FILTER_ID","DEFAULT_TOPOLOGY_FILTERS","expand","DEFAULT_SUPPORTED_FILTER_IDS","healthChecksAdded","healthChecksUrl","AddHealthChecks","hidden","EditHealthChecks","CommonActionFactory","Delete","cta","Edit","ModifyLabels","blocking","ModifyAnnotations","ModifyPodSelector","ModifyTolerations","modalClassName","getCommonResourceActions","NodeType","EdgeType","KameletType","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","dx","dy","stdDeviation","floodColor","floodOpacity","window","navigator","userAgent","in","in2","operator","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","getAvailableTargetForEdge","currentTargets","getSourceEdges","getId","n1","n2","localeCompare","MoveConnectorAction","getElements","availableTargets","DeleteConnectorAction","edgeActions","moveConnection","resourceLimitsModal","m","getModifyApplicationAction","insertBefore","initialApplication","TOPOLOGY_SEARCH_FILTER_KEY","TOPOLOGY_LABELS_FILTER_KEY","NameLabelFilterValues","onSearchChange","searchQuery","clearNameFilter","clearLabelFilter","clearAll","getSupportedTopologyFilters","topology","plugins","devconsole","getSupportedTopologyKinds","getTopologySearchQuery","getFilterById","isExpanded","showKind","WorkloadTableRow","customData","WorkloadTableHeader","createContextMenuItems","option","SUB_MENU","GROUP_MENU","action","graphActionContext","graph","connectorSource","groupActionContext","contextMenuActions","csvName","innerRadius","icon","hoverRef","onShowCreateConnector","onContextMenu","contextMenuOpen","createConnectorAccessVerb","createConnectorDrag","alertVariant","hoverChange","setHoverChange","hover","internalHoverRef","nodeHoverRefs","cx","cy","iconRadius","filtered","showLabel","kindData","detailsLevel","getDetailsLevel","showDetails","low","badgeClassName","kindStr","toLowerCase","kindColor","prev","truncateLength","scaleNode","high","badge","kindAbbr","badgeColor","showStatusBackground","fill","xlinkHref","otherDecoratorProps","fontSize","truncateOptions","bgClassName","emptyValue","typeIconClass","textHover","textHoverRef","iconSize","iconRef","iconWidth","iconHeight","groupSize","groupRef","getCustomShape","rx","ry","iconClass","TOP_MARGIN","top","textAnchor","EditResourceLimits","hasHPAs","mapOfResources","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","actionOptions","MOVE_CONNECTOR_DROP_TYPE","NODE_DRAG_TYPE","EDGE_DRAG_TYPE","canDropEdgeOnNode","operation","getTargetEdges","highlightNode","monitor","getOperation","isDragging","getItem","canDropOnNode","nodeDragSourceSpec","allowRegroup","SHIFT","edit","canCancel","begin","dropResult","isCancelled","didDrop","controller","getNodeById","appendChild","collect","dragging","regrouping","noRegroupDragSourceSpec","nodesEdgeIsDragging","nodeDropTargetSpec","accept","canDrop","dropTarget","isOver","edgeDragging","graphDropTargetSpec","hitTest","getItemType","hasParent","dragInProgress","dragEditInProgress","dragCreate","hasDropTarget","dropHint","applicationGroupDropTargetSpec","droppable","dragRegroupable","edgeDragSourceSpec","failureTitle","raise","drag","setEndPoint","showIcon","noDropTargetSpec","withNoDrop","withContextMenu","document","getElementById","createVisualConnector","createConnectorCallback","dropHints","relationshipProviders","relationshipProviderExtensions","curRelProvider","create","createConnectors","createConnectorExtensions","creator","getter","isWorkloadRegroupable","groupContextMenu","graphContextMenu","useDisplayFilters","FILTER_ID","circleRef","typedIconSize","typedIconRef","GroupNodeAnchor","offset","center","offset2x","resourcesData","resourceTypes","RESOURCE_INFO_PADDING","calculateInnerPodStatusRadius","outerPodStatusInnerRadius","outerPodStatusWidth","innerPodStatusOuterRadius","innerPodStatusInnerRadius","podSetInnerRadius","podStatusInnerRadius","podStatusStrokeWidth","innerStrokeWidth","podStatusInset","PodSet","showPodCount","podStatusOuterRadius","hpaControlledScaling","ownerKind","subTitle","titleComponent","outerRadius","xmlns","viewBox","OdcBaseEdge","getAppliedFilters","useFilterContextValues","appliedFilters","setAppliedFilters","appliedFiltersLoaded","filtersLoaded","setFiltersLoaded","setFilters","getTopologyFilters","setTopologyFilters","displayFilters","FilterContext","FilterProvider","Provider","ComputedBuildRunStatus","ClusterBuildStrategy","ReadableClusterBuildStrategies","BUILDAH","UNKNOWN","useShowLabel","showLabelsFilter","getKindStringAndAbbreviation","CronJobSideBarDetails","cronjob","startingDeadlineSeconds","lastScheduleTime","useCronJobSideBarDetails","DaemonSetSideBarDetails","useDaemonSetSideBarDetails","DeploymentConfigSideBarDetails","useDeploymentConfigSideBarDetails","DeploymentSideBarDetails","useDeploymentSideBarDetails","JobSideBarDetails","job","activeDeadlineSeconds","useJobSideBarDetails","PodsTabSection","podAdapter","podAdapterExtensionResolved","podsData","podsDataLoaded","setPodData","handleAdapterResolved","setTimeout","useAdapterHook","onAdapterDataResolved","usePodsSideBarTabSection","podAdapterExtension","StatefulSetSideBarDetails","ss","useStatefulSetSideBarDetails","getWorkloadResourceLink","kindReference","BuildTabSection","buildAdapter","extensionsResolved","buildConfigsDataLoaded","setBuildConfigsData","useBuildsSideBarTabSection","buildAdapterExtensions","NetworkTabSection","networkAdapter","useNetworkingSideBarTabSection","networkAdapterExtensions","extensionsLoaded","JobsTabSection","useJobsSideBarTabSection","PodSideBarDetails","pod","usePodSideBarDetails","addHealthChecksRefs","useHealthChecksAlert","kindForCRDResource","canAddHealthChecks","canAddHealthChecksLoading","containersName","showAlert","addHealthChecksLink","alertMessage","dismissible","useResourceQuotaAlert","fireTelemetryEvent","canUseAlertAction","canUseAlertActionLoading","replicaFailureMsg","resourceQuotaRequested","alertAction","showAlertActionLink","alertActionCta","alertActionLink","actionLinks","VPATabSection","vpas","vpa","groupVersionKind","useVpaSideBarTabSection","verticalPodAutoscalers","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","workloadData","cheEnabled","editUrl","repoIcon","right","dispatch","showMonitoringOverview","firingAlerts","severityAlertType","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","deploymentConfigRollout","CreateServiceBinding","EMPTY","delayIn","delayOut","setHover","mountRef","unsetHandle","delayHandle","delayedStateChange","newState","delay","clearTimeout","onMouseEnter","onMouseLeave","addEventListener","removeEventListener","DEFAULT_HANDLE_ANGLE","PI","DEFAULT_HANDLE_ANGLE_TOP","DEFAULT_HANDLE_LENGTH","CreateConnectorWidget","onKeepAlive","onCreate","ConnectorComponent","handleAngle","handleAngleTop","handleLength","contextMenuClass","dragItem","dragOperation","hideConnectorMenu","prompt","setPrompt","setActive","hintsRef","dragProps","getDragEvent","choices","getDropHints","hints","dragRef","refs","dragEvent","startPoint","endPoint","getAnchor","getLocation","isRightLabel","getLabelPosition","referencePoint","tan","cos","sin","translateFromParent","topologyDefaultCreateConnector","fillOpacity","pageX","pageY","open","onRequestClose","withCreateConnector","setShow","alive","setKeepAlive","onHideCreateConnector","isAlive","componentFactory","others","bidirectional","none","directionalAlt","tipContents","sbr","hasError","ERROR","errorCross","getStartPoint","getEndPoint","centerX","centerY","angleDeg","atan2","classNames","topologyEdge","danger","topologyConnectorArrow","x1","y1","x2","y2","strokeWidth","endTerminalStatus","useAppliedDisplayFilters","EMPTY_QUERY_PARAMS","useSearchFilter","labelsQuery","labelsMatched","labelsString","fuzzyCaseInsensitive","dragNodeRef","needsHintRef","needsHint","groupClasses","StatusSeverities","warning","normal","getAggregateStatus","donutStatus","alertSeverity","buildStatus","pipelineStatus","workloadRqAlertVariant","worstPodStatus","podStatus","CrashLoopBackOff","Warning","getNodePodStatus","Critical","WorkloadPodsNode","urlAnchorRef","dropTooltip","decoratorRadius","tipContent","showPodCountFilter","decorators","iconImageUrl","nodeDecorators","workloadRqAlert","animationDuration","nodeStatus","attachments","WorkloadNode","NODE_SHADOW_FILTER_ID","NODE_SHADOW_FILTER_ID_HOVER","NodeShadows","STORED_NODE_LAYOUT_FIELDS","TopologyGraphView","visualizationReady","visualization","controlsDisabled","selectedId","dragHint","selectedIds","layout","layers","getStoredGraphModel","onGraphModelChange","setVisualization","userSettingState","topologyLayoutDataJson","setUserSettingState","setTopologyLayoutData","applicationRef","setVisualizationReady","setDragHint","storedLayoutApplied","componentFactoryExtensions","isStaticResolved","dynamicComponentFactoryExtensions","isDynamicResolved","createVisualization","storedLayout","newVisualization","registerElementFactory","registerLayoutFactory","onCurrentGraphModelChange","visModel","saveGraphModel","scale","scaleExtent","onVisualizationLayoutChange","updatedLayoutData","currentStore","setTopologyLayout","prevState","fromModel","ids","selectedEntity","visualizationRef","storedGraphModel","storedNode","sn","oldNode","oldEdge","getEdgeById","isNodeInView","graphBounds","viewNode","closestNode","closestDistance","nextNode","distance","nodeBounds","nodeX","nodeY","sqrt","nodeDistanceToBounds","panIntoView","selectedItem","registerComponentFactory","getFactory","hint","reset","resizeTimeout","visibleEntity","minimumVisible","getLatestBuildRunStatusforDeployment","buildRunsforDeployment","isBuildRunNewerThen","newBuildRun","prevBuildRun","prevCreationTime","byCreationTime","leftCreationTime","isV1Alpha1Resource","getBuildNameFromBuildRun","useDetermineModelVersion","modelOne","modelTwo","modelFlagOne","modelFlagTwo","flagTwo","flagOne","useBuildModel","useBuildRunModel","useBuildStrategyModel","useClusterBuildStrategyModel","kindToTabMap","useShipwrightBreadcrumbsFor","isAdminPerspective","location","resourceToModel","routeDecoratorIcon","routeURL","fillRule","stroke","nodeItem","MoveConnectionForm","handleSubmit","isSubmitting","setTranslator","isOpen","setOpen","isDirty","headingLevel","fieldId","_","toggle","toggleRef","isFullWidth","onOpenChange","isSelected","submitDisabled","submitError","MoveConnectionModal","newTarget","handlePromise","setStatus","initialValues","formikProps","moveConnectionModal","editApplicationModal","Recommendations","recommendations","recommendation","containerRecommendations","VerticalPodAutoscalerRecommendations","Actions","setSupportedTopologyFilters","supportedFilters","supportedTopologyFilters","setSupportedTopologyKinds","supportedKinds","supportedTopologyKinds","setTopologyGraphModel","topologyGraphModel","getTopologyGraphModel","podUpdateTime","allStatuses","updateTimes","times","nextStatus","running","errorPhases","isPodError","isEvicted","podCompare","pod1","pod2","error1","evicted1","runtime1","runtime2","PodOverviewItem","podName","tooltipFlag","PodsOverviewList","PodsOverviewContent","allPodsLink","emptyText","showWaitingPods","setShowWaitingPods","shipwrightBuilds","buildRunBeta","buildRunAlpha","watchedBuildRuns","allBuildRuns","useGetShipwrightBuilds","waitingForBuildConfig","completionTimestamp","isComplete","waitingForShipwright","buildRunIsComplete","showWaitingForBuildAlert","isDeploymentGeneratedByWebConsole","filteredPods","containerStatuses","containerStatus","imageID","isPodWithoutImageId","errorPodCount","podsShown","linkTo","emptyMessage","podAlert","podSize","StatusTitle","Complete","New","BuildStatus","logSnippet","BuildOverviewItem","startTimestamp","spin","BuildOverviewList","canStartBuild","buildsLength","BuildOverview","ServicePortList","service","ports","protocol","targetPort","ServicesOverviewListItem","ServicesOverviewList","RoutesOverviewListItem","RoutesOverviewList","NetworkingOverview","serviceResources","routeResources","JobOverviewItem","podsLink","standalone","showTooltip","JobsOverviewList","JobsOverview","allJobsLink","jobCount","getNodeDecorators","nodeRadius","nodeWidth","nodeHeight","deltaX","deltaY","upperRight","lowerRight","upperLeft","lowerLeft","retDecorator","getExtensionDecoratorForQuadrant","useRoutesURL","annotationURL","watchedURL","actionContext","atPoint","setReference","graphClasses","setRenderConstraint","addClassList","removeClassList","classList","add","remove","TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY","shift","collapsible","secondaryLabel","dndDropRef","badgeTextColor","badgeBorderColor","badgeLocation","labelIconClass","labelIcon","labelIconPadding","onCollapseChange","hovered","labelHover","labelHoverRef","dragLabelRef","isHover","anchorRef","outlineRef","labelLocation","pathRef","altGroup","hullPadding","getNodes","points","getNodeShape","hullPoints","lowPoints","delta","Infinity","computeLabelLocation","groupClassName","topologyGroup","innerGroupClassName","topologyGroupBackground","topologyGroupLabel","paddingX","paddingY","getNodeStatus","actionIcon","onActionIconClick","DEFAULT_LAYOUT","SUPPORTED_LAYOUTS","layoutFactory","layoutOnDrag","TopologyColaLayout","groups","initialRun","addingNodes","startLayout","getNodeTimeStamp","nodeSorter","node1","node2","alignNodeConnector","filteredNode","constraints","connectorLinks","isFixed","l1","l2","nextLink","serviceDistance","linkNodeConstraint","axis","offsets","nextOffset","gap","linkDistance","equality","layoutConstraints","leafNodes","leaves","serviceConstraint","eventSourceLinksConnector","pubSubLinksConnector","eventSinkLinksConnector","TopologyControlBar","controlButtons","zoomInCallback","scaleBy","zoomInTip","zoomInAriaLabel","zoomInDisabled","zoomOutCallback","zoomOutTip","zoomOutAriaLabel","zoomOutDisabled","fitToScreenCallback","fit","fitToScreenTip","fitToScreenAriaLabel","fitToScreenDisabled","resetViewCallback","resetViewTip","resetViewAriaLabel","resetViewDisabled","legend","getSucceededCondition","getBuildRunStatus","PENDING","RUNNING","SUCCEEDED","FAILED","failedCondition","getBuildRunStatusProps","startBuild","resourceMapLabel","newBuildRunData","canRerunBuildRun","hasBuildRef","hasBuildSpec","buildSpec","rerunBuildRun","buildRefName","getShipWrightBuildDecorator","getShipwrightDataModelReconcilor","resourcePartOf","useBuildSideBarTabSection"],"mappings":"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","file":"shipwright-plugin/code-refs/topology-chunk-fb5a97756d3d86944e84.min.js","sourcesContent":["import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { impersonateStateToProps } from '@console/dynamic-plugin-sdk';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { BuildDecoratorBubble } from '@console/topology/src/components/graph-view';\nimport { BUILDRUN_TO_RESOURCE_MAP_LABEL } from '../../const';\nimport { BuildRunModel, BuildRunModelV1Alpha1 } from '../../models';\nimport { Build, BuildRun } from '../../types';\nimport { getLatestBuildRunStatusforDeployment, isV1Alpha1Resource } from '../../utils';\n\ntype BuildRunDecoratorProps = {\n  buildRuns: BuildRun[];\n  build: Build[];\n  resource: K8sResourceKind;\n  radius: number;\n  x: number;\n  y: number;\n};\n\ntype StateProps = {\n  impersonate?: {\n    kind: string;\n    name: string;\n    subprotocols: string[];\n  };\n};\n\nexport const ConnectedBuildRunDecorator: React.FC<BuildRunDecoratorProps & StateProps> = ({\n  buildRuns,\n  resource,\n  radius,\n  x,\n  y,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const { latestBuildRun, status } = getLatestBuildRunStatusforDeployment(buildRuns, resource);\n\n  const statusIcon = <Status status={status} iconOnly noTooltip />;\n\n  let tooltipContent;\n  let decoratorContent;\n\n  if (latestBuildRun) {\n    tooltipContent = t(`shipwright-plugin~Build {{status}}`, { status });\n    const resourceLabel =\n      latestBuildRun.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] || 'build-decorator';\n\n    const buildRunModel = isV1Alpha1Resource(latestBuildRun)\n      ? BuildRunModelV1Alpha1\n      : BuildRunModel;\n\n    const link = `${resourcePathFromModel(\n      buildRunModel,\n      latestBuildRun.metadata.name,\n      latestBuildRun.metadata.namespace,\n    )}/logs`;\n\n    decoratorContent = (\n      <Link to={link} data-test={`${resourceLabel}-decorator`}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={tooltipContent}>\n          {statusIcon}\n        </BuildDecoratorBubble>\n      </Link>\n    );\n  } else {\n    tooltipContent = t('shipwright-plugin~Build not started');\n\n    decoratorContent = (\n      <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={tooltipContent}>\n        {statusIcon}\n      </BuildDecoratorBubble>\n    );\n  }\n\n  return (\n    <Tooltip triggerRef={ref} content={tooltipContent} position={TooltipPosition.left}>\n      <g ref={ref}>{decoratorContent}</g>\n    </Tooltip>\n  );\n};\n\nexport default connect(impersonateStateToProps)(ConnectedBuildRunDecorator);\n","import * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s/k8s';\nimport { OverviewItem, useFlag } from '@console/shared';\nimport { BUILDRUN_TO_RESOURCE_MAP_LABEL } from '../../const';\nimport { BuildModel, BuildModelV1Alpha1, BuildRunModel, BuildRunModelV1Alpha1 } from '../../models';\nimport { Build, BuildRun } from '../../types';\nimport { byCreationTime, isV1Alpha1Resource } from '../../utils';\nimport BuildRunItem from './BuildRunItem';\nimport StartBuildButton from './StartBuildButton';\nimport TriggerLastBuildButton from './TriggerLastBuildButton';\n\nconst MAX_VISIBLE = 3;\n\ntype BuildsOverviewProps = {\n  item: OverviewItem & {\n    builds?: Build[];\n    buildRuns?: BuildRun[];\n  };\n};\n\nconst BuildsOverview: React.FC<BuildsOverviewProps> = ({ item: { builds, buildRuns, obj } }) => {\n  const { t } = useTranslation();\n  const resourceLabel = obj.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL];\n  const buildRunModel = useFlag('SHIPWRIGHT_BUILDRUN')\n    ? referenceForModel(BuildRunModel)\n    : referenceForModel(BuildRunModelV1Alpha1);\n  const buildRunsforResource = resourceLabel\n    ? buildRuns.filter((buildRun) => {\n        return resourceLabel === buildRun.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL];\n      })\n    : [];\n\n  const buildsForResource = builds.filter((build) => {\n    return (\n      build.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] ===\n      obj.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL]\n    );\n  });\n\n  if (!buildsForResource || !buildsForResource.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('shipwright-plugin~BuildRuns')}>\n        {buildRunsforResource.length > MAX_VISIBLE && (\n          <Link\n            className=\"sidebar__section-view-all\"\n            to={`${resourcePath(\n              buildRunModel,\n              undefined,\n              obj.metadata?.namespace,\n            )}?labels=${BUILDRUN_TO_RESOURCE_MAP_LABEL}=${encodeURIComponent(resourceLabel)}`}\n          >\n            {t('shipwright-plugin~View all {{buildLength}}', {\n              buildLength: buildRunsforResource.length,\n            })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n\n      {buildsForResource.map((build) => {\n        const buildRunsforBuild = buildRuns\n          .filter((buildRun) =>\n            isV1Alpha1Resource(buildRun)\n              ? buildRun.spec.buildRef?.name === build.metadata.name\n              : buildRun.spec.build?.name === build.metadata.name &&\n                buildRun.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] ===\n                  obj.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL],\n          )\n          .sort(byCreationTime);\n        return (\n          <ul className=\"list-group pf-v5-u-mb-xl\">\n            <li className=\"list-group-item\">\n              <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n                <FlexItem>\n                  <ResourceLink\n                    inline\n                    kind={\n                      isV1Alpha1Resource(build)\n                        ? referenceForModel(BuildModelV1Alpha1)\n                        : referenceForModel(BuildModel)\n                    }\n                    name={build.metadata.name}\n                    namespace={build.metadata.namespace}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  {buildRunsforBuild.length === 0 ? (\n                    <StartBuildButton build={build} namespace={build.metadata.namespace} />\n                  ) : (\n                    <TriggerLastBuildButton\n                      buildRuns={buildRunsforBuild}\n                      resource={obj}\n                      namespace={build.metadata.namespace}\n                    />\n                  )}\n                </FlexItem>\n              </Flex>\n            </li>\n            {buildRunsforBuild.length > 0 &&\n              buildRunsforBuild\n                .slice(0, MAX_VISIBLE)\n                .map((br) => <BuildRunItem key={br.metadata.uid} buildRun={br} />)}\n          </ul>\n        );\n      })}\n    </>\n  );\n};\n\nexport default BuildsOverview;\n","import * as React from 'react';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { resourcePath } from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { BuildRunModel, BuildRunModelV1Alpha1 } from '../../models';\nimport { BuildRun } from '../../types';\nimport { isV1Alpha1Resource } from '../../utils';\nimport BuildRunStatus from '../buildrun-status/BuildRunStatus';\n\nimport './BuildRunItem.scss';\n\ntype BuildRunItemProps = {\n  buildRun: BuildRun;\n};\n\nconst BuildRunItem: React.FC<BuildRunItemProps> = ({ buildRun }) => {\n  const { t } = useTranslation();\n  const {\n    metadata: { name, namespace, creationTimestamp },\n    status,\n  } = buildRun;\n  const buildRunModel = isV1Alpha1Resource(buildRun) ? BuildRunModelV1Alpha1 : BuildRunModel;\n  const path = resourcePath(referenceForModel(buildRunModel), name, namespace);\n  const lastUpdated = status\n    ? status.completionTime || status.startTime || creationTimestamp\n    : creationTimestamp;\n\n  return (\n    <li className=\"so-build-run-item list-group-item\">\n      <Grid hasGutter>\n        <GridItem span={6}>\n          <div>\n            <Link to={`${path}`}>{name}</Link>\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"so-build-run-item__time text-muted\">({fromNow(lastUpdated)})</span>\n              </>\n            )}\n          </div>\n        </GridItem>\n        <GridItem span={3}>\n          <BuildRunStatus buildRun={buildRun} />\n        </GridItem>\n        <GridItem span={3} className=\"text-right\">\n          <Link to={`${path}/logs`}>{t('shipwright-plugin~View logs')}</Link>\n        </GridItem>\n      </Grid>\n    </li>\n  );\n};\n\nexport default BuildRunItem;\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { impersonateStateToProps, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { errorModal } from '@console/internal/components/modals';\nimport { AccessReviewResourceAttributes } from '@console/internal/module/k8s';\nimport { startBuild } from '../../api';\nimport { BuildRunModel } from '../../models';\nimport { Build } from '../../types';\n\ntype StateProps = {\n  impersonate?: {\n    kind: string;\n    name: string;\n    subprotocols: string[];\n  };\n};\n\ntype StartBuildButtonProps = {\n  build: Build;\n  namespace: string;\n};\n\nconst StartBuildButton: React.FC<StartBuildButtonProps & StateProps> = ({\n  build,\n  namespace,\n  impersonate,\n}) => {\n  const { t } = useTranslation();\n  const defaultAccessReview: AccessReviewResourceAttributes = {\n    group: BuildRunModel.apiGroup,\n    resource: BuildRunModel.plural,\n    namespace,\n    verb: 'create',\n  };\n  const [isAllowed] = useAccessReview(defaultAccessReview, impersonate);\n\n  const onClick = () => {\n    startBuild(build).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n\n  return (\n    isAllowed && (\n      <Button variant=\"secondary\" onClick={onClick}>\n        {t('shipwright-plugin~Start Build')}\n      </Button>\n    )\n  );\n};\n\nexport default connect(impersonateStateToProps)(StartBuildButton);\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { impersonateStateToProps, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { errorModal } from '@console/internal/components/modals';\nimport { AccessReviewResourceAttributes, K8sResourceKind } from '@console/internal/module/k8s';\nimport { canRerunBuildRun, rerunBuildRun } from '../../api';\nimport { BuildRunModel } from '../../models';\nimport { BuildRun } from '../../types';\nimport { getLatestBuildRunStatusforDeployment } from '../../utils';\n\ntype TriggerLastBuildButtonProps = {\n  buildRuns: BuildRun[];\n  resource: K8sResourceKind;\n  namespace: string;\n  impersonate?;\n};\n\nconst TriggerLastBuildButton: React.FC<TriggerLastBuildButtonProps> = ({\n  buildRuns,\n  resource,\n  namespace,\n  impersonate,\n}) => {\n  const { t } = useTranslation();\n  const defaultAccessReview: AccessReviewResourceAttributes = {\n    group: BuildRunModel.apiGroup,\n    resource: BuildRunModel.plural,\n    namespace,\n    verb: 'create',\n  };\n  const [isAllowed] = useAccessReview(defaultAccessReview, impersonate);\n\n  const { latestBuildRun } = getLatestBuildRunStatusforDeployment(buildRuns, resource);\n  const onClick = () => {\n    rerunBuildRun(latestBuildRun).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n\n  return (\n    isAllowed && (\n      <Button variant=\"secondary\" onClick={onClick} isDisabled={!canRerunBuildRun(latestBuildRun)}>\n        {t('shipwright-plugin~Rerun latest BuildRun')}\n      </Button>\n    )\n  );\n};\n\nexport default connect(impersonateStateToProps)(TriggerLastBuildButton);\n","export { getShipWrightBuildDecorator } from './components/build-decorators/getShipWrightBuildDecorator';\nexport { getShipwrightDataModelReconcilor } from './components/build-decorators/getShipwrightDataModelReconcilor';\nexport { useBuildSideBarTabSection } from './components/build-tabsection/useBuildSideBarTabSection';\n","export * from './CronJobSideBarDetails';\nexport * from './DaemonSetSideBarDetails';\nexport * from './DeploymentConfigSideBarDetails';\nexport * from './DeploymentSideBarDetails';\nexport * from './JobSideBarDetails';\nexport * from './pods-tab-section';\nexport * from './StatefulSetSideBarDetails';\nexport * from './workload-resource-link';\nexport * from './utils';\nexport * from './build-tab-section';\nexport * from './network-tab-section';\nexport * from './jobs-tab-section';\nexport * from './PodSideBarDetails';\nexport * from './resource-alert';\nexport * from './vpa-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import { useMemo } from 'react';\nimport { Edge, GraphElement } from '@patternfly/react-topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { TYPE_WORKLOAD, TYPE_CONNECTS_TO } from '../const';\nimport { getResource } from '../utils';\nimport { DeleteConnectorAction, MoveConnectorAction } from './edgeActions';\nimport { getModifyApplicationAction } from './modify-application';\n\nexport const useTopologyWorkloadActionProvider = (element: GraphElement) => {\n  const resource = getResource(element);\n  const actions = useMemo(() => {\n    if (element.getType() !== TYPE_WORKLOAD) return undefined;\n    if (!resource) {\n      return [];\n    }\n    const k8sKind = modelFor(referenceFor(resource));\n    return [getModifyApplicationAction(k8sKind, resource)];\n  }, [element, resource]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useTopologyVisualConnectorActionProvider = (element: Edge) => {\n  const resource = getResource(element.getSource?.());\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource ?? {}));\n  const actions = useMemo(() => {\n    if (!kindObj || element.getType() !== TYPE_CONNECTS_TO) return undefined;\n    return [MoveConnectorAction(kindObj, element), DeleteConnectorAction(kindObj, element)];\n  }, [element, kindObj]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, !inFlight, undefined];\n  }, [actions, inFlight]);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport {\n  usePodsWatcher,\n  PodRing,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  usePrometheusGate,\n} from '@console/shared';\nimport { K8sResourceKind, referenceFor, referenceForModel, DaemonSetKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  detailsPage,\n  LabelList,\n  navFactory,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  LoadingInline,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nexport const menuActions: KebabAction[] = [\n  AddHealthChecks,\n  Kebab.factory.AddStorage,\n  ...Kebab.getExtensionsActionsForKind(DaemonSetModel),\n  EditHealthChecks,\n  ...Kebab.factory.common,\n];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem\n        label={t('public~Current count')}\n        obj={ds}\n        path=\"status.currentNumberScheduled\"\n      />\n      <DetailsItem\n        label={t('public~Desired count')}\n        obj={ds}\n        path=\"status.desiredNumberScheduled\"\n      />\n      <PodDisruptionBudgetField obj={ds} />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const { podData, loaded } = usePodsWatcher(daemonset);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DaemonSet details')} />\n        {loaded ? (\n          <PodRing\n            key={daemonset.metadata.uid}\n            pods={podData?.pods || []}\n            obj={daemonset}\n            resourceKind={DaemonSetModel}\n            enableScaling={false}\n          />\n        ) : (\n          <LoadingInline />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary\n              resource={daemonset}\n              showPodSelector\n              showNodeSelector\n              showTolerations\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst DaemonSetTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(daemonset);\n  const context = { [resourceKind]: daemonset };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={daemonset.metadata.name}\n          namespace={daemonset.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{currentNumber}} of {{desiredNumber}} pods', {\n            currentNumber: daemonset.status.currentNumberScheduled,\n            desiredNumber: daemonset.status.desiredNumberScheduled,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const DaemonSets: React.FC = (props) => {\n  const { t } = useTranslation();\n  const DaemonSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DaemonSets')}\n      Header={DaemonSetTableHeader}\n      Row={DaemonSetTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = (props) => (\n  <ListPage canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />\n);\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = (props) => (\n  <PodsComponent {...props} showNodes />\n);\n\nexport const DaemonSetsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(detailsPage(DaemonSetDetails)),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        navFactory.pods(DaemonSetPods),\n        navFactory.envEditor(EnvironmentTab),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\ntype DaemonSetDetailsListProps = {\n  ds: DaemonSetKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: DaemonSetKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport './TopologySideBarTabSection.scss';\n\nconst TopologySideBarTabSection: React.FC = ({ children }) => {\n  return <div className=\"ocs-sidebar-tabsection\">{children}</div>;\n};\n\nexport default TopologySideBarTabSection;\n","import * as React from 'react';\nimport {\n  Graph,\n  Node,\n  Model,\n  EdgeModel,\n  NodeModel,\n  EventListener,\n  ModelKind,\n  GraphElement,\n  TopologyQuadrant,\n} from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { ExtPodKind, OverviewItem } from '@console/shared';\n\nexport type Point = [number, number];\n\nexport interface OdcNodeModel extends NodeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport interface OdcEdgeModel extends EdgeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport type TopologyResourcesObject = { [key: string]: K8sResourceKind[] };\n\nexport type TopologyDataResources = WatchK8sResults<TopologyResourcesObject>;\n\nexport type TopologyDataModelGetter = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n) => Promise<Model>;\n\nexport enum TopologyViewType {\n  graph = 'graph',\n  list = 'list',\n}\nexport type ViewComponentFactory = (\n  kind: ModelKind,\n  type: string,\n  view?: TopologyViewType,\n) => React.ComponentType<{ element: GraphElement }> | undefined;\n\nexport type TopologyDataModelDepicted = (resource: K8sResourceKind, model: Model) => boolean;\n\nexport type TopologyDataModelReconciler = (model: Model, resources: TopologyDataResources) => void;\n\nexport type CreateConnection = (\n  source: Node,\n  target: Node | Graph,\n) => Promise<React.ReactElement[] | null>;\n\nexport type CreateConnectionGetter = (\n  createHints: string[],\n  source?: Node,\n  target?: Node,\n) => CreateConnection;\n\nexport enum TopologyDisplayFilterType {\n  show = 'show',\n  expand = 'expand',\n  kind = 'kind',\n}\n\nexport type TopologyDisplayOption = {\n  type: TopologyDisplayFilterType;\n  id: string;\n  label?: string;\n  labelKey?: string;\n  priority: number;\n  value: boolean;\n};\n\nexport type DisplayFilters = TopologyDisplayOption[];\n\n// Applies the filters on the model and returns the ids of filters that were relevant\nexport type TopologyApplyDisplayOptions = (model: Model, filters: DisplayFilters) => string[];\n\nexport type TopologyDecoratorGetter = (\n  element: Node,\n  radius: number,\n  centerX: number,\n  centerY: number,\n) => React.ReactElement;\n\nexport type TopologyDecorator = {\n  id: string;\n  priority: number;\n  quadrant: TopologyQuadrant;\n  decorator: TopologyDecoratorGetter;\n};\n\nexport interface TopologyDataObject<D = {}> {\n  id: string;\n  name: string;\n  type: string;\n  resources: OverviewItem;\n  pods?: ExtPodKind[];\n  data: D;\n  resource: K8sResourceKind | null;\n  groupResources?: OdcNodeModel[];\n}\n\nexport interface TopologyApplicationObject {\n  id: string;\n  name: string;\n  resources: OdcNodeModel[];\n}\n\nexport interface WorkloadData {\n  editURL?: string;\n  vcsURI?: string;\n  vcsRef?: string;\n  builderImage?: string;\n  kind?: string;\n  isKnativeResource?: boolean;\n}\n\nexport type TrafficData = {\n  nodes: KialiNode[];\n  edges: KialiEdge[];\n};\n\nexport type KialiNode = {\n  data: {\n    id: string;\n    nodeType: string;\n    namespace: string;\n    workload: string;\n    app: string;\n    version?: string;\n    destServices?: { [key: string]: any }[];\n    traffic?: { [key: string]: any }[];\n  };\n};\n\nexport type KialiEdge = {\n  data: {\n    id: string;\n    source: string;\n    target: string;\n    traffic: { [key: string]: any };\n  };\n};\n\nexport type GraphData = {\n  namespace: string;\n  createResourceAccess: string[];\n  eventSourceEnabled: boolean;\n  createConnectorExtensions?: CreateConnectionGetter[];\n  decorators?: { [key: string]: TopologyDecorator[] };\n};\n\nexport const SHOW_GROUPING_HINT_EVENT = 'show-regroup-hint';\nexport type ShowGroupingHintEventListener = EventListener<[Node, string]>;\n","import * as React from 'react';\nimport { Decorator as PfDecorator } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\n\nimport './Decorator.scss';\n\ntype DecoratorTypes = {\n  x: number;\n  y: number;\n  radius: number;\n  onClick?(event: React.MouseEvent<SVGGElement, MouseEvent>): void;\n  href?: string;\n  ariaLabel?: string;\n  external?: boolean;\n  circleRef?: React.Ref<SVGCircleElement>;\n};\n\nconst Decorator: React.FunctionComponent<DecoratorTypes> = ({\n  x,\n  y,\n  radius,\n  href,\n  ariaLabel,\n  external,\n  ...rest\n}) => {\n  const decorator = (\n    <PfDecorator x={x} y={y} radius={radius} className=\"odc-decorator\" showBackground {...rest} />\n  );\n\n  if (href) {\n    return external ? (\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      <a\n        className=\"odc-decorator__link\"\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        role=\"button\"\n        aria-label={ariaLabel}\n      >\n        {decorator}\n      </a>\n    ) : (\n      <Link className=\"odc-decorator__link\" to={href} role=\"button\" aria-label={ariaLabel}>\n        {decorator}\n      </Link>\n    );\n  }\n  return decorator;\n};\n\nexport default Decorator;\n","export * from './const';\nexport * from './filter-utils';\nexport * from './useAppliedDisplayFilters';\nexport * from './useSearchFilter';\nexport * from './useDisplayFilters';\nexport * from './useAllowEdgeCreation';\n","import * as React from 'react';\nimport {\n  Edge,\n  WithRemoveConnectorProps,\n  observer,\n  useSelection,\n  WithContextMenuProps,\n  DefaultEdge,\n  EdgeTerminalType,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  NodeStatus,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useAccessReviewAllowed } from '@console/dynamic-plugin-sdk';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../../../utils/topology-utils';\nimport './BaseEdge.scss';\n\ntype BaseEdgeProps = {\n  element: GraphElement;\n  dragging?: boolean;\n  className?: string;\n  animationDuration?: number;\n  startTerminalType?: EdgeTerminalType;\n  startTerminalClass?: string;\n  startTerminalStatus?: NodeStatus;\n  endTerminalType?: EdgeTerminalType;\n  endTerminalClass?: string;\n  endTerminalStatus?: NodeStatus;\n  tag?: string;\n  tagClass?: string;\n  tagStatus?: NodeStatus;\n} & WithRemoveConnectorProps &\n  Partial<WithSourceDragProps> &\n  Partial<WithTargetDragProps> &\n  Partial<WithContextMenuProps>;\n\nconst BaseEdge: React.FC<BaseEdgeProps> = ({\n  className,\n  element,\n  endTerminalType = EdgeTerminalType.directional,\n  onShowRemoveConnector,\n  onHideRemoveConnector,\n  targetDragRef,\n  sourceDragRef,\n  ...rest\n}) => {\n  const resourceObj = getResource((element as Edge).getSource());\n  const resourceModel = resourceObj && modelFor(referenceFor(resourceObj));\n  const [selected, onSelect] = useSelection({ controlled: true });\n\n  const editAccess = useAccessReviewAllowed({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: resourceObj?.metadata.name,\n    namespace: resourceObj?.metadata.namespace,\n  });\n\n  return (\n    <DefaultEdge\n      className={classNames('odc-base-edge', className)}\n      element={element}\n      onShowRemoveConnector={editAccess ? onShowRemoveConnector : undefined}\n      onHideRemoveConnector={editAccess ? onHideRemoveConnector : undefined}\n      targetDragRef={editAccess ? targetDragRef : undefined}\n      sourceDragRef={editAccess ? sourceDragRef : undefined}\n      endTerminalType={endTerminalType}\n      selected={selected}\n      onSelect={onSelect}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(BaseEdge);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  K8sResourceCommon,\n  NetworkAdapterType,\n  PodsAdapterDataType,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { Extension } from '@console/dynamic-plugin-sdk/src/types';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  PodModel,\n} from '@console/internal/models';\nimport {\n  BuildConfigData,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  useBuildConfigsWatcher,\n  useJobsForCronJobWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { getResource } from '../../utils';\n\nexport const getDataFromAdapter = <T extends { resource: K8sResourceCommon }, E extends Extension>(\n  element: GraphElement,\n  [resolvedExtensions, loaded]: [ResolvedExtension<E>[], boolean],\n): T | undefined =>\n  loaded\n    ? resolvedExtensions.reduce<T>((acc, { properties: { adapt } }) => {\n        const values = (adapt as (element: GraphElement) => T)(element);\n        return values ?? acc;\n      }, undefined)\n    : undefined;\n\nconst usePodsAdapterForWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const buildConfigData = useBuildConfigsWatcher(resource);\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n  return React.useMemo(() => ({ pods: podData?.pods, loaded, loadError, buildConfigData }), [\n    buildConfigData,\n    loadError,\n    loaded,\n    podData,\n  ]);\n};\n\nexport const podsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      JobModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: usePodsAdapterForWorkloads };\n};\n\nexport const buildsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<BuildConfigData> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      CronJobModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: useBuildConfigsWatcher };\n};\n\nexport const networkAdapterForWorkloads = (\n  element: GraphElement,\n): NetworkAdapterType | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource };\n};\n\nconst usePodsAdapterForCronJobWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  const {\n    metadata: { namespace },\n  } = resource;\n\n  const [pods, setPods] = React.useState([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      const updatedPods = jobs?.length\n        ? jobs.reduce((acc, res) => {\n            acc.push(...getPodsForResource(res, resources));\n            return acc;\n          }, [])\n        : [];\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [jobs, resources]);\n  return { pods, loaded, loadError };\n};\n\nexport const podsAdapterForCronJobWorkload = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) return undefined;\n  return { resource, provider: usePodsAdapterForCronJobWorkloads };\n};\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { TopologyDisplayFilterType } from '../topology-types';\n\nexport const SHOW_POD_COUNT_FILTER_ID = 'show-pod-count';\nexport const SHOW_LABELS_FILTER_ID = 'show-labels';\nexport const EXPAND_APPLICATION_GROUPS_FILTER_ID = 'expand-app-groups';\nexport const EXPAND_GROUPS_FILTER_ID = 'expand-groups';\n\nexport const DEFAULT_TOPOLOGY_FILTERS = [\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_GROUPS_FILTER_ID,\n    // t('topology~Expand groups')\n    labelKey: 'topology~Expand groups',\n    priority: 1,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_POD_COUNT_FILTER_ID,\n    // t('topology~Pod count')\n    labelKey: 'topology~Pod count',\n    priority: 10,\n    value: false,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_LABELS_FILTER_ID,\n    // t('topology~Labels')\n    labelKey: 'topology~Labels',\n    priority: 900,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_APPLICATION_GROUPS_FILTER_ID,\n    // t('topology~Application groupings')\n    labelKey: 'topology~Application groupings',\n    priority: 10,\n    value: true,\n  },\n];\n\nexport const DEFAULT_SUPPORTED_FILTER_IDS = [SHOW_POD_COUNT_FILTER_ID, SHOW_LABELS_FILTER_ID];\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import { Edge, isNode, Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '@console/rhoas-plugin/src/topology/components/const';\nimport { moveConnectionModal } from '../components/modals/MoveConnectionModal';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING, TYPE_TRAFFIC_CONNECTOR } from '../const';\nimport { removeConnection } from '../utils';\nimport { getResource } from '../utils/topology-utils';\n\n/**\n * @deprecated migrated to use new Action extension, use MoveConnectorAction\n */\nconst moveConnection = (edge: Edge, availableTargets: Node[]) => {\n  const resourceObj = getResource(edge.getSource());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n\n  return {\n    // t('topology~Move connector')\n    labelKey: 'topology~Move connector',\n    callback: () => {\n      moveConnectionModal({ edge, availableTargets });\n    },\n    isDisabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(resourceModel, resourceObj, 'delete'),\n  };\n};\n\nconst getAvailableTargetForEdge = (edge: Edge, nodes: Node[]) => {\n  const currentTargets = edge\n    .getSource()\n    .getSourceEdges()\n    .map((e) => e.getTarget().getId());\n\n  return nodes\n    .filter((n) => {\n      if (n.getId() === edge.getSource().getId()) {\n        return false;\n      }\n      if (n.getId() !== edge.getTarget().getId() && currentTargets.includes(n.getId())) {\n        return false;\n      }\n      if (n.getType() === TYPE_EVENT_SOURCE) {\n        return false;\n      }\n      switch (edge.getType()) {\n        case TYPE_CONNECTS_TO:\n          return n.getType() !== TYPE_KNATIVE_REVISION && n.getType() !== TYPE_KNATIVE_SERVICE;\n        case TYPE_SERVICE_BINDING:\n          return false;\n        case TYPE_EVENT_SOURCE_LINK:\n          return n.getType() === TYPE_KNATIVE_SERVICE || n.getType() === TYPE_EVENT_PUB_SUB;\n        case TYPE_REVISION_TRAFFIC:\n          return false;\n        case TYPE_TRAFFIC_CONNECTOR:\n          return false;\n        case TYPE_KAFKA_CONNECTION_LINK:\n          return n.getType() === TYPE_MANAGED_KAFKA_CONNECTION;\n        default:\n          return true;\n      }\n    })\n    .sort((n1, n2) => n1.getLabel().localeCompare(n2.getLabel()));\n};\n\nexport const MoveConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n\n  const nodes = element\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n  const availableTargets = getAvailableTargetForEdge(element, nodes);\n\n  return {\n    id: 'move-visual-connector',\n    label: i18next.t('topology~Move connector'),\n    cta: () => {\n      moveConnectionModal({ edge: element, availableTargets });\n    },\n    disabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\nexport const DeleteConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n  return {\n    id: 'delete-connector',\n    label: i18next.t('topology~Delete connector'),\n    cta: () => {\n      removeConnection(element);\n    },\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\n/**\n * @deprecated remove this after migrating the Traffic connector side-panel to dynamic extensions\n */\nexport const edgeActions = (edge: Edge, nodes: Node[]): KebabOption[] => {\n  const actions: KebabOption[] = [];\n  const availableTargets = getAvailableTargetForEdge(edge, nodes);\n  actions.push(moveConnection(edge, availableTargets));\n  return actions;\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { editApplicationModal } from '@console/topology/src/components/modals';\n\nexport const getModifyApplicationAction = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  insertBefore?: string | string[],\n): Action => {\n  return {\n    id: 'modify-application',\n    label: i18next.t('topology~Edit application grouping'),\n    insertBefore: insertBefore ?? 'edit-pod-count',\n    cta: () =>\n      editApplicationModal({\n        resourceKind: kind,\n        resource: obj,\n        blocking: true,\n        initialApplication: '',\n      }),\n    accessReview: {\n      verb: 'patch',\n      group: kind.apiGroup,\n      resource: kind.plural,\n      namespace: obj?.metadata?.namespace,\n    },\n  };\n};\n","import {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport {\n  DisplayFilters,\n  TopologyDisplayFilterType,\n  TopologyDisplayOption,\n} from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS, EXPAND_GROUPS_FILTER_ID } from './const';\n\nexport const TOPOLOGY_SEARCH_FILTER_KEY = 'searchQuery';\nexport const TOPOLOGY_LABELS_FILTER_KEY = 'labels';\n\nexport enum NameLabelFilterValues {\n  // t('topology~Name')\n  Name = 'Name',\n  // t('topology~Label')\n  Label = 'Label',\n}\n\nexport const onSearchChange = (searchQuery: string): void => {\n  if (searchQuery.length > 0) {\n    setQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY, searchQuery);\n  } else {\n    removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n  }\n};\n\nexport const clearNameFilter = () => {\n  onSearchChange('');\n};\nexport const clearLabelFilter = () => {\n  removeQueryArgument(TOPOLOGY_LABELS_FILTER_KEY);\n};\n\nexport const clearAll = () => {\n  clearNameFilter();\n  clearLabelFilter();\n};\n\nexport const getSupportedTopologyFilters = (state: RootState): string[] => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedFilters') : DEFAULT_TOPOLOGY_FILTERS.map((f) => f.id);\n};\n\nexport const getSupportedTopologyKinds = (state: RootState): { [key: string]: number } => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedKinds') : {};\n};\n\nexport const getTopologySearchQuery = () =>\n  getQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY) ??\n  getQueryArgument(TOPOLOGY_LABELS_FILTER_KEY) ??\n  '';\n\nexport const getFilterById = (id: string, filters: DisplayFilters): TopologyDisplayOption => {\n  if (!filters) {\n    return null;\n  }\n  return filters.find((f) => f.id === id);\n};\n\nexport const isExpanded = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const groupsExpanded = getFilterById(EXPAND_GROUPS_FILTER_ID, filters)?.value ?? true;\n  if (!groupsExpanded) {\n    return false;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.expand) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const isShown = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.show) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const showKind = (kind: K8sResourceKindReference, filters: DisplayFilters): boolean => {\n  if (!filters || !kind) {\n    return true;\n  }\n  // If no kinds are shown, show all\n  const shownKinds = filters.filter((f) => f.type === TopologyDisplayFilterType.kind && f.value);\n  if (shownKinds.length === 0) {\n    return true;\n  }\n\n  // Return filter value if it exists, otherwise filter it out since there are other set filters\n  return getFilterById(kind, filters)?.value ?? false;\n};\n","export { default as BaseNode } from './BaseNode';\nexport * from './WorkloadNode';\nexport { default as PodSet } from './PodSet';\nexport * from './decorators';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import * as React from 'react';\nimport {\n  Node,\n  ContextSubMenuItem,\n  ContextMenuItem,\n  Graph,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport {\n  Action,\n  GroupedMenuOption,\n  MenuOption,\n  MenuOptionType,\n} from '@console/dynamic-plugin-sdk/src';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getMenuOptionType, orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport ActionMenuItem from '@console/shared/src/components/actions/menu/ActionMenuItem';\nimport { getResource } from '../utils';\n\nexport const createContextMenuItems = (actions: MenuOption[]) => {\n  const sortedOptions = orderExtensionBasedOnInsertBeforeAndAfter(actions);\n  return sortedOptions.map((option: MenuOption) => {\n    const optionType = getMenuOptionType(option);\n    switch (optionType) {\n      case MenuOptionType.SUB_MENU:\n        return (\n          <ContextSubMenuItem label={option.label} key={option.id}>\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </ContextSubMenuItem>\n        );\n      case MenuOptionType.GROUP_MENU:\n        return (\n          <React.Fragment key={option.id}>\n            {option.label && <h1 className=\"pf-v5-c-dropdown__group-title\">{option.label}</h1>}\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </React.Fragment>\n        );\n      default:\n        return (\n          <ActionMenuItem key={option.id} action={option as Action} component={ContextMenuItem} />\n        );\n    }\n  });\n};\n\nexport const graphActionContext = (graph: Graph, connectorSource?: Node) => ({\n  'topology-context-actions': { element: graph, connectorSource },\n});\n\nexport const groupActionContext = (element: Node, connectorSource?: Node) => ({\n  'topology-context-actions': { element, connectorSource },\n});\n\nexport const contextMenuActions = (element: GraphElement) => {\n  const resource = getResource(element);\n  const { csvName } = element.getData()?.data ?? {};\n  return {\n    'topology-actions': element,\n    ...(resource ? { [referenceFor(resource)]: resource } : {}),\n    ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n  };\n};\n","import * as React from 'react';\nimport {\n  BadgeLocation,\n  DEFAULT_LAYER,\n  DefaultNode,\n  Layer,\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  TOP_LAYER,\n  useCombineRefs,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  StatusModifier,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { K8sVerb, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport useHover from '../../../../behavior/useHover';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { getKindStringAndAbbreviation } from './nodeUtils';\n\nimport '../../../svg/SvgResourceIcon.scss';\nimport './BaseNode.scss';\n\ntype BaseNodeProps = {\n  className?: string;\n  innerRadius?: number;\n  icon?: string;\n  kind?: string;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: React.ReactNode;\n  labelIconPadding?: number;\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  children?: React.ReactNode;\n  attachments?: React.ReactNode;\n  element: Node;\n  hoverRef?: (node: Element) => () => void;\n  dragging?: boolean;\n  dropTarget?: boolean;\n  canDrop?: boolean;\n  createConnectorAccessVerb?: K8sVerb;\n  nodeStatus?: NodeStatus;\n  showStatusBackground?: boolean;\n  alertVariant?: NodeStatus;\n} & Partial<WithSelectionProps> &\n  Partial<WithDragNodeProps> &\n  Partial<WithDndDropProps> &\n  Partial<WithContextMenuProps> &\n  Partial<WithCreateConnectorProps>;\n\nconst BaseNode: React.FC<BaseNodeProps> = ({\n  className,\n  innerRadius,\n  icon,\n  kind,\n  element,\n  hoverRef,\n  children,\n  onShowCreateConnector,\n  onContextMenu,\n  contextMenuOpen,\n  createConnectorAccessVerb = 'patch',\n  createConnectorDrag,\n  alertVariant,\n  ...rest\n}) => {\n  const [hoverChange, setHoverChange] = React.useState<boolean>(false);\n  const [hover, internalHoverRef] = useHover(200, 200, [hoverChange]);\n  const nodeHoverRefs = useCombineRefs(internalHoverRef, hoverRef);\n  const { width, height } = element.getDimensions();\n  const cx = width / 2;\n  const cy = height / 2;\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconRadius = innerRadius * 0.9;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: createConnectorAccessVerb,\n    resource: resourceModel?.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  const [filtered] = useSearchFilter(element.getLabel(), resourceObj?.metadata?.labels);\n  const showLabel = useShowLabel(hover || contextMenuOpen);\n  const kindData = kind && getKindStringAndAbbreviation(kind);\n\n  const detailsLevel = element.getController().getGraph().getDetailsLevel();\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const badgeClassName = kindData\n    ? classNames('odc-resource-icon', {\n        [`odc-resource-icon-${kindData.kindStr.toLowerCase()}`]: !kindData.kindColor,\n      })\n    : '';\n  React.useEffect(() => {\n    if (!createConnectorDrag) {\n      setHoverChange((prev) => !prev);\n    }\n  }, [createConnectorDrag]);\n  return (\n    <Layer id={hover || contextMenuOpen ? TOP_LAYER : DEFAULT_LAYER}>\n      <g ref={nodeHoverRefs} data-test-id={element.getLabel()}>\n        <DefaultNode\n          className={classNames(\n            'odc-base-node',\n            className,\n            alertVariant && StatusModifier[alertVariant],\n            {\n              'is-filtered': filtered,\n            },\n          )}\n          truncateLength={RESOURCE_NAME_TRUNCATE_LENGTH}\n          element={element}\n          showLabel={showLabel}\n          scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n          onShowCreateConnector={\n            editAccess && detailsLevel !== ScaleDetailsLevel.low && onShowCreateConnector\n          }\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          badge={kindData?.kindAbbr}\n          badgeColor={kindData?.kindColor}\n          badgeClassName={badgeClassName}\n          showStatusBackground={!showDetails}\n          {...rest}\n        >\n          <g data-test-id=\"base-node-handler\">\n            {icon && showDetails && (\n              <>\n                <circle\n                  fill=\"var(--pf-v5-global--palette--white)\"\n                  cx={cx}\n                  cy={cy}\n                  r={innerRadius + 6}\n                />\n                <image\n                  x={cx - iconRadius}\n                  y={cy - iconRadius}\n                  width={iconRadius * 2}\n                  height={iconRadius * 2}\n                  xlinkHref={icon}\n                />\n              </>\n            )}\n            {showDetails && children}\n          </g>\n        </DefaultNode>\n      </g>\n    </Layer>\n  );\n};\n\nexport default observer(BaseNode);\n","import * as React from 'react';\nimport Decorator from './Decorator';\n\ntype BuildDecoratorBubbleProps = React.ComponentProps<typeof Decorator> & {\n  children: React.ReactNode;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst BuildDecoratorBubble: React.FC<BuildDecoratorBubbleProps> = ({\n  children,\n  radius,\n  x,\n  y,\n  ...otherDecoratorProps\n}) => (\n  <Decorator x={x} y={y} radius={radius} {...otherDecoratorProps}>\n    <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n      <foreignObject width={radius} height={radius} style={{ fontSize: radius }}>\n        {children}\n      </foreignObject>\n    </g>\n  </Decorator>\n);\n\nexport default BuildDecoratorBubble;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport {\n  Node,\n  useSize,\n  useHover,\n  DefaultNode,\n  LabelBadge,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n  useAnchor,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport {\n  truncateMiddle,\n  shouldTruncate,\n  TruncateOptions,\n} from '@console/internal/components/utils';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport { useSearchFilter } from '../../../../filters';\nimport { OdcNodeModel } from '../../../../topology-types';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport GroupNodeAnchor from './GroupNodeAnchor';\nimport ResourceKindsInfo from './ResourceKindsInfo';\n\nimport './GroupNode.scss';\n\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\n\nconst truncateOptions: TruncateOptions = {\n  length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\n\ntype GroupNodeProps = {\n  element: Node;\n  bgClassName: string;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  emptyValue?: React.ReactNode;\n  groupResources?: OdcNodeModel[];\n  children?: React.ReactNode;\n  typeIconClass?: string;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & Partial<WithSelectionProps & WithDndDropProps & WithContextMenuProps & WithDragNodeProps>;\n\nconst GroupNode: React.FC<GroupNodeProps> = ({\n  element,\n  bgClassName,\n  badge,\n  badgeColor,\n  badgeClassName,\n  children,\n  emptyValue,\n  typeIconClass,\n  ...rest\n}) => {\n  const ref = React.useRef();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const [textHover, textHoverRef] = useHover();\n  const [iconSize, iconRef] = useSize([badge]);\n  const iconWidth = iconSize ? iconSize.width : 0;\n  const iconHeight = iconSize ? iconSize.height : 0;\n  const title = element.getLabel();\n  const { groupResources } = element.getData();\n  const [groupSize, groupRef] = useSize([groupResources]);\n  const width = groupSize ? groupSize.width : 0;\n  const height = groupSize ? groupSize.height : 0;\n  useAnchor(\n    React.useCallback((node: Node) => new GroupNodeAnchor(node, width, height, 1.5), [\n      width,\n      height,\n    ]),\n  );\n\n  const getCustomShape = () => () => (\n    <rect\n      className={classNames('odc-group-node__bg', bgClassName)}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      rx=\"5\"\n      ry=\"5\"\n    />\n  );\n\n  return (\n    <DefaultNode\n      element={element}\n      className={classNames('odc-group-node', { 'is-filtered': filtered })}\n      badge={badge}\n      badgeColor={badgeColor}\n      badgeClassName={badgeClassName}\n      showLabel={false}\n      getCustomShape={getCustomShape}\n      {...rest}\n    >\n      <g ref={groupRef}>\n        {typeIconClass && (\n          <SvgCircledIcon\n            className=\"odc-group-node__type-icon\"\n            x={10}\n            y={-10}\n            width={20}\n            height={20}\n            iconClass={typeIconClass}\n          />\n        )}\n        <g ref={groupRef}>\n          <LabelBadge\n            ref={iconRef}\n            x={LEFT_MARGIN}\n            y={TOP_MARGIN - 2}\n            badge={badge}\n            badgeClassName={badgeClassName}\n            badgeColor={badgeColor}\n          />\n          {title && (\n            <g ref={textHoverRef}>\n              <Tooltip\n                content={title}\n                position={TooltipPosition.top}\n                trigger=\"manual\"\n                isVisible={textHover && shouldTruncate(title, truncateOptions)}\n                triggerRef={ref}\n              >\n                <text\n                  ref={ref}\n                  className=\"odc-group-node__title\"\n                  x={LEFT_MARGIN + iconWidth + TEXT_MARGIN}\n                  y={TOP_MARGIN + iconHeight}\n                  textAnchor=\"start\"\n                  dy=\"-0.25em\"\n                >\n                  {truncateMiddle(title, truncateOptions)}\n                </text>\n              </Tooltip>\n            </g>\n          )}\n          {(children || groupResources || emptyValue) && (\n            <g transform={`translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})`}>\n              {(groupResources || emptyValue) && (\n                <ResourceKindsInfo groupResources={groupResources} emptyValue={emptyValue} />\n              )}\n              {children}\n            </g>\n          )}\n        </g>\n      </g>\n    </DefaultNode>\n  );\n};\n\nexport default observer(GroupNode);\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","export * from './componentUtils';\nexport * from './componentFactory';\nexport * from './nodeContextMenu';\nexport * from './nodes';\nexport * from './edges';\nexport * from './groups';\nexport * from './NodeShadows';\n","import * as React from 'react';\nimport {\n  Modifiers,\n  Edge,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n  Graph,\n  DragSourceSpec,\n  DragObjectWithType,\n  DropTargetSpec,\n  DropTargetMonitor,\n  DragSpecOperationType,\n  CREATE_CONNECTOR_DROP_TYPE,\n  CREATE_CONNECTOR_OPERATION,\n  isGraph,\n  withDndDrop,\n  DragEvent,\n  DragOperationWithType,\n} from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { action } from 'mobx';\nimport { errorModal } from '@console/internal/components/modals';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ActionContext } from '@console/shared';\nimport { createConnection, moveNodeToGroup } from '../../../utils';\nimport { isWorkloadRegroupable, graphContextMenu, groupContextMenu } from './nodeContextMenu';\nimport withTopologyContextMenu from './withTopologyContextMenu';\nimport './GraphComponent.scss';\n\nconst MOVE_CONNECTOR_DROP_TYPE = '#moveConnector#';\n\nconst NODE_DRAG_TYPE = '#node#';\nconst EDGE_DRAG_TYPE = '#edge#';\n\nconst MOVE_CONNECTOR_OPERATION = 'moveconnector';\nconst REGROUP_OPERATION = 'regroup';\n\ntype GraphComponentProps = {\n  element: GraphElement;\n};\n\ntype NodeComponentProps = {\n  element: GraphElement;\n};\n\ntype EdgeComponentProps = {\n  element: GraphElement;\n};\n\n/**\n * type: the drag operation type\n * edit: true if the operation performs an edit, used to dim invalid drop targets\n * canDropOnNode: true if the drag object can be dropped on node, used to highlight valid drop nodes\n */\ntype EditableDragOperationType = DragOperationWithType & {\n  edit?: boolean;\n  canDropOnNode?: (operationType: string, dragElement: GraphElement, node: Node) => boolean;\n};\n\ntype DragNodeObject = {\n  element: GraphElement;\n  allowRegroup: boolean;\n};\n\nconst canDropEdgeOnNode = (operation: string, edge: Edge, node: Node): boolean => {\n  if (edge.getSource() === node) {\n    return false;\n  }\n\n  if (edge.getTarget() === node) {\n    return true;\n  }\n\n  return !node.getTargetEdges().find((e) => e.getSource() === edge.getSource());\n};\n\nconst highlightNode = (monitor: DropTargetMonitor, element: Node): boolean => {\n  const operation = monitor.getOperation() as EditableDragOperationType;\n  if (!monitor.isDragging() || !operation) {\n    return false;\n  }\n\n  if (operation.type === CREATE_CONNECTOR_OPERATION) {\n    return (\n      monitor.getItem() !== element &&\n      monitor.getItem().getParent() !== element &&\n      !monitor\n        .getItem()\n        .getSourceEdges()\n        .find((e) => e.getTarget() === element)\n    );\n  }\n\n  return (\n    operation.canDropOnNode && operation.canDropOnNode(operation.type, monitor.getItem(), element)\n  );\n};\n\nexport type NodeDragSourceSpecType = DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  GraphElement,\n  {\n    dragging?: boolean;\n    regrouping?: boolean;\n  },\n  NodeComponentProps & { canEdit?: boolean }\n>;\n\nconst nodeDragSourceSpec = (\n  type: string,\n  allowRegroup: boolean = true,\n  canEdit: boolean = false,\n): NodeDragSourceSpecType => ({\n  item: { type: NODE_DRAG_TYPE },\n  operation: (monitor, props) => {\n    return (canEdit || props.canEdit) &&\n      allowRegroup &&\n      isWorkloadRegroupable(props.element as Node)\n      ? {\n          [Modifiers.SHIFT]: { type: REGROUP_OPERATION, edit: true },\n        }\n      : undefined;\n  },\n  canCancel: (monitor) => monitor.getOperation()?.type === REGROUP_OPERATION,\n  begin: (monitor, props): DragNodeObject => {\n    return {\n      element: props.element,\n      allowRegroup:\n        (canEdit || props.canEdit) && allowRegroup && isWorkloadRegroupable(props.element as Node),\n    };\n  },\n  end: async (dropResult, monitor, props) => {\n    if (!monitor.isCancelled() && monitor.getOperation()?.type === REGROUP_OPERATION) {\n      if (monitor.didDrop() && dropResult && props && props.element.getParent() !== dropResult) {\n        const controller = props.element.getController();\n        await moveNodeToGroup(\n          props.element as Node,\n          isNode(dropResult) ? (dropResult as Node) : null,\n        );\n\n        // perform the optimistic update in an action so as not to render too soon\n        action(() => {\n          // FIXME: check shouldn't be necessary if we handled the async and backend data refresh correctly\n          if (controller.getNodeById(props.element.getId())) {\n            dropResult.appendChild(props.element);\n          }\n        })();\n      } else {\n        // cancel operation\n        return Promise.reject();\n      }\n    }\n    return undefined;\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n    regrouping: monitor.getOperation()?.type === REGROUP_OPERATION,\n  }),\n});\n\nconst noRegroupDragSourceSpec: DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  {\n    dragging?: boolean;\n  },\n  NodeComponentProps\n> = {\n  item: { type: NODE_DRAG_TYPE },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n};\n\nconst nodesEdgeIsDragging = (monitor, props) => {\n  if (!monitor.isDragging()) {\n    return false;\n  }\n  if (monitor.getOperation()?.type === MOVE_CONNECTOR_OPERATION) {\n    return monitor.getItem().getSource() === props.element;\n  }\n  if (monitor.getOperation()?.type === CREATE_CONNECTOR_OPERATION) {\n    return monitor.getItem() === props.element;\n  }\n  return false;\n};\n\nconst nodeDropTargetSpec: DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean },\n  NodeComponentProps\n> = {\n  accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor, props) => {\n    if (isEdge(item)) {\n      return canDropEdgeOnNode(monitor.getOperation()?.type, item as Edge, props.element as Node);\n    }\n    if (!props.element || item === props.element) {\n      return false;\n    }\n    return !(props.element as Node).getTargetEdges().find((e) => e.getSource() === item);\n  },\n  collect: (monitor, props) => ({\n    canDrop: highlightNode(monitor, props.element as Node),\n    dropTarget: monitor.isOver({ shallow: true }),\n    edgeDragging: nodesEdgeIsDragging(monitor, props),\n  }),\n};\n\nconst graphDropTargetSpec: DropTargetSpec<\n  DragNodeObject,\n  any,\n  { dragEditInProgress: boolean },\n  GraphComponentProps\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  hitTest: () => true,\n  canDrop: (item, monitor, props) => {\n    return (\n      monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n      ((monitor.getOperation()?.type === REGROUP_OPERATION &&\n        // FIXME: the hasParent check is necessary due to model updates during async actions\n        item.element.hasParent() &&\n        item.element.getParent() !== props.element) ||\n        monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE)\n    );\n  },\n  collect: (monitor) => {\n    const operation = monitor.getOperation() as EditableDragOperationType;\n    const dragInProgress = monitor.isDragging();\n    const dragEditInProgress =\n      monitor.isDragging() && (operation?.type === CREATE_CONNECTOR_OPERATION || operation?.edit);\n    const dragCreate =\n      dragEditInProgress &&\n      (monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE ||\n        monitor.getItemType() === MOVE_CONNECTOR_DROP_TYPE);\n    return {\n      dragInProgress,\n      dragEditInProgress,\n      dragCreate,\n      hasDropTarget: dragEditInProgress && monitor.hasDropTarget(),\n    };\n  },\n  dropHint: 'create',\n};\n\nconst applicationGroupDropTargetSpec: DropTargetSpec<\n  any,\n  any,\n  { droppable: boolean; dropTarget: boolean; canDrop: boolean },\n  any\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor) =>\n    monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n    (monitor.getOperation()?.type === REGROUP_OPERATION ||\n      monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n  collect: (monitor) => {\n    return {\n      droppable: monitor.isDragging() && monitor.getOperation()?.type === REGROUP_OPERATION,\n      dropTarget: monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }),\n      canDrop:\n        monitor.isDragging() &&\n        (monitor.getOperation()?.type === REGROUP_OPERATION ||\n          monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n      dragRegroupable: monitor.isDragging() && monitor.getItem()?.allowRegroup,\n    };\n  },\n  dropHint: 'create',\n};\n\nconst edgeDragSourceSpec = (\n  type: string,\n  callback: (\n    sourceNode: Node,\n    targetNode: Node,\n    replaceTargetNode?: Node,\n  ) => Promise<K8sResourceKind[] | K8sResourceKind>,\n  failureTitle?: string,\n): DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  { dragging: boolean },\n  EdgeComponentProps\n> => ({\n  item: { type: EDGE_DRAG_TYPE },\n  operation: { type: MOVE_CONNECTOR_OPERATION, edit: true, canDropOnNode: canDropEdgeOnNode },\n  begin: (monitor, props) => {\n    props.element.raise();\n    return props.element;\n  },\n  drag: (event, monitor, props) => {\n    (props.element as Edge).setEndPoint(event.x, event.y);\n  },\n  end: (dropResult, monitor, props) => {\n    const edge = props.element as Edge;\n    edge.setEndPoint();\n    if (\n      monitor.didDrop() &&\n      dropResult &&\n      canDropEdgeOnNode(monitor.getOperation()?.type, edge, dropResult)\n    ) {\n      const title =\n        failureTitle !== undefined ? failureTitle : i18next.t('topology~Error moving connection');\n      callback(edge.getSource(), dropResult, edge.getTarget()).catch((error) => {\n        errorModal({ title, error: error.message, showIcon: true });\n      });\n    }\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n});\n\nconst noDropTargetSpec: DropTargetSpec<GraphElement, any, {}, { element: GraphElement }> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: () => {\n    return false;\n  },\n};\n\nconst withNoDrop = () => {\n  return withDndDrop<any, any, {}, NodeComponentProps>(noDropTargetSpec);\n};\n\nconst withContextMenu = <E extends GraphElement>(actions: (element: E) => ActionContext) => {\n  return withTopologyContextMenu(\n    actions,\n    document.getElementById('popper-container'),\n    'odc-topology-context-menu',\n  );\n};\n\nconst createVisualConnector = (source: Node, target: Node | Graph): React.ReactElement[] | null => {\n  if (isGraph(target)) {\n    return graphContextMenu(target, source);\n  }\n  if (target.isGroup()) {\n    return groupContextMenu(target, source);\n  }\n\n  createConnection(source, target, null).catch((error) => {\n    errorModal({ title: i18next.t('topology~Error creating connection'), error: error.message });\n  });\n\n  return null;\n};\n\nconst createConnectorCallback = () => (\n  source: Node,\n  target: Node | Graph,\n  event: DragEvent,\n  dropHints: string[] | undefined,\n): Promise<React.ReactElement[] | null> => {\n  if (source === target) {\n    return null;\n  }\n  const relationshipProviders = target.getGraph()?.getData()?.relationshipProviderExtensions;\n  const curRelProvider = relationshipProviders?.find(({ uid }) => dropHints.includes(uid));\n  if (curRelProvider) {\n    return curRelProvider.properties.create(source, target);\n  }\n\n  const createConnectors = target.getGraph()?.getData()?.createConnectorExtensions;\n  if (isGraph(target) || !createConnectors) {\n    return Promise.resolve(createVisualConnector(source, target));\n  }\n  const creator = createConnectors.find((getter) => !!getter(dropHints, source, target));\n  if (creator) {\n    return creator(dropHints, source, target)(source, target);\n  }\n  return Promise.resolve(createVisualConnector(source, target));\n};\n\nexport {\n  GraphComponentProps,\n  NodeComponentProps,\n  EdgeComponentProps,\n  EditableDragOperationType,\n  DragNodeObject,\n  nodesEdgeIsDragging,\n  noRegroupDragSourceSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  graphDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  noDropTargetSpec,\n  createConnectorCallback,\n  REGROUP_OPERATION,\n  MOVE_CONNECTOR_DROP_TYPE,\n  NODE_DRAG_TYPE,\n  EDGE_DRAG_TYPE,\n  withNoDrop,\n  withContextMenu,\n  canDropEdgeOnNode,\n  highlightNode,\n};\n","import * as React from 'react';\nimport { Node, Graph, isGraph } from '@patternfly/react-topology';\nimport { ActionServiceProvider } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP } from '@console/topology/src/const';\nimport { createContextMenuItems } from '../../../actions/contextMenuActions';\n\nexport const isWorkloadRegroupable = (node: Node): boolean =>\n  isGraph(node?.getParent()) || node?.getParent().getType() === TYPE_APPLICATION_GROUP;\n\nexport const groupContextMenu = (element: Node, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n\nexport const graphContextMenu = (graph: Graph, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element: graph, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n","export { default as BaseEdge } from './BaseEdge';\nexport { default as AggregateEdge } from './AggregateEdge';\nexport { default as ConnectsTo } from './ConnectsTo';\nexport { default as CreateConnector } from './CreateConnector';\nexport { default as ServiceBinding } from './ServiceBinding';\nexport { default as TrafficConnector } from './TrafficConnector';\n","export { default as GroupNode } from './GroupNode';\nexport { default as GroupNodeAnchor } from './GroupNodeAnchor';\nexport { default as Application } from './Application';\nexport { default as ResourceKindsInfo } from './ResourceKindsInfo';\n","import { useContext } from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { DisplayFilters } from '../topology-types';\nimport { FilterContext } from './FilterProvider';\n\nconst useDisplayFilters = (): DisplayFilters => {\n  const { filters } = useContext(FilterContext);\n  return useDeepCompareMemoize(filters);\n};\n\nexport { useDisplayFilters };\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import { Node, Point, AbstractAnchor, getRectAnchorPoint } from '@patternfly/react-topology';\n\nclass GroupNodeAnchor extends AbstractAnchor<Node> {\n  protected readonly width: number;\n\n  protected readonly height: number;\n\n  constructor(owner: Node, width: number, height: number, offset: number = 0) {\n    super(owner, offset);\n    this.width = width;\n    this.height = height;\n  }\n\n  getLocation(reference: Point): Point {\n    const center = new Point(\n      this.owner.getPosition().x + this.width / 2,\n      this.owner.getPosition().y + this.height / 2,\n    );\n\n    const offset2x = this.offset * 2;\n    return getRectAnchorPoint(center, this.width + offset2x, this.height + offset2x, reference);\n  }\n}\n\nexport default GroupNodeAnchor;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { modelFor, pluralizeKind, referenceForModel } from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../../../../topology-types';\n\nimport './ResourceKindsInfo.scss';\n\nexport const RESOURCE_INFO_PADDING = 32;\nexport const RESOURCE_KIND_ROW_WIDTH = 250;\nexport const RESOURCE_KIND_ROW_HEIGHT = 29;\n\ntype ResourceKindsInfoProps = {\n  groupResources: OdcNodeModel[];\n  emptyValue?: React.ReactNode;\n};\n\nconst ResourceKindsInfo: React.FC<ResourceKindsInfoProps> = ({ groupResources, emptyValue }) => {\n  const resourcesData = {};\n  _.forEach(groupResources, (node: OdcNodeModel) => {\n    if (!node) {\n      return;\n    }\n    const kind = node.resourceKind || node.resource?.kind;\n    resourcesData[kind] = [...(resourcesData[kind] ? resourcesData[kind] : []), node.resource];\n  });\n  const resourceTypes = _.keys(resourcesData);\n\n  if (!resourceTypes.length) {\n    return (\n      <foreignObject\n        width={RESOURCE_KIND_ROW_WIDTH}\n        height={RESOURCE_INFO_PADDING + RESOURCE_KIND_ROW_HEIGHT}\n      >\n        <div className=\"odc-resource-kinds-info\">{emptyValue}</div>\n      </foreignObject>\n    );\n  }\n\n  return (\n    <foreignObject\n      width={RESOURCE_KIND_ROW_WIDTH}\n      height={RESOURCE_INFO_PADDING + resourceTypes.length * RESOURCE_KIND_ROW_HEIGHT}\n    >\n      <div className=\"odc-resource-kinds-info\">\n        <table className=\"odc-resource-kinds-info__table\">\n          <tbody className=\"odc-resource-kinds-info__body\">\n            {resourceTypes.map((key) => {\n              const kindObj = modelFor(key);\n              let kind;\n              let label;\n              if (kindObj) {\n                kind = kindObj.crd ? referenceForModel(kindObj) : kindObj.kind;\n                label = resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label;\n              } else {\n                kind = key;\n                label = resourcesData[key].length > 1 ? pluralizeKind(key) : _.startCase(key);\n              }\n              return (\n                <tr key={key} className=\"odc-resource-kinds-info__row\">\n                  <td className=\"odc-resource-kinds-info__count\">{resourcesData[key].length}</td>\n                  <td className=\"odc-resource-kinds-info__resource-icon\">\n                    <ResourceIcon kind={kind} />\n                  </td>\n                  <td className=\"odc-resource-kinds-info__kind\">{label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </foreignObject>\n  );\n};\n\nexport default ResourceKindsInfo;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RevisionModel } from '@console/knative-plugin/src/models';\nimport {\n  PodRCData,\n  PodStatus,\n  calculateRadius,\n  getPodData,\n  podDataInProgress,\n  usePodRingLabel,\n  useRelatedHPA,\n} from '@console/shared';\n\ninterface PodSetProps {\n  size: number;\n  data: PodRCData;\n  showPodCount?: boolean;\n  x?: number;\n  y?: number;\n}\n\ninterface InnerPodStatusRadius {\n  innerPodStatusOuterRadius: number;\n  innerPodStatusInnerRadius: number;\n}\n\nconst calculateInnerPodStatusRadius = (\n  outerPodStatusInnerRadius: number,\n  outerPodStatusWidth: number,\n): InnerPodStatusRadius => {\n  const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n  const spaceBwOuterAndInnerPodStatus = 3;\n  const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n  const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n\n  return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\n\nexport const podSetInnerRadius = (size: number, data?: PodRCData) => {\n  const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  let radius = podStatusInnerRadius;\n\n  if (data && podDataInProgress(data.obj, data.current, data.isRollingOut)) {\n    const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n      radius,\n      podStatusStrokeWidth,\n    );\n    radius = innerPodStatusInnerRadius;\n  }\n\n  const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n\n  return radius - innerStrokeWidth - podStatusInset;\n};\n\nconst PodSet: React.FC<PodSetProps> = React.memo(function PodSet({\n  size,\n  data,\n  x = 0,\n  y = 0,\n  showPodCount,\n}) {\n  const { t } = useTranslation();\n  const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(\n    size,\n  );\n  const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n    podStatusInnerRadius,\n    podStatusStrokeWidth,\n  );\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(data);\n\n  const [hpa] = useRelatedHPA(\n    data.obj?.apiVersion,\n    data.obj?.kind,\n    data.obj?.metadata?.name,\n    data.obj?.metadata?.namespace,\n  );\n  const hpaControlledScaling = !!hpa;\n\n  const obj = data.current?.obj || data.obj;\n  const ownerKind = RevisionModel.kind === data.obj?.kind ? data.obj.kind : obj.kind;\n  const { title, subTitle, titleComponent } = usePodRingLabel(\n    obj,\n    ownerKind,\n    data?.pods,\n    hpaControlledScaling,\n    t,\n    hpa,\n  );\n  return (\n    <>\n      <PodStatus\n        key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n        x={x - size / 2}\n        y={y - size / 2}\n        innerRadius={podStatusInnerRadius}\n        outerRadius={podStatusOuterRadius}\n        data={completedDeploymentData}\n        size={size}\n        subTitle={showPodCount ? subTitle : undefined}\n        title={showPodCount ? title : undefined}\n        titleComponent={showPodCount ? titleComponent : undefined}\n      />\n      {inProgressDeploymentData && (\n        <PodStatus\n          x={x - size / 2}\n          y={y - size / 2}\n          innerRadius={innerPodStatusInnerRadius}\n          outerRadius={innerPodStatusOuterRadius}\n          data={inProgressDeploymentData}\n          size={size}\n        />\n      )}\n    </>\n  );\n});\n\nexport default PodSet;\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import { BaseEdge } from '@patternfly/react-topology';\nimport { observable, makeObservable } from 'mobx';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { OdcEdgeModel } from '../topology-types';\n\nclass OdcBaseEdge extends BaseEdge {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind;\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcEdgeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseEdge;\n","export * from './components';\nexport { default as Topology } from './Topology';\n","import * as React from 'react';\nimport { useUserSettingsCompatibility } from '@console/shared';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from '../redux/const';\nimport { DisplayFilters } from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS } from './const';\n\nconst TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY = `devconsole.topology.filters`;\n\nconst getTopologyFilters = (appliedFilters: AppliedFilters) => {\n  const filters = [...DEFAULT_TOPOLOGY_FILTERS];\n  filters.forEach((filter) => {\n    if (appliedFilters[filter.id] !== undefined) {\n      filter.value = appliedFilters[filter.id];\n    }\n  });\n\n  return filters;\n};\n\nconst getAppliedFilters = (filters: DisplayFilters): { [id: string]: boolean } => {\n  if (!filters?.length) {\n    return {};\n  }\n\n  return filters.reduce((acc, filter) => {\n    acc[filter.id] = filter.value;\n    return acc;\n  }, {});\n};\n\ntype AppliedFilters = { [filterKey: string]: boolean };\ntype SetTopologyFilters = (filters: DisplayFilters) => void;\n\nconst useFilterContextValues = (): [\n  DisplayFilters,\n  AppliedFilters,\n  boolean,\n  SetTopologyFilters,\n] => {\n  const [appliedFilters, setAppliedFilters, appliedFiltersLoaded] = useUserSettingsCompatibility(\n    TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY,\n    TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY,\n    getAppliedFilters(DEFAULT_TOPOLOGY_FILTERS),\n  );\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const [filters, setFilters] = React.useState<DisplayFilters>([]);\n\n  React.useEffect(() => {\n    if (appliedFiltersLoaded && !filtersLoaded) {\n      setFilters(getTopologyFilters(appliedFilters));\n      setFiltersLoaded(true);\n    }\n  }, [appliedFilters, appliedFiltersLoaded, filtersLoaded]);\n\n  const setTopologyFilters = React.useCallback(\n    (displayFilters: DisplayFilters) => {\n      setFilters(displayFilters);\n      setAppliedFilters(getAppliedFilters(displayFilters));\n    },\n    [setAppliedFilters],\n  );\n\n  return [filters, appliedFilters, appliedFilters && filtersLoaded, setTopologyFilters];\n};\n\ntype FilterContextType = {\n  filters?: DisplayFilters;\n  appliedFilters?: AppliedFilters;\n  setTopologyFilters?: SetTopologyFilters;\n};\n\nexport const FilterContext = React.createContext<FilterContextType>({});\n\nexport const FilterProvider: React.FC = ({ children }) => {\n  const [filters, appliedFilters, loaded, setTopologyFilters] = useFilterContextValues();\n  return (\n    <FilterContext.Provider value={{ filters, appliedFilters, setTopologyFilters }}>\n      {loaded ? children : null}\n    </FilterContext.Provider>\n  );\n};\n","import { IBuild as IBuildV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/Build';\nimport { IBuildRun as IBuildRunV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/ClusterBuildStrategy';\nimport { IBuild as IBuildV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/Build';\nimport { IBuildRun as IBuildRunV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/ClusterBuildStrategy';\nimport { K8sResourceCondition } from '@console/internal/module/k8s';\n\n// Add missing latestBuild to Build\nexport type Build =\n  | (IBuildV1Alpha1 & { latestBuild?: BuildRun })\n  | (IBuildV1Beta1 & { latestBuild?: BuildRun });\n\nexport type BuildSpec = IBuildV1Alpha1['spec'] & IBuildV1Beta1['spec'];\n\nexport type BuildStatus = IBuildV1Alpha1['status'] & IBuildV1Beta1['status'];\n\nexport type ClusterBuildStrategyKind = IClusterBuildStrategyV1Alpha1 | IClusterBuildStrategyV1Beta1;\n\nexport type BuildStrategyKind = IBuildStrategyV1Alpha1 | IBuildStrategyV1Beta1;\n\n// Make status.conditions compatible with @console/internal/components/conditions props\nexport type BuildRun =\n  | (IBuildRunV1Alpha1 & {\n      status?: { conditions?: K8sResourceCondition[]; latestTaskRunRef?: string };\n    })\n  | (IBuildRunV1Beta1 & {\n      status?: { conditions?: K8sResourceCondition[]; taskRunName?: string };\n    });\n\n// The enum values need to match the dynamic-plugin `Status` `status` prop.\n// A translation (title) is added in the BuildRunStatus component.\nexport enum ComputedBuildRunStatus {\n  PENDING = 'Pending',\n  RUNNING = 'Running',\n  SUCCEEDED = 'Succeeded',\n  FAILED = 'Failed',\n  UNKNOWN = 'Unknown',\n}\n\n/** WARNING: The enum values corresponds to the `metadata.name` of the ClusterBuildStrategy CRs */\nexport enum ClusterBuildStrategy {\n  BUILDAH = 'buildah',\n  S2I = 'source-to-image',\n  UNKNOWN = 'unknown',\n}\n\nexport const ReadableClusterBuildStrategies: Record<ClusterBuildStrategy, string> = {\n  // t('shipwright-plugin~Buildah')\n  [ClusterBuildStrategy.BUILDAH]: `shipwright-plugin~Buildah`,\n  // t('shipwright-plugin~Source-to-Image')\n  [ClusterBuildStrategy.S2I]: `shipwright-plugin~Source-to-Image`,\n  [ClusterBuildStrategy.UNKNOWN]: `shipwright-plugin~Unknown`,\n};\n","export * from './edgeActions';\nexport * from './nodeActions';\nexport * from './modify-application';\nexport * from './contextMenuActions';\nexport * from './provider';\n","import { ScaleDetailsLevel, useVisualizationController } from '@patternfly/react-topology';\nimport { SHOW_LABELS_FILTER_ID } from './const';\nimport { getFilterById } from './filter-utils';\nimport { useDisplayFilters } from './useDisplayFilters';\n\nconst useShowLabel = (hover: boolean): boolean => {\n  const displayFilters = useDisplayFilters();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const showLabelsFilter = getFilterById(SHOW_LABELS_FILTER_ID, displayFilters);\n\n  return hover || (detailsLevel === ScaleDetailsLevel.high && showLabelsFilter?.value);\n};\n\nexport { useShowLabel };\n","import { get } from 'lodash';\nimport { kindToAbbr, modelFor } from '@console/internal/module/k8s';\n\nexport const getKindStringAndAbbreviation = (\n  kind: string,\n): { kindStr: string; kindAbbr: string; kindColor: string } => {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DetailsItem, ResourceSummary, Timestamp } from '@console/internal/components/utils';\nimport { CronJobModel } from '@console/internal/models';\nimport { CronJobKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype CronJobSideBarDetailsProps = {\n  cronjob: CronJobKind;\n};\n\nconst CronJobSideBarDetails: React.FC<CronJobSideBarDetailsProps> = ({ cronjob }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={cronjob.metadata.uid} obj={cronjob} path=\"\" />\n      </div>\n      <ResourceSummary resource={cronjob} showPodSelector>\n        <DetailsItem label={t('topology~Schedule')} obj={cronjob} path=\"spec.schedule\" />\n        <DetailsItem\n          label={t('topology~Concurrency policy')}\n          obj={cronjob}\n          path=\"spec.concurrencyPolicy\"\n        />\n        <DetailsItem\n          label={t('topology~Starting deadline seconds')}\n          obj={cronjob}\n          path=\"spec.startingDeadlineSeconds\"\n        >\n          {cronjob.spec.startingDeadlineSeconds\n            ? t('topology~second', { count: cronjob.spec.startingDeadlineSeconds })\n            : t('topology~Not configured')}\n        </DetailsItem>\n        <DetailsItem\n          label={t('topology~Last schedule time')}\n          obj={cronjob}\n          path=\"status.lastScheduleTime\"\n        >\n          <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useCronJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<CronJobKind>(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <CronJobSideBarDetails cronjob={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DaemonSetDetailsList } from '@console/internal/components/daemon-set';\nimport { ResourceSummary, StatusBox } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { DaemonSetKind } from '@console/internal/module/k8s';\nimport { PodRing, usePodsWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\n\ntype DaemonSetOverviewDetailsProps = {\n  ds: DaemonSetKind;\n};\n\nconst DaemonSetSideBarDetails: React.FC<DaemonSetOverviewDetailsProps> = ({ ds }) => {\n  const { namespace } = ds.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(ds, 'DaemonSet', namespace);\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRing\n            pods={podData?.pods ?? []}\n            resourceKind={DaemonSetModel}\n            obj={ds}\n            enableScaling={false}\n          />\n        </StatusBox>\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={ds} showPodSelector showNodeSelector showTolerations />\n      </div>\n      <div className=\"resource-overview__details\">\n        <DaemonSetDetailsList ds={ds} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDaemonSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DaemonSetKind>(element);\n  if (!resource || resource.kind !== DaemonSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DaemonSetSideBarDetails ds={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentConfigDetailsList } from '@console/internal/components/deployment-config';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentConfigSideBarDetailsProps = {\n  dc: K8sResourceKind;\n};\n\nconst DeploymentConfigSideBarDetails: React.FC<DeploymentConfigSideBarDetailsProps> = ({ dc }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {dc.status.availableReplicas === dc.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentConfigDetailsList dc={dc} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentConfigSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== DeploymentConfigModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentConfigSideBarDetails dc={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentDetailsList } from '@console/internal/components/deployment';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentModel } from '@console/internal/models';\nimport { DeploymentKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentSideBarDetailsProps = {\n  deployment: DeploymentKind;\n};\n\nconst DeploymentSideBarDetails: React.FC<DeploymentSideBarDetailsProps> = ({ deployment: d }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {d.spec.paused && <WorkloadPausedAlert obj={d} model={DeploymentModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={d.metadata.uid} obj={d} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={d} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {d.status.availableReplicas === d.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentDetailsList deployment={d} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DeploymentKind>(element);\n  if (!resource || resource.kind !== DeploymentModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentSideBarDetails deployment={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DetailsItem,\n  ResourceSummary,\n  StatusBox,\n  pluralize,\n} from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport { JobKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype JobSideBarDetailsProps = {\n  job: JobKind;\n};\n\nconst JobSideBarDetails: React.FC<JobSideBarDetailsProps> = ({ job }) => {\n  const { namespace } = job.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRingSet key={job.metadata.uid} obj={job} path=\"\" />\n        </StatusBox>\n      </div>\n      <ResourceSummary resource={job} showPodSelector>\n        <DetailsItem label={t('topology~Desired completions')} obj={job} path=\"spec.completions\" />\n        <DetailsItem label={t('topology~Parallelism')} obj={job} path=\"spec.parallelism\" />\n        <DetailsItem\n          label={t('topology~Active deadline seconds')}\n          obj={job}\n          path=\"spec.activeDeadlineSeconds\"\n        >\n          {job.spec?.activeDeadlineSeconds\n            ? pluralize(job.spec.activeDeadlineSeconds, 'second')\n            : t('topology~Not configured')}\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<JobKind>(element);\n  if (!resource || resource.kind !== JobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobSideBarDetails job={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  isPodAdapter,\n  PodsAdapterDataType,\n  PodAdapter,\n  useResolvedExtensions,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { PodsOverviewContent } from '@console/shared/src/components/pod/PodsOverview';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst PodsTabSection: React.FC<{\n  id: string;\n  podAdapter: AdapterDataType<PodsAdapterDataType<PodKind>>;\n  podAdapterExtensionResolved: boolean;\n}> = ({ id, podAdapter, podAdapterExtensionResolved }) => {\n  const [{ data: podsData, loaded: podsDataLoaded }, setPodData] = React.useState<{\n    data?: PodsAdapterDataType<PodKind>;\n    loaded: boolean;\n  }>({ loaded: false });\n\n  const handleAdapterResolved = React.useCallback(\n    (data) => {\n      if (podAdapter?.resource?.kind === 'CronJob') {\n        // Fixes the issue of Topology page crashing.\n        setTimeout(() => setPodData({ data, loaded: true }), 3000);\n      } else {\n        setPodData({ data, loaded: true });\n      }\n    },\n    [podAdapter],\n  );\n\n  return podAdapter ? (\n    <TopologySideBarTabSection>\n      {podAdapterExtensionResolved && (\n        <ResolveAdapter<PodsAdapterDataType<PodKind>>\n          key={id}\n          resource={podAdapter.resource}\n          data={podAdapter.data}\n          useAdapterHook={podAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {podsDataLoaded && podsData.loaded && !podsData.loadError && (\n        <PodsOverviewContent obj={podAdapter.resource} {...podsData} />\n      )}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const usePodsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [podAdapterExtension, podAdapterExtensionResolved] = useResolvedExtensions<PodAdapter>(\n    isPodAdapter,\n  );\n  const podAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<PodsAdapterDataType<PodKind>>, PodAdapter>(element, [\n        podAdapterExtension,\n        podAdapterExtensionResolved,\n      ]),\n    [element, podAdapterExtension, podAdapterExtensionResolved],\n  );\n  if (!podAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <PodsTabSection\n      id={element.getId()}\n      podAdapter={podAdapter}\n      podAdapterExtensionResolved={podAdapterExtensionResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\ntype ResolveAdapterProps<D, T> = {\n  resource: K8sResourceCommon;\n  data?: T;\n  useAdapterHook: (resource: K8sResourceCommon, data: T) => D;\n  onAdapterDataResolved: (data: D) => void;\n};\n\nconst ResolveAdapter = <D extends {}, T = {}>({\n  resource,\n  data: customData,\n  useAdapterHook,\n  onAdapterDataResolved,\n}: ResolveAdapterProps<D, T>) => {\n  const data = useAdapterHook(resource, customData);\n\n  React.useEffect(() => {\n    if (data) {\n      onAdapterDataResolved(data);\n    }\n    // We do not want to run the effect every time onAdapterDataResolved changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return null;\n};\n\nexport default ResolveAdapter;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { StatefulSetModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype StatefulSetSideBarDetailsProps = {\n  ss: K8sResourceKind;\n};\n\nconst StatefulSetSideBarDetails: React.FC<StatefulSetSideBarDetailsProps> = ({ ss }) => (\n  <div className=\"overview__sidebar-pane-body resource-overview__body\">\n    <div className=\"resource-overview__pod-counts\">\n      <PodRingSet key={ss.metadata.uid} obj={ss} path=\"/spec/replicas\" />\n    </div>\n    <ResourceSummary resource={ss} showPodSelector showNodeSelector showTolerations />\n  </div>\n);\n\nexport const useStatefulSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== StatefulSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <StatefulSetSideBarDetails ss={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../utils';\n\nexport const getWorkloadResourceLink = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource) {\n    return null;\n  }\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  BuildAdapter,\n  isBuildAdapter,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { BuildConfigData } from '@console/shared';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { BuildOverview } from './BuildOverview';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst BuildTabSection: React.FC<{\n  id: string;\n  buildAdapter: AdapterDataType<BuildConfigData>;\n  extensionsResolved: boolean;\n}> = ({ id, buildAdapter, extensionsResolved }) => {\n  const [\n    { data: buildConfigs, loaded: buildConfigsDataLoaded },\n    setBuildConfigsData,\n  ] = React.useState<{\n    data?: BuildConfigData;\n    loaded: boolean;\n  }>({ loaded: false });\n  const handleAdapterResolved = React.useCallback((data) => {\n    setBuildConfigsData({ data, loaded: true });\n  }, []);\n\n  return buildAdapter ? (\n    <TopologySideBarTabSection>\n      {extensionsResolved && (\n        <ResolveAdapter<BuildConfigData>\n          key={id}\n          resource={buildAdapter.resource}\n          useAdapterHook={buildAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {buildConfigsDataLoaded && <BuildOverview buildConfigs={buildConfigs.buildConfigs} />}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useBuildsSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [buildAdapterExtensions, extensionsResolved] = useResolvedExtensions<BuildAdapter>(\n    isBuildAdapter,\n  );\n  const buildAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<BuildConfigData>, BuildAdapter>(element, [\n        buildAdapterExtensions,\n        extensionsResolved,\n      ]),\n    [buildAdapterExtensions, element, extensionsResolved],\n  );\n  if (!buildAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <BuildTabSection\n      id={element.getId()}\n      buildAdapter={buildAdapter}\n      extensionsResolved={extensionsResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  isNetworkAdapter,\n  useResolvedExtensions,\n  NetworkAdapter,\n  K8sResourceCommon,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { NetworkingOverview } from './NetworkingOverview';\nimport { getDataFromAdapter } from './utils';\n\nconst NetworkTabSection: React.FC<{\n  networkAdapter: {\n    resource: K8sResourceCommon;\n  };\n}> = ({ networkAdapter }) => {\n  return networkAdapter ? (\n    <TopologySideBarTabSection>\n      <NetworkingOverview obj={networkAdapter.resource} />\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useNetworkingSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [networkAdapterExtensions, extensionsLoaded] = useResolvedExtensions<NetworkAdapter>(\n    isNetworkAdapter,\n  );\n  const networkAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<{ resource: K8sResourceCommon }, NetworkAdapter>(element, [\n        networkAdapterExtensions,\n        extensionsLoaded,\n      ]),\n    [element, extensionsLoaded, networkAdapterExtensions],\n  );\n  if (!networkAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = <NetworkTabSection networkAdapter={networkAdapter} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { CronJobModel } from '@console/internal/models';\nimport { useJobsForCronJobWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { JobsOverview } from './JobsOverview';\n\nconst JobsTabSection: React.FC<{ resource: K8sResourceCommon }> = ({ resource }) => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  return (\n    <TopologySideBarTabSection>\n      <JobsOverview obj={resource} jobs={jobs} />\n    </TopologySideBarTabSection>\n  );\n};\n\nexport const useJobsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobsTabSection resource={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { PodDetailsList, PodResourceSummary } from '@console/internal/components/pod';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype PodSideBarDetailsProps = {\n  pod: PodKind;\n};\n\nconst PodSideBarDetails: React.FC<PodSideBarDetailsProps> = ({ pod }) => {\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={pod.metadata.uid} obj={pod} path=\"\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <PodResourceSummary pod={pod} />\n      </div>\n      <div className=\"resource-overview__details\">\n        <PodDetailsList pod={pod} />\n      </div>\n    </div>\n  );\n};\n\nexport const usePodSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<PodKind>(element);\n  if (!resource || resource.kind !== PodModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <PodSideBarDetails pod={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { CommonActionFactory } from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { Action, DetailsResourceAlertContent, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceCondition,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnativeServiceModel } from '@console/knative-plugin';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getResource } from '../../utils';\n\nconst addHealthChecksRefs = [\n  referenceForModel(DeploymentConfigModel),\n  referenceForModel(DeploymentModel),\n  referenceForModel(DaemonSetModel),\n  referenceForModel(StatefulSetModel),\n  referenceForModel(KnativeServiceModel),\n];\n\nexport const useHealthChecksAlert = (element: GraphElement): DetailsResourceAlertContent | null => {\n  const resource = getResource(element);\n  const kind = resource?.kind;\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n  const { t } = useTranslation();\n  const kindForCRDResource = resource ? referenceFor(resource) : undefined;\n  const resourceModel = kindForCRDResource ? modelFor(kindForCRDResource) : undefined;\n  const resourceKind = resourceModel?.crd ? kindForCRDResource : kind;\n\n  const [canAddHealthChecks, canAddHealthChecksLoading] = useAccessReview({\n    group: resourceModel?.apiGroup,\n    resource: resourceModel?.plural,\n    namespace,\n    name,\n    verb: 'update',\n  });\n\n  if (!resource || !addHealthChecksRefs.includes(referenceFor(resource))) {\n    return null;\n  }\n\n  const containers = resource?.spec?.template?.spec?.containers;\n  const containersName = containers?.map((container) => container.name);\n  const healthCheckAdded = containers?.every(\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n\n  const showAlert = !healthCheckAdded && canAddHealthChecks && !canAddHealthChecksLoading;\n\n  const addHealthChecksLink = `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containersName[0]}/health-checks`;\n\n  const alertMessage =\n    containersName?.length > 1\n      ? t(\n          'topology~Not all Containers have health checks to ensure your application is running correctly.',\n        )\n      : t(\n          'topology~Container {{containersName}} does not have health checks to ensure your application is running correctly.',\n          { containersName },\n        );\n\n  return showAlert\n    ? {\n        title: t('topology~Health checks'),\n        dismissible: true,\n        content: (\n          <>\n            {alertMessage} <Link to={addHealthChecksLink}>{t('topology~Add health checks')}</Link>\n          </>\n        ),\n        variant: 'custom',\n      }\n    : null;\n};\n\nexport const useResourceQuotaAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const resource = getResource(element);\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n\n  const [canUseAlertAction, canUseAlertActionLoading] = useAccessReview({\n    group: DeploymentModel.apiGroup,\n    resource: DeploymentModel.plural,\n    namespace,\n    name,\n    verb: 'patch',\n  });\n\n  if (!resource || referenceForModel(DeploymentModel) !== referenceFor(resource)) return null;\n\n  const statusConditions: K8sResourceCondition[] = resource.status?.conditions ?? [];\n  const replicaFailure = statusConditions.find((condition) => condition.type === 'ReplicaFailure');\n  const replicaFailureMsg: string = replicaFailure?.message ?? '';\n  const resourceQuotaRequested = replicaFailureMsg.split(':')?.[3] ?? '';\n\n  let alertAction: Action;\n  if (resourceQuotaRequested.includes('limits')) {\n    alertAction = DeploymentActionFactory.EditResourceLimits(DeploymentModel, resource);\n  } else if (resourceQuotaRequested.includes('pods')) {\n    alertAction = CommonActionFactory.ModifyCount(DeploymentModel, resource);\n  }\n\n  const showAlertActionLink = alertAction && canUseAlertAction && !canUseAlertActionLoading;\n\n  const alertActionCta = alertAction?.cta as () => void;\n\n  const onAlertActionClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Alert Action Link Clicked');\n    alertActionCta();\n  };\n\n  const alertActionLink = showAlertActionLink ? (\n    <AlertActionLink onClick={onAlertActionClick}>{alertAction.label as string}</AlertActionLink>\n  ) : undefined;\n\n  return replicaFailure\n    ? {\n        title: t('topology~Resource Quotas'),\n        dismissible: true,\n        content: replicaFailureMsg,\n        actionLinks: alertActionLink,\n        variant: 'warning',\n      }\n    : null;\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\n\ntype VPATabSectionProps = {\n  vpas: K8sResourceCommon[];\n};\n\nconst VPATabSection: React.FC<VPATabSectionProps> = ({ vpas }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~VerticalPodAutoscalers')} />\n      <ul className=\"list-group\">\n        {vpas.map((vpa: K8sResourceCommon) => (\n          <li key={vpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              groupVersionKind={getGroupVersionKindForResource(vpa)}\n              name={vpa.metadata.name}\n              namespace={vpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport const useVpaSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [vpas] = useK8sWatchResource<K8sResourceCommon[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    isList: true,\n    namespaced: true,\n  });\n\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n\n  const resource = getResource(element);\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, resource);\n\n  const section =\n    verticalPodAutoscalers.length > 0 ? (\n      <TopologySideBarTabSection>\n        <VPATabSection vpas={verticalPodAutoscalers} />\n      </TopologySideBarTabSection>\n    ) : undefined;\n  return [section, true, undefined];\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { BuildModel } from '@console/internal/models';\nimport { Status, useBuildConfigsWatcher } from '@console/shared';\nimport { getResource } from '../../../../../utils';\nimport BuildDecoratorBubble from './BuildDecoratorBubble';\n\ninterface BuildDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst BuildDecorator: React.FC<BuildDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const build = buildConfigs?.[0]?.builds?.[0];\n\n  if (!build) {\n    return null;\n  }\n\n  const label = t('topology~Build {{status}}', { status: build.status?.phase });\n\n  const link = `${resourcePathFromModel(\n    BuildModel,\n    build.metadata.name,\n    build.metadata.namespace,\n  )}/logs`;\n\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={label} href={link}>\n          <Status status={build.status.phase} iconOnly noTooltip />\n        </BuildDecoratorBubble>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default BuildDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { getCheDecoratorData, getEditURL } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst EditDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const { cheURL, cheIconURL } = getCheDecoratorData(consoleLinks);\n  const workloadData = element.getData().data;\n  const { editURL, vcsURI, vcsRef, contextDir } = workloadData;\n  const cheEnabled = !!cheURL;\n  const editUrl = editURL || getEditURL(vcsURI, vcsRef, cheURL, contextDir);\n  const repoIcon = routeDecoratorIcon(editUrl, radius, t, cheEnabled, cheIconURL);\n\n  if (!repoIcon) {\n    return null;\n  }\n  const label = t('topology~Edit source code');\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={editUrl} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>{repoIcon}</g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default EditDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node, SELECTION_EVENT } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getSeverityAlertType,\n  getFiringAlerts,\n  AlertSeverityIcon,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport Decorator from './Decorator';\n\ntype DispatchProps = {\n  showMonitoringOverview?: () => void;\n};\n\nconst dispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  showMonitoringOverview: () => dispatch(selectOverviewDetailsTab('Observe')),\n});\n\ninterface MonitoringAlertsDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\ntype MonitoringAlertsDecoratorType = MonitoringAlertsDecoratorProps & DispatchProps;\n\nconst MonitoringAlertsDecorator: React.FC<MonitoringAlertsDecoratorType> = ({\n  element,\n  radius,\n  x,\n  y,\n  showMonitoringOverview,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const workloadData = element.getData().data;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n\n  const showSidebar = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    showMonitoringOverview();\n    element.getGraph().getController().fireEvent(SELECTION_EVENT, [element.getId()]);\n  };\n\n  if (shouldHideMonitoringAlertDecorator(severityAlertType)) return null;\n\n  const label = t('topology~Monitoring alert');\n  return (\n    <Tooltip triggerRef={ref} key=\"monitoringAlert\" content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} onClick={showSidebar} ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <AlertSeverityIcon severityAlertType={severityAlertType} fontSize={radius} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default connect<null, DispatchProps, MonitoringAlertsDecoratorProps>(\n  null,\n  dispatchToProps,\n)(MonitoringAlertsDecorator);\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { useRoutesURL } from '../../../../../data-transforms/useRoutesURL';\nimport { getResource } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst UrlDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resourceObj = getResource(element);\n  const url = useRoutesURL(resourceObj);\n  if (!url) {\n    return null;\n  }\n  const label = t('topology~Open URL');\n  return (\n    <Tooltip triggerRef={ref} key=\"route\" content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={url} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <ExternalLinkAltIcon style={{ fontSize: radius }} title={label} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default UrlDecorator;\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","import * as _ from 'lodash';\nimport { Kebab, KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\n\nexport const nodeActions = (contextMenuResource: K8sResourceKind): KebabOption[] => {\n  if (!contextMenuResource) {\n    return null;\n  }\n  const resourceKind = modelFor(referenceFor(contextMenuResource));\n  const menuActions = [...Kebab.getExtensionsActionsForKind(resourceKind), ...Kebab.factory.common];\n\n  return _.map(menuActions, (a) => a(resourceKind, contextMenuResource));\n};\n","import * as React from 'react';\nimport { useCallbackRef } from '@patternfly/react-topology';\n\n//\n// Local version of the @patternfly/react-topology useHover\n// Updated to provide the capability to reset the hover state based on a dependency change\n//\n\nconst EMPTY: any[] = [];\n\nconst useHover = <T extends Element>(\n  delayIn: number = 200,\n  delayOut: number = 200,\n  dependencies: any[] = EMPTY,\n): [boolean, (node: T) => (() => void) | undefined] => {\n  const [hover, setHover] = React.useState<boolean>(false);\n  const mountRef = React.useRef(true);\n\n  // need to ensure we do not start the unset timer on unmount\n  React.useEffect(\n    () => () => {\n      mountRef.current = false;\n    },\n    [],\n  );\n\n  React.useEffect(() => {\n    setHover(false);\n    // dynamic dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  // The unset handle needs to be referred by listeners in different closures.\n  const unsetHandle = React.useRef<number>();\n\n  const callbackRef = useCallbackRef(\n    React.useCallback(\n      (node: T) => {\n        if (node) {\n          // store locally instead of a ref because it only needs to be referred by inner closures\n          let delayHandle: any;\n\n          const delayedStateChange = (newState: boolean, delay: number) => {\n            clearTimeout(unsetHandle.current);\n            clearTimeout(delayHandle);\n\n            if (delay != null) {\n              delayHandle = window.setTimeout(() => {\n                clearTimeout(unsetHandle.current);\n                setHover(newState);\n              }, delay);\n            } else {\n              setHover(newState);\n            }\n          };\n\n          const onMouseEnter = () => {\n            delayedStateChange(true, delayIn);\n          };\n\n          const onMouseLeave = () => {\n            delayedStateChange(false, delayOut);\n          };\n\n          node.addEventListener('mouseenter', onMouseEnter);\n          node.addEventListener('mouseleave', onMouseLeave);\n\n          return () => {\n            node.removeEventListener('mouseenter', onMouseEnter);\n            node.removeEventListener('mouseleave', onMouseLeave);\n            clearTimeout(delayHandle);\n            if (mountRef.current) {\n              // Queue the unset in case reattaching to a new node in the same location.\n              // This can happen with layers. Rendering a node to a new layer will unmount the old node\n              // and remount a new node at the same location. This will prevent flickering and getting\n              // stuck in a hover state.\n              unsetHandle.current = window.setTimeout(() => {\n                if (mountRef.current) {\n                  setHover(false);\n                }\n              }, Math.max(delayIn, delayOut));\n            }\n          };\n        }\n        return undefined;\n      },\n      [delayIn, delayOut],\n    ),\n  );\n\n  return [hover, callbackRef];\n};\n\nexport default useHover;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  hullPath,\n  DefaultCreateConnector,\n  Point,\n  Layer,\n  ContextMenu,\n  ContextMenuItem,\n  AnchorEnd,\n  Graph,\n  GraphElement,\n  isGraph,\n  isNode,\n  LabelPosition,\n  Node,\n  DragEvent,\n  DragObjectWithType,\n  DragOperationWithType,\n  DragSourceMonitor,\n  DragSourceSpec,\n  DragSpecOperationType,\n  useDndDrag,\n  TOP_LAYER,\n  useCombineRefs,\n  useHover,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { observer } from 'mobx-react';\n\n//\n// Local version of the @patternfly/react-topology withCreateConnector\n// Updated to notify the wrapped component when the create connector is being dragged\n//\n\nexport const CREATE_CONNECTOR_OPERATION = '#createconnector#';\nexport const CREATE_CONNECTOR_DROP_TYPE = '#createConnector#';\n\nexport interface ConnectorChoice {\n  label: string;\n}\n\nexport interface CreateConnectorOptions {\n  handleAngle?: number;\n  handleAngleTop?: number;\n  handleLength?: number;\n  dragItem?: DragObjectWithType;\n  dragOperation?: DragOperationWithType;\n  hideConnectorMenu?: boolean;\n}\n\ninterface ConnectorComponentProps {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging: boolean;\n  hover?: boolean;\n}\n\ntype CreateConnectorRenderer = React.ComponentType<ConnectorComponentProps>;\n\ntype OnCreateResult = ConnectorChoice[] | void | undefined | null | React.ReactElement[];\n\ntype CreateConnectorWidgetProps = {\n  element: Node;\n  onKeepAlive: (isAlive: boolean) => void;\n  onCreate: (\n    element: Node,\n    target: Node | Graph,\n    event: DragEvent,\n    dropHints?: string[] | undefined,\n    choice?: ConnectorChoice,\n  ) => Promise<OnCreateResult> | OnCreateResult;\n  ConnectorComponent: CreateConnectorRenderer;\n  contextMenuClass?: string;\n} & CreateConnectorOptions;\n\ninterface CollectProps {\n  event?: DragEvent;\n  dragging: boolean;\n  hints?: string[] | undefined;\n}\n\ninterface PromptData {\n  element: Node;\n  target: Node | Graph;\n  event: DragEvent;\n  choices: ConnectorChoice[] | React.ReactElement[];\n}\n\nconst isReactElementArray = (\n  choices: ConnectorChoice[] | React.ReactElement[],\n): choices is React.ReactElement[] => React.isValidElement(choices[0]);\n\nconst DEFAULT_HANDLE_ANGLE = Math.PI / 180;\nconst DEFAULT_HANDLE_ANGLE_TOP = 1.5 * Math.PI;\nconst DEFAULT_HANDLE_LENGTH = 32;\n\nconst CreateConnectorWidget: React.FunctionComponent<CreateConnectorWidgetProps> = observer(\n  (props) => {\n    const {\n      element,\n      onKeepAlive,\n      onCreate,\n      ConnectorComponent,\n      handleAngle = DEFAULT_HANDLE_ANGLE,\n      handleAngleTop = DEFAULT_HANDLE_ANGLE_TOP,\n      handleLength = DEFAULT_HANDLE_LENGTH,\n      contextMenuClass,\n      dragItem,\n      dragOperation,\n      hideConnectorMenu,\n    } = props;\n    const [prompt, setPrompt] = React.useState<PromptData | null>(null);\n    const [active, setActive] = React.useState(false);\n    const hintsRef = React.useRef<string[] | undefined>();\n\n    const spec = React.useMemo(() => {\n      const dragSourceSpec: DragSourceSpec<\n        DragObjectWithType,\n        DragSpecOperationType<DragOperationWithType>,\n        GraphElement,\n        CollectProps,\n        CreateConnectorWidgetProps\n      > = {\n        item: dragItem || { type: CREATE_CONNECTOR_DROP_TYPE },\n        operation: dragOperation || { type: CREATE_CONNECTOR_OPERATION },\n        begin: (monitor: DragSourceMonitor, dragProps: any) => {\n          setActive(true);\n          return dragProps.element;\n        },\n        drag: (event: DragEvent, monitor: DragSourceMonitor, p: CreateConnectorWidgetProps) => {\n          p.element.raise();\n        },\n        end: async (\n          dropResult: GraphElement,\n          monitor: DragSourceMonitor,\n          dragProps: CreateConnectorWidgetProps,\n        ) => {\n          const event = monitor.getDragEvent();\n          if ((isNode(dropResult) || isGraph(dropResult)) && event) {\n            const choices = await dragProps.onCreate(\n              dragProps.element,\n              dropResult,\n              event,\n              monitor.getDropHints(),\n            );\n            if (choices && choices.length && !hideConnectorMenu) {\n              setPrompt({ element: dragProps.element, target: dropResult, event, choices });\n              return;\n            }\n          }\n          setActive(false);\n          dragProps.onKeepAlive(false);\n        },\n        collect: (monitor) => ({\n          dragging: !!monitor.getItem(),\n          event: monitor.isDragging() ? monitor.getDragEvent() : undefined,\n          hints: monitor.getDropHints(),\n        }),\n      };\n      return dragSourceSpec;\n    }, [setActive, dragItem, dragOperation, hideConnectorMenu]);\n    const [{ dragging, event, hints }, dragRef] = useDndDrag(spec, props);\n    const [hover, hoverRef] = useHover();\n    const refs = useCombineRefs(dragRef, hoverRef);\n\n    if (!active && dragging && !event) {\n      // another connector is dragging right now\n      return null;\n    }\n\n    if (dragging) {\n      // store the latest hints\n      hintsRef.current = hints;\n    }\n\n    const dragEvent = prompt ? prompt.event : event;\n\n    let startPoint: Point;\n    let endPoint: Point;\n\n    if (dragEvent) {\n      endPoint = new Point(dragEvent.x, dragEvent.y);\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(endPoint);\n    } else {\n      const bounds = element.getBounds();\n      const isRightLabel = element.getLabelPosition() === LabelPosition.right;\n      const referencePoint = isRightLabel\n        ? new Point(bounds.x + bounds.width / 2, bounds.y)\n        : new Point(\n            bounds.right(),\n            Math.tan(handleAngle) * (bounds.width / 2) + bounds.y + bounds.height / 2,\n          );\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(referencePoint);\n      endPoint = new Point(\n        Math.cos(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.x,\n        Math.sin(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.y,\n      );\n    }\n\n    // bring into the coordinate space of the element\n    element.translateFromParent(startPoint);\n    element.translateFromParent(endPoint);\n\n    const connector = (\n      <g\n        className={css(styles.topologyDefaultCreateConnector)}\n        ref={refs}\n        onMouseEnter={!active ? () => onKeepAlive(true) : undefined}\n        onMouseLeave={!active ? () => onKeepAlive(false) : undefined}\n      >\n        <ConnectorComponent\n          startPoint={startPoint}\n          endPoint={endPoint}\n          dragging={dragging}\n          hints={hintsRef.current || []}\n          hover={hover}\n        />\n        <path\n          d={hullPath(\n            [\n              [startPoint.x, startPoint.y],\n              [endPoint.x, endPoint.y],\n            ],\n            7,\n          )}\n          fillOpacity=\"0\"\n        />\n      </g>\n    );\n\n    return (\n      <>\n        {active ? <Layer id={TOP_LAYER}>{connector}</Layer> : connector}\n        {prompt && (\n          <ContextMenu\n            reference={{ x: prompt.event.pageX, y: prompt.event.pageY }}\n            className={contextMenuClass}\n            open\n            onRequestClose={() => {\n              setActive(false);\n              onKeepAlive(false);\n            }}\n          >\n            {isReactElementArray(prompt.choices)\n              ? prompt.choices\n              : prompt.choices.map((c: ConnectorChoice) => (\n                  <ContextMenuItem\n                    key={c.label}\n                    onClick={() => {\n                      onCreate(prompt.element, prompt.target, prompt.event, hintsRef.current, c);\n                    }}\n                  >\n                    {c.label}\n                  </ContextMenuItem>\n                ))}\n          </ContextMenu>\n        )}\n      </>\n    );\n  },\n);\n\ninterface ElementProps {\n  element: Node;\n}\n\nexport interface WithCreateConnectorProps {\n  onShowCreateConnector: () => void;\n  onHideCreateConnector: () => void;\n  createConnectorDrag: boolean;\n}\n\nexport const withCreateConnector = <P extends WithCreateConnectorProps & ElementProps>(\n  onCreate: React.ComponentProps<typeof CreateConnectorWidget>['onCreate'],\n  ConnectorComponent: CreateConnectorRenderer = DefaultCreateConnector,\n  contextMenuClass?: string,\n  options?: CreateConnectorOptions,\n) => (WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FunctionComponent<Omit<P, keyof WithCreateConnectorProps>> = ({\n    children,\n    ...props\n  }) => {\n    const [show, setShow] = React.useState(false);\n    const [alive, setKeepAlive] = React.useState(false);\n    const onShowCreateConnector = React.useCallback(() => setShow(true), []);\n    const onHideCreateConnector = React.useCallback(() => setShow(false), []);\n    const onKeepAlive = React.useCallback(\n      (isAlive: boolean) => {\n        setKeepAlive((prev) => {\n          if (prev && !isAlive) {\n            onHideCreateConnector();\n          }\n          return isAlive;\n        });\n      },\n      [onHideCreateConnector],\n    );\n    return (\n      <WrappedComponent\n        {...(props as any)}\n        onShowCreateConnector={onShowCreateConnector}\n        onHideCreateConnector={onHideCreateConnector}\n        createConnectorDrag={alive}\n      >\n        {children}\n        {(show || alive) && (\n          <CreateConnectorWidget\n            {...options}\n            element={props.element}\n            onCreate={onCreate}\n            onKeepAlive={onKeepAlive}\n            ConnectorComponent={ConnectorComponent}\n            contextMenuClass={contextMenuClass}\n          />\n        )}\n      </WrappedComponent>\n    );\n  };\n  Component.displayName = `withCreateConnector(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import {\n  ModelKind,\n  withPanZoom,\n  withDragNode,\n  withTargetDrag,\n  withSelection,\n  withDndDrop,\n  DragObjectWithType,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport { contextMenuActions, graphActionContext, groupActionContext } from '../../../actions';\nimport { withCreateConnector } from '../../../behavior/withCreateConnector';\nimport {\n  TYPE_WORKLOAD,\n  TYPE_CONNECTS_TO,\n  TYPE_APPLICATION_GROUP,\n  TYPE_AGGREGATE_EDGE,\n  TYPE_TRAFFIC_CONNECTOR,\n} from '../../../const';\nimport { createConnection } from '../../../utils/createConnection';\nimport { withEditReviewAccess } from '../../../utils/withEditReviewAccess';\nimport {\n  NodeComponentProps,\n  graphDropTargetSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  MOVE_CONNECTOR_DROP_TYPE,\n  withContextMenu,\n  createConnectorCallback,\n} from './componentUtils';\nimport { AggregateEdge, ConnectsTo, CreateConnector, TrafficConnector } from './edges';\nimport GraphComponent from './GraphComponent';\nimport { Application } from './groups';\nimport { WorkloadNode } from './nodes';\n\nimport './ContextMenu.scss';\n\nexport const componentFactory: ComponentFactory = (kind, type) => {\n  switch (type) {\n    case TYPE_APPLICATION_GROUP:\n      return withDndDrop(applicationGroupDropTargetSpec)(\n        withDragNode(nodeDragSourceSpec(type, false, false))(\n          withSelection({ controlled: true })(withContextMenu(groupActionContext)(Application)),\n        ),\n      );\n    case TYPE_WORKLOAD:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withDndDrop<\n          any,\n          any,\n          { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n          NodeComponentProps\n        >(nodeDropTargetSpec)(\n          withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type))(\n              withSelection({ controlled: true })(\n                withContextMenu(contextMenuActions)(WorkloadNode),\n              ),\n            ),\n          ),\n        ),\n      );\n    case TYPE_CONNECTS_TO:\n      return withTargetDrag<DragObjectWithType>(\n        edgeDragSourceSpec(MOVE_CONNECTOR_DROP_TYPE, createConnection),\n      )(withContextMenu(contextMenuActions)(ConnectsTo));\n    case TYPE_AGGREGATE_EDGE:\n      return AggregateEdge;\n    case TYPE_TRAFFIC_CONNECTOR:\n      return TrafficConnector;\n    default:\n      switch (kind) {\n        case ModelKind.graph:\n          return withDndDrop(graphDropTargetSpec)(\n            withPanZoom()(\n              withSelection({ controlled: true })(\n                withContextMenu(graphActionContext)(GraphComponent),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n  }\n};\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType, observer } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './AggregateEdge.scss';\n\ntype AggregateEdgeProps = {\n  element: Edge;\n};\n\nconst AggregateEdge: React.FC<AggregateEdgeProps> = ({ element, ...others }) => {\n  const { bidirectional } = element.getData();\n\n  const endTerminalType =\n    !bidirectional && (!element.getSource().isCollapsed() || !element.getTarget().isCollapsed())\n      ? EdgeTerminalType.directional\n      : EdgeTerminalType.none;\n\n  return (\n    <BaseEdge\n      data-test-id=\"edge-handler\"\n      element={element}\n      className=\"odc-base-edge odc-aggregate-edge\"\n      endTerminalType={endTerminalType}\n      {...others}\n    />\n  );\n};\n\nexport default observer(AggregateEdge);\n","import * as React from 'react';\nimport {\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n  Edge,\n  observer,\n  EdgeTerminalType,\n} from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './ConnectsTo.scss';\n\ntype ConnectsToProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\nconst ConnectsTo: React.FC<ConnectsToProps> = (props) => (\n  <BaseEdge\n    className=\"odc-connects-to\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default observer(ConnectsTo);\n","import * as React from 'react';\nimport { DefaultCreateConnector, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\ntype CreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging?: boolean;\n  hover?: boolean;\n};\n\nconst CreateConnector: React.FC<CreateConnectorProps> = ({\n  startPoint,\n  endPoint,\n  dragging,\n  hover,\n  hints,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DefaultCreateConnector\n      startPoint={startPoint}\n      endPoint={endPoint}\n      dragging={dragging}\n      hints={hints}\n      hover={hover}\n      tipContents={hover && dragging ? t('topology~Add resources') : null}\n    />\n  );\n};\n\nexport default CreateConnector;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  Edge,\n  EdgeTerminalType,\n  NodeStatus,\n  StatusModifier,\n  observer,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { ComputedServiceBindingStatus } from '@console/service-binding-plugin/src/types';\nimport { getComputedServiceBindingStatus } from '@console/service-binding-plugin/src/utils';\nimport BaseEdge from './BaseEdge';\n\nimport './ServiceBinding.scss';\n\nconst ERROR_CROSS_SIZE = 8;\nconst ERROR_CROSS_STROKE_WIDTH = 2;\n\ntype ServiceBindingProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\n\nconst ServiceBinding: React.FC<ServiceBindingProps> = (props) => {\n  const { sbr } = props.element.getData();\n\n  const hasError = getComputedServiceBindingStatus(sbr) === ComputedServiceBindingStatus.ERROR;\n\n  let errorCross: JSX.Element;\n  if (hasError) {\n    const startPoint = props.element.getStartPoint();\n    const endPoint = props.element.getEndPoint();\n    const centerX = (startPoint.x + endPoint.x) / 2;\n    const centerY = (startPoint.y + endPoint.y) / 2;\n    const angleDeg =\n      Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) * (180 / Math.PI);\n\n    const classNames = css(\n      // required to make it red\n      styles.topologyEdge,\n      StatusModifier[NodeStatus.danger],\n      // required to make it blue when the edge is selected\n      styles.topologyConnectorArrow,\n    );\n\n    errorCross = (\n      <g transform={`translate(${centerX}, ${centerY}) rotate(${angleDeg})`} className={classNames}>\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={-ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={-ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n      </g>\n    );\n  }\n\n  return (\n    <BaseEdge\n      className=\"odc-service-binding\"\n      endTerminalStatus={hasError ? NodeStatus.danger : undefined}\n      endTerminalType={EdgeTerminalType.directional}\n      {...props}\n    >\n      {errorCross}\n    </BaseEdge>\n  );\n};\n\nexport default observer(ServiceBinding);\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\nimport './TrafficConnector.scss';\n\ntype TrafficConnectorProps = {\n  element: Edge;\n};\n\nconst TrafficConnector: React.FC<TrafficConnectorProps> = (props) => (\n  <BaseEdge\n    className=\"odc-traffic-connector\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default TrafficConnector;\n","import { useContext } from 'react';\nimport { FilterContext } from './FilterProvider';\n\nconst useAppliedDisplayFilters = (): { [filterKey: string]: boolean } => {\n  return useContext(FilterContext).appliedFilters;\n};\n\nexport { useAppliedDisplayFilters };\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { toLower } from 'lodash';\nimport { useQueryParams } from '@console/shared/src';\n\nconst EMPTY_QUERY_PARAMS = [];\n\nconst fuzzyCaseInsensitive = (a: string, b: string): boolean => fuzzy(toLower(a), toLower(b));\n\nconst useSearchFilter = (\n  name: string,\n  labels: { [key: string]: string } = {},\n): [boolean, string] => {\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get('searchQuery');\n  const labelsQuery = queryParams.get('labels')?.split(',') ?? EMPTY_QUERY_PARAMS;\n\n  const labelsMatched = React.useMemo(() => {\n    const labelsString = Object.entries(labels).map((label) => label.join('='));\n    return labelsQuery.every((label) => labelsString.includes(label));\n  }, [labels, labelsQuery]);\n\n  const filtered = React.useMemo(() => fuzzyCaseInsensitive(searchQuery, name), [\n    searchQuery,\n    name,\n  ]);\n\n  return [(filtered && !!searchQuery) || (labelsMatched && labelsQuery.length > 0), searchQuery];\n};\n\nexport { useSearchFilter };\n","import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  WithContextMenuProps,\n  useHover,\n  useCombineRefs,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { ApplicationModel } from '../../../../models';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../../../topology-types';\nimport { getKindStringAndAbbreviation } from '../nodes/nodeUtils';\nimport RegroupHint from '../RegroupHint';\nimport ApplicationGroupExpanded from './ApplicationGroupExpanded';\nimport GroupNode from './GroupNode';\n\nimport './Application.scss';\n\ntype ApplicationProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithDragNodeProps &\n  WithContextMenuProps;\n\nconst Application: React.FC<ApplicationProps> = ({\n  element,\n  dragNodeRef,\n  canDrop,\n  dropTarget,\n  dragRegroupable,\n  ...others\n}) => {\n  const [hover, hoverRef] = useHover();\n  const refs = useCombineRefs(dragNodeRef, hoverRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const needsHintRef = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    const needsHint = dropTarget && !canDrop && dragRegroupable;\n    if (needsHint !== needsHintRef.current) {\n      needsHintRef.current = needsHint;\n      element\n        .getController()\n        .fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? <RegroupHint /> : null);\n    }\n  }, [dropTarget, canDrop, element, dragRegroupable]);\n  const showLabel = useShowLabel(hover);\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(ApplicationModel.kind);\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  const groupClasses = classNames('odc-application-group', {\n    'is-filtered': filtered,\n  });\n\n  if (element.isCollapsed()) {\n    return (\n      <GroupNode\n        bgClassName=\"odc-application-group__bg\"\n        element={element}\n        canDrop={canDrop}\n        dropTarget={dropTarget}\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n        dragNodeRef={refs}\n        {...others}\n      />\n    );\n  }\n\n  // Use local version of DefaultGroupExpanded until we have a fix for https://github.com/patternfly/patternfly-react/issues/7300\n  return (\n    <ApplicationGroupExpanded\n      className={groupClasses}\n      showLabel={showLabel}\n      element={element}\n      canDrop={canDrop}\n      dropTarget={dropTarget}\n      dragNodeRef={refs}\n      badge={kindAbbr}\n      badgeColor={kindColor}\n      badgeClassName={badgeClassName}\n      {...others}\n    />\n  );\n};\n\nexport default observer(Application);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  useHover,\n  useVisualizationController,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { AlertSeverity } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  AllPodStatus,\n  calculateRadius,\n  getFiringAlerts,\n  getPodStatus,\n  getSeverityAlertType,\n  PodRCData,\n  useBuildConfigsWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { getFilterById, SHOW_POD_COUNT_FILTER_ID, useDisplayFilters } from '../../../../filters';\nimport { getResource, getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { useResourceQuotaAlert } from '../../../workload';\nimport BaseNode from './BaseNode';\nimport { getNodeDecorators } from './decorators/getNodeDecorators';\nimport PodSet, { podSetInnerRadius } from './PodSet';\n\nimport './WorkloadNode.scss';\n\nconst POD_STATUS_NORMAL = 1;\nconst POD_STATUS_WARNING = 2;\nconst POD_STATUS_DANGER = 3;\n\nconst StatusSeverities = {\n  danger: [\n    'ContainerCannotRun',\n    'CrashLoopBackOff',\n    'Critical',\n    'ErrImagePull',\n    'Error',\n    'Failed',\n    'Failure',\n    'ImagePullBackOff',\n    'InstallCheckFailed',\n    'Lost',\n    'Rejected',\n    'UpgradeFailed',\n  ],\n  warning: [\n    'Cancelled',\n    'Deleting',\n    'Expired',\n    'Not Ready',\n    'Terminating',\n    'Warning',\n    'RequiresApproval',\n  ],\n  normal: [\n    'New',\n    'Pending',\n    'Planning',\n    'ContainerCreating',\n    'UpgradePending',\n    'In Progress',\n    'Installing',\n    'InstallReady',\n    'Replacing',\n    'Running',\n    'Updating',\n    'Upgrading',\n    'Accepted',\n    'Active',\n    'Bound',\n    'Complete',\n    'Completed',\n    'Created',\n    'Enabled',\n    'Succeeded',\n    'Ready',\n    'Up to date',\n    'Provisioned as node',\n    'Preferred',\n    'Connected',\n    'Info',\n    'Unknown',\n    'PipelineNotStarted',\n  ],\n};\n\nexport const getNodePodStatus = (podStatus: AllPodStatus): number => {\n  switch (podStatus) {\n    case AllPodStatus.Failed:\n    case AllPodStatus.CrashLoopBackOff:\n      return POD_STATUS_DANGER;\n    case AllPodStatus.Warning:\n      return POD_STATUS_WARNING;\n    default:\n      return POD_STATUS_NORMAL;\n  }\n};\n\nexport const getAggregateStatus = (\n  donutStatus: PodRCData,\n  alertSeverity: AlertSeverity,\n  buildStatus: string,\n  pipelineStatus: string,\n  workloadRqAlertVariant: NodeStatus,\n): NodeStatus => {\n  const worstPodStatus =\n    donutStatus?.pods?.reduce((acc, pod) => {\n      return Math.max(acc, getNodePodStatus(getPodStatus(pod)));\n    }, POD_STATUS_NORMAL) ?? NodeStatus.default;\n\n  if (\n    worstPodStatus === POD_STATUS_DANGER ||\n    alertSeverity === AlertSeverity.Critical ||\n    StatusSeverities.danger.includes(buildStatus) ||\n    StatusSeverities.danger.includes(pipelineStatus)\n  ) {\n    return NodeStatus.danger;\n  }\n  if (\n    worstPodStatus === POD_STATUS_WARNING ||\n    alertSeverity === AlertSeverity.Warning ||\n    StatusSeverities.warning.includes(buildStatus) ||\n    StatusSeverities.warning.includes(pipelineStatus) ||\n    workloadRqAlertVariant === NodeStatus.warning\n  ) {\n    return NodeStatus.warning;\n  }\n  return NodeStatus.default;\n};\n\ntype WorkloadNodeProps = {\n  element: Node;\n  dragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n  dropTooltip?: React.ReactNode;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\ntype WorkloadPodsNodeProps = WorkloadNodeProps & {\n  donutStatus: PodRCData;\n};\n\nconst WorkloadPodsNode: React.FC<WorkloadPodsNodeProps> = observer(function WorkloadPodsNode({\n  donutStatus,\n  element,\n  children,\n  urlAnchorRef,\n  canDrop,\n  dropTarget,\n  dropTooltip,\n  contextMenuOpen,\n  ...rest\n}) {\n  const { t } = useTranslation();\n  const { width, height } = element.getDimensions();\n  const workloadData = element.getData().data;\n  const filters = useDisplayFilters();\n  const [hover, hoverRef] = useHover();\n  const size = Math.min(width, height);\n  const { radius, decoratorRadius } = calculateRadius(size);\n  const cx = width / 2;\n  const cy = height / 2;\n  const tipContent = dropTooltip || t('topology~Create a visual connector');\n  const showPodCountFilter = getFilterById(SHOW_POD_COUNT_FILTER_ID, filters);\n  const showPodCount = showPodCountFilter?.value ?? false;\n  const { decorators } = element.getGraph().getData();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const iconImageUrl = getImageForIconClass(workloadData.builderImage) ?? workloadData.builderImage;\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const nodeDecorators = showDetails\n    ? getNodeDecorators(element, decorators, cx, cy, radius, decoratorRadius)\n    : null;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const buildStatus = buildConfigs?.[0]?.builds?.[0]?.status?.phase;\n  const pipelineStatus = element.getData()?.resources?.pipelineRunStatus ?? 'Unknown';\n  const workloadRqAlert = useResourceQuotaAlert(element);\n  const workloadRqAlertVariant = (workloadRqAlert?.variant as NodeStatus) || NodeStatus.default;\n\n  return (\n    <g className=\"odc-workload-node\">\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        animationDuration={0}\n      >\n        <BaseNode\n          className=\"odc-workload-node\"\n          hoverRef={hoverRef}\n          innerRadius={podSetInnerRadius(size, donutStatus)}\n          icon={showDetails && !showPodCount ? iconImageUrl : undefined}\n          kind={workloadData.kind}\n          element={element}\n          dropTarget={dropTarget}\n          canDrop={canDrop}\n          nodeStatus={\n            !showDetails &&\n            getAggregateStatus(\n              donutStatus,\n              severityAlertType,\n              buildStatus,\n              pipelineStatus,\n              workloadRqAlertVariant,\n            )\n          }\n          attachments={nodeDecorators}\n          contextMenuOpen={contextMenuOpen}\n          alertVariant={workloadRqAlertVariant}\n          {...rest}\n        >\n          {donutStatus && showDetails ? (\n            <PodSet size={size} x={cx} y={cy} data={donutStatus} showPodCount={showPodCount} />\n          ) : null}\n          {children}\n        </BaseNode>\n      </Tooltip>\n    </g>\n  );\n});\n\nconst WorkloadNode: React.FC<WorkloadNodeProps> = observer(function WorkloadNode({\n  element,\n  ...rest\n}) {\n  const resource = getTopologyResourceObject(element.getData());\n  const { podData, loadError, loaded } = usePodsWatcher(\n    resource,\n    resource.kind,\n    resource.metadata.namespace,\n  );\n  return (\n    <WorkloadPodsNode\n      element={element}\n      donutStatus={loaded && !loadError ? podData : null}\n      {...rest}\n    />\n  );\n});\n\nexport { WorkloadNode, WorkloadPodsNode };\n","export { default as Decorator } from './Decorator';\nexport { default as BuildDecorator } from './BuildDecorator';\nexport { default as BuildDecoratorBubble } from './BuildDecoratorBubble';\nexport { default as EditDecorator } from './EditDecorator';\nexport { default as MonitoringAlertsDecorator } from './MonitoringAlertsDecorator';\nexport { default as UrlDecorator } from './UrlDecorator';\n","import * as React from 'react';\nimport SvgDropShadowFilter from '../../svg/SvgDropShadowFilter';\n\nexport const NODE_SHADOW_FILTER_ID = 'NodeShadowsFilterId';\nexport const NODE_SHADOW_FILTER_ID_HOVER = 'NodeShadowsFilterId--hover';\n\nconst NodeShadows: React.FC = () => (\n  <>\n    <SvgDropShadowFilter id={NODE_SHADOW_FILTER_ID} />\n    <SvgDropShadowFilter\n      id={NODE_SHADOW_FILTER_ID_HOVER}\n      dy={3}\n      stdDeviation={7}\n      floodOpacity={0.24}\n    />\n  </>\n);\n\nexport { NodeShadows };\n","import * as React from 'react';\nimport {\n  Visualization,\n  VisualizationSurface,\n  GraphElement,\n  isNode,\n  BaseEdge,\n  VisualizationProvider,\n  Model,\n  GraphModel,\n  NodeModel,\n  BOTTOM_LAYER,\n  GROUPS_LAYER,\n  DEFAULT_LAYER,\n  TOP_LAYER,\n  SelectionEventListener,\n  SELECTION_EVENT,\n  NODE_POSITIONED_EVENT,\n  GRAPH_POSITION_CHANGE_EVENT,\n  Node,\n  Rect,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { action } from 'mobx';\nimport { connect } from 'react-redux';\nimport {\n  useResolvedExtensions,\n  isTopologyComponentFactory as isDynamicTopologyComponentFactory,\n  TopologyComponentFactory as DynamicTopologyComponentFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { RootState } from '@console/internal/redux';\nimport {\n  useQueryParams,\n  withUserSettingsCompatibility,\n  WithUserSettingsCompatibilityProps,\n} from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY, TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { isTopologyComponentFactory, TopologyComponentFactory } from '../../extensions/topology';\nimport { getTopologyGraphModel, setTopologyGraphModel } from '../../redux/action';\nimport { SHOW_GROUPING_HINT_EVENT, ShowGroupingHintEventListener } from '../../topology-types';\nimport { componentFactory } from './components';\nimport { DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory } from './layouts/layoutFactory';\nimport TopologyControlBar from './TopologyControlBar';\n\nimport './Topology.scss';\n\nconst STORED_NODE_LAYOUT_FIELDS = ['id', 'x', 'y'];\n\nconst setTopologyLayout = (namespace: string, nodes: NodeModel[], layout: string) => {\n  const currentStore = {};\n  currentStore[namespace] = {\n    nodes: nodes?.map((n) =>\n      Object.keys(n).reduce((acc, key) => {\n        if (STORED_NODE_LAYOUT_FIELDS.includes(key)) {\n          acc[key] = n[key];\n        }\n        return acc;\n      }, {} as NodeModel),\n    ),\n    layout,\n  };\n  return currentStore;\n};\n\nconst nodeDistanceToBounds = (node: Node, bounds: Rect): number => {\n  const nodeBounds = node.getBounds();\n  const nodeX = nodeBounds.x + nodeBounds.width / 2;\n  const nodeY = nodeBounds.y + nodeBounds.height / 2;\n\n  const dx = Math.max(bounds.x - nodeX, 0, nodeX - (bounds.x + bounds.width));\n  const dy = Math.max(bounds.y - nodeY, 0, nodeY - (bounds.y + bounds.height));\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  controlsDisabled?: boolean;\n  selectedId?: string;\n  dragHint?: string;\n}\n\nconst TopologyGraphView: React.FC<TopologyGraphViewProps> = React.memo(\n  ({ visualizationReady, visualization, controlsDisabled, selectedId, dragHint }) => {\n    if (!visualizationReady) {\n      return null;\n    }\n    return (\n      <div className=\"odc-topology-graph-view\">\n        <VisualizationProvider controller={visualization}>\n          <VisualizationSurface state={{ selectedIds: [selectedId] }} />\n          {dragHint && (\n            <div className=\"odc-topology__hint-container\">\n              <div className=\"odc-topology__hint-background\">{dragHint}</div>\n            </div>\n          )}\n          <TopologyControlBar visualization={visualization} isDisabled={controlsDisabled} />\n        </VisualizationProvider>\n      </div>\n    );\n  },\n);\n\nconst TOPOLOGY_GRAPH_ID = 'odc-topology-graph';\nconst graphModel: Model = {\n  graph: {\n    id: TOPOLOGY_GRAPH_ID,\n    type: 'graph',\n    layout: DEFAULT_LAYOUT,\n    layers: [BOTTOM_LAYER, GROUPS_LAYER, 'groups2', DEFAULT_LAYER, TOP_LAYER],\n  },\n};\n\ninterface StateProps {\n  getStoredGraphModel: (namespace: string) => GraphModel;\n}\n\ninterface DispatchProps {\n  onGraphModelChange: (namespace: string, model: GraphModel) => void;\n}\n\ninterface TopologyProps {\n  model: Model;\n  application: string;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst Topology: React.FC<\n  TopologyProps & StateProps & DispatchProps & WithUserSettingsCompatibilityProps<object>\n> = ({\n  model,\n  application,\n  namespace,\n  onSelect,\n  setVisualization,\n  onGraphModelChange,\n  getStoredGraphModel,\n  userSettingState: topologyLayoutDataJson,\n  setUserSettingState: setTopologyLayoutData,\n}) => {\n  const applicationRef = React.useRef<string>(null);\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n  const [dragHint, setDragHint] = React.useState<string>('');\n  const storedLayoutApplied = React.useRef<boolean>(false);\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [componentFactoryExtensions, isStaticResolved] = useResolvedExtensions<\n    TopologyComponentFactory\n  >(isTopologyComponentFactory);\n  const [dynamicComponentFactoryExtensions, isDynamicResolved] = useResolvedExtensions<\n    DynamicTopologyComponentFactory\n  >(isDynamicTopologyComponentFactory);\n\n  const createVisualization = React.useCallback(() => {\n    const storedLayout = topologyLayoutDataJson?.[namespace];\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.registerLayoutFactory(layoutFactory);\n\n    const onCurrentGraphModelChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const saveGraphModel = {\n        id: visModel.graph.id,\n        type: visModel.graph.type,\n        x: visModel.graph.x,\n        y: visModel.graph.y,\n        scale: visModel.graph.scale,\n        scaleExtent: visModel.graph.scaleExtent,\n      };\n      onGraphModelChange(namespace, saveGraphModel);\n    }, 200);\n\n    const onVisualizationLayoutChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const updatedLayoutData = setTopologyLayout(namespace, visModel.nodes, visModel.graph.layout);\n      setTopologyLayoutData((prevState) => {\n        return { ...prevState, ...updatedLayoutData };\n      });\n    }, 200);\n\n    newVisualization.addEventListener(NODE_POSITIONED_EVENT, onVisualizationLayoutChange);\n    newVisualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, onCurrentGraphModelChange);\n\n    if (storedLayout) {\n      // Cleanup removed layouts, otherwise the `newVisualization.fromModel` call\n      // will crash in @patternfly/react-topology Visualization `getLayout(type: string)`\n      if (!SUPPORTED_LAYOUTS.includes(storedLayout.layout)) {\n        graphModel.graph.layout = DEFAULT_LAYOUT;\n        setTopologyLayoutData((prevState) => {\n          return { ...prevState, layout: DEFAULT_LAYOUT };\n        });\n      } else {\n        graphModel.graph.layout = storedLayout.layout;\n      }\n    }\n    newVisualization.fromModel(graphModel);\n    newVisualization.addEventListener<SelectionEventListener>(SELECTION_EVENT, (ids: string[]) => {\n      const selectedEntity = ids[0] ? newVisualization.getElementById(ids[0]) : null;\n      onSelect(selectedEntity);\n    });\n    return newVisualization;\n  }, [namespace, onGraphModelChange, onSelect, setTopologyLayoutData, topologyLayoutDataJson]);\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n  const visualization = visualizationRef.current;\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model && visualizationReady) {\n      if (!storedLayoutApplied.current) {\n        const storedGraphModel = getStoredGraphModel(namespace);\n        if (storedGraphModel) {\n          model.graph = {\n            ...graphModel.graph,\n            x: storedGraphModel.x,\n            y: storedGraphModel.y,\n            scale: storedGraphModel.scale,\n            scaleExtent: storedGraphModel.scaleExtent,\n            data: visualization.getGraph()?.getData(),\n          };\n        }\n        const storedLayout = topologyLayoutDataJson?.[namespace];\n        if (storedLayout) {\n          model.nodes.forEach((n) => {\n            const storedNode = storedLayout.nodes.find((sn) => sn.id === n.id);\n            if (storedNode) {\n              STORED_NODE_LAYOUT_FIELDS.forEach((key) => {\n                n[key] = storedNode[key];\n              });\n            }\n          });\n        }\n      }\n\n      model.nodes.forEach((n) => {\n        const oldNode = visualization.getNodeById(n.id);\n        if (oldNode && _.isEqual(oldNode.getData(), n.data)) {\n          n.data = oldNode.getData();\n        }\n      });\n      model.edges.forEach((e) => {\n        const oldEdge = visualization.getEdgeById(e.id);\n        if (oldEdge && _.isEqual(oldEdge.getData(), e.data)) {\n          e.data = oldEdge.getData();\n        }\n      });\n\n      visualization.fromModel(model);\n\n      // Make sure something is visible in the case where stored locations are off the screen\n      if (!storedLayoutApplied.current) {\n        storedLayoutApplied.current = true;\n        if (topologyLayoutDataJson?.[namespace]) {\n          const graph = visualization.getGraph();\n          const nodes = visualization.getElements().filter(isNode);\n          if (nodes.length) {\n            const nodesVisible = nodes.find((n) => graph.isNodeInView(n, { padding: 0 }));\n            if (!nodesVisible) {\n              const graphBounds = graph.getBounds();\n              const [viewNode] = nodes.reduce(\n                ([closestNode, closestDistance], nextNode) => {\n                  const distance = nodeDistanceToBounds(nextNode, graphBounds);\n                  if (!closestNode || distance < closestDistance) {\n                    return [nextNode, distance];\n                  }\n                  return [closestNode, closestDistance];\n                },\n                [null, 0],\n              );\n              graph.panIntoView(viewNode);\n            }\n          }\n        }\n      }\n\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    // Do not update on selectedId change or stored layout change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, visualization, visualizationReady]);\n\n  React.useEffect(() => {\n    if (!isStaticResolved || !isDynamicResolved) {\n      return;\n    }\n\n    visualization.registerComponentFactory(componentFactory);\n    [...componentFactoryExtensions, ...dynamicComponentFactoryExtensions].forEach((factory) => {\n      visualization.registerComponentFactory(factory.properties.getFactory);\n    });\n\n    visualization.addEventListener<ShowGroupingHintEventListener>(\n      SHOW_GROUPING_HINT_EVENT,\n      (element, hint) => {\n        setDragHint(hint);\n      },\n    );\n    setVisualizationReady(true);\n  }, [\n    visualization,\n    isStaticResolved,\n    isDynamicResolved,\n    componentFactoryExtensions,\n    dynamicComponentFactoryExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (!applicationRef.current) {\n      applicationRef.current = application;\n      return;\n    }\n    if (application !== applicationRef.current) {\n      applicationRef.current = application;\n      if (visualization) {\n        visualization.getGraph().reset();\n        visualization.getGraph().layout();\n      }\n    }\n  }, [application, visualization]);\n\n  React.useEffect(() => {\n    let resizeTimeout = null;\n    if (visualization) {\n      if (selectedId) {\n        const selectedEntity = visualization.getElementById(selectedId);\n        if (selectedEntity) {\n          const visibleEntity = isNode(selectedEntity)\n            ? selectedEntity\n            : (selectedEntity as BaseEdge).getSource();\n          resizeTimeout = setTimeout(\n            action(() => {\n              visualization\n                .getGraph()\n                .panIntoView(visibleEntity, { offset: 20, minimumVisible: 100 });\n              resizeTimeout = null;\n            }),\n            500,\n          );\n        }\n      }\n    }\n    return () => {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n      }\n    };\n  }, [selectedId, visualization]);\n\n  return (\n    <TopologyGraphView\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      controlsDisabled={!model?.nodes.length}\n      dragHint={dragHint}\n      selectedId={selectedId}\n    />\n  );\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    getStoredGraphModel: (namespace: string) => getTopologyGraphModel(state, namespace),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onGraphModelChange: (namespace: string, model: GraphModel) => {\n    dispatch(setTopologyGraphModel(namespace, model));\n  },\n});\n\nexport default withFallback(\n  connect<StateProps, DispatchProps, TopologyProps>(\n    TopologyStateToProps,\n    TopologyDispatchToProps,\n  )(\n    withUserSettingsCompatibility<\n      TopologyProps & WithUserSettingsCompatibilityProps<object>,\n      object\n    >(\n      TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY,\n      TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY,\n      {},\n    )(React.memo(Topology)),\n  ),\n  ErrorBoundaryFallbackPage,\n);\n","import { ElementFactory, GraphElement, ModelKind, BaseGraph } from '@patternfly/react-topology';\nimport OdcBaseEdge from './OdcBaseEdge';\nimport OdcBaseNode from './OdcBaseNode';\n\nconst odcElementFactory: ElementFactory = (kind: ModelKind): GraphElement | undefined => {\n  switch (kind) {\n    case ModelKind.graph:\n      return new BaseGraph();\n    case ModelKind.node:\n      return new OdcBaseNode();\n    case ModelKind.edge:\n      return new OdcBaseEdge();\n    default:\n      return undefined;\n  }\n};\n\nexport default odcElementFactory;\n","import { IBuild as IBuildV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/Build';\nimport { IBuildRun as IBuildRunV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildRun';\nimport { useLocation, useParams } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { useFlag } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { K8sResourceCondition, K8sResourceKind } from '@console/internal/module/k8s';\nimport { useTabbedTableBreadcrumbsFor } from '@console/shared';\nimport { getBuildRunStatus } from './components/buildrun-status/BuildRunStatus';\nimport { BUILDRUN_TO_RESOURCE_MAP_LABEL } from './const';\nimport {\n  BuildModel,\n  BuildModelV1Alpha1,\n  BuildRunModel,\n  BuildRunModelV1Alpha1,\n  BuildStrategyModel,\n  BuildStrategyModelV1Alpha1,\n  ClusterBuildStrategyModel,\n  ClusterBuildStrategyModelV1Alpha1,\n} from './models';\nimport { Build, BuildRun, ComputedBuildRunStatus } from './types';\n\nexport type LatestBuildRunStatus = {\n  latestBuildRun: BuildRun;\n  status: ComputedBuildRunStatus;\n};\n\nexport interface Runs {\n  data?: BuildRun[];\n}\n\nexport const getLatestRun = (runs: Runs, field: string): BuildRun => {\n  if (!runs || !runs.data || !(runs.data.length > 0) || !field) {\n    return null;\n  }\n\n  let latestRun = runs.data[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.data.length; i++) {\n      latestRun =\n        runs.data[i]?.metadata?.[field] &&\n        new Date(runs.data[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs.data[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.data.length; i++) {\n      latestRun =\n        runs.data[i]?.status?.[field] &&\n        new Date(runs.data[i].status[field]) > new Date(latestRun.status[field])\n          ? runs.data[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs.data[runs.data.length - 1];\n  }\n  return latestRun;\n};\n\nexport const getLatestBuildRunStatusforDeployment = (\n  buildRuns: BuildRun[],\n  resource: K8sResourceKind,\n): LatestBuildRunStatus => {\n  const buildRunsforDeployment = buildRuns.filter(\n    (run) =>\n      run.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] ===\n      resource.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL],\n  );\n\n  if (!buildRunsforDeployment || buildRunsforDeployment.length === 0) {\n    return { latestBuildRun: null, status: ComputedBuildRunStatus.UNKNOWN };\n  }\n\n  const latestBuildRun = getLatestRun({ data: buildRunsforDeployment }, 'creationTimestamp');\n\n  if (!latestBuildRun) {\n    return { latestBuildRun: null, status: ComputedBuildRunStatus.UNKNOWN };\n  }\n\n  const status = getBuildRunStatus(latestBuildRun);\n\n  return {\n    latestBuildRun,\n    status,\n  };\n};\n\nexport const isBuildRunNewerThen = (newBuildRun: BuildRun, prevBuildRun: BuildRun | undefined) => {\n  const prevCreationTime = new Date(prevBuildRun?.metadata?.creationTimestamp);\n  const newCreationTime = new Date(newBuildRun?.metadata?.creationTimestamp);\n  const timeDifference = newCreationTime.getTime() - prevCreationTime.getTime();\n  return timeDifference > 0;\n};\n\nexport const byCreationTime = (left: K8sResourceKind, right: K8sResourceKind): number => {\n  const leftCreationTime = new Date(left?.metadata?.creationTimestamp || Date.now());\n  const rightCreationTime = new Date(right?.metadata?.creationTimestamp || Date.now());\n  return rightCreationTime.getTime() - leftCreationTime.getTime();\n};\n\nexport const isV1Alpha1Resource = (\n  resource: Build | BuildRun,\n): resource is\n  | IBuildV1Alpha1\n  | (IBuildRunV1Alpha1 & { status?: { conditions?: K8sResourceCondition[] } }) => {\n  return resource.apiVersion === 'shipwright.io/v1alpha1';\n};\n\nexport const getBuildNameFromBuildRun = (buildRun: BuildRun) => {\n  if (isV1Alpha1Resource(buildRun)) {\n    return buildRun.spec?.buildRef?.name;\n  }\n  return buildRun.spec?.build?.name;\n};\n\n/**\n * Given two flags that determine the presence of two versions of a CRD,\n * determine which version is enabled.\n *\n * If both flags are enabled, the first model gets priority.\n *\n * @return the K8s model of the CRD that is enabled, or null if neither are enabled\n */\nconst useDetermineModelVersion = (\n  modelOne: K8sModel,\n  modelTwo: K8sModel,\n  modelFlagOne: string,\n  modelFlagTwo: string,\n) => {\n  const flagTwo = useFlag(modelFlagTwo);\n  const flagOne = useFlag(modelFlagOne);\n\n  if (!flagTwo && !flagOne) {\n    return null;\n  }\n\n  return flagOne ? modelOne : modelTwo;\n};\n\n/**\n * @returns latest `BuildModel` model if exists, otherwise v1Alpha1 if it exists, otherwise null\n */\nexport const useBuildModel = () =>\n  useDetermineModelVersion(\n    BuildModel,\n    BuildModelV1Alpha1,\n    'SHIPWRIGHT_BUILD',\n    'SHIPWRIGHT_BUILD_V1ALPHA1',\n  );\n\n/**\n * @returns latest `BuildRunModel` model if exists, otherwise v1Alpha1 if it exists, otherwise null\n */\nexport const useBuildRunModel = () =>\n  useDetermineModelVersion(\n    BuildRunModel,\n    BuildRunModelV1Alpha1,\n    'SHIPWRIGHT_BUILDRUN',\n    'SHIPWRIGHT_BUILDRUN_V1ALPHA1',\n  );\n\n/**\n * @returns latest `BuildStrategyModel` model if exists, otherwise v1Alpha1 if it exists, otherwise null\n */\nexport const useBuildStrategyModel = () =>\n  useDetermineModelVersion(\n    BuildStrategyModel,\n    BuildStrategyModelV1Alpha1,\n    'SHIPWRIGHT_BUILDSTRATEGY',\n    'SHIPWRIGHT_BUILDSTRATEGY_V1ALPHA1',\n  );\n\n/**\n * @returns latest `ClusterBuildStrategyModel` model if exists, otherwise v1Alpha1 if it exists, otherwise null\n */\nexport const useClusterBuildStrategyModel = () =>\n  useDetermineModelVersion(\n    ClusterBuildStrategyModel,\n    ClusterBuildStrategyModelV1Alpha1,\n    'SHIPWRIGHT_CLUSTERBUILDSTRATEGY',\n    'SHIPWRIGHT_CLUSTERBUILDSTRATEGY_V1ALPHA1',\n  );\n\n/** map of shipwright kinds to tab names */\nconst kindToTabMap = {\n  [BuildModel.kind]: 'builds',\n  [BuildModelV1Alpha1.kind]: 'builds',\n  [BuildRunModel.kind]: 'buildruns',\n  [BuildRunModelV1Alpha1.kind]: 'buildruns',\n  [BuildStrategyModel.kind]: 'buildstrategies',\n  [BuildStrategyModelV1Alpha1.kind]: 'buildstrategies',\n  [ClusterBuildStrategyModel.kind]: 'clusterbuildstrategies',\n  [ClusterBuildStrategyModelV1Alpha1.kind]: 'clusterbuildstrategies',\n};\n\n/** convert a resource using a shipwright model to its corresponding k8s model */\nconst resourceToModel = (obj: K8sResourceKind): K8sModel => {\n  if (obj?.apiVersion === 'shipwright.io/v1alpha1') {\n    switch (obj?.kind) {\n      case 'Build':\n        return BuildModelV1Alpha1;\n      case 'BuildRun':\n        return BuildRunModelV1Alpha1;\n      case 'BuildStrategy':\n        return BuildStrategyModelV1Alpha1;\n      case 'ClusterBuildStrategy':\n        return ClusterBuildStrategyModelV1Alpha1;\n      default:\n        return null;\n    }\n  }\n  switch (obj?.kind) {\n    case 'Build':\n      return BuildModel;\n    case 'BuildRun':\n      return BuildRunModel;\n    case 'BuildStrategy':\n      return BuildStrategyModel;\n    case 'ClusterBuildStrategy':\n      return ClusterBuildStrategyModel;\n    default:\n      return null;\n  }\n};\n\nexport const useShipwrightBreadcrumbsFor = (obj: K8sResourceKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    resourceToModel(obj),\n    location,\n    params,\n    'k8s',\n    `shipwright.io/${kindToTabMap[obj.kind]}`,\n    undefined,\n    isAdminPerspective,\n  );\n};\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { TFunction } from 'i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport CheIcon from './CheIcon';\nimport GiteaIcon from './GiteaIcon';\nimport { detectGitType } from './import-validation-utils';\n\nexport const routeDecoratorIcon = (\n  routeURL: string,\n  radius: number,\n  t: TFunction,\n  cheEnabled?: boolean,\n  cheIconURL?: string,\n): React.ReactElement => {\n  if (cheEnabled && routeURL) {\n    return cheIconURL ? (\n      <image xlinkHref={cheIconURL} width={radius} height={radius} />\n    ) : (\n      <CheIcon style={{ fontSize: radius }} />\n    );\n  }\n  switch (detectGitType(routeURL)) {\n    case GitProvider.INVALID:\n      // Not a valid url and thus not safe to use\n      return null;\n    case GitProvider.GITHUB:\n      return <GithubIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.BITBUCKET:\n      return (\n        <BitbucketIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />\n      );\n    case GitProvider.GITLAB:\n      return <GitlabIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.GITEA:\n      return <GiteaIcon style={{ fontSize: radius }} topology />;\n    default:\n      return <GitAltIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n  }\n};\n","import * as React from 'react';\n\nconst CheIcon: React.FC<React.HTMLProps<SVGElement>> = ({ style }): React.ReactElement => {\n  return (\n    <svg height=\"1em\" width=\"1em\" version=\"1.1\" viewBox=\"0 0 47 57\" style={style}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\">\n        <path\n          d=\"M0.032227,30.88l-0.032227-17.087,23.853-13.793,23.796,13.784-14.691,8.51-9.062-5.109-23.864,13.695z\"\n          fill=\"#fdb940\"\n        />\n        <path\n          d=\"M0,43.355l23.876,13.622,23.974-13.937v-16.902l-23.974,13.506-23.876-13.506v17.217z\"\n          fill=\"#525c86\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default CheIcon;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Title,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { Edge, Node } from '@patternfly/react-topology';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { PromiseComponent, ResourceIcon } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport {\n  createEventSourceKafkaConnection,\n  createSinkConnection,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport { createConnection } from '../../utils';\n\ntype MoveConnectionModalProps = {\n  edge: Edge;\n  availableTargets: Node[];\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype MoveConnectionModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst nodeItem = (node: Node) => (\n  <span>\n    <span className=\"co-icon-space-r\">\n      <ResourceIcon kind={node.getData().data?.kind} />\n    </span>\n    {node.getLabel()}\n  </span>\n);\n\nconst MoveConnectionForm: React.FC<\n  FormikProps<FormikValues> & MoveConnectionModalProps & { setTranslator: (t: TFunction) => void }\n> = ({\n  handleSubmit,\n  isSubmitting,\n  setTranslator,\n  cancel,\n  values,\n  edge,\n  availableTargets,\n  status,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const isDirty = values.target.getId() !== edge.getTarget().getId();\n  setTranslator(t);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={() => setOpen(!isOpen)}\n      isExpanded={isOpen}\n      isFullWidth\n    >\n      {nodeItem(values.target)}\n    </MenuToggle>\n  );\n\n  const sourceLabel = edge.getSource().getLabel();\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content\">\n      <ModalTitle>{t('topology~Move connector')}</ModalTitle>\n      <ModalBody>\n        <Title headingLevel=\"h2\" size=\"md\" className=\"co-m-form-row\">\n          <Trans ns=\"topology\" t={t}>\n            Connect <strong>{{ sourceLabel }}</strong> to\n          </Trans>\n        </Title>\n        <div className=\"pf-v5-c-form\">\n          <FormGroup fieldId=\"target-node\" label=\"Target\">\n            <Select\n              id=\"target-node-dropdown\"\n              className=\"dropdown--full-width\"\n              onSelect={(_, value: Node) => {\n                if (value) {\n                  values.target = value;\n                }\n                setOpen(false);\n              }}\n              toggle={toggle}\n              isOpen={isOpen}\n              onOpenChange={(open) => setOpen(open)}\n            >\n              <SelectList>\n                {availableTargets.map((node) => (\n                  <SelectOption\n                    key={node.getId()}\n                    value={node}\n                    isSelected={values.target.getId() === node.getId()}\n                  >\n                    {nodeItem(node)}\n                  </SelectOption>\n                ))}\n              </SelectList>\n            </Select>\n          </FormGroup>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('topology~Move')}\n        submitDisabled={!isDirty || isSubmitting}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass MoveConnectionModal extends PromiseComponent<\n  MoveConnectionModalProps,\n  MoveConnectionModalState\n> {\n  private t: TFunction;\n\n  private onSubmit = (newTarget: Node): Promise<K8sResourceKind[] | K8sResourceKind> => {\n    const { edge } = this.props;\n    switch (edge.getType()) {\n      case TYPE_CONNECTS_TO:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_SERVICE_BINDING:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_EVENT_SOURCE_LINK:\n        return createSinkConnection(edge.getSource(), newTarget);\n      case TYPE_KAFKA_CONNECTION_LINK:\n        return createEventSourceKafkaConnection(edge.getSource(), newTarget);\n      default:\n        return Promise.reject(\n          new Error(\n            this.t('topology~Unable to move connector of type {{type}}.', {\n              type: edge.getType(),\n            }),\n          ),\n        );\n    }\n  };\n\n  private handleSubmit = (values, actions) => {\n    const { close } = this.props;\n    return this.handlePromise(this.onSubmit(values.target))\n      .then(() => {\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err });\n      });\n  };\n\n  private setTranslator = (t: TFunction) => {\n    this.t = t;\n  };\n\n  render() {\n    const { edge } = this.props;\n    const initialValues = {\n      target: edge.getTarget(),\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formikProps) => (\n          <MoveConnectionForm setTranslator={this.setTranslator} {...formikProps} {...this.props} />\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport const moveConnectionModal = createModalLauncher((props: MoveConnectionModalProps) => (\n  <MoveConnectionModal {...props} />\n));\n","export const editApplicationModal = (props) =>\n  import('./EditApplicationModal' /* webpackChunkName: \"topology-modals\" */).then((m) =>\n    m.editApplicationModal(props),\n  );\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n","export { default as OdcBaseEdge } from './OdcBaseEdge';\nexport { default as OdcBaseNode } from './OdcBaseNode';\nexport { default as odcElementFactory } from './odcElementFactory';\n","import { GraphModel } from '@patternfly/react-topology';\nimport { action, ActionType } from 'typesafe-actions';\nimport { RootState } from '@console/internal/redux';\n\nexport enum Actions {\n  topologyFilters = 'topologyFilters',\n  supportedTopologyFilters = 'supportedTopologyFilters',\n  supportedTopologyKinds = 'supportedTopologyKinds',\n  topologyGraphModel = 'topologyGraphModel',\n}\n\nexport const setSupportedTopologyFilters = (supportedFilters: string[]) => {\n  return action(Actions.supportedTopologyFilters, { supportedFilters });\n};\n\nexport const setSupportedTopologyKinds = (supportedKinds: { [key: string]: number }) => {\n  return action(Actions.supportedTopologyKinds, { supportedKinds });\n};\n\nexport const setTopologyGraphModel = (namespace: string, graphModel: GraphModel) => {\n  return action(Actions.topologyGraphModel, { namespace, graphModel });\n};\n\nexport const getTopologyGraphModel = (state: RootState, namespace: string): GraphModel => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology?.get('topologyGraphModel')?.[namespace];\n};\n\nconst actions = {\n  setSupportedTopologyFilters,\n  setSupportedTopologyKinds,\n  setTopologyGraphModel,\n};\n\nexport type TopologyAction = ActionType<typeof actions>;\n","import * as React from 'react';\nimport { Alert, AlertActionLink } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { PodStatus } from '@console/internal/components/pod';\nimport { PodTraffic } from '@console/internal/components/pod-traffic';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  LoadingBox,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { podPhase, PodKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport {\n  usePodsWatcher,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  BuildConfigData,\n} from '@console/shared';\n\nconst kind: string = 'Pod';\nconst MAX_PODS: number = 3;\nconst MAX_ERROR_PODS: number = 10;\n\nconst podUpdateTime = (pod: PodKind) => {\n  const allStatuses = [\n    ..._.get(pod, 'status.containerStatuses', []),\n    ..._.get(pod, 'status.initContainerStatuses', []),\n  ];\n  const updateTimes = _.reduce(\n    allStatuses,\n    (times, nextStatus) => {\n      if (nextStatus.state.running) {\n        return [...times, _.get(nextStatus, 'state.running.startedAt')];\n      }\n      if (nextStatus.state.terminated) {\n        return [...times, _.get(nextStatus, 'state.terminated.finishedAt')];\n      }\n      if (nextStatus.lastState.running) {\n        return [...times, _.get(nextStatus, 'lastState.running.startedAt')];\n      }\n      if (nextStatus.lastState.terminated) {\n        return [...times, _.get(nextStatus, 'lastState.terminated.finishedAt')];\n      }\n      return [...times, _.get(nextStatus, _.get(pod, 'startTime'))];\n    },\n    [],\n  );\n\n  return _.head(_.reverse(updateTimes.sort()));\n};\n\nconst errorPhases = [\n  'ContainerCannotRun',\n  'CrashLoopBackOff',\n  'Critical',\n  'Error',\n  'Failed',\n  'InstallCheckFailed',\n  'Cancelled',\n  'Expired',\n  'Not Ready',\n  'Terminating',\n];\n\nconst isPodError = (pod: PodKind) => _.includes(errorPhases, podPhase(pod));\n\nconst isEvicted = (pod: PodKind) => podPhase(pod) === 'Evicted';\n\nconst isDeploymentGeneratedByWebConsole = (obj: K8sResourceKind) =>\n  obj.kind === 'Deployment' &&\n  obj.metadata?.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole';\n\nconst isPodWithoutImageId = (pod: PodKind) =>\n  pod.status?.phase === 'Pending' &&\n  pod.status?.containerStatuses?.some((containerStatus) => !containerStatus.imageID);\n\nexport const podCompare = (pod1: PodKind, pod2: PodKind): number => {\n  const error1 = isPodError(pod1);\n  const error2 = isPodError(pod2);\n\n  if (error1 !== error2) {\n    return error1 ? -1 : 1;\n  }\n\n  const evicted1 = isEvicted(pod1);\n  const evicted2 = isEvicted(pod2);\n\n  if (evicted1 !== evicted2) {\n    return evicted1 ? 1 : -1;\n  }\n\n  const runtime1 = podUpdateTime(pod1);\n  const runtime2 = podUpdateTime(pod2);\n\n  if (runtime1 < runtime2) {\n    return 1;\n  }\n  if (runtime1 > runtime2) {\n    return -1;\n  }\n\n  return pod1.metadata.name.localeCompare(pod2.metadata.name);\n};\n\nconst PodOverviewItem: React.FC<PodOverviewItemProps> = ({ pod }) => {\n  const {\n    metadata: { name, namespace },\n  } = pod;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-5\">\n          <ResourceLink kind={kind} name={name} namespace={namespace} />\n        </span>\n        <span className=\"col-xs-3\">\n          <PodStatus pod={pod} />\n        </span>\n        <span className=\"col-xs-1\">\n          <PodTraffic podName={name} namespace={namespace} tooltipFlag />\n        </span>\n        <span className=\"col-xs-3 text-right\">\n          <Link to={`${resourcePath(kind, name, namespace)}/logs`}>{t('public~View logs')}</Link>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nPodOverviewItem.displayName = 'PodOverviewItem';\n\ntype PodOverviewItemProps = {\n  pod: PodKind;\n};\n\nconst PodsOverviewList: React.FC<PodOverviewListProps> = ({ pods }) => (\n  <ul className=\"list-group\">\n    {_.map(pods, (pod) => (\n      <PodOverviewItem key={pod.metadata.uid} pod={pod} />\n    ))}\n  </ul>\n);\n\nPodsOverviewList.displayName = 'PodsOverviewList';\n\nconst isComplete = (build: K8sResourceKind) => build.status?.completionTimestamp;\n\n/**\n * Get the Shipwright BuildRun status for a pod's image if it exists, otherwise\n * return an empty object\n */\nconst useGetShipwrightBuilds = (namespace: string, name: string): K8sResourceKind[] => {\n  const watchedResources = {\n    buildRunBeta: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1beta1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n    buildRunAlpha: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1alpha1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n  };\n\n  // get all shipwright buildrun CRDs and concatenate into a list\n  const watchedBuildRuns = useK8sWatchResources(watchedResources);\n\n  const buildRuns = React.useMemo(() => {\n    const allBuildRuns = {\n      ...((watchedBuildRuns.buildRunBeta.data as object) || {}),\n      ...((watchedBuildRuns.buildRunAlpha.data as object) || {}),\n    };\n\n    return Object.keys(allBuildRuns)\n      .filter((key) => {\n        const buildRun = allBuildRuns[key] as K8sResourceKind;\n        return buildRun.spec?.build?.name === name;\n      })\n      .map((key) => allBuildRuns[key] as K8sResourceKind);\n  }, [watchedBuildRuns, name]);\n\n  return buildRuns;\n};\n\nconst buildRunIsComplete = (buildRun: K8sResourceKind) => {\n  const succeededCondition = buildRun?.status?.conditions?.find(\n    (condition) => condition.type === 'Succeeded',\n  );\n\n  return (\n    (succeededCondition?.status === 'True' || succeededCondition?.status === 'False') &&\n    succeededCondition?.reason === 'Succeeded'\n  );\n};\n\nexport const PodsOverviewContent: React.FC<PodsOverviewContentProps> = ({\n  obj,\n  pods,\n  loaded,\n  loadError,\n  allPodsLink,\n  emptyText,\n  buildConfigData,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const [showWaitingPods, setShowWaitingPods] = React.useState(false);\n  const shipwrightBuilds = useGetShipwrightBuilds(namespace, name);\n\n  const waitingForBuildConfig =\n    buildConfigData?.buildConfigs?.length > 0 &&\n    !buildConfigData.buildConfigs[0].builds.some((build) => isComplete(build));\n\n  const waitingForShipwright =\n    shipwrightBuilds?.length > 0 &&\n    !shipwrightBuilds.some((buildRun) => buildRunIsComplete(buildRun));\n\n  const showWaitingForBuildAlert =\n    (waitingForBuildConfig || waitingForShipwright) && isDeploymentGeneratedByWebConsole(obj);\n\n  let filteredPods = [...pods];\n  if (showWaitingForBuildAlert && !showWaitingPods) {\n    filteredPods = filteredPods.filter((pod) => !isPodWithoutImageId(pod));\n  }\n  filteredPods.sort(podCompare);\n\n  const errorPodCount = _.size(_.filter(pods, (pod) => isPodError(pod)));\n  const podsShown = Math.max(Math.min(errorPodCount, MAX_ERROR_PODS), MAX_PODS);\n  const linkTo = allPodsLink || `${resourcePath(referenceFor(obj), name, namespace)}/pods`;\n  const emptyMessage = emptyText || t('console-shared~No Pods found for this resource.');\n\n  const podAlert = showWaitingForBuildAlert ? (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~Waiting for the build')}\n      actionLinks={\n        <AlertActionLink\n          onClick={() => setShowWaitingPods(!showWaitingPods)}\n          data-test=\"waiting-pods\"\n        >\n          {showWaitingPods\n            ? t('console-shared~Hide waiting pods with errors')\n            : t('console-shared~Show waiting pods with errors')}\n        </AlertActionLink>\n      }\n    >\n      {t(\n        'console-shared~Waiting for the first build to run successfully. You may temporarily see \"ImagePullBackOff\" and \"ErrImagePull\" errors while waiting.',\n      )}\n    </Alert>\n  ) : null;\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('public~Pods')}>\n        {_.size(pods) > podsShown && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('console-shared~View all {{podSize}}', { podSize: _.size(pods) })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {buildConfigData?.loaded && !buildConfigData?.loadError && podAlert}\n      {_.isEmpty(filteredPods) ? (\n        <span className=\"text-muted\">{loaded || !!loadError ? emptyMessage : <LoadingBox />}</span>\n      ) : (\n        <PodsOverviewList pods={_.take(filteredPods, podsShown)} />\n      )}\n    </>\n  );\n};\nPodsOverviewContent.displayName = 'PodsOverviewContent';\n\nexport const PodsOverview: React.FC<PodsOverviewProps> = ({\n  obj,\n  podsFilter,\n  hideIfEmpty = false,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const { podData, loadError, loaded } = usePodsWatcher(obj, obj.kind, namespace);\n\n  React.useEffect(() => {\n    if (!loadError && loaded) {\n      let updatedPods = podData.pods as PodKind[];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n    }\n  }, [podData, loadError, loaded, podsFilter]);\n\n  if (!pods.length && hideIfEmpty) {\n    return null;\n  }\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\nexport const PodsOverviewMultiple: React.FC<PodsOverviewMultipleProps> = ({\n  obj,\n  podResources,\n  podsFilter,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      let updatedPods = podResources?.length\n        ? podResources.reduce((acc, resource) => {\n            acc.push(...getPodsForResource(resource, resources));\n            return acc;\n          }, [])\n        : [];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [podResources, podsFilter, resources]);\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\ntype PodOverviewListProps = {\n  pods: PodKind[];\n};\n\ntype PodsOverviewContentProps = {\n  obj: K8sResourceKind;\n  pods: PodKind[];\n  loaded: boolean;\n  loadError: string;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n\ntype PodsOverviewProps = {\n  obj: K8sResourceKind;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n  hideIfEmpty?: boolean;\n};\n\ntype PodsOverviewMultipleProps = {\n  obj: K8sResourceKind;\n  podResources: K8sResourceKind[];\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { BuildLogLink, BuildNumberLink } from '@console/internal/components/build';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { BuildConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { BuildPhase, startBuild } from '@console/internal/module/k8s/builds';\nimport { LogSnippet, Status, BuildConfigOverviewItem } from '@console/shared';\n\nconst MAX_VISIBLE = 3;\n\nconst StatusTitle = ({ build }: { build: K8sResourceKind }) => {\n  const { t } = useTranslation();\n  switch (build.status.phase) {\n    case BuildPhase.Cancelled:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was cancelled\n        </Trans>\n      );\n    case BuildPhase.Complete:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was complete\n        </Trans>\n      );\n    case BuildPhase.Error:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> encountered an error\n        </Trans>\n      );\n    case BuildPhase.Failed:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> failed\n        </Trans>\n      );\n    case BuildPhase.New:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is new\n        </Trans>\n      );\n    case BuildPhase.Pending:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is pending\n        </Trans>\n      );\n    case BuildPhase.Running:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is running\n        </Trans>\n      );\n    default:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is {build.status?.phase?.toLowerCase()}\n        </Trans>\n      );\n  }\n};\n\nconst BuildStatus = ({ build }: { build: K8sResourceKind }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? <LogSnippet message={message} logSnippet={logSnippet} /> : null;\n};\n\nconst BuildOverviewItem: React.FC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          <div>\n            <StatusTitle build={build} />\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"build-overview__item-time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.FC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n  const { t } = useTranslation();\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {builds.length > MAX_VISIBLE && (\n            <div>\n              <Link\n                className=\"sidebar__section-view-all\"\n                to={`${resourcePath(referenceFor(buildConfig), name, namespace)}/builds`}\n              >\n                {t('topology~View all {{buildsLength}}', {\n                  buildsLength: builds.length,\n                })}\n              </Link>\n            </div>\n          )}\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick} data-test-id=\"start-build-action\">\n                {t('topology~Start Build')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {!(builds?.length > 0) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">{t('topology~No Builds found for this Build Config.')}</span>\n        </li>\n      ) : (\n        builds\n          .slice(0, MAX_VISIBLE)\n          .map((build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\nexport const BuildOverview: React.FC<BuildConfigsOverviewProps> = ({ buildConfigs }) => {\n  const { t } = useTranslation();\n  if (!(buildConfigs?.length > 0)) {\n    return null;\n  }\n  return (\n    <div className=\"build-overview\">\n      <SidebarSectionHeading text={t('topology~Builds')} />\n      {buildConfigs.map((buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))}\n    </div>\n  );\n};\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n  loaded?: boolean;\n  loadError?: string;\n};\n","import * as React from 'react';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLocation } from '@console/internal/components/routes';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher, useServicesWatcher } from '@console/shared';\n\nconst ServicePortList: React.FC<ServicePortListProps> = ({ service }) => {\n  const ports = service.spec?.ports ?? [];\n  const { t } = useTranslation();\n  return (\n    <ul className=\"port-list\">\n      {ports.map(({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">{t('topology~Service port:')}</span>{' '}\n          {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">{t('topology~Pod port:')}</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.FC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.FC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {services?.map((service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.FC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{t('topology~Location:')}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.FC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {routes?.map((route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.FC<NetworkingOverviewProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const serviceResources = useServicesWatcher(obj);\n  const services =\n    serviceResources.loaded && !serviceResources.loadError ? serviceResources.services : [];\n  const routeResources = useRoutesWatcher(obj);\n  const routes = routeResources.loaded && !routeResources.loadError ? routeResources.routes : [];\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~Services')} />\n      {!(services?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Services found for this resource.')}</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text={t('topology~Routes')} />\n      {!(routes?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Routes found for this resource.')}</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  obj: K8sResourceKind;\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, JobKind } from '@console/internal/module/k8s';\nimport { PodStatus, usePodsWatcher } from '@console/shared';\n\nconst kind: string = 'Job';\nconst MAX_JOBS: number = 3;\n\nconst JobOverviewItem: React.FC<JobOverviewItemProps> = ({ job }) => {\n  const {\n    metadata: { name, namespace },\n  } = job;\n  const podsLink = `${resourcePath(referenceFor(job), name, namespace)}/pods`;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n\n  return loaded && !loadError ? (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"job-overview__item\">\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n        <Link to={podsLink} className=\"overview__pod-donut-sm\">\n          <PodStatus\n            standalone\n            data={podData.pods}\n            size={25}\n            innerRadius={8}\n            outerRadius={12}\n            title={`${podData.pods.length}`}\n            titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n            showTooltip={false}\n          />\n        </Link>\n      </div>\n    </li>\n  ) : null;\n};\n\nJobOverviewItem.displayName = 'JobOverviewItem';\n\ntype JobOverviewItemProps = {\n  job: JobKind;\n};\n\nconst JobsOverviewList: React.FC<JobsOverviewListProps> = ({ jobs }) => (\n  <ul className=\"list-group\">\n    {jobs?.map((job) => (\n      <JobOverviewItem key={job.metadata.uid} job={job} />\n    ))}\n  </ul>\n);\n\nJobsOverviewList.displayName = 'JobsOverviewList';\n\nexport const JobsOverview: React.FC<JobsOverviewProps> = ({\n  jobs,\n  obj,\n  allJobsLink,\n  emptyText,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const linkTo = allJobsLink || `${resourcePath(referenceFor(obj), name, namespace)}/jobs`;\n  const emptyMessage = emptyText || t('topology~No Jobs found for this resource.');\n\n  return (\n    <>\n      <SidebarSectionHeading text=\"Jobs\">\n        {jobs?.length > MAX_JOBS && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('topology~View all ({{jobCount}})', { jobCount: jobs.length })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {!(jobs?.length > 0) ? (\n        <span className=\"text-muted\">{emptyMessage}</span>\n      ) : (\n        <JobsOverviewList jobs={jobs.slice(0, MAX_JOBS)} />\n      )}\n    </>\n  );\n};\n\ntype JobsOverviewListProps = {\n  jobs: JobKind[];\n};\n\ntype JobsOverviewProps = {\n  jobs: JobKind[];\n  obj: K8sResourceKind;\n  allJobsLink?: string;\n  emptyText?: string;\n};\n","import * as React from 'react';\nimport { Node, TopologyQuadrant } from '@patternfly/react-topology/dist/esm/types';\nimport { TopologyDecorator } from '../../../../../topology-types';\n\nconst getExtensionDecoratorForQuadrant = (\n  location: string,\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number,\n  decoratorRadius: number,\n  nodeWidth: number,\n  nodeHeight: number,\n): React.ReactElement => {\n  let x: number;\n  let y: number;\n  const deltaX = nodeRadius > 0 ? nodeRadius : nodeWidth / 2;\n  const deltaY = nodeRadius > 0 ? nodeRadius : nodeHeight / 2;\n  const offset = nodeRadius > 0 ? decoratorRadius * 0.7 : 0;\n  switch (location) {\n    case TopologyQuadrant.upperRight:\n      x = centerX + deltaX - offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerRight:\n      x = centerX + deltaX - offset;\n      y = centerY + deltaY - offset;\n      break;\n    case TopologyQuadrant.upperLeft:\n      x = centerX - deltaX + offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerLeft:\n      x = centerX - deltaX + offset;\n      y = centerY + deltaY - offset;\n      break;\n    default:\n      x = centerX;\n      y = centerY;\n  }\n\n  let retDecorator;\n  let i = 0;\n  const length = decorators?.[location]?.length ?? 0;\n  while (!retDecorator && i < length) {\n    retDecorator = decorators[location][i++].decorator(element, decoratorRadius, x, y);\n  }\n  return retDecorator;\n};\n\nexport const getNodeDecorators = (\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number, // -1 to use width/height\n  decoratorRadius: number,\n  nodeWidth?: number,\n  nodeHeight?: number,\n): React.ReactNode => {\n  const keys = decorators ? Object.keys(decorators) : [];\n  return (\n    <>\n      {keys.map((key) =>\n        getExtensionDecoratorForQuadrant(\n          key,\n          element,\n          decorators,\n          centerX,\n          centerY,\n          nodeRadius,\n          decoratorRadius,\n          nodeWidth,\n          nodeHeight,\n        ),\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION, ROUTE_URL_ANNOTATION } from '../const';\nimport { getRoutesURL } from '../utils/topology-utils';\n\nexport const useRoutesURL = (resource: K8sResourceKind): string => {\n  const disabled = resource?.metadata?.annotations?.[ROUTE_DISABLED_ANNOTATION] === 'true';\n  const annotationURL = resource?.metadata?.annotations?.[ROUTE_URL_ANNOTATION];\n\n  const routeResources = useRoutesWatcher(resource);\n  const routes = React.useMemo(\n    () => (routeResources.loaded && !routeResources.loadError ? routeResources.routes : []),\n    [routeResources],\n  );\n  const watchedURL = React.useMemo(() => getRoutesURL(resource, routes), [resource, routes]);\n\n  const url = annotationURL || watchedURL;\n  if (disabled || !url || !(url.startsWith('http://') || url.startsWith('https://'))) {\n    return null;\n  }\n  return url;\n};\n","import * as React from 'react';\nimport { GraphElement, ElementContext, ContextMenu } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { ActionContext, ActionServiceProvider } from '@console/shared';\nimport { createContextMenuItems } from '../../../actions';\n\ntype Reference = React.ComponentProps<typeof ContextMenu>['reference'];\n\nexport interface WithContextMenuProps {\n  onContextMenu: (e: React.MouseEvent) => void;\n  contextMenuOpen: boolean;\n}\n\nconst withContextMenu = <E extends GraphElement>(\n  actionContext: (element: E) => ActionContext,\n  container?: Element | null | undefined | (() => Element),\n  className?: string,\n  atPoint: boolean = true,\n) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FC<Omit<P, keyof WithContextMenuProps>> = (props) => {\n    const element = React.useContext(ElementContext);\n    const [reference, setReference] = React.useState<Reference | null>(null);\n    const onContextMenu = React.useCallback((e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setReference(\n        atPoint\n          ? {\n              x: e.pageX,\n              y: e.pageY,\n            }\n          : e.currentTarget,\n      );\n    }, []);\n\n    return (\n      <>\n        <WrappedComponent\n          {...(props as any)}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={!!reference}\n        />\n        {reference ? (\n          <ActionServiceProvider context={actionContext(element as E)}>\n            {({ options, loaded }) =>\n              loaded ? (\n                <ContextMenu\n                  reference={reference}\n                  container={container}\n                  className={className}\n                  open\n                  onRequestClose={() => setReference(null)}\n                >\n                  {createContextMenuItems(options)}\n                </ContextMenu>\n              ) : null\n            }\n          </ActionServiceProvider>\n        ) : null}\n      </>\n    );\n  };\n  Component.displayName = `withContextMenu(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n\nexport default withContextMenu;\n","import * as React from 'react';\nimport {\n  GraphComponent as BaseGraphComponent,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\n\ntype GraphComponentProps = React.ComponentProps<typeof BaseGraphComponent> & {\n  dragInProgress?: boolean;\n  dragEditInProgress?: boolean;\n  hasDropTarget?: boolean;\n  dragCreate?: boolean;\n} & WithContextMenuProps;\n\nconst DRAG_ACTIVE_CLASS = 'odc-m-drag-active';\nconst VALID_DROP_CLASS = 'odc-m-valid-drop-target';\n\nconst GraphComponent: React.FC<GraphComponentProps> = (props) => {\n  const { dragInProgress, dragEditInProgress, hasDropTarget, dragCreate } = props;\n  const graphClasses = classNames('odc-graph', { 'odc-m-drag-create': dragCreate });\n  const controller = props.element.getController();\n\n  React.useEffect(() => {\n    controller.setRenderConstraint(!dragInProgress);\n  }, [controller, dragInProgress]);\n\n  React.useEffect(() => {\n    const addClassList = [];\n    const removeClassList = [];\n\n    dragEditInProgress\n      ? addClassList.push(DRAG_ACTIVE_CLASS)\n      : removeClassList.push(DRAG_ACTIVE_CLASS);\n    hasDropTarget ? addClassList.push(VALID_DROP_CLASS) : removeClassList.push(VALID_DROP_CLASS);\n\n    if (addClassList.length) {\n      addClassList.forEach((className) => document.body.classList.add(className));\n    }\n    if (removeClassList.length) {\n      removeClassList.forEach((className) => document.body.classList.remove(className));\n    }\n  }, [dragEditInProgress, hasDropTarget]);\n  return (\n    <g className={graphClasses}>\n      <BaseGraphComponent {...props} />\n    </g>\n  );\n};\n\nexport default GraphComponent;\n","export const TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY = `bridge/topology-display-filters`;\n","import * as React from 'react';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '@console/shared';\n\nimport './RegroupHint.scss';\n\nconst RegroupHint: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-regroup-hint\">\n      <InfoCircleIcon className=\"odc-regroup-hint__icon\" />\n      <span className=\"odc-regroup-hint__text\">\n        <ShortcutTable>\n          <Shortcut shift drag>\n            {t('topology~Edit application grouping')}\n          </Shortcut>\n        </ShortcutTable>\n      </span>\n    </div>\n  );\n};\n\nexport default RegroupHint;\n","import * as React from 'react';\nimport CollapseIcon from '@patternfly/react-icons/dist/esm/icons/compress-alt-icon';\nimport { css } from '@patternfly/react-styles';\nimport {\n  NodeLabel,\n  Layer,\n  GROUPS_LAYER,\n  hullPath,\n  maxPadding,\n  useCombineRefs,\n  useHover,\n  BadgeLocation,\n  isGraph,\n  Node,\n  NodeShape,\n  NodeStyle,\n  PointTuple,\n  useDragNode,\n  useSvgAnchor,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  CollapsibleGroupProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { polygonHull } from 'd3-polygon';\nimport * as _ from 'lodash';\nimport { observer } from 'mobx-react';\n\ntype ApplicationGroupExpandedProps = {\n  className?: string;\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  hover?: boolean;\n  label?: string; // Defaults to element.getLabel()\n  secondaryLabel?: string;\n  showLabel?: boolean; // Defaults to true\n  truncateLength?: number; // Defaults to 13\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: string;\n  labelIconPadding?: number;\n} & Partial<\n  CollapsibleGroupProps &\n    WithDragNodeProps &\n    WithSelectionProps &\n    WithDndDropProps &\n    WithContextMenuProps\n>;\n\ntype PointWithSize = [number, number, number];\n\n// Return the point whose Y is the largest value.\n// If multiple points are found, compute the center X between them\n// export for testing only\nexport function computeLabelLocation(points: PointWithSize[]): PointWithSize {\n  let lowPoints: PointWithSize[];\n  const threshold = 5;\n\n  _.forEach(points, (p) => {\n    const delta = !lowPoints ? Infinity : Math.round(p[1]) - Math.round(lowPoints[0][1]);\n    if (delta > threshold) {\n      lowPoints = [p];\n    } else if (Math.abs(delta) <= threshold) {\n      lowPoints.push(p);\n    }\n  });\n  return [\n    (_.minBy(lowPoints, (p) => p[0])[0] + _.maxBy(lowPoints, (p) => p[0])[0]) / 2,\n    lowPoints[0][1],\n    // use the max size value\n    _.maxBy(lowPoints, (p) => p[2])[2],\n  ];\n}\n\nconst ApplicationGroupExpanded: React.FunctionComponent<ApplicationGroupExpandedProps> = ({\n  className,\n  element,\n  collapsible,\n  selected,\n  onSelect,\n  hover,\n  label,\n  secondaryLabel,\n  showLabel = true,\n  truncateLength,\n  dndDropRef,\n  droppable,\n  canDrop,\n  dropTarget,\n  onContextMenu,\n  contextMenuOpen,\n  dragging,\n  dragNodeRef,\n  badge,\n  badgeColor,\n  badgeTextColor,\n  badgeBorderColor,\n  badgeClassName,\n  badgeLocation,\n  labelIconClass,\n  labelIcon,\n  labelIconPadding,\n  onCollapseChange,\n}) => {\n  const [hovered, hoverRef] = useHover();\n  const [labelHover, labelHoverRef] = useHover();\n  const dragLabelRef = useDragNode()[1];\n  const refs = useCombineRefs<SVGPathElement>(hoverRef, dragNodeRef);\n  const isHover = hover !== undefined ? hover : hovered;\n  const anchorRef = useSvgAnchor();\n  const outlineRef = useCombineRefs(dndDropRef, anchorRef);\n  const labelLocation = React.useRef<PointWithSize>();\n  const pathRef = React.useRef<string>();\n\n  let parent = element.getParent();\n  let altGroup = false;\n  while (!isGraph(parent)) {\n    altGroup = !altGroup;\n    parent = parent.getParent();\n  }\n\n  // cast to number and coerce\n  const padding = maxPadding(element.getStyle<NodeStyle>().padding);\n  const hullPadding = (point: PointWithSize | PointTuple) => (point[2] || 0) + padding;\n\n  if (!droppable || !pathRef.current || !labelLocation.current) {\n    const children = element.getNodes().filter((c) => c.isVisible());\n    if (children.length === 0) {\n      return null;\n    }\n    const points: (PointWithSize | PointTuple)[] = [];\n    _.forEach(children, (c) => {\n      if (c.getNodeShape() === NodeShape.circle) {\n        const bounds = c.getBounds();\n        const { width, height } = bounds;\n        const { x, y } = bounds.getCenter();\n        const radius = Math.max(width, height) / 2;\n        points.push([x, y, radius] as PointWithSize);\n      } else {\n        // add all 4 corners\n        const { width, height, x, y } = c.getBounds();\n        points.push([x, y, 0] as PointWithSize);\n        points.push([x + width, y, 0] as PointWithSize);\n        points.push([x, y + height, 0] as PointWithSize);\n        points.push([x + width, y + height, 0] as PointWithSize);\n      }\n    });\n    const hullPoints: (PointWithSize | PointTuple)[] =\n      points.length > 2 ? polygonHull(points as PointTuple[]) : (points as PointTuple[]);\n    if (!hullPoints) {\n      return null;\n    }\n\n    // change the box only when not dragging\n    pathRef.current = hullPath(hullPoints as PointTuple[], hullPadding);\n\n    // Compute the location of the group label.\n    labelLocation.current = computeLabelLocation(hullPoints as PointWithSize[]);\n  }\n\n  const groupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n  );\n  const innerGroupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n    (isHover || labelHover) && 'pf-m-hover',\n    canDrop && dropTarget && 'pf-m-drop-target',\n  );\n\n  return (\n    <g\n      ref={labelHoverRef}\n      onContextMenu={onContextMenu}\n      onClick={onSelect}\n      className={groupClassName}\n    >\n      <Layer id={GROUPS_LAYER}>\n        <g\n          ref={refs}\n          onContextMenu={onContextMenu}\n          onClick={onSelect}\n          className={innerGroupClassName}\n        >\n          <path ref={outlineRef} className={styles.topologyGroupBackground} d={pathRef.current} />\n        </g>\n      </Layer>\n      {showLabel && (\n        <NodeLabel\n          className={styles.topologyGroupLabel}\n          data-test={`group-label-text`}\n          x={labelLocation.current[0]}\n          y={labelLocation.current[1] + hullPadding(labelLocation.current) + 24}\n          paddingX={8}\n          paddingY={5}\n          dragRef={dragNodeRef ? dragLabelRef : undefined}\n          status={element.getNodeStatus()}\n          secondaryLabel={secondaryLabel}\n          truncateLength={truncateLength}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeTextColor={badgeTextColor}\n          badgeBorderColor={badgeBorderColor}\n          badgeClassName={badgeClassName}\n          badgeLocation={badgeLocation}\n          labelIconClass={labelIconClass}\n          labelIcon={labelIcon}\n          labelIconPadding={labelIconPadding}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          hover={isHover || labelHover}\n          actionIcon={collapsible ? <CollapseIcon /> : undefined}\n          onActionIconClick={() => onCollapseChange(element, true)}\n        >\n          {label || element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(ApplicationGroupExpanded);\n","import { Graph, Layout, LayoutFactory } from '@patternfly/react-topology';\nimport TopologyColaLayout from './TopologyColaLayout';\n\nconst COLA_LAYOUT = 'Cola';\n\nconst DEFAULT_LAYOUT = COLA_LAYOUT;\n\nconst SUPPORTED_LAYOUTS = [COLA_LAYOUT];\n\nconst layoutFactory: LayoutFactory = (type: string, graph: Graph): Layout | undefined => {\n  return type === COLA_LAYOUT ? new TopologyColaLayout(graph, { layoutOnDrag: false }) : undefined;\n};\n\nexport { COLA_LAYOUT, DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory };\n","import {\n  ColaLayout,\n  ColaNode,\n  ColaGroup,\n  ColaLink,\n  Graph,\n  GraphModel,\n} from '@patternfly/react-topology';\nimport { layoutConstraints } from '@console/knative-plugin/src/topology/layouts/layoutConstraints';\n\nclass TopologyColaLayout extends ColaLayout {\n  protected getConstraints(nodes: ColaNode[], groups: ColaGroup[], edges: ColaLink[]): any[] {\n    return layoutConstraints(nodes, groups, edges, this.options);\n  }\n\n  protected startLayout(\n    graph: Graph<GraphModel, any>,\n    initialRun: boolean,\n    addingNodes: boolean,\n  ): void {\n    if (graph.getNodes()?.filter((n) => n.isVisible()).length === 0) {\n      return;\n    }\n    super.startLayout(graph, initialRun, addingNodes);\n  }\n}\n\nexport default TopologyColaLayout;\n","import {\n  ColaGroup,\n  ColaLink,\n  ColaNode,\n  getGroupPadding,\n  LayoutOptions,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\n\nconst getNodeTimeStamp = (node: ColaNode): Date => {\n  const data = node.element.getData();\n  return new Date(_.get(data, 'resources.obj.metadata.creationTimestamp', 0));\n};\n\n// Sort nodes most recent to least recent\nconst nodeSorter = (node1: ColaNode, node2: ColaNode) =>\n  getNodeTimeStamp(node1) > getNodeTimeStamp(node2) ? -1 : 1;\n\nconst alignNodeConnector = (\n  edges: ColaLink[],\n  type: string,\n  g: ColaGroup | ColaNode,\n  options: LayoutOptions,\n  filteredNode,\n): any[] => {\n  const constraints = [];\n  const connectorLinks = edges\n    .filter(\n      (e) =>\n        e.element.getType() === type &&\n        !e.target.isFixed &&\n        !e.source.isFixed &&\n        (e.target.element === g.element ||\n          e.source.element === g.element ||\n          e.target.element.getParent() === g.element),\n    )\n    .sort((l1: ColaLink, l2: ColaLink) => nodeSorter(l1.source, l2.source));\n  if (connectorLinks.length) {\n    const height = connectorLinks.reduce((current: number, nextLink: ColaLink) => {\n      return current + nextLink.source.height;\n    }, 0);\n    const serviceDistance =\n      g instanceof ColaGroup\n        ? (filteredNode as ColaNode).radius + getGroupPadding(g.element)\n        : (filteredNode as ColaNode).width / 2;\n\n    const linkNodeConstraint: any = {\n      type: 'alignment',\n      axis: 'y',\n      offsets: [{ node: connectorLinks[0].target.index, offset: 0 }],\n    };\n    let nextOffset = -height / 2;\n    connectorLinks.forEach((link: ColaLink) => {\n      // Evenly space out the nodes vertically\n      if (type === TYPE_EVENT_PUB_SUB_LINK) {\n        linkNodeConstraint.offsets.push({\n          node: link.target.index,\n          offset: nextOffset + link.target.height / 2,\n        });\n      } else {\n        linkNodeConstraint.offsets.push({\n          node: link.source.index,\n          offset: nextOffset + link.source.height / 2,\n        });\n      }\n\n      if (type === TYPE_EVENT_SINK_LINK) {\n        // Keep the event sink to the right\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: link.target.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      } else {\n        // Keep the event sources to the left\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: filteredNode.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      }\n      nextOffset += link.source.height;\n    });\n    constraints.push(linkNodeConstraint);\n  }\n  return constraints;\n};\n\nexport const layoutConstraints = (\n  nodes: ColaNode[],\n  groups: ColaGroup[],\n  edges: ColaLink[],\n  options: LayoutOptions,\n): any[] => {\n  let constraints: any[] = [];\n\n  [...groups, ...nodes]\n    .filter((g) =>\n      [TYPE_EVENT_PUB_SUB, TYPE_SINK_URI, TYPE_KNATIVE_SERVICE].includes(g.element.getType()),\n    )\n    .forEach((g) => {\n      const leafNodes =\n        g instanceof ColaGroup && g.leaves.sort(nodeSorter).filter((n) => !n.isFixed);\n      const filteredNode = (leafNodes && _.first(leafNodes)) || g;\n      if (g.element.getType() === TYPE_KNATIVE_SERVICE) {\n        const serviceConstraint: any = {\n          type: 'alignment',\n          axis: 'y',\n          offsets: [],\n        };\n\n        // Sort revisions such that most recent is to the left\n        if (leafNodes) {\n          for (let i = 0; i < leafNodes.length; i++) {\n            serviceConstraint.offsets.push({ node: leafNodes[i].index, offset: 0 });\n            if (i < leafNodes.length - 1) {\n              // Space out each revision horizontally\n              constraints.push({\n                axis: 'x',\n                left: leafNodes[i].index,\n                right: leafNodes[i + 1].index,\n                gap: leafNodes[i].width,\n                equality: true,\n              });\n            }\n          }\n          if (serviceConstraint.offsets.length) {\n            constraints.push(serviceConstraint);\n          }\n        }\n      }\n\n      const eventSourceLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SOURCE_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const pubSubLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_PUB_SUB_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const eventSinkLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SINK_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      constraints = [\n        ...constraints,\n        ...eventSourceLinksConnector,\n        ...pubSubLinksConnector,\n        ...eventSinkLinksConnector,\n      ];\n    });\n  return constraints;\n};\n","import * as React from 'react';\nimport {\n  TopologyControlBar as PfTopologyControlBar,\n  observer,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  Visualization,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\nimport './TopologyControlBar.scss';\n\ninterface ControlBarProps {\n  visualization: Visualization;\n  isDisabled: boolean;\n}\n\nconst TopologyControlBar: React.FC<ControlBarProps> = observer(({ visualization, isDisabled }) => {\n  const { t } = useTranslation();\n  return (\n    <span className=\"pf-topology-control-bar odc-topology-control-bar\">\n      <PfTopologyControlBar\n        controlButtons={[\n          ...createTopologyControlButtons({\n            ...defaultControlButtonsOptions,\n            zoomInCallback: action(() => {\n              visualization.getGraph().scaleBy(4 / 3);\n            }),\n            zoomInTip: t('topology~Zoom in'),\n            zoomInAriaLabel: t('topology~Zoom in'),\n            zoomInDisabled: isDisabled,\n            zoomOutCallback: action(() => {\n              visualization.getGraph().scaleBy(0.75);\n            }),\n            zoomOutTip: t('topology~Zoom out'),\n            zoomOutAriaLabel: t('topology~Zoom out'),\n            zoomOutDisabled: isDisabled,\n            fitToScreenCallback: action(() => {\n              visualization.getGraph().fit(80);\n            }),\n            fitToScreenTip: t('topology~Fit to screen'),\n            fitToScreenAriaLabel: t('topology~Fit to screen'),\n            fitToScreenDisabled: isDisabled,\n            resetViewCallback: action(() => {\n              visualization.getGraph().reset();\n              visualization.getGraph().layout();\n            }),\n            resetViewTip: t('topology~Reset view'),\n            resetViewAriaLabel: t('topology~Reset view'),\n            resetViewDisabled: isDisabled,\n            legend: false,\n          }),\n        ]}\n      />\n    </span>\n  );\n});\n\nexport default TopologyControlBar;\n","import * as React from 'react';\nimport i18next from 'i18next';\nimport Status, { StatusProps } from '@console/dynamic-plugin-sdk/src/app/components/status/Status';\nimport { BuildRun, ComputedBuildRunStatus } from '../../types';\n\nconst getSucceededCondition = (buildRun: BuildRun) =>\n  buildRun?.status?.conditions?.find((condition) => condition.type === 'Succeeded');\n\nexport const getBuildRunStatus = (buildRun: BuildRun): ComputedBuildRunStatus => {\n  const succeededCondition = getSucceededCondition(buildRun);\n  if (succeededCondition) {\n    if (succeededCondition.status === 'Unknown' && succeededCondition.reason === 'Pending') {\n      return ComputedBuildRunStatus.PENDING;\n    }\n    if (succeededCondition.status === 'Unknown' && succeededCondition.reason === 'Running') {\n      return ComputedBuildRunStatus.RUNNING;\n    }\n    if (succeededCondition.status === 'True') {\n      return ComputedBuildRunStatus.SUCCEEDED;\n    }\n    if (succeededCondition.status === 'False') {\n      return ComputedBuildRunStatus.FAILED;\n    }\n  }\n  return ComputedBuildRunStatus.UNKNOWN;\n};\n\nexport const getBuildRunStatusProps = (buildRun: BuildRun): StatusProps => {\n  const succeededCondition = getSucceededCondition(buildRun);\n  if (succeededCondition) {\n    if (succeededCondition.status === 'Unknown' && succeededCondition.reason === 'Pending') {\n      return {\n        status: ComputedBuildRunStatus.PENDING,\n        title: i18next.t('shipwright-plugin~Pending'),\n      };\n    }\n    if (succeededCondition.status === 'Unknown' && succeededCondition.reason === 'Running') {\n      return {\n        status: ComputedBuildRunStatus.RUNNING,\n        title: i18next.t('shipwright-plugin~Running'),\n      };\n    }\n    if (succeededCondition.status === 'True') {\n      return {\n        status: ComputedBuildRunStatus.SUCCEEDED,\n        title: i18next.t('shipwright-plugin~Succeeded'),\n      };\n    }\n    if (succeededCondition.status === 'False') {\n      return {\n        status: ComputedBuildRunStatus.FAILED,\n        title: i18next.t('shipwright-plugin~Failed'),\n      };\n    }\n  }\n  return {\n    status: ComputedBuildRunStatus.UNKNOWN,\n    title: i18next.t('shipwright-plugin~Unknown'),\n  };\n};\n\nconst BuildRunStatus: React.FC<{ buildRun: BuildRun }> = ({ buildRun }) => {\n  const status = getBuildRunStatus(buildRun);\n  const failedCondition = getSucceededCondition(buildRun);\n  return (\n    <Status {...getBuildRunStatusProps(buildRun)}>\n      {status === ComputedBuildRunStatus.FAILED ? (\n        <>\n          <pre data-test=\"failure-popup\">{failedCondition.reason}</pre>\n          {failedCondition.message}\n        </>\n      ) : null}\n    </Status>\n  );\n};\n\nexport default BuildRunStatus;\n","import { k8sCreateResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { BUILDRUN_TO_BUILD_REFERENCE_LABEL, BUILDRUN_TO_RESOURCE_MAP_LABEL } from './const';\nimport { BuildRunModel, BuildRunModelV1Alpha1 } from './models';\nimport { Build, BuildRun } from './types';\nimport { isV1Alpha1Resource } from './utils';\n\n/** Create a new BuildRun for a given Build to start it. */\nexport const startBuild = async (build: Build): Promise<BuildRun> => {\n  const resourceMapLabel = build.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] || null;\n  let newBuildRunData: BuildRun;\n\n  if (isV1Alpha1Resource(build)) {\n    newBuildRunData = {\n      apiVersion: 'shipwright.io/v1alpha1',\n      kind: 'BuildRun',\n      metadata: {\n        namespace: build.metadata.namespace,\n        generateName: `${build.metadata.name}-`,\n        labels: {\n          [BUILDRUN_TO_BUILD_REFERENCE_LABEL]: build.metadata.name,\n          ...(resourceMapLabel ? { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } : {}),\n        },\n      },\n      spec: {\n        buildRef: {\n          name: build.metadata.name,\n        },\n      },\n    };\n  } else {\n    newBuildRunData = {\n      apiVersion: 'shipwright.io/v1beta1',\n      kind: 'BuildRun',\n      metadata: {\n        namespace: build.metadata.namespace,\n        generateName: `${build.metadata.name}-`,\n        labels: {\n          [BUILDRUN_TO_BUILD_REFERENCE_LABEL]: build.metadata.name,\n          ...(resourceMapLabel ? { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } : {}),\n        },\n      },\n      spec: {\n        build: {\n          name: build.metadata.name,\n        },\n      },\n    };\n  }\n  return k8sCreateResource({\n    model: isV1Alpha1Resource(newBuildRunData) ? BuildRunModelV1Alpha1 : BuildRunModel,\n    data: newBuildRunData,\n  });\n};\n\n/**\n * Return if re-run is supported for a specific BuildRun.\n *\n * Checks that BuildRun has a buildRef or buildSpec. Doesn't check any permissions!\n */\nexport const canRerunBuildRun = (buildRun: BuildRun): boolean => {\n  const hasBuildRef = isV1Alpha1Resource(buildRun)\n    ? !!buildRun.spec?.buildRef?.name\n    : !!buildRun.spec?.build?.name;\n  const hasBuildSpec = isV1Alpha1Resource(buildRun)\n    ? !!buildRun.spec?.buildSpec\n    : !!buildRun.spec?.build?.spec;\n\n  return hasBuildRef || hasBuildSpec;\n};\n\n/**\n * Create a new BuildRun for a given BuildRun to re-run it.\n *\n * Will fail for BuildRuns without buildRef or buildSpec. See `canRerunBuildRun`\n */\nexport const rerunBuildRun = async (buildRun: BuildRun): Promise<BuildRun> => {\n  const buildRefName = isV1Alpha1Resource(buildRun)\n    ? buildRun.spec?.buildRef?.name\n    : buildRun.spec?.build?.name;\n  const buildSpec = isV1Alpha1Resource(buildRun)\n    ? buildRun.spec?.buildSpec\n    : buildRun.spec?.build?.spec;\n  const resourceMapLabel = buildRun.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] || null;\n\n  if (buildRefName) {\n    const generateName = buildRun.metadata.generateName || `${buildRefName}-`;\n    let newBuildRunData: BuildRun;\n\n    if (isV1Alpha1Resource(buildRun)) {\n      newBuildRunData = {\n        apiVersion: 'shipwright.io/v1alpha1',\n        kind: 'BuildRun',\n        metadata: {\n          namespace: buildRun.metadata.namespace,\n          generateName,\n          labels: {\n            [BUILDRUN_TO_BUILD_REFERENCE_LABEL]: buildRefName,\n            ...(resourceMapLabel ? { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } : {}),\n          },\n        },\n        spec: {\n          buildRef: {\n            name: buildRefName,\n          },\n        },\n      };\n    } else {\n      newBuildRunData = {\n        apiVersion: 'shipwright.io/v1beta1',\n        kind: 'BuildRun',\n        metadata: {\n          namespace: buildRun.metadata.namespace,\n          generateName,\n          labels: {\n            [BUILDRUN_TO_BUILD_REFERENCE_LABEL]: buildRefName,\n            ...(resourceMapLabel ? { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } : {}),\n          },\n        },\n        spec: {\n          build: {\n            name: buildRefName,\n          },\n        },\n      };\n    }\n\n    return k8sCreateResource({\n      model: isV1Alpha1Resource(newBuildRunData) ? BuildRunModelV1Alpha1 : BuildRunModel,\n      data: newBuildRunData,\n    });\n  }\n\n  if (buildSpec) {\n    const generateName = buildRun.metadata.generateName || `${buildRun.metadata.name}-`;\n    let newBuildRunData: BuildRun;\n\n    if (isV1Alpha1Resource(buildRun)) {\n      newBuildRunData = {\n        apiVersion: 'shipwright.io/v1alpha1',\n        kind: 'BuildRun',\n        metadata: {\n          namespace: buildRun.metadata.namespace,\n          generateName,\n          ...(resourceMapLabel\n            ? { labels: { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } }\n            : {}),\n        },\n        spec: {\n          buildSpec,\n        },\n      };\n    } else {\n      newBuildRunData = {\n        apiVersion: 'shipwright.io/v1beta1',\n        kind: 'BuildRun',\n        metadata: {\n          namespace: buildRun.metadata.namespace,\n          generateName,\n          ...(resourceMapLabel\n            ? { labels: { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } }\n            : {}),\n        },\n        spec: {\n          build: {\n            spec: buildSpec,\n          },\n        },\n      };\n    }\n    return k8sCreateResource({\n      model: isV1Alpha1Resource(newBuildRunData) ? BuildRunModelV1Alpha1 : BuildRunModel,\n      data: newBuildRunData,\n    });\n  }\n\n  if (isV1Alpha1Resource(buildRun)) {\n    throw new Error('Could not rerun BuildRun without buildRef.name or inline buildSpec.');\n  } else {\n    throw new Error('Could not rerun BuildRun without build.name or inline buildSpec.');\n  }\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport ShipwrightBuildDecorator from './ShipwrightBuildDecorator';\n\nexport const getShipWrightBuildDecorator = (\n  element: Node,\n  radius: number,\n  x: number,\n  y: number,\n) => {\n  const overviewItem = element.getData()?.resources;\n\n  const { builds, buildRuns, obj } = overviewItem || {};\n\n  if (!buildRuns) {\n    return null;\n  }\n\n  return (\n    <ShipwrightBuildDecorator\n      key=\"shipwright-buildruns\"\n      radius={radius}\n      x={x}\n      y={y}\n      build={builds}\n      buildRuns={buildRuns}\n      resource={obj}\n    />\n  );\n};\n","import { Model } from '@patternfly/react-topology';\nimport { TopologyDataResources } from '@console/topology/src/topology-types';\nimport { getTopologyResourceObject } from '@console/topology/src/utils';\nimport { BUILDRUN_TO_RESOURCE_MAP_LABEL } from '../../const';\n\nexport const getShipwrightDataModelReconcilor = (\n  model: Model,\n  resources: TopologyDataResources,\n): void => {\n  if (!model || !model.nodes) {\n    return;\n  }\n\n  model.nodes.forEach((node) => {\n    const resource = getTopologyResourceObject(node.data);\n\n    const resourcePartOf = resource?.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL];\n    if (!resourcePartOf) {\n      return;\n    }\n\n    /* Fixing the issue occuring during Knative Service creation */\n    if (!node.data.resources) {\n      node.data.resources = {};\n    }\n\n    if (\n      resources?.builds?.data.find(\n        (build) => build.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] === resourcePartOf,\n      )\n    ) {\n      node.data.resources.builds = resources?.builds?.data;\n      node.data.resources.buildRuns = resources?.buildRuns?.data;\n    }\n  });\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport TopologySideBarTabSection from '@console/topology/src/components/side-bar/TopologySideBarTabSection';\nimport BuildsOverview from './BuildOverview';\n\nexport const useBuildSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const data = element.getData();\n  const resources = data?.resources;\n\n  // This check is based on the properties added through getShipwrightDataModelReconciler\n  if (!resources?.builds) {\n    return [undefined, true, undefined];\n  }\n\n  const section = (\n    <TopologySideBarTabSection>\n      <BuildsOverview item={resources} />\n    </TopologySideBarTabSection>\n  );\n  return [section, true, undefined];\n};\n"],"sourceRoot":""}