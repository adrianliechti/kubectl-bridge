{"version":3,"sources":["webpack:///./public/components/modals/delete-namespace-modal.tsx"],"names":["DeleteNamespaceModal","cancel","close","kind","resource","navigate","t","handlePromise","inProgress","errorMessage","confirmed","setConfirmed","dispatch","activeNamespace","state","setLastNamespace","onSubmit","event","preventDefault","then","metadata","name","oldPath","window","location","pathname","newPath","plural","catch","className","label","labelKey","ns","type","onKeyUp","e","currentTarget","value","placeholder","autoFocus","submitText","submitDisabled","submitDanger","deleteNamespaceModal"],"mappings":"6FAAA,sMA2BO,MAAMA,EAA4D,EACvEC,SACAC,QACAC,OACAC,eAEA,MAAMC,EAAW,yBACX,EAAEC,GAAM,4BACPC,EAAeC,EAAYC,GAAgB,eAC3CC,EAAWC,GAAgB,YAAe,GAM3CC,EAAW,wBACXC,EAAkB,sBAAaC,GAAqB,YAAmBA,KACtE,CAAEC,GAAoB,aAC3B,KACA,MA8BF,OACE,wBAAMC,SA5BUC,IAChBA,EAAMC,iBACNX,EAAc,aAAQJ,EAAMC,IACzBe,KAAK,KACJ,GAAIf,EAASgB,SAASC,OAASR,EAAiB,CAC9C,GAAI,MAAuBA,EAAiB,CAC1C,MAAMS,EAAUC,OAAOC,SAASC,SAC1BC,EAAU,YAAqB,IAAoBJ,EAASC,OAAOC,UACrEE,IAAYJ,GACdjB,EAASqB,GAGbd,EAAS,YAAmB,MAC5BG,EAAiB,KAEnBb,aACAG,EAAS,gBAAgBF,EAAKwB,UAE/BC,MAAM,SAUiBP,KAAK,OAAOQ,UAAU,iBAC9C,gBAAC,IAAU,CAACA,UAAU,gBACpB,gBAAC,KAA6B,CAACA,UAAU,oBAAqB,IAC7DvB,EAAE,2BAA4B,CAAEwB,MAAOxB,EAAEH,EAAK4B,aAEjD,gBAAC,IAAS,KACR,yBACE,gBAAC,QAAK,CAACzB,EAAGA,EAAG0B,GAAG,U,sGAEA,IACd,0BAAQH,UAAU,iBAAiB,CAAER,KAAMjB,EAASgB,SAASC,O,MAGjE,yBACE,gBAAC,QAAK,CAACf,EAAGA,EAAG0B,GAAG,U,6BACa,IAC3B,0BAAQH,UAAU,iBAAiB,CAAER,KAAMjB,EAASgB,SAASC,O,YAGjE,yBACEY,KAAK,OAAM,YACD,qBACVJ,UAAU,uBACVK,QA5BSC,IACfxB,EAAawB,EAAEC,cAAcC,QAAUjC,EAASgB,SAASC,OA4BnDiB,YAAahC,EAAE,qBAAoB,aACvBA,EAAE,mDAAoD,CAChEwB,MAAOxB,EAAEH,EAAK4B,YAEhBQ,WAAW,KAGf,gBAAC,IAAiB,CAChBC,WAAYlC,EAAE,iBACdmC,gBAAiB/B,EACjBT,OAAQ,IAAMA,aAAM,EAANA,IACdQ,aAAcA,EACdD,WAAYA,EACZkC,cAAY,MAMPC,EAAuB,YAAoB3C","file":"delete-namespace-modal-chunk-de6de4ec71f7bfda4a0d.min.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom-v5-compat';\nimport { RootState } from '@console/internal/redux';\nimport { k8sKill, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport {\n  ALL_NAMESPACES_KEY,\n  LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n  useUserSettingsCompatibility,\n  YellowExclamationTriangleIcon,\n} from '@console/shared';\nimport { usePromiseHandler } from '@console/shared/src/hooks/promise-handler';\nimport { getActiveNamespace } from '../../reducers/ui';\nimport { setActiveNamespace, formatNamespaceRoute } from '../../actions/ui';\n\nexport const DeleteNamespaceModal: React.FC<DeleteNamespaceModalProps> = ({\n  cancel,\n  close,\n  kind,\n  resource,\n}) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [handlePromise, inProgress, errorMessage] = usePromiseHandler();\n  const [confirmed, setConfirmed] = React.useState(false);\n\n  /**\n   * This is a workaround because modal launcher renders all modals outside of main app context.\n   * This leads to namespace context not being available in modal so we access the redux store and use settings directly as a workaround.\n   *  */\n  const dispatch = useDispatch();\n  const activeNamespace = useSelector((state: RootState) => getActiveNamespace(state));\n  const [, setLastNamespace] = useUserSettingsCompatibility<string>(\n    LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n    LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  );\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handlePromise(k8sKill(kind, resource))\n      .then(() => {\n        if (resource.metadata.name === activeNamespace) {\n          if (ALL_NAMESPACES_KEY !== activeNamespace) {\n            const oldPath = window.location.pathname;\n            const newPath = formatNamespaceRoute(ALL_NAMESPACES_KEY, oldPath, window.location);\n            if (newPath !== oldPath) {\n              navigate(newPath);\n            }\n          }\n          dispatch(setActiveNamespace(ALL_NAMESPACES_KEY));\n          setLastNamespace(ALL_NAMESPACES_KEY);\n        }\n        close?.();\n        navigate(`/k8s/cluster/${kind.plural}`);\n      })\n      .catch(() => {\n        /* do nothing */\n      });\n  };\n\n  const onKeyUp = (e) => {\n    setConfirmed(e.currentTarget.value === resource.metadata.name);\n  };\n\n  return (\n    <form onSubmit={onSubmit} name=\"form\" className=\"modal-content\">\n      <ModalTitle className=\"modal-header\">\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        {t('public~Delete {{label}}?', { label: t(kind.labelKey) })}\n      </ModalTitle>\n      <ModalBody>\n        <p>\n          <Trans t={t} ns=\"public\">\n            This action cannot be undone. It will destroy all pods, services and other objects in\n            the namespace{' '}\n            <strong className=\"co-break-word\">{{ name: resource.metadata.name }}</strong>.\n          </Trans>\n        </p>\n        <p>\n          <Trans t={t} ns=\"public\">\n            Confirm deletion by typing{' '}\n            <strong className=\"co-break-word\">{{ name: resource.metadata.name }}</strong> below:\n          </Trans>\n        </p>\n        <input\n          type=\"text\"\n          data-test=\"project-name-input\"\n          className=\"pf-v5-c-form-control\"\n          onKeyUp={onKeyUp}\n          placeholder={t('public~Enter name')}\n          aria-label={t('public~Enter the name of the {{label}} to delete', {\n            label: t(kind.labelKey),\n          })}\n          autoFocus={true}\n        />\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('public~Delete')}\n        submitDisabled={!confirmed}\n        cancel={() => cancel?.()}\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitDanger\n      />\n    </form>\n  );\n};\n\nexport const deleteNamespaceModal = createModalLauncher(DeleteNamespaceModal);\n\ntype DeleteNamespaceModalProps = {\n  resource: K8sResourceKind;\n  kind: K8sKind;\n} & ModalComponentProps;\n"],"sourceRoot":""}