{"version":3,"sources":["webpack:///./public/components/replicaset.jsx","webpack:///./public/components/deployment.tsx","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx"],"names":["Details","obj","replicaSet","revision","t","className","text","resource","showPodSelector","showNodeSelector","showTolerations","containers","spec","template","heading","EnvironmentPage","props","loader","then","c","envPath","environmentComponent","rawEnvData","readOnly","ReplicaSetPods","showNodes","details","editYaml","pods","envEditor","events","ReplicaSetsDetailsPage","customActionMenu","kindObj","context","actions","options","loaded","variant","DROPDOWN","pages","kind","tableColumnClasses","columnClass","ReplicaSetTableRow","name","metadata","namespace","columnID","to","title","count1","status","replicas","count2","labels","timestamp","creationTimestamp","ReplicaSetsList","Header","sortField","transforms","id","sortFunc","Row","virtualize","ReplicaSetsPage","canCreate","ListComponent","ModifyCount","AddStorage","common","factory","menuActions","labelKey","paused","callback","catch","err","error","message","accessReview","group","apiGroup","plural","verb","deployment","getExtensionsActionsForKind","DeploymentDetailsList","label","path","strategy","type","maxUnavailable","rollingUpdate","count","maxSurge","progressDeadlineSeconds","minReadySeconds","displayName","DeploymentDetails","model","key","uid","availableReplicas","updatedReplicas","conditions","ReplicaSetsTab","selector","showTitle","DeploymentsDetailsPage","prometheusIsAvailable","metrics","href","nameKey","component","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","createProps","podData","loadError","resourceKind","deploymentData","inProgressDeploymentData","completedDeploymentData","current","previous","progressRC","completedRC","hasGutter","rc","isRollingOut","enableScaling","size","color","value","healthChecksAdded","container","readinessProbe","livenessProbe","startupProbe","healthChecksUrl","crd","AddHealthChecks","hidden","EditHealthChecks","resourceLimitsModal","m","WorkloadTableRow","customData","statusReplicas","specReplicas","WorkloadTableHeader","EditResourceLimits","hasHPAs","mapOfResources","Array","isArray","hpas","length","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","resources","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","action","actionOptions","LongArrowAltRightIcon","height","width","svgPath","yOffset","xOffset","exports","__esModule","global_Color_200","Recommendations","recommendations","recommendation","containerRecommendations","map","containerName","target","cpu","memory","VerticalPodAutoscalerRecommendations","vpas","groupVersionKind","version","isList","namespaced","verticalPodAutoscalers","vpa"],"mappings":"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","file":"deployment-chunk-6ccefcd8b0fc47843044.min.js","sourcesContent":["// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","import { createIcon } from '../createIcon';\n\nexport const LongArrowAltRightIconConfig = {\n  name: 'LongArrowAltRightIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LongArrowAltRightIcon = createIcon(LongArrowAltRightIconConfig);\n\nexport default LongArrowAltRightIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-v5-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-v5-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n"],"sourceRoot":""}