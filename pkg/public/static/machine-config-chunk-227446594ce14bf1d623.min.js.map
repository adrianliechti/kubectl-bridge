{"version":3,"sources":["webpack:///./public/components/machine-config.tsx"],"names":["machineConfigReference","machineConfigMenuActions","getExtensionsActionsForKind","factory","common","MachineConfigSummary","obj","t","resource","spec","osImageURL","pages","details","files","config","storage","className","text","map","file","i","key","path","columnGap","default","mode","overwrite","headerContent","bodyContent","isHorizontal","isFluid","toString","variant","plain","contents","source","value","decodeURIComponent","replace","editYaml","events","MachineConfigDetailsPage","props","kind","menuActions","tableColumnClasses","columnClass","MachineConfigTableRow","name","metadata","timestamp","creationTimestamp","actions","MachineConfigList","Header","title","sortField","transforms","Row","virtualize","MachineConfigPage","canCreate","rest","ListComponent"],"mappings":"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","file":"machine-config-chunk-227446594ce14bf1d623.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport {\n  Button,\n  ButtonVariant,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  Popover,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\nimport { BlueInfoCircleIcon } from '@console/dynamic-plugin-sdk/src';\n\nimport { MachineConfigKind, referenceForModel } from '../module/k8s';\nimport { MachineConfigModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  CopyToClipboard,\n  Kebab,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n} from './utils';\nimport { ResourceEventStream } from './events';\n\nexport const machineConfigReference = referenceForModel(MachineConfigModel);\nconst machineConfigMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(MachineConfigModel),\n  ...Kebab.factory.common,\n];\n\nconst MachineConfigSummary: React.SFC<MachineConfigSummaryProps> = ({ obj, t }) => (\n  <ResourceSummary resource={obj}>\n    <dt>{t('public~OS image URL')}</dt>\n    <dd>{obj.spec.osImageURL || '-'}</dd>\n  </ResourceSummary>\n);\n\nconst MachineConfigDetails: React.SFC<MachineConfigDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const files = obj.spec.config?.storage?.files;\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~MachineConfig details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <MachineConfigSummary obj={obj} t={t} />\n          </div>\n        </div>\n      </div>\n      {files && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Configuration files')} />\n          {files.map((file, i) => (\n            <div className=\"pf-v5-u-mb-xl\" key={file.path}>\n              <Flex columnGap={{ default: 'columnGapNone' }} className=\"pf-v5-u-mb-md\">\n                <TextContent>\n                  <Text data-test={`config-file-path-${i}`}>{file.path}</Text>\n                </TextContent>\n                {(file.mode || file.overwrite) && (\n                  <Popover\n                    headerContent={t('public~Properties')}\n                    bodyContent={\n                      <DescriptionList isHorizontal isFluid>\n                        <DescriptionListGroup>\n                          {file.mode && (\n                            <>\n                              <DescriptionListTerm>{t('public~Mode')}</DescriptionListTerm>\n                              <DescriptionListDescription>{file.mode}</DescriptionListDescription>\n                            </>\n                          )}\n                          {file.overwrite && (\n                            <>\n                              <DescriptionListTerm>{t('public~Overwrite')}</DescriptionListTerm>\n                              <DescriptionListDescription>\n                                {file.overwrite.toString()}\n                              </DescriptionListDescription>\n                            </>\n                          )}\n                        </DescriptionListGroup>\n                      </DescriptionList>\n                    }\n                  >\n                    <Button\n                      variant={ButtonVariant.plain}\n                      aria-label={'public~Info'}\n                      className=\"pf-v5-u-ml-sm pf-v5-u-p-0\"\n                    >\n                      <BlueInfoCircleIcon />\n                    </Button>\n                  </Popover>\n                )}\n              </Flex>\n              {file.contents?.source && (\n                <CopyToClipboard\n                  value={decodeURIComponent(file.contents.source).replace(/^(data:,)/, '')}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst pages = [\n  navFactory.details(MachineConfigDetails),\n  navFactory.editYaml(),\n  navFactory.events(ResourceEventStream),\n];\n\nexport const MachineConfigDetailsPage: React.SFC<any> = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      kind={machineConfigReference}\n      menuActions={machineConfigMenuActions}\n      pages={pages}\n    />\n  );\n};\n\nconst tableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  '',\n  Kebab.columnClass,\n];\n\nconst MachineConfigTableRow: React.FC<RowFunctionArgs<MachineConfigKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={machineConfigReference} name={obj.metadata.name} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {_.get(\n          obj,\n          [\n            'metadata',\n            'annotations',\n            'machineconfiguration.openshift.io/generated-by-controller-version',\n          ],\n          '-',\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {_.get(obj, 'spec.config.ignition.version') || '-'}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        {_.get(obj, 'spec.osImageURL') || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={machineConfigMenuActions}\n          kind={machineConfigReference}\n          resource={obj}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst MachineConfigList: React.SFC<any> = (props) => {\n  const { t } = useTranslation();\n  const MachineConfigTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Generated by controller'),\n        sortField:\n          \"metadata.annotations['machineconfiguration.openshift.io/generated-by-controller-version']\",\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('public~Ignition version'),\n        sortField: 'spec.config.ignition.version',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~OS image URL'),\n        sortField: 'spec.osImageURL',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[5] },\n      },\n    ];\n  };\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~MachineConfigs')}\n      Header={MachineConfigTableHeader}\n      Row={MachineConfigTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const MachineConfigPage: React.SFC<any> = ({ canCreate = true, ...rest }) => (\n  <ListPage\n    {...rest}\n    canCreate={canCreate}\n    ListComponent={MachineConfigList}\n    kind={machineConfigReference}\n  />\n);\n\ntype MachineConfigDetailsProps = {\n  obj: MachineConfigKind;\n};\n\ntype MachineConfigSummaryProps = {\n  obj: MachineConfigKind;\n  t: TFunction;\n};\n"],"sourceRoot":""}