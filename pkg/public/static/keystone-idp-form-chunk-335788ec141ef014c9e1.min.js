(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{5534:function(e,t,n){"use strict";n.r(t),n.d(t,"DroppableFileInput",(function(){return f})),n.d(t,"AddKeystonePage",(function(){return v}));var a=n(0),r=n(137),c=n(22),i=n(7),l=n(14),o=n(966),s=n(19),u=n(10),d=n(8),m=n(5),p=n(5957),b=n(5958),h=n(6040);const f=e=>a.createElement(m.c,Object.assign({loader:()=>Promise.resolve().then(n.bind(null,2223)).then(e=>e.DroppableFileInput)},e)),v=()=>{const e=Object(l.useNavigate)(),[t,n]=a.useState(!1),[v,g]=a.useState(""),[y,E]=a.useState("keystone"),[N,C]=a.useState(""),[k,O]=a.useState(""),[j,P]=a.useState(""),[S,T]=a.useState(""),[A,q]=a.useState(""),{t:F}=Object(i.useTranslation)(),M=e=>(n(!0),e.then(e=>(e=>(n(!1),g(""),e))(e),e=>(e=>{const t=e.message||F("public~An error occurred. Please try again.");return n(!1),g(t),Promise.reject(t)})(e))),w=()=>{if(!S)return Promise.resolve(null);const e={apiVersion:"v1",kind:"Secret",metadata:{generateName:"keystone-tls-",namespace:"openshift-config"},stringData:{"tls.crt":S,"tls.key":A}};return M(Object(d.jb)(u.SecretModel,e))},D=()=>{if(!j)return Promise.resolve(null);const e={apiVersion:"v1",kind:"ConfigMap",metadata:{generateName:"keystone-ca-",namespace:"openshift-config"},data:{"ca.crt":j}};return M(Object(d.jb)(u.ConfigMapModel,e))},K=(e,t,n,a)=>{const r={name:y,type:"Keystone",mappingMethod:"claim",keystone:{domainName:N,url:k}};return n&&(r.keystone.ca={name:n}),t&&(r.keystone.tlsClientCert={name:t},r.keystone.tlsClientKey={name:t}),M(Object(p.a)(e,r,a))},x=F("public~Add Identity Provider: Keystone Authentication");return a.createElement("div",{className:"co-m-pane__form"},a.createElement(r.a,null,a.createElement("title",null,x)),a.createElement(m.Z,{title:x,helpText:F("public~Adding Keystone enables shared authentication with an OpenStack server configured to store users in an internal Keystone database.")}),a.createElement("div",{className:"co-m-pane__body"},a.createElement("form",{onSubmit:t=>{t.preventDefault(),c.a(A)===c.a(S)?(g(""),M(Object(p.b)()).then(t=>{const n=S?p.c.secret:"",a=j?p.c.ca:"";K(t,n,a,!0).then(()=>{const n=[w(),D()];Promise.all(n).then(([e,n])=>{const a=n?n.metadata.name:"",r=e?e.metadata.name:"";return K(t,r,a)}).then(()=>{Object(p.d)(e)})}).catch(e=>{g(e)})})):g(F("public~Values for certificate and key should both be either excluded or provided."))},name:"form",className:"co-m-pane__body-group"},a.createElement(b.a,{value:y,onChange:e=>E(e.currentTarget.value)}),a.createElement("div",{className:"form-group"},a.createElement("label",{className:"control-label co-required",htmlFor:"domain-name"},F("public~Domain name")),a.createElement("input",{className:"pf-v5-c-form-control",type:"text",onChange:e=>C(e.currentTarget.value),value:N,id:"domain-name",required:!0})),a.createElement("div",{className:"form-group"},a.createElement("label",{className:"control-label co-required",htmlFor:"url"},F("public~URL")),a.createElement("input",{className:"pf-v5-c-form-control",type:"url",onChange:e=>O(e.currentTarget.value),value:k,id:"url","aria-describedby":"idp-url-help",required:!0}),a.createElement("p",{className:"help-block",id:"idp-url-help"},F("public~The remote URL to connect to."))),a.createElement(h.a,{value:j,onChange:e=>P(e)}),a.createElement("div",{className:"form-group"},a.createElement(f,{onChange:e=>T(e),inputFileData:S,id:"cert-file-input",label:F("public~Certificate"),hideContents:!0,inputFieldHelpText:F("public~PEM-encoded TLS client certificate to present when connecting to the server.")})),a.createElement("div",{className:"form-group"},a.createElement(f,{onChange:e=>q(e),inputFileData:A,id:"key-file-input",label:F("public~Key"),hideContents:!0,inputFieldHelpText:F("public~PEM-encoded TLS private key for the client certificate. Required if certificate is specified.")})),a.createElement(m.g,{errorMessage:v,inProgress:t},a.createElement(o.a,{className:"pf-v5-c-form"},a.createElement(s.a,{type:"submit",variant:"primary","data-test-id":"add-idp"},F("public~Add")),a.createElement(s.a,{type:"button",variant:"secondary",onClick:()=>e(-1)},F("public~Cancel")))))))}},5957:function(e,t,n){"use strict";n.d(t,"b",(function(){return l})),n.d(t,"a",(function(){return o})),n.d(t,"d",(function(){return s})),n.d(t,"c",(function(){return u}));var a=n(22),r=n(10),c=n(8),i=n(5);const l=()=>Object(c.kb)(r.OAuthModel,"cluster"),o=(e,t,n)=>{const i=a.a(e.spec.identityProviders)?{op:"add",path:"/spec/identityProviders",value:[t]}:{op:"add",path:"/spec/identityProviders/-",value:t};return Object(c.pb)(r.OAuthModel,e,[i],n?{queryParams:{dryRun:"All"}}:{})},s=e=>{e(Object(i.uc)(r.OAuthModel,"cluster")+"?idpAdded=true")},u={secret:"secret-name",ca:"ca-name"}},5958:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=n(0),r=n(7);const c=({value:e,onChange:t})=>{const{t:n}=Object(r.useTranslation)();return a.createElement("div",{className:"form-group"},a.createElement("label",{className:"control-label co-required",htmlFor:"idp-name"},n("public~Name")),a.createElement("input",{className:"pf-v5-c-form-control",type:"text",onChange:t,value:e,"aria-describedby":"idp-name-help",id:"idp-name",required:!0}),a.createElement("p",{className:"help-block",id:"idp-name-help"},n("public~Unique name of the new identity provider. This cannot be changed later.")))}},6040:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var a=n(0),r=n(7),c=n(5);const i=e=>a.createElement(c.c,Object.assign({loader:()=>Promise.resolve().then(n.bind(null,2223)).then(e=>e.DroppableFileInput)},e)),l=({value:e,onChange:t,isRequired:n=!1})=>{const{t:c}=Object(r.useTranslation)();return a.createElement("div",{className:"form-group"},a.createElement(i,{onChange:t,inputFileData:e,id:"idp-file-input",label:c("public~CA file"),isRequired:n,hideContents:!0}))}}}]);
//# sourceMappingURL=keystone-idp-form-chunk-335788ec141ef014c9e1.min.js.map