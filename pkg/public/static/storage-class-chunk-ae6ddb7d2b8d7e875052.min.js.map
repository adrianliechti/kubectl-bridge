{"version":3,"sources":["webpack:///./public/components/storage-class.tsx"],"names":["StorageClassReference","common","factory","menuActions","getExtensionsActionsForKind","isDefaultClass","storageClass","annotations","tableColumnClasses","columnClass","StorageClassDetails","obj","t","className","text","resource","label","path","StorageClassTableRow","kind","name","metadata","provisioner","reclaimPolicy","actions","StorageClassList","props","Header","title","sortField","transforms","Row","virtualize","displayName","StorageClassPage","ListComponent","canCreate","filterLabel","createProps","to","createButtonText","StorageClassDetailsPage","pages","details","editYaml"],"mappings":"6FAAA,gVAmBO,MAAMA,EAAkD,gBAEzD,OAAEC,GAAW,IAAMC,QACnBC,EAAc,IAAI,IAAMC,4BAA4B,wBAAuBH,GAIpEI,EAAkBC,IAC7B,MAAMC,EAAc,IAAMD,EAAc,yBAA2B,GACnE,MAC0C,SAAxCC,EAL2B,gDAMwB,SAAnDA,EALsC,qDASpCC,EAAqB,CACzB,qBACA,qBACA,oDACA,IAAMC,aAGFC,EAA0D,EAAGC,UACjE,MAAM,EAAEC,GAAM,2BACd,OACE,gCACE,uBAAKC,UAAU,mBACb,gBAAC,KAAc,CAACC,KAAMF,EAAE,iCACxB,uBAAKC,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,KAAe,CAACE,SAAUJ,GACzB,gBAAC,IAAW,CAACK,MAAOJ,EAAE,sBAAuBD,IAAKA,EAAKM,KAAK,kBAGhE,uBAAKJ,UAAU,YACb,sBAAIA,UAAU,sBACZ,gBAAC,IAAW,CAACG,MAAOJ,EAAE,yBAA0BD,IAAKA,EAAKM,KAAK,kBAC/D,0BAAKL,EAAE,yBACP,0BAAKP,EAAeM,GAAOC,EAAE,eAAiBA,EAAE,iBAChD,gBAAC,IAAW,CACVI,MAAOJ,EAAE,8BACTD,IAAKA,EACLM,KAAK,4BAUfC,EAA4E,EAAGP,UACnF,MAAM,EAAEC,GAAM,2BACd,OACE,gCACE,gBAAC,IAAS,CAACC,UAAW,EAAWL,EAAmB,GAAI,kBACtD,gBAAC,KAAY,CAACW,KAAMnB,EAAuBoB,KAAMT,EAAIU,SAASD,MAC3Df,EAAeM,IACd,wBAAME,UAAU,gD,KACLD,EAAE,qBAKnB,gBAAC,IAAS,CAACC,UAAW,EAAWL,EAAmB,GAAI,kBACrDG,EAAIW,aAEP,gBAAC,IAAS,CAACT,UAAWL,EAAmB,IAAKG,EAAIY,eAAiB,KACnE,gBAAC,IAAS,CAACV,UAAWL,EAAmB,IACvC,gBAAC,KAAa,CAACgB,QAASrB,EAAagB,KAAMnB,EAAuBe,SAAUJ,OAMvEc,EAA8BC,IACzC,MAAM,EAAEd,GAAM,2BA2Bd,OACE,gBAAC,IAAK,iBACAc,EAAK,cACGd,EAAE,yBACde,OA9B4B,IACvB,CACL,CACEC,MAAOhB,EAAE,eACTiB,UAAW,gBACXC,WAAY,CAAC,KACbJ,MAAO,CAAEb,UAAWL,EAAmB,KAEzC,CACEoB,MAAOhB,EAAE,sBACTiB,UAAW,cACXC,WAAY,CAAC,KACbJ,MAAO,CAAEb,UAAWL,EAAmB,KAEzC,CACEoB,MAAOhB,EAAE,yBACTiB,UAAW,gBACXC,WAAY,CAAC,KACbJ,MAAO,CAAEb,UAAWL,EAAmB,KAEzC,CACEoB,MAAO,GACPF,MAAO,CAAEb,UAAWL,EAAmB,MASzCuB,IAAKb,EACLc,YAAU,MAIhBP,EAAiBQ,YAAc,mBAExB,MAAMC,EAAqDR,IAChE,MAGM,EAAEd,GAAM,2BACd,OACE,gBAAC,IAAQ,iBACH,IAAOc,EAAO,QAAO,CACzBE,MAAOhB,EAAE,yBACTO,KAAMnB,EACNmC,cAAeV,EACfW,WAAW,EACXC,YAAaX,EAAMW,YACnBC,YAZgB,CAClBC,GAAI,yCAYFC,iBAAkB5B,EAAE,kCAIb6B,EAAqCf,IAChD,MAAMgB,EAAQ,CAAC,KAAWC,QAAQ,aAAYjC,IAAuB,KAAWkC,YAChF,OACE,gBAAC,IAAW,iBAAKlB,EAAK,CAAEP,KAAMnB,EAAuBG,YAAaA,EAAauC,MAAOA,MAG1FD,EAAwBR,YAAc","file":"storage-class-chunk-ae6ddb7d2b8d7e875052.min.js","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport * as classNames from 'classnames';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  DetailsItem,\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  detailsPage,\n  navFactory,\n} from './utils';\nimport { StorageClassResourceKind, K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { StorageClassModel } from '../models';\n\nexport const StorageClassReference: K8sResourceKindReference = 'StorageClass';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(StorageClassModel), ...common];\n\nconst defaultClassAnnotation = 'storageclass.kubernetes.io/is-default-class';\nconst betaDefaultStorageClassAnnotation = 'storageclass.beta.kubernetes.io/is-default-class';\nexport const isDefaultClass = (storageClass: K8sResourceKind) => {\n  const annotations = _.get(storageClass, 'metadata.annotations') || {};\n  return (\n    annotations[defaultClassAnnotation] === 'true' ||\n    annotations[betaDefaultStorageClassAnnotation] === 'true'\n  );\n};\n\nconst tableColumnClasses = [\n  'pf-v5-u-w-42-on-md',\n  'pf-v5-u-w-42-on-md',\n  'pf-m-hidden pf-m-visible-on-md pf-v5-u-w-16-on-md',\n  Kebab.columnClass,\n];\n\nconst StorageClassDetails: React.FC<StorageClassDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~StorageClass details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={obj}>\n              <DetailsItem label={t('public~Provisioner')} obj={obj} path=\"provisioner\" />\n            </ResourceSummary>\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('public~Reclaim policy')} obj={obj} path=\"reclaimPolicy\" />\n              <dt>{t('public~Default class')}</dt>\n              <dd>{isDefaultClass(obj) ? t('public~True') : t('public~False')}</dd>\n              <DetailsItem\n                label={t('public~Volume binding mode')}\n                obj={obj}\n                path=\"volumeBindingMode\"\n              />\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst StorageClassTableRow: React.FC<RowFunctionArgs<StorageClassResourceKind>> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n        <ResourceLink kind={StorageClassReference} name={obj.metadata.name}>\n          {isDefaultClass(obj) && (\n            <span className=\"small text-muted co-resource-item__help-text\">\n              &ndash; {t('public~Default')}\n            </span>\n          )}\n        </ResourceLink>\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {obj.provisioner}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{obj.reclaimPolicy || '-'}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={StorageClassReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const StorageClassList: React.FC = (props) => {\n  const { t } = useTranslation();\n  const StorageClassTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Provisioner'),\n        sortField: 'provisioner',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('public~Reclaim policy'),\n        sortField: 'reclaimPolicy',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[3] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~StorageClasses')}\n      Header={StorageClassTableHeader}\n      Row={StorageClassTableRow}\n      virtualize\n    />\n  );\n};\nStorageClassList.displayName = 'StorageClassList';\n\nexport const StorageClassPage: React.FC<StorageClassPageProps> = (props) => {\n  const createProps = {\n    to: '/k8s/cluster/storageclasses/~new/form',\n  };\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {..._.omit(props, 'mock')}\n      title={t('public~StorageClasses')}\n      kind={StorageClassReference}\n      ListComponent={StorageClassList}\n      canCreate={true}\n      filterLabel={props.filterLabel}\n      createProps={createProps}\n      createButtonText={t('public~Create StorageClass')}\n    />\n  );\n};\nexport const StorageClassDetailsPage: React.FC = (props) => {\n  const pages = [navFactory.details(detailsPage(StorageClassDetails)), navFactory.editYaml()];\n  return (\n    <DetailsPage {...props} kind={StorageClassReference} menuActions={menuActions} pages={pages} />\n  );\n};\nStorageClassDetailsPage.displayName = 'StorageClassDetailsPage';\n\nexport type StorageClassDetailsProps = {\n  obj: any;\n};\n\nexport type StorageClassPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n"],"sourceRoot":""}