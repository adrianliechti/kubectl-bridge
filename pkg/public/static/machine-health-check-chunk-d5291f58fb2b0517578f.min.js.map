{"version":3,"sources":["webpack:///./public/components/machine-health-check.tsx"],"names":["common","factory","menuActions","getExtensionsActionsForKind","machineHealthCheckReference","tableColumnClasses","columnClass","MachineHealthCheckTableRow","obj","className","kind","name","metadata","namespace","columnID","timestamp","creationTimestamp","actions","resource","MachineHealthCheckList","props","t","Header","title","sortField","transforms","id","Row","virtualize","UnhealthyConditionsTable","spec","unhealthyConditions","label","map","status","timeout","type","i","key","MachineHealthCheckDetails","text","path","selector","MachineHealthCheckPage","ListComponent","canCreate","MachineHealthCheckDetailsPage","pages","details","editYaml"],"mappings":"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","file":"machine-health-check-chunk-d5291f58fb2b0517578f.min.js","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { MachineHealthCheckModel, MachineModel } from '../models';\nimport { K8sResourceKind, MachineHealthCheckKind } from '../module/k8s/types';\nimport { referenceForModel } from '../module/k8s/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  DetailsItem,\n  EmptyBox,\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  Timestamp,\n  navFactory,\n} from './utils';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(MachineHealthCheckModel), ...common];\nconst machineHealthCheckReference = referenceForModel(MachineHealthCheckModel);\n\nconst tableColumnClasses = ['', '', 'pf-m-hidden pf-m-visible-on-md', Kebab.columnClass];\n\nconst MachineHealthCheckTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={machineHealthCheckReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={machineHealthCheckReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nconst MachineHealthCheckList: React.FC = (props) => {\n  const { t } = useTranslation();\n  const MachineHealthCheckTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[3] },\n      },\n    ];\n  };\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~MachineHealthChecks')}\n      Header={MachineHealthCheckTableHeader}\n      Row={MachineHealthCheckTableRow}\n      virtualize\n    />\n  );\n};\n\nconst UnhealthyConditionsTable: React.FC<{ obj: K8sResourceKind }> = ({ obj }) => {\n  const { t } = useTranslation();\n  return _.isEmpty(obj.spec.unhealthyConditions) ? (\n    <EmptyBox label={t('public~Unhealthy conditions')} />\n  ) : (\n    <table className=\"pf-v5-c-table pf-m-compact pf-m-border-rows\">\n      <thead className=\"pf-v5-c-table__thead\">\n        <tr className=\"pf-v5-c-table__tr\">\n          <th className=\"pf-v5-c-table__th\">{t('public~Type')}</th>\n          <th className=\"pf-v5-c-table__th\">{t('public~Status')}</th>\n          <th className=\"pf-v5-c-table__th\">{t('public~Timeout')}</th>\n        </tr>\n      </thead>\n      <tbody className=\"pf-v5-c-table__tbody\">\n        {obj.spec.unhealthyConditions.map(({ status, timeout, type }, i: number) => (\n          <tr className=\"pf-v5-c-table__tr\" key={i}>\n            <td className=\"pf-v5-c-table__td\">{type}</td>\n            <td className=\"pf-v5-c-table__td\">{status}</td>\n            <td className=\"pf-v5-c-table__td\">{timeout}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst MachineHealthCheckDetails: React.FC<MachineHealthCheckDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~MachineHealthCheck details')} />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={obj}>\n                <DetailsItem label={t('public~Selector')} obj={obj} path=\"spec.selector\">\n                  <Selector\n                    kind={referenceForModel(MachineModel)}\n                    selector={_.get(obj, 'spec.selector')}\n                    namespace={obj.metadata.namespace}\n                  />\n                </DetailsItem>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <DetailsItem label={t('public~Max unhealthy')} obj={obj} path=\"spec.maxUnhealthy\" />\n                <DetailsItem\n                  label={t('public~Expected machines')}\n                  obj={obj}\n                  path=\"status.expectedMachines\"\n                />\n                <DetailsItem\n                  label={t('public~Current healthy')}\n                  obj={obj}\n                  path=\"status.currentHealthy\"\n                />\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Unhealthy conditions')} />\n        <UnhealthyConditionsTable obj={obj} />\n      </div>\n    </>\n  );\n};\n\nexport const MachineHealthCheckPage: React.FC<MachineHealthCheckPageProps> = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={MachineHealthCheckList}\n    kind={machineHealthCheckReference}\n    canCreate={true}\n  />\n);\n\nexport const MachineHealthCheckDetailsPage: React.FC = (props) => (\n  <DetailsPage\n    {...props}\n    menuActions={menuActions}\n    kind={machineHealthCheckReference}\n    pages={[navFactory.details(MachineHealthCheckDetails), navFactory.editYaml()]}\n  />\n);\n\ntype MachineHealthCheckPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\nexport type MachineHealthCheckDetailsProps = {\n  obj: MachineHealthCheckKind;\n};\n"],"sourceRoot":""}