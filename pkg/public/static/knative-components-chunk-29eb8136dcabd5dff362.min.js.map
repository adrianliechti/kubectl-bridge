{"version":3,"sources":["webpack:///./packages/knative-plugin/src/topology/isKnativeResource.ts","webpack:///./packages/knative-plugin/src/topology/const.ts"],"names":["isKnativeResource","resource","model","nodes","length","kind","eventResources","filter","n","type","map","uid","metadata","ownerReferences","find","eventSource","labels","startsWith","name","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND"],"mappings":"6FACA,gGAOA,MAEaA,EAAoB,CAACC,EAA2BC,K,kBAC3D,KAAiB,QAAZ,EAAAA,aAAK,EAALA,EAAOC,aAAK,eAAEC,QACjB,OAAO,EAET,GAAIH,EAASI,OAAS,kBAAgBA,KACpC,OAAO,EAGT,MAAMC,EAAiBJ,EAAMC,MAC1BI,OACEC,GACCA,EAAEC,OAAS,KACXD,EAAEC,OAAS,KACXD,EAAEC,OAAS,KAEdC,IAAKF,GAAOA,EAAmBP,UAYlC,UAV+BU,EAU6B,QAAlC,EAAiB,QAAjB,EAAAV,EAASW,gBAAQ,eAAEC,uBAAe,eAAG,GAAGF,QAR9DL,aAAc,EAAdA,EAAgBQ,KACfC,I,cACC,OAAoB,QAApB,EAAAA,EAAYH,gBAAQ,eAAED,OAAQA,IACuB,QAArD,EAAyB,QAAzB,EAAiB,QAAjB,EAAAV,EAASW,gBAAQ,eAAEI,cAAM,eAAG,YAAyB,eAAEC,WACjC,QAApB,EAAAF,EAAYH,gBAAQ,eAAEM,cAQQ,QAAlC,EAAiB,QAAjB,EAAAjB,EAASW,gBAAQ,eAAEC,uBAAe,eAAG,GAAGR,QAAS,IAAoBA,SAIvC,QAAzB,EAAiB,QAAjB,EAAAJ,EAASW,gBAAQ,eAAEI,cAAM,eArCN,uCAmBE,IAACL,I,kCC3BjC,knBAEO,MAAMQ,EAAoB,eACpBC,EAAkB,aAClBC,EAAkB,aAClBC,EAA0B,qBAC1BC,EAAyB,oBACzBC,EAAuB,kBACvBC,EAA6B,0BAC7BC,EAAqB,eACrBC,EAA0B,oBAC1BC,EAAuB,kBACvBC,EAAwB,mBACxBC,EAAwB,mBACxBC,EAAgB,WAEhBC,EAA2B,IAC3BC,EAA4B,IAC5BC,EAA6B,CACxC,IACA,IACA,IAAoB,GACpB,KAGWC,EAAsB,EAGtBC,EAAW","file":"knative-components-chunk-29eb8136dcabd5dff362.min.js","sourcesContent":["import { Model } from '@patternfly/react-topology';\nimport { DeploymentModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '@console/topology/src/topology-types';\nimport { CAMEL_SOURCE_INTEGRATION } from '../const';\nimport { EventingBrokerModel } from '../models';\nimport { TYPE_EVENT_SINK, TYPE_EVENT_SOURCE, TYPE_EVENT_SOURCE_KAFKA } from './const';\n\nconst KNATIVE_CONFIGURATION = 'serving.knative.dev/configuration';\n\nexport const isKnativeResource = (resource: K8sResourceKind, model: Model): boolean => {\n  if (!model?.nodes?.length) {\n    return false;\n  }\n  if (resource.kind !== DeploymentModel.kind) {\n    return false;\n  }\n\n  const eventResources = model.nodes\n    .filter(\n      (n) =>\n        n.type === TYPE_EVENT_SOURCE ||\n        n.type === TYPE_EVENT_SOURCE_KAFKA ||\n        n.type === TYPE_EVENT_SINK,\n    )\n    .map((n) => (n as OdcNodeModel).resource);\n\n  const isEventSourceSinkKind = (uid: string): boolean =>\n    uid &&\n    !!eventResources?.find(\n      (eventSource) =>\n        eventSource.metadata?.uid === uid ||\n        resource.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(\n          eventSource.metadata?.name,\n        ),\n    );\n\n  if (isEventSourceSinkKind(resource.metadata?.ownerReferences?.[0].uid)) {\n    return true;\n  }\n\n  if (resource.metadata?.ownerReferences?.[0].kind === EventingBrokerModel.kind) {\n    return true;\n  }\n\n  return !!resource.metadata?.labels?.[KNATIVE_CONFIGURATION];\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n"],"sourceRoot":""}