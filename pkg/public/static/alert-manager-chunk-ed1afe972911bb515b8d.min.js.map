{"version":3,"sources":["webpack:///./public/components/alert-manager.tsx"],"names":["Details","props","alertManager","obj","metadata","spec","t","className","text","name","kind","labels","nodeSelector","selector","version","variant","type","isInline","onClick","event","preventDefault","target","blur","resourceKind","resource","replicas","details","editYaml","AlertManagersDetailsPage","pages","tableColumnClasses","AlertManagerTableRow","namespace","title","uid","AlertManagerTableHeader","sortField","transforms","displayName","AlertManagersList","Header","Row","virtualize","AlertManagersPage","ListComponent","canCreate"],"mappings":"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","file":"alert-manager-chunk-ed1afe972911bb515b8d.min.js","sourcesContent":["import * as React from 'react';\nimport i18next from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { sortable } from '@patternfly/react-table';\nimport { Button } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\n\nimport { referenceForModel, K8sResourceKind } from '../module/k8s';\nimport { ListPage, DetailsPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { SectionHeading, LabelList, navFactory, ResourceLink, Selector, pluralize } from './utils';\nimport { configureReplicaCountModal } from './modals';\nimport { AlertmanagerModel } from '../models';\n\nconst Details: React.SFC<DetailsProps> = (props) => {\n  const alertManager = props.obj;\n  const { metadata, spec } = alertManager;\n\n  const openReplicaCountModal = (event) => {\n    event.preventDefault();\n    event.target.blur();\n    configureReplicaCountModal({ resourceKind: AlertmanagerModel, resource: alertManager });\n  };\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Alertmanager details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-xs-12\">\n            <dl className=\"co-m-pane__details\">\n              <dt>Name</dt>\n              <dd>{metadata.name}</dd>\n              <dt>Labels</dt>\n              <dd>\n                <LabelList kind=\"Alertmanager\" labels={metadata.labels} />\n              </dd>\n              {spec.nodeSelector && <dt>{t('public~Alertmanager node selector')}</dt>}\n              {spec.nodeSelector && (\n                <dd>\n                  <Selector selector={spec.nodeSelector} kind=\"Node\" />\n                </dd>\n              )}\n            </dl>\n          </div>\n          <div className=\"col-sm-6 col-xs-12\">\n            <dl className=\"co-m-pane__details\">\n              <dt>Version</dt>\n              <dd>{spec.version}</dd>\n              <dt>Replicas</dt>\n              <dd>\n                <Button variant=\"link\" type=\"button\" isInline onClick={openReplicaCountModal}>\n                  {pluralize(spec.replicas, 'pod')}\n                  <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n                </Button>\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst { details, editYaml } = navFactory;\n\nexport const AlertManagersDetailsPage = (props) => (\n  <DetailsPage {...props} pages={[details(Details), editYaml()]} />\n);\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md pf-v5-u-w-25-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg pf-v5-u-w-25-on-lg',\n];\n\nconst AlertManagerTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj: alertManager,\n}) => {\n  const { metadata, spec } = alertManager;\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceForModel(AlertmanagerModel)}\n          name={metadata.name}\n          namespace={metadata.namespace}\n          title={metadata.uid}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <ResourceLink kind=\"Namespace\" name={metadata.namespace} title={metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={AlertmanagerModel.kind} labels={metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>{spec.version}</TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={spec.nodeSelector} kind=\"Node\" />\n      </TableData>\n    </>\n  );\n};\n\nconst AlertManagerTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Version'),\n      sortField: 'spec.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Node selector'),\n      sortField: 'spec.nodeSelector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nAlertManagerTableHeader.displayName = 'AlertManagerTableHeader';\n\nconst AlertManagersList = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Alertmanagers')}\n      Header={AlertManagerTableHeader}\n      Row={AlertManagerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const AlertManagersPage = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={AlertManagersList}\n    canCreate={false}\n    kind={referenceForModel(AlertmanagerModel)}\n  />\n);\n\ntype DetailsProps = {\n  obj: K8sResourceKind;\n};\n"],"sourceRoot":""}