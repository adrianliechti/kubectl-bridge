(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{4495:function(e,t,a){"use strict";a.r(t),a.d(t,"AddLDAPPage",(function(){return v}));var n=a(0),r=a(16),l=a(137),s=a(7),i=a(14),c=a(966),o=a(19),u=a(10),d=a(8),p=a(5),m=a(5957),b=a(5958),h=a(6040);const v=()=>{const e=Object(i.useNavigate)(),[t,a]=n.useState(!1),[v,f]=n.useState(""),[g,E]=n.useState("ldap"),[N,P]=n.useState(""),[w,y]=n.useState(""),[C,A]=n.useState(""),[T,j]=n.useState(["dn"]),[O,D]=n.useState(["uid"]),[S,k]=n.useState(["cn"]),[M,_]=n.useState([]),[q,x]=n.useState(""),{t:L}=Object(s.useTranslation)(),F=e=>(a(!0),e.then(e=>(e=>(a(!1),f(""),e))(e),e=>(e=>{const t=e.message||L("public~An error occurred. Please try again.");return a(!1),f(t),Promise.reject(t)})(e))),R=()=>{if(!q)return Promise.resolve(null);const e={apiVersion:"v1",kind:"ConfigMap",metadata:{generateName:"ldap-ca-",namespace:"openshift-config"},data:{"ca.crt":q}};return F(Object(d.jb)(u.ConfigMapModel,e))},I=()=>{if(!C)return Promise.resolve(null);const e={apiVersion:"v1",kind:"Secret",metadata:{generateName:"ldap-bind-password-",namespace:"openshift-config"},stringData:{bindPassword:C}};return F(Object(d.jb)(u.SecretModel,e))},V=(e,t,a,n)=>{const r={name:g,mappingMethod:"claim",type:"LDAP",ldap:{url:N,insecure:!1,attributes:{id:T,preferredUsername:O,name:S,email:M}}};return w&&(r.ldap.bindDN=w),t&&(r.ldap.bindPassword={name:t}),a&&(r.ldap.ca={name:a}),F(Object(m.a)(e,r,n))},U=L("public~Add Identity Provider: LDAP");return n.createElement("div",{className:"co-m-pane__form"},n.createElement(l.a,null,n.createElement("title",null,U)),n.createElement(p.Z,{title:U,helpText:L("public~Integrate with an LDAP identity provider.")}),n.createElement("div",{className:"co-m-pane__body"},n.createElement("form",{onSubmit:t=>{t.preventDefault(),f(""),F(Object(m.b)()).then(t=>{const a=C?m.c.secret:"",n=q?m.c.ca:"";V(t,a,n,!0).then(()=>{const a=[I(),R()];Promise.all(a).then(([e,a])=>{const n=r.a(e,"metadata.name"),l=r.a(a,"metadata.name");return V(t,n,l)}).then(()=>{Object(m.d)(e)})}).catch(e=>{f(e)})})},name:"form",className:"co-m-pane__body-group"},n.createElement(b.a,{value:g,onChange:e=>E(e.currentTarget.value)}),n.createElement("div",{className:"form-group"},n.createElement("label",{className:"control-label co-required",htmlFor:"url"},L("public~URL")),n.createElement("input",{className:"pf-v5-c-form-control",type:"url",onChange:e=>P(e.currentTarget.value),value:N,id:"url",required:!0,"aria-describedby":"url-help"}),n.createElement("div",{className:"help-block",id:"url-help"},L("public~An RFC 2255 URL which specifies the LDAP search parameters to use."))),n.createElement("div",{className:"form-group"},n.createElement("label",{className:"control-label",htmlFor:"bind-dn"},L("public~Bind DN")),n.createElement("input",{className:"pf-v5-c-form-control",type:"text",onChange:e=>y(e.currentTarget.value),value:w,id:"bind-dn","aria-describedby":"bind-dn-help"}),n.createElement("div",{className:"help-block",id:"bind-dn-help"},L("public~DN to bind with during the search phase."))),n.createElement("div",{className:"form-group"},n.createElement("label",{className:"control-label",htmlFor:"bind-password"},L("public~Bind password")),n.createElement("input",{className:"pf-v5-c-form-control",type:"password",onChange:e=>A(e.currentTarget.value),value:C,id:"bind-password","aria-describedby":"bind-password-help"}),n.createElement("div",{className:"help-block",id:"bind-password-help"},L("public~Password to bind with during the search phase."))),n.createElement("div",{className:"co-form-section__separator"}),n.createElement("h3",null,L("public~Attributes")),n.createElement("p",{className:"co-help-text"},L("public~Attributes map LDAP attributes to identities.")),n.createElement(p.P,{label:L("public~ID"),required:!0,initialValues:T,onChange:e=>j(e),helpText:L("public~The list of attributes whose values should be used as the user ID.")}),n.createElement(p.P,{label:L("public~Preferred username"),initialValues:O,onChange:e=>D(e),helpText:L("public~The list of attributes whose values should be used as the preferred username.")}),n.createElement(p.P,{label:L("public~Name"),initialValues:S,onChange:e=>k(e),helpText:L("public~The list of attributes whose values should be used as the display name.")}),n.createElement(p.P,{label:L("public~Email"),onChange:e=>_(e),helpText:L("public~The list of attributes whose values should be used as the email address.")}),n.createElement("div",{className:"co-form-section__separator"}),n.createElement("h3",null,L("public~More options")),n.createElement(h.a,{value:q,onChange:e=>x(e)}),n.createElement(p.g,{errorMessage:v,inProgress:t},n.createElement(c.a,{className:"pf-v5-c-form"},n.createElement(o.a,{type:"submit",variant:"primary","data-test-id":"add-idp"},L("public~Add")),n.createElement(o.a,{type:"button",variant:"secondary",onClick:()=>e(-1)},L("public~Cancel")))))))}},5957:function(e,t,a){"use strict";a.d(t,"b",(function(){return i})),a.d(t,"a",(function(){return c})),a.d(t,"d",(function(){return o})),a.d(t,"c",(function(){return u}));var n=a(22),r=a(10),l=a(8),s=a(5);const i=()=>Object(l.kb)(r.OAuthModel,"cluster"),c=(e,t,a)=>{const s=n.a(e.spec.identityProviders)?{op:"add",path:"/spec/identityProviders",value:[t]}:{op:"add",path:"/spec/identityProviders/-",value:t};return Object(l.pb)(r.OAuthModel,e,[s],a?{queryParams:{dryRun:"All"}}:{})},o=e=>{e(Object(s.uc)(r.OAuthModel,"cluster")+"?idpAdded=true")},u={secret:"secret-name",ca:"ca-name"}},5958:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var n=a(0),r=a(7);const l=({value:e,onChange:t})=>{const{t:a}=Object(r.useTranslation)();return n.createElement("div",{className:"form-group"},n.createElement("label",{className:"control-label co-required",htmlFor:"idp-name"},a("public~Name")),n.createElement("input",{className:"pf-v5-c-form-control",type:"text",onChange:t,value:e,"aria-describedby":"idp-name-help",id:"idp-name",required:!0}),n.createElement("p",{className:"help-block",id:"idp-name-help"},a("public~Unique name of the new identity provider. This cannot be changed later.")))}},6040:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var n=a(0),r=a(7),l=a(5);const s=e=>n.createElement(l.c,Object.assign({loader:()=>Promise.resolve().then(a.bind(null,2223)).then(e=>e.DroppableFileInput)},e)),i=({value:e,onChange:t,isRequired:a=!1})=>{const{t:l}=Object(r.useTranslation)();return n.createElement("div",{className:"form-group"},n.createElement(s,{onChange:t,inputFileData:e,id:"idp-file-input",label:l("public~CA file"),isRequired:a,hideContents:!0}))}}}]);
//# sourceMappingURL=ldap-idp-form-chunk-60d6457f89ec13a8deff.min.js.map