(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{4369:function(e,t,a){"use strict";a.r(t),a.d(t,"ReplicationControllersDetailsPage",(function(){return O})),a.d(t,"ReplicationControllersList",(function(){return P})),a.d(t,"ReplicationControllersPage",(function(){return _}));var n=a(0),s=a(16),l=a(18),c=a(7),o=a(14),r=a(54),m=a(15),i=a(409),p=a(40),d=a(5),u=a(8),b=a(2226),E=a(2224);const v=e=>n.createElement(d.c,Object.assign({loader:()=>Promise.all([a.e(2),a.e(28)]).then(a.bind(null,4361)).then(e=>e.EnvironmentPage)},e)),h=["spec","template","spec","containers"],N=e=>n.createElement(v,{obj:e.obj,rawEnvData:e.obj.spec.template.spec,envPath:h,readOnly:!1}),{details:f,editYaml:j,pods:g,envEditor:R,events:k}=d.mc,w=e=>n.createElement(d.ab,Object.assign({},e,{showNodes:!0})),O=e=>{const{t:t}=Object(c.useTranslation)();return n.createElement(p.a,Object.assign({},e,{getResourceStatus:e=>{var t,a;return(null===(a=null===(t=null==e?void 0:e.metadata)||void 0===t?void 0:t.annotations)||void 0===a?void 0:a["openshift.io/deployment.phase"])||null},customActionMenu:(e,t)=>{const a={[Object(u.Hb)(e)]:t};return n.createElement(m.j,{context:a},({actions:e,options:t,loaded:a})=>a&&n.createElement(m.h,{actions:e,options:t,variant:m.i.DROPDOWN}))},pages:[f(({obj:e})=>{const a=s.a(e,["metadata","annotations","openshift.io/deployment-config.latest-version"]),l=s.a(e,["metadata","annotations","openshift.io/deployment.phase"]);return n.createElement(n.Fragment,null,n.createElement("div",{className:"co-m-pane__body"},n.createElement(d.ob,{text:t("public~ReplicationController details")}),n.createElement("div",{className:"row"},n.createElement("div",{className:"col-md-6"},n.createElement(d.lb,{resource:e,showPodSelector:!0,showNodeSelector:!0,showTolerations:!0},a&&n.createElement(n.Fragment,null,n.createElement("dt",null,t("public~Deployment revision")),n.createElement("dd",null,a)))),n.createElement("div",{className:"col-md-6"},n.createElement("dl",{className:"co-m-pane__details"},l&&n.createElement(n.Fragment,null,n.createElement("dt",null,t("public~Phase")),n.createElement("dd",null,n.createElement(m.cc,{status:l}))),n.createElement(d.kb,{resource:e}),n.createElement(d.mb,{obj:e}),n.createElement(E.a,{obj:e}))))),n.createElement("div",{className:"co-m-pane__body"},n.createElement(d.ob,{text:t("public~Containers")}),n.createElement(d.k,{containers:e.spec.template.spec.containers})),n.createElement("div",{className:"co-m-pane__body"},n.createElement(b.a,{resource:e,heading:t("public~Volumes")})))}),j(),g(w),R(N),k(i.ResourceEventStream)]}))},C="ReplicationController",F=["","","pf-m-hidden pf-m-visible-on-md","pf-m-hidden pf-m-visible-on-lg","pf-m-hidden pf-m-visible-on-lg","pf-m-hidden pf-m-visible-on-xl",d.F.columnClass],y=({obj:e})=>{var t,a;const{t:s}=Object(c.useTranslation)(),r=null===(a=null===(t=null==e?void 0:e.metadata)||void 0===t?void 0:t.annotations)||void 0===a?void 0:a["openshift.io/deployment.phase"],i={[Object(u.Db)(e)]:e};return n.createElement(n.Fragment,null,n.createElement(p.k,{className:F[0]},n.createElement(d.hb,{kind:C,name:e.metadata.name,namespace:e.metadata.namespace})),n.createElement(p.k,{className:l(F[1],"co-break-word"),columnID:"namespace"},n.createElement(d.hb,{kind:"Namespace",name:e.metadata.namespace})),n.createElement(p.k,{className:F[2]},n.createElement(o.Link,{to:Object(d.tc)(C,e.metadata.name,e.metadata.namespace)+"/pods",title:"pods"},s("public~{{statusReplicas}} of {{specReplicas}} pods",{statusReplicas:e.status.replicas||0,specReplicas:e.spec.replicas}))),n.createElement(p.k,{className:F[3]},n.createElement(m.cc,{status:r})),n.createElement(p.k,{className:F[4]},n.createElement(d.Y,{resource:e})),n.createElement(p.k,{className:F[5]},n.createElement(d.xb,{timestamp:e.metadata.creationTimestamp})),n.createElement(p.k,{className:F[6]},n.createElement(m.hb,{context:i})))},P=e=>{const{t:t}=Object(c.useTranslation)();return n.createElement(p.j,Object.assign({},e,{"aria-label":t("public~ReplicationControllers"),Header:()=>[{title:t("public~Name"),sortField:"metadata.name",transforms:[r.a],props:{className:F[0]}},{title:t("public~Namespace"),sortField:"metadata.namespace",transforms:[r.a],props:{className:F[1]},id:"namespace"},{title:t("public~Status"),sortFunc:"numReplicas",transforms:[r.a],props:{className:F[2]}},{title:t("public~Phase"),sortField:'metadata.annotations["openshift.io/deployment.phase"]',transforms:[r.a],props:{className:F[3]}},{title:t("public~Owner"),sortField:"metadata.ownerReferences[0].name",transforms:[r.a],props:{className:F[4]}},{title:t("public~Created"),sortField:"metadata.creationTimestamp",transforms:[r.a],props:{className:F[5]}},{title:"",props:{className:F[6]}}],Row:y,virtualize:!0}))},_=e=>{const{canCreate:t=!0}=e;return n.createElement(p.c,Object.assign({canCreate:t,kind:"ReplicationController",ListComponent:P},e))}}}]);
//# sourceMappingURL=replication-controller-chunk-8202f51c974dcfd59e9e.min.js.map