{"version":3,"sources":["webpack:///./packages/gitops-plugin/src/components/details/GitOpsDetailsPageHeading.tsx","webpack:///./packages/gitops-plugin/src/components/GitOpsDetailsPage.tsx","webpack:///./packages/gitops-plugin/src/components/details/GitOpsDetails.tsx","webpack:///./packages/gitops-plugin/src/components/details/ArgoCdLink.tsx","webpack:///./packages/gitops-plugin/src/images/argo.png","webpack:///./packages/gitops-plugin/src/components/details/GitOpsRenderStatusLabel.tsx","webpack:///./packages/gitops-plugin/src/components/details/GitOpsResourcesSection.tsx","webpack:///./packages/gitops-plugin/src/components/details/GitOpsResourceRow.tsx","webpack:///./packages/gitops-plugin/src/components/history/GitOpsDeploymentHistory.tsx","webpack:///./packages/gitops-plugin/src/components/history/GitOpsDeploymentHistoryTableHeader.tsx","webpack:///./packages/gitops-plugin/src/components/history/GitOpsDeploymentHistoryTableRow.tsx","webpack:///./packages/gitops-plugin/src/components/history/CommitRevision.tsx","webpack:///./packages/gitops-plugin/src/components/utils/useEnvDetails.ts","webpack:///./packages/gitops-plugin/src/components/GitOpsDetailsPageTabs.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./packages/dev-console/src/components/import/render-utils.tsx","webpack:///./packages/dev-console/src/components/import/CheIcon.tsx","webpack:///./packages/gitops-plugin/src/components/utils/gitops-utils.ts","webpack:///./packages/gitops-plugin/src/components/GitOpsEmptyState.tsx","webpack:///./packages/gitops-plugin/src/components/utils/useDefaultSecret.tsx","webpack:///./packages/gitops-plugin/src/components/history/GitOpsDeploymentHistoryTableColumnClasses.tsx"],"names":["url","appName","manifestURL","badge","t","breadcrumbs","name","path","className","style","marginRight","href","additionalClassName","props","envsData","setEnvsData","envs","emptyStateMsg","applicationBaseURI","customData","error","setError","data","Promise","all","env","err","length","consoleLinks","isList","kind","optional","argocdLink","link","metadata","spec","location","oldAPI","deployments","errMsg","isInline","title","key","environment","content","cluster","status","revision","message","author","color","icon","variant","substring","lastDeployed","timestamp","to","envName","services","secrets","routes","roleBindings","clusterRoles","clusterRoleBindings","appNameLink","includes","loading","src","a","alt","width","height","module","exports","HealthStatus","getUnhealthyResources","acc","current","health","DEGRADED","PROGRESSING","MISSING","UNKNOWN","degradedServices","reduce","degradedDeployments","degradedSecrets","degradedRoutes","nonSyncedSyncServices","nonSyncedDeployments","nonSyncedSecrets","nonSyncedRoutes","nonSyncedRoleBindings","nonSyncedClusterRoles","nonSyncedClusterRoleBindings","hasGutter","alignItems","resources","degradedResources","nonSyncedResources","x","toString","total","value","columnReducer","s","envRowFilters","type","filterGroupName","reducer","items","sort","id","filterKeys","curr","str","rowFiltersFromURL","selectedRowFilters","params","URLSearchParams","search","f","vals","get","push","split","historyBaseURI","historyData","setHistoryData","filteredData","ignore","arrayHistory","flat","Error","Array","forEach","history","filter","slice","reduxIDs","hideNameLabelFilters","rowFilters","Header","Row","loaded","virtualize","sortField","transforms","GitOpsDeploymentHistoryTableRow","obj","deployed_at","columnID","repoUrl","repo_url","isSHARevision","match","CommitRevision","children","revisionNumber","parsed","urlSubPath","indexOf","resource","startsWith","source","isSupportedSource","proto","protocol","owner","getRevisionUrl","pipelinesBaseURI","setEnvs","setEmptyStateMsg","then","appGroups","app","appObj","environments","catch","e","console","GitOpsDetailsPageTabs","secretNS","secretName","pages","component","pathname","noStatusBox","topology","xmlns","viewBox","fill","role","d","routeDecoratorIcon","routeURL","radius","cheEnabled","cheIconURL","xlinkHref","fontSize","INVALID","GITHUB","BITBUCKET","GITLAB","GITEA","version","fillRule","stroke","strokeWidth","getManifestURLs","namespaces","ns","annotations","map","fetchAppGroups","baseURL","newListApi","applications","fetchAllAppGroups","manifestURLs","emptyMsg","allAppGroups","getEnvData","v2EnvURI","envURI","appURI","getPipelinesBaseURI","undefined","getApplicationsBaseURI","full","user","userName","GitOpsDeploymentHistoryTableColumnClasses"],"mappings":"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","file":"gitops-plugin-details-page-chunk-596abb182f696ab02918.min.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\nimport { BreadCrumbs, ExternalLink } from '@console/internal/components/utils';\nimport './GitOpsDetailsPageHeading.scss';\n\ninterface GitOpsDetailsPageHeadingProps {\n  url: string;\n  appName: string;\n  manifestURL: string;\n  badge?: React.ReactNode;\n}\n\nconst GitOpsDetailsPageHeading: React.FC<GitOpsDetailsPageHeadingProps> = ({\n  url,\n  appName,\n  manifestURL,\n  badge,\n}) => {\n  const { t } = useTranslation();\n  const breadcrumbs = [\n    {\n      name: t('gitops-plugin~Environments'),\n      path: '/environments',\n    },\n    {\n      name: t('gitops-plugin~Application environments'),\n      path: `${url}`,\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"pf-v5-c-page__main-breadcrumb\">\n        <BreadCrumbs breadcrumbs={breadcrumbs} />\n      </div>\n      <div className=\"gop-gitops-details-page-heading co-m-nav-title co-m-nav-title--breadcrumbs\">\n        <h1\n          className=\"co-m-pane__heading\"\n          style={{ marginRight: 'var(--pf-v5-global--spacer--sm)' }}\n        >\n          <div className=\"co-m-pane__name co-resource-item\">\n            <span className=\"co-resource-item__resource-name\">{appName}</span>\n          </div>\n          {badge && <span className=\"co-m-pane__heading-badge\">{badge}</span>}\n        </h1>\n        <ExternalLink\n          href={manifestURL}\n          additionalClassName={'co-break-all gop-gitops-details-page-title'}\n        >\n          {routeDecoratorIcon(manifestURL, 12, t)}&nbsp;\n          {manifestURL}&nbsp;\n        </ExternalLink>\n      </div>\n    </>\n  );\n};\n\nexport default GitOpsDetailsPageHeading;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport GitOpsDetails from './details/GitOpsDetails';\nimport GitOpsEmptyState from './GitOpsEmptyState';\nimport { GitOpsEnvironment } from './utils/gitops-types';\nimport { getEnvData } from './utils/gitops-utils';\n\ntype GitOpsOverviewPageProps = {\n  customData: {\n    emptyStateMsg: string;\n    envs: string[];\n    applicationBaseURI: string;\n    manifestURL: string;\n  };\n};\ntype GitOpsDetailsPageProps = GitOpsOverviewPageProps;\nconst GitOpsDetailsPage: React.FC<GitOpsDetailsPageProps> = (props) => {\n  const [envsData, setEnvsData] = React.useState<GitOpsEnvironment[]>(null);\n  const { appName } = useParams();\n  const environmentBaseURI = `/api/gitops/environments`;\n  const environmentBaseURIV2 = `/api/gitops/environment`;\n  const { envs, emptyStateMsg, applicationBaseURI, manifestURL } = props.customData;\n  const [error, setError] = React.useState<Error>(null);\n\n  React.useEffect(() => {\n    const getEnvsData = async () => {\n      if (!_.isEmpty(envs) && applicationBaseURI) {\n        let data;\n        try {\n          data = await Promise.all(\n            _.map(envs, (env) =>\n              getEnvData(environmentBaseURIV2, environmentBaseURI, env, applicationBaseURI),\n            ),\n          );\n        } catch (err) {\n          setError(err);\n        }\n        if (data?.length > 0) {\n          setEnvsData(data);\n        }\n      }\n    };\n\n    getEnvsData();\n  }, [applicationBaseURI, environmentBaseURIV2, environmentBaseURI, envs, error]);\n\n  return (\n    <>\n      {!envsData ? (\n        <LoadingBox />\n      ) : !emptyStateMsg ? (\n        <GitOpsDetails envs={envsData} appName={appName} manifestURL={manifestURL} error={error} />\n      ) : (\n        <GitOpsEmptyState emptyStateMsg={emptyStateMsg} />\n      )}\n    </>\n  );\n};\n\nexport default GitOpsDetailsPage;\n","import * as React from 'react';\nimport {\n  Stack,\n  StackItem,\n  Split,\n  SplitItem,\n  Tooltip,\n  Card,\n  CardTitle,\n  CardBody,\n  Label,\n  Alert,\n} from '@patternfly/react-core';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ExternalLink, Timestamp } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { GitOpsEnvironment } from '../utils/gitops-types';\nimport ArgoCdLink from './ArgoCdLink';\nimport GitOpsRenderStatusLabel from './GitOpsRenderStatusLabel';\nimport GitOpsResourcesSection from './GitOpsResourcesSection';\nimport './GitOpsDetails.scss';\n\ninterface GitOpsDetailsProps {\n  envs: GitOpsEnvironment[];\n  appName: string;\n  manifestURL: string;\n  error: Error;\n}\n\nconst GitOpsDetails: React.FC<GitOpsDetailsProps> = ({ envs, appName, manifestURL, error }) => {\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const argocdLink = _.find(\n    consoleLinks,\n    (link: K8sResourceKind) =>\n      link.metadata?.name === 'argocd' && link.spec?.location === 'ApplicationMenu',\n  );\n\n  let oldAPI = false;\n  if (envs && envs.length > 0) {\n    oldAPI = envs[0] && envs[0].deployments ? envs[0].deployments === null : true;\n  }\n  let errMsg = '';\n  if (error != null) {\n    errMsg = t('gitops-plugin~Error cannot retrieve environments');\n  }\n  return (\n    <div className=\"gop-gitops-details\">\n      {oldAPI && (\n        <Alert\n          isInline\n          title={t('gitops-plugin~Compatibility Issue')}\n          className=\"gop-gitops-details__special-message-alert\"\n        >\n          {t('gitops-plugin~Compatibility Issue Message')}\n        </Alert>\n      )}\n      {error != null && (\n        <Alert\n          isInline\n          title={t('gitops-plugin~Error Encountered')}\n          className=\"gop-gitops-details__special-message-alert\"\n        >\n          {errMsg}\n        </Alert>\n      )}\n      {_.map(\n        envs,\n        (env) =>\n          env && (\n            <Stack className=\"gop-gitops-details__env-section\" key={env.environment}>\n              <StackItem>\n                <Card>\n                  <CardTitle className=\"gop-gitops-details__env-section__header\">\n                    <Stack>\n                      <StackItem>\n                        <h2 className=\"co-section-heading co-truncate co-nowrap gop-gitops-details__env-section__app-name\">\n                          <Tooltip content={env.environment}>\n                            <span>{env.environment}</span>\n                          </Tooltip>\n                        </h2>\n                      </StackItem>\n                      <StackItem className=\"co-truncate co-nowrap\">\n                        {env.cluster ? (\n                          <ExternalLink\n                            additionalClassName=\"gop-gitops-details__env-section__cluster-url\"\n                            href={env.cluster}\n                          >\n                            {env.cluster}\n                          </ExternalLink>\n                        ) : (\n                          <div className=\"gop-gitops-details__env-section__cluster-url-empty-state\">\n                            {t('gitops-plugin~Cluster URL not available')}\n                          </div>\n                        )}\n                      </StackItem>\n                      {env.status && (\n                        <StackItem className=\"gop-gitops-details__env-section__status-label\">\n                          <Tooltip content=\"Sync status\">\n                            <GitOpsRenderStatusLabel status={env.status} />\n                          </Tooltip>\n                        </StackItem>\n                      )}\n                    </Stack>\n                  </CardTitle>\n                  <CardBody>\n                    <Stack className=\"gop-gitops-details__revision\">\n                      {env.revision ? (\n                        <>\n                          {env.revision.message ? (\n                            <StackItem className=\"gop-gitops-details__message\">\n                              {t('gitops-plugin~{{message}}', { message: env.revision.message })}\n                            </StackItem>\n                          ) : (\n                            <StackItem className=\"gop-gitops-details__warning-message\">\n                              {t('gitops-plugin~Commit message not available')}\n                            </StackItem>\n                          )}\n                          <StackItem className=\"gop-gitops-details__author-sha\">\n                            {env.revision.author ? (\n                              <span className=\"gop-gitops-details__author\">\n                                {t('gitops-plugin~by {{author}}', { author: env.revision.author })}{' '}\n                              </span>\n                            ) : (\n                              <span className=\"gop-gitops-details__author-unavailable\">\n                                {t('gitops-plugin~Commit author not available')}{' '}\n                              </span>\n                            )}\n                            {env.revision.revision ? (\n                              <Label\n                                className=\"gop-gitops-details__sha\"\n                                color=\"blue\"\n                                icon={<GitAltIcon />}\n                                variant=\"outline\"\n                              >\n                                {env.revision.revision.substring(0, 7)}\n                              </Label>\n                            ) : (\n                              <Label\n                                className=\"gop-gitops-details__sha\"\n                                color=\"blue\"\n                                icon={<GitAltIcon />}\n                                variant=\"outline\"\n                              >\n                                N/A\n                              </Label>\n                            )}\n                          </StackItem>\n                        </>\n                      ) : (\n                        <span>{t('gitops-plugin~Commit details not available')}</span>\n                      )}\n                      {env.lastDeployed ? (\n                        <StackItem className=\"co-truncate co-nowrap gop-gitops-details__env-section__time\">\n                          {t('gitops-plugin~Last deployed')}&nbsp;\n                          <Timestamp timestamp={env.lastDeployed} />\n                        </StackItem>\n                      ) : (\n                        <StackItem className=\"co-truncate co-nowrap gop-gitops-details__env-section__time-unavailable\">\n                          {t('gitops-plugin~Last deployed time not available')}\n                        </StackItem>\n                      )}\n                      <StackItem>\n                        <Split className=\"gop-gitops-details__env-section__deployment-history\">\n                          <SplitItem className=\"gop-gitops-details__env-section__deployment-history__deploymentHistoryPageLink\">\n                            <Link\n                              to={`/environments/${appName}/deploymenthistory?url=${manifestURL}&rowFilter-environment=${env.environment}`}\n                              title={t('gitops-plugin~Deployment history')}\n                            >\n                              {t('gitops-plugin~Deployment history')}\n                            </Link>\n                          </SplitItem>\n                          {argocdLink && (\n                            <Tooltip content=\"Argo CD\">\n                              <ArgoCdLink\n                                appName={appName}\n                                envName={env.environment}\n                                argocdLink={argocdLink}\n                              />\n                            </Tooltip>\n                          )}\n                        </Split>\n                      </StackItem>\n                    </Stack>\n                  </CardBody>\n                </Card>\n              </StackItem>\n              <GitOpsResourcesSection\n                services={env.services}\n                secrets={env.secrets}\n                deployments={env.deployments}\n                routes={env.routes}\n                roleBindings={env.roleBindings}\n                clusterRoles={env.clusterRoles}\n                clusterRoleBindings={env.clusterRoleBindings}\n              />\n            </Stack>\n          ),\n      )}\n    </div>\n  );\n};\n\nexport default GitOpsDetails;\n","import * as React from 'react';\nimport { SplitItem } from '@patternfly/react-core';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport argoIcon from '../../images/argo.png';\n\ntype ArgoCdLinkProps = {\n  envName: string;\n  appName: string;\n  argocdLink: any;\n};\n\nconst ArgoCdLink: React.FC<ArgoCdLinkProps> = ({ envName, appName, argocdLink }) => {\n  // Use environment name as is or the original KAM-based design\n  const appNameLink = envName.includes(appName) ? envName : `${envName}-${appName}`;\n  return (\n    <SplitItem className=\"gitops-plugin__environment-details__env-section__deployment-history__argocd-link\">\n      <ExternalLink href={`${argocdLink.spec.href}/applications/${appNameLink}`}>\n        <span className=\"gitops-plugin__environment-details__env-section__argo-external-link\">\n          <img loading=\"lazy\" src={argoIcon} alt=\"Argo CD\" width=\"19px\" height=\"24px\" />\n        </span>\n      </ExternalLink>\n    </SplitItem>\n  );\n};\n\nexport default ArgoCdLink;\n","module.exports = __webpack_public_path__ + \"assets/packages/gitops-plugin/src/images/argo.png\";","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport {\n  GreenCheckCircleIcon,\n  YellowExclamationTriangleIcon,\n  GrayUnknownIcon,\n} from '@console/shared';\n\ninterface GitOpsRenderStatusLabelProps {\n  status: string;\n}\n\nconst GitOpsRenderStatusLabel: React.FC<GitOpsRenderStatusLabelProps> = ({ status }) => {\n  const { t } = useTranslation();\n  switch (status) {\n    case 'Synced':\n      return <Label icon={<GreenCheckCircleIcon />}>{t('gitops-plugin~Synced')}</Label>;\n    case 'OutOfSync':\n      return <Label icon={<YellowExclamationTriangleIcon />}>{t('gitops-plugin~OutOfSync')}</Label>;\n    case 'Unknown':\n      return <Label icon={<GrayUnknownIcon />}>{t('gitops-plugin~Unknown')}</Label>;\n    default:\n      return null;\n  }\n};\n\nexport default GitOpsRenderStatusLabel;\n","import * as React from 'react';\nimport { Stack, StackItem, Split, SplitItem, Card, CardBody } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { GitOpsEnvironmentService, GitOpsHealthResources } from '../utils/gitops-types';\nimport './GitOpsResourcesSection.scss';\nimport GitOpsResourceRow from './GitOpsResourceRow';\n\ninterface GitOpsResourcesSectionProps {\n  services: GitOpsEnvironmentService[];\n  secrets: GitOpsHealthResources[];\n  deployments: GitOpsHealthResources[];\n  routes: GitOpsHealthResources[];\n  roleBindings: GitOpsHealthResources[];\n  clusterRoles: GitOpsHealthResources[];\n  clusterRoleBindings: GitOpsHealthResources[];\n}\n\nexport enum HealthStatus {\n  DEGRADED = 'Degraded',\n  PROGRESSING = 'Progressing',\n  MISSING = 'Missing',\n  UNKNOWN = 'Unknown',\n}\n\nconst getUnhealthyResources = () => (acc: string[], current: GitOpsHealthResources): string[] =>\n  current.health === HealthStatus.DEGRADED ||\n  current.health === HealthStatus.PROGRESSING ||\n  current.health === HealthStatus.MISSING ||\n  current.health === HealthStatus.UNKNOWN\n    ? [...acc, current.health]\n    : acc;\n\nconst getNonSyncedResources = () => (acc: string[], current: GitOpsHealthResources): string[] =>\n  current.status !== 'Synced' ? [...acc, current.status] : acc;\n\nconst GitOpsResourcesSection: React.FC<GitOpsResourcesSectionProps> = ({\n  services,\n  secrets,\n  deployments,\n  routes,\n  roleBindings,\n  clusterRoles,\n  clusterRoleBindings,\n}) => {\n  const { t } = useTranslation();\n  const degradedServices: string[] = services ? services.reduce(getUnhealthyResources(), []) : [];\n  const degradedDeployments: string[] = deployments\n    ? deployments.reduce(getUnhealthyResources(), [])\n    : [];\n  const degradedSecrets: string[] = secrets ? secrets.reduce(getUnhealthyResources(), []) : [];\n  const degradedRoutes: string[] = routes ? routes.reduce(getUnhealthyResources(), []) : [];\n\n  const nonSyncedSyncServices: string[] = services\n    ? services.reduce(getNonSyncedResources(), [])\n    : [];\n  const nonSyncedDeployments: string[] = deployments\n    ? deployments.reduce(getNonSyncedResources(), [])\n    : [];\n  const nonSyncedSecrets: string[] = secrets ? secrets.reduce(getNonSyncedResources(), []) : [];\n  const nonSyncedRoutes: string[] = routes ? routes.reduce(getNonSyncedResources(), []) : [];\n  const nonSyncedRoleBindings: string[] = roleBindings\n    ? roleBindings.reduce(getNonSyncedResources(), [])\n    : [];\n  const nonSyncedClusterRoles: string[] = clusterRoles\n    ? clusterRoles.reduce(getNonSyncedResources(), [])\n    : [];\n  const nonSyncedClusterRoleBindings: string[] = clusterRoleBindings\n    ? clusterRoleBindings.reduce(getNonSyncedResources(), [])\n    : [];\n\n  return (\n    <>\n      <StackItem className=\"gop-gitops-resources\">\n        <Card>\n          <h3 className=\"gop-gitops-resources__title co-nowrap\">{t('gitops-plugin~Resources')}</h3>\n          <CardBody>\n            <Split hasGutter>\n              <span className=\"gop-gitops-resources__list\">\n                <SplitItem>\n                  <Stack style={{ marginRight: 'var(--pf-v5-global--spacer--sm)' }}>\n                    <StackItem>{deployments ? deployments.length : 'N/A'}</StackItem>\n                    <StackItem>{secrets ? secrets.length : 'N/A'}</StackItem>\n                    <StackItem>{services ? services.length : 'N/A'}</StackItem>\n                    <StackItem>{routes ? routes.length : 'N/A'}</StackItem>\n                    <StackItem>{roleBindings ? roleBindings.length : 'N/A'}</StackItem>\n                    <StackItem>{clusterRoles ? clusterRoles.length : 'N/A'}</StackItem>\n                    <StackItem>\n                      {clusterRoleBindings ? clusterRoleBindings.length : 'N/A'}\n                    </StackItem>\n                  </Stack>\n                </SplitItem>\n                <SplitItem>\n                  <Stack style={{ marginRight: 'var(--pf-v5-global--spacer--sm)' }}>\n                    <StackItem>\n                      <ResourceIcon kind=\"Deployment\" /> {t('gitops-plugin~Deployments')}\n                    </StackItem>\n                    <StackItem>\n                      <ResourceIcon kind=\"Secret\" /> {t('gitops-plugin~Secrets')}\n                    </StackItem>\n                    <StackItem>\n                      <ResourceIcon kind=\"Service\" /> {t('gitops-plugin~Services')}\n                    </StackItem>\n                    <StackItem>\n                      <ResourceIcon kind=\"Route\" /> {t('gitops-plugin~Routes')}\n                    </StackItem>\n                    <StackItem>\n                      <ResourceIcon kind=\"RoleBinding\" /> {t('gitops-plugin~Role Bindings')}\n                    </StackItem>\n                    <StackItem>\n                      <ResourceIcon kind=\"ClusterRole\" /> {t('gitops-plugin~Cluster Roles')}\n                    </StackItem>\n                    <StackItem>\n                      <ResourceIcon kind=\"ClusterRoleBinding\" />{' '}\n                      {t('gitops-plugin~Cluster Role Bindings')}\n                    </StackItem>\n                  </Stack>\n                </SplitItem>\n              </span>\n              <SplitItem>\n                <Stack style={{ alignItems: 'flex-end' }}>\n                  <GitOpsResourceRow\n                    resources={deployments}\n                    degradedResources={degradedDeployments}\n                    nonSyncedResources={nonSyncedDeployments}\n                  />\n                  <GitOpsResourceRow\n                    resources={secrets}\n                    degradedResources={degradedSecrets}\n                    nonSyncedResources={nonSyncedSecrets}\n                  />\n                  <GitOpsResourceRow\n                    resources={services}\n                    degradedResources={degradedServices}\n                    nonSyncedResources={nonSyncedSyncServices}\n                  />\n                  <GitOpsResourceRow\n                    resources={routes}\n                    degradedResources={degradedRoutes}\n                    nonSyncedResources={nonSyncedRoutes}\n                  />\n                  <GitOpsResourceRow\n                    resources={roleBindings}\n                    degradedResources={null}\n                    nonSyncedResources={nonSyncedRoleBindings}\n                  />\n                  <GitOpsResourceRow\n                    resources={clusterRoles}\n                    degradedResources={null}\n                    nonSyncedResources={nonSyncedClusterRoles}\n                  />\n                  <GitOpsResourceRow\n                    resources={clusterRoleBindings}\n                    degradedResources={null}\n                    nonSyncedResources={nonSyncedClusterRoleBindings}\n                  />\n                </Stack>\n              </SplitItem>\n            </Split>\n          </CardBody>\n        </Card>\n      </StackItem>\n    </>\n  );\n};\n\nexport default GitOpsResourcesSection;\n","import * as React from 'react';\nimport { Split, SplitItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { HeartBrokenIcon } from '@patternfly/react-icons/dist/esm/icons/heart-broken-icon';\nimport {\n  global_danger_color_100 as RedColor,\n  global_warning_color_100 as YellowColor,\n} from '@patternfly/react-tokens';\nimport { useTranslation } from 'react-i18next';\nimport { GitOpsEnvironmentService, GitOpsHealthResources } from '../utils/gitops-types';\nimport './GitOpsResourcesSection.scss';\n\ninterface GitOpsResourceRowProps {\n  resources: GitOpsHealthResources[] | GitOpsEnvironmentService[];\n  degradedResources: string[] | null;\n  nonSyncedResources: string[];\n}\n\nconst GitOpsResourceRow: React.FC<GitOpsResourceRowProps> = ({\n  resources,\n  degradedResources,\n  nonSyncedResources,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Split hasGutter>\n      {degradedResources?.length > 0 && (\n        <Tooltip\n          content={t('gitops-plugin~{{x}} of {{total}} Unhealthy', {\n            x: degradedResources.length.toString(),\n            total: resources?.length.toString() ?? '0',\n          })}\n        >\n          <SplitItem>\n            <>\n              {degradedResources.length}\n              <HeartBrokenIcon color={RedColor.value} className=\"co-icon-space-l\" />\n            </>\n          </SplitItem>\n        </Tooltip>\n      )}\n      {nonSyncedResources.length > 0 && (\n        <Tooltip\n          content={t('gitops-plugin~{{x}} of {{total}} OutOfSync', {\n            x: nonSyncedResources.length.toString(),\n            total: resources?.length.toString() ?? '0',\n          })}\n        >\n          <SplitItem>\n            <>\n              {nonSyncedResources.length}\n              <ExclamationTriangleIcon color={YellowColor.value} className=\"co-icon-space-l\" />\n            </>\n          </SplitItem>\n        </Tooltip>\n      )}\n      {(degradedResources === null || degradedResources.length === 0) &&\n        nonSyncedResources.length === 0 && <>&nbsp;</>}\n    </Split>\n  );\n};\n\nexport default GitOpsResourceRow;\n","import * as React from 'react';\nimport { Location } from 'history';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom-v5-compat';\nimport { Table } from '@console/internal/components/factory';\nimport { FilterToolbar, RowFilter } from '@console/internal/components/filter-toolbar';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport GitOpsEmptyState from '../GitOpsEmptyState';\nimport { GitOpsHistoryData } from '../utils/gitops-types';\nimport { getEnvData } from '../utils/gitops-utils';\nimport GitOpsDeploymentHistoryTableHeader from './GitOpsDeploymentHistoryTableHeader';\nimport { GitOpsDeploymentHistoryTableRow } from './GitOpsDeploymentHistoryTableRow';\nimport './GitOpsDeploymentHistory.scss';\n\ntype GitOpsDeploymentHistoryProps = {\n  customData: {\n    emptyStateMsg: string;\n    envs: string[];\n    applicationBaseURI: string;\n    location?: Location;\n  };\n};\n\ntype FilterKeys = {\n  [key: string]: string;\n};\n\nconst columnReducer = (s: GitOpsHistoryData): string => s?.environment;\n\nconst GitOpsDeploymentHistory: React.FC<GitOpsDeploymentHistoryProps> = ({\n  customData: { emptyStateMsg, envs, applicationBaseURI },\n}) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const gitopsFilter = 'rowFilter-';\n  const envRowFilters: RowFilter[] = [\n    {\n      type: 'environment',\n      filterGroupName: t('gitops-plugin~Environment'),\n      reducer: columnReducer,\n      items: _.map(envs.sort(), (env) => ({\n        id: env,\n        title: env,\n      })),\n    },\n  ];\n\n  const filterKeys: FilterKeys = (envRowFilters ?? []).reduce((acc, curr) => {\n    const str = `${gitopsFilter}${curr.type}`;\n    acc[curr.filterGroupName] = str;\n    return acc;\n  }, {});\n\n  const { rowFiltersFromURL: selectedRowFilters } = (() => {\n    const rowFiltersFromURL: string[] = [];\n    const params = new URLSearchParams(location.search);\n    _.map(filterKeys, (f) => {\n      const vals = params.get(f);\n      if (vals) {\n        rowFiltersFromURL.push(...vals.split(','));\n      }\n    });\n    return { rowFiltersFromURL };\n  })();\n\n  const historyBaseURI = `/api/gitops/history/environment`;\n  const [historyData, setHistoryData] = React.useState<GitOpsHistoryData[]>(null);\n  const [error, setError] = React.useState<string>(null);\n  React.useEffect(() => {\n    let ignore = false;\n    const getHistory = async () => {\n      if (!_.isEmpty(envs) && applicationBaseURI) {\n        let arrayHistory;\n        try {\n          arrayHistory = await Promise.all(\n            _.map(envs, (env) =>\n              getEnvData(historyBaseURI, historyBaseURI, env, applicationBaseURI),\n            ),\n          );\n          arrayHistory = arrayHistory?.flat(1);\n        } catch (err) {\n          if (err instanceof Error) {\n            if (err.name === 'HttpError' && err.message === 'Not Found') {\n              setError(\n                t(\n                  'gitops-plugin~The history cannot be obtained due to an HTTP Not Found Error. This could mean that the GitOps Operator needs to be upgraded to the latest version or the GitOps cluster pod is not running.',\n                ),\n              );\n            } else {\n              setError(\n                t(\n                  'gitops-plugin~The history cannot be obtained due to an error. Check the GitOps cluster pod log for any errors.',\n                ),\n              );\n            }\n          }\n        }\n        if (ignore) return;\n        setHistoryData(arrayHistory);\n      }\n    };\n    getHistory();\n    return () => {\n      ignore = true;\n    };\n  }, [applicationBaseURI, envs, historyBaseURI, historyData, t]);\n\n  let filteredData: GitOpsHistoryData[];\n  if (historyData) {\n    filteredData = new Array<GitOpsHistoryData>();\n    if (selectedRowFilters.length > 0) {\n      historyData.forEach((history) => {\n        selectedRowFilters.forEach((filter) => {\n          if (history.environment === filter) {\n            filteredData.push(history);\n          }\n        });\n      });\n    } else {\n      filteredData = historyData.slice();\n    }\n  }\n\n  return (\n    <div className=\"odc-gitops-history-list\">\n      {!historyData && !error ? (\n        <LoadingBox />\n      ) : error ? (\n        <GitOpsEmptyState emptyStateMsg={error} />\n      ) : emptyStateMsg ? (\n        <GitOpsEmptyState emptyStateMsg={emptyStateMsg || t('gitops-plugin~No history')} />\n      ) : (\n        <>\n          <FilterToolbar\n            data={historyData}\n            reduxIDs={['gitops-environments']}\n            hideNameLabelFilters\n            rowFilters={envRowFilters}\n          />\n          <Table\n            data={filteredData}\n            aria-label={t('gitops-plugin~Deployment history')}\n            Header={GitOpsDeploymentHistoryTableHeader}\n            Row={GitOpsDeploymentHistoryTableRow}\n            loaded={!emptyStateMsg}\n            rowFilters={envRowFilters}\n            virtualize\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GitOpsDeploymentHistory;\n","import { sortable } from '@patternfly/react-table';\nimport i18n from '@console/internal/i18n';\nimport { GitOpsDeploymentHistoryTableColumnClasses } from './GitOpsDeploymentHistoryTableColumnClasses';\n\nconst GitOpsDeploymentHistoryTableHeader = () => {\n  return [\n    {\n      title: i18n.t('gitops-plugin~Deployment Time'),\n      sortField: 'deployed_at',\n      transforms: [sortable],\n      props: { className: GitOpsDeploymentHistoryTableColumnClasses[0] },\n    },\n    {\n      title: i18n.t('gitops-plugin~Message'),\n      sortField: 'message',\n      transforms: [sortable],\n      props: { className: GitOpsDeploymentHistoryTableColumnClasses[1] },\n    },\n    {\n      title: i18n.t('gitops-plugin~Environment'),\n      sortField: 'environment',\n      transforms: [sortable],\n      props: { className: GitOpsDeploymentHistoryTableColumnClasses[2] },\n    },\n    {\n      title: i18n.t('gitops-plugin~Author'),\n      sortField: 'author',\n      transforms: [sortable],\n      props: { className: GitOpsDeploymentHistoryTableColumnClasses[3] },\n    },\n    {\n      title: i18n.t('gitops-plugin~Revision'),\n      sortField: 'revision',\n      transforms: [sortable],\n      props: { className: GitOpsDeploymentHistoryTableColumnClasses[4] },\n    },\n  ];\n};\n\nexport default GitOpsDeploymentHistoryTableHeader;\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { RowFunctionArgs, TableData } from '@console/internal/components/factory';\nimport { Timestamp } from '@console/internal/components/utils';\nimport { GitOpsHistoryData } from '../utils/gitops-types';\nimport { CommitRevision } from './CommitRevision';\nimport { GitOpsDeploymentHistoryTableColumnClasses } from './GitOpsDeploymentHistoryTableColumnClasses';\n\nexport const GitOpsDeploymentHistoryTableRow: React.FC<RowFunctionArgs<GitOpsHistoryData>> = (\n  props,\n) => {\n  const { obj: data } = props;\n  return (\n    <>\n      <TableData className={GitOpsDeploymentHistoryTableColumnClasses[0]}>\n        <Timestamp timestamp={data.deployed_at} key={data.deployed_at} />\n      </TableData>\n      <TableData\n        className={classNames(GitOpsDeploymentHistoryTableColumnClasses[1], 'co-break-word')}\n        columnID=\"description\"\n      >\n        {data.message}\n      </TableData>\n      <TableData\n        className={classNames(GitOpsDeploymentHistoryTableColumnClasses[2], 'co-break-word')}\n      >\n        {data.environment}\n      </TableData>\n      <TableData className={GitOpsDeploymentHistoryTableColumnClasses[3]}>{data.author}</TableData>\n      <TableData\n        className={classNames(GitOpsDeploymentHistoryTableColumnClasses[4], 'pf-v5-u-text-nowrap')}\n      >\n        <CommitRevision repoUrl={data.repo_url} revision={data.revision} />\n      </TableData>\n    </>\n  );\n};\n","import * as React from 'react';\nimport * as GitUrlParse from 'git-url-parse';\nimport { ExternalLink } from '@console/internal/components/utils';\n\nconst isSHARevision = (revision: string) => {\n  return revision.match(/^[a-f0-9]{5,40}$/) !== null;\n};\n\nfunction getProtocol(proto: string): string {\n  return proto === 'ssh' ? 'https' : proto;\n}\n\nfunction isSupportedSource(parsed: GitUrlParse.GitUrl): boolean {\n  return (\n    parsed.resource.startsWith('github') ||\n    ['gitlab.com', 'bitbucket.org'].indexOf(parsed.source) >= 0\n  );\n}\n\nfunction getRevisionUrl(url: string, revision: string): string {\n  const parsed = GitUrlParse(url);\n  let urlSubPath = isSHARevision(revision) ? 'commit' : 'tree';\n  if (url.indexOf('bitbucket') >= 0) {\n    urlSubPath = isSHARevision(revision) ? 'commits' : 'branch';\n  }\n  if (!isSupportedSource(parsed)) {\n    return null;\n  }\n  return `${getProtocol(parsed.protocol)}://${parsed.resource}/${parsed.owner}/${\n    parsed.name\n  }/${urlSubPath}/${revision || 'HEAD'}`;\n}\n\nexport const CommitRevision = ({\n  repoUrl,\n  revision,\n  children,\n}: {\n  repoUrl: string;\n  revision: string;\n  children?: React.ReactNode;\n}) => {\n  const revisionNumber = revision || '';\n  const url = getRevisionUrl(repoUrl, revisionNumber);\n  const content =\n    children || (isSHARevision(revisionNumber) ? revisionNumber.substring(0, 10) : revisionNumber);\n  return url !== null ? (\n    <ExternalLink href={url}>\n      <span style={{ marginRight: 'var(--pf-v5-global--spacer--xs)' }}>{content}</span>\n    </ExternalLink>\n  ) : (\n    <span>{content}</span>\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { fetchAppGroups } from './gitops-utils';\n\nconst useEnvDetails = (appName, manifestURL, pipelinesBaseURI) => {\n  const { t } = useTranslation();\n  const [envs, setEnvs] = React.useState<string[]>(null);\n  const [emptyStateMsg, setEmptyStateMsg] = React.useState(null);\n  React.useEffect(() => {\n    let ignore = false;\n\n    if (pipelinesBaseURI) {\n      fetchAppGroups(pipelinesBaseURI, manifestURL)\n        .then((appGroups) => {\n          if (ignore) return;\n          const app = _.find(appGroups, (appObj) => appName === appObj?.name);\n          if (!app?.environments) {\n            setEmptyStateMsg(\n              t(\n                'gitops-plugin~Environment details were not found. Try reloading the page or contacting an administrator.',\n              ),\n            );\n          }\n          setEnvs(app?.environments);\n        })\n        .catch((e) => {\n          // eslint-disable-next-line no-console\n          console.error('Unable to load EnvDetails', e);\n        });\n    }\n\n    return () => {\n      ignore = true;\n    };\n  }, [appName, manifestURL, pipelinesBaseURI, t]);\n\n  return [envs, emptyStateMsg];\n};\n\nexport default useEnvDetails;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { HorizontalNav, LoadingBox, Page } from '@console/internal/components/utils';\nimport { DevPreviewBadge } from '@console/shared';\nimport GitOpsDetailsPageHeading from './details/GitOpsDetailsPageHeading';\nimport GitOpsDetailsPage from './GitOpsDetailsPage';\nimport GitOpsDeploymentHistory from './history/GitOpsDeploymentHistory';\nimport { getPipelinesBaseURI, getApplicationsBaseURI } from './utils/gitops-utils';\nimport useDefaultSecret from './utils/useDefaultSecret';\nimport useEnvDetails from './utils/useEnvDetails';\n\nexport const GitOpsDetailsPageTabs: React.FC = () => {\n  const { t } = useTranslation();\n  const [secretNS, secretName] = useDefaultSecret();\n  const { appName } = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const manifestURL = searchParams.get('url');\n  const pipelinesBaseURI = getPipelinesBaseURI(secretNS, secretName);\n  const applicationBaseURI = getApplicationsBaseURI(appName, secretNS, secretName, manifestURL);\n  const [envs, emptyStateMsg] = useEnvDetails(appName, manifestURL, pipelinesBaseURI);\n\n  const pages: Page[] = [\n    {\n      href: `${'overview?url='}${manifestURL}`,\n      name: t('gitops-plugin~Overview'),\n      path: 'overview',\n      component: GitOpsDetailsPage,\n    },\n    {\n      href: `${'deploymenthistory?url='}${manifestURL}`,\n      name: t('gitops-plugin~Deployment history'),\n      path: 'deploymenthistory',\n      component: GitOpsDeploymentHistory,\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('gitops-plugin~{{appName}} · Details', { appName })}</title>\n      </Helmet>\n      <GitOpsDetailsPageHeading\n        url={location.pathname}\n        appName={appName}\n        manifestURL={manifestURL}\n        badge={<DevPreviewBadge />}\n      />\n      {!emptyStateMsg && !envs ? (\n        <LoadingBox />\n      ) : (\n        <HorizontalNav\n          pages={pages}\n          customData={{ emptyStateMsg, envs, applicationBaseURI, manifestURL, location }}\n          noStatusBox\n        />\n      )}\n    </>\n  );\n};\n\nexport default GitOpsDetailsPageTabs;\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { TFunction } from 'i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport CheIcon from './CheIcon';\nimport GiteaIcon from './GiteaIcon';\nimport { detectGitType } from './import-validation-utils';\n\nexport const routeDecoratorIcon = (\n  routeURL: string,\n  radius: number,\n  t: TFunction,\n  cheEnabled?: boolean,\n  cheIconURL?: string,\n): React.ReactElement => {\n  if (cheEnabled && routeURL) {\n    return cheIconURL ? (\n      <image xlinkHref={cheIconURL} width={radius} height={radius} />\n    ) : (\n      <CheIcon style={{ fontSize: radius }} />\n    );\n  }\n  switch (detectGitType(routeURL)) {\n    case GitProvider.INVALID:\n      // Not a valid url and thus not safe to use\n      return null;\n    case GitProvider.GITHUB:\n      return <GithubIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.BITBUCKET:\n      return (\n        <BitbucketIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />\n      );\n    case GitProvider.GITLAB:\n      return <GitlabIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.GITEA:\n      return <GiteaIcon style={{ fontSize: radius }} topology />;\n    default:\n      return <GitAltIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n  }\n};\n","import * as React from 'react';\n\nconst CheIcon: React.FC<React.HTMLProps<SVGElement>> = ({ style }): React.ReactElement => {\n  return (\n    <svg height=\"1em\" width=\"1em\" version=\"1.1\" viewBox=\"0 0 47 57\" style={style}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\">\n        <path\n          d=\"M0.032227,30.88l-0.032227-17.087,23.853-13.793,23.796,13.784-14.691,8.51-9.062-5.109-23.864,13.695z\"\n          fill=\"#fdb940\"\n        />\n        <path\n          d=\"M0,43.355l23.876,13.622,23.974-13.937v-16.902l-23.974,13.506-23.876-13.506v17.217z\"\n          fill=\"#525c86\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default CheIcon;\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { coFetchJSON } from '@console/internal/co-fetch';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { GitOpsManifestData, GitOpsAppGroupData } from './gitops-types';\n\nexport const getManifestURLs = (namespaces: K8sResourceKind[]): string[] => {\n  const annotation = 'app.openshift.io/vcs-uri';\n  return _.uniq(\n    namespaces\n      .filter((ns) => {\n        return !!ns.metadata?.annotations?.[annotation];\n      })\n      .map((ns) => {\n        return ns.metadata?.annotations?.[annotation];\n      }),\n  );\n};\n\nexport const getApplicationsListBaseURI = () => {\n  return `/api/gitops/applications`;\n};\n\nexport const fetchAppGroups = async (\n  baseURL: string,\n  manifestURL: string,\n): Promise<GitOpsAppGroupData[]> => {\n  let data: GitOpsManifestData;\n  try {\n    const newListApi = getApplicationsListBaseURI();\n    data = await coFetchJSON(`${newListApi}?url=${manifestURL}`);\n  } catch (err) {\n    try {\n      data = await coFetchJSON(`${baseURL}&url=${manifestURL}`);\n    } catch {} // eslint-disable-line no-empty\n    // Ignore and let empty data be handled by fetchAllAppGroups\n  }\n  return data?.applications ?? [];\n};\n\nexport const fetchAllAppGroups = async (baseURL: string, manifestURLs: string[], t: TFunction) => {\n  let emptyMsg: string = null;\n  let allAppGroups: GitOpsAppGroupData[] = null;\n  if (baseURL) {\n    if (_.isEmpty(manifestURLs)) {\n      emptyMsg = t('gitops-plugin~No GitOps manifest URLs found');\n    } else {\n      try {\n        allAppGroups = _.sortBy(\n          _.flatten(\n            await Promise.all(\n              _.map(manifestURLs, (manifestURL) => fetchAppGroups(baseURL, manifestURL)),\n            ),\n          ),\n          ['name'],\n        );\n      } catch {\n        emptyMsg = t('gitops-plugin~Error cannot retrieve applications');\n        return [allAppGroups, emptyMsg];\n      }\n      if (_.isEmpty(allAppGroups)) {\n        emptyMsg = t('gitops-plugin~No Application groups found');\n      }\n    }\n  }\n  return [allAppGroups, emptyMsg];\n};\n\nexport const getEnvData = async (v2EnvURI: string, envURI: string, env: string, appURI: string) => {\n  let data;\n  try {\n    data = await coFetchJSON(`${v2EnvURI}/${env}${appURI}`);\n  } catch {\n    try {\n      data = await coFetchJSON(`${envURI}/${env}${appURI}`);\n    } catch (error) {\n      throw error;\n    }\n  }\n  return data;\n};\n\nexport const getPipelinesBaseURI = (secretNS: string, secretName: string) => {\n  return secretNS && secretName\n    ? `/api/gitops/pipelines?secretNS=${secretNS}&secretName=${secretName}`\n    : undefined;\n};\n\nexport const getArgoCDFilteredAppsURI = (argocdBaseUri: string, appGroupName: string) => {\n  return argocdBaseUri && appGroupName\n    ? `${argocdBaseUri}/applications?labels=app.kubernetes.io%252Fname%253D${appGroupName}`\n    : undefined;\n};\n\nexport const getApplicationsBaseURI = (\n  appName: string,\n  secretNS: string,\n  secretName: string,\n  manifestURL: string,\n) => {\n  return secretNS && secretName\n    ? `/application/${appName}?secretNS=${secretNS}&secretName=${secretName}&url=${manifestURL}&app=${appName}`\n    : undefined;\n};\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport './GitOpsEmptyState.scss';\n\ninterface GitOpsEmptyStateProps {\n  emptyStateMsg: string;\n}\n\nconst GitOpsEmptyState: React.FC<GitOpsEmptyStateProps> = ({ emptyStateMsg }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateHeader icon={<EmptyStateIcon icon={CubesIcon} />} />\n    <EmptyStateBody>{emptyStateMsg}</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default GitOpsEmptyState;\n","import * as _ from 'lodash';\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector } from 'react-redux';\nimport { userStateToProps } from '@console/internal/reducers/ui';\n\nconst useDefaultSecret = () => {\n  const { user } = useSelector(userStateToProps);\n  const userName = _.replace(user?.metadata?.name ?? '', /[^a-zA-Z0-9-]/g, '');\n  const defaultSecret = userName\n    ? [`pipelines-${userName}-github`, `${userName}-github-token`]\n    : [];\n  return defaultSecret;\n};\n\nexport default useDefaultSecret;\n","import * as classNames from 'classnames';\n\nexport const GitOpsDeploymentHistoryTableColumnClasses = [\n  classNames('pf-m-width-30'),\n  classNames('pf-m-width-30'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-m-width-25'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-md', 'pf-m-width-30'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg', 'pf-m-width-25'),\n];\n"],"sourceRoot":""}