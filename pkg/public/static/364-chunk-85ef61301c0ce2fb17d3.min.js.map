{"version":3,"sources":["webpack:///./public/components/modals/configure-update-strategy-modal.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/index.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/const.ts","webpack:///./packages/console-shared/src/components/dynamic-form/utils.ts","webpack:///./packages/console-shared/src/components/dynamic-form/types.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/resource-requirements.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/fields.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/match-expressions.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/widgets.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/affinity.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/templates.tsx"],"names":["getNumberOrPercent","value","indexOf","ConfigureUpdateStrategy","props","showDescription","t","className","name","uid","onChange","e","onChangeStrategyType","target","checked","strategyType","title","subTitle","autoFocus","htmlFor","disabled","placeholder","size","type","id","maxUnavailable","onChangeMaxUnavailable","replicas","content","count","maxSurge","onChangeMaxSurge","desc","ConfigureUpdateStrategyModal","setStrategyType","deployment","spec","setMaxUnavailable","setMaxSurge","onSubmit","event","preventDefault","patch","path","op","promise","handlePromise","close","errorMessage","inProgress","submitText","cancel","configureUpdateStrategyModal","displayName","DynamicForm","ArrayFieldTemplate","errors","ErrorTemplate","fields","FieldTemplate","formContext","formData","noValidate","ObjectFieldTemplate","onError","onCancel","schema","uiSchema","widgets","customUISchema","noActions","showAlert","restProps","schemaErrors","length","console","warn","isInline","variant","asDefinitionList","FallbackComponent","noHtml5Validate","next","newErrors","error","stack","showErrorList","style","paddingBottom","onClick","goBack","K8S_UI_SCHEMA","apiVersion","label","kind","status","JSON_SCHEMA_GROUP_TYPES","JSON_SCHEMA_NUMBER_TYPES","THOUSAND","MILLION","BILLION","UNSUPPORTED_SCHEMA_PROPERTIES","stringPathToUISchemaPath","map","subPath","test","useSchemaLabel","defaultLabel","options","useSchemaDescription","defaultDescription","description","getSchemaErrors","message","unsupportedProperty","hasNoFields","jsonSchema","noUIFieldOrWidget","array","items","object","properties","property","propertyName","boolean","integer","number","string","getUISortOrder","fallback","Number","key","includes","getControlFieldsAtPath","dependency","controlFieldPath","slice","controlFieldName","childUISchema","getJSONSchemaPropertySortWeight","currentPath","isRequired","required","propertyUISchema","controlFields","isControlField","siblingDependency","uiSortOrder","controlFieldOffset","offset","Math","max","controlField","Infinity","getJSONSchemaOrder","descendantOrder","handleArray","propertyNames","uiOrder","sortBy","toJS","orderAccumulator","propertySchema","handleObject","pruneRecursive","current","sample","shouldPrune","valueIsEmpty","definedAndEmpty","undefined","prune","obj","JSONSchemaType","ResourceRequirements","cpu","memory","storage","onChangeCPU","onChangeMemory","onChangeStorage","fontWeight","ResourceRequirementsModal","model","setCPU","setMemory","setStorage","newObj","submit","ResourceRequirementsModalLink","k8s","getIn","none","modal","Description","FormField","children","showLabel","FieldSet","idSchema","expanded","setExpanded","$id","isExpanded","isHidden","ResourceRequirementsField","limits","mem","sto","requests","UpdateStrategyField","rollingUpdate","NodeAffinityField","affinity","PodAffinityField","DescriptionField","DropdownField","selectedKey","val","LabelsField","inputProps","newValue","objectify","tags","arrayify","MatchExpressionsField","matchExpressions","v","NullField","SchemaField","fieldSchema","registry","rootSchema","resolvedSchema","UNARY_OPERATORS","Exists","DoesNotExist","ALL_OPERATORS","Equals","In","NotEqual","NotIn","MatchExpression","expression","allowedOperators","onClickRemove","operator","values","dropDownClassName","reduce","acc","o","newOperator","join","split","trim","MatchExpressions","index","filter","_exp","i","removeExpression","newExpression","exp","updateExpression","TextWidget","onBlur","onFocus","readonly","schemaType","NumberWidget","currentTarget","readOnly","numberValue","PasswordWidget","CheckboxWidget","isChecked","_event","SwitchWidget","labelOn","labelOff","PodCountWidget","changeValueBy","operation","ImagePullPolicyWidget","currentValue","policy","SelectWidget","enumOptions","itemAccumulator","option","BaseInput","K8sResourceWidget","groupVersionKind","selector","namespace","selectorObj","resources","namespaced","int32","int64","AffinityRuleType","ALLOWED_MATCH_EXPRESSION_OPERATORS","DEFAULT_MATCH_EXPRESSION","DEFAULT_NODE_AFFINITY","requiredDuringSchedulingIgnoredDuringExecution","nodeSelectorTerms","preferredDuringSchedulingIgnoredDuringExecution","weight","preference","DEFAULT_POD_AFFINITY","topologyKey","labelSelector","podAffinityTerm","NodeAffinityRule","showRemoveButton","rule","item","Preferred","parsedValue","NodeAffinity","requiredRules","preferredRules","requiredIndex","atIndex","updateRequiredRules","removeRequiredRule","_v","Required","preferredIndex","updatePreferredRules","removePreferredRule","PodAffinityRule","parsed","PodAffinity","ruleIndex","preferredRule","AtomicFieldTemplate","rawErrors","AdvancedProperties","textCollapsed","textExpanded","hidden","dependencyMet","setDependencyMet","controlFieldValue","toString","advanced","normalProperties","advancedProperties","p","onAddClick","hasRemove","onDropIndexClick","singularLabel"],"mappings":"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","file":"364-chunk-85ef61301c0ce2fb17d3.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nimport { k8sPatch, Patch, DeploymentUpdateStrategy, K8sResourceKind } from '../../module/k8s';\nimport { DeploymentModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { withHandlePromise, HandlePromiseProps } from '../utils';\nimport { RadioInput } from '../radio';\n\nexport const getNumberOrPercent = (value) => {\n  if (typeof value === 'undefined') {\n    return null;\n  }\n  if (typeof value === 'string' && value.indexOf('%') > -1) {\n    return value;\n  }\n\n  return _.toInteger(value);\n};\n\nexport const ConfigureUpdateStrategy: React.FC<ConfigureUpdateStrategyProps> = (props) => {\n  const { showDescription = true } = props;\n  const { t } = useTranslation();\n  return (\n    <>\n      {showDescription && (\n        <div className=\"co-m-form-row\">\n          <p>{t('public~How should the pods be replaced when a new revision is created?')}</p>\n        </div>\n      )}\n      <div className=\"row co-m-form-row\">\n        <div className=\"col-sm-12\">\n          <RadioInput\n            name={`${props.uid || 'update-strategy'}-type`}\n            onChange={(e) => {\n              props.onChangeStrategyType(e.target.value);\n            }}\n            value=\"RollingUpdate\"\n            checked={props.strategyType === 'RollingUpdate'}\n            title={t('public~RollingUpdate')}\n            subTitle={t('public~(default)')}\n            autoFocus={props.strategyType === 'RollingUpdate'}\n          >\n            <div className=\"co-m-radio-desc\">\n              <p className=\"text-muted modal-paragraph\">\n                {t(\n                  'public~Execute a smooth roll out of the new revision, based on the settings below',\n                )}\n              </p>\n\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-sm-3\">\n                  <label htmlFor=\"input-max-unavailable\" className=\"control-label co-break-word\">\n                    {t('public~Max unavailable')}\n                  </label>\n                </div>\n                <div className=\"co-m-form-col col-sm-9\">\n                  <div className=\"form-inline\">\n                    <div className=\"pf-v5-c-input-group\">\n                      <input\n                        disabled={props.strategyType !== 'RollingUpdate'}\n                        placeholder=\"25%\"\n                        size={5}\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        id=\"input-max-unavailable\"\n                        value={props.maxUnavailable}\n                        onChange={(e) => props.onChangeMaxUnavailable(e.target.value)}\n                        aria-describedby=\"input-max-unavailable-help\"\n                      />\n                      {props.replicas && (\n                        <span className=\"pf-v5-c-input-group__text\">\n                          <Tooltip content={t('public~Current desired pod count')}>\n                            <span>{t('public~of pod', { count: props.replicas })}</span>\n                          </Tooltip>\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <p className=\"help-block text-muted\" id=\"input-max-unavailable-help\">\n                    {t(\n                      'public~Percentage of total number of pods or the maximum number ' +\n                        'of pods that can be unavailable during the update(optional)',\n                    )}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-sm-3\">\n                  <label htmlFor=\"input-max-surge\" className=\"control-label co-break-word\">\n                    {t('public~Max surge')}\n                  </label>\n                </div>\n                <div className=\"co-m-form-col col-sm-9\">\n                  <div className=\"form-inline\">\n                    <div className=\"pf-v5-c-input-group\">\n                      <input\n                        disabled={props.strategyType !== 'RollingUpdate'}\n                        placeholder=\"25%\"\n                        size={5}\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        id=\"input-max-surge\"\n                        value={props.maxSurge}\n                        onChange={(e) => props.onChangeMaxSurge(e.target.value)}\n                        aria-describedby=\"input-max-surge-help\"\n                      />\n                      <span className=\"pf-v5-c-input-group__text\">\n                        <Tooltip content={t('public~Current desired pod count')}>\n                          <span>{t('public~greater than pod', { count: props.replicas })}</span>\n                        </Tooltip>\n                      </span>\n                    </div>\n                  </div>\n                  <p className=\"help-block text-muted\" id=\"input-max-surge-help\">\n                    {t(\n                      'public~Percentage of total number of pods or the maximum number ' +\n                        'of pods that can be scheduled above the original number of pods(optional)',\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </RadioInput>\n        </div>\n\n        <div className=\"col-sm-12\">\n          <RadioInput\n            name={`${props.uid || 'update-strategy'}-type`}\n            onChange={(e) => {\n              props.onChangeStrategyType(e.target.value);\n            }}\n            value=\"Recreate\"\n            checked={props.strategyType === 'Recreate'}\n            title={t('public~Recreate')}\n            desc={t('public~Shut down all existing pods before creating new ones')}\n            autoFocus={props.strategyType === 'Recreate'}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const ConfigureUpdateStrategyModal = withHandlePromise(\n  (props: ConfigureUpdateStrategyModalProps) => {\n    const [strategyType, setStrategyType] = React.useState(\n      _.get(props.deployment.spec, 'strategy.type'),\n    );\n    const [maxUnavailable, setMaxUnavailable] = React.useState(\n      _.get(props.deployment.spec, 'strategy.rollingUpdate.maxUnavailable', '25%'),\n    );\n    const [maxSurge, setMaxSurge] = React.useState(\n      _.get(props.deployment.spec, 'strategy.rollingUpdate.maxSurge', '25%'),\n    );\n\n    const { t } = useTranslation();\n\n    const submit = (event) => {\n      event.preventDefault();\n\n      const patch: Patch = { path: '/spec/strategy/rollingUpdate', op: 'remove' };\n      if (strategyType === 'RollingUpdate') {\n        patch.value = {\n          maxUnavailable: getNumberOrPercent(maxUnavailable || '25%'),\n          maxSurge: getNumberOrPercent(maxSurge || '25%'),\n        };\n        patch.op = 'add';\n      }\n      const promise = k8sPatch(DeploymentModel, props.deployment, [\n        patch,\n        { path: '/spec/strategy/type', value: strategyType, op: 'replace' },\n      ]);\n      props.handlePromise(promise, props.close);\n    };\n\n    return (\n      <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>{t('public~Edit update strategy')}</ModalTitle>\n        <ModalBody>\n          <ConfigureUpdateStrategy\n            strategyType={strategyType}\n            maxUnavailable={maxUnavailable}\n            maxSurge={maxSurge}\n            onChangeStrategyType={setStrategyType}\n            onChangeMaxUnavailable={setMaxUnavailable}\n            onChangeMaxSurge={setMaxSurge}\n            replicas={props.deployment.spec.replicas}\n          />\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={props.errorMessage}\n          inProgress={props.inProgress}\n          submitText={t('public~Save')}\n          cancel={props.cancel}\n        />\n      </form>\n    );\n  },\n);\n\nexport const configureUpdateStrategyModal = createModalLauncher(ConfigureUpdateStrategyModal);\n\nexport type ConfigureUpdateStrategyProps = {\n  showDescription?: boolean;\n  strategyType: DeploymentUpdateStrategy['type'];\n  maxUnavailable: number | string;\n  maxSurge: number | string;\n  onChangeStrategyType: (strategy: DeploymentUpdateStrategy['type']) => void;\n  onChangeMaxUnavailable: (maxUnavailable: number | string) => void;\n  onChangeMaxSurge: (maxSurge: number | string) => void;\n  replicas?: number;\n  uid?: string;\n};\n\nexport type ConfigureUpdateStrategyModalProps = {\n  deployment: K8sResourceKind;\n  handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n} & HandlePromiseProps;\n\nConfigureUpdateStrategy.displayName = 'ConfigureUpdateStrategy';\n","import * as React from 'react';\nimport { Accordion, ActionGroup, Button, Alert } from '@patternfly/react-core';\nimport Form, { FormProps } from '@rjsf/core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ErrorBoundaryFallbackProps } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\nimport { K8S_UI_SCHEMA } from './const';\nimport defaultFields from './fields';\nimport {\n  FieldTemplate as DefaultFieldTemplate,\n  ObjectFieldTemplate as DefaultObjectFieldTemplate,\n  ArrayFieldTemplate as DefaultArrayFieldTemplate,\n  ErrorTemplate as DefaultErrorTemplate,\n} from './templates';\nimport { getSchemaErrors } from './utils';\nimport defaultWidgets from './widgets';\nimport './styles.scss';\n\nexport const DynamicForm: React.FC<DynamicFormProps> = ({\n  ArrayFieldTemplate = DefaultArrayFieldTemplate,\n  errors = [],\n  ErrorTemplate = DefaultErrorTemplate,\n  fields = {},\n  FieldTemplate = DefaultFieldTemplate,\n  formContext,\n  formData = {},\n  noValidate = false,\n  ObjectFieldTemplate = DefaultObjectFieldTemplate,\n  onChange = _.noop,\n  onError = _.noop,\n  onSubmit = _.noop,\n  onCancel,\n  schema,\n  uiSchema = {},\n  widgets = {},\n  customUISchema,\n  noActions,\n  showAlert = true,\n  ...restProps\n}) => {\n  const { t } = useTranslation();\n  const schemaErrors = getSchemaErrors(schema);\n  // IF the top level schema is unsupported, don't render a form at all.\n  if (schemaErrors.length) {\n    // eslint-disable-next-line no-console\n    console.warn('A form could not be generated for this resource.', schemaErrors);\n    return (\n      <Alert\n        isInline\n        className=\"co-alert co-break-word\"\n        variant=\"info\"\n        title={t(\n          'console-shared~A form is not available for this resource. Please use the YAML view.',\n        )}\n      />\n    );\n  }\n  const FormErrorFallbackComponent: React.FC<ErrorBoundaryFallbackProps> = () => {\n    return (\n      <Alert\n        isInline\n        className=\"co-alert co-break-word\"\n        variant=\"danger\"\n        title={t(\n          'console-shared~There is some issue in this form view. Please select \"YAML view\" for full control.',\n        )}\n      />\n    );\n  };\n\n  return (\n    <>\n      {showAlert && (\n        <Alert\n          isInline\n          className=\"co-alert co-break-word\"\n          variant=\"info\"\n          title={t(\n            'console-shared~Note: Some fields may not be represented in this form view. Please select \"YAML view\" for full control.',\n          )}\n        />\n      )}\n      <Accordion asDefinitionList={false} className=\"co-dynamic-form__accordion\">\n        <ErrorBoundary FallbackComponent={FormErrorFallbackComponent}>\n          <Form\n            {...restProps}\n            className=\"co-dynamic-form\"\n            noValidate={noValidate}\n            ArrayFieldTemplate={ArrayFieldTemplate}\n            fields={{ ...defaultFields, ...fields }}\n            FieldTemplate={FieldTemplate}\n            formContext={{ ...formContext, formData }}\n            formData={formData}\n            noHtml5Validate\n            ObjectFieldTemplate={ObjectFieldTemplate}\n            onChange={(next) => onChange(next.formData)}\n            onError={(newErrors) => onError(_.map(newErrors, (error) => error.stack))}\n            onSubmit={onSubmit}\n            schema={schema}\n            // Don't show the react-jsonschema-form error list at top\n            showErrorList={false}\n            uiSchema={customUISchema ? uiSchema : _.defaultsDeep({}, K8S_UI_SCHEMA, uiSchema)}\n            widgets={{ ...defaultWidgets, ...widgets }}\n          >\n            {errors.length > 0 && <ErrorTemplate errors={errors} />}\n            {!noActions && (\n              <div style={{ paddingBottom: '30px' }}>\n                <ActionGroup className=\"pf-v5-c-form\">\n                  <Button type=\"submit\" variant=\"primary\" data-test=\"create-dynamic-form\">\n                    {t('console-shared~Create')}\n                  </Button>\n                  <Button onClick={onCancel || history.goBack} variant=\"secondary\">\n                    {t('console-shared~Cancel')}\n                  </Button>\n                </ActionGroup>\n              </div>\n            )}\n          </Form>\n        </ErrorBoundary>\n      </Accordion>\n    </>\n  );\n};\n\ntype DynamicFormProps = FormProps<any> & {\n  errors?: string[];\n  ErrorTemplate?: React.FC<{ errors: string[] }>;\n  noActions?: boolean;\n  customUISchema?: boolean;\n  showAlert?: boolean;\n  onCancel?: () => void;\n};\n\nexport * from './types';\nexport * from './const';\n","export const K8S_UI_SCHEMA = {\n  apiVersion: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  kind: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  spec: {\n    'ui:options': {\n      label: false,\n    },\n  },\n  status: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  'ui:order': ['metadata', 'spec', '*'],\n};\n\nexport const JSON_SCHEMA_GROUP_TYPES: string[] = ['object', 'array'];\nexport const JSON_SCHEMA_NUMBER_TYPES: string[] = ['number', 'integer'];\n\nexport const THOUSAND = 10 ** 3;\nexport const MILLION = 10 ** 6;\nexport const BILLION = 10 ** 9;\n","import { UiSchema } from '@rjsf/core';\nimport { getSchemaType, getUiOptions } from '@rjsf/core/dist/cjs/utils';\nimport * as Immutable from 'immutable';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { THOUSAND, MILLION, BILLION } from './const';\nimport { DynamicFormSchemaError, JSONSchemaType } from './types';\n\nconst UNSUPPORTED_SCHEMA_PROPERTIES = ['allOf', 'anyOf', 'oneOf'];\n\n// Transform a path string to a JSON schema path array\nexport const stringPathToUISchemaPath = (path: string): string[] =>\n  (_.toPath(path) ?? []).map((subPath) => {\n    return /^\\d+$/.test(subPath) ? 'items' : subPath;\n  });\n\nexport const useSchemaLabel = (schema: JSONSchema7, uiSchema: UiSchema, defaultLabel?: string) => {\n  const options = getUiOptions(uiSchema ?? {});\n  const showLabel = options?.label ?? true;\n  const label = (options?.title || schema?.title) as string;\n  return [showLabel, label || defaultLabel] as [boolean, string];\n};\n\nexport const useSchemaDescription = (\n  schema: JSONSchema7,\n  uiSchema: UiSchema,\n  defaultDescription?: string,\n) =>\n  (getUiOptions(uiSchema ?? {})?.description ||\n    schema?.description ||\n    defaultDescription) as string;\n\nexport const getSchemaErrors = (schema: JSONSchema7): DynamicFormSchemaError[] => {\n  return [\n    ...(_.isEmpty(schema)\n      ? [\n          {\n            title: 'Empty Schema',\n            message: 'Schema is empty.',\n          },\n        ]\n      : []),\n    ..._.map(\n      _.intersection(_.keys(schema), UNSUPPORTED_SCHEMA_PROPERTIES),\n      (unsupportedProperty) => ({\n        title: 'Unsupported Property',\n        message: `Cannot generate form fields for JSON schema with ${unsupportedProperty} property.`,\n      }),\n    ),\n  ];\n};\n\n// Determine if a schema will produce no form fields.\nexport const hasNoFields = (jsonSchema: JSONSchema7 = {}, uiSchema: UiSchema = {}): boolean => {\n  // If schema is empty or has unsupported properties, it will not render any fields on the form\n  if (getSchemaErrors(jsonSchema).length > 0) {\n    return true;\n  }\n\n  const type = getSchemaType(jsonSchema) ?? '';\n  const noUIFieldOrWidget = !uiSchema?.['ui:field'] && !uiSchema?.['ui:widget'];\n  switch (type) {\n    case JSONSchemaType.array:\n      return noUIFieldOrWidget && hasNoFields(jsonSchema.items as JSONSchema7, uiSchema?.items);\n    case JSONSchemaType.object:\n      return (\n        noUIFieldOrWidget &&\n        _.every(jsonSchema?.properties, (property, propertyName) =>\n          hasNoFields(property as JSONSchema7, uiSchema?.[propertyName]),\n        )\n      );\n    case JSONSchemaType.boolean:\n    case JSONSchemaType.integer:\n    case JSONSchemaType.number:\n    case JSONSchemaType.string:\n      return false;\n    default:\n      return noUIFieldOrWidget;\n  }\n};\n\n// Recursively find the minimum ui:sortOrder property found within this uiSchema or it's children.\nconst getUISortOrder = (uiSchema: UiSchema, fallback: number): number => {\n  return Number(\n    uiSchema?.['ui:sortOrder'] ??\n      _.min(\n        _.keys(uiSchema).map((key) => {\n          return !key.includes(':') && _.isObject(uiSchema?.[key])\n            ? getUISortOrder(uiSchema?.[key], fallback)\n            : fallback;\n        }),\n      ) ??\n      fallback,\n  );\n};\n\n// Return an array of dependency control field names that exist within uiSchema at the specified\n// path.\nconst getControlFieldsAtPath = (uiSchema: UiSchema, path: string[]): string[] => {\n  if (!_.isObject(uiSchema)) {\n    return [];\n  }\n  const { 'ui:dependency': dependency } = uiSchema;\n  const dependencyMatchesPath =\n    dependency && _.isEqual(dependency.controlFieldPath.slice(0, -1), path ?? []);\n  return [\n    ...(dependencyMatchesPath ? [dependency.controlFieldName] : []),\n    ..._.flatMap(uiSchema, (childUISchema) => getControlFieldsAtPath(childUISchema, path)),\n  ];\n};\n\n/**\n * Give a property name a sort wieght based on whether it has ui schema, is required, or is a\n * control field for a property with a field dependency. A lower weight means higher sort order.\n * Fields are weighted according to the following tiers:\n *  Tier 1 (negative 10^9 - 10^6 magnitude):  Required fields with ui schema\n *  Tier 2 (negative 10^9 magnitude):         Required fields without ui schema\n *  Tier 3 (negative 10^6 magnitude):         Optional fields with ui schema\n *  Tier 4 (positive 10^3 maginitude):        Control fields that don't fit any above\n *  Tier 5 (Infinity):                        All other fields\n *\n * Within each of the above tiers, fields are further weighted based on field dependency and ui\n * schema defined sort order:\n *   - Fields without dependency: base weight + ui schema sort order\n *   - Control field:             base weight + ui schema sort order * 1000\n *   - Dependent field:           control field weight + ui schema sort order\n *\n * These weight numbers are arbitrary, but spaced far enough apart to prevent collisions.\n */\nconst getJSONSchemaPropertySortWeight = (\n  property: string,\n  jsonSchema: JSONSchema7,\n  uiSchema: UiSchema,\n  currentPath?: string[],\n): number => {\n  const isRequired = (jsonSchema?.required ?? []).includes(property);\n  const propertyUISchema = uiSchema?.[property];\n\n  // All control fields that exist within uiSchema and match this path\n  const controlFields = getControlFieldsAtPath(propertyUISchema, currentPath);\n\n  // Any sibling has a dependency with this as the control field.\n  const isControlField = _.some(uiSchema, ({ 'ui:dependency': siblingDependency }) =>\n    _.isEqual(siblingDependency?.controlFieldPath, [...(currentPath ?? []), property]),\n  );\n\n  // Minimum'ui:sortOrder' for this property and it's children. Use propertyNames.length as a fallback,\n  // which ensures that properties without a \"ui:sortOrder\" have highest weight.\n  const uiSortOrder = getUISortOrder(propertyUISchema, _.keys(jsonSchema?.properties).length);\n\n  // A small offset that is added to the base weight so that control fields get sorted\n  // below other fields in the same 'tier', and allows for depenendt fields to be sorted\n  // directly after their control field.\n  const controlFieldOffset = isControlField ? uiSortOrder * THOUSAND : 0;\n\n  // Total offset to be added to base tier\n  const offset = controlFieldOffset + uiSortOrder;\n\n  // If this property or it's children have a control field at the current path, it's weight is\n  // based on the highest weight control field.\n  if (controlFields?.length) {\n    return (\n      Math.max(\n        ...controlFields.map((controlField) =>\n          getJSONSchemaPropertySortWeight(controlField, jsonSchema, uiSchema, currentPath),\n        ),\n      ) + offset\n    );\n  }\n\n  // Tier 1 = -1001000000 (negative one billion one million) + offset\n  // Tier 2 = -1000000000 (negagive one billion) + offset\n  // Tier 3 = -1000000 (negative one million) + offset\n  // Tier 4 = 0 + offset\n  // Tier 5 = Infinity\n  return (\n    // Doesn't meet any sorting criteria, set to infinity\n    (!isRequired && !propertyUISchema && !controlFieldOffset ? Infinity : 0) -\n    (isRequired ? BILLION : 0) -\n    (propertyUISchema ? MILLION : 0) +\n    offset\n  );\n};\n\n// Given a JSONSchema and associated uiSchema, create the appropriate ui schema order property.\n// Orders properties according to the following rules:\n//  - required properties with an associated ui schema come first,\n//  - required properties without an associated ui schema next,\n//  - optional fields with an associated ui schema next,\n//  - field dependency properties (control then dependent)\n//  - all other properties\nexport const getJSONSchemaOrder = (\n  jsonSchema: JSONSchema7,\n  uiSchema: UiSchema,\n  currentPath?: string[],\n) => {\n  const type = getSchemaType(jsonSchema ?? {});\n  const handleArray = () => {\n    const descendantOrder = getJSONSchemaOrder(jsonSchema?.items as JSONSchema7, uiSchema?.items, [\n      ...(currentPath ?? []),\n      'items',\n    ]);\n    return !_.isEmpty(descendantOrder) ? { items: descendantOrder } : {};\n  };\n\n  const handleObject = () => {\n    const propertyNames = _.keys(jsonSchema?.properties ?? {});\n    if (_.isEmpty(propertyNames)) {\n      return {};\n    }\n\n    const uiOrder = Immutable.Set(propertyNames)\n      .sortBy((property) =>\n        getJSONSchemaPropertySortWeight(property, jsonSchema, uiSchema, currentPath ?? []),\n      )\n      .toJS();\n\n    return {\n      ...(uiOrder.length > 1 && { 'ui:order': uiOrder }),\n      ..._.reduce(\n        jsonSchema?.properties ?? {},\n        (orderAccumulator, propertySchema, propertyName) => {\n          const descendantOrder = getJSONSchemaOrder(\n            propertySchema as JSONSchema7,\n            uiSchema?.[propertyName],\n            [...(currentPath ?? []), propertyName],\n          );\n          if (_.isEmpty(descendantOrder)) {\n            return orderAccumulator;\n          }\n          return {\n            ...orderAccumulator,\n            [propertyName]: descendantOrder,\n          };\n        },\n        {},\n      ),\n    };\n  };\n\n  switch (type) {\n    case JSONSchemaType.array:\n      return handleArray();\n    case JSONSchemaType.object:\n      return handleObject();\n    default:\n      return {};\n  }\n};\n\n// Returns true if a value is not nil and is empty\nconst definedAndEmpty = (value) => !_.isNil(value) && _.isEmpty(value);\n\n// Helper function for prune\n// TODO (jon) Make this pure\nconst pruneRecursive = (current: any, sample: any): any => {\n  const valueIsEmpty = (value, key) =>\n    _.isNil(value) ||\n    _.isNaN(value) ||\n    (_.isString(value) && _.isEmpty(value)) ||\n    (_.isObject(value) && _.isEmpty(pruneRecursive(value, sample?.[key])));\n\n  // Value should be pruned if it is empty and the correspondeing sample is not explicitly\n  // defined as an empty value.\n  const shouldPrune = (value, key) => valueIsEmpty(value, key) && !definedAndEmpty(sample?.[key]);\n\n  // Prune each property of current value that meets the pruning criteria\n  _.forOwn(current, (value, key) => {\n    if (shouldPrune(value, key)) {\n      delete current[key];\n    }\n  });\n\n  // remove any leftover undefined values from the delete operation on an array\n  if (_.isArray(current)) {\n    _.pull(current, undefined);\n  }\n\n  return current;\n};\n\n// Deeply remove all empty, NaN, null, or undefined values from an object or array. If a value meets\n// the above criteria, but the corresponding sample is explicitly defined as an empty vaolue, it\n// will not be pruned.\n// Based on https://stackoverflow.com/a/26202058/8895304\nexport const prune = (obj: any, sample?: any): any => {\n  return pruneRecursive(_.cloneDeep(obj), sample);\n};\n","export enum JSONSchemaType {\n  string = 'string',\n  number = 'number',\n  integer = 'integer',\n  boolean = 'boolean',\n  null = 'null',\n  array = 'array',\n  object = 'object',\n}\n\nexport type DynamicFormFieldOptionsList = {\n  label: string;\n  value: string;\n}[];\n\nexport type DynamicFormFieldDependency = {\n  controlFieldPath: string;\n  controlFieldValue: string;\n  controlFieldName: string;\n};\n\nexport type UiSchemaOptionsWithDependency = {\n  dependency?: DynamicFormFieldDependency;\n};\n\nexport type DynamicFormSchemaError = {\n  title: string;\n  message: string;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise } from '@console/internal/components/utils';\nimport { k8sUpdate, referenceFor, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\n\nexport const ResourceRequirements: React.FC<ResourceRequirementsProps> = (props) => {\n  const { t } = useTranslation();\n  const { cpu, memory, storage, onChangeCPU, onChangeMemory, onChangeStorage, path = '' } = props;\n\n  return (\n    <div className=\"row co-m-form-row\">\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.cpu`}\n        >\n          {t('olm~CPU cores')}\n        </label>\n        <input\n          value={cpu}\n          onChange={(e) => onChangeCPU(e.target.value)}\n          id={`${path}.cpu`}\n          name=\"cpu\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"500m\"\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.memory`}\n        >\n          {t('olm~Memory')}\n        </label>\n        <input\n          value={memory}\n          onChange={(e) => onChangeMemory(e.target.value)}\n          id={`${path}.memory`}\n          name=\"memory\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"50Mi\"\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.ephemeral-storage`}\n        >\n          {t('olm~Storage')}\n        </label>\n        <input\n          value={storage}\n          onChange={(e) => onChangeStorage(e.target.value)}\n          id={`${path}.ephemeral-storage`}\n          name=\"ephemeral-storage\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"50Mi\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const ResourceRequirementsModal = withHandlePromise(\n  (props: ResourceRequirementsModalProps) => {\n    const { t } = useTranslation();\n    const { obj, path, type, model, close, handlePromise } = props;\n    const [cpu, setCPU] = React.useState<string>(_.get(obj.spec, `${path}.${type}.cpu`, ''));\n    const [memory, setMemory] = React.useState<string>(\n      _.get(obj.spec, `${path}.${type}.memory`, ''),\n    );\n    const [storage, setStorage] = React.useState<string>(\n      _.get(obj.spec, `${path}.${type}.ephemeral-storage`, ''),\n    );\n\n    const submit = (e) => {\n      e.preventDefault();\n      const newObj = _.set(_.cloneDeep(obj), `spec.${path}.${type}`, {\n        ...(cpu && { cpu }),\n        ...(memory && { memory }),\n        ...(storage && { 'ephemeral-storage': storage }),\n      });\n      return handlePromise(k8sUpdate(model, newObj), close);\n    };\n\n    return (\n      <form onSubmit={(e) => submit(e)} className=\"modal-content\">\n        <ModalTitle>{props.title}</ModalTitle>\n        <ModalBody>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">{props.description}</div>\n          </div>\n          <ResourceRequirements\n            cpu={cpu}\n            memory={memory}\n            storage={storage}\n            onChangeCPU={setCPU}\n            onChangeMemory={setMemory}\n            onChangeStorage={setStorage}\n            path={path}\n          />\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={props.errorMessage}\n          inProgress={props.inProgress}\n          submitText={t('public~Save')}\n          cancel={props.cancel}\n        />\n      </form>\n    );\n  },\n);\n\nconst stateToProps = ({ k8s }: RootState, { obj }) => ({\n  model: k8s.getIn(['RESOURCES', 'models', referenceFor(obj)]) as K8sKind,\n});\n\nexport const ResourceRequirementsModalLink = connect(stateToProps)(\n  (props: ResourceRequirementsModalLinkProps) => {\n    const { obj, type, path, model } = props;\n    const { t } = useTranslation();\n    const none = t('public~None');\n    const { cpu, memory, 'ephemeral-storage': storage } = _.get(obj.spec, `${path}.${type}`, {});\n\n    const onClick = () => {\n      const modal = createModalLauncher(ResourceRequirementsModal);\n      const description = t('olm~Define the resource {{type}} for this {{kind}} instance.', {\n        type,\n        kind: obj.kind,\n      });\n      const title = t('olm~{{kind}} Resource {{type}}', {\n        kind: obj.kind,\n        type: _.capitalize(type),\n      });\n\n      return modal({ title, description, obj, model, type, path });\n    };\n\n    return (\n      <Button\n        type=\"button\"\n        isInline\n        data-test-id=\"configure-modal-btn\"\n        onClick={onClick}\n        variant=\"link\"\n      >\n        {t('olm~CPU: {{cpu}}, Memory: {{memory}}, Storage: {{storage}}', {\n          cpu: cpu || none,\n          memory: memory || none,\n          storage: storage || none,\n        })}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  },\n);\n\nexport type ResourceRequirementsModalProps = {\n  title: string;\n  description: string;\n  obj: K8sResourceKind;\n  model: K8sKind;\n  type: 'requests' | 'limits';\n  path: string;\n  handlePromise: <T>(\n    promise: Promise<T>,\n    onFulfill?: (res) => void,\n    onError?: (errorMsg: string) => void,\n  ) => void;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n};\n\nexport type ResourceRequirementsProps = {\n  cpu: string;\n  memory: string;\n  storage: string;\n  onChangeCPU: (value: string) => void;\n  onChangeMemory: (value: string) => void;\n  onChangeStorage: (value: string) => void;\n  path?: string;\n};\n\nexport type ResourceRequirementsModalLinkProps = {\n  obj: K8sResourceKind;\n  model: K8sKind;\n  type: 'requests' | 'limits';\n  path: string;\n};\n\nResourceRequirements.displayName = 'ResourceRequirements';\nResourceRequirementsModalLink.displayName = 'ResourceRequirementsModalLink';\nResourceRequirementsModal.displayName = 'ResourceRequirementsModal';\n","import * as React from 'react';\nimport { AccordionContent, AccordionItem, AccordionToggle } from '@patternfly/react-core';\nimport { FieldProps, UiSchema } from '@rjsf/core';\nimport SchemaField, { SchemaFieldProps } from '@rjsf/core/dist/cjs/components/fields/SchemaField';\nimport { retrieveSchema, getUiOptions } from '@rjsf/core/dist/cjs/utils';\nimport * as classnames from 'classnames';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ConfigureUpdateStrategy } from '@console/internal/components/modals/configure-update-strategy-modal';\nimport { LinkifyExternal, SelectorInput, Dropdown } from '@console/internal/components/utils';\nimport {\n  NodeAffinity,\n  PodAffinity,\n} from '@console/operator-lifecycle-manager/src/components/descriptors/spec/affinity';\nimport { MatchExpressions } from '@console/operator-lifecycle-manager/src/components/descriptors/spec/match-expressions';\nimport { ResourceRequirements } from '@console/operator-lifecycle-manager/src/components/descriptors/spec/resource-requirements';\nimport { hasNoFields, useSchemaDescription, useSchemaLabel } from './utils';\n\nconst Description = ({ id, description }) =>\n  description ? (\n    <span id={id} className=\"help-block\">\n      <LinkifyExternal>\n        <div className=\"co-pre-line\">{description}</div>\n      </LinkifyExternal>\n    </span>\n  ) : null;\n\nexport const DescriptionField: React.FC<FieldProps> = ({ id, description }) => (\n  <Description id={id} description={description} />\n);\n\nexport const FormField: React.FC<FormFieldProps> = ({\n  children,\n  id,\n  defaultLabel,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const [showLabel, label] = useSchemaLabel(\n    schema,\n    uiSchema,\n    defaultLabel || t('console-shared~Value'),\n  );\n  return (\n    <div id={`${id}_field`} className=\"form-group\">\n      {showLabel && label && (\n        <label className={classnames('form-label', { 'co-required': required })} htmlFor={id}>\n          {label}\n        </label>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport const FieldSet: React.FC<FieldSetProps> = ({\n  children,\n  defaultLabel,\n  idSchema,\n  required = false,\n  schema,\n  uiSchema,\n}) => {\n  const [expanded, setExpanded] = React.useState(false);\n  const [showLabel, label] = useSchemaLabel(schema, uiSchema, defaultLabel);\n  const description = useSchemaDescription(schema, uiSchema);\n  const onToggle = (e) => {\n    e.preventDefault();\n    setExpanded((current) => !current);\n  };\n  return showLabel && label ? (\n    <div id={`${idSchema.$id}_field-group`} className=\"form-group co-dynamic-form__field-group\">\n      <AccordionItem>\n        <AccordionToggle\n          id={`${idSchema.$id}_accordion-toggle`}\n          onClick={onToggle}\n          isExpanded={expanded}\n        >\n          <label\n            className={classnames({ 'co-required': required })}\n            htmlFor={`${idSchema.$id}_accordion-content`}\n          >\n            {label}\n          </label>\n        </AccordionToggle>\n        {description && (\n          <Description id={`${idSchema.$id}_description`} description={description} />\n        )}\n        <AccordionContent id={`${idSchema.$id}_accordion-content`} isHidden={!expanded}>\n          {children}\n        </AccordionContent>\n      </AccordionItem>\n    </div>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport const ResourceRequirementsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Resource requirements')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <dl id={idSchema.$id}>\n        <dt>{t('console-shared~Limits')}</dt>\n        <dd>\n          <ResourceRequirements\n            cpu={formData?.limits?.cpu || ''}\n            memory={formData?.limits?.memory || ''}\n            storage={formData?.limits?.['ephemeral-storage'] || ''}\n            onChangeCPU={(cpu) => onChange(_.set(_.cloneDeep(formData), 'limits.cpu', cpu))}\n            onChangeMemory={(mem) => onChange(_.set(_.cloneDeep(formData), 'limits.memory', mem))}\n            onChangeStorage={(sto) =>\n              onChange(_.set(_.cloneDeep(formData), 'limits.ephemeral-storage', sto))\n            }\n            path={`${idSchema.$id}.limits`}\n          />\n        </dd>\n        <dt>{t('console-shared~Requests')}</dt>\n        <dd>\n          <ResourceRequirements\n            cpu={formData?.requests?.cpu || ''}\n            memory={formData?.requests?.memory || ''}\n            storage={formData?.requests?.['ephemeral-storage'] || ''}\n            onChangeCPU={(cpu) => onChange(_.set(_.cloneDeep(formData), 'requests.cpu', cpu))}\n            onChangeMemory={(mem) => onChange(_.set(_.cloneDeep(formData), 'requests.memory', mem))}\n            onChangeStorage={(sto) =>\n              onChange(_.set(_.cloneDeep(formData), 'requests.ephemeral-storage', sto))\n            }\n            path={`${idSchema.$id}.requests`}\n          />\n        </dd>\n      </dl>\n    </FieldSet>\n  );\n};\n\nexport const UpdateStrategyField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const description = useSchemaDescription(\n    schema,\n    uiSchema,\n    t('public~How should the pods be replaced when a new revision is created?'),\n  );\n  return (\n    <FormField\n      defaultLabel={name || t('console-shared~Update strategy')}\n      id={idSchema.$id}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <Description description={description} id={idSchema.$id} />\n      <ConfigureUpdateStrategy\n        showDescription={false}\n        strategyType={formData?.type || 'RollingUpdate'}\n        maxUnavailable={formData?.rollingUpdate?.maxUnavailable || ''}\n        maxSurge={formData?.rollingUpdate?.maxSurge || ''}\n        onChangeStrategyType={(type) => onChange(_.set(_.cloneDeep(formData), 'type', type))}\n        onChangeMaxUnavailable={(maxUnavailable) =>\n          onChange(_.set(_.cloneDeep(formData), 'rollingUpdate.maxUnavailable', maxUnavailable))\n        }\n        onChangeMaxSurge={(maxSurge) =>\n          onChange(_.set(_.cloneDeep(formData), 'rollingUpdate.maxSurge', maxSurge))\n        }\n        replicas={1}\n        uid={idSchema.$id}\n      />\n    </FormField>\n  );\n};\n\nexport const NodeAffinityField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Node affinity')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <NodeAffinity\n        affinity={formData}\n        onChange={(affinity) => onChange(affinity)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\nexport const PodAffinityField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Pod affinity')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <PodAffinity\n        affinity={formData}\n        onChange={(affinity) => onChange(affinity)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\n\nexport const MatchExpressionsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Expressions')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <MatchExpressions\n        matchExpressions={formData}\n        onChange={(v) => onChange(v)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\n\nexport const LabelsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => (\n  <FormField\n    defaultLabel={name}\n    id={idSchema.$id}\n    required={required}\n    schema={schema}\n    uiSchema={uiSchema}\n  >\n    <SelectorInput\n      inputProps={{ id: idSchema.$id }}\n      onChange={(newValue) => onChange(SelectorInput.objectify(newValue))}\n      tags={SelectorInput.arrayify(formData)}\n    />\n  </FormField>\n);\n\nexport const DropdownField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  schema,\n  uiSchema = {},\n}) => {\n  const { t } = useTranslation();\n  const { items, title } = getUiOptions(uiSchema) as { items?: object; title?: string };\n  return (\n    <Dropdown\n      id={idSchema.$id}\n      key={idSchema.$id}\n      title={t('console-shared~Select {{title}}', { title: title || schema?.title || name })}\n      selectedKey={formData}\n      items={items ?? {}}\n      onChange={(val) => onChange(val)}\n    />\n  );\n};\n\nexport const CustomSchemaField: React.FC<SchemaFieldProps> = (props) => {\n  // If the provided schema will not generate any form field elements, return null.\n  // To check that, it's required to resolving definition references ($ref) in the\n  // JSON schema as it is implemented in the origin SchemaField:\n  // https://github.com/rjsf-team/react-jsonschema-form/blob/v2.5.1/packages/core/src/components/fields/SchemaField.js#L226-L244\n  const {\n    schema: fieldSchema,\n    registry: { rootSchema },\n    formData,\n    uiSchema,\n  } = props;\n\n  let resolvedSchema = fieldSchema;\n  try {\n    resolvedSchema = retrieveSchema(fieldSchema, rootSchema, formData);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('dynamic-form CustomSchemaField retrieveSchema error:', error);\n  }\n\n  if (hasNoFields(resolvedSchema, uiSchema)) {\n    return null;\n  }\n\n  return <SchemaField {...props} />;\n};\n\nexport const NullField = () => null;\n\nexport default {\n  DescriptionField,\n  DropdownField,\n  LabelsField,\n  MatchExpressionsField,\n  NodeAffinityField,\n  NullField,\n  PodAffinityField,\n  ResourceRequirementsField,\n  SchemaField: CustomSchemaField,\n  UpdateStrategyField,\n};\n\ntype FormFieldProps = {\n  id: string;\n  defaultLabel?: string;\n  required: boolean;\n  schema: JSONSchema7;\n  uiSchema: UiSchema;\n};\n\ntype FieldSetProps = Pick<FieldProps, 'idSchema' | 'required' | 'schema' | 'uiSchema'> & {\n  defaultLabel?: string;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '@console/internal/components/utils';\nimport { MatchExpression, Operator } from '@console/internal/module/k8s';\n\nconst UNARY_OPERATORS = [Operator.Exists, Operator.DoesNotExist];\nconst ALL_OPERATORS: MatchExpression['operator'][] = [\n  Operator.DoesNotExist,\n  Operator.Equals,\n  Operator.Exists,\n  Operator.In,\n  Operator.NotEqual,\n  Operator.NotIn,\n];\n\nconst MatchExpression: React.FC<MatchExpressionProps> = ({\n  expression,\n  onChange = () => {},\n  allowedOperators = ALL_OPERATORS,\n  onClickRemove = () => {},\n}) => {\n  const { key, operator, values } = expression;\n  const { t } = useTranslation();\n  return (\n    <div className=\"row key-operator-value__row\">\n      <div className=\"col-md-4 col-xs-5 key-operator-value__name-field\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Key')}\n        </div>\n        <input\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          value={expression.key ?? ''}\n          onChange={(e) => onChange({ ...expression, key: e.target.value })}\n        />\n      </div>\n      <div className=\"col-md-3 col-xs-5 key-operator-value__operator-field\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Operator')}\n        </div>\n        <Dropdown\n          dropDownClassName=\"dropdown--full-width\"\n          items={allowedOperators.reduce((acc, o) => ({ ...acc, [o]: o }), {})}\n          onChange={(newOperator: Operator) => onChange({ key, operator: newOperator, values: [] })}\n          selectedKey={expression.operator}\n          title={expression.operator}\n        />\n      </div>\n      <div className=\"col-md-3 col-xs-5 key-operator-value__value-field key-operator-value__value-field--stacked\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Values')}\n        </div>\n        <input\n          className=\"pf-v5-c-form-control\"\n          type=\"text\"\n          value={values?.join(',') ?? ''}\n          onChange={(e) =>\n            onChange({\n              key,\n              operator,\n              values: e.target?.value?.split(',')?.map((v) => v.trim()) ?? [],\n            })\n          }\n          disabled={UNARY_OPERATORS.includes(operator as Operator)}\n        />\n      </div>\n      <div className=\"col-xs-1 key-operator-value__action key-operator-value__action--stacked\">\n        <div className=\"key-operator-value__heading key-operator-value__heading-button hidden-md hidden-lg\" />\n        <Button\n          type=\"button\"\n          onClick={onClickRemove}\n          aria-label=\"Delete\"\n          className=\"key-operator-value__delete-button\"\n          variant=\"plain\"\n        >\n          <MinusCircleIcon />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport const MatchExpressions: React.FC<MatchExpressionsProps> = ({\n  matchExpressions = [],\n  onChange = () => {}, // Default to noop\n  allowedOperators = ALL_OPERATORS,\n  uid = '',\n}) => {\n  const { t } = useTranslation();\n\n  const updateExpression = (index: number, newExpression: MatchExpression): void =>\n    onChange(matchExpressions.map((exp, i) => (i === index ? newExpression : exp)));\n\n  const removeExpression = (index: number): void =>\n    onChange(matchExpressions.filter((_exp, i) => i !== index));\n\n  const addExpression = (): void =>\n    onChange([...matchExpressions, { key: '', operator: Operator.Exists, values: [] }]);\n\n  return (\n    <>\n      <div className=\"row key-operator-value__heading hidden-sm hidden-xs\">\n        <div className=\"col-md-4 text-secondary text-uppercase\">{t('olm~Key')}</div>\n        <div className=\"col-md-3 text-secondary text-uppercase\">{t('olm~Operator')}</div>\n        <div className=\"col-md-3 text-secondary text-uppercase\">{t('olm~Values')}</div>\n      </div>\n      {matchExpressions.map((expression, index) => (\n        // Have to use array index in the key bc any other unique id whould have to use editable fields.\n        <MatchExpression\n          // eslint-disable-next-line react/no-array-index-key\n          key={`${uid}-match-expression-${index}`}\n          expression={expression}\n          allowedOperators={allowedOperators}\n          onClickRemove={() => removeExpression(index)}\n          onChange={(newExpression) => updateExpression(index, newExpression)}\n        />\n      ))}\n      <div className=\"row\">\n        <Button type=\"button\" onClick={addExpression} variant=\"link\">\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Add expression')}\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport type MatchExpressionsProps = {\n  matchExpressions: MatchExpression[];\n  onChange?: (matchExpressions: MatchExpression[]) => void;\n  allowedOperators?: MatchExpression['operator'][];\n  uid?: string;\n};\n\nexport type MatchExpressionProps = {\n  expression: MatchExpression;\n  onChange?: (expression: MatchExpression) => void;\n  onClickRemove?: () => void;\n  allowedOperators?: MatchExpression['operator'][];\n};\n\nMatchExpressions.displayName = 'MatchExpressions';\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Checkbox, Switch } from '@patternfly/react-core';\nimport { WidgetProps } from '@rjsf/core';\nimport { getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { NumberSpinner, ListDropdown, Dropdown } from '@console/internal/components/utils';\nimport { K8sKind, GroupVersionKind, ImagePullPolicy } from '@console/internal/module/k8s';\nimport { selectorFromString } from '@console/internal/module/k8s/selector';\nimport { JSON_SCHEMA_NUMBER_TYPES } from './const';\nimport { DynamicFormFieldOptionsList } from './types';\n\nexport const TextWidget: React.FC<WidgetProps> = (props) => {\n  const {\n    disabled = false,\n    id,\n    onBlur,\n    onChange,\n    onFocus,\n    readonly = false,\n    schema = {},\n    value = '',\n  } = props;\n  const schemaType = getSchemaType(schema);\n  return JSON_SCHEMA_NUMBER_TYPES.includes(schemaType) ? (\n    <NumberWidget {...props} />\n  ) : (\n    <input\n      className=\"pf-v5-c-form-control\"\n      disabled={disabled}\n      id={id}\n      key={id}\n      onBlur={onBlur && ((event) => onBlur(id, event.target.value))}\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n      onFocus={onFocus && ((event) => onFocus(id, event.target.value))}\n      readOnly={readonly}\n      type=\"text\"\n      value={value}\n    />\n  );\n};\n\nexport const NumberWidget: React.FC<WidgetProps> = ({ value, id, onChange }) => {\n  const numberValue = _.toNumber(value);\n  return (\n    <input\n      className=\"pf-v5-c-form-control\"\n      id={id}\n      key={id}\n      onChange={({ currentTarget }) =>\n        onChange(currentTarget.value !== '' ? _.toNumber(currentTarget.value) : '')\n      }\n      type=\"number\"\n      value={_.isFinite(numberValue) ? numberValue : ''}\n    />\n  );\n};\n\nexport const PasswordWidget: React.FC<WidgetProps> = ({ value = '', id, onChange }) => {\n  return (\n    <input\n      className=\"pf-v5-c-form-control\"\n      key={id}\n      id={id}\n      type=\"password\"\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n      value={value}\n    />\n  );\n};\n\nexport const CheckboxWidget: React.FC<WidgetProps> = ({ value = false, id, label, onChange }) => {\n  return (\n    <Checkbox\n      id={id}\n      key={id}\n      isChecked={value}\n      data-checked-state={value}\n      label={label}\n      onChange={(_event, checked) => onChange(checked)}\n    />\n  );\n};\n\nexport const SwitchWidget: React.FC<WidgetProps> = ({ value, id, label, onChange, options }) => {\n  const { t } = useTranslation();\n  const { labelOn = t('console-shared~true'), labelOff = t('console-shared~false') } = options;\n  return (\n    <Switch\n      id={id || label}\n      key={id || label}\n      isChecked={_.isNil(value) ? false : value}\n      onChange={(_event, v) => onChange(v)}\n      label={labelOn as string}\n      labelOff={labelOff as string}\n    />\n  );\n};\n\nexport const PodCountWidget: React.FC<WidgetProps> = ({ value, id, onChange }) => {\n  return (\n    <NumberSpinner\n      id={id}\n      value={value}\n      onChange={({ currentTarget }) => onChange(_.toInteger(currentTarget.value))}\n      changeValueBy={(operation) => onChange(_.toInteger(value) + operation)}\n      autoFocus\n      required\n    />\n  );\n};\n\nexport const K8sResourceWidget: React.FC<K8sResourceWidgetProps> = ({\n  value,\n  id,\n  label,\n  options,\n  formContext,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n  const { model, groupVersionKind, selector } = options;\n  const { namespace } = formContext;\n  const selectedKey = value ? `${value}-${groupVersionKind}` : null;\n  const selectorObj = React.useMemo(() => {\n    try {\n      return selectorFromString(selector);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `Invalid selector string provided to K8sResourceWidget: '${selector}'. If using OLM descriptors, please validate the provided selector.`,\n      );\n    }\n    return null;\n  }, [selector]);\n  return (\n    <div>\n      {!_.isUndefined(model) ? (\n        <ListDropdown\n          key={id}\n          id={id}\n          resources={[\n            {\n              kind: groupVersionKind,\n              selector: selectorObj,\n              namespace: model.namespaced ? namespace : null,\n            },\n          ]}\n          desc={label}\n          placeholder={t('console-shared~Select {{label}}', { label: model.label })}\n          onChange={(next) => onChange(next)}\n          selectedKey={selectedKey}\n        />\n      ) : (\n        <span>\n          {t('console-shared~Cluster does not have resource {{groupVersionKind}}', {\n            groupVersionKind,\n          })}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport const ImagePullPolicyWidget: React.FC<WidgetProps> = ({ id, value, onChange }) => {\n  return (\n    <RadioGroup\n      id={id}\n      currentValue={value}\n      items={_.values(ImagePullPolicy).map((policy) => ({\n        value: policy,\n        title: policy,\n      }))}\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n    />\n  );\n};\n\nexport const SelectWidget: React.FC<WidgetProps> = ({\n  id,\n  label,\n  onChange,\n  options,\n  schema,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const { enumOptions = [], title } = options;\n  const items = _.reduce(\n    enumOptions as DynamicFormFieldOptionsList,\n    (itemAccumulator, option) => {\n      return {\n        ...itemAccumulator,\n        [option.label]: option.value,\n      };\n    },\n    {},\n  );\n  return (\n    <Dropdown\n      id={id}\n      key={id}\n      title={t('console-shared~Select {{title}}', { title: title || schema?.title || label })}\n      selectedKey={value}\n      items={items}\n      onChange={(val) => onChange(val)}\n    />\n  );\n};\n\ntype K8sResourceWidgetProps = WidgetProps & {\n  options: {\n    model: K8sKind;\n    groupVersionKind: GroupVersionKind;\n    selector: string;\n  };\n};\n\nexport default {\n  BaseInput: TextWidget,\n  CheckboxWidget,\n  SwitchWidget,\n  ImagePullPolicyWidget,\n  K8sResourceWidget,\n  NumberWidget,\n  PasswordWidget,\n  PodCountWidget,\n  SelectWidget,\n  TextWidget,\n  int32: NumberWidget,\n  int64: NumberWidget,\n};\n","import * as React from 'react';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  NodeAffinity as NodeAffinityType,\n  MatchExpression,\n  PodAffinity as PodAffinityType,\n  PodAffinityTerm,\n  Selector,\n} from '@console/internal/module/k8s';\nimport { MatchExpressions } from './match-expressions';\n\nenum AffinityRuleType {\n  Preferred = 'Preferred',\n  Required = 'Required',\n}\n\nconst ALLOWED_MATCH_EXPRESSION_OPERATORS: MatchExpression['operator'][] = [\n  'In',\n  'NotIn',\n  'Exists',\n  'DoesNotExist',\n];\nconst DEFAULT_MATCH_EXPRESSION: MatchExpression = {\n  key: '',\n  operator: 'Exists',\n};\n\nexport const DEFAULT_NODE_AFFINITY: NodeAffinityType = {\n  requiredDuringSchedulingIgnoredDuringExecution: {\n    nodeSelectorTerms: [{ matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] }],\n  },\n  preferredDuringSchedulingIgnoredDuringExecution: [\n    {\n      weight: 1,\n      preference: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n    },\n  ],\n};\n\nexport const DEFAULT_POD_AFFINITY: PodAffinityType = {\n  requiredDuringSchedulingIgnoredDuringExecution: [\n    {\n      topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n      labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n    },\n  ],\n  preferredDuringSchedulingIgnoredDuringExecution: [\n    {\n      weight: 1,\n      podAffinityTerm: {\n        topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n        labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n      },\n    },\n  ],\n};\n\nconst NodeAffinityRule: React.FC<NodeAffinityRuleProps> = ({\n  key,\n  type,\n  showRemoveButton = false,\n  onClickRemove,\n  onChange = () => {},\n  rule,\n}) => {\n  const { t } = useTranslation();\n  const { weight, selector } = rule;\n  const onChangeMatchExpressions = (matchExpressions: MatchExpression[]): void =>\n    onChange({\n      ...rule,\n      selector: {\n        ...selector,\n        matchExpressions,\n      },\n    });\n\n  const onChangeWeight = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsedValue = _.parseInt(e?.target?.value);\n    onChange({\n      ...rule,\n      weight: _.isFinite(parsedValue) ? parsedValue : undefined,\n    });\n  };\n\n  return (\n    <div className=\"co-affinity-term\">\n      {showRemoveButton && (\n        <Button\n          type=\"button\"\n          className=\"co-affinity-term__remove\"\n          onClick={onClickRemove}\n          variant=\"link\"\n        >\n          <MinusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Remove {{item}}', { item: type })}\n        </Button>\n      )}\n      {type === AffinityRuleType.Preferred && (\n        <div className=\"co-affinity-term__weight-input\">\n          <label className=\"control-label co-required\" htmlFor={`preference-${key}`}>\n            {t('olm~Weight')}\n          </label>\n          <input\n            className=\"pf-v5-c-form-control\"\n            type=\"number\"\n            value={weight}\n            onChange={onChangeWeight}\n            required\n          />\n        </div>\n      )}\n      <MatchExpressions\n        matchExpressions={selector?.matchExpressions}\n        onChange={onChangeMatchExpressions}\n        allowedOperators={ALLOWED_MATCH_EXPRESSION_OPERATORS}\n        uid={key}\n      />\n    </div>\n  );\n};\n\nexport const NodeAffinity: React.FC<NodeAffinityProps> = ({ affinity, onChange, uid = '' }) => {\n  const { t } = useTranslation();\n  const requiredRules =\n    affinity?.requiredDuringSchedulingIgnoredDuringExecution?.nodeSelectorTerms || [];\n  const preferredRules = affinity?.preferredDuringSchedulingIgnoredDuringExecution || [];\n  const addRequiredRule = () =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [...requiredRules, { matchExpressions: [] }],\n      },\n    });\n\n  const removeRequiredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: requiredRules.filter((_v, index) => index !== atIndex),\n      },\n    });\n\n  const updateRequiredRules = ({ selector }: NodeAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: requiredRules.map((current, index) =>\n          index === atIndex ? selector : current,\n        ),\n      },\n    });\n\n  const addPreferredRule = () =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: [\n        ...preferredRules,\n        { weight: 1, preference: { matchExpressions: [] } },\n      ],\n    });\n\n  const removePreferredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter(\n        (_v, index) => index !== atIndex,\n      ),\n    });\n\n  const updatePreferredRules = (\n    { selector: preference, weight }: NodeAffinityRule,\n    atIndex: number,\n  ) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) =>\n        index === atIndex ? { preference, weight } : current,\n      ),\n    });\n\n  return (\n    <dl>\n      <Tooltip\n        content={t('olm~Required rules must be met before a pod can be scheduled on a node.')}\n      >\n        <dt>{t('olm~Required during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {requiredRules.map((selector, requiredIndex) => (\n          <NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${uid}-node-affinity-required-${requiredIndex}`}\n            onChange={(rule) => updateRequiredRules(rule, requiredIndex)}\n            onClickRemove={() => removeRequiredRule(requiredIndex)}\n            rule={{ selector }}\n            showRemoveButton\n            type={AffinityRuleType.Required}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addRequiredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add required')}\n          </Button>\n        </div>\n      </dd>\n      <Tooltip\n        content={t(\n          'olm~Preferred rules specify that, if the rule is met, the scheduler tries to enforce the rules, but does not guarantee enforcement.',\n        )}\n      >\n        <dt>{t('olm~Preferred during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {preferredRules.map(({ preference: selector, weight }, preferredIndex) => (\n          <NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${uid}-node-affinity-preferred-${preferredIndex}`}\n            onChange={(rule) => updatePreferredRules(rule, preferredIndex)}\n            onClickRemove={() => removePreferredRule(preferredIndex)}\n            rule={{ selector, weight }}\n            showRemoveButton\n            type={AffinityRuleType.Preferred}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addPreferredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add preferred')}\n          </Button>\n        </div>\n      </dd>\n    </dl>\n  );\n};\n\nconst PodAffinityRule: React.FC<PodAffinityRuleProps> = ({\n  key,\n  onChange = () => {},\n  onClickRemove = () => {},\n  showRemoveButton = false,\n  rule,\n  type,\n}) => {\n  const { t } = useTranslation();\n  const { podAffinityTerm, weight } = rule;\n  const selector = podAffinityTerm?.labelSelector || {};\n  const topologyKey = podAffinityTerm?.topologyKey;\n  const onChangeWeight = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsed = _.parseInt(e?.target?.value);\n    onChange({\n      ...rule,\n      weight: _.isFinite(parsed) ? parsed : undefined,\n    });\n  };\n\n  const onChangeTopologyKey = (e: React.ChangeEvent<HTMLInputElement>): void =>\n    onChange({\n      ...rule,\n      podAffinityTerm: {\n        ...podAffinityTerm,\n        topologyKey: e?.target?.value,\n      },\n    });\n  const onChangeMatchExpressions = (matchExpressions: MatchExpression[]): void =>\n    onChange({\n      ...rule,\n      podAffinityTerm: {\n        ...podAffinityTerm,\n        labelSelector: {\n          ...selector,\n          matchExpressions,\n        },\n      },\n    });\n\n  return podAffinityTerm ? (\n    <div className=\"co-affinity-term\">\n      {showRemoveButton && (\n        <Button\n          type=\"button\"\n          className=\"co-affinity-term__remove\"\n          onClick={onClickRemove}\n          variant=\"link\"\n        >\n          <MinusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Remove {{item}}', { item: type })}\n        </Button>\n      )}\n      <div className=\"co-affinity-term__topology\">\n        {type === AffinityRuleType.Preferred && (\n          <div className=\"co-affinity-term__weight-input\">\n            <label className=\"control-label co-required\" htmlFor={`preference-${key}`}>\n              {t('olm~Weight')}\n            </label>\n            <input\n              className=\"pf-v5-c-form-control\"\n              type=\"number\"\n              value={weight}\n              onChange={onChangeWeight}\n              required\n            />\n          </div>\n        )}\n        <div className=\"co-affinity-term__topology-input\">\n          <label className=\"control-label co-required\" htmlFor={`topology-${key}`}>\n            {t('olm~Topology key')}\n          </label>\n          <input\n            id={`topology-${key}`}\n            className=\"pf-v5-c-form-control\"\n            type=\"text\"\n            value={topologyKey}\n            onChange={onChangeTopologyKey}\n            required\n          />\n        </div>\n      </div>\n      <MatchExpressions\n        matchExpressions={selector?.matchExpressions}\n        onChange={onChangeMatchExpressions}\n        allowedOperators={ALLOWED_MATCH_EXPRESSION_OPERATORS}\n        uid={key}\n      />\n    </div>\n  ) : null;\n};\n\nexport const PodAffinity: React.FC<PodAffinityProps> = ({ affinity, onChange, uid = '' }) => {\n  const {\n    requiredDuringSchedulingIgnoredDuringExecution: requiredRules = [],\n    preferredDuringSchedulingIgnoredDuringExecution: preferredRules = [],\n  } = affinity || {};\n  const { t } = useTranslation();\n  const addRequiredRule = () =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        ...requiredRules,\n        { topologyKey: '', labelSelector: { matchExpressions: [] } },\n      ],\n    });\n\n  const removeRequiredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: requiredRules.filter(\n        (_v, index) => atIndex !== index,\n      ),\n    });\n\n  const updateRequiredRules = ({ podAffinityTerm: next }: PodAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: requiredRules.map((current, index) =>\n        index === atIndex ? next : current,\n      ),\n    });\n\n  const addPreferredRule = () =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: [\n        ...preferredRules,\n        {\n          weight: 1,\n          podAffinityTerm: { topologyKey: '', labelSelector: { matchExpressions: [] } },\n        },\n      ],\n    });\n\n  const removePreferredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter(\n        (_v, index) => atIndex !== index,\n      ),\n    });\n\n  const updatePreferredRules = (next: PodAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) =>\n        index === atIndex ? next : current,\n      ),\n    });\n\n  return (\n    <dl>\n      <Tooltip\n        content={t('olm~Required rules must be met before a pod can be scheduled on a node.')}\n      >\n        <dt>{t('olm~Required during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {_.map(requiredRules, (podAffinityTerm, ruleIndex) => (\n          // Have to use array index in the key bc any other unique id whould have to use editable fields.\n          // eslint-disable-next-line react/no-array-index-key\n          <PodAffinityRule\n            key={`${uid}-pod-affinity-required-${ruleIndex}`}\n            rule={{ podAffinityTerm }}\n            onChange={(rule) => updateRequiredRules(rule, ruleIndex)}\n            onClickRemove={() => removeRequiredRule(ruleIndex)}\n            showRemoveButton\n            type={AffinityRuleType.Required}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addRequiredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add required')}\n          </Button>\n        </div>\n      </dd>\n      <Tooltip\n        content={t(\n          'olm~Preferred rules specify that, if the rule is met, the scheduler tries to enforce the rules, but does not guarantee enforcement.',\n        )}\n      >\n        <dt>{t('olm~Preferred during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {preferredRules.map((preferredRule, ruleIndex) => {\n          // Have to use array index in the key bc any other unique id whould have to use editable fields.\n          return (\n            <PodAffinityRule\n              // eslint-disable-next-line react/no-array-index-key\n              key={`${uid}-pod-affinity-preferred-${ruleIndex}`}\n              onChange={(rule) => updatePreferredRules(rule, ruleIndex)}\n              onClickRemove={() => removePreferredRule(ruleIndex)}\n              showRemoveButton\n              rule={preferredRule}\n              type={AffinityRuleType.Preferred}\n            />\n          );\n        })}\n\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addPreferredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add preferred')}\n          </Button>\n        </div>\n      </dd>\n    </dl>\n  );\n};\n\ntype NodeAffinityRule = {\n  selector: Selector;\n  weight?: number;\n};\n\nexport type NodeAffinityRuleProps = {\n  key: string;\n  onChange?: (rule: NodeAffinityRule) => void;\n  onClickRemove?: () => void;\n  rule: NodeAffinityRule;\n  showRemoveButton?: boolean;\n  type: AffinityRuleType;\n};\n\nexport type NodeAffinityProps = {\n  uid?: string;\n  affinity: NodeAffinityType;\n  onChange: (affinity: NodeAffinityType) => void;\n};\n\ntype PodAffinityRule = {\n  podAffinityTerm: PodAffinityTerm;\n  weight?: number;\n};\n\nexport type PodAffinityRuleProps = {\n  key: string;\n  rule: PodAffinityRule;\n  onChange?: (rule: PodAffinityRule) => void;\n  onClickRemove?: () => void;\n  showRemoveButton?: boolean;\n  type: AffinityRuleType;\n};\n\nexport type PodAffinityProps = {\n  uid?: string;\n  affinity: PodAffinityType;\n  onChange: (affinity: PodAffinityType) => void;\n};\n\nNodeAffinity.displayName = 'NodeAffinity';\nPodAffinity.displayName = 'PodAffinity';\n","import * as React from 'react';\nimport { Button, Alert, Divider, FormHelperText } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ArrayFieldTemplateProps, FieldTemplateProps, ObjectFieldTemplateProps } from '@rjsf/core';\nimport { getUiOptions, getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { JSON_SCHEMA_GROUP_TYPES } from './const';\nimport { FieldSet, FormField } from './fields';\nimport { UiSchemaOptionsWithDependency } from './types';\nimport { useSchemaLabel } from './utils';\n\nexport const AtomicFieldTemplate: React.FC<FieldTemplateProps> = ({\n  children,\n  id,\n  label,\n  rawErrors,\n  description,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  return (\n    <FormField id={id} defaultLabel={label} required={required} schema={schema} uiSchema={uiSchema}>\n      {children}\n      {description}\n      {!_.isEmpty(rawErrors) && (\n        <>\n          {_.map(rawErrors, (error) => (\n            <FormHelperText key={error}>{_.capitalize(error)}</FormHelperText>\n          ))}\n        </>\n      )}\n    </FormField>\n  );\n};\n\nconst AdvancedProperties: React.FC<Pick<ObjectFieldTemplateProps, 'properties'>> = ({\n  properties,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <ExpandCollapse\n      textCollapsed={t('console-shared~Advanced configuration')}\n      textExpanded={t('console-shared~Advanced configuration')}\n    >\n      {_.map(properties, (property) => property.content)}\n    </ExpandCollapse>\n  );\n};\nexport const FieldTemplate: React.FC<FieldTemplateProps> = (props) => {\n  const { hidden, schema = {}, children, uiSchema = {}, formContext = {} } = props;\n  const type = getSchemaType(schema);\n  const [dependencyMet, setDependencyMet] = React.useState(true);\n  React.useEffect(() => {\n    const { dependency } = getUiOptions(uiSchema ?? {}) as UiSchemaOptionsWithDependency; // Type defs for this function are awful\n    if (dependency) {\n      setDependencyMet(\n        dependency?.controlFieldValue ===\n          _.get(\n            formContext.formData ?? {},\n            ['spec', ...(dependency?.controlFieldPath ?? [])],\n            '',\n          ).toString(),\n      );\n    }\n  }, [uiSchema, formContext]);\n\n  if (hidden || !dependencyMet) {\n    return null;\n  }\n  const isGroup = JSON_SCHEMA_GROUP_TYPES.includes(type);\n  return isGroup ? children : <AtomicFieldTemplate {...props} />;\n};\n\nexport const ObjectFieldTemplate: React.FC<ObjectFieldTemplateProps> = ({\n  idSchema,\n  properties,\n  required,\n  schema,\n  title,\n  uiSchema,\n}) => {\n  const { advanced } = getUiOptions(uiSchema ?? {});\n  const { normalProperties, advancedProperties } = _.groupBy(properties ?? [], ({ name }) =>\n    _.includes(advanced as string[], name) ? 'advancedProperties' : 'normalProperties',\n  );\n  return properties?.length ? (\n    <FieldSet\n      defaultLabel={title}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <div className=\"co-dynamic-form__field-group-content\">\n        {normalProperties?.length > 0 && _.map(normalProperties, (p) => p.content)}\n        {advancedProperties?.length > 0 && <AdvancedProperties properties={advancedProperties} />}\n      </div>\n    </FieldSet>\n  ) : null;\n};\n\nexport const ArrayFieldTemplate: React.FC<ArrayFieldTemplateProps> = ({\n  idSchema,\n  items,\n  onAddClick,\n  required,\n  schema,\n  title,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const [, label] = useSchemaLabel(schema, uiSchema, title ?? 'Items');\n  return (\n    <FieldSet\n      defaultLabel={label}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      {_.map(items ?? [], (item) => {\n        return (\n          <div className=\"co-dynamic-form__array-field-group-item\" key={item.key}>\n            {item.index > 0 && <Divider className=\"co-divider\" />}\n            {item.hasRemove && (\n              <div className=\"row co-dynamic-form__array-field-group-remove\">\n                <Button\n                  id={`${item.key}_remove-btn`}\n                  type=\"button\"\n                  onClick={item.onDropIndexClick(item.index)}\n                  variant=\"link\"\n                >\n                  <MinusCircleIcon className=\"co-icon-space-r\" />\n                  {t('console-shared~Remove {{singularLabel}}', { singularLabel: label })}\n                </Button>\n              </div>\n            )}\n            {item.children}\n          </div>\n        );\n      })}\n      <div className=\"row\">\n        <Button id={`${idSchema.$id}_add-btn`} type=\"button\" onClick={onAddClick} variant=\"link\">\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('console-shared~Add {{singularLabel}}', { singularLabel: label })}\n        </Button>\n      </div>\n    </FieldSet>\n  );\n};\n\nexport const ErrorTemplate: React.FC<{ errors: string[] }> = ({ errors }) => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      className=\"co-alert co-break-word co-alert--scrollable\"\n      variant=\"danger\"\n      title={t('console-shared~Error')}\n    >\n      {t('console-shared~Fix the following errors:')}\n      <ul>\n        {_.map(errors, (error) => (\n          <li key={error}>{error}</li>\n        ))}\n      </ul>\n    </Alert>\n  );\n};\n"],"sourceRoot":""}