{"version":3,"sources":["webpack:///./packages/operator-lifecycle-manager/src/components/create-catalog-source.tsx"],"names":["AvailabilityValue","CreateCatalogSource","handlePromise","inProgress","errorMessage","availability","setAvailability","ALL_NAMESPACES","image","setImage","displayName","setDisplayName","name","setName","namespace","setNamespace","publisher","setPublisher","onSave","e","preventDefault","apiVersion","apiGroup","kind","metadata","spec","sourceType","goBack","onNamespaceChange","value","t","availabilityKinds","title","desc","SINGLE_NAMESPACE","className","helpText","onSubmit","fieldId","isRequired","label","id","onChange","_event","placeholder","type","currentValue","items","target","selectedKey","variant","onClick"],"mappings":"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","file":"72-chunk-16632a2094db320c3c7e.min.js","sourcesContent":["import * as React from 'react';\nimport {\n  ActionGroup,\n  Button,\n  Form,\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInput,\n} from '@patternfly/react-core';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport {\n  ButtonBar,\n  history,\n  NsDropdown,\n  PageHeading,\n  withHandlePromise,\n} from '@console/internal/components/utils';\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport { CatalogSourceModel } from '../models';\n\nenum AvailabilityValue {\n  ALL_NAMESPACES = '0',\n  SINGLE_NAMESPACE = '1',\n}\n\nexport const CreateCatalogSource: React.FC = withHandlePromise(\n  ({ handlePromise, inProgress, errorMessage }) => {\n    const [availability, setAvailability] = React.useState(AvailabilityValue.ALL_NAMESPACES);\n    const [image, setImage] = React.useState('');\n    const [displayName, setDisplayName] = React.useState('');\n    const [name, setName] = React.useState('');\n    const [namespace, setNamespace] = React.useState('');\n    const [publisher, setPublisher] = React.useState('');\n    const onSave = React.useCallback(\n      (e: React.FormEvent<EventTarget>) => {\n        e.preventDefault();\n        return handlePromise(\n          k8sCreate(CatalogSourceModel, {\n            apiVersion: `${CatalogSourceModel.apiGroup}/${CatalogSourceModel.apiVersion}`,\n            kind: CatalogSourceModel.kind,\n            metadata: {\n              name,\n              namespace:\n                availability === AvailabilityValue.ALL_NAMESPACES\n                  ? 'openshift-marketplace'\n                  : namespace,\n            },\n            spec: {\n              displayName,\n              image,\n              publisher,\n              sourceType: 'grpc',\n            },\n          }),\n          () => history.goBack(),\n        );\n      },\n      [availability, displayName, handlePromise, image, name, namespace, publisher],\n    );\n\n    const onNamespaceChange = React.useCallback((value: string) => {\n      setNamespace(value);\n    }, []);\n\n    const onAvailabiltiyChange = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setAvailability(value as AvailabilityValue);\n    };\n\n    const { t } = useTranslation();\n    const availabilityKinds = [\n      {\n        value: AvailabilityValue.ALL_NAMESPACES,\n        title: t('olm~Cluster-wide CatalogSource'),\n        desc: t('olm~Catalog will be available in all namespaces'),\n      },\n      {\n        value: AvailabilityValue.SINGLE_NAMESPACE,\n        title: t('olm~Namespaced CatalogSource'),\n        desc: t('olm~Catalog will only be available in a single namespace'),\n      },\n    ];\n\n    const title = t('olm~Create CatalogSource');\n    return (\n      <div className=\"co-m-pane__form\">\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n        <PageHeading\n          title={title}\n          helpText={t(\n            'olm~Create a CatalogSource in order to make operators available in OperatorHub.',\n          )}\n        />\n        <div className=\"co-m-pane__body\">\n          <Form onSubmit={onSave}>\n            <FormGroup fieldId=\"catalog-source-name\" isRequired label={t('olm~CatalogSource name')}>\n              <TextInput\n                id=\"catalog-source-name\"\n                isRequired\n                name=\"catalog-source-name\"\n                onChange={(_event, value) => setName(value)}\n                placeholder={t('olm~e.g. custom-catalog-source')}\n                type=\"text\"\n                value={name}\n                data-test=\"catalog-source-name\"\n              />\n            </FormGroup>\n            <FormGroup fieldId=\"catalog-source-display-name\" label={t('olm~Display name')}>\n              <TextInput\n                id=\"catalog-source-display-name\"\n                name=\"caltalog-source-display-name\"\n                onChange={(_event, value) => setDisplayName(value)}\n                placeholder={t('olm~e.g. Custom catalog source')}\n                type=\"text\"\n                value={displayName}\n              />\n            </FormGroup>\n            <FormGroup fieldId=\"catalog-source-publisher\" label={t('olm~Publisher name')}>\n              <TextInput\n                id=\"catalog-source-publisher\"\n                isRequired\n                name=\"catalog-source-publisher\"\n                onChange={(_event, value) => setPublisher(value)}\n                placeholder={t('olm~e.g. John Doe')}\n                type=\"text\"\n                value={publisher}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t('olm~Image (URL of container image)')}\n              isRequired\n              fieldId=\"catalog-source-image\"\n            >\n              <TextInput\n                aria-describedby=\"catalog-source-image-helper\"\n                isRequired\n                type=\"text\"\n                id=\"catalog-source-image\"\n                name=\"catalog-source-image\"\n                onChange={(_event, value) => setImage(value)}\n                placeholder={t('olm~e.g. quay.io/johndoe/catalog-registry:latest')}\n                value={image}\n                data-test=\"catalog-source-image\"\n              />\n\n              <FormHelperText>\n                <HelperText>\n                  <HelperTextItem>\n                    {t('olm~URL of container image hosted on a registry.')}\n                  </HelperTextItem>\n                </HelperText>\n              </FormHelperText>\n            </FormGroup>\n            <FormGroup fieldId=\"catalog-source-availability\" label={t('olm~Availability')}>\n              <RadioGroup\n                currentValue={availability}\n                items={availabilityKinds}\n                onChange={onAvailabiltiyChange}\n              />\n            </FormGroup>\n            {availability === AvailabilityValue.SINGLE_NAMESPACE && (\n              <FormGroup fieldId=\"catalog-source-namespace\" label={t('olm~Namespace')} isRequired>\n                <NsDropdown\n                  selectedKey={namespace}\n                  onChange={onNamespaceChange}\n                  id=\"catalog-source-namespace\"\n                />\n              </FormGroup>\n            )}\n            <ButtonBar errorMessage={errorMessage} inProgress={inProgress}>\n              <ActionGroup className=\"pf-v5-c-form__group--no-top-margin\">\n                <Button type=\"submit\" variant=\"primary\" id=\"save-changes\" data-test=\"save-changes\">\n                  {t('olm~Create')}\n                </Button>\n                <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={history.goBack}>\n                  {t('olm~Cancel')}\n                </Button>\n              </ActionGroup>\n            </ButtonBar>\n          </Form>\n        </div>\n      </div>\n    );\n  },\n);\n"],"sourceRoot":""}