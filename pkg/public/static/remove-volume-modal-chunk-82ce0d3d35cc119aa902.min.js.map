{"version":3,"sources":["webpack:///./public/components/modals/remove-volume-modal.tsx"],"names":["RemoveVolumeModal","props","inProgress","setInProgress","errorMessage","setErrorMessage","t","kind","resource","volume","type","volumeDetail","volumeName","name","label","resourceName","metadata","onSubmit","event","preventDefault","rowVolumeData","containers","patches","allowRemoveVolume","forEach","container","i","mount","j","mountPath","push","op","path","volumeIndex","findIndex","v","getRemoveVolumePatch","then","close","catch","message","errMessage","className","ns","submitDanger","submitText","cancel","removeVolumeModal"],"mappings":"6FAAA,4JAiBO,MAAMA,EAAuDC,IAClE,MAAOC,EAAYC,GAAiB,YAAe,IAC5CC,EAAcC,GAAmB,WAAe,KAsDjD,EAAEC,GAAM,4BACR,KAAEC,EAAI,SAAEC,EAAQ,OAAEC,GAAWR,EAC7BS,EAAe,IAAM,aAAcD,EAAOE,cAAe,KAAM,IAC/DC,EAAaH,EAAOI,KACpBC,EAAQP,EAAKO,MACbC,EAAeP,EAASQ,SAASH,KACvC,OACE,wBAAMI,SAvBQC,IACdA,EAAMC,iBACNd,EAAgB,IAChBF,GAAc,GACd,MAAM,KAAEI,EAAI,SAAEC,EAAQ,OAAEC,GAAWR,EACnC,aAASM,EAAMC,EAzCY,EAACA,EAA2BY,KACvD,MAAMC,EAA8B,IAAMb,EAAU,gCAAiC,IAC/Ec,EAAU,GAChB,IAAIC,GAAoB,EAuBxB,GAtBAF,EAAWG,QAAQ,CAACC,EAA0BC,KACd,IAAMD,EAAW,eAAgB,IACxDD,QAAQ,CAACG,EAAoBC,KAC9BD,EAAMd,OAASO,EAAcP,OAI/Bc,EAAME,YAAcT,EAAcS,WAClCJ,EAAUZ,OAASO,EAAcK,UAEjCH,EAAQQ,KAAK,CACXC,GAAI,SACJC,KAAM,kCAAkCN,kBAAkBE,MAG5DL,GAAoB,OAOtBA,EAAmB,CACrB,MACMU,EADoB,IAAMzB,EAAU,6BAA8B,IAC5C0B,UAAWC,GAAcA,EAAEtB,OAASO,EAAcP,MAC1EoB,GAAe,GACjBX,EAAQQ,KAAK,CAAEC,GAAI,SAAUC,KAAM,+BAA+BC,IAGtE,OAAOX,GAQkBc,CAAqB5B,EAAUC,IACrD4B,KAAK,KACJlC,GAAc,GACdF,EAAMqC,UAEPC,MAAM,EAAGC,QAASC,MACjBpC,EAAgBoC,GAChBtC,GAAc,MAWMuC,UAAU,iBAChC,gBAAC,IAAU,KACT,gBAAC,KAA6B,CAACA,UAAU,oB,IAAsBpC,EAAE,0BAEnE,gBAAC,IAAS,CAACoC,UAAU,cACnB,2BACE,gBAAC,QAAK,CAACpC,EAAGA,EAAGqC,GAAG,U,yCACyB,IACvC,0BAAQD,UAAU,iBAAiB,CAAE9B,e,QAA4B,IACjE,8BAAS,CAAEE,U,KAAmB,8BAAS,CAAEC,iB,MAG5CL,GACC,2BACE,yBAAOgC,UAAU,iBACdpC,EAAE,6DAA8D,CAAEI,YAK3E,gBAAC,IAAiB,CAChBN,aAAcA,EACdF,WAAYA,EACZ0C,cAAY,EACZC,WAAYvC,EAAE,wBACdwC,OAAQ7C,EAAM6C,WAMTC,EAAoB,YAAoB/C","file":"remove-volume-modal-chunk-82ce0d3d35cc119aa902.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory';\nimport {\n  ContainerSpec,\n  getVolumeType,\n  K8sKind,\n  k8sPatch,\n  K8sResourceKind,\n  Volume,\n  VolumeMount,\n} from '../../module/k8s/';\nimport { RowVolumeData } from '../volumes-table';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nexport const RemoveVolumeModal: React.FC<RemoveVolumeModalProps> = (props) => {\n  const [inProgress, setInProgress] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState('');\n\n  const getRemoveVolumePatch = (resource: K8sResourceKind, rowVolumeData: RowVolumeData) => {\n    const containers: ContainerSpec[] = _.get(resource, 'spec.template.spec.containers', []);\n    const patches = [];\n    let allowRemoveVolume = true;\n    containers.forEach((container: ContainerSpec, i: number) => {\n      const mounts: VolumeMount[] = _.get(container, 'volumeMounts', []);\n      mounts.forEach((mount: VolumeMount, j: number) => {\n        if (mount.name !== rowVolumeData.name) {\n          return;\n        }\n        if (\n          mount.mountPath === rowVolumeData.mountPath &&\n          container.name === rowVolumeData.container\n        ) {\n          patches.push({\n            op: 'remove',\n            path: `/spec/template/spec/containers/${i}/volumeMounts/${j}`,\n          });\n        } else {\n          allowRemoveVolume = false;\n        }\n      });\n    });\n\n    // if the mountCount is greater than zero, then the volume is still being used at a different mount point or in a different container\n    // Either way, we cannot give the cmd to remove it\n    if (allowRemoveVolume) {\n      const volumes: Volume[] = _.get(resource, 'spec.template.spec.volumes', []);\n      const volumeIndex = volumes.findIndex((v: Volume) => v.name === rowVolumeData.name);\n      if (volumeIndex > -1) {\n        patches.push({ op: 'remove', path: `/spec/template/spec/volumes/${volumeIndex}` });\n      }\n    }\n    return patches;\n  };\n\n  const submit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n    setErrorMessage('');\n    setInProgress(true);\n    const { kind, resource, volume } = props;\n    k8sPatch(kind, resource, getRemoveVolumePatch(resource, volume))\n      .then(() => {\n        setInProgress(false);\n        props.close();\n      })\n      .catch(({ message: errMessage }) => {\n        setErrorMessage(errMessage);\n        setInProgress(false);\n      });\n  };\n\n  const { t } = useTranslation();\n  const { kind, resource, volume } = props;\n  const type: string = _.get(getVolumeType(volume.volumeDetail), 'id', '');\n  const volumeName = volume.name;\n  const label = kind.label;\n  const resourceName = resource.metadata.name;\n  return (\n    <form onSubmit={submit} className=\"modal-content\">\n      <ModalTitle>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" /> {t('public~Remove volume?')}\n      </ModalTitle>\n      <ModalBody className=\"modal-body\">\n        <div>\n          <Trans t={t} ns=\"public\">\n            Are you sure you want to remove volume{' '}\n            <strong className=\"co-break-word\">{{ volumeName }}</strong> from{' '}\n            <strong>{{ label }}</strong>: <strong>{{ resourceName }}</strong>?\n          </Trans>\n        </div>\n        {type && (\n          <div>\n            <label className=\"control-label\">\n              {t('public~Note: This will not remove the underlying {{type}}.', { type })}\n            </label>\n          </div>\n        )}\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitDanger\n        submitText={t('public~Remove volume')}\n        cancel={props.cancel}\n      />\n    </form>\n  );\n};\n\nexport const removeVolumeModal = createModalLauncher(RemoveVolumeModal);\n\nexport type RemoveVolumeModalProps = {\n  cancel?: () => void;\n  close?: () => void;\n  volume: RowVolumeData;\n  kind: K8sKind;\n  resource: K8sResourceKind;\n};\n"],"sourceRoot":""}