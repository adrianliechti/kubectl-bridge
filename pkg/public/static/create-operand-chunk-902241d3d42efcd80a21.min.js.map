{"version":3,"sources":["webpack:///./packages/operator-lifecycle-manager/src/components/model-status-box.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operand/DEPRECATED_operand-form.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operand/operand-form.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operand/operand-yaml.tsx","webpack:///./public/components/create-yaml.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operand/create-operand.tsx","webpack:///./public/components/modals/configure-update-strategy-modal.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/index.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/deprecated-operator-warnings/deprecated-operator-warnings.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/types.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/utils.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/cluster-service-version-logo.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/const.ts","webpack:///./packages/console-shared/src/components/dynamic-form/utils.ts","webpack:///./packages/operator-lifecycle-manager/src/operator.svg","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/const.ts","webpack:///./packages/console-shared/src/components/dynamic-form/types.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/resource-requirements.tsx","webpack:///./packages/operator-lifecycle-manager/src/utils/clusterserviceversions.ts","webpack:///./packages/operator-lifecycle-manager/src/utils/useClusterServiceVersion.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/fields.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/match-expressions.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/widgets.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/affinity.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/templates.tsx","webpack:///./packages/console-shared/src/components/synced-editor/index.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operand/utils.ts","webpack:///./packages/operator-lifecycle-manager/src/components/operand/const.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/spec-descriptor-input.tsx"],"names":["groupVersionKind","children","t","model","inFlight","message","kind","ARRAY_INDEX_PATTERN","ARRAY_FIELD_GROUP_PATTERN","arrayFieldGroup","FIELD_GROUP_PATTERN","fieldGroup","GROUP_PATTERN","RegExp","idFromPath","path","split","join","hasDescriptor","field","prefix","suffix","capabilities","capability","startsWith","parseGroupDescriptor","groupDescriptor","descriptor","regexMatch","groupType","groupName","match","parseArrayPath","pathBeforeIndex","index","pathAfterIndex","modifyArrayFieldPathIndex","operation","capabilitiesFor","property","enum","option","select","type","number","booleanSwitch","text","flattenNestedProperties","name","providedAPI","obj","currentCapabilities","currentPath","fields","required","properties","nestedProperty","nestedPropertyName","includes","n","length","items","handleArrayProperty","providedAPIField","specDescriptors","description","displayName","handleAtomicProperty","getPropertyDepth","depth","Math","max","specDescriptorToFields","pathToArray","subPath","test","FieldGroup","isExpanded","id","label","expanded","setExpanded","className","onClick","event","preventDefault","current","htmlFor","isHidden","OperandFormInputGroup","input","DEPRECATED_CreateOperandForm","formData","csv","schema","onChange","next","postFormCallback","params","immutableFormData","handleFormDataUpdate","value","existing","getIn","item","setIn","list","toJS","setFields","schemaFields","openAPIFieldsAccumulator","propertyName","fieldsForOpenAPI","spec","descriptorFields","providedAPIFieldsAccumulator","specDescriptor","labelTags","formValue","arrayify","error","setError","advancedFields","arrayFields","groupFields","normalFields","advancedFieldsAccumulator","arrayFieldsAccumulator","groupFieldsAccumulator","normalFieldsAccumulator","advanced","arrayFieldGroups","groupedByName","fieldsInGroup","fieldLists","fieldListsAccumulator","fieldGroups","fieldList","getFormData","submit","e","namespaced","ns","then","res","push","catch","err","inputFor","formDataValue","currentValue","podCount","password","imagePullPolicy","IfNotPresent","resourceRequirements","limits","cpu","memory","requirements","updateStrategy","rollingUpdate","maxUnavailable","maxSurge","nodeAffinity","podAffinity","podAntiAffinity","defaultValueFor","find","c","fieldDependency","controlFieldInfoList","filter","controlFieldPathList","map","reduce","infoList","info","controlFieldPath","currentControlFieldValue","toString","currentTarget","changeValueBy","autoFocus","cpuLimitsPath","memoryLimitsPath","storageLimitsPath","cpuRequestsPath","memoryRequestsPath","storageRequestsPath","style","marginLeft","storage","onChangeCPU","onChangeMemory","onChangeStorage","some","k8sResourcePrefix","replace","k8sModel","console","warn","resources","namespace","desc","placeholder","selectedKey","checkbox","isChecked","_event","key","labelOff","policy","title","maxUnavailablePath","maxSurgePath","strategyType","get","onChangeStrategyType","onChangeMaxUnavailable","onChangeMaxSurge","replicas","uid","affinity","all","removeArrayFieldGroup","indexToRemove","fieldsToLeftShift","_unused","fieldPathsToRemove","formDataPathToRemove","leftShiftedFields","fieldAccumulator","currentFields","deleteIn","marginBottom","icon","provider","content","isInline","variant","onSubmit","asDefinitionList","target","objectify","tags","groupDisplayName","singularGroupDisplayName","f","addedFields","addArrayFieldGroup","textExpanded","textCollapsed","paddingBottom","goBack","OperandForm","prune","errors","setErrors","uiSchema","noValidate","formContext","onError","submitFormData","metadata","rest","data","processFormData","onCancel","URLSearchParams","window","location","search","has","OperandYAML","initialYAML","hideHeader","template","resourceObjPath","CreateYAMLInner","props","kindsInFlight","kindObj","isCreate","templateExtensions","resolvedTemplates","yamlTemplates","crd","apiVersion","header","objLabel","labelKey","loader","DroppableEditYAML","initialResource","create","CreateYAML_","CreateYAML","EditYAMLPage","isList","prop","wrapperProps","EditYAML","CreateOperand","initialEditorType","loaded","loadError","plural","undefined","formHelpText","activePerspective","helpText","setHelpText","csvName","baseSchema","versions","version","openAPIV3Schema","FormComponent","sample","pruneFunc","onChangeEditorType","newMethod","Form","badge","context","yamlContext","FormEditor","initialData","initialType","YAMLEditor","lastViewUserSettingKey","createResourceExtension","component","getNumberOrPercent","indexOf","ConfigureUpdateStrategy","showDescription","checked","subTitle","disabled","size","count","ConfigureUpdateStrategyModal","setStrategyType","deployment","setMaxUnavailable","setMaxSurge","patch","op","promise","handlePromise","close","errorMessage","inProgress","submitText","cancel","configureUpdateStrategyModal","DynamicForm","ArrayFieldTemplate","ErrorTemplate","FieldTemplate","ObjectFieldTemplate","widgets","customUISchema","noActions","showAlert","restProps","schemaErrors","FallbackComponent","noHtml5Validate","newErrors","stack","showErrorList","DeprecatedOperatorType","findDeprecation","deprecation","status","conditions","findDeprecatedOperator","deprecatedPackage","PackageDeprecated","deprecatedChannel","ChannelDeprecated","deprecatedVersion","VersionDeprecated","DeprecatedOperatorWarningBadge","color","DeprecatedOperatorWarningIcon","dataTest","DeprecatedOperatorWarningAlert","dismissible","alertVisible","setAlertVisible","actionClose","onClose","DescriptorType","SpecCapability","StatusCapability","CommonCapability","useCalculatedDescriptorProperties","descriptorType","propertySchema","fullPath","groupDescriptorDetails","descriptors","acc","hidden","beforeIndex","afterIndex","group","subgroup","nested","arrayGroupPath","isArrayGroup","elementDescriptor","handleArrayDescriptor","getPatchPathFromDescriptor","getValidCapabilitiesForDataType","compatibleCapabilities","getCompatibleCapabilities","isCompatible","compatibleCapability","deprecatedCapability","sort","a","b","aIndex","findIndex","bIndex","getValidCapabilitiesForValue","getValueType","getValidCapabilitiesForSchema","isMainStatusDescriptor","ClusterServiceVersionLogo","imgSrc","mediatype","base64data","src","alt","K8S_UI_SCHEMA","JSON_SCHEMA_GROUP_TYPES","JSON_SCHEMA_NUMBER_TYPES","THOUSAND","MILLION","BILLION","UNSUPPORTED_SCHEMA_PROPERTIES","stringPathToUISchemaPath","useSchemaLabel","defaultLabel","options","useSchemaDescription","defaultDescription","getSchemaErrors","unsupportedProperty","hasNoFields","jsonSchema","noUIFieldOrWidget","array","object","boolean","integer","string","getUISortOrder","fallback","Number","getControlFieldsAtPath","dependency","slice","controlFieldName","childUISchema","getJSONSchemaPropertySortWeight","isRequired","propertyUISchema","controlFields","isControlField","siblingDependency","uiSortOrder","controlFieldOffset","offset","controlField","Infinity","getJSONSchemaOrder","descendantOrder","handleArray","propertyNames","uiOrder","sortBy","orderAccumulator","handleObject","pruneRecursive","shouldPrune","valueIsEmpty","definedAndEmpty","module","exports","REGEXP_K8S_RESOURCE_CAPABILITY","REGEXP_FIELD_DEPENDENCY_CAPABILITY","REGEXP_SELECT_CAPABILITY","REGEXP_K8S_RESOURCE_SUFFIX","REGEXP_SELECT_OPTION","REGEXP_FIELD_DEPENDENCY_PATH_VALUE","REGEXP_ARRAY_PATH","REGEXP_NESTED_ARRAY_PATH","REGEXP_CAPTURE_GROUP_SUBGROUP","DEPRECATED_CAPABILITIES","namespaceSelector","COMMON_COMPATIBLE_CAPABILITIES","OBJECT_COMPATIBLE_CAPABILITIES","podStatuses","selector","ARRAY_COMPATIBLE_CAPABILITIES","endpointList","PRIMITIVE_COMPATIBLE_CAPABILITIES","k8sPhase","k8sPhaseReason","w3Link","CAPABILITY_SORT_ORDER","JSONSchemaType","ResourceRequirements","fontWeight","ResourceRequirementsModal","setCPU","setMemory","setStorage","newObj","ResourceRequirementsModalLink","k8s","none","modal","isCSV","Boolean","isCopiedCSV","reason","labels","isStandaloneCSV","annotations","OperatorType","phase","CSVPhaseFailed","apiGroup","copiedCSVsDisabled","SERVER_FLAGS","useClusterServiceVersion","namespacedCSV","namespacedCSVLoaded","namespacedCSVLoadError","optional","globalCSV","globalCSVLoaded","globalCSVLoadError","Description","FormField","showLabel","FieldSet","idSchema","$id","ResourceRequirementsField","mem","sto","requests","UpdateStrategyField","NodeAffinityField","PodAffinityField","DescriptionField","DropdownField","val","LabelsField","inputProps","newValue","MatchExpressionsField","matchExpressions","v","NullField","SchemaField","fieldSchema","registry","rootSchema","resolvedSchema","UNARY_OPERATORS","Exists","DoesNotExist","ALL_OPERATORS","Equals","In","NotEqual","NotIn","MatchExpression","expression","allowedOperators","onClickRemove","operator","values","dropDownClassName","o","newOperator","trim","MatchExpressions","_exp","i","removeExpression","newExpression","exp","updateExpression","TextWidget","onBlur","onFocus","readonly","schemaType","NumberWidget","readOnly","numberValue","PasswordWidget","CheckboxWidget","SwitchWidget","labelOn","PodCountWidget","ImagePullPolicyWidget","SelectWidget","enumOptions","itemAccumulator","BaseInput","K8sResourceWidget","selectorObj","int32","int64","AffinityRuleType","ALLOWED_MATCH_EXPRESSION_OPERATORS","DEFAULT_MATCH_EXPRESSION","DEFAULT_NODE_AFFINITY","requiredDuringSchedulingIgnoredDuringExecution","nodeSelectorTerms","preferredDuringSchedulingIgnoredDuringExecution","weight","preference","DEFAULT_POD_AFFINITY","topologyKey","labelSelector","podAffinityTerm","NodeAffinityRule","showRemoveButton","rule","Preferred","parsedValue","NodeAffinity","requiredRules","preferredRules","requiredIndex","atIndex","updateRequiredRules","removeRequiredRule","_v","Required","preferredIndex","updatePreferredRules","removePreferredRule","PodAffinityRule","parsed","PodAffinity","ruleIndex","preferredRule","AtomicFieldTemplate","rawErrors","AdvancedProperties","dependencyMet","setDependencyMet","controlFieldValue","normalProperties","advancedProperties","p","onAddClick","hasRemove","onDropIndexClick","singularLabel","YAML_KEY_ORDER","YAML_TO_JS_OPTIONS","skipInvalid","sortKeys","SyncedEditor","displayConversionError","setFormData","yaml","setYAML","switchError","setSwitchError","yamlWarning","setYAMLWarning","editorType","setEditorType","handleFormDataChange","newFormData","changeEditorType","newType","YAML","newYAML","js","String","capabilitiesToUISchema","k8sResourceCapability","groupVersionKindToken","k8sResourceCapabilityToUISchema","optionAccumulator","selectCapabilitiesToUISchema","widget","widgetAccumulator","descriptorsToUISchema","uiSchemaFromDescriptors","uiSchemaAccumulator","schemaForDescriptor","uiSchemaPath","isAdvanced","withMutations","mutable","advancedPropertyName","pathToAdvanced","currentAdvanced","mergeDeepIn","fieldDependencyCapabilityToUISchema","getUISchema","DEFAULT_K8S_SCHEMA","default","additionalProperties","HIDDEN_UI_SCHEMA","capabilityFieldMap","capabilityWidgetMap"],"mappings":"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","file":"create-operand-chunk-902241d3d42efcd80a21.min.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { GroupVersionKind, kindForReference } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\n\ntype ModelStatusBoxProps = {\n  groupVersionKind: GroupVersionKind;\n};\n\nconst ModelStatusBox: React.FC<ModelStatusBoxProps> = ({ groupVersionKind, children }) => {\n  const { t } = useTranslation();\n  const [model, inFlight] = useK8sModel(groupVersionKind);\n\n  if (!model && inFlight) {\n    return null;\n  }\n  if (!model) {\n    return (\n      <ErrorPage404\n        message={t(\n          \"olm~The server doesn't have a resource type {{kind}}. Try refreshing the page if it was recently added.\",\n          { kind: kindForReference(groupVersionKind) },\n        )}\n      />\n    );\n  }\n  return <>{children}</>;\n};\n\nexport default ModelStatusBox;\n","// THIS COMPONENT IS DEPRECATED AND WILL BE REMOVED IN v4.6.\n\nimport * as React from 'react';\nimport {\n  Alert,\n  ActionGroup,\n  Button,\n  Switch,\n  Accordion,\n  Checkbox,\n  AccordionItem,\n  AccordionToggle,\n  AccordionContent,\n} from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as classNames from 'classnames';\nimport * as Immutable from 'immutable';\nimport { JSONSchema6, JSONSchema6TypeName } from 'json-schema';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SyncMarkdownView } from '@console/internal/components/markdown-view';\nimport { ConfigureUpdateStrategy } from '@console/internal/components/modals/configure-update-strategy-modal';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport {\n  NumberSpinner,\n  history,\n  SelectorInput,\n  ListDropdown,\n  useScrollToTopOnMount,\n  Dropdown,\n} from '@console/internal/components/utils';\nimport { ExpandCollapse } from '@console/internal/components/utils/expand-collapse';\nimport {\n  GroupVersionKind,\n  ImagePullPolicy,\n  k8sCreate,\n  K8sResourceKind,\n  kindForReference,\n  modelFor,\n  NodeAffinity as NodeAffinityType,\n} from '@console/internal/module/k8s';\nimport { usePostFormSubmitAction } from '@console/shared';\nimport { ProvidedAPI } from '../../types';\nimport { ClusterServiceVersionLogo } from '../cluster-service-version-logo';\nimport {\n  NodeAffinity,\n  PodAffinity,\n  DEFAULT_NODE_AFFINITY,\n  DEFAULT_POD_AFFINITY,\n} from '../descriptors/spec/affinity';\nimport { ResourceRequirements } from '../descriptors/spec/resource-requirements';\nimport { Descriptor, SpecCapability, StatusCapability } from '../descriptors/types';\nimport { OperandFormProps } from './operand-form';\n\n/*\n * Matches a path that contains an array index. Use Sting.match against an OperandField 'path'\n * property to determine if it contains an array index. It will parse the path into three parts,\n * [match, pathBeforeIndex, index, pathAfterIndex]. For example:\n *\n *   const [match, pathBeforeIndex, index, pathAfterIndex] =\n *     'path.before[0].path.after'.match(ARRAY_INDEX_PATTERN);\n *\n *   console.log(match);\n *   > 'path.before[0].path.after'\n *\n *   console.log(pathBeforeIndex);\n *   > 'path.before'\n *\n *   console.log(index)\n *   > '0'\n *\n *   console.log(pathAfterIndex)\n *   > 'path.after'\n *\n */\nconst ARRAY_INDEX_PATTERN = /^(.*)\\[(\\d+)\\]\\.?(.*)$/;\n\n// Regex for SpecCapability.arrayFieldGroup and SpecCapability.fieldGroup\nconst ARRAY_FIELD_GROUP_PATTERN = _.escapeRegExp(SpecCapability.arrayFieldGroup);\nconst FIELD_GROUP_PATTERN = _.escapeRegExp(SpecCapability.fieldGroup);\n\n/*\n * Matches either field group or array field group SpecCapabilty. Use String.match against an\n * OperandField.capability element to determine if it is a group descriptor and parse group type\n * and name. For example:\n *\n *   const [match, groupType, name] = 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:groupName';\n *\n *   console.log(match);\n *   > 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:groupName'\n *\n *   console.log(groupType);\n *   > 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:'\n *\n *   console.log(name);\n *   > 'groupName'\n */\nconst GROUP_PATTERN = new RegExp(`^(${FIELD_GROUP_PATTERN}|${ARRAY_FIELD_GROUP_PATTERN})(.*)$`);\n\n// Default max nesting depth the form should display\nconst MAX_DEPTH = 1;\n\nconst idFromPath = (path) => `DEPRECATED_root_${path.split('.').join('_')}`;\n\n/*\n * Determines if a field contains a descriptor in it's capabilities. If only prefix is\n * provided, this will return true if the field has ANY capability that starts with the prefix. If\n * both prefix and suffix are provided, this will return true only if the field has a capability\n * that matches the concatenation of prefix + suffix.\n */\nconst hasDescriptor = (field: OperandField, prefix: string, suffix: string = null): boolean => {\n  return suffix\n    ? _.includes(field.capabilities, `${prefix}${suffix}`)\n    : _.some(field.capabilities, (capability) => capability.startsWith(prefix));\n};\n\n/*\n * Accepts an OperandField and returns a name and group type if that field is either a\n * a field group or array field group. Returned as object to allow destructuring of needed values\n * only.\n */\nconst parseGroupDescriptor = (\n  field: OperandField,\n): { groupName?: string; groupType?: string; regexMatch?: string } => {\n  const groupDescriptor = _.find(\n    field.capabilities,\n    (descriptor) =>\n      descriptor.startsWith(SpecCapability.fieldGroup) ||\n      descriptor.startsWith(SpecCapability.arrayFieldGroup),\n  );\n  const [regexMatch, groupType, groupName] = groupDescriptor.match(GROUP_PATTERN) || [];\n  return { regexMatch, groupName, groupType };\n};\n\n/*\n * Splits a path string into path before the array index, the array index itself, and the path after\n * the index. Returns as object to allow destructuring of needed values only.\n */\nconst parseArrayPath = (\n  path: string,\n): { index?: number; regexMatch?: string; pathBeforeIndex?: string; pathAfterIndex?: string } => {\n  const [regexMatch, pathBeforeIndex, index, pathAfterIndex] =\n    path.match(ARRAY_INDEX_PATTERN) || [];\n  return regexMatch\n    ? { index: _.parseInt(index), regexMatch, pathBeforeIndex, pathAfterIndex }\n    : { regexMatch };\n};\n\n/*\n * If the path contains an array index, this function will return the path with the 'operation'\n * callback return value in place of the existing array index. If no array index is in the path,\n * the original path is returned.\n */\nconst modifyArrayFieldPathIndex = (\n  path: string,\n  operation: (index?: number) => string | number,\n): string => {\n  const { regexMatch, index, pathBeforeIndex, pathAfterIndex } = parseArrayPath(path);\n  return !regexMatch\n    ? path\n    : `${pathBeforeIndex}[${operation(index)}]${pathAfterIndex && `.${pathAfterIndex}`}`;\n};\n\n// Accepts a SpecCapbability[] array and returns an appropriate default value for that field\nconst defaultValueFor = (capabilities: Capability[]): any => {\n  // String fields\n  if (\n    _.intersection(capabilities, [\n      SpecCapability.podCount,\n      SpecCapability.password,\n      SpecCapability.text,\n      SpecCapability.number,\n      SpecCapability.select,\n    ]).length > 0\n  ) {\n    return '';\n  }\n\n  if (capabilities.includes(SpecCapability.imagePullPolicy)) {\n    return ImagePullPolicy.IfNotPresent;\n  }\n\n  // Resource requirement fields\n  if (capabilities.includes(SpecCapability.resourceRequirements)) {\n    return Immutable.fromJS({\n      limits: {\n        cpu: '',\n        memory: '',\n        'ephemeral-storage': '',\n      },\n      requirements: {\n        cpu: '',\n        memory: '',\n        'ephemeral-storage': '',\n      },\n    });\n  }\n\n  // Update strategy\n  if (capabilities.includes(SpecCapability.updateStrategy)) {\n    return Immutable.fromJS({\n      type: 'RollingUpdate',\n      rollingUpdate: {\n        maxUnavailable: '',\n        maxSurge: '',\n      },\n    });\n  }\n\n  // Node and pod affinities\n  if (capabilities.includes(SpecCapability.nodeAffinity)) {\n    return Immutable.fromJS(DEFAULT_NODE_AFFINITY).setIn(\n      ['preferredDuringSchedulingIgnoredDuringExecution', 'weight'],\n      '',\n    );\n  }\n\n  if (\n    capabilities.includes(SpecCapability.podAffinity) ||\n    capabilities.includes(SpecCapability.podAntiAffinity)\n  ) {\n    return Immutable.fromJS(DEFAULT_POD_AFFINITY).setIn(\n      ['preferredDuringSchedulingIgnoredDuringExecution', 'weight'],\n      '',\n    );\n  }\n\n  // If none of these capabilities are present in the array, return null.\n  return null;\n};\n\n// Accepts an OpenAPI spec property and returns a corresponding SpecCapability[] array.\nconst capabilitiesFor = (property: JSONSchema6): SpecCapability[] => {\n  if (property.enum) {\n    return _.map(\n      property.enum || [],\n      (option: string) => `${SpecCapability.select}${option}` as SpecCapability,\n    );\n  }\n  switch (property.type) {\n    case 'integer':\n      return [SpecCapability.number];\n    case 'boolean':\n      return [SpecCapability.booleanSwitch];\n    default:\n      return [SpecCapability.text];\n  }\n};\n\n/*\n * Recursively traverses OpenAPI spec properties and flattens all nested properties into an\n * OperandField[] array.\n * If a resource instance is provided in the 'obj' argument, then array-type spec properties\n * will be expanded into the appropriate number of fields.\n * If a matching providedAPI descriptor exists, it will take precedence over the openAPI spec,\n * except that the providedAPI x-descriptors will be unioned with OpenAPI capabilities.\n */\nconst flattenNestedProperties = (\n  property: JSONSchema6,\n  name: string,\n  providedAPI: ProvidedAPI,\n  obj: K8sResourceKind,\n  {\n    currentCapabilities = [],\n    currentPath = [],\n    fields = [],\n    required = false,\n  }: FlattenNestedPropertiesAccumulator,\n): OperandField[] => {\n  // Null check\n  if (!property) {\n    return fields;\n  }\n\n  const handleObjectProperty = (): OperandField[] =>\n    _.flatMap(property.properties, (nestedProperty, nestedPropertyName) =>\n      flattenNestedProperties(nestedProperty as JSONSchema6, nestedPropertyName, providedAPI, obj, {\n        currentCapabilities: [\n          ...currentCapabilities,\n          `${SpecCapability.fieldGroup}${name}` as SpecCapability,\n        ],\n        currentPath: [...currentPath, name],\n        fields,\n        required: (property?.required || []).includes(nestedPropertyName),\n      }),\n    );\n\n  const handleArrayProperty = (): OperandField[] => {\n    // Find the number of array elements that are already defined in the provided object\n    const n = _.get(obj, `spec.${currentPath.join('.')}${name}`, []).length || 1;\n\n    // Since _.times will return a multidimensional array of OperandFields (OperandField[][]), we\n    // need to flatten one level deeper than _.flatMap provides.\n    return _.flatMapDepth(\n      (property.items as JSONSchema6)?.properties ?? {},\n      (nestedProperty, nestedPropertyName) =>\n        // Repeat recursion (n) times so that the correct number of fields are created for\n        // existing values in obj. This ensures that further nested fields also get created.\n        _.times(n, (index) =>\n          flattenNestedProperties(\n            nestedProperty as JSONSchema6,\n            nestedPropertyName,\n            providedAPI,\n            obj,\n            {\n              currentCapabilities: [\n                ...currentCapabilities,\n                `${SpecCapability.arrayFieldGroup}${name}` as SpecCapability,\n              ],\n              currentPath: [...currentPath, `${name}[${index}]`], // Array field paths must include an index\n              fields,\n              required: (property?.required || []).includes(nestedPropertyName),\n            },\n          ),\n        ),\n      2,\n    );\n  };\n\n  const handleAtomicProperty = (): OperandField[] => {\n    const path = [...currentPath, name].join('.');\n\n    // ProvidedAPI should only have a single descriptor for each array field. Regardless of the\n    // index of this field, use the providedAPI.specDescriptor at index 0.\n    const providedAPIField = _.find(providedAPI?.specDescriptors, {\n      path: modifyArrayFieldPathIndex(path, () => 0),\n    });\n    return [\n      ...fields,\n      {\n        capabilities: _.union(\n          providedAPIField?.['x-descriptors'] || [],\n          currentCapabilities,\n          capabilitiesFor(property as JSONSchema6),\n        ),\n        description: providedAPIField?.description || property.description,\n        displayName: providedAPIField?.displayName || _.startCase(name),\n        path: `spec.${path}`,\n        required,\n        type: property.type,\n      } as OperandField,\n    ];\n  };\n\n  switch (property.type) {\n    // If this property is of 'object' type, return a flat map of its properties\n    case 'object':\n      return handleObjectProperty();\n\n    // If this property of is of 'array' type, return a flat map of its item's properties.\n    case 'array':\n      return handleArrayProperty();\n\n    // This property is not an array or object, so it can be mapped to a specific descriptor\n    default:\n      return handleAtomicProperty();\n  }\n};\n\n// Returns traversal depth of an OpenAPI spec property.\nconst getPropertyDepth = (property: JSONSchema6, depth: number = 0): number => {\n  // If this property is not an array or object, we have reached the maximum depth\n  if (!property || !['object', 'array'].includes(property.type as string)) {\n    return depth;\n  }\n\n  // Return the maximum depth of the nested properties\n  return Math.max(\n    0,\n    ..._.map(\n      property?.properties || (property?.items as JSONSchema6)?.properties,\n      (nestedProperty) => getPropertyDepth(nestedProperty as JSONSchema6, depth + 1),\n    ),\n  );\n};\n\n/*\n * Maps openAPI spec properties to OperandField[] array. This will return all fields with a traversal\n * depth less than the 'depth' argument, and will combine matching providedAPI descriptors with the\n * corresponding OpenAPI spec property in a way that providedAPI data will take precedence over\n * openAPI spec properties.\n */\nconst fieldsForOpenAPI = (\n  schema: JSONSchema6,\n  providedAPI: ProvidedAPI,\n  obj: K8sResourceKind,\n  depth: number = MAX_DEPTH,\n): OperandField[] => {\n  return _.reduce(\n    schema?.properties || {},\n    (openAPIFieldsAccumulator: OperandField[], property: JSONSchema6, propertyName: string) => {\n      if (!property?.type || getPropertyDepth(property) > depth) {\n        return openAPIFieldsAccumulator;\n      }\n      return [\n        ...openAPIFieldsAccumulator,\n        ...flattenNestedProperties(property, propertyName, providedAPI, obj, {\n          required: (schema?.required || []).includes(propertyName),\n        }),\n      ];\n    },\n    [],\n  );\n};\n\n/*\n * Convert a CRD specDescriptor to appropriate OperandField type. Expands obj array properties\n * to the appropriate number of fields.\n */\nconst specDescriptorToFields = (\n  { description, displayName, path, 'x-descriptors': capabilities = [] }: Descriptor,\n  obj: K8sResourceKind,\n): OperandField[] => {\n  // Use regex to check path for an array index, and parse out the parts of the path before\n  // and after the array index.\n  const { regexMatch, pathBeforeIndex, pathAfterIndex } = parseArrayPath(path);\n\n  // If match exists, the field represents an element in an array field group, which means we\n  // need to create 'n' duplicates of this field, where 'n' is the number of\n  // elements in the corresponding array property of 'obj'. If n = 0, we only create one field.\n  if (regexMatch) {\n    const n = _.get(obj, _.toPath(`spec.${pathBeforeIndex}`), []).length || 1;\n    return _.flatten(\n      _.times(n, (index) => ({\n        path: `spec.${pathBeforeIndex}[${index}]${pathAfterIndex && `.${pathAfterIndex}`}`,\n        displayName,\n        description,\n        capabilities,\n        type: null,\n        required: null,\n      })),\n    );\n  }\n  return [\n    {\n      path: `spec.${path}`,\n      displayName,\n      description,\n      type: null,\n      required: null,\n      capabilities,\n    },\n  ];\n};\n\nconst pathToArray = (path: string): (string | number)[] =>\n  _.map(_.toPath(path), (subPath) => {\n    return /^\\d+$/.test(subPath) ? _.parseInt(subPath) : subPath;\n  });\n\nconst FieldGroup: React.FC<FieldGroupProps> = ({ children, isExpanded = false, id, label }) => {\n  const [expanded, setExpanded] = React.useState<boolean>(isExpanded);\n\n  const onToggle = (event) => {\n    event.preventDefault();\n    setExpanded((current) => !current);\n  };\n\n  return (\n    <div id={`DEPRECATED_${id}_field-group`} className=\"co-dynamic-form__field-group\">\n      <AccordionItem>\n        <AccordionToggle\n          id={`DEPRECATED_${id}_accordion-toggle`}\n          onClick={onToggle}\n          isExpanded={expanded}\n        >\n          <label htmlFor={`DEPRECATED_${id}_accordion-content`}>{label}</label>\n        </AccordionToggle>\n        <AccordionContent id={`DEPRECATED_${id}_accordion-content`} isHidden={!expanded}>\n          {children}\n        </AccordionContent>\n      </AccordionItem>\n    </div>\n  );\n};\n\n// Wrapper for individual operand form inputs\nconst OperandFormInputGroup: React.FC<OperandFormInputGroupProps> = ({ field, input }) => {\n  const { description, displayName, path, required } = field;\n  const id = idFromPath(path);\n  return input ? (\n    <div\n      id={`DEPRECATED_${id}_field`}\n      className=\"form-group co-dynamic-form__form-group\"\n      data-test-selector={path}\n    >\n      <label className={classNames('form-label', { 'co-required': required })} htmlFor={id}>\n        {displayName}\n      </label>\n      {input}\n      {description && (\n        <span id={`DEPRECATED_${id}__description`} className=\"help-block\">\n          {description}\n        </span>\n      )}\n    </div>\n  ) : null;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const DEPRECATED_CreateOperandForm: React.FC<OperandFormProps> = ({\n  formData,\n  csv,\n  schema,\n  model,\n  onChange,\n  providedAPI,\n  next,\n}) => {\n  const postFormCallback = usePostFormSubmitAction<K8sResourceKind>();\n  const { t } = useTranslation();\n  const params = useParams();\n  const immutableFormData = Immutable.fromJS(formData);\n  const handleFormDataUpdate = (path: string, value: any): void => {\n    const { regexMatch, index, pathBeforeIndex, pathAfterIndex } = parseArrayPath(path);\n\n    // Immutable will not initialize a deep path as a List if it includes an integer, so we need to manually\n    // initialize non-existent array properties to a List instance before updating state at that path.\n    if (regexMatch && index === 0) {\n      const existing = immutableFormData.getIn([...pathToArray(pathBeforeIndex), 0]);\n      const item = Immutable.Map(existing || {}).setIn(pathToArray(pathAfterIndex), value);\n      const list = Immutable.List([item]);\n      onChange(immutableFormData.setIn(pathToArray(pathBeforeIndex), list).toJS());\n    }\n    onChange(immutableFormData.setIn(pathToArray(path), value).toJS());\n  };\n\n  const handleFormDataDelete = (path) => {\n    onChange(immutableFormData.deleteIn(pathToArray(path)).toJS());\n  };\n\n  // Map providedAPI spec descriptors and openAPI spec properties to OperandField[] array\n  const [fields, setFields] = React.useState<OperandField[]>(() => {\n    // Get fields from openAPI\n    const schemaFields = fieldsForOpenAPI(\n      schema?.properties?.spec as JSONSchema6,\n      providedAPI,\n      formData,\n    );\n\n    // Get fields from providedAPI that do not exist in the OpenAPI spec.\n    const descriptorFields = _.reduce(\n      providedAPI?.specDescriptors ?? [],\n      (providedAPIFieldsAccumulator, specDescriptor) => {\n        // If this field was already created, ignore it.\n        if (_.find(schemaFields, { path: `spec.${specDescriptor.path}` })) {\n          return providedAPIFieldsAccumulator;\n        }\n\n        // Add the field if it doesn't exist\n        return [\n          ...providedAPIFieldsAccumulator,\n          ...specDescriptorToFields(specDescriptor, formData),\n        ];\n      },\n      [],\n    );\n\n    // Concatenate all fields and return\n    return [...schemaFields, ...descriptorFields];\n  });\n\n  const labelTags = React.useMemo(() => {\n    const formValue = immutableFormData.getIn(['metadata', 'labels']);\n    return SelectorInput.arrayify(_.isFunction(formValue?.toJS) ? formValue.toJS() : {});\n  }, [immutableFormData]);\n\n  const [error, setError] = React.useState<string>();\n\n  // Group fields into advanced, arrayFieldGroup, fieldGroup, and normal fields for rendering.\n  // Note that arrayFieldGroup and fieldGroup fields are still flat after this. The memoized\n  // 'arrayFieldGroups' and 'fieldGroups' (below) further organizes these by their respective\n  // group descriptors to simplify rendering and state management.\n  const [\n    advancedFields = [],\n    arrayFields = [],\n    groupFields = [],\n    normalFields = [],\n  ]: OperandField[][] = React.useMemo(\n    (): OperandField[][] =>\n      _.reduce(\n        fields,\n        (\n          [\n            advancedFieldsAccumulator = [],\n            arrayFieldsAccumulator = [],\n            groupFieldsAccumulator = [],\n            normalFieldsAccumulator = [],\n          ],\n          field,\n        ) => {\n          if (hasDescriptor(field, SpecCapability.arrayFieldGroup)) {\n            return [\n              advancedFieldsAccumulator,\n              [...arrayFieldsAccumulator, field],\n              groupFieldsAccumulator,\n              normalFieldsAccumulator,\n            ];\n          }\n          if (hasDescriptor(field, SpecCapability.fieldGroup)) {\n            return [\n              advancedFieldsAccumulator,\n              arrayFieldsAccumulator,\n              [...groupFieldsAccumulator, field],\n              normalFieldsAccumulator,\n            ];\n          }\n          if (hasDescriptor(field, SpecCapability.advanced)) {\n            return [\n              [...advancedFieldsAccumulator, field],\n              arrayFieldsAccumulator,\n              groupFieldsAccumulator,\n              normalFieldsAccumulator,\n            ];\n          }\n          return [\n            advancedFieldsAccumulator,\n            arrayFieldsAccumulator,\n            groupFieldsAccumulator,\n            [...normalFieldsAccumulator, field],\n          ];\n        },\n        [],\n      ),\n    [fields],\n  );\n\n  // Create memoized arrayFieldGroups. Organizes arrayFields into a structure that is easy to map\n  // and render.\n  const arrayFieldGroups = React.useMemo(() => {\n    // Group all fields by group name\n    const groupedByName = _.groupBy(arrayFields, (field) => {\n      const { groupName } = parseGroupDescriptor(field);\n      return groupName;\n    });\n\n    // Map {groupName: string, fieldLists: OperandField[][]}, where OperandField is a nested array\n    // of the appropriate fields, grouped by index.\n    return _.map(groupedByName, (fieldsInGroup, groupName: string) => ({\n      groupName,\n      fieldLists: _.reduce(\n        fieldsInGroup,\n        (fieldListsAccumulator, field) => {\n          const { index, regexMatch } = parseArrayPath(field.path);\n          if (regexMatch) {\n            fieldListsAccumulator[index] = [...(fieldListsAccumulator[index] || []), field];\n          }\n          return fieldListsAccumulator;\n        },\n        [],\n      ),\n    }));\n  }, [arrayFields]);\n\n  // Create memoized fieldGroups. Map to array of fields grouped by fieldGroup name so that sorting\n  // is easy.\n  const fieldGroups = React.useMemo(() => {\n    const groupedByName = _.groupBy(groupFields, (field) => {\n      const { groupName } = parseGroupDescriptor(field);\n      return groupName;\n    });\n\n    return _.map(groupedByName, (fieldList, groupName) => ({\n      groupName,\n      fieldList,\n    }));\n  }, [groupFields]);\n\n  const getFormData = (path): any => immutableFormData.getIn(pathToArray(path));\n\n  const submit = (e) => {\n    e.preventDefault();\n    k8sCreate(\n      model,\n      model.namespaced\n        ? immutableFormData.setIn(['metadata', 'namespace'], params.ns).toJS()\n        : immutableFormData.toJS(),\n    )\n      .then((res) => postFormCallback(res))\n      .then(() => next && history.push(next))\n      .catch((err: Error) => setError(err.message || 'Unknown error.'));\n  };\n\n  // TODO(alecmerdler): Move this into a single `<SpecDescriptorInput>` entry component in the `descriptors/` directory\n  const inputFor = ({ capabilities, displayName, path, required }: OperandField) => {\n    const id = idFromPath(path);\n    const formDataValue = getFormData(path);\n    const currentValue = _.isNil(formDataValue) ? defaultValueFor(capabilities) : formDataValue;\n    if (capabilities.find((c) => c.startsWith(SpecCapability.fieldDependency))) {\n      const controlFieldInfoList = capabilities.filter((c) =>\n        c.startsWith(SpecCapability.fieldDependency),\n      );\n      const controlFieldPathList = _.uniq(\n        controlFieldInfoList\n          .map((c) => c.split(SpecCapability.fieldDependency)[1])\n          .reduce((infoList, info) => [info.split(':')[0], ...infoList], []),\n      );\n      const controlFieldPath =\n        _.isArray(controlFieldPathList) && controlFieldPathList.length === 1\n          ? controlFieldPathList[0]\n          : null;\n      const currentControlFieldValue = !_.isNil(getFormData(`spec.${controlFieldPath}`))\n        ? getFormData(`spec.${controlFieldPath}`).toString()\n        : null;\n      const expectedControlFieldValueList = controlFieldInfoList\n        .map((c) => c.split(SpecCapability.fieldDependency)[1])\n        .reduce((infoList, info) => [info.split(':')[1], ...infoList], []);\n\n      if (!expectedControlFieldValueList.includes(currentControlFieldValue)) {\n        return null;\n      }\n    }\n    if (capabilities.includes(SpecCapability.podCount)) {\n      return (\n        <NumberSpinner\n          id={id}\n          value={currentValue}\n          onChange={({ currentTarget: { value } }) =>\n            handleFormDataUpdate(path, _.toInteger(value))\n          }\n          changeValueBy={(operation) =>\n            handleFormDataUpdate(path, _.toInteger(currentValue) + operation)\n          }\n          autoFocus\n          required\n        />\n      );\n    }\n    if (capabilities.includes(SpecCapability.resourceRequirements)) {\n      const cpuLimitsPath = `limits.cpu`;\n      const memoryLimitsPath = `limits.memory`;\n      const storageLimitsPath = 'limits.ephemeral-storage';\n      const cpuRequestsPath = `requests.cpu`;\n      const memoryRequestsPath = `requests.memory`;\n      const storageRequestsPath = 'requests.ephemeral-storage';\n      return (\n        <dl style={{ marginLeft: '15px' }}>\n          <dt>{t('olm~Limits')}</dt>\n          <dd>\n            <ResourceRequirements\n              cpu={currentValue.getIn?.(_.toPath(cpuLimitsPath))}\n              memory={currentValue.getIn?.(_.toPath(memoryLimitsPath))}\n              storage={currentValue.getIn?.(_.toPath(storageLimitsPath))}\n              onChangeCPU={(value) => handleFormDataUpdate(`${path}.${cpuLimitsPath}`, value)}\n              onChangeMemory={(value) => handleFormDataUpdate(`${path}.${memoryLimitsPath}`, value)}\n              onChangeStorage={(value) =>\n                handleFormDataUpdate(`${path}.${storageLimitsPath}`, value)\n              }\n              path={`${id}.limits`}\n            />\n          </dd>\n          <dt>{t('olm~Requests')}</dt>\n          <dd>\n            <ResourceRequirements\n              cpu={currentValue.getIn?.(_.toPath(cpuRequestsPath))}\n              memory={currentValue.getIn?.(_.toPath(memoryRequestsPath))}\n              storage={currentValue.getIn?.(_.toPath(storageRequestsPath))}\n              onChangeCPU={(value) => handleFormDataUpdate(`${path}.${cpuRequestsPath}`, value)}\n              onChangeMemory={(value) =>\n                handleFormDataUpdate(`${path}.${memoryRequestsPath}`, value)\n              }\n              onChangeStorage={(value) =>\n                handleFormDataUpdate(`${path}.${storageRequestsPath}`, value)\n              }\n              path={`${id}.requests`}\n            />\n          </dd>\n        </dl>\n      );\n    }\n    if (capabilities.includes(SpecCapability.password)) {\n      return (\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={id}\n            type=\"password\"\n            onChange={({ currentTarget: { value } }) => handleFormDataUpdate(path, value)}\n            value={currentValue}\n          />\n        </div>\n      );\n    }\n    if (capabilities.some((c) => c.startsWith(SpecCapability.k8sResourcePrefix))) {\n      const groupVersionKind: GroupVersionKind = capabilities\n        .find((c) => c.startsWith(SpecCapability.k8sResourcePrefix))\n        .split(SpecCapability.k8sResourcePrefix)[1]\n        .replace('core~v1~', '');\n      const k8sModel = modelFor(groupVersionKind);\n      if (!k8sModel) {\n        // eslint-disable-next-line no-console\n        console.warn('[Legacy CreateOperandForm] Cluster does not have resource', groupVersionKind);\n      }\n      return k8sModel ? (\n        <ListDropdown\n          id={id}\n          resources={[\n            {\n              kind: groupVersionKind,\n              namespace: k8sModel.namespaced ? params?.ns : null,\n            },\n          ]}\n          desc={displayName}\n          placeholder={t('olm~Select {{item}}', { item: kindForReference(groupVersionKind) })}\n          onChange={(value) => handleFormDataUpdate(path, value)}\n          selectedKey={currentValue ? `${currentValue}-${k8sModel?.kind}` : null}\n        />\n      ) : null;\n    }\n    if (capabilities.includes(SpecCapability.checkbox)) {\n      return (\n        <Checkbox\n          id={id}\n          style={{ marginLeft: '10px' }}\n          isChecked={(_.isNil(currentValue) ? false : currentValue) as boolean}\n          data-checked-state={(_.isNil(currentValue) ? false : currentValue) as boolean}\n          label={displayName}\n          required={required}\n          onChange={(_event, value) => handleFormDataUpdate(path, value)}\n        />\n      );\n    }\n    if (capabilities.includes(SpecCapability.booleanSwitch)) {\n      return (\n        <Switch\n          key={id}\n          id={id}\n          isChecked={(_.isNil(currentValue) ? false : currentValue) as boolean}\n          onChange={(_event, value) => handleFormDataUpdate(path, value)}\n          label={t('public~True')}\n          labelOff={t('public~False')}\n        />\n      );\n    }\n    if (capabilities.includes(SpecCapability.imagePullPolicy)) {\n      return (\n        <RadioGroup\n          id={id}\n          currentValue={currentValue}\n          items={_.values(ImagePullPolicy).map((policy) => ({\n            value: policy,\n            title: policy,\n          }))}\n          onChange={({ currentTarget: { value } }) => handleFormDataUpdate(path, value)}\n        />\n      );\n    }\n    if (capabilities.includes(SpecCapability.updateStrategy)) {\n      const maxUnavailablePath = `rollingUpdate.maxUnavailable`;\n      const maxSurgePath = `rollingUpdate.maxSurge`;\n      return (\n        <ConfigureUpdateStrategy\n          strategyType={currentValue.get('type')}\n          maxUnavailable={currentValue.getIn(_.toPath(maxUnavailablePath))}\n          maxSurge={currentValue.getIn(_.toPath(maxSurgePath))}\n          onChangeStrategyType={(value) => handleFormDataUpdate(`${path}.type`, value)}\n          onChangeMaxUnavailable={(value) =>\n            handleFormDataUpdate(`${path}.${maxUnavailablePath}`, value)\n          }\n          onChangeMaxSurge={(value) => handleFormDataUpdate(`${path}.${maxSurgePath}`, value)}\n          replicas={1}\n          uid={id}\n        />\n      );\n    }\n    if (capabilities.includes(SpecCapability.text)) {\n      return (\n        <div>\n          <input\n            key={id}\n            className=\"pf-v5-c-form-control\"\n            id={id}\n            type=\"text\"\n            onChange={({ currentTarget: { value } }) => handleFormDataUpdate(path, value)}\n            value={currentValue}\n          />\n        </div>\n      );\n    }\n    if (capabilities.includes(SpecCapability.number)) {\n      return (\n        <div>\n          <input\n            key={path}\n            className=\"pf-v5-c-form-control\"\n            id={id}\n            type=\"number\"\n            onChange={({ currentTarget: { value } }) =>\n              handleFormDataUpdate(path, value !== '' ? _.toNumber(value) : '')\n            }\n            value={currentValue !== '' ? _.toNumber(currentValue) : ''}\n          />\n        </div>\n      );\n    }\n    if (capabilities.includes(SpecCapability.nodeAffinity)) {\n      return (\n        <div style={{ marginLeft: '15px' }}>\n          <NodeAffinity\n            affinity={currentValue.toJS() as NodeAffinityType}\n            onChange={(value) => handleFormDataUpdate(path, Immutable.fromJS(value))}\n            uid={id}\n          />\n        </div>\n      );\n    }\n    if (\n      capabilities.includes(SpecCapability.podAffinity) ||\n      capabilities.includes(SpecCapability.podAntiAffinity)\n    ) {\n      return (\n        <div style={{ marginLeft: '15px' }}>\n          <PodAffinity\n            affinity={currentValue.toJS()}\n            onChange={(value) => handleFormDataUpdate(path, Immutable.fromJS(value))}\n            uid={id}\n          />\n        </div>\n      );\n    }\n    if (capabilities.some((c) => c.startsWith(SpecCapability.select))) {\n      return (\n        <div>\n          <Dropdown\n            id={id}\n            title={t('olm~Select {{item}}', { item: displayName })}\n            selectedKey={currentValue}\n            items={capabilities\n              .filter((c) => c.startsWith(SpecCapability.select))\n              .map((c) => c.split(SpecCapability.select)[1])\n              .reduce((all, option) => ({ [option]: option, ...all }), {})}\n            onChange={(value) => handleFormDataUpdate(path, value)}\n          />\n        </div>\n      );\n    }\n    return null;\n  };\n\n  /* Inserts an arrayFieldGroup at nextIndex. The fieldList argument is an array of fields\n   * representing a single element in an arrayFieldGroup. To add an arrayFieldGroup, we duplicate\n   * each field in this fieldList, replacing the array index in field.path with the nextIndex\n   * argument\n   */\n  const addArrayFieldGroup = (fieldLists: OperandField[][]) => {\n    // Duplicate each field in fieldList, creating the corresponding field and formValue at\n    // arrayFieldGroup[nextIndex]\n    const addedFields = _.reduce(\n      _.last(fieldLists),\n      (fieldAccumulator, field) => {\n        // Replace index of field with nextIndex\n        const path = modifyArrayFieldPathIndex(field.path, () => fieldLists.length);\n        return [...fieldAccumulator, { ...field, path }];\n      },\n      [],\n    );\n\n    setFields((currentFields) => [...currentFields, ...addedFields]);\n  };\n\n  // Removes fields corresponding to an  arrayFieldGroup index from the form\n  const removeArrayFieldGroup = (fieldLists: OperandField[][], indexToRemove: number) => {\n    // Flat array of fields in this arrayFieldGroup at index > removed.\n    const fieldsToLeftShift = _.flatten(\n      _.filter(fieldLists, (_unused, index) => index > indexToRemove),\n    );\n\n    // List of paths to be removed from fields list. Fields and values in fieldsToLeftShift\n    // will be replaced with left-shifted equivalents\n    const fieldPathsToRemove = _.map([...fieldLists[indexToRemove], ...fieldsToLeftShift], 'path');\n    const [regexMatch, formDataPathToRemove] =\n      (fieldPathsToRemove?.[0] || '').match(/^(.*\\[\\d+\\]).*$/) || [];\n\n    const leftShiftedFields = _.reduce(\n      fieldsToLeftShift,\n      (fieldAccumulator, field) => {\n        const path = modifyArrayFieldPathIndex(field.path, (index) => index - 1);\n        return [...fieldAccumulator, { ...field, path }];\n      },\n      [],\n    );\n\n    // Remove arrayFieldGroup from fields and replace subsequent arrayFieldGroup fields with\n    // left-shifted ones.\n    setFields((currentFields) => {\n      return [\n        // Filter out all removed fields and fields that need to be left-shifted\n        ..._.filter(currentFields, (field) => !_.includes(fieldPathsToRemove, field.path)),\n        // Add new left-shifted fields\n        ...leftShiftedFields,\n      ];\n    });\n    regexMatch && handleFormDataDelete(formDataPathToRemove);\n  };\n\n  const renderArrayFieldGroups = () =>\n    _.map(_.sortBy(arrayFieldGroups, 'groupName'), ({ fieldLists, groupName }) => {\n      // If there is no name for this fieldGroup, or no fields associated with the group name, don't\n      // render anything\n      if (_.isEmpty(groupName) || _.isEmpty(fieldLists)) {\n        return null;\n      }\n\n      const groupDisplayName = _.startCase(groupName);\n      const singularGroupDisplayName = groupDisplayName.replace(/s$/, '');\n      const id = `root_spec_${groupName}`;\n      const isExpanded = !_.some(fieldLists, (fieldList) =>\n        _.some(fieldList, (f) => hasDescriptor(f, SpecCapability.advanced) && !f.required),\n      );\n\n      return (\n        <FieldGroup id={id} isExpanded={isExpanded} key={id} label={groupDisplayName}>\n          {_.map(fieldLists, (fieldList, index) => (\n            <React.Fragment key={`${groupName}-${index}`}>\n              {index > 0 && <hr />}\n              {fieldLists.length > 1 && (\n                <div className=\"row co-array-field-group__remove\">\n                  <Button\n                    type=\"button\"\n                    className=\"co-array-field-group__remove-btn\"\n                    onClick={() => removeArrayFieldGroup(fieldLists, index)}\n                    variant=\"link\"\n                  >\n                    <MinusCircleIcon className=\"co-icon-space-r\" />\n                    {t('olm~Remove {{item}}', { item: singularGroupDisplayName })}\n                  </Button>\n                </div>\n              )}\n              {_.map(fieldList, (field) => (\n                <OperandFormInputGroup key={field.path} field={field} input={inputFor(field)} />\n              ))}\n            </React.Fragment>\n          ))}\n          <div className=\"row\">\n            <Button type=\"button\" onClick={() => addArrayFieldGroup(fieldLists)} variant=\"link\">\n              <PlusCircleIcon className=\"co-icon-space-r\" />\n              {t('olm~Add {{item}}', { item: singularGroupDisplayName })}\n            </Button>\n          </div>\n        </FieldGroup>\n      );\n    });\n\n  const renderFieldGroups = () =>\n    _.map(_.sortBy(fieldGroups, 'groupName'), ({ fieldList, groupName }) => {\n      if (_.isEmpty(groupName) || _.isEmpty(fieldList)) {\n        return null;\n      }\n      const id = `root_spec_${groupName}`;\n      const isExpanded = !_.some(\n        fieldList,\n        (f) => f.capabilities.includes(SpecCapability.advanced) && !f.required,\n      );\n      return (\n        <FieldGroup key={id} id={id} isExpanded={isExpanded} label={_.startCase(groupName)}>\n          {_.map(fieldList, (field) => (\n            <OperandFormInputGroup key={field.path} field={field} input={inputFor(field)} />\n          ))}\n        </FieldGroup>\n      );\n    });\n\n  const renderNormalFields = () =>\n    _.map(normalFields, (field) => (\n      <OperandFormInputGroup key={field.path} field={field} input={inputFor(field)} />\n    ));\n\n  const renderAdvancedFields = () =>\n    advancedFields.length > 0 && (\n      <div>\n        <ExpandCollapse\n          textExpanded={t('olm~Advanced configuration')}\n          textCollapsed={t('olm~Advanced configuration')}\n        >\n          {_.map(advancedFields, (field) => (\n            <OperandFormInputGroup key={field.path} field={field} input={inputFor(field)} />\n          ))}\n        </ExpandCollapse>\n      </div>\n    );\n  useScrollToTopOnMount();\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <div className=\"row\">\n        <div className=\"col-md-4 col-md-push-8 col-lg-5 col-lg-push-7\">\n          {csv && providedAPI && (\n            <div style={{ marginBottom: '30px' }}>\n              <ClusterServiceVersionLogo\n                displayName={providedAPI.displayName}\n                icon={_.get(csv, 'spec.icon[0]')}\n                provider={_.get(csv, 'spec.provider')}\n              />\n              <SyncMarkdownView content={providedAPI.description} />\n            </div>\n          )}\n        </div>\n        <div className=\"col-md-8 col-md-pull-4 col-lg-7 col-lg-pull-5\">\n          <Alert\n            isInline\n            className=\"co-alert co-break-word\"\n            variant=\"info\"\n            title={t(\n              'olm~Note: Some fields may not be represented in this form. Please select \"YAML View\" for full control of object creation.',\n            )}\n          />\n          <form className=\"co-dynamic-form\" onSubmit={submit}>\n            <Accordion asDefinitionList={false} className=\"co-dynamic-form__accordion\">\n              <div\n                id=\"DEPRECATED_root_metadata_name_field\"\n                key=\"root_metadata_name_field\"\n                className=\"form-group\"\n              >\n                <label className=\"form-label co-required\" htmlFor=\"DEPRECATED_root_metadata_name\">\n                  {t('public~Name')}\n                </label>\n                <input\n                  className=\"pf-v5-c-form-control\"\n                  type=\"text\"\n                  onChange={({ target: { value } }) => handleFormDataUpdate('metadata.name', value)}\n                  value={immutableFormData.getIn(['metadata', 'name']) || 'example'}\n                  id=\"DEPRECATED_root_metadata_name\"\n                  required\n                />\n              </div>\n              <div\n                id=\"DEPRECATED_root_metadata_labels_field\"\n                key=\"root_metadata_labels_field\"\n                className=\"form-group\"\n              >\n                <label className=\"form-label\" htmlFor=\"tags-input\">\n                  {t('public~Labels')}\n                </label>\n                <SelectorInput\n                  onChange={(value) =>\n                    handleFormDataUpdate(\n                      'metadata.labels',\n                      Immutable.fromJS(SelectorInput.objectify(value)),\n                    )\n                  }\n                  tags={labelTags}\n                />\n              </div>\n              {renderArrayFieldGroups()}\n              {renderFieldGroups()}\n              {renderNormalFields()}\n              {renderAdvancedFields()}\n            </Accordion>\n            {error && (\n              <Alert\n                isInline\n                className=\"co-alert co-break-word co-alert--scrollable\"\n                variant=\"danger\"\n                title=\"Error\"\n              >\n                {error}\n              </Alert>\n            )}\n            <div style={{ paddingBottom: '30px' }}>\n              <ActionGroup className=\"pf-v5-c-form\">\n                <Button onClick={submit} type=\"submit\" variant=\"primary\">\n                  {t('public~Create')}\n                </Button>\n                <Button onClick={history.goBack} variant=\"secondary\">\n                  {t('public~Cancel')}\n                </Button>\n              </ActionGroup>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype Capability = SpecCapability | StatusCapability;\n\n/**\n * Combines OLM descriptor with JSONSchema.\n */\ntype OperandField = {\n  path: string;\n  displayName: string;\n  description?: string;\n  type: JSONSchema6TypeName;\n  required: boolean;\n  capabilities: Capability[];\n};\n\ntype FlattenNestedPropertiesAccumulator = {\n  currentCapabilities?: Capability[];\n  currentPath?: string[];\n  fields?: OperandField[];\n  required: boolean;\n};\n\ntype OperandFormInputGroupProps = {\n  field: OperandField;\n  input: JSX.Element;\n};\n\ntype FieldGroupProps = {\n  isExpanded?: boolean;\n  id: string;\n  label: string;\n};\n","import * as React from 'react';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SyncMarkdownView } from '@console/internal/components/markdown-view';\nimport {\n  history,\n  resourcePathFromModel,\n  useScrollToTopOnMount,\n} from '@console/internal/components/utils';\nimport { k8sCreate, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePostFormSubmitAction } from '@console/shared';\nimport { DynamicForm } from '@console/shared/src/components/dynamic-form';\nimport { ClusterServiceVersionModel } from '../../models';\nimport { ClusterServiceVersionKind, CRDDescription, APIServiceDefinition } from '../../types';\nimport { ClusterServiceVersionLogo } from '../cluster-service-version-logo';\nimport { getUISchema } from './utils';\n\nexport const OperandForm: React.FC<OperandFormProps> = ({\n  csv,\n  formData,\n  model,\n  next,\n  onChange,\n  providedAPI,\n  prune,\n  schema,\n}) => {\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const params = useParams();\n  const postFormCallback = usePostFormSubmitAction<K8sResourceKind>();\n  const processFormData = ({ metadata, ...rest }) => {\n    const data = {\n      metadata: {\n        ...metadata,\n        ...(params?.ns && model.namespaced && { namespace: params.ns }),\n      },\n      ...rest,\n    };\n    return prune?.(data) ?? data;\n  };\n\n  const handleSubmit = ({ formData: submitFormData }) => {\n    k8sCreate(model, processFormData(submitFormData))\n      .then((res) => postFormCallback(res))\n      .then(() => next && history.push(next))\n      .catch((e) => setErrors([e.message]));\n  };\n\n  const handleCancel = () => {\n    if (new URLSearchParams(window.location.search).has('useInitializationResource')) {\n      history.replace(\n        resourcePathFromModel(\n          ClusterServiceVersionModel,\n          csv.metadata.name,\n          csv.metadata.namespace,\n        ),\n      );\n    } else {\n      history.goBack();\n    }\n  };\n\n  const uiSchema = React.useMemo(() => getUISchema(schema, providedAPI), [schema, providedAPI]);\n\n  useScrollToTopOnMount();\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <div className=\"row\">\n        <div className=\"col-md-4 col-md-push-8 col-lg-5 col-lg-push-7\">\n          {csv && providedAPI && (\n            <div style={{ marginBottom: '30px' }}>\n              <ClusterServiceVersionLogo\n                displayName={providedAPI.displayName}\n                icon={_.get(csv, 'spec.icon[0]')}\n                provider={_.get(csv, 'spec.provider')}\n              />\n              <SyncMarkdownView content={providedAPI.description} />\n            </div>\n          )}\n        </div>\n        <div className=\"col-md-8 col-md-pull-4 col-lg-7 col-lg-pull-5 co-create-operand__form--toggle-no-border\">\n          <DynamicForm\n            noValidate\n            errors={errors}\n            formContext={{ namespace: params.ns }}\n            uiSchema={uiSchema}\n            formData={formData}\n            onChange={onChange}\n            onError={setErrors}\n            onSubmit={handleSubmit}\n            onCancel={handleCancel}\n            schema={schema}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype ProvidedAPI = CRDDescription | APIServiceDefinition;\n\nexport type OperandFormProps = {\n  formData?: K8sResourceKind;\n  onChange?: (formData?: any) => void;\n  next?: string;\n  csv: ClusterServiceVersionKind;\n  model: K8sKind;\n  providedAPI: ProvidedAPI;\n  prune?: (data: any) => any;\n  schema: JSONSchema7;\n};\n","import * as React from 'react';\nimport { CreateYAML } from '@console/internal/components/create-yaml';\n\n/**\n * Component which wraps the YAML editor to ensure the templates are added from the `ClusterServiceVersion` annotations.\n */\nexport const OperandYAML: React.FC<OperandYAMLProps> = ({ onChange, next, initialYAML = '' }) => {\n  return (\n    <CreateYAML\n      hideHeader\n      onChange={onChange}\n      template={initialYAML}\n      {...(next && { resourceObjPath: () => next })}\n    />\n  );\n};\n\nexport type OperandYAMLProps = {\n  initialYAML?: string;\n  onChange?: (yaml: string) => void;\n  next?: string;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport { useResolvedExtensions } from '@console/dynamic-plugin-sdk/src/api/useResolvedExtensions';\nimport {\n  YAMLTemplate,\n  isYAMLTemplate,\n} from '@console/dynamic-plugin-sdk/src/extensions/yaml-templates';\nimport { getYAMLTemplates } from '../models/yaml-templates';\nimport { connectToPlural } from '../kinds';\nimport { AsyncComponent } from './utils/async';\nimport { Firehose, LoadingBox } from './utils';\nimport {\n  K8sKind,\n  apiVersionForModel,\n  referenceForModel,\n  K8sResourceKindReference,\n  K8sResourceKind,\n} from '../module/k8s';\nimport { ErrorPage404 } from './error';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\n\nexport const CreateYAMLInner = (props) => {\n  const {\n    params,\n    kindsInFlight,\n    kindObj,\n    hideHeader = false,\n    onChange = () => null,\n    resourceObjPath,\n    isCreate = true,\n  } = props;\n  const { t } = useTranslation();\n  const [templateExtensions, resolvedTemplates] = useResolvedExtensions<YAMLTemplate>(\n    React.useCallback(\n      (e): e is YAMLTemplate => isYAMLTemplate(e) && e.properties.model.kind === kindObj?.kind,\n      [kindObj],\n    ),\n  );\n  const yamlTemplates = React.useMemo(() => getYAMLTemplates(templateExtensions), [\n    templateExtensions,\n  ]);\n\n  if (!kindObj) {\n    if (kindsInFlight || !resolvedTemplates) {\n      return <LoadingBox />;\n    }\n    return <ErrorPage404 />;\n  }\n\n  const namespace = params.ns || 'default';\n  const template =\n    props.template ||\n    yamlTemplates.getIn([referenceForModel(kindObj), 'default']) ||\n    yamlTemplates.getIn(['DEFAULT', 'default']);\n\n  const obj = safeYAMLToJS(template);\n  obj.kind = kindObj.kind;\n  obj.metadata = obj.metadata || {};\n  if (kindObj.namespaced) {\n    obj.metadata.namespace = namespace;\n  }\n  if (kindObj.crd && template === yamlTemplates.getIn(['DEFAULT', 'default'])) {\n    obj.apiVersion = apiVersionForModel(kindObj);\n    obj.spec = obj.spec || {};\n  }\n  const header = t('public~Create {{objLabel}}', {\n    objLabel: kindObj.labelKey ? t(kindObj.labelKey) : kindObj.label,\n  });\n\n  // TODO: if someone edits namespace, we'll redirect to old namespace\n\n  return (\n    <AsyncComponent\n      loader={() => import('./droppable-edit-yaml').then((c) => c.DroppableEditYAML)}\n      initialResource={obj}\n      create={isCreate}\n      kind={kindObj.kind}\n      header={header}\n      hideHeader={hideHeader}\n      resourceObjPath={resourceObjPath}\n      onChange={onChange}\n    />\n  );\n};\n\nconst CreateYAML_ = connectToPlural(CreateYAMLInner);\n\nexport const CreateYAML = (props) => {\n  const params = useParams();\n  return <CreateYAML_ {...props} params={params} />;\n};\n\nexport const EditYAMLPage: React.SFC<EditYAMLPageProps> = (props) => {\n  const params = useParams();\n  const Wrapper = (wrapperProps) => (\n    <AsyncComponent\n      {...wrapperProps}\n      obj={wrapperProps.obj.data}\n      loader={() => import('./edit-yaml').then((c) => c.EditYAML)}\n      create={false}\n    />\n  );\n  return (\n    <Firehose\n      resources={[\n        {\n          kind: props.kind,\n          name: params.name,\n          namespace: params.ns,\n          isList: false,\n          prop: 'obj',\n        },\n      ]}\n    >\n      <Wrapper />\n    </Firehose>\n  );\n};\n\nexport type CreateYAMLProps = {\n  match?: any;\n  params?: any;\n  kindsInFlight: boolean;\n  kindObj: K8sKind;\n  template?: string;\n  download?: boolean;\n  header?: string;\n  hideHeader?: boolean;\n  isCreate?: boolean;\n  resourceObjPath?: (obj: K8sResourceKind, kind: K8sResourceKindReference) => string;\n  onChange?: (yaml: string) => any;\n};\n\nexport type EditYAMLPageProps = {\n  kind: string;\n};\n\nCreateYAML.displayName = 'CreateYAML';\nEditYAMLPage.displayName = 'EditYAMLPage';\n","import * as React from 'react';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport {\n  PageHeading,\n  StatusBox,\n  resourcePathFromModel,\n  AsyncComponent,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { CustomResourceDefinitionModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  kindForReference,\n  nameForModel,\n  CustomResourceDefinitionKind,\n  definitionFor,\n} from '@console/internal/module/k8s';\nimport { getBadgeFromType } from '@console/shared/src/components/badges';\nimport {\n  getSchemaErrors,\n  hasNoFields,\n  prune,\n} from '@console/shared/src/components/dynamic-form/utils';\nimport { ErrorBoundaryPage } from '@console/shared/src/components/error';\nimport { SyncedEditor } from '@console/shared/src/components/synced-editor';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { useCreateResourceExtension } from '@console/shared/src/hooks/create-resource-hook';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { RouteParams } from '@console/shared/src/types';\nimport { exampleForModel, providedAPIForModel } from '..';\nimport { ClusterServiceVersionModel } from '../../models';\nimport { ClusterServiceVersionKind, ProvidedAPI } from '../../types';\nimport { useClusterServiceVersion } from '../../utils/useClusterServiceVersion';\nimport ModelStatusBox from '../model-status-box';\nimport { DEFAULT_K8S_SCHEMA } from './const';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nimport { DEPRECATED_CreateOperandForm } from './DEPRECATED_operand-form';\nimport { OperandForm } from './operand-form';\nimport { OperandYAML } from './operand-yaml';\n\nexport const CreateOperand: React.FC<CreateOperandProps> = ({\n  initialEditorType,\n  csv,\n  loaded,\n  loadError,\n}) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const [model] = useK8sModel(params.plural);\n  const [crd] = useK8sWatchResource<CustomResourceDefinitionKind>(\n    model\n      ? {\n          kind: CustomResourceDefinitionModel.kind,\n          isList: false,\n          name: nameForModel(model),\n        }\n      : undefined,\n  );\n\n  const formHelpText = t(\n    'olm~Create by completing the form. Default values may be provided by the Operator authors.',\n  );\n\n  const [activePerspective] = useActivePerspective();\n  const [helpText, setHelpText] = React.useState(formHelpText);\n  const next =\n    activePerspective === 'dev'\n      ? '/topology'\n      : `${resourcePathFromModel(ClusterServiceVersionModel, params.csvName, params.ns)}/${\n          params.plural\n        }`;\n\n  const providedAPI = React.useMemo<ProvidedAPI>(() => providedAPIForModel(csv, model), [\n    csv,\n    model,\n  ]);\n\n  const baseSchema = React.useMemo(\n    () =>\n      crd?.spec?.versions?.find?.((version) => version.name === providedAPI?.version)?.schema\n        ?.openAPIV3Schema ?? (definitionFor(model) as JSONSchema7),\n    [crd, model, providedAPI],\n  );\n\n  // TODO This logic should be removed in a later release and we should only be using the\n  // OperandForm component. We are providing a temporary fallback to the old form component to ease\n  // the transition to structural schemas over descriptors. Once structural schemas are required,\n  // the fallback will no longer be necessary. If no structural schema is provided after this\n  // fallback is fully deprecated, a form will not be generated.\n  const [schema, FormComponent] = React.useMemo(() => {\n    const useFallback =\n      getSchemaErrors(baseSchema).length ||\n      hasNoFields((baseSchema?.properties?.spec ?? {}) as JSONSchema7);\n    return useFallback\n      ? // eslint-disable-next-line @typescript-eslint/naming-convention\n        [baseSchema, DEPRECATED_CreateOperandForm]\n      : [\n          _.defaultsDeep({}, DEFAULT_K8S_SCHEMA, _.omit(baseSchema, 'properties.status')),\n          OperandForm,\n        ];\n  }, [baseSchema]);\n\n  const sample = React.useMemo<K8sResourceKind>(() => exampleForModel(csv, model), [csv, model]);\n\n  const pruneFunc = React.useCallback((data) => prune(data, sample), [sample]);\n\n  const onChangeEditorType = React.useCallback(\n    (newMethod) => {\n      setHelpText(\n        newMethod === EditorType.Form\n          ? formHelpText\n          : t(\n              'olm~Create by manually entering YAML or JSON definitions, or by dragging and dropping a file into the editor.',\n            ),\n      );\n    },\n    [formHelpText, t],\n  );\n\n  const LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY = 'console.createOperandForm.editor.lastView';\n\n  return (\n    <StatusBox loaded={loaded} loadError={loadError} data={csv}>\n      <PageHeading\n        title={t('olm~Create {{item}}', { item: model.label })}\n        badge={getBadgeFromType(model.badge)}\n        helpText={helpText}\n      />\n      <SyncedEditor\n        context={{\n          formContext: { csv, model, next, schema, providedAPI },\n          yamlContext: { next },\n        }}\n        FormEditor={FormComponent}\n        initialData={sample}\n        initialType={initialEditorType}\n        onChangeEditorType={onChangeEditorType}\n        prune={pruneFunc}\n        YAMLEditor={OperandYAML}\n        lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n      />\n    </StatusBox>\n  );\n};\n\ntype CreateOperandPageRouteParams = RouteParams<'csvName' | 'ns'>;\n\nconst CreateOperandPage: React.FC = () => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const createResourceExtension = useCreateResourceExtension(params.plural);\n  const { csvName, ns } = useParams<CreateOperandPageRouteParams>();\n  const [csv, loaded, loadError] = useClusterServiceVersion(csvName, ns);\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('olm~Create {{item}}', { item: kindForReference(params.plural) })}</title>\n      </Helmet>\n      <ModelStatusBox groupVersionKind={params.plural}>\n        {createResourceExtension ? (\n          <ErrorBoundaryPage>\n            <AsyncComponent\n              loader={createResourceExtension.properties.component}\n              namespace={params.ns}\n            />\n          </ErrorBoundaryPage>\n        ) : (\n          <CreateOperand\n            initialEditorType={EditorType.Form}\n            csv={csv}\n            loaded={loaded}\n            loadError={loadError}\n          />\n        )}\n      </ModelStatusBox>\n    </>\n  );\n};\n\nexport default CreateOperandPage;\n\nexport type CreateOperandProps = {\n  initialEditorType: EditorType;\n  csv: ClusterServiceVersionKind;\n  loaded: boolean;\n  loadError: any;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nimport { k8sPatch, Patch, DeploymentUpdateStrategy, K8sResourceKind } from '../../module/k8s';\nimport { DeploymentModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { withHandlePromise, HandlePromiseProps } from '../utils';\nimport { RadioInput } from '../radio';\n\nexport const getNumberOrPercent = (value) => {\n  if (typeof value === 'undefined') {\n    return null;\n  }\n  if (typeof value === 'string' && value.indexOf('%') > -1) {\n    return value;\n  }\n\n  return _.toInteger(value);\n};\n\nexport const ConfigureUpdateStrategy: React.FC<ConfigureUpdateStrategyProps> = (props) => {\n  const { showDescription = true } = props;\n  const { t } = useTranslation();\n  return (\n    <>\n      {showDescription && (\n        <div className=\"co-m-form-row\">\n          <p>{t('public~How should the pods be replaced when a new revision is created?')}</p>\n        </div>\n      )}\n      <div className=\"row co-m-form-row\">\n        <div className=\"col-sm-12\">\n          <RadioInput\n            name={`${props.uid || 'update-strategy'}-type`}\n            onChange={(e) => {\n              props.onChangeStrategyType(e.target.value);\n            }}\n            value=\"RollingUpdate\"\n            checked={props.strategyType === 'RollingUpdate'}\n            title={t('public~RollingUpdate')}\n            subTitle={t('public~(default)')}\n            autoFocus={props.strategyType === 'RollingUpdate'}\n          >\n            <div className=\"co-m-radio-desc\">\n              <p className=\"text-muted modal-paragraph\">\n                {t(\n                  'public~Execute a smooth roll out of the new revision, based on the settings below',\n                )}\n              </p>\n\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-sm-3\">\n                  <label htmlFor=\"input-max-unavailable\" className=\"control-label co-break-word\">\n                    {t('public~Max unavailable')}\n                  </label>\n                </div>\n                <div className=\"co-m-form-col col-sm-9\">\n                  <div className=\"form-inline\">\n                    <div className=\"pf-v5-c-input-group\">\n                      <input\n                        disabled={props.strategyType !== 'RollingUpdate'}\n                        placeholder=\"25%\"\n                        size={5}\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        id=\"input-max-unavailable\"\n                        value={props.maxUnavailable}\n                        onChange={(e) => props.onChangeMaxUnavailable(e.target.value)}\n                        aria-describedby=\"input-max-unavailable-help\"\n                      />\n                      {props.replicas && (\n                        <span className=\"pf-v5-c-input-group__text\">\n                          <Tooltip content={t('public~Current desired pod count')}>\n                            <span>{t('public~of pod', { count: props.replicas })}</span>\n                          </Tooltip>\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <p className=\"help-block text-muted\" id=\"input-max-unavailable-help\">\n                    {t(\n                      'public~Percentage of total number of pods or the maximum number ' +\n                        'of pods that can be unavailable during the update(optional)',\n                    )}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-sm-3\">\n                  <label htmlFor=\"input-max-surge\" className=\"control-label co-break-word\">\n                    {t('public~Max surge')}\n                  </label>\n                </div>\n                <div className=\"co-m-form-col col-sm-9\">\n                  <div className=\"form-inline\">\n                    <div className=\"pf-v5-c-input-group\">\n                      <input\n                        disabled={props.strategyType !== 'RollingUpdate'}\n                        placeholder=\"25%\"\n                        size={5}\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        id=\"input-max-surge\"\n                        value={props.maxSurge}\n                        onChange={(e) => props.onChangeMaxSurge(e.target.value)}\n                        aria-describedby=\"input-max-surge-help\"\n                      />\n                      <span className=\"pf-v5-c-input-group__text\">\n                        <Tooltip content={t('public~Current desired pod count')}>\n                          <span>{t('public~greater than pod', { count: props.replicas })}</span>\n                        </Tooltip>\n                      </span>\n                    </div>\n                  </div>\n                  <p className=\"help-block text-muted\" id=\"input-max-surge-help\">\n                    {t(\n                      'public~Percentage of total number of pods or the maximum number ' +\n                        'of pods that can be scheduled above the original number of pods(optional)',\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </RadioInput>\n        </div>\n\n        <div className=\"col-sm-12\">\n          <RadioInput\n            name={`${props.uid || 'update-strategy'}-type`}\n            onChange={(e) => {\n              props.onChangeStrategyType(e.target.value);\n            }}\n            value=\"Recreate\"\n            checked={props.strategyType === 'Recreate'}\n            title={t('public~Recreate')}\n            desc={t('public~Shut down all existing pods before creating new ones')}\n            autoFocus={props.strategyType === 'Recreate'}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const ConfigureUpdateStrategyModal = withHandlePromise(\n  (props: ConfigureUpdateStrategyModalProps) => {\n    const [strategyType, setStrategyType] = React.useState(\n      _.get(props.deployment.spec, 'strategy.type'),\n    );\n    const [maxUnavailable, setMaxUnavailable] = React.useState(\n      _.get(props.deployment.spec, 'strategy.rollingUpdate.maxUnavailable', '25%'),\n    );\n    const [maxSurge, setMaxSurge] = React.useState(\n      _.get(props.deployment.spec, 'strategy.rollingUpdate.maxSurge', '25%'),\n    );\n\n    const { t } = useTranslation();\n\n    const submit = (event) => {\n      event.preventDefault();\n\n      const patch: Patch = { path: '/spec/strategy/rollingUpdate', op: 'remove' };\n      if (strategyType === 'RollingUpdate') {\n        patch.value = {\n          maxUnavailable: getNumberOrPercent(maxUnavailable || '25%'),\n          maxSurge: getNumberOrPercent(maxSurge || '25%'),\n        };\n        patch.op = 'add';\n      }\n      const promise = k8sPatch(DeploymentModel, props.deployment, [\n        patch,\n        { path: '/spec/strategy/type', value: strategyType, op: 'replace' },\n      ]);\n      props.handlePromise(promise, props.close);\n    };\n\n    return (\n      <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>{t('public~Edit update strategy')}</ModalTitle>\n        <ModalBody>\n          <ConfigureUpdateStrategy\n            strategyType={strategyType}\n            maxUnavailable={maxUnavailable}\n            maxSurge={maxSurge}\n            onChangeStrategyType={setStrategyType}\n            onChangeMaxUnavailable={setMaxUnavailable}\n            onChangeMaxSurge={setMaxSurge}\n            replicas={props.deployment.spec.replicas}\n          />\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={props.errorMessage}\n          inProgress={props.inProgress}\n          submitText={t('public~Save')}\n          cancel={props.cancel}\n        />\n      </form>\n    );\n  },\n);\n\nexport const configureUpdateStrategyModal = createModalLauncher(ConfigureUpdateStrategyModal);\n\nexport type ConfigureUpdateStrategyProps = {\n  showDescription?: boolean;\n  strategyType: DeploymentUpdateStrategy['type'];\n  maxUnavailable: number | string;\n  maxSurge: number | string;\n  onChangeStrategyType: (strategy: DeploymentUpdateStrategy['type']) => void;\n  onChangeMaxUnavailable: (maxUnavailable: number | string) => void;\n  onChangeMaxSurge: (maxSurge: number | string) => void;\n  replicas?: number;\n  uid?: string;\n};\n\nexport type ConfigureUpdateStrategyModalProps = {\n  deployment: K8sResourceKind;\n  handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n} & HandlePromiseProps;\n\nConfigureUpdateStrategy.displayName = 'ConfigureUpdateStrategy';\n","import * as React from 'react';\nimport { Accordion, ActionGroup, Button, Alert } from '@patternfly/react-core';\nimport Form, { FormProps } from '@rjsf/core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ErrorBoundaryFallbackProps } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\nimport { K8S_UI_SCHEMA } from './const';\nimport defaultFields from './fields';\nimport {\n  FieldTemplate as DefaultFieldTemplate,\n  ObjectFieldTemplate as DefaultObjectFieldTemplate,\n  ArrayFieldTemplate as DefaultArrayFieldTemplate,\n  ErrorTemplate as DefaultErrorTemplate,\n} from './templates';\nimport { getSchemaErrors } from './utils';\nimport defaultWidgets from './widgets';\nimport './styles.scss';\n\nexport const DynamicForm: React.FC<DynamicFormProps> = ({\n  ArrayFieldTemplate = DefaultArrayFieldTemplate,\n  errors = [],\n  ErrorTemplate = DefaultErrorTemplate,\n  fields = {},\n  FieldTemplate = DefaultFieldTemplate,\n  formContext,\n  formData = {},\n  noValidate = false,\n  ObjectFieldTemplate = DefaultObjectFieldTemplate,\n  onChange = _.noop,\n  onError = _.noop,\n  onSubmit = _.noop,\n  onCancel,\n  schema,\n  uiSchema = {},\n  widgets = {},\n  customUISchema,\n  noActions,\n  showAlert = true,\n  ...restProps\n}) => {\n  const { t } = useTranslation();\n  const schemaErrors = getSchemaErrors(schema);\n  // IF the top level schema is unsupported, don't render a form at all.\n  if (schemaErrors.length) {\n    // eslint-disable-next-line no-console\n    console.warn('A form could not be generated for this resource.', schemaErrors);\n    return (\n      <Alert\n        isInline\n        className=\"co-alert co-break-word\"\n        variant=\"info\"\n        title={t(\n          'console-shared~A form is not available for this resource. Please use the YAML view.',\n        )}\n      />\n    );\n  }\n  const FormErrorFallbackComponent: React.FC<ErrorBoundaryFallbackProps> = () => {\n    return (\n      <Alert\n        isInline\n        className=\"co-alert co-break-word\"\n        variant=\"danger\"\n        title={t(\n          'console-shared~There is some issue in this form view. Please select \"YAML view\" for full control.',\n        )}\n      />\n    );\n  };\n\n  return (\n    <>\n      {showAlert && (\n        <Alert\n          isInline\n          className=\"co-alert co-break-word\"\n          variant=\"info\"\n          title={t(\n            'console-shared~Note: Some fields may not be represented in this form view. Please select \"YAML view\" for full control.',\n          )}\n        />\n      )}\n      <Accordion asDefinitionList={false} className=\"co-dynamic-form__accordion\">\n        <ErrorBoundary FallbackComponent={FormErrorFallbackComponent}>\n          <Form\n            {...restProps}\n            className=\"co-dynamic-form\"\n            noValidate={noValidate}\n            ArrayFieldTemplate={ArrayFieldTemplate}\n            fields={{ ...defaultFields, ...fields }}\n            FieldTemplate={FieldTemplate}\n            formContext={{ ...formContext, formData }}\n            formData={formData}\n            noHtml5Validate\n            ObjectFieldTemplate={ObjectFieldTemplate}\n            onChange={(next) => onChange(next.formData)}\n            onError={(newErrors) => onError(_.map(newErrors, (error) => error.stack))}\n            onSubmit={onSubmit}\n            schema={schema}\n            // Don't show the react-jsonschema-form error list at top\n            showErrorList={false}\n            uiSchema={customUISchema ? uiSchema : _.defaultsDeep({}, K8S_UI_SCHEMA, uiSchema)}\n            widgets={{ ...defaultWidgets, ...widgets }}\n          >\n            {errors.length > 0 && <ErrorTemplate errors={errors} />}\n            {!noActions && (\n              <div style={{ paddingBottom: '30px' }}>\n                <ActionGroup className=\"pf-v5-c-form\">\n                  <Button type=\"submit\" variant=\"primary\" data-test=\"create-dynamic-form\">\n                    {t('console-shared~Create')}\n                  </Button>\n                  <Button onClick={onCancel || history.goBack} variant=\"secondary\">\n                    {t('console-shared~Cancel')}\n                  </Button>\n                </ActionGroup>\n              </div>\n            )}\n          </Form>\n        </ErrorBoundary>\n      </Accordion>\n    </>\n  );\n};\n\ntype DynamicFormProps = FormProps<any> & {\n  errors?: string[];\n  ErrorTemplate?: React.FC<{ errors: string[] }>;\n  noActions?: boolean;\n  customUISchema?: boolean;\n  showAlert?: boolean;\n  onCancel?: () => void;\n};\n\nexport * from './types';\nexport * from './const';\n","import * as React from 'react';\nimport { Label, FormAlert, Alert, Tooltip, AlertActionCloseButton } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { YellowExclamationTriangleIcon } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport { DeprecatedOperatorWarning } from '@console/operator-lifecycle-manager/src/types';\nimport { SubscriptionKind } from '../../types';\n\nexport enum DeprecatedOperatorType {\n  PackageDeprecated = 'PackageDeprecated',\n  ChannelDeprecated = 'ChannelDeprecated',\n  VersionDeprecated = 'BundleDeprecated',\n}\nconst findDeprecation = (obj: SubscriptionKind, type: string): DeprecatedOperatorWarning => {\n  return { deprecation: obj?.status?.conditions?.find((f) => f.type === type) };\n};\n\nexport const findDeprecatedOperator = (\n  obj: SubscriptionKind,\n): {\n  deprecatedPackage: DeprecatedOperatorWarning;\n  deprecatedChannel: DeprecatedOperatorWarning;\n  deprecatedVersion: DeprecatedOperatorWarning;\n} => {\n  return {\n    deprecatedPackage: findDeprecation(obj, DeprecatedOperatorType.PackageDeprecated),\n    deprecatedChannel: findDeprecation(obj, DeprecatedOperatorType.ChannelDeprecated),\n    deprecatedVersion: findDeprecation(obj, DeprecatedOperatorType.VersionDeprecated),\n  };\n};\n\nexport const DeprecatedOperatorWarningBadge: React.FC<DeprecatedOperatorWarningBadge> = ({\n  deprecation,\n  className,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip content={t('olm~Deprecated: {{message}}', { message: deprecation?.message })}>\n      <Label\n        data-test=\"deprecated-operator-warning-badge\"\n        color=\"orange\"\n        className={className}\n        icon={<YellowExclamationTriangleIcon />}\n      >\n        {t('olm~Deprecated')}\n      </Label>\n    </Tooltip>\n  );\n};\n\nexport const DeprecatedOperatorWarningIcon: React.FC<DeprecatedOperatorWarningIcon> = ({\n  deprecation,\n  dataTest,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip content={t('olm~Deprecated: {{message}}', { message: deprecation?.message })}>\n      <YellowExclamationTriangleIcon dataTest={dataTest} className=\"pf-v5-u-ml-xs\" />\n    </Tooltip>\n  );\n};\n\nexport const DeprecatedOperatorWarningAlert: React.FC<DeprecatedOperatorWarningProps> = ({\n  deprecatedPackage,\n  deprecatedChannel,\n  deprecatedVersion,\n  dismissible,\n}) => {\n  const { t } = useTranslation();\n  const [alertVisible, setAlertVisible] = React.useState<boolean>(true);\n\n  return (\n    alertVisible && (\n      <FormAlert className=\"pf-v5-u-my-md\">\n        <Alert\n          variant=\"warning\"\n          title={t('olm~Deprecated warnings')}\n          aria-live=\"polite\"\n          isInline\n          actionClose={\n            dismissible && <AlertActionCloseButton onClose={() => setAlertVisible(false)} />\n          }\n        >\n          <div data-test=\"deprecated-operator-warning-package\">\n            {deprecatedPackage?.deprecation?.message}\n          </div>\n          <div data-test=\"deprecated-operator-warning-channel\">\n            {deprecatedChannel?.deprecation?.message}\n          </div>\n          <div data-test=\"deprecated-operator-warning-version\">\n            {deprecatedVersion?.deprecation?.message}\n          </div>\n        </Alert>\n      </FormAlert>\n    )\n  );\n};\n\ntype DeprecatedOperatorWarningBadge = {\n  className?: string;\n} & DeprecatedOperatorWarning;\n\ntype DeprecatedOperatorWarningIcon = {\n  dataTest?: string;\n} & DeprecatedOperatorWarning;\n\ntype DeprecatedOperatorWarningProps = {\n  deprecatedPackage: DeprecatedOperatorWarning;\n  deprecatedChannel: DeprecatedOperatorWarning;\n  deprecatedVersion: DeprecatedOperatorWarning;\n  dismissible?: boolean;\n};\n","import { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport enum DescriptorType {\n  spec = 'spec',\n  status = 'status',\n}\n\nexport enum SpecCapability {\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  endpointList = 'urn:alm:descriptor:com.tectonic.ui:endpointList',\n  label = 'urn:alm:descriptor:com.tectonic.ui:label',\n  resourceRequirements = 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements',\n  selector = 'urn:alm:descriptor:com.tectonic.ui:selector:',\n  namespaceSelector = 'urn:alm:descriptor:com.tectonic.ui:namespaceSelector',\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  booleanSwitch = 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n  checkbox = 'urn:alm:descriptor:com.tectonic.ui:checkbox',\n  imagePullPolicy = 'urn:alm:descriptor:com.tectonic.ui:imagePullPolicy',\n  updateStrategy = 'urn:alm:descriptor:com.tectonic.ui:updateStrategy',\n  text = 'urn:alm:descriptor:com.tectonic.ui:text',\n  number = 'urn:alm:descriptor:com.tectonic.ui:number',\n  nodeAffinity = 'urn:alm:descriptor:com.tectonic.ui:nodeAffinity',\n  podAffinity = 'urn:alm:descriptor:com.tectonic.ui:podAffinity',\n  podAntiAffinity = 'urn:alm:descriptor:com.tectonic.ui:podAntiAffinity',\n  fieldGroup = 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:',\n  arrayFieldGroup = 'urn:alm:descriptor:com.tectonic.ui:arrayFieldGroup:',\n  select = 'urn:alm:descriptor:com.tectonic.ui:select:',\n  advanced = 'urn:alm:descriptor:com.tectonic.ui:advanced',\n  fieldDependency = 'urn:alm:descriptor:com.tectonic.ui:fieldDependency:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n}\n\nexport enum StatusCapability {\n  podStatuses = 'urn:alm:descriptor:com.tectonic.ui:podStatuses',\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  w3Link = 'urn:alm:descriptor:org.w3:link',\n  conditions = 'urn:alm:descriptor:io.kubernetes.conditions',\n  text = 'urn:alm:descriptor:text',\n  prometheusEndpoint = 'urn:alm:descriptor:prometheusEndpoint',\n  k8sPhase = 'urn:alm:descriptor:io.kubernetes.phase',\n  k8sPhaseReason = 'urn:alm:descriptor:io.kubernetes.phase:reason',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n  // Prefix for all kubernetes resource status descriptors.\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n}\n\nexport enum CommonCapability {\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n}\n\nexport type Descriptor<T = any> = {\n  path: string;\n  displayName: string;\n  description: string;\n  'x-descriptors'?: T[];\n  value?: any;\n};\n\nexport type SpecDescriptor = Descriptor<SpecCapability>;\nexport type StatusDescriptor = Descriptor<StatusCapability>;\n\nexport type CapabilityProps<C extends SpecCapability | StatusCapability, V = any> = {\n  capability?: C;\n  className?: string;\n  description?: string;\n  descriptor: Descriptor<C>;\n  fullPath?: string[];\n  label?: string;\n  model?: K8sKind;\n  namespace?: string;\n  obj?: K8sResourceKind;\n  onError?: (error: Error) => void;\n  value: V;\n};\n\nexport type Error = { message: string };\n","import { getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { getSchemaAtPath } from '@console/shared';\nimport {\n  ARRAY_COMPATIBLE_CAPABILITIES,\n  DEPRECATED_CAPABILITIES,\n  OBJECT_COMPATIBLE_CAPABILITIES,\n  PRIMITIVE_COMPATIBLE_CAPABILITIES,\n  REGEXP_ARRAY_PATH,\n  REGEXP_CAPTURE_GROUP_SUBGROUP,\n  REGEXP_NESTED_ARRAY_PATH,\n  COMMON_COMPATIBLE_CAPABILITIES,\n  CAPABILITY_SORT_ORDER,\n} from './const';\nimport { Descriptor, SpecCapability, StatusCapability, CommonCapability } from './types';\n\nexport const useCalculatedDescriptorProperties = (descriptorType, descriptor, schema, obj) => {\n  const propertySchema = getSchemaAtPath(schema, `${descriptorType}.${descriptor.path}`);\n  const fullPath = [descriptorType, ..._.toPath(descriptor.path)];\n  const displayName =\n    descriptor.displayName || propertySchema?.title || _.startCase(_.last(fullPath));\n  const description = descriptor?.description || propertySchema?.description || '';\n  const value = _.get(obj, fullPath, descriptor.value);\n  return {\n    description,\n    displayName,\n    fullPath,\n    propertySchema,\n    value,\n  };\n};\n\n// Creates a structure for rendering grouped descriptors on the operand details page.\nexport const groupDescriptorDetails = (\n  descriptors: Descriptor[],\n): { [group: string]: DescriptorGroup } =>\n  descriptors.reduce((acc, descriptor) => {\n    const handleArrayDescriptor = () => {\n      const [, beforeIndex, afterIndex] = descriptor.path.match(REGEXP_ARRAY_PATH) ?? [];\n      const [, group, subgroup] = beforeIndex?.match(REGEXP_CAPTURE_GROUP_SUBGROUP) ?? [];\n      return subgroup\n        ? {\n            ...acc,\n            [group]: {\n              ...(acc?.[group] ?? {}),\n              nested: {\n                ...(acc?.[group]?.nested ?? {}),\n                [subgroup]: {\n                  ...(acc?.[group]?.nested?.[subgroup] ?? {}),\n                  arrayGroupPath: beforeIndex,\n                  isArrayGroup: true,\n                  ...(afterIndex\n                    ? {\n                        nested: {\n                          ...(acc?.[group]?.nested?.[subgroup]?.nested ?? {}),\n                          [afterIndex]: descriptor,\n                        },\n                      }\n                    : { elementDescriptor: descriptor }),\n                },\n              },\n            },\n          }\n        : {\n            ...acc,\n            [group]: {\n              ...(acc?.[group] ?? {}),\n              arrayGroupPath: beforeIndex,\n              isArrayGroup: true,\n              ...(afterIndex\n                ? {\n                    nested: {\n                      ...(acc?.[group]?.nested ?? {}),\n                      [afterIndex]: descriptor,\n                    },\n                  }\n                : { elementDescriptor: descriptor }),\n            },\n          };\n    };\n\n    // Ignore nested arrays and hidden descriptors.\n    if (\n      REGEXP_NESTED_ARRAY_PATH.test(descriptor.path) ||\n      descriptor?.['x-descriptors']?.includes(CommonCapability.hidden)\n    ) {\n      return acc;\n    }\n\n    if (REGEXP_ARRAY_PATH.test(descriptor.path)) {\n      return handleArrayDescriptor();\n    }\n\n    const [, group, subgroup] = descriptor.path.match(REGEXP_CAPTURE_GROUP_SUBGROUP) ?? [];\n    return group\n      ? {\n          ...acc,\n          [group]: {\n            ...(acc?.[group] ?? {}),\n            ...(subgroup\n              ? {\n                  nested: {\n                    ...(acc?.[group]?.nested ?? {}),\n                    [subgroup]: {\n                      ...(acc?.[group]?.nested?.[subgroup] ?? {}),\n                      descriptor,\n                    },\n                  },\n                }\n              : { descriptor }),\n          },\n        }\n      : acc;\n  }, {});\n\n// Replace '.', '[', and '].' with '/'.\nexport const getPatchPathFromDescriptor = (descriptor: Descriptor): string =>\n  _.toPath(descriptor.path).join('/');\n\n// Given a type, return a static list of x-descriptors that are compatible\nconst getCompatibleCapabilities = (type: string): (StatusCapability | SpecCapability)[] => {\n  switch (type) {\n    case 'object':\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...OBJECT_COMPATIBLE_CAPABILITIES];\n    case 'array':\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...ARRAY_COMPATIBLE_CAPABILITIES];\n    default:\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...PRIMITIVE_COMPATIBLE_CAPABILITIES];\n  }\n};\n\n// Given type and descriptor, return a list of non-deprecated x-descriptors compatible with type.\n// Deprecated and incompatible x-descriptors are logged as warnings in console. If\n// 'allowDeprecated' is true, deprecated x-descriptors are logged but still returned as valid.\nexport function getValidCapabilitiesForDataType<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  type: string,\n): CapabilityType[] {\n  const compatibleCapabilities = getCompatibleCapabilities(type);\n  return (descriptor?.['x-descriptors'] ?? [])\n    .filter((capability) => {\n      const isCompatible =\n        type === 'any' ||\n        compatibleCapabilities.some((compatibleCapability) =>\n          capability.startsWith(compatibleCapability),\n        );\n      const isDeprecated = DEPRECATED_CAPABILITIES.some((deprecatedCapability) =>\n        capability.startsWith(deprecatedCapability),\n      );\n\n      if (isDeprecated) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Deprecated x-descriptor] \"${capability}\" is deprecated and support will be removed in a future release.`,\n          descriptor,\n        );\n      }\n\n      if (!isCompatible) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Invalid x-descriptor] \"${capability}\" is incompatible with ${type} values and will have no effect`,\n          descriptor,\n        );\n        return false;\n      }\n\n      return true;\n    })\n    .sort((a, b) => {\n      const aIndex = CAPABILITY_SORT_ORDER.findIndex((capability) => a.startsWith(capability));\n      const bIndex = CAPABILITY_SORT_ORDER.findIndex((capability) => b.startsWith(capability));\n      // If either a or b don't exist in the sorting array, sort the missing item last\n      if (aIndex < 0 || bIndex < 0) {\n        return bIndex - aIndex;\n      }\n      return aIndex - bIndex;\n    });\n}\n\nconst getValueType = (value: any): string => {\n  // Consider nil values 'any' since every descriptor should render empty state in this case\n  if (_.isNil(value)) {\n    return 'any';\n  }\n\n  // Array check must come before object check because _.isObject will return true on array values\n  return _.isArray(value) ? 'array' : _.isObject(value) ? 'object' : 'primitive';\n};\n\nexport function getValidCapabilitiesForValue<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  value: any,\n): CapabilityType[] {\n  const type = getValueType(value);\n  return getValidCapabilitiesForDataType<CapabilityType>(descriptor, type);\n}\n\nexport function getValidCapabilitiesForSchema<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  schema: JSONSchema7,\n): CapabilityType[] {\n  const type = getSchemaType(schema);\n  return getValidCapabilitiesForDataType<CapabilityType>(descriptor, type);\n}\n\nexport const isMainStatusDescriptor = (descriptor: Descriptor): boolean =>\n  descriptor.path === 'status' || descriptor.displayName === 'Status';\n\nexport type DescriptorGroup = {\n  arrayGroupPath?: string; // Path to the array that this descriptor group represents\n  descriptor?: Descriptor; // Descriptor for the root level group.\n  elementDescriptor?: Descriptor; // For array groups, the descriptor that applies to each array element\n  isArrayGroup?: boolean; // True if this group describes an array property\n  // Descriptor groups which are encompassed by this group\n  nested?: {\n    [key: string]: DescriptorGroup;\n  };\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DeprecatedOperatorWarning } from '@console/operator-lifecycle-manager/src/types';\nimport operatorLogo from '../operator.svg';\nimport { ClusterServiceVersionIcon } from '../types';\nimport { DeprecatedOperatorWarningBadge } from './deprecated-operator-warnings/deprecated-operator-warnings';\n\nexport const ClusterServiceVersionLogo: React.FC<ClusterServiceVersionLogoProps> = (props) => {\n  const { icon, displayName, provider, version, deprecation } = props;\n  const { t } = useTranslation();\n\n  const imgSrc: string = _.isString(icon)\n    ? icon\n    : _.isEmpty(icon)\n    ? operatorLogo\n    : `data:${icon.mediatype};base64,${icon.base64data}`;\n\n  return (\n    <div className=\"co-clusterserviceversion-logo\">\n      <div className=\"co-clusterserviceversion-logo__icon\">\n        <span className=\"co-catalog-item-icon__bg\">\n          <img\n            className=\"co-catalog-item-icon__img co-catalog-item-icon__img--large\"\n            src={imgSrc}\n            alt={displayName}\n            aria-hidden\n          />\n        </span>\n      </div>\n      <div className=\"co-clusterserviceversion-logo__name\">\n        <h1 className=\"co-clusterserviceversion-logo__name__clusterserviceversion\">\n          {displayName}{' '}\n          {deprecation && (\n            <DeprecatedOperatorWarningBadge className=\"pf-v5-u-ml-sm\" deprecation={deprecation} />\n          )}\n        </h1>\n        {provider && (\n          <span className=\"co-clusterserviceversion-logo__name__provider text-muted\">\n            {t('olm~{{version}} provided by {{provider}}', {\n              version: version || '',\n              provider: _.get(provider, 'name', provider),\n            })}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\nexport type ClusterServiceVersionLogoProps = {\n  displayName: string;\n  icon: ClusterServiceVersionIcon | string;\n  provider?: { name: string } | string;\n  version?: string;\n} & DeprecatedOperatorWarning;\n","export const K8S_UI_SCHEMA = {\n  apiVersion: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  kind: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  spec: {\n    'ui:options': {\n      label: false,\n    },\n  },\n  status: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  'ui:order': ['metadata', 'spec', '*'],\n};\n\nexport const JSON_SCHEMA_GROUP_TYPES: string[] = ['object', 'array'];\nexport const JSON_SCHEMA_NUMBER_TYPES: string[] = ['number', 'integer'];\n\nexport const THOUSAND = 10 ** 3;\nexport const MILLION = 10 ** 6;\nexport const BILLION = 10 ** 9;\n","import { UiSchema } from '@rjsf/core';\nimport { getSchemaType, getUiOptions } from '@rjsf/core/dist/cjs/utils';\nimport * as Immutable from 'immutable';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { THOUSAND, MILLION, BILLION } from './const';\nimport { DynamicFormSchemaError, JSONSchemaType } from './types';\n\nconst UNSUPPORTED_SCHEMA_PROPERTIES = ['allOf', 'anyOf', 'oneOf'];\n\n// Transform a path string to a JSON schema path array\nexport const stringPathToUISchemaPath = (path: string): string[] =>\n  (_.toPath(path) ?? []).map((subPath) => {\n    return /^\\d+$/.test(subPath) ? 'items' : subPath;\n  });\n\nexport const useSchemaLabel = (schema: JSONSchema7, uiSchema: UiSchema, defaultLabel?: string) => {\n  const options = getUiOptions(uiSchema ?? {});\n  const showLabel = options?.label ?? true;\n  const label = (options?.title || schema?.title) as string;\n  return [showLabel, label || defaultLabel] as [boolean, string];\n};\n\nexport const useSchemaDescription = (\n  schema: JSONSchema7,\n  uiSchema: UiSchema,\n  defaultDescription?: string,\n) =>\n  (getUiOptions(uiSchema ?? {})?.description ||\n    schema?.description ||\n    defaultDescription) as string;\n\nexport const getSchemaErrors = (schema: JSONSchema7): DynamicFormSchemaError[] => {\n  return [\n    ...(_.isEmpty(schema)\n      ? [\n          {\n            title: 'Empty Schema',\n            message: 'Schema is empty.',\n          },\n        ]\n      : []),\n    ..._.map(\n      _.intersection(_.keys(schema), UNSUPPORTED_SCHEMA_PROPERTIES),\n      (unsupportedProperty) => ({\n        title: 'Unsupported Property',\n        message: `Cannot generate form fields for JSON schema with ${unsupportedProperty} property.`,\n      }),\n    ),\n  ];\n};\n\n// Determine if a schema will produce no form fields.\nexport const hasNoFields = (jsonSchema: JSONSchema7 = {}, uiSchema: UiSchema = {}): boolean => {\n  // If schema is empty or has unsupported properties, it will not render any fields on the form\n  if (getSchemaErrors(jsonSchema).length > 0) {\n    return true;\n  }\n\n  const type = getSchemaType(jsonSchema) ?? '';\n  const noUIFieldOrWidget = !uiSchema?.['ui:field'] && !uiSchema?.['ui:widget'];\n  switch (type) {\n    case JSONSchemaType.array:\n      return noUIFieldOrWidget && hasNoFields(jsonSchema.items as JSONSchema7, uiSchema?.items);\n    case JSONSchemaType.object:\n      return (\n        noUIFieldOrWidget &&\n        _.every(jsonSchema?.properties, (property, propertyName) =>\n          hasNoFields(property as JSONSchema7, uiSchema?.[propertyName]),\n        )\n      );\n    case JSONSchemaType.boolean:\n    case JSONSchemaType.integer:\n    case JSONSchemaType.number:\n    case JSONSchemaType.string:\n      return false;\n    default:\n      return noUIFieldOrWidget;\n  }\n};\n\n// Recursively find the minimum ui:sortOrder property found within this uiSchema or it's children.\nconst getUISortOrder = (uiSchema: UiSchema, fallback: number): number => {\n  return Number(\n    uiSchema?.['ui:sortOrder'] ??\n      _.min(\n        _.keys(uiSchema).map((key) => {\n          return !key.includes(':') && _.isObject(uiSchema?.[key])\n            ? getUISortOrder(uiSchema?.[key], fallback)\n            : fallback;\n        }),\n      ) ??\n      fallback,\n  );\n};\n\n// Return an array of dependency control field names that exist within uiSchema at the specified\n// path.\nconst getControlFieldsAtPath = (uiSchema: UiSchema, path: string[]): string[] => {\n  if (!_.isObject(uiSchema)) {\n    return [];\n  }\n  const { 'ui:dependency': dependency } = uiSchema;\n  const dependencyMatchesPath =\n    dependency && _.isEqual(dependency.controlFieldPath.slice(0, -1), path ?? []);\n  return [\n    ...(dependencyMatchesPath ? [dependency.controlFieldName] : []),\n    ..._.flatMap(uiSchema, (childUISchema) => getControlFieldsAtPath(childUISchema, path)),\n  ];\n};\n\n/**\n * Give a property name a sort wieght based on whether it has ui schema, is required, or is a\n * control field for a property with a field dependency. A lower weight means higher sort order.\n * Fields are weighted according to the following tiers:\n *  Tier 1 (negative 10^9 - 10^6 magnitude):  Required fields with ui schema\n *  Tier 2 (negative 10^9 magnitude):         Required fields without ui schema\n *  Tier 3 (negative 10^6 magnitude):         Optional fields with ui schema\n *  Tier 4 (positive 10^3 maginitude):        Control fields that don't fit any above\n *  Tier 5 (Infinity):                        All other fields\n *\n * Within each of the above tiers, fields are further weighted based on field dependency and ui\n * schema defined sort order:\n *   - Fields without dependency: base weight + ui schema sort order\n *   - Control field:             base weight + ui schema sort order * 1000\n *   - Dependent field:           control field weight + ui schema sort order\n *\n * These weight numbers are arbitrary, but spaced far enough apart to prevent collisions.\n */\nconst getJSONSchemaPropertySortWeight = (\n  property: string,\n  jsonSchema: JSONSchema7,\n  uiSchema: UiSchema,\n  currentPath?: string[],\n): number => {\n  const isRequired = (jsonSchema?.required ?? []).includes(property);\n  const propertyUISchema = uiSchema?.[property];\n\n  // All control fields that exist within uiSchema and match this path\n  const controlFields = getControlFieldsAtPath(propertyUISchema, currentPath);\n\n  // Any sibling has a dependency with this as the control field.\n  const isControlField = _.some(uiSchema, ({ 'ui:dependency': siblingDependency }) =>\n    _.isEqual(siblingDependency?.controlFieldPath, [...(currentPath ?? []), property]),\n  );\n\n  // Minimum'ui:sortOrder' for this property and it's children. Use propertyNames.length as a fallback,\n  // which ensures that properties without a \"ui:sortOrder\" have highest weight.\n  const uiSortOrder = getUISortOrder(propertyUISchema, _.keys(jsonSchema?.properties).length);\n\n  // A small offset that is added to the base weight so that control fields get sorted\n  // below other fields in the same 'tier', and allows for depenendt fields to be sorted\n  // directly after their control field.\n  const controlFieldOffset = isControlField ? uiSortOrder * THOUSAND : 0;\n\n  // Total offset to be added to base tier\n  const offset = controlFieldOffset + uiSortOrder;\n\n  // If this property or it's children have a control field at the current path, it's weight is\n  // based on the highest weight control field.\n  if (controlFields?.length) {\n    return (\n      Math.max(\n        ...controlFields.map((controlField) =>\n          getJSONSchemaPropertySortWeight(controlField, jsonSchema, uiSchema, currentPath),\n        ),\n      ) + offset\n    );\n  }\n\n  // Tier 1 = -1001000000 (negative one billion one million) + offset\n  // Tier 2 = -1000000000 (negagive one billion) + offset\n  // Tier 3 = -1000000 (negative one million) + offset\n  // Tier 4 = 0 + offset\n  // Tier 5 = Infinity\n  return (\n    // Doesn't meet any sorting criteria, set to infinity\n    (!isRequired && !propertyUISchema && !controlFieldOffset ? Infinity : 0) -\n    (isRequired ? BILLION : 0) -\n    (propertyUISchema ? MILLION : 0) +\n    offset\n  );\n};\n\n// Given a JSONSchema and associated uiSchema, create the appropriate ui schema order property.\n// Orders properties according to the following rules:\n//  - required properties with an associated ui schema come first,\n//  - required properties without an associated ui schema next,\n//  - optional fields with an associated ui schema next,\n//  - field dependency properties (control then dependent)\n//  - all other properties\nexport const getJSONSchemaOrder = (\n  jsonSchema: JSONSchema7,\n  uiSchema: UiSchema,\n  currentPath?: string[],\n) => {\n  const type = getSchemaType(jsonSchema ?? {});\n  const handleArray = () => {\n    const descendantOrder = getJSONSchemaOrder(jsonSchema?.items as JSONSchema7, uiSchema?.items, [\n      ...(currentPath ?? []),\n      'items',\n    ]);\n    return !_.isEmpty(descendantOrder) ? { items: descendantOrder } : {};\n  };\n\n  const handleObject = () => {\n    const propertyNames = _.keys(jsonSchema?.properties ?? {});\n    if (_.isEmpty(propertyNames)) {\n      return {};\n    }\n\n    const uiOrder = Immutable.Set(propertyNames)\n      .sortBy((property) =>\n        getJSONSchemaPropertySortWeight(property, jsonSchema, uiSchema, currentPath ?? []),\n      )\n      .toJS();\n\n    return {\n      ...(uiOrder.length > 1 && { 'ui:order': uiOrder }),\n      ..._.reduce(\n        jsonSchema?.properties ?? {},\n        (orderAccumulator, propertySchema, propertyName) => {\n          const descendantOrder = getJSONSchemaOrder(\n            propertySchema as JSONSchema7,\n            uiSchema?.[propertyName],\n            [...(currentPath ?? []), propertyName],\n          );\n          if (_.isEmpty(descendantOrder)) {\n            return orderAccumulator;\n          }\n          return {\n            ...orderAccumulator,\n            [propertyName]: descendantOrder,\n          };\n        },\n        {},\n      ),\n    };\n  };\n\n  switch (type) {\n    case JSONSchemaType.array:\n      return handleArray();\n    case JSONSchemaType.object:\n      return handleObject();\n    default:\n      return {};\n  }\n};\n\n// Returns true if a value is not nil and is empty\nconst definedAndEmpty = (value) => !_.isNil(value) && _.isEmpty(value);\n\n// Helper function for prune\n// TODO (jon) Make this pure\nconst pruneRecursive = (current: any, sample: any): any => {\n  const valueIsEmpty = (value, key) =>\n    _.isNil(value) ||\n    _.isNaN(value) ||\n    (_.isString(value) && _.isEmpty(value)) ||\n    (_.isObject(value) && _.isEmpty(pruneRecursive(value, sample?.[key])));\n\n  // Value should be pruned if it is empty and the correspondeing sample is not explicitly\n  // defined as an empty value.\n  const shouldPrune = (value, key) => valueIsEmpty(value, key) && !definedAndEmpty(sample?.[key]);\n\n  // Prune each property of current value that meets the pruning criteria\n  _.forOwn(current, (value, key) => {\n    if (shouldPrune(value, key)) {\n      delete current[key];\n    }\n  });\n\n  // remove any leftover undefined values from the delete operation on an array\n  if (_.isArray(current)) {\n    _.pull(current, undefined);\n  }\n\n  return current;\n};\n\n// Deeply remove all empty, NaN, null, or undefined values from an object or array. If a value meets\n// the above criteria, but the corresponding sample is explicitly defined as an empty vaolue, it\n// will not be pruned.\n// Based on https://stackoverflow.com/a/26202058/8895304\nexport const prune = (obj: any, sample?: any): any => {\n  return pruneRecursive(_.cloneDeep(obj), sample);\n};\n","module.exports = __webpack_public_path__ + \"assets/packages/operator-lifecycle-manager/src/operator.svg\";","import * as _ from 'lodash';\nimport { SpecCapability, StatusCapability } from './types';\n\nexport const REGEXP_K8S_RESOURCE_CAPABILITY = _.escapeRegExp(SpecCapability.k8sResourcePrefix);\nexport const REGEXP_FIELD_DEPENDENCY_CAPABILITY = _.escapeRegExp(SpecCapability.fieldDependency);\nexport const REGEXP_SELECT_CAPABILITY = _.escapeRegExp(SpecCapability.select);\n\nexport const REGEXP_K8S_RESOURCE_SUFFIX = new RegExp(\n  `^${REGEXP_K8S_RESOURCE_CAPABILITY}(?:core[:~]v1[:~])?([^?]*)[?]?(.*)$`,\n);\nexport const REGEXP_SELECT_OPTION = new RegExp(`${REGEXP_SELECT_CAPABILITY}(.*)$`);\nexport const REGEXP_FIELD_DEPENDENCY_PATH_VALUE = new RegExp(\n  `^${REGEXP_FIELD_DEPENDENCY_CAPABILITY}([^:]*):(.*)$`,\n);\n\n// Matches a path string containing an array reference. Captures\n// the segment before the array reference, and the segment after.\n// For example:\n//    path[0].element.property -> [path, element.property]\nexport const REGEXP_ARRAY_PATH = /^(.*)\\[\\d+\\]\\.?(.*)$/;\n\n// Matches a path string with multiple array references.\n// e.g.:  nested[0].array[0].property\nexport const REGEXP_NESTED_ARRAY_PATH = /^.*\\[\\d+\\]\\.?.*\\[\\d+\\]\\.?.*$/;\n\n//  Captures the root segment of a path string, and all desscendent segments as\n// a single string.\n// For example:\n//    'this.is.a.really.long.path' -> ['this', 'is.a.really.long.path'])\n//    'this'  -> ['this']\nexport const REGEXP_CAPTURE_GROUP_SUBGROUP = /^([^.]*)\\.?(.*)$/;\n\nexport const DEPRECATED_CAPABILITIES: SpecCapability[] = [\n  SpecCapability.arrayFieldGroup,\n  SpecCapability.fieldGroup,\n  SpecCapability.namespaceSelector,\n  SpecCapability.label,\n];\n\nexport const COMMON_COMPATIBLE_CAPABILITIES: SpecCapability[] = [\n  SpecCapability.advanced,\n  SpecCapability.fieldDependency,\n  SpecCapability.hidden,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.arrayFieldGroup,\n  SpecCapability.fieldGroup,\n  // END TODO\n];\n\nexport const OBJECT_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  StatusCapability.podStatuses,\n  SpecCapability.updateStrategy,\n  SpecCapability.nodeAffinity,\n  SpecCapability.podAffinity,\n  SpecCapability.podAntiAffinity,\n  SpecCapability.resourceRequirements,\n  SpecCapability.selector,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.label,\n  SpecCapability.namespaceSelector,\n  // END TODO\n];\n\nexport const ARRAY_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  SpecCapability.endpointList,\n  StatusCapability.conditions,\n];\n\nexport const PRIMITIVE_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  StatusCapability.k8sPhase,\n  StatusCapability.k8sPhaseReason,\n  SpecCapability.k8sResourcePrefix,\n  SpecCapability.imagePullPolicy,\n  SpecCapability.podCount,\n  SpecCapability.select,\n  StatusCapability.w3Link,\n  SpecCapability.booleanSwitch,\n  SpecCapability.checkbox,\n  SpecCapability.password,\n  SpecCapability.text,\n  StatusCapability.text,\n  SpecCapability.number,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.label,\n  // END TODO\n];\n\nexport const CAPABILITY_SORT_ORDER: (SpecCapability | StatusCapability)[] = [\n  // Supported in details view and has a widget\n  SpecCapability.hidden,\n  SpecCapability.endpointList,\n  StatusCapability.conditions,\n  SpecCapability.resourceRequirements,\n  SpecCapability.updateStrategy,\n  StatusCapability.podStatuses,\n  SpecCapability.selector,\n  SpecCapability.k8sResourcePrefix,\n  SpecCapability.podCount,\n  SpecCapability.password,\n  StatusCapability.k8sPhaseReason,\n  SpecCapability.booleanSwitch,\n  SpecCapability.checkbox,\n  StatusCapability.w3Link,\n\n  // Supported in details view with no widget\n  SpecCapability.select,\n  SpecCapability.imagePullPolicy,\n  StatusCapability.k8sPhase,\n  SpecCapability.text,\n  StatusCapability.text,\n  SpecCapability.number,\n\n  // Unsupported on details view\n  SpecCapability.podAntiAffinity,\n  SpecCapability.podAffinity,\n  SpecCapability.nodeAffinity,\n\n  // Always last\n  SpecCapability.advanced,\n  SpecCapability.fieldDependency,\n  ...DEPRECATED_CAPABILITIES,\n];\n","export enum JSONSchemaType {\n  string = 'string',\n  number = 'number',\n  integer = 'integer',\n  boolean = 'boolean',\n  null = 'null',\n  array = 'array',\n  object = 'object',\n}\n\nexport type DynamicFormFieldOptionsList = {\n  label: string;\n  value: string;\n}[];\n\nexport type DynamicFormFieldDependency = {\n  controlFieldPath: string;\n  controlFieldValue: string;\n  controlFieldName: string;\n};\n\nexport type UiSchemaOptionsWithDependency = {\n  dependency?: DynamicFormFieldDependency;\n};\n\nexport type DynamicFormSchemaError = {\n  title: string;\n  message: string;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise } from '@console/internal/components/utils';\nimport { k8sUpdate, referenceFor, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\n\nexport const ResourceRequirements: React.FC<ResourceRequirementsProps> = (props) => {\n  const { t } = useTranslation();\n  const { cpu, memory, storage, onChangeCPU, onChangeMemory, onChangeStorage, path = '' } = props;\n\n  return (\n    <div className=\"row co-m-form-row\">\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.cpu`}\n        >\n          {t('olm~CPU cores')}\n        </label>\n        <input\n          value={cpu}\n          onChange={(e) => onChangeCPU(e.target.value)}\n          id={`${path}.cpu`}\n          name=\"cpu\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"500m\"\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.memory`}\n        >\n          {t('olm~Memory')}\n        </label>\n        <input\n          value={memory}\n          onChange={(e) => onChangeMemory(e.target.value)}\n          id={`${path}.memory`}\n          name=\"memory\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"50Mi\"\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.ephemeral-storage`}\n        >\n          {t('olm~Storage')}\n        </label>\n        <input\n          value={storage}\n          onChange={(e) => onChangeStorage(e.target.value)}\n          id={`${path}.ephemeral-storage`}\n          name=\"ephemeral-storage\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"50Mi\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const ResourceRequirementsModal = withHandlePromise(\n  (props: ResourceRequirementsModalProps) => {\n    const { t } = useTranslation();\n    const { obj, path, type, model, close, handlePromise } = props;\n    const [cpu, setCPU] = React.useState<string>(_.get(obj.spec, `${path}.${type}.cpu`, ''));\n    const [memory, setMemory] = React.useState<string>(\n      _.get(obj.spec, `${path}.${type}.memory`, ''),\n    );\n    const [storage, setStorage] = React.useState<string>(\n      _.get(obj.spec, `${path}.${type}.ephemeral-storage`, ''),\n    );\n\n    const submit = (e) => {\n      e.preventDefault();\n      const newObj = _.set(_.cloneDeep(obj), `spec.${path}.${type}`, {\n        ...(cpu && { cpu }),\n        ...(memory && { memory }),\n        ...(storage && { 'ephemeral-storage': storage }),\n      });\n      return handlePromise(k8sUpdate(model, newObj), close);\n    };\n\n    return (\n      <form onSubmit={(e) => submit(e)} className=\"modal-content\">\n        <ModalTitle>{props.title}</ModalTitle>\n        <ModalBody>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">{props.description}</div>\n          </div>\n          <ResourceRequirements\n            cpu={cpu}\n            memory={memory}\n            storage={storage}\n            onChangeCPU={setCPU}\n            onChangeMemory={setMemory}\n            onChangeStorage={setStorage}\n            path={path}\n          />\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={props.errorMessage}\n          inProgress={props.inProgress}\n          submitText={t('public~Save')}\n          cancel={props.cancel}\n        />\n      </form>\n    );\n  },\n);\n\nconst stateToProps = ({ k8s }: RootState, { obj }) => ({\n  model: k8s.getIn(['RESOURCES', 'models', referenceFor(obj)]) as K8sKind,\n});\n\nexport const ResourceRequirementsModalLink = connect(stateToProps)(\n  (props: ResourceRequirementsModalLinkProps) => {\n    const { obj, type, path, model } = props;\n    const { t } = useTranslation();\n    const none = t('public~None');\n    const { cpu, memory, 'ephemeral-storage': storage } = _.get(obj.spec, `${path}.${type}`, {});\n\n    const onClick = () => {\n      const modal = createModalLauncher(ResourceRequirementsModal);\n      const description = t('olm~Define the resource {{type}} for this {{kind}} instance.', {\n        type,\n        kind: obj.kind,\n      });\n      const title = t('olm~{{kind}} Resource {{type}}', {\n        kind: obj.kind,\n        type: _.capitalize(type),\n      });\n\n      return modal({ title, description, obj, model, type, path });\n    };\n\n    return (\n      <Button\n        type=\"button\"\n        isInline\n        data-test-id=\"configure-modal-btn\"\n        onClick={onClick}\n        variant=\"link\"\n      >\n        {t('olm~CPU: {{cpu}}, Memory: {{memory}}, Storage: {{storage}}', {\n          cpu: cpu || none,\n          memory: memory || none,\n          storage: storage || none,\n        })}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  },\n);\n\nexport type ResourceRequirementsModalProps = {\n  title: string;\n  description: string;\n  obj: K8sResourceKind;\n  model: K8sKind;\n  type: 'requests' | 'limits';\n  path: string;\n  handlePromise: <T>(\n    promise: Promise<T>,\n    onFulfill?: (res) => void,\n    onError?: (errorMsg: string) => void,\n  ) => void;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n};\n\nexport type ResourceRequirementsProps = {\n  cpu: string;\n  memory: string;\n  storage: string;\n  onChangeCPU: (value: string) => void;\n  onChangeMemory: (value: string) => void;\n  onChangeStorage: (value: string) => void;\n  path?: string;\n};\n\nexport type ResourceRequirementsModalLinkProps = {\n  obj: K8sResourceKind;\n  model: K8sKind;\n  type: 'requests' | 'limits';\n  path: string;\n};\n\nResourceRequirements.displayName = 'ResourceRequirements';\nResourceRequirementsModalLink.displayName = 'ResourceRequirementsModalLink';\nResourceRequirementsModal.displayName = 'ResourceRequirementsModal';\n","import { K8sResourceKind, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { OLMAnnotation } from '../components/operator-hub';\nimport { NON_STANDALONE_ANNOTATION_VALUE } from '../const';\nimport { ClusterServiceVersionModel } from '../models';\nimport { ClusterServiceVersionPhase } from '../types';\n\nexport const isCSV = (obj: K8sResourceKind): boolean =>\n  Boolean(obj) && referenceFor(obj) === referenceForModel(ClusterServiceVersionModel);\n\nexport const isCopiedCSV = (obj: K8sResourceKind): boolean =>\n  isCSV(obj) &&\n  (obj.status?.reason === 'Copied' || Boolean(obj.metadata?.labels?.['olm.copiedFrom']));\n\nexport const isStandaloneCSV = (obj: K8sResourceKind): boolean =>\n  isCSV(obj) &&\n  (obj.metadata.annotations?.[OLMAnnotation.OperatorType] !== NON_STANDALONE_ANNOTATION_VALUE ||\n    obj.status?.phase === ClusterServiceVersionPhase.CSVPhaseFailed);\n","import * as React from 'react';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { GLOBAL_COPIED_CSV_NAMESPACE } from '../const';\nimport { ClusterServiceVersionModel } from '../models';\nimport { ClusterServiceVersionKind } from '../types';\nimport { isCopiedCSV } from './clusterserviceversions';\n\nconst groupVersionKind = {\n  group: ClusterServiceVersionModel.apiGroup,\n  version: ClusterServiceVersionModel.apiVersion,\n  kind: ClusterServiceVersionModel.kind,\n};\n\nconst { copiedCSVsDisabled } = window.SERVER_FLAGS;\n\nexport const useClusterServiceVersion = (\n  name: string,\n  namespace: string,\n): [ClusterServiceVersionKind, boolean, any] => {\n  const [namespacedCSV, namespacedCSVLoaded, namespacedCSVLoadError] = useK8sWatchResource<\n    ClusterServiceVersionKind\n  >({\n    groupVersionKind,\n    name,\n    namespace,\n    optional: copiedCSVsDisabled,\n  });\n  const [globalCSV, globalCSVLoaded, globalCSVLoadError] = useK8sWatchResource<\n    ClusterServiceVersionKind\n  >(\n    copiedCSVsDisabled\n      ? {\n          groupVersionKind,\n          name,\n          namespace: GLOBAL_COPIED_CSV_NAMESPACE,\n          optional: copiedCSVsDisabled,\n        }\n      : null,\n  );\n\n  return React.useMemo(() => {\n    if (copiedCSVsDisabled && Boolean(namespacedCSVLoadError)) {\n      return [isCopiedCSV(globalCSV) ? globalCSV : null, globalCSVLoaded, globalCSVLoadError];\n    }\n    return [namespacedCSV, namespacedCSVLoaded, namespacedCSVLoadError];\n  }, [\n    globalCSV,\n    globalCSVLoadError,\n    globalCSVLoaded,\n    namespacedCSV,\n    namespacedCSVLoadError,\n    namespacedCSVLoaded,\n  ]);\n};\n","import * as React from 'react';\nimport { AccordionContent, AccordionItem, AccordionToggle } from '@patternfly/react-core';\nimport { FieldProps, UiSchema } from '@rjsf/core';\nimport SchemaField, { SchemaFieldProps } from '@rjsf/core/dist/cjs/components/fields/SchemaField';\nimport { retrieveSchema, getUiOptions } from '@rjsf/core/dist/cjs/utils';\nimport * as classnames from 'classnames';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ConfigureUpdateStrategy } from '@console/internal/components/modals/configure-update-strategy-modal';\nimport { LinkifyExternal, SelectorInput, Dropdown } from '@console/internal/components/utils';\nimport {\n  NodeAffinity,\n  PodAffinity,\n} from '@console/operator-lifecycle-manager/src/components/descriptors/spec/affinity';\nimport { MatchExpressions } from '@console/operator-lifecycle-manager/src/components/descriptors/spec/match-expressions';\nimport { ResourceRequirements } from '@console/operator-lifecycle-manager/src/components/descriptors/spec/resource-requirements';\nimport { hasNoFields, useSchemaDescription, useSchemaLabel } from './utils';\n\nconst Description = ({ id, description }) =>\n  description ? (\n    <span id={id} className=\"help-block\">\n      <LinkifyExternal>\n        <div className=\"co-pre-line\">{description}</div>\n      </LinkifyExternal>\n    </span>\n  ) : null;\n\nexport const DescriptionField: React.FC<FieldProps> = ({ id, description }) => (\n  <Description id={id} description={description} />\n);\n\nexport const FormField: React.FC<FormFieldProps> = ({\n  children,\n  id,\n  defaultLabel,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const [showLabel, label] = useSchemaLabel(\n    schema,\n    uiSchema,\n    defaultLabel || t('console-shared~Value'),\n  );\n  return (\n    <div id={`${id}_field`} className=\"form-group\">\n      {showLabel && label && (\n        <label className={classnames('form-label', { 'co-required': required })} htmlFor={id}>\n          {label}\n        </label>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport const FieldSet: React.FC<FieldSetProps> = ({\n  children,\n  defaultLabel,\n  idSchema,\n  required = false,\n  schema,\n  uiSchema,\n}) => {\n  const [expanded, setExpanded] = React.useState(false);\n  const [showLabel, label] = useSchemaLabel(schema, uiSchema, defaultLabel);\n  const description = useSchemaDescription(schema, uiSchema);\n  const onToggle = (e) => {\n    e.preventDefault();\n    setExpanded((current) => !current);\n  };\n  return showLabel && label ? (\n    <div id={`${idSchema.$id}_field-group`} className=\"form-group co-dynamic-form__field-group\">\n      <AccordionItem>\n        <AccordionToggle\n          id={`${idSchema.$id}_accordion-toggle`}\n          onClick={onToggle}\n          isExpanded={expanded}\n        >\n          <label\n            className={classnames({ 'co-required': required })}\n            htmlFor={`${idSchema.$id}_accordion-content`}\n          >\n            {label}\n          </label>\n        </AccordionToggle>\n        {description && (\n          <Description id={`${idSchema.$id}_description`} description={description} />\n        )}\n        <AccordionContent id={`${idSchema.$id}_accordion-content`} isHidden={!expanded}>\n          {children}\n        </AccordionContent>\n      </AccordionItem>\n    </div>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport const ResourceRequirementsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Resource requirements')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <dl id={idSchema.$id}>\n        <dt>{t('console-shared~Limits')}</dt>\n        <dd>\n          <ResourceRequirements\n            cpu={formData?.limits?.cpu || ''}\n            memory={formData?.limits?.memory || ''}\n            storage={formData?.limits?.['ephemeral-storage'] || ''}\n            onChangeCPU={(cpu) => onChange(_.set(_.cloneDeep(formData), 'limits.cpu', cpu))}\n            onChangeMemory={(mem) => onChange(_.set(_.cloneDeep(formData), 'limits.memory', mem))}\n            onChangeStorage={(sto) =>\n              onChange(_.set(_.cloneDeep(formData), 'limits.ephemeral-storage', sto))\n            }\n            path={`${idSchema.$id}.limits`}\n          />\n        </dd>\n        <dt>{t('console-shared~Requests')}</dt>\n        <dd>\n          <ResourceRequirements\n            cpu={formData?.requests?.cpu || ''}\n            memory={formData?.requests?.memory || ''}\n            storage={formData?.requests?.['ephemeral-storage'] || ''}\n            onChangeCPU={(cpu) => onChange(_.set(_.cloneDeep(formData), 'requests.cpu', cpu))}\n            onChangeMemory={(mem) => onChange(_.set(_.cloneDeep(formData), 'requests.memory', mem))}\n            onChangeStorage={(sto) =>\n              onChange(_.set(_.cloneDeep(formData), 'requests.ephemeral-storage', sto))\n            }\n            path={`${idSchema.$id}.requests`}\n          />\n        </dd>\n      </dl>\n    </FieldSet>\n  );\n};\n\nexport const UpdateStrategyField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const description = useSchemaDescription(\n    schema,\n    uiSchema,\n    t('public~How should the pods be replaced when a new revision is created?'),\n  );\n  return (\n    <FormField\n      defaultLabel={name || t('console-shared~Update strategy')}\n      id={idSchema.$id}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <Description description={description} id={idSchema.$id} />\n      <ConfigureUpdateStrategy\n        showDescription={false}\n        strategyType={formData?.type || 'RollingUpdate'}\n        maxUnavailable={formData?.rollingUpdate?.maxUnavailable || ''}\n        maxSurge={formData?.rollingUpdate?.maxSurge || ''}\n        onChangeStrategyType={(type) => onChange(_.set(_.cloneDeep(formData), 'type', type))}\n        onChangeMaxUnavailable={(maxUnavailable) =>\n          onChange(_.set(_.cloneDeep(formData), 'rollingUpdate.maxUnavailable', maxUnavailable))\n        }\n        onChangeMaxSurge={(maxSurge) =>\n          onChange(_.set(_.cloneDeep(formData), 'rollingUpdate.maxSurge', maxSurge))\n        }\n        replicas={1}\n        uid={idSchema.$id}\n      />\n    </FormField>\n  );\n};\n\nexport const NodeAffinityField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Node affinity')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <NodeAffinity\n        affinity={formData}\n        onChange={(affinity) => onChange(affinity)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\nexport const PodAffinityField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Pod affinity')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <PodAffinity\n        affinity={formData}\n        onChange={(affinity) => onChange(affinity)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\n\nexport const MatchExpressionsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Expressions')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <MatchExpressions\n        matchExpressions={formData}\n        onChange={(v) => onChange(v)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\n\nexport const LabelsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => (\n  <FormField\n    defaultLabel={name}\n    id={idSchema.$id}\n    required={required}\n    schema={schema}\n    uiSchema={uiSchema}\n  >\n    <SelectorInput\n      inputProps={{ id: idSchema.$id }}\n      onChange={(newValue) => onChange(SelectorInput.objectify(newValue))}\n      tags={SelectorInput.arrayify(formData)}\n    />\n  </FormField>\n);\n\nexport const DropdownField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  schema,\n  uiSchema = {},\n}) => {\n  const { t } = useTranslation();\n  const { items, title } = getUiOptions(uiSchema) as { items?: object; title?: string };\n  return (\n    <Dropdown\n      id={idSchema.$id}\n      key={idSchema.$id}\n      title={t('console-shared~Select {{title}}', { title: title || schema?.title || name })}\n      selectedKey={formData}\n      items={items ?? {}}\n      onChange={(val) => onChange(val)}\n    />\n  );\n};\n\nexport const CustomSchemaField: React.FC<SchemaFieldProps> = (props) => {\n  // If the provided schema will not generate any form field elements, return null.\n  // To check that, it's required to resolving definition references ($ref) in the\n  // JSON schema as it is implemented in the origin SchemaField:\n  // https://github.com/rjsf-team/react-jsonschema-form/blob/v2.5.1/packages/core/src/components/fields/SchemaField.js#L226-L244\n  const {\n    schema: fieldSchema,\n    registry: { rootSchema },\n    formData,\n    uiSchema,\n  } = props;\n\n  let resolvedSchema = fieldSchema;\n  try {\n    resolvedSchema = retrieveSchema(fieldSchema, rootSchema, formData);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('dynamic-form CustomSchemaField retrieveSchema error:', error);\n  }\n\n  if (hasNoFields(resolvedSchema, uiSchema)) {\n    return null;\n  }\n\n  return <SchemaField {...props} />;\n};\n\nexport const NullField = () => null;\n\nexport default {\n  DescriptionField,\n  DropdownField,\n  LabelsField,\n  MatchExpressionsField,\n  NodeAffinityField,\n  NullField,\n  PodAffinityField,\n  ResourceRequirementsField,\n  SchemaField: CustomSchemaField,\n  UpdateStrategyField,\n};\n\ntype FormFieldProps = {\n  id: string;\n  defaultLabel?: string;\n  required: boolean;\n  schema: JSONSchema7;\n  uiSchema: UiSchema;\n};\n\ntype FieldSetProps = Pick<FieldProps, 'idSchema' | 'required' | 'schema' | 'uiSchema'> & {\n  defaultLabel?: string;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '@console/internal/components/utils';\nimport { MatchExpression, Operator } from '@console/internal/module/k8s';\n\nconst UNARY_OPERATORS = [Operator.Exists, Operator.DoesNotExist];\nconst ALL_OPERATORS: MatchExpression['operator'][] = [\n  Operator.DoesNotExist,\n  Operator.Equals,\n  Operator.Exists,\n  Operator.In,\n  Operator.NotEqual,\n  Operator.NotIn,\n];\n\nconst MatchExpression: React.FC<MatchExpressionProps> = ({\n  expression,\n  onChange = () => {},\n  allowedOperators = ALL_OPERATORS,\n  onClickRemove = () => {},\n}) => {\n  const { key, operator, values } = expression;\n  const { t } = useTranslation();\n  return (\n    <div className=\"row key-operator-value__row\">\n      <div className=\"col-md-4 col-xs-5 key-operator-value__name-field\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Key')}\n        </div>\n        <input\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          value={expression.key ?? ''}\n          onChange={(e) => onChange({ ...expression, key: e.target.value })}\n        />\n      </div>\n      <div className=\"col-md-3 col-xs-5 key-operator-value__operator-field\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Operator')}\n        </div>\n        <Dropdown\n          dropDownClassName=\"dropdown--full-width\"\n          items={allowedOperators.reduce((acc, o) => ({ ...acc, [o]: o }), {})}\n          onChange={(newOperator: Operator) => onChange({ key, operator: newOperator, values: [] })}\n          selectedKey={expression.operator}\n          title={expression.operator}\n        />\n      </div>\n      <div className=\"col-md-3 col-xs-5 key-operator-value__value-field key-operator-value__value-field--stacked\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Values')}\n        </div>\n        <input\n          className=\"pf-v5-c-form-control\"\n          type=\"text\"\n          value={values?.join(',') ?? ''}\n          onChange={(e) =>\n            onChange({\n              key,\n              operator,\n              values: e.target?.value?.split(',')?.map((v) => v.trim()) ?? [],\n            })\n          }\n          disabled={UNARY_OPERATORS.includes(operator as Operator)}\n        />\n      </div>\n      <div className=\"col-xs-1 key-operator-value__action key-operator-value__action--stacked\">\n        <div className=\"key-operator-value__heading key-operator-value__heading-button hidden-md hidden-lg\" />\n        <Button\n          type=\"button\"\n          onClick={onClickRemove}\n          aria-label=\"Delete\"\n          className=\"key-operator-value__delete-button\"\n          variant=\"plain\"\n        >\n          <MinusCircleIcon />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport const MatchExpressions: React.FC<MatchExpressionsProps> = ({\n  matchExpressions = [],\n  onChange = () => {}, // Default to noop\n  allowedOperators = ALL_OPERATORS,\n  uid = '',\n}) => {\n  const { t } = useTranslation();\n\n  const updateExpression = (index: number, newExpression: MatchExpression): void =>\n    onChange(matchExpressions.map((exp, i) => (i === index ? newExpression : exp)));\n\n  const removeExpression = (index: number): void =>\n    onChange(matchExpressions.filter((_exp, i) => i !== index));\n\n  const addExpression = (): void =>\n    onChange([...matchExpressions, { key: '', operator: Operator.Exists, values: [] }]);\n\n  return (\n    <>\n      <div className=\"row key-operator-value__heading hidden-sm hidden-xs\">\n        <div className=\"col-md-4 text-secondary text-uppercase\">{t('olm~Key')}</div>\n        <div className=\"col-md-3 text-secondary text-uppercase\">{t('olm~Operator')}</div>\n        <div className=\"col-md-3 text-secondary text-uppercase\">{t('olm~Values')}</div>\n      </div>\n      {matchExpressions.map((expression, index) => (\n        // Have to use array index in the key bc any other unique id whould have to use editable fields.\n        <MatchExpression\n          // eslint-disable-next-line react/no-array-index-key\n          key={`${uid}-match-expression-${index}`}\n          expression={expression}\n          allowedOperators={allowedOperators}\n          onClickRemove={() => removeExpression(index)}\n          onChange={(newExpression) => updateExpression(index, newExpression)}\n        />\n      ))}\n      <div className=\"row\">\n        <Button type=\"button\" onClick={addExpression} variant=\"link\">\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Add expression')}\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport type MatchExpressionsProps = {\n  matchExpressions: MatchExpression[];\n  onChange?: (matchExpressions: MatchExpression[]) => void;\n  allowedOperators?: MatchExpression['operator'][];\n  uid?: string;\n};\n\nexport type MatchExpressionProps = {\n  expression: MatchExpression;\n  onChange?: (expression: MatchExpression) => void;\n  onClickRemove?: () => void;\n  allowedOperators?: MatchExpression['operator'][];\n};\n\nMatchExpressions.displayName = 'MatchExpressions';\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Checkbox, Switch } from '@patternfly/react-core';\nimport { WidgetProps } from '@rjsf/core';\nimport { getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { NumberSpinner, ListDropdown, Dropdown } from '@console/internal/components/utils';\nimport { K8sKind, GroupVersionKind, ImagePullPolicy } from '@console/internal/module/k8s';\nimport { selectorFromString } from '@console/internal/module/k8s/selector';\nimport { JSON_SCHEMA_NUMBER_TYPES } from './const';\nimport { DynamicFormFieldOptionsList } from './types';\n\nexport const TextWidget: React.FC<WidgetProps> = (props) => {\n  const {\n    disabled = false,\n    id,\n    onBlur,\n    onChange,\n    onFocus,\n    readonly = false,\n    schema = {},\n    value = '',\n  } = props;\n  const schemaType = getSchemaType(schema);\n  return JSON_SCHEMA_NUMBER_TYPES.includes(schemaType) ? (\n    <NumberWidget {...props} />\n  ) : (\n    <input\n      className=\"pf-v5-c-form-control\"\n      disabled={disabled}\n      id={id}\n      key={id}\n      onBlur={onBlur && ((event) => onBlur(id, event.target.value))}\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n      onFocus={onFocus && ((event) => onFocus(id, event.target.value))}\n      readOnly={readonly}\n      type=\"text\"\n      value={value}\n    />\n  );\n};\n\nexport const NumberWidget: React.FC<WidgetProps> = ({ value, id, onChange }) => {\n  const numberValue = _.toNumber(value);\n  return (\n    <input\n      className=\"pf-v5-c-form-control\"\n      id={id}\n      key={id}\n      onChange={({ currentTarget }) =>\n        onChange(currentTarget.value !== '' ? _.toNumber(currentTarget.value) : '')\n      }\n      type=\"number\"\n      value={_.isFinite(numberValue) ? numberValue : ''}\n    />\n  );\n};\n\nexport const PasswordWidget: React.FC<WidgetProps> = ({ value = '', id, onChange }) => {\n  return (\n    <input\n      className=\"pf-v5-c-form-control\"\n      key={id}\n      id={id}\n      type=\"password\"\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n      value={value}\n    />\n  );\n};\n\nexport const CheckboxWidget: React.FC<WidgetProps> = ({ value = false, id, label, onChange }) => {\n  return (\n    <Checkbox\n      id={id}\n      key={id}\n      isChecked={value}\n      data-checked-state={value}\n      label={label}\n      onChange={(_event, checked) => onChange(checked)}\n    />\n  );\n};\n\nexport const SwitchWidget: React.FC<WidgetProps> = ({ value, id, label, onChange, options }) => {\n  const { t } = useTranslation();\n  const { labelOn = t('console-shared~true'), labelOff = t('console-shared~false') } = options;\n  return (\n    <Switch\n      id={id || label}\n      key={id || label}\n      isChecked={_.isNil(value) ? false : value}\n      onChange={(_event, v) => onChange(v)}\n      label={labelOn as string}\n      labelOff={labelOff as string}\n    />\n  );\n};\n\nexport const PodCountWidget: React.FC<WidgetProps> = ({ value, id, onChange }) => {\n  return (\n    <NumberSpinner\n      id={id}\n      value={value}\n      onChange={({ currentTarget }) => onChange(_.toInteger(currentTarget.value))}\n      changeValueBy={(operation) => onChange(_.toInteger(value) + operation)}\n      autoFocus\n      required\n    />\n  );\n};\n\nexport const K8sResourceWidget: React.FC<K8sResourceWidgetProps> = ({\n  value,\n  id,\n  label,\n  options,\n  formContext,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n  const { model, groupVersionKind, selector } = options;\n  const { namespace } = formContext;\n  const selectedKey = value ? `${value}-${groupVersionKind}` : null;\n  const selectorObj = React.useMemo(() => {\n    try {\n      return selectorFromString(selector);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `Invalid selector string provided to K8sResourceWidget: '${selector}'. If using OLM descriptors, please validate the provided selector.`,\n      );\n    }\n    return null;\n  }, [selector]);\n  return (\n    <div>\n      {!_.isUndefined(model) ? (\n        <ListDropdown\n          key={id}\n          id={id}\n          resources={[\n            {\n              kind: groupVersionKind,\n              selector: selectorObj,\n              namespace: model.namespaced ? namespace : null,\n            },\n          ]}\n          desc={label}\n          placeholder={t('console-shared~Select {{label}}', { label: model.label })}\n          onChange={(next) => onChange(next)}\n          selectedKey={selectedKey}\n        />\n      ) : (\n        <span>\n          {t('console-shared~Cluster does not have resource {{groupVersionKind}}', {\n            groupVersionKind,\n          })}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport const ImagePullPolicyWidget: React.FC<WidgetProps> = ({ id, value, onChange }) => {\n  return (\n    <RadioGroup\n      id={id}\n      currentValue={value}\n      items={_.values(ImagePullPolicy).map((policy) => ({\n        value: policy,\n        title: policy,\n      }))}\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n    />\n  );\n};\n\nexport const SelectWidget: React.FC<WidgetProps> = ({\n  id,\n  label,\n  onChange,\n  options,\n  schema,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const { enumOptions = [], title } = options;\n  const items = _.reduce(\n    enumOptions as DynamicFormFieldOptionsList,\n    (itemAccumulator, option) => {\n      return {\n        ...itemAccumulator,\n        [option.label]: option.value,\n      };\n    },\n    {},\n  );\n  return (\n    <Dropdown\n      id={id}\n      key={id}\n      title={t('console-shared~Select {{title}}', { title: title || schema?.title || label })}\n      selectedKey={value}\n      items={items}\n      onChange={(val) => onChange(val)}\n    />\n  );\n};\n\ntype K8sResourceWidgetProps = WidgetProps & {\n  options: {\n    model: K8sKind;\n    groupVersionKind: GroupVersionKind;\n    selector: string;\n  };\n};\n\nexport default {\n  BaseInput: TextWidget,\n  CheckboxWidget,\n  SwitchWidget,\n  ImagePullPolicyWidget,\n  K8sResourceWidget,\n  NumberWidget,\n  PasswordWidget,\n  PodCountWidget,\n  SelectWidget,\n  TextWidget,\n  int32: NumberWidget,\n  int64: NumberWidget,\n};\n","import * as React from 'react';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  NodeAffinity as NodeAffinityType,\n  MatchExpression,\n  PodAffinity as PodAffinityType,\n  PodAffinityTerm,\n  Selector,\n} from '@console/internal/module/k8s';\nimport { MatchExpressions } from './match-expressions';\n\nenum AffinityRuleType {\n  Preferred = 'Preferred',\n  Required = 'Required',\n}\n\nconst ALLOWED_MATCH_EXPRESSION_OPERATORS: MatchExpression['operator'][] = [\n  'In',\n  'NotIn',\n  'Exists',\n  'DoesNotExist',\n];\nconst DEFAULT_MATCH_EXPRESSION: MatchExpression = {\n  key: '',\n  operator: 'Exists',\n};\n\nexport const DEFAULT_NODE_AFFINITY: NodeAffinityType = {\n  requiredDuringSchedulingIgnoredDuringExecution: {\n    nodeSelectorTerms: [{ matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] }],\n  },\n  preferredDuringSchedulingIgnoredDuringExecution: [\n    {\n      weight: 1,\n      preference: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n    },\n  ],\n};\n\nexport const DEFAULT_POD_AFFINITY: PodAffinityType = {\n  requiredDuringSchedulingIgnoredDuringExecution: [\n    {\n      topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n      labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n    },\n  ],\n  preferredDuringSchedulingIgnoredDuringExecution: [\n    {\n      weight: 1,\n      podAffinityTerm: {\n        topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n        labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n      },\n    },\n  ],\n};\n\nconst NodeAffinityRule: React.FC<NodeAffinityRuleProps> = ({\n  key,\n  type,\n  showRemoveButton = false,\n  onClickRemove,\n  onChange = () => {},\n  rule,\n}) => {\n  const { t } = useTranslation();\n  const { weight, selector } = rule;\n  const onChangeMatchExpressions = (matchExpressions: MatchExpression[]): void =>\n    onChange({\n      ...rule,\n      selector: {\n        ...selector,\n        matchExpressions,\n      },\n    });\n\n  const onChangeWeight = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsedValue = _.parseInt(e?.target?.value);\n    onChange({\n      ...rule,\n      weight: _.isFinite(parsedValue) ? parsedValue : undefined,\n    });\n  };\n\n  return (\n    <div className=\"co-affinity-term\">\n      {showRemoveButton && (\n        <Button\n          type=\"button\"\n          className=\"co-affinity-term__remove\"\n          onClick={onClickRemove}\n          variant=\"link\"\n        >\n          <MinusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Remove {{item}}', { item: type })}\n        </Button>\n      )}\n      {type === AffinityRuleType.Preferred && (\n        <div className=\"co-affinity-term__weight-input\">\n          <label className=\"control-label co-required\" htmlFor={`preference-${key}`}>\n            {t('olm~Weight')}\n          </label>\n          <input\n            className=\"pf-v5-c-form-control\"\n            type=\"number\"\n            value={weight}\n            onChange={onChangeWeight}\n            required\n          />\n        </div>\n      )}\n      <MatchExpressions\n        matchExpressions={selector?.matchExpressions}\n        onChange={onChangeMatchExpressions}\n        allowedOperators={ALLOWED_MATCH_EXPRESSION_OPERATORS}\n        uid={key}\n      />\n    </div>\n  );\n};\n\nexport const NodeAffinity: React.FC<NodeAffinityProps> = ({ affinity, onChange, uid = '' }) => {\n  const { t } = useTranslation();\n  const requiredRules =\n    affinity?.requiredDuringSchedulingIgnoredDuringExecution?.nodeSelectorTerms || [];\n  const preferredRules = affinity?.preferredDuringSchedulingIgnoredDuringExecution || [];\n  const addRequiredRule = () =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [...requiredRules, { matchExpressions: [] }],\n      },\n    });\n\n  const removeRequiredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: requiredRules.filter((_v, index) => index !== atIndex),\n      },\n    });\n\n  const updateRequiredRules = ({ selector }: NodeAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: requiredRules.map((current, index) =>\n          index === atIndex ? selector : current,\n        ),\n      },\n    });\n\n  const addPreferredRule = () =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: [\n        ...preferredRules,\n        { weight: 1, preference: { matchExpressions: [] } },\n      ],\n    });\n\n  const removePreferredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter(\n        (_v, index) => index !== atIndex,\n      ),\n    });\n\n  const updatePreferredRules = (\n    { selector: preference, weight }: NodeAffinityRule,\n    atIndex: number,\n  ) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) =>\n        index === atIndex ? { preference, weight } : current,\n      ),\n    });\n\n  return (\n    <dl>\n      <Tooltip\n        content={t('olm~Required rules must be met before a pod can be scheduled on a node.')}\n      >\n        <dt>{t('olm~Required during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {requiredRules.map((selector, requiredIndex) => (\n          <NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${uid}-node-affinity-required-${requiredIndex}`}\n            onChange={(rule) => updateRequiredRules(rule, requiredIndex)}\n            onClickRemove={() => removeRequiredRule(requiredIndex)}\n            rule={{ selector }}\n            showRemoveButton\n            type={AffinityRuleType.Required}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addRequiredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add required')}\n          </Button>\n        </div>\n      </dd>\n      <Tooltip\n        content={t(\n          'olm~Preferred rules specify that, if the rule is met, the scheduler tries to enforce the rules, but does not guarantee enforcement.',\n        )}\n      >\n        <dt>{t('olm~Preferred during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {preferredRules.map(({ preference: selector, weight }, preferredIndex) => (\n          <NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${uid}-node-affinity-preferred-${preferredIndex}`}\n            onChange={(rule) => updatePreferredRules(rule, preferredIndex)}\n            onClickRemove={() => removePreferredRule(preferredIndex)}\n            rule={{ selector, weight }}\n            showRemoveButton\n            type={AffinityRuleType.Preferred}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addPreferredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add preferred')}\n          </Button>\n        </div>\n      </dd>\n    </dl>\n  );\n};\n\nconst PodAffinityRule: React.FC<PodAffinityRuleProps> = ({\n  key,\n  onChange = () => {},\n  onClickRemove = () => {},\n  showRemoveButton = false,\n  rule,\n  type,\n}) => {\n  const { t } = useTranslation();\n  const { podAffinityTerm, weight } = rule;\n  const selector = podAffinityTerm?.labelSelector || {};\n  const topologyKey = podAffinityTerm?.topologyKey;\n  const onChangeWeight = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsed = _.parseInt(e?.target?.value);\n    onChange({\n      ...rule,\n      weight: _.isFinite(parsed) ? parsed : undefined,\n    });\n  };\n\n  const onChangeTopologyKey = (e: React.ChangeEvent<HTMLInputElement>): void =>\n    onChange({\n      ...rule,\n      podAffinityTerm: {\n        ...podAffinityTerm,\n        topologyKey: e?.target?.value,\n      },\n    });\n  const onChangeMatchExpressions = (matchExpressions: MatchExpression[]): void =>\n    onChange({\n      ...rule,\n      podAffinityTerm: {\n        ...podAffinityTerm,\n        labelSelector: {\n          ...selector,\n          matchExpressions,\n        },\n      },\n    });\n\n  return podAffinityTerm ? (\n    <div className=\"co-affinity-term\">\n      {showRemoveButton && (\n        <Button\n          type=\"button\"\n          className=\"co-affinity-term__remove\"\n          onClick={onClickRemove}\n          variant=\"link\"\n        >\n          <MinusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Remove {{item}}', { item: type })}\n        </Button>\n      )}\n      <div className=\"co-affinity-term__topology\">\n        {type === AffinityRuleType.Preferred && (\n          <div className=\"co-affinity-term__weight-input\">\n            <label className=\"control-label co-required\" htmlFor={`preference-${key}`}>\n              {t('olm~Weight')}\n            </label>\n            <input\n              className=\"pf-v5-c-form-control\"\n              type=\"number\"\n              value={weight}\n              onChange={onChangeWeight}\n              required\n            />\n          </div>\n        )}\n        <div className=\"co-affinity-term__topology-input\">\n          <label className=\"control-label co-required\" htmlFor={`topology-${key}`}>\n            {t('olm~Topology key')}\n          </label>\n          <input\n            id={`topology-${key}`}\n            className=\"pf-v5-c-form-control\"\n            type=\"text\"\n            value={topologyKey}\n            onChange={onChangeTopologyKey}\n            required\n          />\n        </div>\n      </div>\n      <MatchExpressions\n        matchExpressions={selector?.matchExpressions}\n        onChange={onChangeMatchExpressions}\n        allowedOperators={ALLOWED_MATCH_EXPRESSION_OPERATORS}\n        uid={key}\n      />\n    </div>\n  ) : null;\n};\n\nexport const PodAffinity: React.FC<PodAffinityProps> = ({ affinity, onChange, uid = '' }) => {\n  const {\n    requiredDuringSchedulingIgnoredDuringExecution: requiredRules = [],\n    preferredDuringSchedulingIgnoredDuringExecution: preferredRules = [],\n  } = affinity || {};\n  const { t } = useTranslation();\n  const addRequiredRule = () =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        ...requiredRules,\n        { topologyKey: '', labelSelector: { matchExpressions: [] } },\n      ],\n    });\n\n  const removeRequiredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: requiredRules.filter(\n        (_v, index) => atIndex !== index,\n      ),\n    });\n\n  const updateRequiredRules = ({ podAffinityTerm: next }: PodAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: requiredRules.map((current, index) =>\n        index === atIndex ? next : current,\n      ),\n    });\n\n  const addPreferredRule = () =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: [\n        ...preferredRules,\n        {\n          weight: 1,\n          podAffinityTerm: { topologyKey: '', labelSelector: { matchExpressions: [] } },\n        },\n      ],\n    });\n\n  const removePreferredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter(\n        (_v, index) => atIndex !== index,\n      ),\n    });\n\n  const updatePreferredRules = (next: PodAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) =>\n        index === atIndex ? next : current,\n      ),\n    });\n\n  return (\n    <dl>\n      <Tooltip\n        content={t('olm~Required rules must be met before a pod can be scheduled on a node.')}\n      >\n        <dt>{t('olm~Required during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {_.map(requiredRules, (podAffinityTerm, ruleIndex) => (\n          // Have to use array index in the key bc any other unique id whould have to use editable fields.\n          // eslint-disable-next-line react/no-array-index-key\n          <PodAffinityRule\n            key={`${uid}-pod-affinity-required-${ruleIndex}`}\n            rule={{ podAffinityTerm }}\n            onChange={(rule) => updateRequiredRules(rule, ruleIndex)}\n            onClickRemove={() => removeRequiredRule(ruleIndex)}\n            showRemoveButton\n            type={AffinityRuleType.Required}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addRequiredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add required')}\n          </Button>\n        </div>\n      </dd>\n      <Tooltip\n        content={t(\n          'olm~Preferred rules specify that, if the rule is met, the scheduler tries to enforce the rules, but does not guarantee enforcement.',\n        )}\n      >\n        <dt>{t('olm~Preferred during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {preferredRules.map((preferredRule, ruleIndex) => {\n          // Have to use array index in the key bc any other unique id whould have to use editable fields.\n          return (\n            <PodAffinityRule\n              // eslint-disable-next-line react/no-array-index-key\n              key={`${uid}-pod-affinity-preferred-${ruleIndex}`}\n              onChange={(rule) => updatePreferredRules(rule, ruleIndex)}\n              onClickRemove={() => removePreferredRule(ruleIndex)}\n              showRemoveButton\n              rule={preferredRule}\n              type={AffinityRuleType.Preferred}\n            />\n          );\n        })}\n\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addPreferredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add preferred')}\n          </Button>\n        </div>\n      </dd>\n    </dl>\n  );\n};\n\ntype NodeAffinityRule = {\n  selector: Selector;\n  weight?: number;\n};\n\nexport type NodeAffinityRuleProps = {\n  key: string;\n  onChange?: (rule: NodeAffinityRule) => void;\n  onClickRemove?: () => void;\n  rule: NodeAffinityRule;\n  showRemoveButton?: boolean;\n  type: AffinityRuleType;\n};\n\nexport type NodeAffinityProps = {\n  uid?: string;\n  affinity: NodeAffinityType;\n  onChange: (affinity: NodeAffinityType) => void;\n};\n\ntype PodAffinityRule = {\n  podAffinityTerm: PodAffinityTerm;\n  weight?: number;\n};\n\nexport type PodAffinityRuleProps = {\n  key: string;\n  rule: PodAffinityRule;\n  onChange?: (rule: PodAffinityRule) => void;\n  onClickRemove?: () => void;\n  showRemoveButton?: boolean;\n  type: AffinityRuleType;\n};\n\nexport type PodAffinityProps = {\n  uid?: string;\n  affinity: PodAffinityType;\n  onChange: (affinity: PodAffinityType) => void;\n};\n\nNodeAffinity.displayName = 'NodeAffinity';\nPodAffinity.displayName = 'PodAffinity';\n","import * as React from 'react';\nimport { Button, Alert, Divider, FormHelperText } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ArrayFieldTemplateProps, FieldTemplateProps, ObjectFieldTemplateProps } from '@rjsf/core';\nimport { getUiOptions, getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { JSON_SCHEMA_GROUP_TYPES } from './const';\nimport { FieldSet, FormField } from './fields';\nimport { UiSchemaOptionsWithDependency } from './types';\nimport { useSchemaLabel } from './utils';\n\nexport const AtomicFieldTemplate: React.FC<FieldTemplateProps> = ({\n  children,\n  id,\n  label,\n  rawErrors,\n  description,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  return (\n    <FormField id={id} defaultLabel={label} required={required} schema={schema} uiSchema={uiSchema}>\n      {children}\n      {description}\n      {!_.isEmpty(rawErrors) && (\n        <>\n          {_.map(rawErrors, (error) => (\n            <FormHelperText key={error}>{_.capitalize(error)}</FormHelperText>\n          ))}\n        </>\n      )}\n    </FormField>\n  );\n};\n\nconst AdvancedProperties: React.FC<Pick<ObjectFieldTemplateProps, 'properties'>> = ({\n  properties,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <ExpandCollapse\n      textCollapsed={t('console-shared~Advanced configuration')}\n      textExpanded={t('console-shared~Advanced configuration')}\n    >\n      {_.map(properties, (property) => property.content)}\n    </ExpandCollapse>\n  );\n};\nexport const FieldTemplate: React.FC<FieldTemplateProps> = (props) => {\n  const { hidden, schema = {}, children, uiSchema = {}, formContext = {} } = props;\n  const type = getSchemaType(schema);\n  const [dependencyMet, setDependencyMet] = React.useState(true);\n  React.useEffect(() => {\n    const { dependency } = getUiOptions(uiSchema ?? {}) as UiSchemaOptionsWithDependency; // Type defs for this function are awful\n    if (dependency) {\n      setDependencyMet(\n        dependency?.controlFieldValue ===\n          _.get(\n            formContext.formData ?? {},\n            ['spec', ...(dependency?.controlFieldPath ?? [])],\n            '',\n          ).toString(),\n      );\n    }\n  }, [uiSchema, formContext]);\n\n  if (hidden || !dependencyMet) {\n    return null;\n  }\n  const isGroup = JSON_SCHEMA_GROUP_TYPES.includes(type);\n  return isGroup ? children : <AtomicFieldTemplate {...props} />;\n};\n\nexport const ObjectFieldTemplate: React.FC<ObjectFieldTemplateProps> = ({\n  idSchema,\n  properties,\n  required,\n  schema,\n  title,\n  uiSchema,\n}) => {\n  const { advanced } = getUiOptions(uiSchema ?? {});\n  const { normalProperties, advancedProperties } = _.groupBy(properties ?? [], ({ name }) =>\n    _.includes(advanced as string[], name) ? 'advancedProperties' : 'normalProperties',\n  );\n  return properties?.length ? (\n    <FieldSet\n      defaultLabel={title}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <div className=\"co-dynamic-form__field-group-content\">\n        {normalProperties?.length > 0 && _.map(normalProperties, (p) => p.content)}\n        {advancedProperties?.length > 0 && <AdvancedProperties properties={advancedProperties} />}\n      </div>\n    </FieldSet>\n  ) : null;\n};\n\nexport const ArrayFieldTemplate: React.FC<ArrayFieldTemplateProps> = ({\n  idSchema,\n  items,\n  onAddClick,\n  required,\n  schema,\n  title,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const [, label] = useSchemaLabel(schema, uiSchema, title ?? 'Items');\n  return (\n    <FieldSet\n      defaultLabel={label}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      {_.map(items ?? [], (item) => {\n        return (\n          <div className=\"co-dynamic-form__array-field-group-item\" key={item.key}>\n            {item.index > 0 && <Divider className=\"co-divider\" />}\n            {item.hasRemove && (\n              <div className=\"row co-dynamic-form__array-field-group-remove\">\n                <Button\n                  id={`${item.key}_remove-btn`}\n                  type=\"button\"\n                  onClick={item.onDropIndexClick(item.index)}\n                  variant=\"link\"\n                >\n                  <MinusCircleIcon className=\"co-icon-space-r\" />\n                  {t('console-shared~Remove {{singularLabel}}', { singularLabel: label })}\n                </Button>\n              </div>\n            )}\n            {item.children}\n          </div>\n        );\n      })}\n      <div className=\"row\">\n        <Button id={`${idSchema.$id}_add-btn`} type=\"button\" onClick={onAddClick} variant=\"link\">\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('console-shared~Add {{singularLabel}}', { singularLabel: label })}\n        </Button>\n      </div>\n    </FieldSet>\n  );\n};\n\nexport const ErrorTemplate: React.FC<{ errors: string[] }> = ({ errors }) => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      className=\"co-alert co-break-word co-alert--scrollable\"\n      variant=\"danger\"\n      title={t('console-shared~Error')}\n    >\n      {t('console-shared~Fix the following errors:')}\n      <ul>\n        {_.map(errors, (error) => (\n          <li key={error}>{error}</li>\n        ))}\n      </ul>\n    </Alert>\n  );\n};\n","import * as React from 'react';\nimport { Alert, Button } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { safeJSToYAML, asyncYAMLToJS } from '../../utils/yaml';\nimport { EditorType, EditorToggle } from './editor-toggle';\nimport { useEditorType } from './useEditorType';\n\nconst YAML_KEY_ORDER = ['apiVerion', 'kind', 'metadata', 'spec', 'status'];\nexport const YAML_TO_JS_OPTIONS = {\n  skipInvalid: true,\n  sortKeys: (a, b) => _.indexOf(YAML_KEY_ORDER, a) - _.indexOf(YAML_KEY_ORDER, b),\n};\n\n// Provides toggling and syncing between a form and yaml editor. The formData state is the source\n// of truth. Both the form editor and the yaml editor update the formData state. Here's the basic logic of this component:\n// In the form view:\n//   - formData is both rendered and updated by the form component\n//   - on toggle to YAML editor, yaml is parsed from current formData state.\n// In the YAML view:\n//   - on each yaml change, attempt to parse yaml to js:\n//       - If it fails, nothing happens. formData remains unchanged.\n//       - If successful, formData is updated to resulting js\n//   - on toggle to form view, no action needs to be taken to sync because formData has remained up to date with each yaml change\n//\n//  This means that when switching from YAML to Form, you can lose changes if the YAML editor contains unparsable YAML\n//  TODO Add an extra step when switching from yaml to form to warn user if they are about to lose changes.\nexport const SyncedEditor: React.FC<SyncedEditorProps> = ({\n  context = {},\n  FormEditor,\n  initialType = EditorType.Form,\n  initialData = {},\n  onChangeEditorType = _.noop,\n  onChange = _.noop,\n  prune,\n  YAMLEditor,\n  lastViewUserSettingKey,\n  displayConversionError,\n}) => {\n  const { formContext, yamlContext } = context;\n  const { t } = useTranslation();\n  const [formData, setFormData] = React.useState<K8sResourceKind>(initialData);\n  const [yaml, setYAML] = React.useState(\n    safeJSToYAML(initialData, 'yamlData', {\n      skipInvalid: true,\n    }),\n  );\n  const [switchError, setSwitchError] = React.useState<string | undefined>();\n  const [yamlWarning, setYAMLWarning] = React.useState<boolean>(false);\n  const [editorType, setEditorType, loaded] = useEditorType(lastViewUserSettingKey, initialType);\n\n  const handleFormDataChange = (newFormData: K8sResourceKind = {}) => {\n    if (!_.isEqual(newFormData, formData)) {\n      setFormData(newFormData);\n      onChange(newFormData);\n    }\n  };\n\n  const handleYAMLChange = (newYAML: string = '') => {\n    asyncYAMLToJS(newYAML)\n      .then((js) => {\n        setSwitchError(undefined);\n        handleFormDataChange(js);\n        setYAML(safeJSToYAML(prune?.(formData) ?? formData, yaml, YAML_TO_JS_OPTIONS));\n      })\n      .catch((err) => setSwitchError(String(err)));\n  };\n\n  const changeEditorType = (newType: EditorType): void => {\n    setEditorType(newType);\n    onChangeEditorType(newType);\n  };\n\n  const handleToggleToForm = () => {\n    if (switchError === undefined) {\n      changeEditorType(EditorType.Form);\n    } else {\n      setYAMLWarning(true);\n    }\n  };\n\n  const handleToggleToYAML = () => {\n    setYAML(safeJSToYAML(prune?.(formData) ?? formData, yaml, YAML_TO_JS_OPTIONS));\n    changeEditorType(EditorType.YAML);\n  };\n\n  const onClickYAMLWarningConfirm = () => {\n    setSwitchError(undefined);\n    setYAMLWarning(false);\n    changeEditorType(EditorType.Form);\n  };\n\n  const onClickYAMLWarningCancel = () => {\n    setYAMLWarning(false);\n  };\n\n  const onChangeType = (newType) => {\n    switch (newType) {\n      case EditorType.YAML:\n        handleToggleToYAML();\n        break;\n      case EditorType.Form:\n        handleToggleToForm();\n        break;\n      default:\n        break;\n    }\n  };\n\n  return loaded ? (\n    <>\n      <EditorToggle value={editorType} onChange={onChangeType} />\n      {yamlWarning && (\n        <Alert\n          className=\"co-synced-editor__yaml-warning\"\n          variant=\"danger\"\n          isInline\n          title={t('console-shared~Invalid YAML cannot be persisted')}\n        >\n          {displayConversionError && <p>{switchError}</p>}\n          <p>{t('console-shared~Switching to form view will delete any invalid YAML.')}</p>\n          <Button variant=\"danger\" onClick={onClickYAMLWarningConfirm}>\n            {t('console-shared~Switch and delete')}\n          </Button>\n          &nbsp;\n          <Button variant=\"secondary\" onClick={onClickYAMLWarningCancel}>\n            {t('console-shared~Cancel')}\n          </Button>\n        </Alert>\n      )}\n      {editorType === EditorType.Form ? (\n        <FormEditor\n          formData={formData}\n          onChange={handleFormDataChange}\n          prune={prune}\n          {...formContext}\n        />\n      ) : (\n        <YAMLEditor initialYAML={yaml} onChange={handleYAMLChange} {...yamlContext} />\n      )}\n    </>\n  ) : (\n    <LoadingBox />\n  );\n};\n\ntype FormEditorProps = {\n  formData?: K8sResourceKind;\n  onChange?: (data: K8sResourceKind) => void;\n  prune?: (data: K8sResourceKind) => any;\n};\n\ntype YAMLEditorProps = {\n  initialYAML?: string;\n  onChange?: (yaml: string) => void;\n};\n\ntype SyncedEditorProps = {\n  context: {\n    formContext: { [key: string]: any };\n    yamlContext: { [key: string]: any };\n  };\n  FormEditor: React.ComponentType<FormEditorProps>;\n  initialType?: EditorType;\n  initialData?: K8sResourceKind;\n  onChangeEditorType?: (newType: EditorType) => void;\n  onChange?: (data: K8sResourceKind) => void;\n  prune?: (data: K8sResourceKind) => any;\n  YAMLEditor: React.ComponentType<YAMLEditorProps>;\n  lastViewUserSettingKey: string;\n  displayConversionError?: boolean;\n};\n","import { UiSchema } from '@rjsf/core';\nimport * as Immutable from 'immutable';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport i18n from '@console/internal/i18n';\nimport { modelFor } from '@console/internal/module/k8s';\nimport { getSchemaAtPath } from '@console/shared';\nimport {\n  getJSONSchemaOrder,\n  stringPathToUISchemaPath,\n} from '@console/shared/src/components/dynamic-form/utils';\nimport {\n  REGEXP_K8S_RESOURCE_SUFFIX,\n  REGEXP_FIELD_DEPENDENCY_PATH_VALUE,\n  REGEXP_SELECT_OPTION,\n} from '../descriptors/const';\nimport { capabilityFieldMap, capabilityWidgetMap } from '../descriptors/spec/spec-descriptor-input';\nimport { SpecCapability, Descriptor } from '../descriptors/types';\nimport { getValidCapabilitiesForSchema } from '../descriptors/utils';\nimport { HIDDEN_UI_SCHEMA } from './const';\n\n// Applies a hidden widget and label configuration to every property of the given schema.\n// This is useful for whitelisting only a few schema properties when all properties are not known.\nexport const hideAllExistingProperties = (schema: JSONSchema7) => {\n  return _.reduce(\n    schema?.properties,\n    (acc, _unused, propertyName) => ({\n      ...acc,\n      [propertyName]: HIDDEN_UI_SCHEMA,\n    }),\n    {},\n  );\n};\n\nconst k8sResourceCapabilityToUISchema = (capability: SpecCapability): UiSchema => {\n  const [, groupVersionKindToken, selector] = capability.match(REGEXP_K8S_RESOURCE_SUFFIX) ?? [];\n  const groupVersionKind = groupVersionKindToken?.replace(/:/g, '~');\n\n  const model = groupVersionKind && modelFor(groupVersionKind);\n  if (model) {\n    return {\n      'ui:widget': 'K8sResourceWidget',\n      'ui:options': { model, groupVersionKind, ...(selector ? { selector } : {}) },\n    };\n  }\n  return {};\n};\n\nconst fieldDependencyCapabilityToUISchema = (capability: SpecCapability): UiSchema => {\n  const [, path, controlFieldValue] = capability.match(REGEXP_FIELD_DEPENDENCY_PATH_VALUE) ?? [];\n  const controlFieldPath = stringPathToUISchemaPath(path);\n  const controlFieldName = _.last(controlFieldPath);\n  return path && controlFieldValue\n    ? {\n        'ui:dependency': {\n          controlFieldPath,\n          controlFieldValue,\n          controlFieldName,\n        },\n      }\n    : {};\n};\n\nconst selectCapabilitiesToUISchema = (capabilities: SpecCapability[]): UiSchema => {\n  const items = capabilities.reduce((optionAccumulator, capability) => {\n    const [, option] = capability.match(REGEXP_SELECT_OPTION) ?? [];\n    return {\n      ...optionAccumulator,\n      ...(option && { [option]: option }),\n    };\n  }, {});\n\n  if (!_.isEmpty(items)) {\n    return {\n      'ui:field': 'DropdownField',\n      'ui:items': items,\n    };\n  }\n\n  return {};\n};\n\n// Given an array of SpecCapabilities, return the appropriate corresponding UISchema\nexport const capabilitiesToUISchema = (capabilities: SpecCapability[] = []) => {\n  if (!capabilities?.length) {\n    return {};\n  }\n\n  const k8sResourceCapability = _.find(capabilities, (capability) =>\n    capability.startsWith(SpecCapability.k8sResourcePrefix),\n  );\n  if (k8sResourceCapability) {\n    return k8sResourceCapabilityToUISchema(k8sResourceCapability);\n  }\n\n  const hasSelectOptions = _.some(capabilities, (capability) =>\n    capability.startsWith(SpecCapability.select),\n  );\n  if (hasSelectOptions) {\n    return selectCapabilitiesToUISchema(capabilities);\n  }\n\n  const field = _.reduce(\n    capabilities,\n    (fieldAccumulator, capability) => {\n      return fieldAccumulator ?? capabilityFieldMap.get(capability);\n    },\n    undefined,\n  );\n\n  const widget = _.reduce(\n    capabilities,\n    (widgetAccumulator, capability) => {\n      return widgetAccumulator ?? capabilityWidgetMap.get(capability);\n    },\n    undefined,\n  );\n\n  return {\n    ...(field && { 'ui:field': field }),\n    ...(widget && { 'ui:widget': widget }),\n  };\n};\n\n// Map a set of spec descriptors to a ui schema\nexport const descriptorsToUISchema = (\n  descriptors: Descriptor<SpecCapability>[],\n  jsonSchema: JSONSchema7,\n) => {\n  const uiSchemaFromDescriptors = _.reduce(\n    descriptors,\n    (uiSchemaAccumulator, descriptor, index) => {\n      const schemaForDescriptor = getSchemaAtPath(jsonSchema, descriptor.path);\n      if (!schemaForDescriptor) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[OperandForm] SpecDescriptor path references a non-existent schema property:',\n          descriptor.path,\n        );\n        return uiSchemaAccumulator;\n      }\n      const capabilities = getValidCapabilitiesForSchema<SpecCapability>(\n        descriptor,\n        schemaForDescriptor,\n      );\n      const uiSchemaPath = stringPathToUISchemaPath(descriptor.path);\n      const isAdvanced = capabilities.includes(SpecCapability.advanced);\n      const dependency = capabilities.find((capability) =>\n        capability.startsWith(SpecCapability.fieldDependency),\n      );\n      return uiSchemaAccumulator.withMutations((mutable) => {\n        if (isAdvanced) {\n          const advancedPropertyName = _.last(uiSchemaPath);\n          const pathToAdvanced = [...uiSchemaPath.slice(0, -1), 'ui:advanced'];\n          const currentAdvanced = mutable.getIn(pathToAdvanced) ?? Immutable.List();\n          mutable.setIn(pathToAdvanced, currentAdvanced.push(advancedPropertyName));\n        }\n\n        mutable.mergeDeepIn(\n          uiSchemaPath,\n          Immutable.Map({\n            ...(descriptor.description && { 'ui:description': descriptor.description }),\n            ...(descriptor.displayName && { 'ui:title': descriptor.displayName }),\n            ...(dependency && fieldDependencyCapabilityToUISchema(dependency)),\n            ...capabilitiesToUISchema(capabilities),\n            'ui:sortOrder': index + 1,\n          }),\n        );\n      });\n    },\n    Immutable.Map(),\n  ).toJS();\n  return _.merge(uiSchemaFromDescriptors, getJSONSchemaOrder(jsonSchema, uiSchemaFromDescriptors));\n};\n\n// Use jsonSchema, descriptors, and some defaults to generate a uiSchema\nexport const getUISchema = (jsonSchema, providedAPI) => {\n  return {\n    metadata: {\n      ...hideAllExistingProperties(jsonSchema?.properties?.metadata as JSONSchema7),\n      name: {\n        'ui:title': i18n.t('public~Name'),\n        'ui:widget': 'TextWidget',\n      },\n      labels: {\n        'ui:title': i18n.t('public~Labels'),\n        'ui:field': 'LabelsField',\n      },\n      'ui:options': {\n        label: false,\n      },\n      'ui:order': ['name', 'labels', '*'],\n    },\n    spec: {\n      ...descriptorsToUISchema(providedAPI?.specDescriptors, jsonSchema?.properties?.spec),\n      'ui:options': {\n        label: false,\n      },\n    },\n    'ui:order': ['metadata', 'spec', '*'],\n  };\n};\n","import { JSONSchema7 } from 'json-schema';\nimport { JSONSchemaType } from '@console/shared/src/components/dynamic-form';\n\nexport const DEFAULT_K8S_SCHEMA: JSONSchema7 = {\n  type: JSONSchemaType.object,\n  properties: {\n    metadata: {\n      type: JSONSchemaType.object,\n      properties: {\n        namespace: { type: JSONSchemaType.string },\n        name: {\n          type: JSONSchemaType.string,\n          default: 'example',\n        },\n        labels: {\n          type: JSONSchemaType.object,\n          properties: {},\n          additionalProperties: { type: JSONSchemaType.string },\n        },\n      },\n      required: ['name'],\n    },\n    spec: { type: JSONSchemaType.object },\n    apiVersion: { type: JSONSchemaType.string },\n    kind: { type: JSONSchemaType.string },\n  },\n};\n\nexport const HIDDEN_UI_SCHEMA = {\n  'ui:widget': 'hidden',\n  'ui:options': { label: false },\n};\n","import * as Immutable from 'immutable';\nimport {\n  NodeAffinityField,\n  PodAffinityField,\n  ResourceRequirementsField,\n  UpdateStrategyField,\n} from '@console/shared/src/components/dynamic-form/fields';\nimport {\n  CheckboxWidget,\n  ImagePullPolicyWidget,\n  NumberWidget,\n  PasswordWidget,\n  SwitchWidget,\n  TextWidget,\n  PodCountWidget,\n  SelectWidget,\n} from '@console/shared/src/components/dynamic-form/widgets';\nimport { SpecCapability } from '../types';\n\nexport const capabilityFieldMap = Immutable.Map({\n  [SpecCapability.nodeAffinity]: NodeAffinityField,\n  [SpecCapability.podAffinity]: PodAffinityField,\n  [SpecCapability.podAntiAffinity]: PodAffinityField,\n  [SpecCapability.resourceRequirements]: ResourceRequirementsField,\n  [SpecCapability.updateStrategy]: UpdateStrategyField,\n});\n\nexport const capabilityWidgetMap = Immutable.Map({\n  [SpecCapability.hidden]: 'hidden',\n  [SpecCapability.imagePullPolicy]: ImagePullPolicyWidget,\n  [SpecCapability.booleanSwitch]: SwitchWidget,\n  [SpecCapability.checkbox]: CheckboxWidget,\n  [SpecCapability.number]: NumberWidget,\n  [SpecCapability.password]: PasswordWidget,\n  [SpecCapability.podCount]: PodCountWidget,\n  [SpecCapability.text]: TextWidget,\n  [SpecCapability.select]: SelectWidget,\n});\n"],"sourceRoot":""}