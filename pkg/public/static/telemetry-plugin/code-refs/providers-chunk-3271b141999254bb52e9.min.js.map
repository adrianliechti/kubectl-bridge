{"version":3,"sources":["webpack:///./packages/console-telemetry-plugin/src/providers/index.ts","webpack:///./packages/console-telemetry-plugin/src/listeners/const.ts","webpack:///./packages/console-telemetry-plugin/src/providers/telemetry-provider.ts","webpack:///./packages/console-telemetry-plugin/src/const.ts"],"names":["TELEMETRY_DISABLED","window","SERVER_FLAGS","telemetry","DISABLED","DEVSANDBOX_DISABLED","TELEMETER_CLIENT_DISABLED","TELEMETRY_DEBUG","DEBUG","apiKey","DEVSANDBOX_SEGMENT_API_KEY","SEGMENT_API_KEY","useTelemetryProvider","setFeatureFlag","STATE","OPTIN","OPTOUT","isTelemetryUserPreferenceEnabled","FLAG_TELEMETRY_ENABLED","FLAG_TELEMETRY_USER_PREFERENCE"],"mappings":"6FAAA,6E,0HCAO,MAAMA,EACkC,UAAf,QAA9B,EAAmB,QAAnB,EAAAC,OAAOC,oBAAY,eAAEC,iBAAS,eAAEC,WACwB,UAA1B,QAA9B,EAAmB,QAAnB,EAAAH,OAAOC,oBAAY,eAAEC,iBAAS,eAAEE,sBAC8B,UAAhC,QAA9B,EAAmB,QAAnB,EAAAJ,OAAOC,oBAAY,eAAEC,iBAAS,eAAEG,2BAErBC,EAA4D,UAAZ,QAA9B,EAAmB,QAAnB,EAAAN,OAAOC,oBAAY,eAAEC,iBAAS,eAAEK,Q,4GCA/D,MAAMC,GAC0B,QAA9B,EAAmB,QAAnB,EAAAR,OAAOC,oBAAY,eAAEC,iBAAS,eAAEO,8BACF,QAA9B,EAAmB,QAAnB,EAAAT,OAAOC,oBAAY,eAAEC,iBAAS,eAAEQ,kBAChC,GASWC,EAAwBC,IACnCA,EAAe,IAAwBJ,IAAW,KAClDI,EAAe,IATwB,M,QACvC,OAC+B,QAA7B,EAAAZ,OAAOC,aAAaC,iBAAS,eAAEW,SAAU,IAA4BC,QACxC,QAA7B,EAAAd,OAAOC,aAAaC,iBAAS,eAAEW,SAAU,IAA4BE,QAMxBC,M,kCCnBjD,oEAAO,MAAMC,EAAyB,oBACzBC,EAAiC","file":"telemetry-plugin/code-refs/providers-chunk-3271b141999254bb52e9.min.js","sourcesContent":["export { useTelemetryProvider } from './telemetry-provider';\n","export const TELEMETRY_DISABLED =\n  window.SERVER_FLAGS?.telemetry?.DISABLED === 'true' ||\n  window.SERVER_FLAGS?.telemetry?.DEVSANDBOX_DISABLED === 'true' ||\n  window.SERVER_FLAGS?.telemetry?.TELEMETER_CLIENT_DISABLED === 'true';\n\nexport const TELEMETRY_DEBUG = window.SERVER_FLAGS?.telemetry?.DEBUG === 'true';\n","import { SetFeatureFlag } from '@console/dynamic-plugin-sdk';\nimport { CLUSTER_TELEMETRY_ANALYTICS } from '@console/shared';\nimport { FLAG_TELEMETRY_ENABLED, FLAG_TELEMETRY_USER_PREFERENCE } from '../const';\nimport { TELEMETRY_DISABLED } from '../listeners/const';\n\nconst apiKey =\n  window.SERVER_FLAGS?.telemetry?.DEVSANDBOX_SEGMENT_API_KEY ||\n  window.SERVER_FLAGS?.telemetry?.SEGMENT_API_KEY ||\n  '';\n\nconst isTelemetryUserPreferenceEnabled = () => {\n  return (\n    window.SERVER_FLAGS.telemetry?.STATE === CLUSTER_TELEMETRY_ANALYTICS.OPTIN ||\n    window.SERVER_FLAGS.telemetry?.STATE === CLUSTER_TELEMETRY_ANALYTICS.OPTOUT\n  );\n};\n\nexport const useTelemetryProvider = (setFeatureFlag: SetFeatureFlag) => {\n  setFeatureFlag(FLAG_TELEMETRY_ENABLED, apiKey && !TELEMETRY_DISABLED);\n  setFeatureFlag(FLAG_TELEMETRY_USER_PREFERENCE, isTelemetryUserPreferenceEnabled());\n};\n","export const FLAG_TELEMETRY_ENABLED = 'TELEMETRY_ENABLED';\nexport const FLAG_TELEMETRY_USER_PREFERENCE = 'TELEMETRY_USER_PREFERENCE';\n"],"sourceRoot":""}