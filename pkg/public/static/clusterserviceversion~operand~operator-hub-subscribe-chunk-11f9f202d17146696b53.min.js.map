{"version":3,"sources":["webpack:///./packages/operator-lifecycle-manager/src/components/operand/index.tsx","webpack:///./public/components/modals/configure-update-strategy-modal.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/types.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/utils.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operand/operand-link.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/const.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/resource-requirements.tsx","webpack:///./packages/operator-lifecycle-manager/src/utils/clusterserviceversions.ts","webpack:///./packages/operator-lifecycle-manager/src/utils/useClusterServiceVersion.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/common.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operand/useShowOperandsInAllNamespaces.ts","webpack:///./packages/console-shared/src/hooks/useResourceListPages.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/k8s-resource.tsx","webpack:///./packages/console-shared/src/hooks/useResourceDetailsPage.ts","webpack:///./packages/console-shared/src/hooks/useResourceDetailsPages.tsx","webpack:///./packages/console-shared/src/hooks/useResourceListPage.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/index.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/index.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/configure-size.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/configure-update-strategy.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/modals/update-strategy-modal.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/endpoint.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/status/index.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/status/phase.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/status/pods.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/status/conditions.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operand/ShowOperandsInAllNamespacesRadioGroup.tsx"],"names":["tableColumnClasses","columnClass","getOperandStatus","obj","phase","status","state","conditions","type","value","formattedConditions","Array","isArray","trueConditions","filter","c","length","types","map","join","hasAllNamespaces","csv","olmTargetNamespaces","metadata","annotations","managedNamespaces","split","OperandStatus","operand","className","title","getOperandStatusText","OperandTableRow","showNamespace","context","resource","kind","namespace","name","labels","timestamp","creationTimestamp","isDisabled","getOperandNamespace","OperandList","props","t","noAPIsFound","nameHeader","sortField","transforms","kindHeader","namespaceHeader","sortFunc","statusHeader","labelsHeader","lastUpdatedHeader","kebabHeader","data","apiVersion","reference","kinds","customSorts","operandStatus","EmptyMsg","Header","Row","listProps","virtualize","ProvidedAPIsPage","location","showOperandsInAllNamespaces","showTitle","hideLabelFilter","hideNameLabelFilters","hideColumnManagement","models","inFlight","navigate","dispatch","apiRefreshed","setAPIRefreshed","providedAPIs","flatten","resources","item","i","allResources","ownerRefs","ownerReferences","items","uid","managesAllNamespaces","some","api","model","namespaced","listAllNamespaces","watchedResources","reduce","resourceAccumulator","apiGroup","group","version","groupVersionKind","isList","getK8sWatchResources","apiMightBeOutdated","Object","keys","createItems","acc","displayName","rowFilters","filterGroupName","reducer","id","filters","selected","includes","staticData","filteredData","onFilterChange","loaded","values","every","r","loadError","find","undefined","onClick","pathname","replace","DefaultProvidedAPIPage","createPath","label","labelPlural","k8sModel","to","ProvidedAPIPage","resourceListPage","loader","PodStatuses","kindObj","podStatusDescriptors","schema","statusDescriptor","key","path","descriptor","OperandDetails","crd","errorMessage","setErrorMessage","specDescriptors","statusDescriptors","spec","customresourcedefinitions","owned","required","def","versions","v","openAPIV3Schema","podStatuses","mainStatusDescriptor","conditionsStatusDescriptors","otherStatusDescriptors","message","text","descriptors","itemClassName","onError","err","DefaultOperandDetailsPage","params","appName","ns","plural","actionItems","resourceModel","variant","DROPDOWN","customData","prop","customActionMenu","createRedirect","breadcrumbsFor","slice","lastIndexOf","pages","details","editYaml","nameKey","href","component","events","OperandDetailsPage","resourceDetailsPage","getNumberOrPercent","indexOf","ConfigureUpdateStrategy","showDescription","onChange","e","onChangeStrategyType","target","checked","strategyType","subTitle","autoFocus","htmlFor","disabled","placeholder","size","maxUnavailable","onChangeMaxUnavailable","replicas","content","count","maxSurge","onChangeMaxSurge","desc","ConfigureUpdateStrategyModal","setStrategyType","deployment","setMaxUnavailable","setMaxSurge","onSubmit","event","preventDefault","patch","op","promise","handlePromise","close","inProgress","submitText","cancel","configureUpdateStrategyModal","DescriptorType","SpecCapability","StatusCapability","CommonCapability","useCalculatedDescriptorProperties","descriptorType","propertySchema","fullPath","description","groupDescriptorDetails","test","hidden","beforeIndex","afterIndex","match","subgroup","nested","arrayGroupPath","isArrayGroup","elementDescriptor","handleArrayDescriptor","getPatchPathFromDescriptor","getValidCapabilitiesForDataType","compatibleCapabilities","getCompatibleCapabilities","capability","isCompatible","compatibleCapability","startsWith","deprecatedCapability","console","warn","sort","a","b","aIndex","findIndex","bIndex","getValidCapabilitiesForValue","getValueType","getValidCapabilitiesForSchema","isMainStatusDescriptor","csvNameFromWindow","window","part","allParts","OperandLink","csvName","classes","inline","REGEXP_K8S_RESOURCE_CAPABILITY","k8sResourcePrefix","REGEXP_FIELD_DEPENDENCY_CAPABILITY","fieldDependency","REGEXP_SELECT_CAPABILITY","select","REGEXP_K8S_RESOURCE_SUFFIX","RegExp","REGEXP_SELECT_OPTION","REGEXP_FIELD_DEPENDENCY_PATH_VALUE","REGEXP_ARRAY_PATH","REGEXP_NESTED_ARRAY_PATH","REGEXP_CAPTURE_GROUP_SUBGROUP","DEPRECATED_CAPABILITIES","arrayFieldGroup","fieldGroup","namespaceSelector","COMMON_COMPATIBLE_CAPABILITIES","advanced","OBJECT_COMPATIBLE_CAPABILITIES","updateStrategy","nodeAffinity","podAffinity","podAntiAffinity","resourceRequirements","selector","ARRAY_COMPATIBLE_CAPABILITIES","endpointList","PRIMITIVE_COMPATIBLE_CAPABILITIES","k8sPhase","k8sPhaseReason","imagePullPolicy","podCount","w3Link","booleanSwitch","checkbox","password","number","CAPABILITY_SORT_ORDER","ResourceRequirements","cpu","memory","storage","onChangeCPU","onChangeMemory","onChangeStorage","style","fontWeight","ResourceRequirementsModal","setCPU","setMemory","setStorage","newObj","submit","ResourceRequirementsModalLink","k8s","getIn","none","isInline","modal","isCSV","Boolean","isCopiedCSV","reason","isStandaloneCSV","OperatorType","CSVPhaseFailed","copiedCSVsDisabled","SERVER_FLAGS","useClusterServiceVersion","namespacedCSV","namespacedCSVLoaded","namespacedCSVLoadError","optional","globalCSV","globalCSVLoaded","globalCSVLoadError","Invalid","DefaultCapability","detail","K8sResourceLinkCapability","suffix","gvk","SecretCapability","reveal","setReveal","encoded","useShowOperandsInAllNamespaces","UI","get","useResourceListPages","resourceListPageExtensions","dynamicResourceListPageExtensions","DEFAULT_RESOURCES","ResourceTableRow","linkFor","providedAPI","ResourceTable","flattenCsvResources","parentObj","ref","concat","linkForCsvResource","Resources","firehoseResources","substring","filterLabel","ListComponent","useResourceDetailsPage","detailsPages","useResourceDetailsPages","resourceDetailsPageExtensions","dynamicResourceDetailsPageExtensions","useResourceListPage","listPages","DescriptorDetailsItem","descriptorProps","DescriptorDetailsItemArrayGroup","groupPath","arrayGroupSchema","arrayElementDescriptors","primitiveDescriptor","String","DescriptorDetailsItemGroup","groupSchema","arrayGroups","primitives","arrayGroup","DescriptorDetailsItemList","groupedDescriptors","groupProps","commonProps","PodCount","onEdit","specDescriptor","specValue","Endpoints","endpoints","Label","NamespaceSelector","matchNames","BasicSelector","BooleanSwitch","setChecked","confirmed","setConfirmed","errorCb","isChecked","_event","val","labelOff","patchFor","catch","CheckboxUIComponent","marginLeft","UpdateStrategy","SpecDescriptorDetailsItem","Component","configureSizeModal","resourceKind","defaultValue","titleKey","titleVariables","buttonTextKey","buttonTextVariables","UpdateStrategyModal","getPath","then","updateStrategyModal","EndpointRow","endpoint","element","field","port","interval","EndpointList","statuses","Link","K8sPhase","K8sPhaseReason","width","MainStatus","StatusDescriptorDetailsItem","Phase","colorScale","PodStatusChart","podList","x","y","total","sum","dataPoint","podStatusInnerRadius","podStatusOuterRadius","constrainToVisibleArea","height","toString","innerRadius","radius","DescriptorConditions","validateConditionsDescriptor","ShowOperandsInAllNamespacesRadioGroup","setShowOperandsInAllNamespaces","currentValue","currentTarget"],"mappings":"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","file":"clusterserviceversion~operand~operator-hub-subscribe-chunk-11f9f202d17146696b53.min.js","sourcesContent":["import * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useDispatch } from 'react-redux';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom-v5-compat';\nimport { ListPageBody, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { getResources } from '@console/internal/actions/k8s';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { ResourceEventStream } from '@console/internal/components/events';\nimport {\n  DetailsPage,\n  Table,\n  TableData,\n  RowFunctionArgs,\n  Flatten,\n  Filter,\n} from '@console/internal/components/factory';\nimport { useListPageFilter } from '@console/internal/components/factory/ListPage/filter-hook';\nimport {\n  ListPageCreateDropdown,\n  ListPageCreateLink,\n} from '@console/internal/components/factory/ListPage/ListPageCreate';\nimport ListPageFilter from '@console/internal/components/factory/ListPage/ListPageFilter';\nimport ListPageHeader from '@console/internal/components/factory/ListPage/ListPageHeader';\nimport {\n  Kebab,\n  LabelList,\n  ConsoleEmptyState,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  navFactory,\n  ResourceLink,\n  AsyncComponent,\n} from '@console/internal/components/utils';\nimport {\n  useK8sWatchResources,\n  useK8sWatchResource,\n} from '@console/internal/components/utils/k8s-watch-hook';\nimport { connectToModel } from '@console/internal/kinds';\nimport { CustomResourceDefinitionModel } from '@console/internal/models';\nimport {\n  GroupVersionKind,\n  K8sKind,\n  K8sResourceCondition,\n  K8sResourceKind,\n  OwnerReference,\n  apiVersionForReference,\n  kindForReference,\n  referenceFor,\n  referenceForModel,\n  nameForModel,\n  CustomResourceDefinitionKind,\n  definitionFor,\n  K8sResourceCommon,\n} from '@console/internal/module/k8s';\nimport {\n  Status,\n  SuccessStatus,\n  LazyActionMenu,\n  ActionMenuVariant,\n  getNamespace,\n  useActiveNamespace,\n} from '@console/shared';\nimport ErrorAlert from '@console/shared/src/components/alerts/error';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { useK8sModels } from '@console/shared/src/hooks/useK8sModels';\nimport { useResourceDetailsPage } from '@console/shared/src/hooks/useResourceDetailsPage';\nimport { useResourceListPage } from '@console/shared/src/hooks/useResourceListPage';\nimport { RouteParams } from '@console/shared/src/types';\nimport { ClusterServiceVersionModel } from '../../models';\nimport { ClusterServiceVersionKind, ProvidedAPI } from '../../types';\nimport { useClusterServiceVersion } from '../../utils/useClusterServiceVersion';\nimport { DescriptorDetailsItem, DescriptorDetailsItemList } from '../descriptors';\nimport { DescriptorConditions } from '../descriptors/status/conditions';\nimport { DescriptorType, StatusCapability, StatusDescriptor } from '../descriptors/types';\nimport { isMainStatusDescriptor } from '../descriptors/utils';\nimport { providedAPIsForCSV, referenceForProvidedAPI } from '../index';\nimport { Resources } from '../k8s-resource';\nimport { OperandLink } from './operand-link';\nimport { ShowOperandsInAllNamespacesRadioGroup } from './ShowOperandsInAllNamespacesRadioGroup';\nimport { useShowOperandsInAllNamespaces } from './useShowOperandsInAllNamespaces';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-2xl'),\n  Kebab.columnClass,\n];\n\nconst getOperandStatus = (obj: K8sResourceKind): OperandStatusType => {\n  const { phase, status, state, conditions } = obj?.status || {};\n\n  if (phase && _.isString(phase)) {\n    return {\n      type: 'Phase',\n      value: phase,\n    };\n  }\n\n  if (status && _.isString(status)) {\n    return {\n      type: 'Status',\n      value: status,\n    };\n  }\n\n  if (state && _.isString(state)) {\n    return {\n      type: 'State',\n      value: state,\n    };\n  }\n\n  const conditionsIsObject =\n    typeof conditions === 'object' && !Array.isArray(conditions) && conditions !== null;\n  const formattedConditions = conditionsIsObject ? [conditions] : conditions;\n\n  const trueConditions = formattedConditions?.filter(\n    (c: K8sResourceCondition) => c.status === 'True',\n  );\n  if (trueConditions?.length) {\n    const types = trueConditions.map((c: K8sResourceCondition) => c.type);\n    return {\n      type: types.length === 1 ? 'Condition' : 'Conditions',\n      value: types.join(', '),\n    };\n  }\n\n  return null;\n};\n\nconst hasAllNamespaces = (csv: ClusterServiceVersionKind) => {\n  const olmTargetNamespaces = csv?.metadata?.annotations?.['olm.targetNamespaces'] ?? '';\n  const managedNamespaces = olmTargetNamespaces?.split(',') || [];\n  return managedNamespaces.length === 1 && managedNamespaces[0] === '';\n};\n\nexport const OperandStatus: React.FC<OperandStatusProps> = ({ operand }) => {\n  const status: OperandStatusType = getOperandStatus(operand);\n  if (!status) {\n    return <>-</>;\n  }\n\n  const { type, value } = status;\n  return (\n    <span className=\"co-icon-and-text\">\n      {type}\n      <span className=\"pf-v5-u-pr-sm\">:</span>{' '}\n      {value === 'Running' ? <SuccessStatus title={value} /> : <Status status={value} />}\n    </span>\n  );\n};\n\nconst getOperandStatusText = (operand: K8sResourceKind): string => {\n  const status = getOperandStatus(operand);\n  return status ? `${status.type}: ${status.value}` : '';\n};\n\nexport const OperandTableRow: React.FC<OperandTableRowProps> = ({ obj, showNamespace }) => {\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj, 'csv-actions': { resource: obj } };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <OperandLink obj={obj} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        data-test-operand-kind={obj.kind}\n      >\n        {obj.kind}\n      </TableData>\n      {showNamespace && (\n        <TableData className={tableColumnClasses[2]}>\n          {obj.metadata.namespace ? (\n            <ResourceLink\n              kind=\"Namespace\"\n              title={obj.metadata.namespace}\n              name={obj.metadata.namespace}\n            />\n          ) : (\n            '-'\n          )}\n        </TableData>\n      )}\n      <TableData className={tableColumnClasses[3]}>\n        <OperandStatus operand={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <LabelList kind={obj.kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} isDisabled={_.has(obj.metadata, 'deletionTimestamp')} />\n      </TableData>\n    </>\n  );\n};\n\nconst getOperandNamespace = (obj: ClusterServiceVersionKind): string | null => getNamespace(obj);\n\nexport const OperandList: React.FC<OperandListProps> = (props) => {\n  const { t } = useTranslation();\n  const { noAPIsFound, showNamespace } = props;\n\n  const nameHeader: Header = {\n    title: t('public~Name'),\n    sortField: 'metadata.name',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[0] },\n  };\n  const kindHeader: Header = {\n    title: t('public~Kind'),\n    sortField: 'kind',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[1] },\n  };\n  const namespaceHeader: Header = {\n    title: t('public~Namespace'),\n    sortFunc: 'getOperandNamespace',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[2] },\n  };\n  const statusHeader: Header = {\n    title: t('public~Status'),\n    sortFunc: 'operandStatus',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[3] },\n  };\n  const labelsHeader: Header = {\n    title: t('public~Labels'),\n    sortField: 'metadata.labels',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[4] },\n  };\n  const lastUpdatedHeader: Header = {\n    title: t('public~Last updated'),\n    sortField: 'metadata.creationTimestamp',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[5] },\n  };\n  const kebabHeader: Header = {\n    title: '',\n    props: { className: tableColumnClasses[6] },\n  };\n\n  const AllNsHeader = (): Header[] => [\n    nameHeader,\n    kindHeader,\n    namespaceHeader,\n    statusHeader,\n    labelsHeader,\n    lastUpdatedHeader,\n    kebabHeader,\n  ];\n  const CurrentNsHeader = (): Header[] => [\n    nameHeader,\n    kindHeader,\n    statusHeader,\n    labelsHeader,\n    lastUpdatedHeader,\n    kebabHeader,\n  ];\n\n  const data = React.useMemo(\n    () =>\n      props.data?.map?.((obj) => {\n        if (obj.apiVersion && obj.kind) {\n          return obj;\n        }\n        const reference = props.kinds[0];\n        return {\n          apiVersion: apiVersionForReference(reference),\n          kind: kindForReference(reference),\n          ...obj,\n        };\n      }) ?? [],\n    [props.data, props.kinds],\n  );\n\n  return (\n    <Table\n      {...props}\n      customSorts={{\n        operandStatus: getOperandStatusText,\n        getOperandNamespace,\n      }}\n      data={data}\n      EmptyMsg={() =>\n        noAPIsFound ? (\n          <ConsoleEmptyState title={t('olm~No provided APIs defined')}>\n            {t('olm~This application was not properly installed or configured.')}\n          </ConsoleEmptyState>\n        ) : (\n          <ConsoleEmptyState title={t('olm~No operands found')}>\n            {t(\n              'olm~Operands are declarative components used to define the behavior of the application.',\n            )}\n          </ConsoleEmptyState>\n        )\n      }\n      aria-label=\"Operands\"\n      Header={showNamespace ? AllNsHeader : CurrentNsHeader}\n      Row={(listProps) => <OperandTableRow {...listProps} showNamespace={showNamespace} />}\n      virtualize\n    />\n  );\n};\n\nconst getK8sWatchResources = (\n  models: ProvidedAPIModels,\n  providedAPIs: ProvidedAPI[],\n  namespace?: string,\n): GetK8sWatchResources => {\n  return providedAPIs.reduce((resourceAccumulator, api) => {\n    const reference = referenceForProvidedAPI(api);\n    const model = models?.[reference];\n\n    if (!model) {\n      return resourceAccumulator;\n    }\n\n    const { apiGroup: group, apiVersion: version, kind, namespaced } = model;\n    return {\n      ...resourceAccumulator,\n      [api.kind]: {\n        groupVersionKind: { group, version, kind },\n        isList: true,\n        namespaced,\n        ...(namespaced && namespace ? { namespace } : {}),\n      },\n    };\n  }, {});\n};\n\nexport const ProvidedAPIsPage = (props: ProvidedAPIsPageProps) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const [namespace] = useActiveNamespace();\n  const [showOperandsInAllNamespaces] = useShowOperandsInAllNamespaces();\n  const {\n    obj,\n    showTitle = true,\n    hideLabelFilter = false,\n    hideNameLabelFilters = false,\n    hideColumnManagement = false,\n  } = props;\n  const [models, inFlight] = useK8sModels();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [apiRefreshed, setAPIRefreshed] = React.useState(false);\n\n  // Map APIs provided by this CSV to Firehose resources. Exclude APIs that do not have a model.\n  const providedAPIs = providedAPIsForCSV(obj);\n\n  const owners = (ownerRefs: OwnerReference[], items: K8sResourceKind[]) =>\n    ownerRefs.filter(({ uid }) => items.filter(({ metadata }) => metadata.uid === uid).length > 0);\n  const flatten: Flatten<{\n    [key: string]: K8sResourceCommon[];\n  }> = React.useCallback(\n    (resources) =>\n      _.flatMap(resources, (resource) => _.map(resource.data, (item) => item)).filter(\n        ({ kind, metadata }, i, allResources) =>\n          providedAPIs.filter((item) => item.kind === kind).length > 0 ||\n          owners(metadata.ownerReferences || [], allResources).length > 0,\n      ),\n    [providedAPIs],\n  );\n\n  const hasNamespacedAPI = providedAPIs.some((api) => {\n    const reference = referenceForProvidedAPI(api);\n    const model = models[reference];\n\n    return model?.namespaced;\n  });\n\n  const managesAllNamespaces = hasNamespacedAPI && hasAllNamespaces(obj);\n  const listAllNamespaces = managesAllNamespaces && showOperandsInAllNamespaces;\n  const watchedResources = getK8sWatchResources(\n    models,\n    providedAPIs,\n    listAllNamespaces ? null : namespace,\n  );\n\n  const resources = useK8sWatchResources<{ [key: string]: K8sResourceKind[] }>(watchedResources);\n\n  // Refresh API definitions if at least one API is missing a model and definitions have not already been refreshed.\n  const apiMightBeOutdated =\n    !inFlight && Object.keys(watchedResources).length < providedAPIs.length;\n  React.useEffect(() => {\n    if (!apiRefreshed && apiMightBeOutdated) {\n      dispatch(getResources());\n      setAPIRefreshed(true);\n    }\n  }, [apiMightBeOutdated, apiRefreshed, dispatch]);\n\n  const createItems =\n    providedAPIs.length > 1\n      ? providedAPIs.reduce(\n          (acc, api) => ({ ...acc, [referenceForProvidedAPI(api)]: api.displayName || api.kind }),\n          {},\n        )\n      : {};\n\n  const createNavigate = (kind) => navigate(`${location.pathname.replace('instances', kind)}/~new`);\n\n  const data = React.useMemo(() => flatten(resources), [resources, flatten]);\n\n  const rowFilters =\n    Object.keys(watchedResources).length > 1\n      ? [\n          {\n            filterGroupName: t('olm~Resource Kind'),\n            type: 'clusterserviceversion-resource-kind',\n            reducer: ({ kind }) => kind,\n            items: Object.keys(watchedResources).map((kind) => ({\n              id: kindForReference(kind),\n              title: kindForReference(kind),\n            })),\n            filter: (filters, resource) => {\n              if (!filters || !filters.selected || !filters.selected.length) {\n                return true;\n              }\n              return filters.selected.includes(resource.kind);\n            },\n          },\n        ]\n      : [];\n\n  const [staticData, filteredData, onFilterChange] = useListPageFilter(data, rowFilters);\n  const loaded = Object.values(resources).every((r) => r.loaded);\n  // only pass the first loadError as StatusBox can only display one\n  const loadError: Record<string, any> = Object.values(resources).find((r) => r.loadError)\n    ?.loadError;\n\n  return inFlight ? null : (\n    <>\n      <ListPageHeader title={showTitle ? t('olm~All Instances') : undefined}>\n        {managesAllNamespaces && (\n          <div className=\"co-operator-details__toggle-value pf-v5-u-ml-xl-on-md\">\n            <ShowOperandsInAllNamespacesRadioGroup />\n          </div>\n        )}\n        <ListPageCreateDropdown onClick={createNavigate} items={createItems}>\n          {t('olm~Create new')}\n        </ListPageCreateDropdown>\n      </ListPageHeader>\n      <ListPageBody>\n        <ListPageFilter\n          data={staticData}\n          loaded={loaded}\n          rowFilters={rowFilters}\n          onFilterChange={onFilterChange}\n          hideNameLabelFilters={hideNameLabelFilters}\n          hideLabelFilter={hideLabelFilter}\n          hideColumnManagement={hideColumnManagement}\n        />\n        <OperandList\n          data={filteredData}\n          loaded={loaded}\n          loadError={loadError}\n          noAPIsFound={Object.keys(watchedResources).length === 0}\n          showNamespace={listAllNamespaces}\n        />\n      </ListPageBody>\n    </>\n  );\n};\n\nconst DefaultProvidedAPIPage: React.FC<DefaultProvidedAPIPageProps> = (props) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const [showOperandsInAllNamespaces] = useShowOperandsInAllNamespaces();\n\n  const {\n    namespace,\n    csv,\n    showTitle = true,\n    hideLabelFilter = false,\n    hideNameLabelFilters = false,\n    hideColumnManagement = false,\n  } = props;\n  const createPath = `${location.pathname}/~new`;\n\n  const {\n    apiGroup: group,\n    apiVersion: version,\n    kind,\n    namespaced,\n    label,\n    labelPlural,\n  } = props.k8sModel;\n  const managesAllNamespaces = namespaced && hasAllNamespaces(csv);\n  const listAllNamespaces = managesAllNamespaces && showOperandsInAllNamespaces;\n  const [resources, loaded, loadError] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: { group, version, kind },\n    isList: true,\n    namespaced,\n    ...(!listAllNamespaces && namespaced && namespace ? { namespace } : {}),\n  });\n\n  const [staticData, filteredData, onFilterChange] = useListPageFilter(resources);\n\n  return (\n    <>\n      <ListPageHeader title={showTitle ? `${labelPlural}` : undefined}>\n        {managesAllNamespaces && (\n          <div className=\"co-operator-details__toggle-value pf-v5-u-ml-xl-on-md\">\n            <ShowOperandsInAllNamespacesRadioGroup />\n          </div>\n        )}\n        <ListPageCreateLink to={createPath}>\n          {t('public~Create {{label}}', { label })}\n        </ListPageCreateLink>\n      </ListPageHeader>\n      <ListPageBody>\n        <ListPageFilter\n          data={staticData}\n          loaded={loaded}\n          onFilterChange={onFilterChange}\n          hideNameLabelFilters={hideNameLabelFilters}\n          hideLabelFilter={hideLabelFilter}\n          hideColumnManagement={hideColumnManagement}\n        />\n        <OperandList\n          data={filteredData}\n          loaded={loaded}\n          loadError={loadError}\n          showNamespace={listAllNamespaces}\n        />\n      </ListPageBody>\n    </>\n  );\n};\n\nexport const ProvidedAPIPage = (props: ProvidedAPIPageProps) => {\n  const resourceListPage = useResourceListPage(props.kind);\n  const [namespace] = useActiveNamespace();\n  const [k8sModel, inFlight] = useK8sModel(props.kind);\n  const [apiRefreshed, setAPIRefreshed] = React.useState(false);\n  const dispatch = useDispatch();\n\n  // Refresh API definitions if model is missing and the definitions have not already been refreshed.\n  const apiMightBeOutdated = !inFlight && !k8sModel;\n  React.useEffect(() => {\n    if (!apiRefreshed && apiMightBeOutdated) {\n      dispatch(getResources());\n      setAPIRefreshed(true);\n    }\n  }, [dispatch, apiRefreshed, apiMightBeOutdated]);\n\n  if (inFlight && !k8sModel) {\n    return null;\n  }\n\n  if (!k8sModel) {\n    return <ErrorPage404 />;\n  }\n\n  const { apiGroup: group, apiVersion: version, kind } = k8sModel;\n\n  return resourceListPage ? (\n    <AsyncComponent\n      {...props}\n      name={null}\n      model={{ group, version, kind }}\n      kind={props.kind}\n      namespace={namespace}\n      loader={resourceListPage}\n    />\n  ) : (\n    <DefaultProvidedAPIPage {...props} namespace={namespace} k8sModel={k8sModel} />\n  );\n};\n\nconst PodStatuses: React.FC<PodStatusesProps> = ({ kindObj, obj, podStatusDescriptors, schema }) =>\n  podStatusDescriptors?.length > 0 ? (\n    <div className=\"row\">\n      {podStatusDescriptors.map((statusDescriptor: StatusDescriptor) => {\n        return (\n          <DescriptorDetailsItem\n            className=\"col-sm-6\"\n            key={statusDescriptor.path}\n            type={DescriptorType.status}\n            descriptor={statusDescriptor}\n            model={kindObj}\n            obj={obj}\n            schema={schema}\n          />\n        );\n      })}\n    </div>\n  ) : null;\n\nexport const OperandDetails = connectToModel(({ crd, csv, kindObj, obj }: OperandDetailsProps) => {\n  const { t } = useTranslation();\n  const { kind, status } = obj;\n  const [errorMessage, setErrorMessage] = React.useState(null);\n  const handleError = (err: Error) => setErrorMessage(err.message);\n\n  // Find the matching CRD spec for the kind of this resource in the CSV.\n  const { displayName, specDescriptors, statusDescriptors, version } =\n    [\n      ...(csv?.spec?.customresourcedefinitions?.owned ?? []),\n      ...(csv?.spec?.customresourcedefinitions?.required ?? []),\n    ].find((def) => {\n      return def.name === crd?.metadata?.name && def.version === kindObj?.apiVersion;\n    }) ?? {};\n\n  const schema =\n    crd?.spec?.versions?.find((v) => v.name === version)?.schema?.openAPIV3Schema ??\n    (definitionFor(kindObj) as JSONSchema7);\n\n  const {\n    podStatuses,\n    mainStatusDescriptor,\n    conditionsStatusDescriptors,\n    otherStatusDescriptors,\n  } = (statusDescriptors ?? []).reduce((acc, descriptor) => {\n    if (isMainStatusDescriptor(descriptor)) {\n      return {\n        ...acc,\n        mainStatusDescriptor: descriptor,\n      };\n    }\n\n    if (\n      descriptor['x-descriptors']?.includes(StatusCapability.conditions) ||\n      descriptor.path === 'conditions'\n    ) {\n      return {\n        ...acc,\n        conditionsStatusDescriptors: [...(acc.conditionsStatusDescriptors ?? []), descriptor],\n      };\n    }\n\n    if (descriptor['x-descriptors']?.includes(StatusCapability.podStatuses)) {\n      return {\n        ...acc,\n        podStatuses: [...(acc.podStatuses ?? []), descriptor],\n      };\n    }\n\n    return {\n      ...acc,\n      otherStatusDescriptors: [...(acc.otherStatusDescriptors ?? []), descriptor],\n    };\n  }, {} as any);\n\n  return (\n    <div className=\"co-operand-details co-m-pane\">\n      <div className=\"co-m-pane__body\">\n        {errorMessage && <ErrorAlert message={errorMessage} />}\n        <SectionHeading text={t('olm~{{kind}} overview', { kind: displayName || kind })} />\n        <PodStatuses\n          kindObj={kindObj}\n          obj={obj}\n          schema={schema}\n          podStatusDescriptors={podStatuses}\n        />\n        <div className=\"co-operand-details__section co-operand-details__section--info\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={obj} />\n            </div>\n            {mainStatusDescriptor && (\n              <DescriptorDetailsItem\n                key={mainStatusDescriptor.path}\n                className=\"col-sm-6\"\n                descriptor={mainStatusDescriptor}\n                model={kindObj}\n                obj={obj}\n                schema={schema}\n                type={DescriptorType.status}\n              />\n            )}\n            {otherStatusDescriptors?.length > 0 && (\n              <DescriptorDetailsItemList\n                descriptors={otherStatusDescriptors}\n                itemClassName=\"col-sm-6\"\n                model={kindObj}\n                obj={obj}\n                schema={schema}\n                type={DescriptorType.status}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n      {!_.isEmpty(specDescriptors) && (\n        <div className=\"co-m-pane__body\">\n          <div className=\"co-operand-details__section co-operand-details__section--info\">\n            <div className=\"row\">\n              <DescriptorDetailsItemList\n                descriptors={specDescriptors}\n                itemClassName=\"col-sm-6\"\n                model={kindObj}\n                obj={obj}\n                onError={handleError}\n                schema={schema}\n                type={DescriptorType.spec}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n      {Array.isArray(status?.conditions) &&\n        (conditionsStatusDescriptors ?? []).every(({ path }) => path !== 'conditions') && (\n          <div className=\"co-m-pane__body\" data-test=\"status.conditions\">\n            <SectionHeading data-test=\"operand-conditions-heading\" text={t('public~Conditions')} />\n            <Conditions conditions={status.conditions} />\n          </div>\n        )}\n      {conditionsStatusDescriptors?.length > 0 &&\n        conditionsStatusDescriptors.map((descriptor) => (\n          <DescriptorConditions\n            key={descriptor.path}\n            descriptor={descriptor}\n            schema={schema}\n            obj={obj}\n          />\n        ))}\n    </div>\n  );\n});\n\ntype OperandDetailsPageRouteParams = RouteParams<'appName' | 'ns' | 'name' | 'plural'>;\n\nconst DefaultOperandDetailsPage = ({ k8sModel }: DefaultOperandDetailsPageProps) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const { appName, ns, name, plural } = params;\n  const location = useLocation();\n  const [csv] = useClusterServiceVersion(appName, ns);\n  const actionItems = React.useCallback((resourceModel: K8sKind, resource: K8sResourceKind) => {\n    const context = {\n      [referenceForModel(resourceModel)]: resource,\n      'csv-actions': { resource },\n    };\n    return <LazyActionMenu context={context} variant={ActionMenuVariant.DROPDOWN} />;\n  }, []);\n\n  return (\n    <DetailsPage\n      name={name}\n      kind={plural}\n      namespace={ns}\n      customData={csv}\n      resources={[\n        {\n          kind: CustomResourceDefinitionModel.kind,\n          name: nameForModel(k8sModel),\n          isList: false,\n          prop: 'crd',\n        },\n      ]}\n      customActionMenu={actionItems}\n      createRedirect\n      breadcrumbsFor={() => [\n        {\n          name: t('olm~Installed Operators'),\n          path: `/k8s/ns/${params.ns}/${ClusterServiceVersionModel.plural}`,\n        },\n        {\n          name: params.appName,\n          path: location.pathname.slice(0, location.pathname.lastIndexOf('/')),\n        },\n        {\n          name: t('olm~{{item}} details', { item: kindForReference(params.plural) }), // Use url param in case model doesn't exist\n          path: `${location.pathname}`,\n        },\n      ]}\n      pages={[\n        navFactory.details((props) => <OperandDetails {...props} csv={csv} />),\n        navFactory.editYaml(),\n        {\n          // t('olm~Resources')\n          nameKey: 'olm~Resources',\n          href: 'resources',\n          component: Resources,\n        },\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nexport const OperandDetailsPage = (props) => {\n  const { plural, ns, name } = useParams<OperandDetailsPageRouteParams>();\n  const resourceDetailsPage = useResourceDetailsPage(plural);\n  const [k8sModel, inFlight] = useK8sModel(plural);\n  if (inFlight && !k8sModel) {\n    return null;\n  }\n\n  if (!k8sModel) {\n    return <ErrorPage404 />;\n  }\n\n  const { apiVersion: version, apiGroup: group, kind } = k8sModel;\n  return resourceDetailsPage ? (\n    <AsyncComponent\n      {...props}\n      model={{ group, version, kind }}\n      namespace={ns}\n      kind={plural} // TODO remove when static plugins are no longer supported\n      name={name} // TODO remove when static plugins are no longer supported\n      loader={resourceDetailsPage}\n    />\n  ) : (\n    <DefaultOperandDetailsPage {...props} k8sModel={k8sModel} />\n  );\n};\n\ntype OperandStatusType = {\n  type: string;\n  value: string;\n};\n\nexport type OperandListProps = {\n  loaded: boolean;\n  kinds?: GroupVersionKind[];\n  data: K8sResourceKind[];\n  filters?: Filter[];\n  reduxID?: string;\n  reduxIDs?: string[];\n  rowSplitter?: any;\n  staticFilters?: any;\n  loadError?: Record<string, any>;\n  noAPIsFound?: boolean;\n  showNamespace?: boolean;\n};\n\nexport type OperandStatusProps = {\n  operand: K8sResourceKind;\n};\n\nexport type OperandHeaderProps = {\n  data: K8sResourceKind[];\n};\n\nexport type OperandRowProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ProvidedAPIsPageProps = {\n  obj: ClusterServiceVersionKind;\n  inFlight?: boolean;\n  showTitle?: boolean;\n  hideLabelFilter?: boolean;\n  hideNameLabelFilters?: boolean;\n  hideColumnManagement?: boolean;\n};\n\nexport type ProvidedAPIPageProps = {\n  csv: ClusterServiceVersionKind;\n  kind: GroupVersionKind;\n  showTitle?: boolean;\n  hideLabelFilter?: boolean;\n  hideNameLabelFilters?: boolean;\n  hideColumnManagement?: boolean;\n};\n\ntype DefaultProvidedAPIPageProps = ProvidedAPIPageProps & { k8sModel: K8sModel; namespace: string };\n\ntype PodStatusesProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n  podStatusDescriptors: StatusDescriptor[];\n  schema?: JSONSchema7;\n};\n\nexport type OperandDetailsProps = {\n  obj: K8sResourceKind;\n  appName: string;\n  kindObj: K8sKind;\n  csv: ClusterServiceVersionKind;\n  crd: CustomResourceDefinitionKind;\n};\n\ntype DefaultOperandDetailsPageProps = { customData: any; k8sModel: K8sModel };\n\nexport type OperandResourceDetailsProps = {\n  csv?: { data: ClusterServiceVersionKind };\n  gvk: GroupVersionKind;\n  name: string;\n  namespace: string;\n};\n\ntype Header = {\n  title: string;\n  sortField?: string;\n  sortFunc?: string;\n  transforms?: any;\n  props: { className: string };\n};\n\nexport type OperandTableRowProps = RowFunctionArgs<K8sResourceKind> & {\n  showNamespace?: boolean;\n};\n\ntype ProvidedAPIModels = { [key: string]: K8sKind };\n\ntype GetK8sWatchResources = {\n  [key: string]: {\n    kind: string;\n    isList: boolean;\n    namespace?: string;\n    namespaced?: boolean;\n  };\n};\n// TODO(alecmerdler): Find Webpack loader/plugin to add `displayName` to React components automagically\nOperandList.displayName = 'OperandList';\nOperandDetails.displayName = 'OperandDetails';\nProvidedAPIsPage.displayName = 'ProvidedAPIsPage';\nDefaultProvidedAPIPage.displayName = 'DefaultProvidedAPIPage';\nProvidedAPIPage.displayName = 'ProvidedAPIPage';\nDefaultOperandDetailsPage.displayName = 'DefaultOperandDetailsPage';\nOperandDetailsPage.displayName = 'OperandDetailsPage';\nOperandTableRow.displayName = 'OperandTableRow';\nPodStatuses.displayName = 'PodStatuses';\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nimport { k8sPatch, Patch, DeploymentUpdateStrategy, K8sResourceKind } from '../../module/k8s';\nimport { DeploymentModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { withHandlePromise, HandlePromiseProps } from '../utils';\nimport { RadioInput } from '../radio';\n\nexport const getNumberOrPercent = (value) => {\n  if (typeof value === 'undefined') {\n    return null;\n  }\n  if (typeof value === 'string' && value.indexOf('%') > -1) {\n    return value;\n  }\n\n  return _.toInteger(value);\n};\n\nexport const ConfigureUpdateStrategy: React.FC<ConfigureUpdateStrategyProps> = (props) => {\n  const { showDescription = true } = props;\n  const { t } = useTranslation();\n  return (\n    <>\n      {showDescription && (\n        <div className=\"co-m-form-row\">\n          <p>{t('public~How should the pods be replaced when a new revision is created?')}</p>\n        </div>\n      )}\n      <div className=\"row co-m-form-row\">\n        <div className=\"col-sm-12\">\n          <RadioInput\n            name={`${props.uid || 'update-strategy'}-type`}\n            onChange={(e) => {\n              props.onChangeStrategyType(e.target.value);\n            }}\n            value=\"RollingUpdate\"\n            checked={props.strategyType === 'RollingUpdate'}\n            title={t('public~RollingUpdate')}\n            subTitle={t('public~(default)')}\n            autoFocus={props.strategyType === 'RollingUpdate'}\n          >\n            <div className=\"co-m-radio-desc\">\n              <p className=\"text-muted modal-paragraph\">\n                {t(\n                  'public~Execute a smooth roll out of the new revision, based on the settings below',\n                )}\n              </p>\n\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-sm-3\">\n                  <label htmlFor=\"input-max-unavailable\" className=\"control-label co-break-word\">\n                    {t('public~Max unavailable')}\n                  </label>\n                </div>\n                <div className=\"co-m-form-col col-sm-9\">\n                  <div className=\"form-inline\">\n                    <div className=\"pf-v5-c-input-group\">\n                      <input\n                        disabled={props.strategyType !== 'RollingUpdate'}\n                        placeholder=\"25%\"\n                        size={5}\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        id=\"input-max-unavailable\"\n                        value={props.maxUnavailable}\n                        onChange={(e) => props.onChangeMaxUnavailable(e.target.value)}\n                        aria-describedby=\"input-max-unavailable-help\"\n                      />\n                      {props.replicas && (\n                        <span className=\"pf-v5-c-input-group__text\">\n                          <Tooltip content={t('public~Current desired pod count')}>\n                            <span>{t('public~of pod', { count: props.replicas })}</span>\n                          </Tooltip>\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <p className=\"help-block text-muted\" id=\"input-max-unavailable-help\">\n                    {t(\n                      'public~Percentage of total number of pods or the maximum number ' +\n                        'of pods that can be unavailable during the update(optional)',\n                    )}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-sm-3\">\n                  <label htmlFor=\"input-max-surge\" className=\"control-label co-break-word\">\n                    {t('public~Max surge')}\n                  </label>\n                </div>\n                <div className=\"co-m-form-col col-sm-9\">\n                  <div className=\"form-inline\">\n                    <div className=\"pf-v5-c-input-group\">\n                      <input\n                        disabled={props.strategyType !== 'RollingUpdate'}\n                        placeholder=\"25%\"\n                        size={5}\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        id=\"input-max-surge\"\n                        value={props.maxSurge}\n                        onChange={(e) => props.onChangeMaxSurge(e.target.value)}\n                        aria-describedby=\"input-max-surge-help\"\n                      />\n                      <span className=\"pf-v5-c-input-group__text\">\n                        <Tooltip content={t('public~Current desired pod count')}>\n                          <span>{t('public~greater than pod', { count: props.replicas })}</span>\n                        </Tooltip>\n                      </span>\n                    </div>\n                  </div>\n                  <p className=\"help-block text-muted\" id=\"input-max-surge-help\">\n                    {t(\n                      'public~Percentage of total number of pods or the maximum number ' +\n                        'of pods that can be scheduled above the original number of pods(optional)',\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </RadioInput>\n        </div>\n\n        <div className=\"col-sm-12\">\n          <RadioInput\n            name={`${props.uid || 'update-strategy'}-type`}\n            onChange={(e) => {\n              props.onChangeStrategyType(e.target.value);\n            }}\n            value=\"Recreate\"\n            checked={props.strategyType === 'Recreate'}\n            title={t('public~Recreate')}\n            desc={t('public~Shut down all existing pods before creating new ones')}\n            autoFocus={props.strategyType === 'Recreate'}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const ConfigureUpdateStrategyModal = withHandlePromise(\n  (props: ConfigureUpdateStrategyModalProps) => {\n    const [strategyType, setStrategyType] = React.useState(\n      _.get(props.deployment.spec, 'strategy.type'),\n    );\n    const [maxUnavailable, setMaxUnavailable] = React.useState(\n      _.get(props.deployment.spec, 'strategy.rollingUpdate.maxUnavailable', '25%'),\n    );\n    const [maxSurge, setMaxSurge] = React.useState(\n      _.get(props.deployment.spec, 'strategy.rollingUpdate.maxSurge', '25%'),\n    );\n\n    const { t } = useTranslation();\n\n    const submit = (event) => {\n      event.preventDefault();\n\n      const patch: Patch = { path: '/spec/strategy/rollingUpdate', op: 'remove' };\n      if (strategyType === 'RollingUpdate') {\n        patch.value = {\n          maxUnavailable: getNumberOrPercent(maxUnavailable || '25%'),\n          maxSurge: getNumberOrPercent(maxSurge || '25%'),\n        };\n        patch.op = 'add';\n      }\n      const promise = k8sPatch(DeploymentModel, props.deployment, [\n        patch,\n        { path: '/spec/strategy/type', value: strategyType, op: 'replace' },\n      ]);\n      props.handlePromise(promise, props.close);\n    };\n\n    return (\n      <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>{t('public~Edit update strategy')}</ModalTitle>\n        <ModalBody>\n          <ConfigureUpdateStrategy\n            strategyType={strategyType}\n            maxUnavailable={maxUnavailable}\n            maxSurge={maxSurge}\n            onChangeStrategyType={setStrategyType}\n            onChangeMaxUnavailable={setMaxUnavailable}\n            onChangeMaxSurge={setMaxSurge}\n            replicas={props.deployment.spec.replicas}\n          />\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={props.errorMessage}\n          inProgress={props.inProgress}\n          submitText={t('public~Save')}\n          cancel={props.cancel}\n        />\n      </form>\n    );\n  },\n);\n\nexport const configureUpdateStrategyModal = createModalLauncher(ConfigureUpdateStrategyModal);\n\nexport type ConfigureUpdateStrategyProps = {\n  showDescription?: boolean;\n  strategyType: DeploymentUpdateStrategy['type'];\n  maxUnavailable: number | string;\n  maxSurge: number | string;\n  onChangeStrategyType: (strategy: DeploymentUpdateStrategy['type']) => void;\n  onChangeMaxUnavailable: (maxUnavailable: number | string) => void;\n  onChangeMaxSurge: (maxSurge: number | string) => void;\n  replicas?: number;\n  uid?: string;\n};\n\nexport type ConfigureUpdateStrategyModalProps = {\n  deployment: K8sResourceKind;\n  handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n} & HandlePromiseProps;\n\nConfigureUpdateStrategy.displayName = 'ConfigureUpdateStrategy';\n","import { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport enum DescriptorType {\n  spec = 'spec',\n  status = 'status',\n}\n\nexport enum SpecCapability {\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  endpointList = 'urn:alm:descriptor:com.tectonic.ui:endpointList',\n  label = 'urn:alm:descriptor:com.tectonic.ui:label',\n  resourceRequirements = 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements',\n  selector = 'urn:alm:descriptor:com.tectonic.ui:selector:',\n  namespaceSelector = 'urn:alm:descriptor:com.tectonic.ui:namespaceSelector',\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  booleanSwitch = 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n  checkbox = 'urn:alm:descriptor:com.tectonic.ui:checkbox',\n  imagePullPolicy = 'urn:alm:descriptor:com.tectonic.ui:imagePullPolicy',\n  updateStrategy = 'urn:alm:descriptor:com.tectonic.ui:updateStrategy',\n  text = 'urn:alm:descriptor:com.tectonic.ui:text',\n  number = 'urn:alm:descriptor:com.tectonic.ui:number',\n  nodeAffinity = 'urn:alm:descriptor:com.tectonic.ui:nodeAffinity',\n  podAffinity = 'urn:alm:descriptor:com.tectonic.ui:podAffinity',\n  podAntiAffinity = 'urn:alm:descriptor:com.tectonic.ui:podAntiAffinity',\n  fieldGroup = 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:',\n  arrayFieldGroup = 'urn:alm:descriptor:com.tectonic.ui:arrayFieldGroup:',\n  select = 'urn:alm:descriptor:com.tectonic.ui:select:',\n  advanced = 'urn:alm:descriptor:com.tectonic.ui:advanced',\n  fieldDependency = 'urn:alm:descriptor:com.tectonic.ui:fieldDependency:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n}\n\nexport enum StatusCapability {\n  podStatuses = 'urn:alm:descriptor:com.tectonic.ui:podStatuses',\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  w3Link = 'urn:alm:descriptor:org.w3:link',\n  conditions = 'urn:alm:descriptor:io.kubernetes.conditions',\n  text = 'urn:alm:descriptor:text',\n  prometheusEndpoint = 'urn:alm:descriptor:prometheusEndpoint',\n  k8sPhase = 'urn:alm:descriptor:io.kubernetes.phase',\n  k8sPhaseReason = 'urn:alm:descriptor:io.kubernetes.phase:reason',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n  // Prefix for all kubernetes resource status descriptors.\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n}\n\nexport enum CommonCapability {\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n}\n\nexport type Descriptor<T = any> = {\n  path: string;\n  displayName: string;\n  description: string;\n  'x-descriptors'?: T[];\n  value?: any;\n};\n\nexport type SpecDescriptor = Descriptor<SpecCapability>;\nexport type StatusDescriptor = Descriptor<StatusCapability>;\n\nexport type CapabilityProps<C extends SpecCapability | StatusCapability, V = any> = {\n  capability?: C;\n  className?: string;\n  description?: string;\n  descriptor: Descriptor<C>;\n  fullPath?: string[];\n  label?: string;\n  model?: K8sKind;\n  namespace?: string;\n  obj?: K8sResourceKind;\n  onError?: (error: Error) => void;\n  value: V;\n};\n\nexport type Error = { message: string };\n","import { getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { getSchemaAtPath } from '@console/shared';\nimport {\n  ARRAY_COMPATIBLE_CAPABILITIES,\n  DEPRECATED_CAPABILITIES,\n  OBJECT_COMPATIBLE_CAPABILITIES,\n  PRIMITIVE_COMPATIBLE_CAPABILITIES,\n  REGEXP_ARRAY_PATH,\n  REGEXP_CAPTURE_GROUP_SUBGROUP,\n  REGEXP_NESTED_ARRAY_PATH,\n  COMMON_COMPATIBLE_CAPABILITIES,\n  CAPABILITY_SORT_ORDER,\n} from './const';\nimport { Descriptor, SpecCapability, StatusCapability, CommonCapability } from './types';\n\nexport const useCalculatedDescriptorProperties = (descriptorType, descriptor, schema, obj) => {\n  const propertySchema = getSchemaAtPath(schema, `${descriptorType}.${descriptor.path}`);\n  const fullPath = [descriptorType, ..._.toPath(descriptor.path)];\n  const displayName =\n    descriptor.displayName || propertySchema?.title || _.startCase(_.last(fullPath));\n  const description = descriptor?.description || propertySchema?.description || '';\n  const value = _.get(obj, fullPath, descriptor.value);\n  return {\n    description,\n    displayName,\n    fullPath,\n    propertySchema,\n    value,\n  };\n};\n\n// Creates a structure for rendering grouped descriptors on the operand details page.\nexport const groupDescriptorDetails = (\n  descriptors: Descriptor[],\n): { [group: string]: DescriptorGroup } =>\n  descriptors.reduce((acc, descriptor) => {\n    const handleArrayDescriptor = () => {\n      const [, beforeIndex, afterIndex] = descriptor.path.match(REGEXP_ARRAY_PATH) ?? [];\n      const [, group, subgroup] = beforeIndex?.match(REGEXP_CAPTURE_GROUP_SUBGROUP) ?? [];\n      return subgroup\n        ? {\n            ...acc,\n            [group]: {\n              ...(acc?.[group] ?? {}),\n              nested: {\n                ...(acc?.[group]?.nested ?? {}),\n                [subgroup]: {\n                  ...(acc?.[group]?.nested?.[subgroup] ?? {}),\n                  arrayGroupPath: beforeIndex,\n                  isArrayGroup: true,\n                  ...(afterIndex\n                    ? {\n                        nested: {\n                          ...(acc?.[group]?.nested?.[subgroup]?.nested ?? {}),\n                          [afterIndex]: descriptor,\n                        },\n                      }\n                    : { elementDescriptor: descriptor }),\n                },\n              },\n            },\n          }\n        : {\n            ...acc,\n            [group]: {\n              ...(acc?.[group] ?? {}),\n              arrayGroupPath: beforeIndex,\n              isArrayGroup: true,\n              ...(afterIndex\n                ? {\n                    nested: {\n                      ...(acc?.[group]?.nested ?? {}),\n                      [afterIndex]: descriptor,\n                    },\n                  }\n                : { elementDescriptor: descriptor }),\n            },\n          };\n    };\n\n    // Ignore nested arrays and hidden descriptors.\n    if (\n      REGEXP_NESTED_ARRAY_PATH.test(descriptor.path) ||\n      descriptor?.['x-descriptors']?.includes(CommonCapability.hidden)\n    ) {\n      return acc;\n    }\n\n    if (REGEXP_ARRAY_PATH.test(descriptor.path)) {\n      return handleArrayDescriptor();\n    }\n\n    const [, group, subgroup] = descriptor.path.match(REGEXP_CAPTURE_GROUP_SUBGROUP) ?? [];\n    return group\n      ? {\n          ...acc,\n          [group]: {\n            ...(acc?.[group] ?? {}),\n            ...(subgroup\n              ? {\n                  nested: {\n                    ...(acc?.[group]?.nested ?? {}),\n                    [subgroup]: {\n                      ...(acc?.[group]?.nested?.[subgroup] ?? {}),\n                      descriptor,\n                    },\n                  },\n                }\n              : { descriptor }),\n          },\n        }\n      : acc;\n  }, {});\n\n// Replace '.', '[', and '].' with '/'.\nexport const getPatchPathFromDescriptor = (descriptor: Descriptor): string =>\n  _.toPath(descriptor.path).join('/');\n\n// Given a type, return a static list of x-descriptors that are compatible\nconst getCompatibleCapabilities = (type: string): (StatusCapability | SpecCapability)[] => {\n  switch (type) {\n    case 'object':\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...OBJECT_COMPATIBLE_CAPABILITIES];\n    case 'array':\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...ARRAY_COMPATIBLE_CAPABILITIES];\n    default:\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...PRIMITIVE_COMPATIBLE_CAPABILITIES];\n  }\n};\n\n// Given type and descriptor, return a list of non-deprecated x-descriptors compatible with type.\n// Deprecated and incompatible x-descriptors are logged as warnings in console. If\n// 'allowDeprecated' is true, deprecated x-descriptors are logged but still returned as valid.\nexport function getValidCapabilitiesForDataType<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  type: string,\n): CapabilityType[] {\n  const compatibleCapabilities = getCompatibleCapabilities(type);\n  return (descriptor?.['x-descriptors'] ?? [])\n    .filter((capability) => {\n      const isCompatible =\n        type === 'any' ||\n        compatibleCapabilities.some((compatibleCapability) =>\n          capability.startsWith(compatibleCapability),\n        );\n      const isDeprecated = DEPRECATED_CAPABILITIES.some((deprecatedCapability) =>\n        capability.startsWith(deprecatedCapability),\n      );\n\n      if (isDeprecated) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Deprecated x-descriptor] \"${capability}\" is deprecated and support will be removed in a future release.`,\n          descriptor,\n        );\n      }\n\n      if (!isCompatible) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Invalid x-descriptor] \"${capability}\" is incompatible with ${type} values and will have no effect`,\n          descriptor,\n        );\n        return false;\n      }\n\n      return true;\n    })\n    .sort((a, b) => {\n      const aIndex = CAPABILITY_SORT_ORDER.findIndex((capability) => a.startsWith(capability));\n      const bIndex = CAPABILITY_SORT_ORDER.findIndex((capability) => b.startsWith(capability));\n      // If either a or b don't exist in the sorting array, sort the missing item last\n      if (aIndex < 0 || bIndex < 0) {\n        return bIndex - aIndex;\n      }\n      return aIndex - bIndex;\n    });\n}\n\nconst getValueType = (value: any): string => {\n  // Consider nil values 'any' since every descriptor should render empty state in this case\n  if (_.isNil(value)) {\n    return 'any';\n  }\n\n  // Array check must come before object check because _.isObject will return true on array values\n  return _.isArray(value) ? 'array' : _.isObject(value) ? 'object' : 'primitive';\n};\n\nexport function getValidCapabilitiesForValue<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  value: any,\n): CapabilityType[] {\n  const type = getValueType(value);\n  return getValidCapabilitiesForDataType<CapabilityType>(descriptor, type);\n}\n\nexport function getValidCapabilitiesForSchema<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  schema: JSONSchema7,\n): CapabilityType[] {\n  const type = getSchemaType(schema);\n  return getValidCapabilitiesForDataType<CapabilityType>(descriptor, type);\n}\n\nexport const isMainStatusDescriptor = (descriptor: Descriptor): boolean =>\n  descriptor.path === 'status' || descriptor.displayName === 'Status';\n\nexport type DescriptorGroup = {\n  arrayGroupPath?: string; // Path to the array that this descriptor group represents\n  descriptor?: Descriptor; // Descriptor for the root level group.\n  elementDescriptor?: Descriptor; // For array groups, the descriptor that applies to each array element\n  isArrayGroup?: boolean; // True if this group describes an array property\n  // Descriptor groups which are encompassed by this group\n  nested?: {\n    [key: string]: DescriptorGroup;\n  };\n};\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { referenceForModel, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { ClusterServiceVersionModel } from '../../models';\n\nexport const csvNameFromWindow = () =>\n  window.location.pathname\n    .split('/')\n    .find(\n      (part, i, allParts) =>\n        allParts[i - 1] === referenceForModel(ClusterServiceVersionModel) ||\n        allParts[i - 1] === ClusterServiceVersionModel.plural,\n    );\n\nexport const OperandLink: React.FC<OperandLinkProps> = (props) => {\n  const { namespace, name } = props.obj.metadata;\n  const csvName = props.csvName || csvNameFromWindow();\n\n  const reference = referenceFor(props.obj);\n  const to = namespace\n    ? `/k8s/ns/${namespace}/${ClusterServiceVersionModel.plural}/${csvName}/${reference}/${name}`\n    : `/k8s/cluster/${reference}/${name}`;\n  const classes = classNames('co-resource-item', {\n    'co-resource-item--inline': props.inline,\n  });\n\n  return (\n    <span className={classes}>\n      <ResourceIcon kind={referenceFor(props.obj)} />\n      <Link\n        to={to}\n        className=\"co-resource-item__resource-name\"\n        onClick={props.onClick}\n        data-test-operand-link={name}\n        data-test={name}\n      >\n        {name}\n      </Link>\n    </span>\n  );\n};\n\nexport type OperandLinkProps = {\n  obj: K8sResourceKind;\n  csvName?: string;\n  onClick?: () => void;\n  inline?: boolean;\n};\n\nOperandLink.displayName = 'OperandLink';\n","import * as _ from 'lodash';\nimport { SpecCapability, StatusCapability } from './types';\n\nexport const REGEXP_K8S_RESOURCE_CAPABILITY = _.escapeRegExp(SpecCapability.k8sResourcePrefix);\nexport const REGEXP_FIELD_DEPENDENCY_CAPABILITY = _.escapeRegExp(SpecCapability.fieldDependency);\nexport const REGEXP_SELECT_CAPABILITY = _.escapeRegExp(SpecCapability.select);\n\nexport const REGEXP_K8S_RESOURCE_SUFFIX = new RegExp(\n  `^${REGEXP_K8S_RESOURCE_CAPABILITY}(?:core[:~]v1[:~])?([^?]*)[?]?(.*)$`,\n);\nexport const REGEXP_SELECT_OPTION = new RegExp(`${REGEXP_SELECT_CAPABILITY}(.*)$`);\nexport const REGEXP_FIELD_DEPENDENCY_PATH_VALUE = new RegExp(\n  `^${REGEXP_FIELD_DEPENDENCY_CAPABILITY}([^:]*):(.*)$`,\n);\n\n// Matches a path string containing an array reference. Captures\n// the segment before the array reference, and the segment after.\n// For example:\n//    path[0].element.property -> [path, element.property]\nexport const REGEXP_ARRAY_PATH = /^(.*)\\[\\d+\\]\\.?(.*)$/;\n\n// Matches a path string with multiple array references.\n// e.g.:  nested[0].array[0].property\nexport const REGEXP_NESTED_ARRAY_PATH = /^.*\\[\\d+\\]\\.?.*\\[\\d+\\]\\.?.*$/;\n\n//  Captures the root segment of a path string, and all desscendent segments as\n// a single string.\n// For example:\n//    'this.is.a.really.long.path' -> ['this', 'is.a.really.long.path'])\n//    'this'  -> ['this']\nexport const REGEXP_CAPTURE_GROUP_SUBGROUP = /^([^.]*)\\.?(.*)$/;\n\nexport const DEPRECATED_CAPABILITIES: SpecCapability[] = [\n  SpecCapability.arrayFieldGroup,\n  SpecCapability.fieldGroup,\n  SpecCapability.namespaceSelector,\n  SpecCapability.label,\n];\n\nexport const COMMON_COMPATIBLE_CAPABILITIES: SpecCapability[] = [\n  SpecCapability.advanced,\n  SpecCapability.fieldDependency,\n  SpecCapability.hidden,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.arrayFieldGroup,\n  SpecCapability.fieldGroup,\n  // END TODO\n];\n\nexport const OBJECT_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  StatusCapability.podStatuses,\n  SpecCapability.updateStrategy,\n  SpecCapability.nodeAffinity,\n  SpecCapability.podAffinity,\n  SpecCapability.podAntiAffinity,\n  SpecCapability.resourceRequirements,\n  SpecCapability.selector,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.label,\n  SpecCapability.namespaceSelector,\n  // END TODO\n];\n\nexport const ARRAY_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  SpecCapability.endpointList,\n  StatusCapability.conditions,\n];\n\nexport const PRIMITIVE_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  StatusCapability.k8sPhase,\n  StatusCapability.k8sPhaseReason,\n  SpecCapability.k8sResourcePrefix,\n  SpecCapability.imagePullPolicy,\n  SpecCapability.podCount,\n  SpecCapability.select,\n  StatusCapability.w3Link,\n  SpecCapability.booleanSwitch,\n  SpecCapability.checkbox,\n  SpecCapability.password,\n  SpecCapability.text,\n  StatusCapability.text,\n  SpecCapability.number,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.label,\n  // END TODO\n];\n\nexport const CAPABILITY_SORT_ORDER: (SpecCapability | StatusCapability)[] = [\n  // Supported in details view and has a widget\n  SpecCapability.hidden,\n  SpecCapability.endpointList,\n  StatusCapability.conditions,\n  SpecCapability.resourceRequirements,\n  SpecCapability.updateStrategy,\n  StatusCapability.podStatuses,\n  SpecCapability.selector,\n  SpecCapability.k8sResourcePrefix,\n  SpecCapability.podCount,\n  SpecCapability.password,\n  StatusCapability.k8sPhaseReason,\n  SpecCapability.booleanSwitch,\n  SpecCapability.checkbox,\n  StatusCapability.w3Link,\n\n  // Supported in details view with no widget\n  SpecCapability.select,\n  SpecCapability.imagePullPolicy,\n  StatusCapability.k8sPhase,\n  SpecCapability.text,\n  StatusCapability.text,\n  SpecCapability.number,\n\n  // Unsupported on details view\n  SpecCapability.podAntiAffinity,\n  SpecCapability.podAffinity,\n  SpecCapability.nodeAffinity,\n\n  // Always last\n  SpecCapability.advanced,\n  SpecCapability.fieldDependency,\n  ...DEPRECATED_CAPABILITIES,\n];\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise } from '@console/internal/components/utils';\nimport { k8sUpdate, referenceFor, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\n\nexport const ResourceRequirements: React.FC<ResourceRequirementsProps> = (props) => {\n  const { t } = useTranslation();\n  const { cpu, memory, storage, onChangeCPU, onChangeMemory, onChangeStorage, path = '' } = props;\n\n  return (\n    <div className=\"row co-m-form-row\">\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.cpu`}\n        >\n          {t('olm~CPU cores')}\n        </label>\n        <input\n          value={cpu}\n          onChange={(e) => onChangeCPU(e.target.value)}\n          id={`${path}.cpu`}\n          name=\"cpu\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"500m\"\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.memory`}\n        >\n          {t('olm~Memory')}\n        </label>\n        <input\n          value={memory}\n          onChange={(e) => onChangeMemory(e.target.value)}\n          id={`${path}.memory`}\n          name=\"memory\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"50Mi\"\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.ephemeral-storage`}\n        >\n          {t('olm~Storage')}\n        </label>\n        <input\n          value={storage}\n          onChange={(e) => onChangeStorage(e.target.value)}\n          id={`${path}.ephemeral-storage`}\n          name=\"ephemeral-storage\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"50Mi\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const ResourceRequirementsModal = withHandlePromise(\n  (props: ResourceRequirementsModalProps) => {\n    const { t } = useTranslation();\n    const { obj, path, type, model, close, handlePromise } = props;\n    const [cpu, setCPU] = React.useState<string>(_.get(obj.spec, `${path}.${type}.cpu`, ''));\n    const [memory, setMemory] = React.useState<string>(\n      _.get(obj.spec, `${path}.${type}.memory`, ''),\n    );\n    const [storage, setStorage] = React.useState<string>(\n      _.get(obj.spec, `${path}.${type}.ephemeral-storage`, ''),\n    );\n\n    const submit = (e) => {\n      e.preventDefault();\n      const newObj = _.set(_.cloneDeep(obj), `spec.${path}.${type}`, {\n        ...(cpu && { cpu }),\n        ...(memory && { memory }),\n        ...(storage && { 'ephemeral-storage': storage }),\n      });\n      return handlePromise(k8sUpdate(model, newObj), close);\n    };\n\n    return (\n      <form onSubmit={(e) => submit(e)} className=\"modal-content\">\n        <ModalTitle>{props.title}</ModalTitle>\n        <ModalBody>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">{props.description}</div>\n          </div>\n          <ResourceRequirements\n            cpu={cpu}\n            memory={memory}\n            storage={storage}\n            onChangeCPU={setCPU}\n            onChangeMemory={setMemory}\n            onChangeStorage={setStorage}\n            path={path}\n          />\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={props.errorMessage}\n          inProgress={props.inProgress}\n          submitText={t('public~Save')}\n          cancel={props.cancel}\n        />\n      </form>\n    );\n  },\n);\n\nconst stateToProps = ({ k8s }: RootState, { obj }) => ({\n  model: k8s.getIn(['RESOURCES', 'models', referenceFor(obj)]) as K8sKind,\n});\n\nexport const ResourceRequirementsModalLink = connect(stateToProps)(\n  (props: ResourceRequirementsModalLinkProps) => {\n    const { obj, type, path, model } = props;\n    const { t } = useTranslation();\n    const none = t('public~None');\n    const { cpu, memory, 'ephemeral-storage': storage } = _.get(obj.spec, `${path}.${type}`, {});\n\n    const onClick = () => {\n      const modal = createModalLauncher(ResourceRequirementsModal);\n      const description = t('olm~Define the resource {{type}} for this {{kind}} instance.', {\n        type,\n        kind: obj.kind,\n      });\n      const title = t('olm~{{kind}} Resource {{type}}', {\n        kind: obj.kind,\n        type: _.capitalize(type),\n      });\n\n      return modal({ title, description, obj, model, type, path });\n    };\n\n    return (\n      <Button\n        type=\"button\"\n        isInline\n        data-test-id=\"configure-modal-btn\"\n        onClick={onClick}\n        variant=\"link\"\n      >\n        {t('olm~CPU: {{cpu}}, Memory: {{memory}}, Storage: {{storage}}', {\n          cpu: cpu || none,\n          memory: memory || none,\n          storage: storage || none,\n        })}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  },\n);\n\nexport type ResourceRequirementsModalProps = {\n  title: string;\n  description: string;\n  obj: K8sResourceKind;\n  model: K8sKind;\n  type: 'requests' | 'limits';\n  path: string;\n  handlePromise: <T>(\n    promise: Promise<T>,\n    onFulfill?: (res) => void,\n    onError?: (errorMsg: string) => void,\n  ) => void;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n};\n\nexport type ResourceRequirementsProps = {\n  cpu: string;\n  memory: string;\n  storage: string;\n  onChangeCPU: (value: string) => void;\n  onChangeMemory: (value: string) => void;\n  onChangeStorage: (value: string) => void;\n  path?: string;\n};\n\nexport type ResourceRequirementsModalLinkProps = {\n  obj: K8sResourceKind;\n  model: K8sKind;\n  type: 'requests' | 'limits';\n  path: string;\n};\n\nResourceRequirements.displayName = 'ResourceRequirements';\nResourceRequirementsModalLink.displayName = 'ResourceRequirementsModalLink';\nResourceRequirementsModal.displayName = 'ResourceRequirementsModal';\n","import { K8sResourceKind, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { OLMAnnotation } from '../components/operator-hub';\nimport { NON_STANDALONE_ANNOTATION_VALUE } from '../const';\nimport { ClusterServiceVersionModel } from '../models';\nimport { ClusterServiceVersionPhase } from '../types';\n\nexport const isCSV = (obj: K8sResourceKind): boolean =>\n  Boolean(obj) && referenceFor(obj) === referenceForModel(ClusterServiceVersionModel);\n\nexport const isCopiedCSV = (obj: K8sResourceKind): boolean =>\n  isCSV(obj) &&\n  (obj.status?.reason === 'Copied' || Boolean(obj.metadata?.labels?.['olm.copiedFrom']));\n\nexport const isStandaloneCSV = (obj: K8sResourceKind): boolean =>\n  isCSV(obj) &&\n  (obj.metadata.annotations?.[OLMAnnotation.OperatorType] !== NON_STANDALONE_ANNOTATION_VALUE ||\n    obj.status?.phase === ClusterServiceVersionPhase.CSVPhaseFailed);\n","import * as React from 'react';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { GLOBAL_COPIED_CSV_NAMESPACE } from '../const';\nimport { ClusterServiceVersionModel } from '../models';\nimport { ClusterServiceVersionKind } from '../types';\nimport { isCopiedCSV } from './clusterserviceversions';\n\nconst groupVersionKind = {\n  group: ClusterServiceVersionModel.apiGroup,\n  version: ClusterServiceVersionModel.apiVersion,\n  kind: ClusterServiceVersionModel.kind,\n};\n\nconst { copiedCSVsDisabled } = window.SERVER_FLAGS;\n\nexport const useClusterServiceVersion = (\n  name: string,\n  namespace: string,\n): [ClusterServiceVersionKind, boolean, any] => {\n  const [namespacedCSV, namespacedCSVLoaded, namespacedCSVLoadError] = useK8sWatchResource<\n    ClusterServiceVersionKind\n  >({\n    groupVersionKind,\n    name,\n    namespace,\n    optional: copiedCSVsDisabled,\n  });\n  const [globalCSV, globalCSVLoaded, globalCSVLoadError] = useK8sWatchResource<\n    ClusterServiceVersionKind\n  >(\n    copiedCSVsDisabled\n      ? {\n          groupVersionKind,\n          name,\n          namespace: GLOBAL_COPIED_CSV_NAMESPACE,\n          optional: copiedCSVsDisabled,\n        }\n      : null,\n  );\n\n  return React.useMemo(() => {\n    if (copiedCSVsDisabled && Boolean(namespacedCSVLoadError)) {\n      return [isCopiedCSV(globalCSV) ? globalCSV : null, globalCSVLoaded, globalCSVLoadError];\n    }\n    return [namespacedCSV, namespacedCSVLoaded, namespacedCSVLoadError];\n  }, [\n    globalCSV,\n    globalCSVLoadError,\n    globalCSVLoaded,\n    namespacedCSV,\n    namespacedCSVLoadError,\n    namespacedCSVLoaded,\n  ]);\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { EyeIcon } from '@patternfly/react-icons/dist/esm/icons/eye-icon';\nimport { EyeSlashIcon } from '@patternfly/react-icons/dist/esm/icons/eye-slash-icon';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { SecretValue } from '@console/internal/components/configmap-and-secret-data';\nimport { DetailsItem, ResourceLink } from '@console/internal/components/utils';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { REGEXP_K8S_RESOURCE_SUFFIX } from './const';\nimport { CapabilityProps, SpecCapability, StatusCapability } from './types';\n\nexport const Invalid: React.FC<{ path: string }> = ({ path }) => {\n  return (\n    <span className=\"text-muted olm-descriptors__invalid-pod-descriptor\">\n      <YellowExclamationTriangleIcon />\n      &nbsp;&nbsp;\n      <Trans ns=\"olm\">\n        The field <code className=\"co-code\">{{ path }}</code> is invalid.\n      </Trans>\n    </span>\n  );\n};\n\nexport const DefaultCapability: React.FC<CommonCapabilityProps<string | number | boolean>> = ({\n  description,\n  label,\n  obj,\n  fullPath,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const detail = React.useMemo(() => {\n    if (_.isEmpty(value) && !_.isFinite(value) && !_.isBoolean(value)) {\n      return <span className=\"text-muted\">{t('public~None')}</span>;\n    }\n    return _.toString(value);\n  }, [t, value]);\n\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      {detail}\n    </DetailsItem>\n  );\n};\n\nexport const K8sResourceLinkCapability: React.FC<CommonCapabilityProps<string>> = ({\n  capability,\n  description,\n  descriptor,\n  fullPath,\n  label,\n  obj,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const detail = React.useMemo(() => {\n    if (!value) {\n      return <span className=\"text-muted\">{t('public~None')}</span>;\n    }\n\n    const [, suffix] = capability.match(REGEXP_K8S_RESOURCE_SUFFIX) ?? [];\n    const gvk = suffix?.replace(/:/g, '~');\n    if (!_.isString(value)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `[Invalid descriptor] descriptor is incompatible with property ${descriptor.path} and will have no effect`,\n        descriptor,\n      );\n\n      return null;\n    }\n    return <ResourceLink kind={gvk} name={value} namespace={obj.metadata.namespace} />;\n  }, [value, capability, obj.metadata.namespace, t, descriptor]);\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      {detail}\n    </DetailsItem>\n  );\n};\n\nexport const SecretCapability: React.FC<CommonCapabilityProps<string>> = ({\n  description,\n  label,\n  obj,\n  fullPath,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const [reveal, setReveal] = React.useState(false);\n\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      <div className=\"co-toggle-reveal-value\">\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          isInline\n          className=\"pf-m-link--align-right co-toggle-reveal-value__btn\"\n          onClick={() => setReveal(!reveal)}\n        >\n          {reveal ? (\n            <>\n              <EyeSlashIcon className=\"co-icon-space-r\" />\n              {t('olm~Hide values')}\n            </>\n          ) : (\n            <>\n              <EyeIcon className=\"co-icon-space-r\" />\n              {t('olm~Reveal values')}\n            </>\n          )}\n        </Button>\n        <SecretValue value={value} encoded={false} reveal={reveal} />\n      </div>\n    </DetailsItem>\n  );\n};\n\ntype CommonCapabilityProps<V = any> = CapabilityProps<SpecCapability | StatusCapability, V>;\n\nInvalid.displayName = 'Invalid';\nDefaultCapability.displayName = 'DefaultCapability';\nK8sResourceLinkCapability.displayName = 'K8sResourceLinkCapability';\nSecretCapability.displayName = 'SecretCapability';\n","import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as UIActions from '@console/internal/actions/ui';\nimport { RootState } from '@console/internal/redux';\n\ntype UseShowOperandsInAllNamespaces = () => [boolean, (value: boolean) => void];\n\n// This hook can be used to consume and update the showOperandsInAllNamespaces redux state\nexport const useShowOperandsInAllNamespaces: UseShowOperandsInAllNamespaces = () => {\n  const dispatch = useDispatch();\n  const showOperandsInAllNamespaces = useSelector((state: RootState) =>\n    state.UI.get('showOperandsInAllNamespaces'),\n  );\n  const setShowOperandsInAllNamespaces = React.useCallback(\n    (value: boolean) => dispatch(UIActions.setShowOperandsInAllNamespaces(value)),\n    [dispatch],\n  );\n  return [showOperandsInAllNamespaces, setShowOperandsInAllNamespaces];\n};\n","import * as React from 'react';\nimport {\n  ResourceListPage as DynamicResourceListPage,\n  isResourceListPage as isDynamicResourceListPage,\n} from '@console/dynamic-plugin-sdk/src';\nimport { getResourceListPages } from '@console/internal/components/resource-pages';\nimport { isResourceListPage, ResourceListPage, useExtensions } from '@console/plugin-sdk/src';\n\nexport const useResourceListPages = () => {\n  const resourceListPageExtensions = useExtensions<ResourceListPage>(isResourceListPage);\n  const dynamicResourceListPageExtensions = useExtensions<DynamicResourceListPage>(\n    isDynamicResourceListPage,\n  );\n  return React.useMemo(\n    () => getResourceListPages(resourceListPageExtensions, dynamicResourceListPageExtensions),\n    [resourceListPageExtensions, dynamicResourceListPageExtensions],\n  );\n};\n","import * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport {\n  MultiListPage,\n  Table,\n  TableData,\n  Flatten,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport {\n  ResourceLink,\n  Timestamp,\n  ConsoleEmptyState,\n  FirehoseResource,\n} from '@console/internal/components/utils';\nimport {\n  ConfigMapModel,\n  DeploymentModel,\n  JobModel,\n  PodModel,\n  ReplicaSetModel,\n  SecretModel,\n  ServiceModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  kindForReference,\n  modelFor,\n  referenceForGroupVersionKind,\n  K8sResourceCommon,\n} from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { RouteParams } from '@console/shared/src/types';\nimport { CRDDescription, ProvidedAPI } from '../types';\nimport { OperandLink } from './operand/operand-link';\nimport { providedAPIForReference } from './index';\n\nconst DEFAULT_RESOURCES: CRDDescription['resources'] = [\n  { kind: DeploymentModel.kind, version: DeploymentModel.apiVersion },\n  { kind: ServiceModel.kind, version: ServiceModel.apiVersion },\n  { kind: ReplicaSetModel.kind, version: ReplicaSetModel.apiVersion },\n  { kind: PodModel.kind, version: PodModel.apiVersion },\n  { kind: SecretModel.kind, version: SecretModel.apiVersion },\n  { kind: ConfigMapModel.kind, version: ConfigMapModel.apiVersion },\n  { kind: JobModel.kind, version: JobModel.apiVersion },\n];\n\nconst tableColumnClasses = [\n  '',\n  'pf-v5-u-w-16-on-md',\n  'pf-m-hidden pf-m-visible-on-lg pf-v5-u-w-16-on-lg',\n  'pf-m-hidden pf-m-visible-on-sm',\n];\n\nexport const ResourceTableRow: React.FC<RowFunctionArgs<\n  K8sResourceKind,\n  {\n    linkFor: (obj: K8sResourceKind, providedAPI: ProvidedAPI) => JSX.Element;\n    providedAPI: ProvidedAPI;\n  }\n>> = ({ obj, customData: { linkFor, providedAPI } }) => (\n  <>\n    <TableData className={tableColumnClasses[0]}>{linkFor(obj, providedAPI)}</TableData>\n    <TableData className={tableColumnClasses[1]}>{obj.kind}</TableData>\n    <TableData className={tableColumnClasses[2]}>\n      <Status status={obj?.status?.phase ?? 'Created'} />\n    </TableData>\n    <TableData className={tableColumnClasses[3]}>\n      <Timestamp timestamp={obj.metadata.creationTimestamp} />\n    </TableData>\n  </>\n);\n\nexport const ResourceTable: React.FC<ResourceTableProps> = (props) => {\n  const { t } = useTranslation();\n  const ResourceTableHeader = () => [\n    {\n      title: t('olm~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('olm~Kind'),\n      sortField: 'kind',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('olm~Status'),\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('olm~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('olm~Operand Resources')}\n      Header={ResourceTableHeader}\n      Row={ResourceTableRow}\n      EmptyMsg={() => (\n        <ConsoleEmptyState title={t('olm~No resources found')}>\n          {t('olm~There are no Kubernetes resources used by this operand.')}\n        </ConsoleEmptyState>\n      )}\n      virtualize\n    />\n  );\n};\n\nexport const flattenCsvResources = (\n  parentObj: K8sResourceCommon,\n): Flatten<{ [key: string]: K8sResourceCommon[] }, K8sResourceCommon[]> => (resources) => {\n  return _.flatMap(resources, (resource, kind: string) =>\n    _.map(resource.data, (item) => ({ ...item, kind })),\n  ).reduce((owned, resource) => {\n    return (resource.metadata.ownerReferences || []).some(\n      (ref) =>\n        ref.uid === parentObj.metadata.uid ||\n        owned.some(({ metadata }) => metadata.uid === ref.uid),\n    )\n      ? owned.concat([resource])\n      : owned;\n  }, []);\n};\n\n// NOTE: This is us building the `ownerReferences` graph client-side\n// FIXME: Comparing `kind` is not enough to determine if an object is a custom resource\nexport const linkForCsvResource = (\n  obj: K8sResourceKind,\n  providedAPI: ProvidedAPI,\n  csvName?: string,\n) =>\n  obj.metadata.namespace &&\n  (providedAPI?.resources ?? []).some(({ kind, name }) => name && kind === obj.kind) ? (\n    <OperandLink obj={obj} csvName={csvName} />\n  ) : (\n    <ResourceLink kind={obj.kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n  );\n\ntype ResourcesPageRouteParams = RouteParams<'plural'>;\n\nexport const Resources: React.FC<ResourcesProps> = (props) => {\n  const { t } = useTranslation();\n  const { plural } = useParams<ResourcesPageRouteParams>();\n  const providedAPI = providedAPIForReference(props.customData, plural);\n\n  const firehoseResources = (providedAPI?.resources ?? DEFAULT_RESOURCES).map(\n    ({ name, kind, version }): FirehoseResource => {\n      const group = name ? name.substring(name.indexOf('.') + 1) : '';\n      const reference = group ? referenceForGroupVersionKind(group)(version)(kind) : kind;\n      const model = modelFor(reference);\n      return {\n        kind: model && !model.crd ? kind : reference,\n        namespaced: model ? model.namespaced : true,\n        prop: kind,\n      };\n    },\n  );\n\n  const customData = React.useMemo(\n    () => ({\n      linkFor: linkForCsvResource,\n      providedAPI,\n    }),\n    [providedAPI],\n  );\n\n  return (\n    <MultiListPage\n      filterLabel={t('olm~Resources by name')}\n      resources={firehoseResources}\n      rowFilters={[\n        {\n          type: 'clusterserviceversion-resource-kind',\n          filterGroupName: t('olm~Kind'),\n          reducer: ({ kind }) => kindForReference(kind),\n          items: firehoseResources.map(({ kind }) => ({\n            id: kindForReference(kind),\n            title: kindForReference(kind),\n          })),\n        },\n      ]}\n      flatten={flattenCsvResources(props.obj)}\n      namespace={props.obj.metadata.namespace}\n      ListComponent={ResourceTable}\n      customData={customData}\n    />\n  );\n};\n\nexport type ResourcesProps = {\n  obj: K8sResourceKind;\n  customData: any;\n};\n\nexport type ResourceListProps = {};\n\nexport type ResourceTableProps = {\n  loaded: boolean;\n  loadError?: string;\n  data: K8sResourceKind[];\n  linkFor: (obj: K8sResourceKind, providedAPI: ProvidedAPI) => JSX.Element;\n  providedAPI: ProvidedAPI;\n};\n\nResourceTable.displayName = 'ResourceTable';\nResources.displayName = 'Resources';\n","import * as React from 'react';\nimport { useResourceDetailsPages } from './useResourceDetailsPages';\n\nexport const useResourceDetailsPage = (key: string) => {\n  const detailsPages = useResourceDetailsPages();\n  return React.useMemo(() => detailsPages.get(key), [detailsPages, key]);\n};\n","import * as React from 'react';\nimport {\n  ResourceDetailsPage as DynamicResourceDetailsPage,\n  isResourceDetailsPage as isDynamicResourceDetailsPage,\n} from '@console/dynamic-plugin-sdk/src';\nimport { getResourceDetailsPages } from '@console/internal/components/resource-pages';\nimport { isResourceDetailsPage, ResourceDetailsPage, useExtensions } from '@console/plugin-sdk/src';\n\nexport const useResourceDetailsPages = () => {\n  const resourceDetailsPageExtensions = useExtensions<ResourceDetailsPage>(isResourceDetailsPage);\n  const dynamicResourceDetailsPageExtensions = useExtensions<DynamicResourceDetailsPage>(\n    isDynamicResourceDetailsPage,\n  );\n  return React.useMemo(\n    () =>\n      getResourceDetailsPages(resourceDetailsPageExtensions, dynamicResourceDetailsPageExtensions),\n    [resourceDetailsPageExtensions, dynamicResourceDetailsPageExtensions],\n  );\n};\n","import { useMemo } from 'react';\nimport { useResourceListPages } from './useResourceListPages';\n\nexport const useResourceListPage = (key: string) => {\n  const listPages = useResourceListPages();\n  return useMemo(() => listPages.get(key), [listPages, key]);\n};\n","import * as React from 'react';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsItem } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getSchemaAtPath } from '@console/shared';\nimport { withFallback } from '@console/shared/src/components/error';\nimport { SpecDescriptorDetailsItem } from './spec';\nimport { StatusDescriptorDetailsItem } from './status';\nimport { Descriptor, DescriptorType } from './types';\nimport {\n  DescriptorGroup,\n  groupDescriptorDetails,\n  useCalculatedDescriptorProperties,\n} from './utils';\n\nexport const DescriptorDetailsItem = withFallback<DescriptorDetailsItemProps>(\n  ({ className, descriptor, model, obj, onError, schema, type }) => {\n    const { displayName: label, description, value, fullPath } = useCalculatedDescriptorProperties(\n      type,\n      descriptor,\n      schema,\n      obj,\n    );\n    const descriptorProps = {\n      className,\n      description,\n      descriptor,\n      fullPath,\n      label,\n      model,\n      obj,\n      onError,\n      value,\n    };\n    switch (type) {\n      case DescriptorType.spec:\n        return <SpecDescriptorDetailsItem {...descriptorProps} />;\n      case DescriptorType.status:\n        return <StatusDescriptorDetailsItem {...descriptorProps} />;\n      default:\n        return null;\n    }\n  },\n);\n\nconst DescriptorDetailsItemArrayGroup: React.FC<DescriptorDetailsItemGroupProps> = ({\n  className,\n  group,\n  groupPath,\n  model,\n  obj,\n  onError,\n  schema,\n  type,\n}) => {\n  const { t } = useTranslation();\n  const { arrayGroupPath, elementDescriptor, descriptor, nested } = group;\n  const arrayGroupSchema = getSchemaAtPath(schema, `${type}.${arrayGroupPath}`);\n  const description = descriptor?.description || arrayGroupSchema?.description;\n  const label =\n    descriptor?.displayName ||\n    arrayGroupSchema?.title ||\n    _.startCase(_.last(arrayGroupPath.split('.')));\n  const arrayElementDescriptors = nested ?? [elementDescriptor];\n  const value = _.get(obj, [type, ..._.toPath(arrayGroupPath)], []);\n  return (\n    <div className={className}>\n      <DetailsItem description={description} label={label} obj={obj} path={`${type}.${groupPath}`}>\n        <div className=\"details-item__array\">\n          {value?.length ? (\n            _.times(value.length, (i) => (\n              <div className=\"details-item__value--group\">\n                <dl>\n                  {_.map(arrayElementDescriptors, (primitiveDescriptor: Descriptor) => {\n                    const path = primitiveDescriptor.path.replace(/\\d+/, String(i));\n                    return (\n                      <DescriptorDetailsItem\n                        descriptor={{ ...primitiveDescriptor, path }}\n                        key={`${type}.${path}`}\n                        model={model}\n                        obj={obj}\n                        onError={onError}\n                        schema={getSchemaAtPath(schema, path)}\n                        type={type}\n                      />\n                    );\n                  })}\n                </dl>\n              </div>\n            ))\n          ) : (\n            <span className=\"text-muted\">{t('public~None')}</span>\n          )}\n        </div>\n      </DetailsItem>\n    </div>\n  );\n};\n\nconst DescriptorDetailsItemGroup: React.FC<DescriptorDetailsItemGroupProps> = ({\n  group,\n  groupPath,\n  model,\n  obj,\n  onError,\n  schema,\n  type,\n}) => {\n  const { descriptor, nested } = group;\n  const groupSchema = getSchemaAtPath(schema, `${type}.${groupPath}`);\n  const description = descriptor?.description || groupSchema?.description;\n  const label = descriptor?.displayName || groupSchema?.title || _.startCase(groupPath);\n  const arrayGroups = _.pickBy(nested, 'isArrayGroup');\n  const primitives = _.omitBy(nested, 'isArrayGroup');\n  const className = _.isEmpty(arrayGroups) || _.isEmpty(primitives) ? 'col-sm-6' : 'col-sm-12';\n  return (\n    <div className={className}>\n      <DetailsItem description={description} label={label} obj={obj} path={`${type}.${groupPath}`}>\n        <dl className=\"details-item__value--group olm-descriptors__group\">\n          {!_.isEmpty(primitives) && (\n            <div>\n              {_.map(primitives, ({ descriptor: primitiveDescriptor }) => (\n                <DescriptorDetailsItem\n                  descriptor={primitiveDescriptor}\n                  key={`${type}.${primitiveDescriptor.path}`}\n                  model={model}\n                  obj={obj}\n                  onError={onError}\n                  schema={schema}\n                  type={type}\n                />\n              ))}\n            </div>\n          )}\n          {!_.isEmpty(arrayGroups) && (\n            <div>\n              {_.map(arrayGroups, (arrayGroup: DescriptorGroup) => (\n                <DescriptorDetailsItemArrayGroup\n                  group={arrayGroup}\n                  groupPath={arrayGroup.arrayGroupPath}\n                  key={`${type}.${groupPath}.${arrayGroup.arrayGroupPath}`}\n                  model={model}\n                  obj={obj}\n                  onError={onError}\n                  schema={schema}\n                  type={type}\n                />\n              ))}\n            </div>\n          )}\n        </dl>\n      </DetailsItem>\n    </div>\n  );\n};\n\nexport const DescriptorDetailsItemList: React.FC<DescriptorDetailsItemListProps> = ({\n  descriptors,\n  model,\n  obj,\n  onError,\n  schema,\n  type,\n  itemClassName,\n}) => {\n  const groupedDescriptors = React.useMemo(() => groupDescriptorDetails(descriptors), [\n    descriptors,\n  ]);\n  return (\n    <dl className={`olm-descriptors olm-descriptors--${type}`}>\n      {_.map(groupedDescriptors, (group, groupPath) => {\n        const groupProps = {\n          group,\n          groupPath,\n        };\n\n        const commonProps = {\n          model,\n          obj,\n          onError,\n          schema,\n          type,\n        };\n\n        const { isArrayGroup, descriptor, nested } = group;\n        if (isArrayGroup) {\n          return (\n            <DescriptorDetailsItemArrayGroup\n              {...groupProps}\n              {...commonProps}\n              className={itemClassName}\n            />\n          );\n        }\n\n        if (!_.isEmpty(nested)) {\n          return (\n            <DescriptorDetailsItemGroup\n              key={`${type}.${groupPath}`}\n              {...groupProps}\n              {...commonProps}\n            />\n          );\n        }\n\n        return (\n          <DescriptorDetailsItem\n            key={`${type}.${groupPath}`}\n            className={itemClassName}\n            descriptor={descriptor}\n            {...commonProps}\n          />\n        );\n      })}\n    </dl>\n  );\n};\n\nexport type DescriptorDetailsItemProps = {\n  descriptor: Descriptor;\n  obj: K8sResourceKind;\n  model: K8sKind;\n  onError?: (e: Error) => void;\n  schema: JSONSchema7;\n  type: DescriptorType;\n  className?: string;\n};\n\ntype DescriptorDetailsItemGroupProps = Omit<DescriptorDetailsItemProps, 'descriptor'> & {\n  group: DescriptorGroup;\n  groupPath: string;\n  className?: string;\n};\n\ntype DescriptorDetailsItemListProps = Omit<\n  DescriptorDetailsItemGroupProps,\n  'groupPath' | 'group'\n> & {\n  descriptors: Descriptor[];\n  itemClassName?: string;\n};\n\nDescriptorDetailsItem.displayName = 'DescriptorDetailsItem';\nDescriptorDetailsItemGroup.displayName = 'DescriptorDetailsItemGroup';\nDescriptorDetailsItemList.displayName = 'DescriptorDetailsItemList';\n","import * as React from 'react';\nimport { Button, Switch, Checkbox } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  LoadingInline,\n  ResourceLink,\n  Selector,\n  DetailsItem,\n  LabelList,\n  LabelListProps,\n} from '@console/internal/components/utils';\nimport { k8sPatch, k8sUpdate, Selector as SelectorType } from '@console/internal/module/k8s';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { DefaultCapability, K8sResourceLinkCapability, SecretCapability } from '../common';\nimport { CapabilityProps, SpecCapability, Error } from '../types';\nimport { getPatchPathFromDescriptor, getValidCapabilitiesForValue } from '../utils';\nimport { configureSizeModal } from './configure-size';\nimport { configureUpdateStrategyModal } from './configure-update-strategy';\nimport { EndpointList, EndpointListProps } from './endpoint';\nimport { ResourceRequirementsModalLink } from './resource-requirements';\n\nconst PodCount: React.FC<SpecCapabilityProps<number>> = ({\n  description,\n  descriptor,\n  label,\n  model,\n  obj,\n  fullPath,\n  value,\n}) => (\n  <DetailsItem\n    description={description}\n    label={label}\n    obj={obj}\n    path={fullPath}\n    onEdit={() =>\n      configureSizeModal({\n        kindObj: model,\n        resource: obj,\n        specDescriptor: descriptor,\n        specValue: value,\n      })\n    }\n  >\n    {_.isNil(value) ? '-' : `${value} pods`}\n  </DetailsItem>\n);\n\nconst Endpoints: React.FC<SpecCapabilityProps<EndpointListProps['endpoints']>> = ({\n  description,\n  label,\n  obj,\n  fullPath,\n  value,\n}) => (\n  <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n    <EndpointList endpoints={value} />\n  </DetailsItem>\n);\n\nconst Label: React.FC<SpecCapabilityProps<LabelListProps['labels']>> = ({\n  description,\n  label,\n  model,\n  obj,\n  fullPath,\n  value,\n}) => (\n  <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n    {_.isObject(value) ? (\n      <LabelList kind={model.kind} labels={value} />\n    ) : (\n      <span>{value || '-'}</span>\n    )}\n  </DetailsItem>\n);\n\nconst NamespaceSelector: React.FC<SpecCapabilityProps<{ matchNames: string[] }>> = ({\n  description,\n  label,\n  obj,\n  fullPath,\n  value,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      {value?.matchNames?.[0] ? (\n        <ResourceLink kind=\"Namespace\" name={value.matchNames[0]} title={value.matchNames[0]} />\n      ) : (\n        <span className=\"text-muted\">{t('public~None')}</span>\n      )}\n    </DetailsItem>\n  );\n};\n\nconst ResourceRequirements: React.FC<SpecCapabilityProps> = ({\n  description,\n  descriptor,\n  label,\n  obj,\n  fullPath,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      <dl className=\"co-spec-descriptor--resource-requirements\">\n        <dt>{t('olm~Resource limits')}</dt>\n        <dd>\n          <ResourceRequirementsModalLink type=\"limits\" obj={obj} path={descriptor.path} />\n        </dd>\n        <dt>{t('olm~Resource requests')}</dt>\n        <dd>\n          <ResourceRequirementsModalLink type=\"requests\" obj={obj} path={descriptor.path} />\n        </dd>\n      </dl>\n    </DetailsItem>\n  );\n};\n\nconst BasicSelector: React.FC<SpecCapabilityProps<SelectorType>> = ({\n  capability,\n  description,\n  label,\n  obj,\n  fullPath,\n  value,\n}) => {\n  const [, kind] = capability.split(SpecCapability.selector);\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      <Selector selector={value} kind={kind?.replace(/:/g, '~')} />\n    </DetailsItem>\n  );\n};\n\nconst BooleanSwitch: React.FC<SpecCapabilityProps<boolean>> = ({\n  model,\n  obj,\n  description,\n  descriptor,\n  label,\n  onError,\n  fullPath,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const [checked, setChecked] = React.useState(Boolean(value));\n  const [confirmed, setConfirmed] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(null);\n\n  const errorCb = (err: Error): void => {\n    setConfirmed(false);\n    setChecked(Boolean(value));\n    setErrorMessage(err.message);\n    onError(err);\n  };\n\n  const update = () => {\n    setConfirmed(true);\n    setErrorMessage(null);\n\n    if (_.has(obj, `spec.${descriptor.path}`)) {\n      const patchFor = (val: boolean) => [\n        { op: 'add', path: `/spec/${getPatchPathFromDescriptor(descriptor)}`, value: val },\n      ];\n      return k8sPatch(model, obj, patchFor(checked)).catch((err) => errorCb(err));\n    }\n\n    const newObj = _.cloneDeep(obj);\n    _.set(newObj, `spec.${descriptor.path}`, checked);\n    return k8sUpdate(model, newObj).catch((err) => errorCb(err));\n  };\n\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      <div className=\"co-spec-descriptor--switch\">\n        <Switch\n          id={descriptor.path}\n          isChecked={checked}\n          onChange={(_event, val) => {\n            setChecked(val);\n            setConfirmed(false);\n            setErrorMessage(null);\n          }}\n          label={t('public~True')}\n          labelOff={t('public~False')}\n        />\n        &nbsp;&nbsp;\n        {checked !== Boolean(value) && confirmed && <LoadingInline />}\n        {checked !== Boolean(value) && !confirmed && (\n          <>\n            &nbsp;&nbsp;\n            <Button className=\"pf-m-link--align-left\" type=\"button\" variant=\"link\" onClick={update}>\n              <YellowExclamationTriangleIcon className=\"co-icon-space-r pf-v5-c-button-icon--plain\" />\n              {t('olm~Confirm change')}\n            </Button>\n          </>\n        )}\n      </div>\n      {errorMessage && (\n        <div className=\"cos-error-title co-break-word\">\n          {errorMessage || t('olm~An error occurred')}\n        </div>\n      )}\n    </DetailsItem>\n  );\n};\n\nconst CheckboxUIComponent: React.FC<SpecCapabilityProps<boolean>> = ({\n  description,\n  descriptor,\n  label,\n  model,\n  obj,\n  fullPath,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const [checked, setChecked] = React.useState(Boolean(value));\n  const [confirmed, setConfirmed] = React.useState(false);\n\n  const patchFor = (val: boolean) => [\n    { op: 'add', path: `/spec/${getPatchPathFromDescriptor(descriptor)}`, value: val },\n  ];\n  const update = () => {\n    setConfirmed(true);\n    return k8sPatch(model, obj, patchFor(checked));\n  };\n\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      <div className=\"co-spec-descriptor--switch\">\n        <Checkbox\n          id={descriptor.path}\n          style={{ marginLeft: '10px' }}\n          isChecked={checked}\n          data-checked-state={checked}\n          label={label}\n          onChange={(_event, val) => {\n            setChecked(val);\n            setConfirmed(false);\n          }}\n        />\n        &nbsp;&nbsp;\n        {checked !== Boolean(value) && confirmed && <LoadingInline />}\n        {checked !== Boolean(value) && !confirmed && (\n          <>\n            &nbsp;&nbsp;\n            <Button className=\"pf-m-link--align-left\" type=\"button\" variant=\"link\" onClick={update}>\n              <YellowExclamationTriangleIcon className=\"co-icon-space-r pf-v5-c-button-icon--plain\" />\n              {t('olm~Confirm change')}\n            </Button>\n          </>\n        )}\n      </div>\n    </DetailsItem>\n  );\n};\n\n// TODO [tech debt] Create a type definition for udpate strategy api and use it here\nconst UpdateStrategy: React.FC<SpecCapabilityProps> = ({\n  description,\n  descriptor,\n  label,\n  model,\n  obj,\n  fullPath,\n  value,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DetailsItem\n      description={description}\n      label={label}\n      obj={obj}\n      onEdit={() =>\n        configureUpdateStrategyModal({\n          kindObj: model,\n          resource: obj,\n          specDescriptor: descriptor,\n          specValue: value,\n        })\n      }\n      path={fullPath}\n    >\n      {value?.type ?? t('public~None')}\n    </DetailsItem>\n  );\n};\n\nexport const SpecDescriptorDetailsItem: React.FC<SpecCapabilityProps> = ({\n  className,\n  ...props\n}) => {\n  const [capability] =\n    getValidCapabilitiesForValue<SpecCapability>(props.descriptor, props.value) ?? [];\n\n  const Component = React.useMemo(() => {\n    if (capability?.startsWith(SpecCapability.k8sResourcePrefix)) {\n      return K8sResourceLinkCapability;\n    }\n\n    if (capability?.startsWith(SpecCapability.selector)) {\n      return BasicSelector;\n    }\n\n    switch (capability) {\n      case SpecCapability.podCount:\n        return PodCount;\n      case SpecCapability.endpointList:\n        return Endpoints;\n      case SpecCapability.label:\n        return Label;\n      case SpecCapability.namespaceSelector:\n        return NamespaceSelector;\n      case SpecCapability.resourceRequirements:\n        return ResourceRequirements;\n      case SpecCapability.booleanSwitch:\n        return BooleanSwitch;\n      case SpecCapability.password:\n        return SecretCapability;\n      case SpecCapability.updateStrategy:\n        return UpdateStrategy;\n      case SpecCapability.checkbox:\n        return CheckboxUIComponent;\n      case SpecCapability.hidden:\n        return null;\n      default:\n        if (_.isObject(props.value)) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `[Invalid SpecDescriptor] Cannot render 'spec.${props.descriptor.path}'. A valid x-descriptor must be provided for non-primitive properties.`,\n            'See https://github.com/openshift/console/blob/master/frontend/packages/operator-lifecycle-manager/src/components/descriptors/reference/reference.md#olm-descriptor-reference',\n          );\n          return null;\n        }\n        return DefaultCapability;\n    }\n  }, [props.descriptor, props.value, capability]);\n  return Component ? (\n    <div className={className}>\n      <Component {...props} capability={capability} />\n    </div>\n  ) : null;\n};\n\ntype SpecCapabilityProps<V = any> = CapabilityProps<SpecCapability, V>;\nPodCount.displayName = 'PodCount';\nEndpoints.displayName = 'Endpoints';\nLabel.displayName = 'Label';\nNamespaceSelector.displayName = 'NamespaceSelector';\nResourceRequirements.displayName = 'ResourceRequirements';\nBasicSelector.displayName = 'BasicSelector';\nBooleanSwitch.displayName = 'BooleanSwitch';\nCheckboxUIComponent.displayName = 'CheckboxUIComponent';\nUpdateStrategy.displayName = 'UpdateStrategy';\nSpecDescriptorDetailsItem.displayName = 'SpecDescriptorDetailsItem';\n","import { configureCountModal } from '@console/internal/components/modals';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { Descriptor } from '../types';\nimport { getPatchPathFromDescriptor } from '../utils';\n\nexport const configureSizeModal = ({\n  kindObj,\n  resource,\n  specDescriptor,\n  specValue,\n}: ConfigureSizeModalProps) => {\n  return configureCountModal({\n    resourceKind: kindObj,\n    resource,\n    defaultValue: specValue || 0,\n    // t('olm~Modify {{item}}')\n    titleKey: 'olm~Modify {{item}}',\n    titleVariables: { item: specDescriptor.displayName },\n    message: specDescriptor.description,\n    path: `/spec/${getPatchPathFromDescriptor(specDescriptor)}`,\n    // t('olm~Update {{item}}')\n    buttonTextKey: 'olm~Update {{item}}',\n    buttonTextVariables: { item: specDescriptor.displayName },\n  });\n};\n\ntype ConfigureSizeModalProps = {\n  kindObj: K8sKind;\n  resource: K8sResourceKind;\n  specDescriptor: Descriptor;\n  specValue: any;\n};\n","import i18n from '@console/internal/i18n';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { updateStrategyModal } from '../../modals/update-strategy-modal';\nimport { Descriptor } from '../types';\nimport { getPatchPathFromDescriptor } from '../utils';\n\nexport const configureUpdateStrategyModal = ({\n  kindObj,\n  resource,\n  specDescriptor,\n  specValue,\n}: ConfigureUpdateStrategyModalProps) => {\n  return updateStrategyModal({\n    resourceKind: kindObj,\n    resource,\n    defaultValue: specValue,\n    title: i18n.t('olm~Edit {{item}}', { item: specDescriptor.displayName }),\n    path: `/spec/${getPatchPathFromDescriptor(specDescriptor)}`,\n  });\n};\n\ntype ConfigureUpdateStrategyModalProps = {\n  kindObj: K8sKind;\n  resource: K8sResourceKind;\n  specDescriptor: Descriptor;\n  specValue: any;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '@console/internal/components/factory/modal';\nimport {\n  ConfigureUpdateStrategy,\n  getNumberOrPercent,\n} from '@console/internal/components/modals/configure-update-strategy-modal';\nimport { K8sKind, k8sPatch, K8sResourceKind, Patch } from '@console/internal/module/k8s';\nimport { usePromiseHandler } from '@console/shared/src/hooks/promise-handler';\n\nexport const UpdateStrategyModal: React.FC<UpdateStrategyModalProps> = ({\n  cancel,\n  close,\n  path,\n  defaultValue,\n  resource,\n  resourceKind,\n  title,\n}) => {\n  const { t } = useTranslation();\n  const getPath = path.substring(1).replace('/', '.');\n  const [handlePromise, inProgress, errorMessage] = usePromiseHandler();\n  const [strategyType, setStrategyType] = React.useState(\n    _.get(resource, `${getPath}.type`) || defaultValue,\n  );\n  const [maxUnavailable, setMaxUnavailable] = React.useState(\n    _.get(resource, `${getPath}.rollingUpdate.maxUnavailable`, '25%'),\n  );\n  const [maxSurge, setMaxSurge] = React.useState(\n    _.get(resource, `${getPath}.rollingUpdate.maxSurge`, '25%'),\n  );\n\n  const submit = React.useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n\n      const patch: Patch = { path: `${path}/rollingUpdate`, op: 'remove' };\n      if (strategyType === 'RollingUpdate') {\n        patch.value = {\n          maxUnavailable: getNumberOrPercent(maxUnavailable || '25%'),\n          maxSurge: getNumberOrPercent(maxSurge || '25%'),\n        };\n        patch.op = 'add';\n      }\n      handlePromise(\n        k8sPatch(resourceKind, resource, [\n          patch,\n          { path: `${path}/type`, value: strategyType, op: 'replace' },\n        ]),\n      )\n        .then(close)\n        .catch(() => {});\n    },\n    [close, handlePromise, maxSurge, maxUnavailable, path, resource, resourceKind, strategyType],\n  );\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>\n        <ConfigureUpdateStrategy\n          strategyType={strategyType}\n          maxUnavailable={maxUnavailable}\n          maxSurge={maxSurge}\n          onChangeStrategyType={setStrategyType}\n          onChangeMaxUnavailable={setMaxUnavailable}\n          onChangeMaxSurge={setMaxSurge}\n        />\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitText={t('public~Save')}\n        cancel={cancel}\n      />\n    </form>\n  );\n};\n\nexport const updateStrategyModal = createModalLauncher(UpdateStrategyModal);\n\nUpdateStrategyModal.displayName = 'UpdateStrategyModal';\n\nexport type UpdateStrategyModalProps = {\n  defaultValue: any;\n  path: string;\n  resource: K8sResourceKind;\n  resourceKind: K8sKind;\n  title: string;\n  cancel?: () => void;\n  close?: () => void;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceIcon } from '@console/internal/components/utils';\n\nexport const EndpointRow: React.FC<EndpointRowProps> = ({ endpoint }) => {\n  const detail = ['scheme', 'honorLabels', 'targetPort'].reduce(\n    (element, field) =>\n      endpoint?.[field] ? (\n        <span>\n          <span className=\"text-muted\">{field}:</span>\n          {endpoint[field]}\n        </span>\n      ) : (\n        element\n      ),\n    <span className=\"text-muted\">--</span>,\n  );\n\n  return (\n    <div className=\"co-ip-row\">\n      <div className=\"row\">\n        <div className=\"col-xs-6\">\n          <p>\n            <ResourceIcon kind=\"Service\" />\n            {endpoint.port || '--'}\n          </p>\n        </div>\n        <div className=\"col-xs-2\">\n          <p>{endpoint.interval || '--'}</p>\n        </div>\n        <div className=\"col-xs-4\">{detail}</div>\n      </div>\n    </div>\n  );\n};\n\nexport const EndpointList: React.FC<EndpointListProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"service-ips\">\n      <div className=\"row co-ip-header\">\n        <div className=\"col-xs-6\">{t('olm~Port')}</div>\n        <div className=\"col-xs-2\">{t('olm~Interval')}</div>\n        <div className=\"col-xs-4\" />\n      </div>\n      <div className=\"rows\">\n        {props.endpoints ? (\n          props.endpoints.map((e) => <EndpointRow endpoint={e} key={e.port} />)\n        ) : (\n          <span className=\"text-muted\">{t('olm~No endpoints')}</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\n/**\n * Taken from https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n */\nexport type Endpoint = {\n  port?: string;\n  targetPort?: number | string;\n  scheme?: string;\n  honorLabels?: boolean;\n  interval?: string;\n};\n\nexport type EndpointRowProps = {\n  endpoint: Endpoint;\n};\n\nexport type EndpointListProps = {\n  endpoints: Endpoint[];\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsItem } from '@console/internal/components/utils';\nimport { Status, SuccessStatus } from '@console/shared';\nimport { DefaultCapability, Invalid, K8sResourceLinkCapability, SecretCapability } from '../common';\nimport { CapabilityProps, StatusCapability } from '../types';\nimport { isMainStatusDescriptor, getValidCapabilitiesForValue } from '../utils';\nimport { Phase } from './phase';\nimport { PodStatusChart, PodStatusChartProps } from './pods';\n\nconst PodStatuses: React.FC<StatusCapabilityProps<PodStatusChartProps['statuses']>> = ({\n  description,\n  descriptor,\n  fullPath,\n  label,\n  obj,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const detail = React.useMemo(() => {\n    if (!_.isObject(value) || _.some(value, (v) => !_.isArray(v))) {\n      return <Invalid path={descriptor.path} />;\n    }\n    if (_.every(value, (v) => _.isArray(v) && v.length === 0)) {\n      return <span className=\"text-muted\">{t('olm~No members')}</span>;\n    }\n    return <PodStatusChart statuses={value} subTitle={descriptor.path} />;\n  }, [descriptor.path, t, value]);\n  return (\n    <div className=\"co-operand-details__section--info\">\n      <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n        {detail}\n      </DetailsItem>\n    </div>\n  );\n};\n\nconst Link: React.FC<StatusCapabilityProps<string>> = ({\n  description,\n  fullPath,\n  label,\n  obj,\n  value,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      {!_.isNil(value) ? (\n        <a href={value}>{value.replace(/https?:\\/\\//, '')}</a>\n      ) : (\n        <span className=\"text-muted\">{t('public~None')}</span>\n      )}\n    </DetailsItem>\n  );\n};\n\nconst K8sPhase: React.FC<StatusCapabilityProps<string>> = ({\n  description,\n  fullPath,\n  label,\n  obj,\n  value,\n}) => (\n  <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n    <Phase status={value} />\n  </DetailsItem>\n);\n\nconst K8sPhaseReason: React.FC<StatusCapabilityProps<string>> = ({\n  description,\n  fullPath,\n  label,\n  obj,\n  value,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n      {_.isEmpty(value) ? (\n        <span className=\"text-muted\">{t('public~None')}</span>\n      ) : (\n        <pre className=\"co-pre\" style={{ width: 'max-content' }}>\n          {value}\n        </pre>\n      )}\n    </DetailsItem>\n  );\n};\n\nconst MainStatus: React.FC<StatusCapabilityProps<string>> = ({\n  description,\n  fullPath,\n  label,\n  obj,\n  value,\n}) => (\n  <DetailsItem description={description} label={label} obj={obj} path={fullPath}>\n    {value === 'Running' ? <SuccessStatus title={value} /> : <Status status={value} />}\n  </DetailsItem>\n);\n\nexport const StatusDescriptorDetailsItem: React.FC<StatusCapabilityProps> = ({\n  className,\n  ...props\n}) => {\n  const [capability] =\n    getValidCapabilitiesForValue<StatusCapability>(props.descriptor, props.value) ?? [];\n\n  const Component = React.useMemo(() => {\n    if (capability?.startsWith(StatusCapability.k8sResourcePrefix)) {\n      return K8sResourceLinkCapability;\n    }\n\n    switch (capability) {\n      case StatusCapability.podStatuses:\n        return PodStatuses;\n      case StatusCapability.w3Link:\n        return Link;\n      case StatusCapability.k8sPhase:\n        return K8sPhase;\n      case StatusCapability.k8sPhaseReason:\n        return K8sPhaseReason;\n      case StatusCapability.password:\n        return SecretCapability;\n      case StatusCapability.hidden:\n        return null;\n      default:\n        if (_.isObject(props.value)) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `[Invalid StatusDescriptor] Cannot render a descriptor detail item for 'status.${props.descriptor.path}'. A valid x-descriptor must be provided for non-primitive properties.`,\n            'See https://github.com/openshift/console/blob/master/frontend/packages/operator-lifecycle-manager/src/components/descriptors/reference/reference.md#olm-descriptor-reference',\n          );\n          return null;\n        }\n        return isMainStatusDescriptor(props.descriptor) ? MainStatus : DefaultCapability;\n    }\n  }, [capability, props.value, props.descriptor]);\n  return Component ? (\n    <div className={className}>\n      <Component {...props} capability={capability} />\n    </div>\n  ) : null;\n};\n\ntype StatusCapabilityProps<V = any> = CapabilityProps<StatusCapability, V>;\n\nPhase.displayName = 'Phase';\nPodStatuses.displayName = 'PodStatuses';\nLink.displayName = 'Link';\nK8sPhase.displayName = 'K8sPhase';\nK8sPhaseReason.displayName = 'K8sPhaseReason';\nMainStatus.displayName = 'MainStatus';\nStatusDescriptorDetailsItem.displayName = 'StatusDescriptorDetailsItem';\n","import * as React from 'react';\nimport { BanIcon } from '@patternfly/react-icons/dist/esm/icons/ban-icon';\n\nexport const Phase: React.SFC<PhaseProps> = ({ status }) => (\n  <span className={status === 'Failed' ? 'co-error' : ''}>\n    {status === 'Failed' && <BanIcon data-test-id=\"ban-icon\" />} {status}\n  </span>\n);\n\nexport type PhaseProps = {\n  status: string;\n};\n\nPhase.displayName = 'Phase';\n","import * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\n/* eslint-disable camelcase */\nimport { chart_color_blue_100 as blue100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 as blue200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 as blue300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport * as _ from 'lodash';\n/* eslint-enable camelcase */\nimport { useRefWidth } from '@console/internal/components/utils';\nimport { calculateRadius } from '@console/shared/';\n\nconst colorScale = [blue300.value, blue200.value, blue100.value];\n\nexport const PodStatusChart: React.FC<PodStatusChartProps> = ({ statuses, subTitle }) => {\n  const [ref, width] = useRefWidth();\n  const data = _.map(statuses, (podList, status) => {\n    const x = status;\n    const y = podList.length;\n    return {\n      label: `${y} ${x}`,\n      x,\n      y,\n    };\n  });\n  const total = data.reduce((sum, dataPoint) => sum + dataPoint.y, 0);\n  const { podStatusInnerRadius, podStatusOuterRadius } = calculateRadius(130); // default value of size is 130\n\n  return (\n    <div ref={ref} className=\"graph-wrapper--gauge\">\n      <ChartDonut\n        colorScale={colorScale}\n        constrainToVisibleArea\n        data={data}\n        height={width}\n        title={total.toString()}\n        width={width}\n        innerRadius={podStatusInnerRadius}\n        radius={podStatusOuterRadius}\n      />\n      {/* Use instead of `subTitle` on <ChartDonut> so long paths do not clip  */}\n      <div className=\"graph-donut-subtitle\" data-test-id=\"chart-donut-subtitle\">\n        {subTitle}\n      </div>\n    </div>\n  );\n};\n\nexport type PodStatusChartProps = {\n  subTitle: string;\n  statuses: { [key: string]: string[] };\n};\n\nPodStatusChart.displayName = 'PodStatusChart';\n","import * as React from 'react';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { SectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { DescriptorType, StatusDescriptor } from '../types';\nimport { useCalculatedDescriptorProperties } from '../utils';\n\n// Determines if the descriptor points to an array value.\nconst validateConditionsDescriptor = (descriptor: StatusDescriptor, value: any): boolean => {\n  if (!_.isArray(value)) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `[Invalid x-descriptor] 'urn:alm:descriptor:io.kubernetes.conditions' is incompatible with ${descriptor.path} and will have no effect`,\n      descriptor,\n    );\n    return false;\n  }\n  return true;\n};\n\nexport const DescriptorConditions: React.FC<ConditionsDescriptorProps> = ({\n  descriptor,\n  obj,\n  schema,\n}) => {\n  const { displayName, value } = useCalculatedDescriptorProperties(\n    DescriptorType.status,\n    descriptor,\n    schema,\n    obj,\n  );\n\n  if (!validateConditionsDescriptor(descriptor, value)) {\n    return null;\n  }\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={displayName} />\n      <Conditions conditions={value} />\n    </div>\n  );\n};\nDescriptorConditions.displayName = 'DescriptorConditions';\n\ntype ConditionsDescriptorProps = {\n  descriptor: StatusDescriptor;\n  obj: K8sResourceKind;\n  schema: JSONSchema7;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { useShowOperandsInAllNamespaces } from './useShowOperandsInAllNamespaces';\n\nexport const ShowOperandsInAllNamespacesRadioGroup: React.FC = () => {\n  const { t } = useTranslation();\n  const [\n    showOperandsInAllNamespaces,\n    setShowOperandsInAllNamespaces,\n  ] = useShowOperandsInAllNamespaces();\n  return (\n    <RadioGroup\n      label={t('olm~Show operands in:')}\n      currentValue={showOperandsInAllNamespaces ? 'true' : 'false'}\n      inline\n      items={[\n        {\n          value: 'true',\n          title: t('olm~All namespaces'),\n        },\n        {\n          value: 'false',\n          title: t('olm~Current namespace only'),\n        },\n      ]}\n      onChange={({ currentTarget }) =>\n        setShowOperandsInAllNamespaces(currentTarget.value === 'true')\n      }\n    />\n  );\n};\n"],"sourceRoot":""}