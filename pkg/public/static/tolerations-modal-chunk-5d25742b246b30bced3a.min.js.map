{"version":3,"sources":["webpack:///./public/components/modals/tolerations-modal.tsx"],"names":["TolerationsModal","props","getTolerationsFromResource","resource","resourceKind","kind","spec","tolerations","template","setTolerations","t","operators","Exists","Equal","effects","NoSchedule","PreferNoSchedule","NoExecute","change","e","i","field","newValue","target","value","prevTolerations","clonedTolerations","isEditable","toleration","isNew","errorMessage","onSubmit","preventDefault","path","submittedTolerations","patch","op","handlePromise","close","name","className","label","key","operator","effect","type","onChange","readOnly","dropDownClassName","items","opChange","selectedKey","title","content","onClick","tmpTolerations","splice","remove","variant","inProgress","submitText","cancel","tolerationsModal"],"mappings":"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","file":"tolerations-modal-chunk-5d25742b246b30bced3a.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { Dropdown, EmptyBox, withHandlePromise, HandlePromiseProps } from '../utils';\nimport { K8sKind, k8sPatch, Toleration, TolerationOperator } from '../../module/k8s';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '../factory';\n\nconst TolerationsModal = withHandlePromise((props: TolerationsModalProps) => {\n  const getTolerationsFromResource = (): Toleration[] => {\n    const { resource } = props;\n    return props.resourceKind.kind === 'Pod'\n      ? resource.spec.tolerations\n      : resource.spec.template.spec.tolerations;\n  };\n\n  const [tolerations, setTolerations] = React.useState<Toleration[]>(\n    getTolerationsFromResource() || [],\n  );\n\n  const { t } = useTranslation();\n\n  const operators = {\n    Exists: 'Exists',\n    Equal: 'Equal',\n  };\n\n  const effects = {\n    '': 'All Effects',\n    NoSchedule: 'NoSchedule',\n    PreferNoSchedule: 'PreferNoSchedule',\n    NoExecute: 'NoExecute',\n  };\n\n  const submit = (e: React.FormEvent<EventTarget>) => {\n    e.preventDefault();\n\n    const path =\n      props.resourceKind.kind === 'Pod' ? '/spec/tolerations' : '/spec/template/spec/tolerations';\n\n    // Remove the internal `isNew` property\n    const submittedTolerations = _.map(tolerations, (toleration) => _.omit(toleration, 'isNew'));\n\n    // Make sure to 'add' if the path does not already exist, otherwise the patch request will fail\n    const op = _.isEmpty(getTolerationsFromResource()) ? 'replace' : 'add';\n\n    const patch = [{ path, op, value: submittedTolerations }];\n\n    props.handlePromise(k8sPatch(props.resourceKind, props.resource, patch), props.close);\n  };\n\n  const cancel = () => {\n    props.close();\n  };\n\n  const change = (e, i: number, field: string) => {\n    const newValue = e.target ? e.target.value : e;\n\n    setTolerations((prevTolerations) => {\n      const clonedTolerations = _.cloneDeep(prevTolerations);\n      clonedTolerations[i][field] = newValue;\n      return clonedTolerations;\n    });\n  };\n\n  const opChange = (op: TolerationOperator, i: number) => {\n    setTolerations((prevTolerations) => {\n      const clonedTolerations = _.cloneDeep(prevTolerations);\n      clonedTolerations[i].operator = op;\n      if (op === 'Exists') {\n        clonedTolerations[i].value = '';\n      }\n      return clonedTolerations;\n    });\n  };\n\n  const remove = (i: number) => {\n    const tmpTolerations = [...tolerations];\n    tmpTolerations.splice(i, 1);\n    setTolerations(tmpTolerations);\n  };\n\n  const newToleration = (): TolerationModalItem => {\n    return { key: '', operator: 'Exists', value: '', effect: '', isNew: true };\n  };\n\n  const addRow = () => {\n    setTolerations([...tolerations, newToleration()]);\n  };\n\n  const isEditable = (toleration: TolerationModalItem) => {\n    return props.resourceKind.kind !== 'Pod' || toleration.isNew;\n  };\n\n  const { errorMessage } = props;\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content toleration-modal\">\n      <ModalTitle>{t('public~Edit tolerations')}</ModalTitle>\n      <ModalBody>\n        {_.isEmpty(tolerations) ? (\n          <EmptyBox label={t('public~Tolerations')} />\n        ) : (\n          <>\n            <div className=\"row toleration-modal__heading hidden-sm hidden-xs\">\n              <div className=\"col-md-4 text-secondary text-uppercase\">{t('public~Key')}</div>\n              <div className=\"col-md-2 text-secondary text-uppercase\">{t('public~Operator')}</div>\n              <div className=\"col-md-3 text-secondary text-uppercase\">{t('public~Value')}</div>\n              <div className=\"col-md-2 text-secondary text-uppercase\">{t('public~Effect')}</div>\n              <div className=\"col-md-1\" />\n            </div>\n            {_.map(tolerations, (toleration, i) => {\n              const { key, operator, value, effect = '' } = toleration;\n              return (\n                <div className=\"row toleration-modal__row\" key={i}>\n                  <div className=\"col-md-4 col-sm-5 col-xs-5 toleration-modal__field\">\n                    <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      {t('public~Key')}\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"pf-v5-c-form-control\"\n                      value={key}\n                      onChange={(e) => change(e, i, 'key')}\n                      readOnly={!isEditable(toleration)}\n                    />\n                  </div>\n                  <div className=\"col-md-2 col-sm-5 col-xs-5 toleration-modal__field\">\n                    <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      {t('public~Operator')}\n                    </div>\n                    {isEditable(toleration) ? (\n                      <Dropdown\n                        className=\"toleration-modal__dropdown\"\n                        dropDownClassName=\"dropdown--full-width\"\n                        items={operators}\n                        onChange={(op: TolerationOperator) => opChange(op, i)}\n                        selectedKey={operator}\n                        title={operators[operator]}\n                      />\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        value={operator}\n                        readOnly\n                      />\n                    )}\n                  </div>\n                  <div className=\"clearfix visible-sm visible-xs\" />\n                  <div className=\"col-md-3 col-sm-5 col-xs-5 toleration-modal__field\">\n                    <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      {t('public~Value')}\n                    </div>\n                    <input\n                      type=\"text\"\n                      className=\"pf-v5-c-form-control\"\n                      value={value}\n                      onChange={(e) => change(e, i, 'value')}\n                      readOnly={!isEditable(toleration) || operator === 'Exists'}\n                    />\n                  </div>\n                  <div className=\"col-md-2 col-sm-5 col-xs-5 toleration-modal__field\">\n                    <div className=\"toleration-modal__heading hidden-md hidden-lg text-secondary text-uppercase\">\n                      {t('public~Effect')}\n                    </div>\n                    {isEditable(toleration) ? (\n                      <Dropdown\n                        className=\"toleration-modal__dropdown\"\n                        dropDownClassName=\"dropdown--full-width\"\n                        items={effects}\n                        onChange={(e: string) => change(e, i, 'effect')}\n                        selectedKey={effect}\n                        title={effects[effect]}\n                      />\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        value={effects[effect]}\n                        readOnly\n                      />\n                    )}\n                  </div>\n                  <div className=\"col-md-1 col-sm-2 col-xs-2\">\n                    {isEditable(toleration) && (\n                      <Tooltip content={t('public~Remove')}>\n                        <Button\n                          type=\"button\"\n                          className=\"toleration-modal__delete-icon\"\n                          onClick={() => remove(i)}\n                          aria-label={t('public~Remove')}\n                          variant=\"plain\"\n                        >\n                          <MinusCircleIcon className=\"pairs-list__side-btn pairs-list__delete-icon\" />\n                        </Button>\n                      </Tooltip>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </>\n        )}\n        <Button className=\"pf-m-link--align-left\" onClick={addRow} type=\"button\" variant=\"link\">\n          <PlusCircleIcon data-test-id=\"pairs-list__add-icon\" className=\"co-icon-space-r\" />\n          {t('public~Add more')}\n        </Button>\n      </ModalBody>\n      <ModalSubmitFooter\n        errorMessage={errorMessage}\n        inProgress={false}\n        submitText={t('public~Save')}\n        cancel={cancel}\n      />\n    </form>\n  );\n});\n\nexport const tolerationsModal = createModalLauncher(TolerationsModal);\n\ntype TolerationModalItem = {\n  // isNew is used internally in the dialog to track existing vs new\n  // tolerations on pods and is not part of the k8s API\n  isNew?: boolean;\n} & Toleration;\n\nexport type TolerationsModalProps = {\n  resourceKind: K8sKind;\n  resource: any;\n  existingReadOnly?: boolean;\n  close?: () => void;\n  handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n} & ModalComponentProps &\n  HandlePromiseProps;\n"],"sourceRoot":""}