{"version":3,"sources":["webpack:///./packages/pipelines-plugin/src/components/pac/hooks/usePacData.ts","webpack:///./packages/pipelines-plugin/src/components/pac/PacForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pac/hooks/usePacGHManifest.ts","webpack:///./packages/pipelines-plugin/src/components/pac/pac-validation-schema.ts","webpack:///./packages/pipelines-plugin/src/components/pac/PacAppForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pac/PacPermissions.tsx","webpack:///./packages/pipelines-plugin/src/components/pac/PacOverview.tsx","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/pipelines-plugin/src/components/pac/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pac/PacPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pac/pac-utils.ts"],"names":["usePacData","code","apiCallProgressRef","loaded","setloaded","secretData","setSecretData","loadError","setLoadError","isFirstSetup","setIsFirstSetup","pacSecretData","pacSecretDataLoaded","pacSecretDataError","mounted","current","response","method","data","json","name","id","pem","webhook_secret","html_url","secret","toString","err","namespace","t","manifestData","title","breadcrumbs","path","undefined","initialValues","applicationName","onSubmit","onReset","goBack","validateOnBlur","validateOnChange","validationSchema","formikProps","usePacGHManifest","elRoute","setElRoute","setLoded","locURL","window","location","href","controllerUrl","console","log","message","url","hook_attributes","redirect_url","callback_urls","public","default_permissions","checks","contents","issues","members","metadata","organization_plan","pull_requests","default_events","pacValidationSchema","shape","errors","handleReset","status","isSubmitting","values","setStatus","manifestVal","setManifestVal","action","event","dataMn","JSON","stringify","submitError","preventDefault","flexLayout","className","label","isRequired","fieldId","type","text","placeholder","required","value","hidden","errorMessage","submitLabel","disableSubmit","resetLabel","sticky","isOpen","setIsOpen","toggleText","onToggle","isExpanded","hasGutter","span","component","small","showSuccessAlert","alertVisible","setAlertVisible","pageTitle","pageHeading","variant","secretNs","annotations","actionClose","onClose","appUrl","ns","target","rel","appName","kind","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","spec","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","resource","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","filter","dc","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","obj","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","push","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","props","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","str","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","error","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","newSecret","save","encode","s","onSave","renderBody","disabled","htmlFor","onChange","onFormDisable","disable","submitText","helpText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","PullSecretForm","setAuthType","pullSecretData","jsonContent","newDataKey","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","slug","ResourceNotFound","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","display","flex","flexDirection","margin","subTitle","fullWidth","children","extraMargin","dataTest","style","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","labels","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","useK8sGet","opts","setData","setLoaded","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","dataSelector","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","factory","dataModelFactory","dataModelContext","extensionContext","getExtension","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alerts","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","dispatch","app","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","URLSearchParams","search","isPipelinesEnabled","isAdmin","isAdminCheckLoading","light","createPACSecret","appId","privateKey","webHookSecret","secretPayload","getControllerUrl","pacControllerUrl","elRouteData","eventlistener","controller","updatePACInfo","appLink","cfg"],"mappings":"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","file":"pipelines-plugin/code-refs/pacComponent-chunk-dfc3d5bd88482a6cdc39.min.js","sourcesContent":["import * as React from 'react';\nimport { coFetch } from '@console/internal/co-fetch';\nimport { removeQueryArgument } from '@console/internal/components/utils';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { SecretModel } from '@console/internal/models';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { PIPELINE_NAMESPACE } from '../../pipelines/const';\nimport { PAC_GH_APP_MANIFEST_API, PAC_SECRET_NAME } from '../const';\nimport { createPACSecret, updatePACInfo } from '../pac-utils';\n\nexport const usePacData = (\n  code: string,\n): { loaded: boolean; secretData: SecretKind; loadError: Error; isFirstSetup: boolean } => {\n  const apiCallProgressRef = React.useRef(false);\n  const [loaded, setloaded] = React.useState<boolean>(false);\n  const [secretData, setSecretData] = React.useState<SecretKind>();\n  const [loadError, setLoadError] = React.useState(null);\n  const [isFirstSetup, setIsFirstSetup] = React.useState<boolean>(false);\n  const [pacSecretData, pacSecretDataLoaded, pacSecretDataError] = useK8sGet<SecretKind>(\n    SecretModel,\n    PAC_SECRET_NAME,\n    PIPELINE_NAMESPACE,\n  );\n\n  React.useEffect(() => {\n    let mounted = true;\n    const configureGitHubApp = async () => {\n      if (code && !apiCallProgressRef.current) {\n        apiCallProgressRef.current = true;\n        try {\n          const response = await coFetch(`${PAC_GH_APP_MANIFEST_API}/${code}/conversions`, {\n            method: 'POST',\n          });\n          const data = await response.json();\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          const { name, id, pem, webhook_secret, html_url } = data;\n          const secret = await createPACSecret(id.toString(), pem, webhook_secret, name, html_url);\n          await updatePACInfo(html_url);\n          if (mounted) {\n            setSecretData(secret);\n            setloaded(true);\n            removeQueryArgument('code');\n            setIsFirstSetup(true);\n            apiCallProgressRef.current = false;\n          }\n        } catch (err) {\n          if (mounted) {\n            apiCallProgressRef.current = false;\n            removeQueryArgument('code');\n            setloaded(true);\n            setLoadError(err);\n          }\n        }\n      }\n    };\n    configureGitHubApp();\n    return () => {\n      mounted = false;\n    };\n  }, [code]);\n\n  React.useEffect(() => {\n    if (pacSecretDataLoaded && pacSecretData && !pacSecretDataError) {\n      setSecretData(pacSecretData);\n      setloaded(true);\n    } else if (\n      pacSecretDataLoaded &&\n      pacSecretDataError?.code === 404 &&\n      !apiCallProgressRef.current\n    ) {\n      setloaded(true);\n    }\n  }, [pacSecretData, pacSecretDataError, pacSecretDataLoaded]);\n\n  return { loaded, secretData, loadError, isFirstSetup };\n};\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { history, LoadingBox, PageHeading } from '@console/internal/components/utils';\nimport { PAC_GH_APP_NAME } from './const';\nimport { usePacGHManifest } from './hooks/usePacGHManifest';\nimport { pacValidationSchema } from './pac-validation-schema';\nimport PacAppForm from './PacAppForm';\n\nconst PacForm: React.FC<{ namespace: string }> = ({ namespace }) => {\n  const { t } = useTranslation();\n  const { loaded, manifestData } = usePacGHManifest();\n\n  if (!loaded) {\n    return <LoadingBox />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~Setup GitHub App')}</title>\n      </Helmet>\n      <PageHeading\n        title={t('pipelines-plugin~Setup GitHub App')}\n        breadcrumbs={[\n          {\n            name: t('pipelines-plugin~Pipelines'),\n            path: `/pipelines/ns/${namespace}`,\n          },\n          { name: t('pipelines-plugin~Setup GitHub App'), path: undefined },\n        ]}\n      />\n      <Formik\n        initialValues={{ applicationName: PAC_GH_APP_NAME, manifestData }}\n        onSubmit={() => {}}\n        onReset={history.goBack}\n        validateOnBlur={false}\n        validateOnChange={false}\n        validationSchema={pacValidationSchema(t)}\n      >\n        {(formikProps) => <PacAppForm {...formikProps} />}\n      </Formik>\n    </>\n  );\n};\n\nexport default PacForm;\n","import * as React from 'react';\nimport { PAC_GH_APP_NAME } from '../const';\nimport { getControllerUrl } from '../pac-utils';\n\ntype GHManifestData = {\n  name: string;\n  url: string;\n  redirect_url: string;\n  callback_urls: string[];\n  hook_attributes: { url: string };\n  public: boolean;\n  default_permissions: { [key: string]: string };\n  default_events: string[];\n};\n\nexport const usePacGHManifest = (): { loaded: boolean; manifestData: GHManifestData } => {\n  const [elRoute, setElRoute] = React.useState<string>();\n  const [loaded, setLoded] = React.useState<boolean>(false);\n  const locURL = window.location.href;\n\n  React.useEffect(() => {\n    const getELRoute = async () => {\n      try {\n        const controllerUrl = await getControllerUrl();\n        setElRoute(controllerUrl);\n        setLoded(true);\n      } catch (err) {\n        setLoded(true);\n        // eslint-disable-next-line no-console\n        console.log(err.message);\n      }\n    };\n    getELRoute();\n  }, []);\n\n  const manifestData: GHManifestData = {\n    name: PAC_GH_APP_NAME,\n    url: locURL,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    hook_attributes: {\n      url: elRoute || '',\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    redirect_url: locURL,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    callback_urls: [locURL],\n    public: true,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    default_permissions: {\n      checks: 'write',\n      contents: 'write',\n      issues: 'write',\n      members: 'read',\n      metadata: 'read',\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      organization_plan: 'read',\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      pull_requests: 'write',\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    default_events: ['check_run', 'issue_comment', 'pull_request', 'push'],\n  };\n\n  return { loaded, manifestData };\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\n\nexport const pacValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    applicationName: nameValidationSchema(t),\n  });\n","import * as React from 'react';\nimport {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport { FormikProps, FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { FormFooter, FormBody, InputField, FlexForm } from '@console/shared';\nimport { PAC_GH_APP_DOC, PAC_GH_APP_NEW } from './const';\nimport PacPermissions from './PacPermissions';\n\nconst PacAppForm: React.FC<FormikProps<FormikValues>> = ({\n  errors,\n  handleReset,\n  status,\n  isSubmitting,\n  values,\n}) => {\n  const { t } = useTranslation();\n  const { setStatus } = useFormikContext<FormikValues>();\n  const [manifestVal, setManifestVal] = React.useState<string>('');\n\n  const submitFrom = (event: React.FormEvent<EventTarget>) => {\n    if (!values.manifestData.hook_attributes.url) {\n      setStatus({ submitError: t('pipelines-plugin~Unable to detect Event listener URL') });\n      event.preventDefault();\n    } else {\n      const dataMn = JSON.stringify({ ...values.manifestData, name: values.applicationName });\n      setManifestVal(dataMn);\n    }\n  };\n  return (\n    <FlexForm\n      action={PAC_GH_APP_NEW}\n      onSubmit={submitFrom}\n      method=\"post\"\n      data-test=\"form-setup-github-app\"\n    >\n      <FormBody flexLayout className=\"co-m-pane__body--no-top-margin\">\n        <FormSection>\n          <FormGroup\n            label={t('pipelines-plugin~GitHub application name')}\n            isRequired\n            fieldId=\"app-name-field\"\n          >\n            <InputField\n              type={TextInputTypes.text}\n              name=\"applicationName\"\n              placeholder={t('pipelines-plugin~Enter name of application')}\n              data-test=\"pac-applicationName\"\n              required\n              aria-label={t('pipelines-plugin~Enter name of application')}\n            />\n            <input type=\"text\" name=\"manifest\" id=\"manifest\" value={manifestVal} hidden />\n\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem>\n                  {t(\n                    'pipelines-plugin~Provide a unique name for your GitHub app, e.g. \"pipelines-ci-clustername\"',\n                  )}\n                </HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          </FormGroup>\n          <PacPermissions />\n          <ExternalLink\n            text={t('pipelines-plugin~View all steps in documentation')}\n            href={PAC_GH_APP_DOC}\n          />\n        </FormSection>\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('pipelines-plugin~Setup')}\n        disableSubmit={!_.isEmpty(errors) || isSubmitting || !!status?.submitError}\n        resetLabel={t('pipelines-plugin~Cancel')}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default PacAppForm;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  ExpandableSection,\n  Grid,\n  GridItem,\n  TextVariants,\n  Text,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nconst PacPermissions: React.FC = () => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState(false);\n  return (\n    <ExpandableSection\n      toggleText={t('pipelines-plugin~See GitHub permissions')}\n      onToggle={() => setIsOpen(!isOpen)}\n      isExpanded={isOpen}\n    >\n      <Grid hasGutter span={6}>\n        <GridItem>\n          <FormGroup\n            label={t('pipelines-plugin~Repository Permissions:')}\n            fieldId=\"repo-permissions\"\n          >\n            <Text component={TextVariants.small}>\n              {t('pipelines-plugin~Checks: Read & Write')}\n              <br />\n              {t('pipelines-plugin~Contents: Read & Write')}\n              <br />\n              {t('pipelines-plugin~Issues: Read & Write')}\n              <br />\n              {t('pipelines-plugin~Members: Readonly')}\n              <br />\n              {t('pipelines-plugin~Metadata: Readonly')}\n              <br />\n              {t('pipelines-plugin~Organization plan: Readonly')}\n              <br />\n              {t('pipelines-plugin~Pull requests: Read & Write')}\n            </Text>\n          </FormGroup>\n        </GridItem>\n        <GridItem>\n          <FormGroup\n            label={t('pipelines-plugin~Organization permissions:')}\n            fieldId=\"org-permissions\"\n          >\n            <Text component={TextVariants.small}>\n              {t('pipelines-plugin~Members: Readonly')}\n              <br />\n              {t('pipelines-plugin~Plan: Readonly')}\n            </Text>\n          </FormGroup>\n        </GridItem>\n        <GridItem>\n          <FormGroup\n            label={t('pipelines-plugin~Subscribe to events:')}\n            fieldId=\"event-subscriptions\"\n          >\n            <Text component={TextVariants.small}>\n              {t('pipelines-plugin~Commit comment')}\n              <br />\n              {t('pipelines-plugin~Issue comment')}\n              <br />\n              {t('pipelines-plugin~Pull request')}\n              <br />\n              {t('pipelines-plugin~Pull request review')}\n              <br />\n              {t('pipelines-plugin~Pull request review comment')}\n              <br />\n              {t('pipelines-plugin~Push')}\n            </Text>\n          </FormGroup>\n        </GridItem>\n      </Grid>\n    </ExpandableSection>\n  );\n};\n\nexport default PacPermissions;\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  FormGroup,\n  Hint,\n  HintBody,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { Helmet } from 'react-helmet';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { ExternalLink, ResourceLink, PageHeading } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { SecretKind } from '@console/internal/module/k8s';\n\ntype PacOverviewProps = {\n  namespace: string;\n  secret?: SecretKind;\n  loadError?: Error;\n  showSuccessAlert?: boolean;\n};\n\nconst PacOverview: React.FC<PacOverviewProps> = ({\n  namespace,\n  secret,\n  loadError,\n  showSuccessAlert = false,\n}) => {\n  const { t } = useTranslation();\n  const [alertVisible, setAlertVisible] = React.useState<boolean>(showSuccessAlert);\n\n  React.useEffect(() => {\n    setAlertVisible(showSuccessAlert);\n  }, [showSuccessAlert]);\n\n  const pageTitle = (\n    <Helmet>\n      <title>{t('pipelines-plugin~GitHub App Details')}</title>\n    </Helmet>\n  );\n  const pageHeading = (\n    <PageHeading\n      title={t('pipelines-plugin~GitHub App Details')}\n      breadcrumbs={[\n        {\n          name: t('pipelines-plugin~Pipelines'),\n          path: `/pipelines/ns/${namespace}`,\n        },\n        { name: t('pipelines-plugin~GitHub App details'), path: undefined },\n      ]}\n    />\n  );\n  if (loadError || !secret?.metadata) {\n    return (\n      <>\n        {pageTitle}\n        {pageHeading}\n        <div className=\"co-m-page__body\">\n          <div className=\"co-m-pane__body no-margin\">\n            <Alert variant=\"danger\" title={t('pipelines-plugin~Something unexpected happened!!')}>\n              {loadError?.message && <p>{loadError.message}</p>}\n            </Alert>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  const {\n    metadata: { name, namespace: secretNs, annotations },\n  } = secret;\n\n  return (\n    <>\n      {pageTitle}\n      {pageHeading}\n      <div className=\"co-m-page__body\">\n        <div className=\"co-m-pane__body no-margin\">\n          {alertVisible && (\n            <Alert\n              variant=\"success\"\n              title={t('pipelines-plugin~You have successfully setup the GitHub App')}\n              actionClose={<AlertActionCloseButton onClose={() => setAlertVisible(false)} />}\n            >\n              {annotations?.appUrl && (\n                <Trans t={t} ns=\"pipelines-plugin\">\n                  <p>\n                    Use the{' '}\n                    <a href={annotations.appUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                      link\n                    </a>{' '}\n                    to install the newly created GitHub application to your repositories in your\n                    organization/account\n                  </p>\n                </Trans>\n              )}\n            </Alert>\n          )}\n          {!showSuccessAlert && annotations?.appUrl && (\n            <Hint>\n              <HintBody>\n                <Trans t={t} ns=\"pipelines-plugin\">\n                  Use this{' '}\n                  <a href={annotations.appUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    link\n                  </a>{' '}\n                  to install the GitHub Application to your repositories in your\n                  organization/account.\n                </Trans>\n              </HintBody>\n            </Hint>\n          )}\n          <br />\n          <FormGroup fieldId=\"app-overview\">\n            {annotations?.appName && (\n              <FormGroup label={t('pipelines-plugin~App Name')} fieldId=\"app-name\">\n                <Text component={TextVariants.small}>{annotations.appName}</Text>\n              </FormGroup>\n            )}\n            <br />\n            {annotations?.appUrl && (\n              <FormGroup label={t('pipelines-plugin~App Link')} fieldId=\"app-link\">\n                <ExternalLink text={annotations.appUrl} href={annotations.appUrl} />\n              </FormGroup>\n            )}\n            <br />\n            <FormGroup label={t('pipelines-plugin~Secret')} fieldId=\"res-secret\">\n              <ResourceLink kind={SecretModel.kind} name={name} namespace={secretNs} />\n            </FormGroup>\n            <br />\n          </FormGroup>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PacOverview;\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export { default as PacPage } from './PacPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import * as React from 'react';\n// import { useTranslation } from 'react-i18next';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { LoadingBox, AccessDenied } from '@console/internal/components/utils';\nimport { useFlag } from '@console/shared/src';\nimport { FLAG_OPENSHIFT_PIPELINE } from '../../const';\nimport { PIPELINE_NAMESPACE } from '../pipelines/const';\nimport { usePacData } from './hooks/usePacData';\nimport PacForm from './PacForm';\nimport PacOverview from './PacOverview';\n\nconst PacPage: React.FC = () => {\n  // const { t } = useTranslation();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryParams = new URLSearchParams(location.search);\n  const isPipelinesEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE);\n  const [isAdmin, isAdminCheckLoading] = useAccessReview({\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'create',\n    resource: 'secrets',\n  });\n  const code = queryParams.get('code');\n  const { ns: namespace } = useParams();\n\n  React.useEffect(() => {\n    if (isPipelinesEnabled && namespace !== PIPELINE_NAMESPACE) {\n      navigate(`/pac/ns/${PIPELINE_NAMESPACE}`);\n    }\n  }, [isPipelinesEnabled, namespace, navigate]);\n\n  const { loaded, secretData, loadError, isFirstSetup } = usePacData(code);\n\n  if (!isPipelinesEnabled) {\n    return <ErrorPage404 />;\n  }\n\n  if (!isAdminCheckLoading && !isAdmin) {\n    return <AccessDenied />;\n  }\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light} hideApplications>\n      {!loaded ? (\n        <LoadingBox />\n      ) : loadError || secretData ? (\n        <PacOverview\n          namespace={namespace}\n          secret={secretData}\n          loadError={loadError}\n          showSuccessAlert={isFirstSetup}\n        />\n      ) : (\n        <PacForm namespace={namespace} />\n      )}\n    </NamespacedPage>\n  );\n};\n\nexport default PacPage;\n","import {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, RouteModel, SecretModel } from '@console/internal/models';\nimport { RouteKind } from '@console/internal/module/k8s';\nimport { PIPELINE_NAMESPACE } from '../pipelines/const';\nimport { EVENT_LISTNER_NAME, PAC_SECRET_NAME, PAC_INFO } from './const';\n\nexport const createPACSecret = (\n  appId: string,\n  privateKey: string,\n  webHookSecret: string,\n  appName: string,\n  appUrl: string,\n  namespace: string = PIPELINE_NAMESPACE,\n) => {\n  const { apiVersion, kind } = SecretModel;\n  const secretPayload = {\n    apiVersion,\n    stringData: {\n      'github-application-id': appId,\n      'webhook.secret': webHookSecret,\n      'github-private-key': privateKey,\n    },\n    kind,\n    metadata: {\n      name: PAC_SECRET_NAME,\n      namespace,\n      annotations: { appName, appUrl },\n    },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreateResource({ model: SecretModel, data: secretPayload });\n};\n\nexport const getControllerUrl = async () => {\n  try {\n    const [pacControllerUrl] = await k8sListResourceItems<RouteKind>({\n      model: RouteModel,\n      queryParams: {\n        ns: PIPELINE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelines-as-code/route': 'controller',\n          },\n        },\n      },\n    });\n    const [elRouteData] = await k8sListResourceItems<RouteKind>({\n      model: RouteModel,\n      queryParams: {\n        ns: PIPELINE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            eventlistener: EVENT_LISTNER_NAME,\n          },\n        },\n      },\n    });\n    const controller: RouteKind = pacControllerUrl || elRouteData;\n    return (controller?.spec?.host && `https://${controller.spec.host}`) ?? '';\n  } catch (e) {\n    console.warn('Error while fetching Controlleru url:', e); // eslint-disable-line no-console\n    return '';\n  }\n};\n\nexport const getPACInfo = async () =>\n  k8sGetResource({\n    model: ConfigMapModel,\n    name: PAC_INFO,\n    ns: PIPELINE_NAMESPACE,\n  });\n\nexport const updatePACInfo = async (appLink: string = '') => {\n  try {\n    const controllerUrl = await getControllerUrl();\n    const cfg = await getPACInfo();\n\n    await k8sPatchResource({\n      model: ConfigMapModel,\n      resource: cfg,\n      data: [\n        {\n          op: 'replace',\n          path: `/data/controller-url`,\n          value: controllerUrl || '',\n        },\n        { op: 'replace', path: `/data/provider`, value: 'github' },\n        { op: 'replace', path: `/data/app-link`, value: appLink },\n      ],\n    });\n  } catch (e) {\n    console.warn('Error while updating PAC info:', e); // eslint-disable-line no-console\n  }\n};\n"],"sourceRoot":""}