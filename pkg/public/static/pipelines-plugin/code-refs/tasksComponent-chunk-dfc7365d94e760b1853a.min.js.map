{"version":3,"sources":["webpack:///./packages/pipelines-plugin/src/components/taskruns/events/TaskRunEvents.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/TaskRunDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/TaskRunDetailsSection.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/TaskRunDetailsStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/cluster-tasks/ClusterTaskDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/tasks/TaskDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/tasks/list-page/ClusterTasksPage.tsx","webpack:///./packages/pipelines-plugin/src/components/tasks/list-page/TasksPage.tsx","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/storage-class.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/pipelines-plugin/src/components/tasks-index.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./packages/pipelines-plugin/src/utils/hooks.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/hooks.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./public/components/storage/shared.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/useTaskRuns.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/triggers.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/index.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-actions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/ModalStructure.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/hooks.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/utils.ts","webpack:///./packages/console-app/src/components/access-modes/access-mode.tsx","webpack:///./public/components/utils/storage-class-dropdown.tsx","webpack:///./packages/pipelines-plugin/src/utils/common.ts","webpack:///./packages/pipelines-plugin/src/components/taskruns/useTaskRuns.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/utils/tekton-results.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/usePipelineRuns.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/useTektonResults.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/LogSnippetBlock.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/RemoveTriggerModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/StartPipelineModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/ResourceKebabWithUserLabel.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineParameterSection.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/autoCompleteUtils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineWorkspacesSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/AddTriggerModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineRuns.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/pipelineRunLogSnippet.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/ResourceKebab.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/AutoCompletePopover.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/resource-utils.ts","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/autoCompleteValueParsers.ts","webpack:///./packages/pipelines-plugin/src/components/ListPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/log-snippet-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/LinkedPipelineRunTaskStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/usePipelineFromPipelineRun.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineResourceStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/logs-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/remove-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/RemoveTriggerForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerTemplateSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/StartPipelineForm.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/useAutoComplete.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceDropdownField.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineResourceParam.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineClusterOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineGitOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineImageOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineStorageOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineSecretSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/SecretForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/SecretsList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/MultipleResourceKeySelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/MultipleKeySelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PVCDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/VolumeClaimTemplateForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/AddTriggerForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerBindingSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerBindingSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/list-page/PipelineRunList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/usePipelineRunVulnerabilities.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/list-page/pipelinerun-table.ts","webpack:///./packages/pipelines-plugin/src/images/signed-badge.svg","webpack:///./packages/pipelines-plugin/src/components/charts/HorizontalStackedBars.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/useTaskStatus.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/TaskStatusTooltip.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/LogSnippetFromPod.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineRunVulnerabilities.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/LogsWrapperComponent.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/MultiStreamLogs.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/Logs.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/TektonTaskRunLog.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/TaskRunsListPage.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/TaskRunsHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/taskruns-table.ts","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/WorkspaceDefinitionList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineRunStatusContent.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/StatusPopoverContent.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/logs/taskRunLogSnippet.ts","webpack:///./packages/pipelines-plugin/src/components/ListPropProvider.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/list-page/PipelineRunHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/list-page/PipelineRunRow.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineBars.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineRunStatusPopoverContent.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/WorkspaceResourceLinkList.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/EmptyDirectoriesSection.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/VolumeClaimTemplateSection.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/WorkspaceResourcesSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/RunDetailsErrorLog.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/events/event-utils.ts","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/TaskRunsList.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/TaskRunsRow.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/status/TaskRunStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/results/ResultsList.tsx","webpack:///./packages/pipelines-plugin/src/utils/render-utils.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/TaskRunLog.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/index.ts","webpack:///./packages/pipelines-plugin/src/components/taskruns/TaskRunDetailsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/cluster-tasks/index.ts","webpack:///./packages/pipelines-plugin/src/components/cluster-tasks/ClusterTaskDetailsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/cluster-tasks/ClusterTaskListPage.tsx","webpack:///./packages/pipelines-plugin/src/components/tasks/index.ts","webpack:///./packages/pipelines-plugin/src/components/tasks/TaskDetailsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/tasks/list-page/TasksListsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/tasks/TaskListPage.tsx"],"names":["obj","taskRun","ns","namespace","filters","t","className","status","taskResults","results","resourceName","labelKey","text","taskRunLabel","resource","title","metadata","labels","pipelinerun","kind","name","timestamp","startTime","logDetails","podName","workspaces","spec","ownerResourceName","ownerResourceKind","task","clusterTaskLabel","taskLabel","props","StorageClassReference","common","factory","menuActions","getExtensionsActionsForKind","isDefaultClass","storageClass","annotations","tableColumnClasses","columnClass","StorageClassDetails","label","path","StorageClassTableRow","provisioner","reclaimPolicy","actions","StorageClassList","Header","sortField","transforms","Row","virtualize","displayName","StorageClassPage","ListComponent","canCreate","filterLabel","createProps","to","createButtonText","StorageClassDetailsPage","pages","details","editYaml","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","href","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","push","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","type","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","error","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","message","renderBody","disabled","htmlFor","onChange","id","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","variant","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRunFilterTitleReducer","flexStyle","display","flex","flexDirection","margin","subTitle","fullWidth","children","flexLayout","extraMargin","dataTest","style","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","useK8sGet","opts","setData","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","options","getPipelineName","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","placeholder","dataSelector","getPipelineOperatorVersion","versions","csv","phase","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","dataModelContext","extensionContext","getExtension","current","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alerts","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","location","dir","cluster","insecure","cadata","dispatch","app","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","getDefinedObj","objData","createPipelineResource","secretResp","pipelineResource","fieldName","secretKey","createSecretResource","getOSPTechPreviewBadge","installedGAVersion","TECH","usePipelineTechPreviewBadge","useTriggersTechPreviewBadge","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","indexOf","submitStartPipeline","processWorkspaces","pipelineRunResource","usePipelinesBreadcrumbsFor","isAdminPerspective","useTasksBreadcrumbsFor","useTriggersBreadcrumbsFor","useDevPipelinesBreadcrumbsFor","navOption","useLatestPipelineRun","selector","pipelineRunLoaded","pipelineRunError","usePipelinePVC","pvcResource","PVCLoaded","PVCError","usePipelineSuccessRatioPoll","queries","QUERY_RANGE","query","usePipelineRunTaskRunPoll","usePipelineRunDurationPoll","usePipelineRunPoll","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","snapshotPVCStorageClassAnnotation","snapshotPVCAccessModeAnnotation","snapshotPVCVolumeModeAnnotation","initialAccessModes","initialVolumeModes","provisionerAccessModeMapping","freeze","Filesystem","Block","partialMatch","getAccessModeOptions","getVolumeModeRadios","dropdownUnits","Ki","Mi","Gi","Ti","Pi","Ei","getProvisionerModeMapping","getAccessModeForProvisioner","ignoreReadOnly","modeMapping","mode","flat","modes","getVolumeModeForProvisioner","accessMode","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","setTimeout","servicePort","ports","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","VolumeClaimTemplate","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","targetPort","eventListenerName","referenceName","eventlistener","weight","STATUS_KEY_NAME_ERROR","UpdateOperationType","TaskErrorType","TASK_FIELD_ERROR_TYPE_MAPPING","NAME_ERROR","MISSING_REQUIRED_PARAMS","MISSING_RESOURCES","MISSING_WORKSPACES","MISSING_REQUIRED_WHEN_EXPRESSIONS","getTaskErrorString","errorType","WhenExpressionOperatorType","initialPipelineFormData","listTasks","finallyTasks","finallyListTasks","loadingTasks","useTaskRuns","pipelineRunName","taskName","cacheKey","getNextPage","sortedTaskRuns","getResourceName","getEventListenerTemplateNames","el","elTrigger","getEventListenerGeneratedName","useAllEventListeners","eventListenerResource","eventListenerLoaded","usePipelineTriggerTemplateNames","eventListenerResources","triggerTemplateResources","resourceMap","triggerTemplateName","memoResources","useEventListenerRoutes","triggerTemplateResults","countExpected","countLoaded","countErrored","matchingTriggerTemplateNames","resourceWatch","plr","ev","eventListenerTemplateNames","generatedRouteName","routeURL","useEventListenerURL","routeLoaded","ingress","getEventListenerTriggerBindingNames","binding","getTriggerTemplatePipelineName","useTriggerTemplateEventListenerNames","trigger","useTriggerBindingEventListenerNames","handlePipelineRunSubmit","startPipeline","callback","triggerPipeline","modalClassName","accessReview","rerunPipeline","customData","onComplete","sharedProps","rerunPipelineAndStay","deleteResourceObj","tektonResultsFlag","isResourceLoadedFromTR","labelKind","tooltip","getPipelineKebabActions","isTriggerPresent","rerunPipelineAndRedirect","cleanPipeline","addTrigger","removeTrigger","ModifyLabels","ModifyAnnotations","editPipeline","Delete","getPipelineRunKebabActions","redirectReRun","rerunPipelineRunAndRedirect","reRunPipelineRun","tooltipKey","hidden","stopPipelineRunForTaskRunStatus","PLRTasks","stopPipelineRun","cancelPipelineRunFinallyForTaskRunStatus","cancelPipelineRunFinally","getTaskRunKebabActions","close","errors","isSubmitting","handleSubmit","submitBtnText","submitDanger","submitError","submitDisabled","mergeAnnotationsWithResource","useUserAnnotationForManualStart","usePipelineRunWithUserAnnotation","useMenuActionsWithUserAnnotation","kebabAction","rest","commonPipelineSchema","description","Secret","ConfigMap","configMap","startPipelineSchema","secretOpen","equals","addTriggerSchema","advancedSectionValidationSchema","getBuilderTasksErrorGroup","formikFormErrors","paths","nameErrorString","formData","getErrorsForType","formErrors","displayNameErrors","getTopLevelErrorMessage","taskIndex","errorObj","taskErrors","matchingErrorType","mappingErrorType","propertyPath","findTask","resourceTasks","tasksLoaded","clusterTasks","namespacedTasks","matchingName","taskResource","taskSpec","findTaskFromFormikData","formikData","taskResources","mapReplaceRelatedInOthers","relatedTaskName","iterationTask","remainingRunAfters","runAfterName","mapRemoveRelatedInOthers","mapStitchReplaceInOthers","removalTask","updatedIterationTask","newRunAfter","mapBeRelated","newTaskName","mapAddRelatedToOthers","safeName","reservedNames","desiredName","newName","convertResourceToLoadingTask","usedNames","isFinallyTask","convertResourceToTask","convertBuilderFormToPipeline","existingPipeline","others","listIds","listTask","unhandledSpec","trimmedTask","outputs","removeEmptyFormFields","removeListRunAfters","convertPipelineToBuilderForm","getPVCAccessModes","AccessModeSelector","filterByVolumeMode","availableAccessModes","pvcInitialAccessMode","allowedAccessModes","setAllowedAccessModes","setAccessMode","changeAccessMode","isOpen","setIsOpen","setSelected","onToggleClick","selectOptions","option","isSelected","fieldId","onSelect","_event","onOpenChange","open","toggle","toggleRef","isExpanded","shouldFocusToggleOnSelect","StorageClassDropdownInnerWithTranslation","defaultClass","autocompleteFilter","getTitle","kindLabel","UNSAFE_componentWillReceiveProps","nextProps","desc","unorderedItems","noStorageClass","StorageClass","zone","sc","selectedItem","nextState","describedBy","noSelection","StorageClassDropdownEntry","StorageClassDropdownNoStorageClassOption","itemsAvailableToShow","hideClassName","autocompletePlaceholder","menuClassName","StorageClassDropdownInner","StorageClassDropdown","storageClassProperties","storageClassDescriptionLine","paramIsRequired","taskRunResource","getTaskRunsOfPipelineRun","decodeValueJson","decodedValue","atob","decodeValue","resourceDeletedInK8sAnnotation","deletionTimestamp","AND","expressions","EXP","left","right","EQ","NEQ","DataType","labelsToFilter","selectorToFilter","matchExpressions","filterByName","toLowerCase","expression","CACHE","InFlightStore","getTRURLHost","tektonResult","targetNamespace","serverPort","server_port","tlsHostname","tls_hostname_override","tektonResultsAPI","getFilteredRecord","dataType","nextPageToken","records","URLSearchParams","page_size","pageSize","page_token","createTektonResultsUrl","code","getPipelineRuns","PipelineRunV1","PipelineRunV1Beta1","getFilteredPipelineRuns","getTaskRuns","TaskRunV1","TaskRunV1Beta1","getFilteredTaskRuns","consoleProxyFetchLog","getTaskRunLog","taskRunPath","throw404","sanitizePipelineParams","pipelineWithNoEmptyDefaultParams","parameter","removeEmptyDefaultFromPipelineParams","getPipelineTaskLinks","toResourceLinkData","qualifier","disableLink","taskLinks","finallyTaskLinks","getPipelineResourceLinks","definitionResources","runResources","definitionResource","resourceRef","isResourceRef","convertBackingPipelineToPipelineResourceRefProps","useRuns","groupVersionKind","etcdRunsRef","optionsMemo","watchOptions","etcdRuns","creationTimestamp","localeCompare","queryTr","trOptions","trResources","trLoaded","trError","trGetNextPage","rResources","usePipelineRuns","usePipelineRun","useTaskRun","taskRunName","useTRRuns","getRuns","setNextPageToken","localCacheKey","setLocalCacheKey","setResult","disposed","tkPipelineRuns","callInflight","cur","executed","useTRPipelineRuns","useTRTaskRuns","useGetPipelineRuns","resultPlrs","resultPlrsLoaded","resultPlrsLoadError","k8sPlrs","k8sPlrsLoaded","k8sPlrsLoadError","useTRTaskRunLog","staticMessage","initialValues","selectedTrigger","setStatus","formikProps","userStartedAnnotation","pipelinePVC","pipelinePVCLoaded","otherProps","augmentedMenuActions","autoCompleteValues","setFieldValue","render","input","autoComplete","addLabel","arrayName","additionalProps","onAutoComplete","callbackRef","paramToAutoComplete","workspaceToAutoComplete","taskToStatus","findTasksThatRunAfter","runAfterTasks","runAfterNames","computeAvailableResultACs","thisTask","invalidTasks","insertIntoValue","insertText","startPos","endPos","reduceToSections","formikIndex","resourceType","sections","types","section","sectionData","filterType","volumeTypeOptions","volumeType","resourceNameField","resourceKeysField","addString","isInline","initialSizeValue","initialSizeUnit","getVolumeTypeFields","runFilters","filterGroupName","reducer","pipelineRunsLoaded","pipelineRunsLoadError","showTitle","rowFilters","getPLRLogSnippet","failedTaskRun","steps","exitCode","ResourceKebab","terminatingTooltip","contentRefCallback","focusTrapProps","insertAutoComplete","popperProps","menuWidth","scrollContainer","placement","closeOnEsc","closeOnOutsideClick","popperOptions","modifiers","hide","preventOverflow","flip","maxHeight","overflow","itemId","idx","PATHS","getTaskResources","alphaInputResources","betaInputResources","alphaOutputResources","betaOutputResources","getTaskParameters","alphaParameters","betaParameters","useBuilderParams","selectedData","paramACs","workspaceACs","finallyStatusACs","taskResultACs","useAddTriggerParams","ListPageWrapper","flatten","reduxIDs","textFilter","nameFilterPlaceholder","labelFilterPlaceholder","hideNameLabelFilters","hideLabelFilter","columnLayout","nameFilter","memoizedIds","dta","Filter","uniqueFilterName","FireMan","createAccessReview","badge","setReduxIDs","expand","window","search","applyFilter","reduxId","fieldSelector","filterName","filterList","set","delete","URL","pathname","hash","updateURL","runOrNavigate","itemName","action","createLink","ListPage","autoFocus","createHandler","mock","skipAccessReview","hideColumnManagement","_resources","ko","usedNamespace","unused","MultiListPage","staticFilters","kinds","taskRunSnippetMessage","taskRunsLoaded","pipelineStatus","role","usePipelineFromPipelineRun","setPipeline","emptyPipeline","pipelineFromPipelineRun","newPipeline","toArray","getSortedContainerStatus","containers","containerStatuses","containerNames","sortedContainerStatus","cs","containerIndex","getRenderContainers","pod","firstRunningCont","findIndex","stillFetching","getDownloadAllLogsCallback","sortedTaskRunNames","getWatchUrls","stepsList","currTask","allStepUrls","stepUrls","currentStep","currentStatus","urlOpts","follow","tasksPromise","allLogs","getContentPromise","logs","toUpperCase","race","buffer","ingest","blob","getBlob","selectedTriggerTemplate","triggerMatchesTriggerTemplate","matchingEventListeners","singleTriggers","deletableEventListeners","updatableEventListeners","hasGutter","size","isFilled","templateNames","removeTriggerSchema","PARAM_REFERENCE_CHARS","cursorPosition","focusingOptions","setFocusingOptions","menuOptions","setOpen","shouldOpen","ctrlKey","cursorPos","selectionStart","closeMenu","useOpenMenuKeyWatcher","filterOptions","filteredOptions","setFilteredOptions","filterMappings","optionPartMap","optionAcc","optionPart","newFilterValue","newOptions","useFilterOptions","setFilter","closeCleanup","nodeRef","setNodeRef","setNode","onKeyCallback","applyFilterAtCursor","filterValue","selectionEnd","focusDropdownCallback","stopPropagation","addEventListener","removeEventListener","contentNode","useNodeListener","newValue","leftCapturePoint","insertValue","substr","cursorEndPoint","setSelectionRange","focusTrapOptions","clickOutsideDeactivates","onDeactivate","fallbackFocus","getBoundingClientRect","onRequestClose","creating","autoSelect","prefixName","renderTypeFields","setFieldTouched","touched","availableResources","canAutoSelect","isPlaceholder","secretOpenField","textExpanded","textCollapsed","onReset","resetForm","icon","handleReset","secretTypes","clearServerURL","setValues","renderSecretForm","prevState","onClose","Secrets","serviceaccounts","serviceAccountSecrets","filterData","sortedFilterData","linkTo","isValid","setKeys","strText","selectedResource","keyMap","itemKeys","generateKeys","showBadge","remove","fieldKey","direction","lg","grow","initialVolumeMode","initAccessModeHelp","accessModeHelp","setAccessModeHelp","setVolumeMode","requestSizeError","setRequestSizeError","requestSizeValue","setRequestSizeValue","requestSizeUnit","setRequestSizeUnit","storageProvisioner","setStorageProvisioner","setStorageClass","handleVolumeMode","parseInt","updatedStorageClass","displayMessage","defaultRequestSizeUnit","defaultRequestSizeValue","inputID","radio","inline","checked","bindingVars","setBindingVars","paramPrefix","updateTriggerBindingVariables","selectedTriggerBinding","toggleTextExpanded","toggleTextCollapsed","isRead","customResourceKey","TRIGGER_BINDING_EMPTY","activePerspective","setPreferredTab","preferredTabLoaded","defaultSortField","defaultSortOrder","customSorts","vulnerabilities","scanResults","critical","high","medium","low","onRowsRendered","stopIndex","nextPage","getPipelineRunVulnerabilities","taskVulnerabilities","usePipelineRunVulnerabilities","started","module","exports","barGap","background","flexGrow","useTaskStatus","logSnippet","setLogSnippet","logError","setLogError","tailLines","watchURL","logContent","CriticalIcon","HighIcon","MediumIcon","LowIcon","condensed","onDownloadAll","downloadAllLabel","isFullscreen","fullscreenRef","fullscreenToggle","downloadAllStatus","setDownloadAllStatus","currentLogGetterRef","setLogGetter","align","logString","Blob","setCurrentLogsGetter","MultiStreamLogs","scrollPane","completedRef","renderToCount","setRenderToCount","scrollDirection","handleScrollCallback","dataRef","innerText","handleComplete","newRenderTo","autoScroll","scrolledToBottom","containerStatus","onScroll","statusIndex","resourceStatus","resName","resNamespace","scrollToRef","contentRef","resourceStatusRef","onCompleteRef","blockContentRef","addContentAndScroll","scrollIntoView","behavior","block","appendMessage","blockContent","ws","wsOpts","subprotocols","onmessage","msg","onclose","onerror","destroy","TektonTaskRunLog","trResults","scrollTop","scrollHeight","hideBadge","showPipelineColumn","searchParams","trForPlr","taskRunsLoadError","taskRunsResource","columnManagementID","tableColumns","userSettingsLoaded","columns","column","selectedColumns","additional","isPopoverOpen","setIsPopoverOpen","bodyContent","shouldClose","auto","link","getTRLogSnippet","k8sData","k8s","reduxes","reduxID","redux","worst","worstError","k8sResults","assign","sortFunc","pipelinerunReference","TASKRUNSFORPLRCACHE","InFlightStoreForTaskRunsForPLR","PLRStatus","PipelineRunRowTable","PLRTaskRuns","nameSuffix","src","alt","columnID","PipelineRunRowWithoutTaskRuns","PipelineRunRowWithTaskRunsFetch","PipelineRunRowWithTaskRuns","childReferences","PipelineBars","PipelineBarsForTaskRunsStatus","minHeight","emptyDirectoryWorkspaces","workspaceName","matchedPVCs","workspacesRenders","getPodsByLabels","isTaskRunMatched","isPodMatched","usePipelineRunFilters","plrRelatedResources","usePipelineRunRelatedResources","useTaskRunFilters","tsrRelatedResources","taskrun","useTaskRunRelatedResources","activeColumns","col","newCustomData","taskRunsReference","pipelineReference","has","full","GROUP_MATCH_REGEXP","handleURLs","additionalClassName","podResources","breadcrumbsFor","titleFunc","getResourceStatus","nameKey","component","clusterTask","pageData","light"],"mappings":"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","file":"pipelines-plugin/code-refs/tasksComponent-chunk-dfc7365d94e760b1853a.min.js","sourcesContent":["import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { ResourcesEventStream } from '@console/internal/components/events';\nimport { TaskRunKind } from '../../../types';\nimport { useTaskRunFilters } from '../../pipelineruns/events/event-utils';\n\ntype TaskRunEventsProps = {\n  obj: TaskRunKind;\n};\n\nconst TaskRunEvents: React.FC<TaskRunEventsProps> = ({ obj: taskRun }) => {\n  const { ns: namespace } = useParams();\n  return (\n    <ResourcesEventStream filters={useTaskRunFilters(namespace, taskRun)} namespace={namespace} />\n  );\n};\nexport default TaskRunEvents;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TaskRunModel } from '../../models';\nimport { TaskRunKind } from '../../types';\nimport { taskRunFilterReducer } from '../../utils/pipeline-filter-reducer';\nimport ResultsList from '../shared/results/ResultsList';\nimport TaskRunDetailsSection from './TaskRunDetailsSection';\n\nimport './TaskRunDetails.scss';\n\nexport interface TaskRunDetailsProps {\n  obj: TaskRunKind;\n}\n\nconst TaskRunDetails: React.FC<TaskRunDetailsProps> = ({ obj: taskRun }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <TaskRunDetailsSection taskRun={taskRun} />\n      </div>\n      {taskRun?.status?.taskResults || taskRun?.status?.results ? (\n        <div className=\"co-m-pane__body\">\n          <ResultsList\n            results={taskRun.status?.taskResults || taskRun.status?.results}\n            resourceName={t(TaskRunModel.labelKey)}\n            status={taskRunFilterReducer(taskRun)}\n          />\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default TaskRunDetails;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading, ResourceSummary } from '@console/internal/components/utils';\nimport { TaskRunModel } from '../../models';\nimport { TaskRunKind } from '../../types';\nimport TaskRunDetailsStatus from './TaskRunDetailsStatus';\n\nexport interface TaskRunDetailsSectionProps {\n  taskRun: TaskRunKind;\n}\n\nconst TaskRunDetailsSection: React.FC<TaskRunDetailsSectionProps> = ({ taskRun }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SectionHeading\n        text={t('pipelines-plugin~{{taskRunLabel}} details', {\n          taskRunLabel: t(TaskRunModel.labelKey),\n        })}\n      />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={taskRun} />\n        </div>\n        <div className=\"col-sm-6 odc-taskrun-details__status\">\n          <TaskRunDetailsStatus taskRun={taskRun} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TaskRunDetailsSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink, Timestamp } from '@console/internal/components/utils';\nimport { PodModel } from '@console/internal/models';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { PipelineRunModel } from '../../models';\nimport { TaskRunKind } from '../../types';\nimport {\n  taskRunFilterReducer,\n  taskRunFilterTitleReducer,\n} from '../../utils/pipeline-filter-reducer';\nimport { pipelineRunDuration } from '../../utils/pipeline-utils';\nimport RunDetailsErrorLog from '../pipelineruns/logs/RunDetailsErrorLog';\nimport { TektonResourceLabel } from '../pipelines/const';\nimport WorkspaceResourceLinkList from '../shared/workspaces/WorkspaceResourceLinkList';\nimport { getTRLogSnippet } from './logs/taskRunLogSnippet';\n\nexport interface TaskRunDetailsStatusProps {\n  taskRun: TaskRunKind;\n}\n\nconst TaskRunDetailsStatus = ({ taskRun }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <dl>\n        <dt>{t('pipelines-plugin~Status')}</dt>\n        <dd>\n          <Status\n            status={taskRunFilterReducer(taskRun)}\n            title={taskRunFilterTitleReducer(taskRun)}\n          />\n        </dd>\n      </dl>\n      {taskRun.metadata?.labels?.[TektonResourceLabel.pipelinerun] && (\n        <dl data-test=\"pipelineRun\">\n          <dt>{t('pipelines-plugin~PipelineRun')}</dt>\n          <dd>\n            <ResourceLink\n              kind={referenceForModel(PipelineRunModel)}\n              name={taskRun.metadata.labels[TektonResourceLabel.pipelinerun]}\n              namespace={taskRun.metadata.namespace}\n            />\n          </dd>\n        </dl>\n      )}\n      <dl>\n        <dt>{t('pipelines-plugin~Started')}</dt>\n        <dd>\n          <Timestamp timestamp={taskRun?.status?.startTime} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>{t('pipelines-plugin~Duration')}</dt>\n        <dd>{pipelineRunDuration(taskRun)}</dd>\n      </dl>\n      <RunDetailsErrorLog\n        logDetails={getTRLogSnippet(taskRun)}\n        namespace={taskRun.metadata?.namespace}\n      />\n      {taskRun?.status?.podName && (\n        <dl data-test=\"pod\">\n          <dt>{t('pipelines-plugin~Pod')}</dt>\n          <dd>\n            <ResourceLink\n              kind={PodModel.kind}\n              name={taskRun.status.podName}\n              namespace={taskRun.metadata.namespace}\n            />\n          </dd>\n        </dl>\n      )}\n      <WorkspaceResourceLinkList\n        workspaces={taskRun.spec.workspaces}\n        namespace={taskRun.metadata.namespace}\n        ownerResourceName={taskRun.metadata.name}\n        ownerResourceKind={taskRun.kind}\n      />\n    </>\n  );\n};\n\nexport default TaskRunDetailsStatus;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading, ResourceSummary } from '@console/internal/components/utils';\nimport { ClusterTaskModel } from '../../models';\nimport { TaskKind } from '../../types';\nimport WorkspaceDefinitionList from '../shared/workspaces/WorkspaceDefinitionList';\n\nimport './ClusterTaskDetails.scss';\n\nexport interface ClusterTaskDetailsProps {\n  obj: TaskKind;\n}\n\nconst ClusterTaskDetails: React.FC<ClusterTaskDetailsProps> = ({ obj: task }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading\n        text={t('pipelines-plugin~{{clusterTaskLabel}} details', {\n          clusterTaskLabel: t(ClusterTaskModel.labelKey),\n        })}\n      />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={task} />\n        </div>\n        <div className=\"col-sm-6 odc-cluster-task-details__status\">\n          <WorkspaceDefinitionList workspaces={task.spec.workspaces} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClusterTaskDetails;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading, ResourceSummary } from '@console/internal/components/utils';\nimport { TaskModel } from '../../models';\nimport { TaskKind } from '../../types';\nimport WorkspaceDefinitionList from '../shared/workspaces/WorkspaceDefinitionList';\n\nimport './TaskDetails.scss';\n\nexport interface TaskDetailsProps {\n  obj: TaskKind;\n}\n\nconst TaskDetails: React.FC<TaskDetailsProps> = ({ obj: task }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading\n        text={t('pipelines-plugin~{{taskLabel}} details', {\n          taskLabel: t(TaskModel.labelKey),\n        })}\n      />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={task} />\n        </div>\n        <div className=\"col-sm-6 odc-task-details__status\">\n          <WorkspaceDefinitionList workspaces={task.spec.workspaces} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDetails;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { DefaultPage } from '@console/internal/components/default-resource';\n\nconst ClusterTasksPage = (props) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~ClusterTasks')}</title>\n      </Helmet>\n      <DefaultPage {...props} />\n    </>\n  );\n};\n\nexport default ClusterTasksPage;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { DefaultPage } from '@console/internal/components/default-resource';\n\nconst TasksPage = (props) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~Tasks')}</title>\n      </Helmet>\n      <DefaultPage {...props} />\n    </>\n  );\n};\n\nexport default TasksPage;\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport * as classNames from 'classnames';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  DetailsItem,\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  detailsPage,\n  navFactory,\n} from './utils';\nimport { StorageClassResourceKind, K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { StorageClassModel } from '../models';\n\nexport const StorageClassReference: K8sResourceKindReference = 'StorageClass';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(StorageClassModel), ...common];\n\nconst defaultClassAnnotation = 'storageclass.kubernetes.io/is-default-class';\nconst betaDefaultStorageClassAnnotation = 'storageclass.beta.kubernetes.io/is-default-class';\nexport const isDefaultClass = (storageClass: K8sResourceKind) => {\n  const annotations = _.get(storageClass, 'metadata.annotations') || {};\n  return (\n    annotations[defaultClassAnnotation] === 'true' ||\n    annotations[betaDefaultStorageClassAnnotation] === 'true'\n  );\n};\n\nconst tableColumnClasses = [\n  'pf-v5-u-w-42-on-md',\n  'pf-v5-u-w-42-on-md',\n  'pf-m-hidden pf-m-visible-on-md pf-v5-u-w-16-on-md',\n  Kebab.columnClass,\n];\n\nconst StorageClassDetails: React.FC<StorageClassDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~StorageClass details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={obj}>\n              <DetailsItem label={t('public~Provisioner')} obj={obj} path=\"provisioner\" />\n            </ResourceSummary>\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('public~Reclaim policy')} obj={obj} path=\"reclaimPolicy\" />\n              <dt>{t('public~Default class')}</dt>\n              <dd>{isDefaultClass(obj) ? t('public~True') : t('public~False')}</dd>\n              <DetailsItem\n                label={t('public~Volume binding mode')}\n                obj={obj}\n                path=\"volumeBindingMode\"\n              />\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst StorageClassTableRow: React.FC<RowFunctionArgs<StorageClassResourceKind>> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n        <ResourceLink kind={StorageClassReference} name={obj.metadata.name}>\n          {isDefaultClass(obj) && (\n            <span className=\"small text-muted co-resource-item__help-text\">\n              &ndash; {t('public~Default')}\n            </span>\n          )}\n        </ResourceLink>\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {obj.provisioner}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{obj.reclaimPolicy || '-'}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={StorageClassReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const StorageClassList: React.FC = (props) => {\n  const { t } = useTranslation();\n  const StorageClassTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Provisioner'),\n        sortField: 'provisioner',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('public~Reclaim policy'),\n        sortField: 'reclaimPolicy',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[3] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~StorageClasses')}\n      Header={StorageClassTableHeader}\n      Row={StorageClassTableRow}\n      virtualize\n    />\n  );\n};\nStorageClassList.displayName = 'StorageClassList';\n\nexport const StorageClassPage: React.FC<StorageClassPageProps> = (props) => {\n  const createProps = {\n    to: '/k8s/cluster/storageclasses/~new/form',\n  };\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {..._.omit(props, 'mock')}\n      title={t('public~StorageClasses')}\n      kind={StorageClassReference}\n      ListComponent={StorageClassList}\n      canCreate={true}\n      filterLabel={props.filterLabel}\n      createProps={createProps}\n      createButtonText={t('public~Create StorageClass')}\n    />\n  );\n};\nexport const StorageClassDetailsPage: React.FC = (props) => {\n  const pages = [navFactory.details(detailsPage(StorageClassDetails)), navFactory.editYaml()];\n  return (\n    <DetailsPage {...props} kind={StorageClassReference} menuActions={menuActions} pages={pages} />\n  );\n};\nStorageClassDetailsPage.displayName = 'StorageClassDetailsPage';\n\nexport type StorageClassDetailsProps = {\n  obj: any;\n};\n\nexport type StorageClassPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","export * from './taskruns';\nexport * from './cluster-tasks';\nexport * from './tasks';\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import { BadgeType, getBadgeFromType } from '@console/shared';\nimport {\n  isGAVersionInstalled,\n  isTriggersGAVersion,\n  usePipelineOperatorVersion,\n} from '../components/pipelines/utils/pipeline-operator';\n\nconst getOSPTechPreviewBadge = (installedGAVersion: boolean) =>\n  installedGAVersion ? null : getBadgeFromType(BadgeType.TECH);\n\nexport const usePipelineTechPreviewBadge = (namespace: string) => {\n  const operator = usePipelineOperatorVersion(namespace);\n  if (!operator) return null;\n  return getOSPTechPreviewBadge(isGAVersionInstalled(operator));\n};\n\nexport const useTriggersTechPreviewBadge = (namespace: string) => {\n  const operator = usePipelineOperatorVersion(namespace);\n  if (!operator) return null;\n  return getOSPTechPreviewBadge(isTriggersGAVersion(operator));\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { WatchK8sResource, useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { getPrometheusURL, PrometheusEndpoint } from '@console/internal/components/graphs/helpers';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useURLPoll } from '@console/internal/components/utils/url-poll-hook';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport {\n  K8sKind,\n  PersistentVolumeClaimKind,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { useTabbedTableBreadcrumbsFor } from '@console/shared';\nimport { PipelineRunModel } from '../../models';\nimport { PipelineRunKind } from '../../types';\nimport { getLatestRun } from '../../utils/pipeline-augment';\nimport { pipelinesTab } from '../../utils/pipeline-utils';\nimport { DEFAULT_SAMPLES, TektonResourceLabel } from './const';\nimport { metricsQueries, PipelineQuery } from './pipeline-metrics/pipeline-metrics-utils';\n\nexport const usePipelinesBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'pipelines',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useTasksBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'tasks',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useTriggersBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'triggers',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useDevPipelinesBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const navOption = isAdminPerspective ? `pipelines` : 'dev-pipelines';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    navOption,\n    pipelinesTab(kindObj),\n    undefined,\n    true,\n  );\n};\n\nexport const useLatestPipelineRun = (pipelineName: string, namespace: string): PipelineRunKind => {\n  const pipelineRunResource: WatchK8sResource = {\n    kind: referenceForModel(PipelineRunModel),\n    namespace,\n    selector: {\n      matchLabels: { [TektonResourceLabel.pipeline]: pipelineName },\n    },\n    optional: true,\n    isList: true,\n  };\n  const [pipelineRun, pipelineRunLoaded, pipelineRunError] = useK8sWatchResource<PipelineRunKind[]>(\n    pipelineRunResource,\n  );\n  const latestRun = getLatestRun(pipelineRun, 'creationTimestamp');\n  return pipelineRunLoaded && !pipelineRunError ? latestRun : null;\n};\n\nexport const usePipelinePVC = (\n  pipelineName: string,\n  namespace: string,\n): [PersistentVolumeClaimKind, boolean] => {\n  const pvcResource: WatchK8sResource = {\n    kind: PersistentVolumeClaimModel.kind,\n    namespace,\n    selector: {\n      matchLabels: { [TektonResourceLabel.pipeline]: pipelineName },\n    },\n    optional: true,\n    isList: true,\n  };\n  const [PVC, PVCLoaded, PVCError] = useK8sWatchResource<PersistentVolumeClaimKind[]>(pvcResource);\n  return [!PVCError && PVC.length > 0 ? PVC[0] : null, PVCLoaded];\n};\n\nexport const usePipelineSuccessRatioPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_SUCCESS_RATIO]({ name, namespace }),\n      samples: 1,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunTaskRunPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]({\n        name,\n        namespace,\n      }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunDurationPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}): any => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_RUN_DURATION]({\n        name,\n        namespace,\n      }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.NUMBER_OF_PIPELINE_RUNS]({ name, namespace }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\n\nexport const cephRBDProvisionerSuffix = 'rbd.csi.ceph.com';\n\nexport const snapshotPVCStorageClassAnnotation = 'snapshot.storage.kubernetes.io/pvc-storage-class';\nexport const snapshotPVCAccessModeAnnotation = 'snapshot.storage.kubernetes.io/pvc-access-modes';\nexport const snapshotPVCVolumeModeAnnotation = 'snapshot.storage.kubernetes.io/pvc-volume-mode';\n\ntype AccessMode = 'ReadWriteOnce' | 'ReadWriteMany' | 'ReadOnlyMany' | 'ReadWriteOncePod';\ntype VolumeMode = 'Filesystem' | 'Block';\n\nexport const initialAccessModes: AccessMode[] = [\n  'ReadWriteOnce',\n  'ReadWriteMany',\n  'ReadOnlyMany',\n  'ReadWriteOncePod',\n];\nexport const initialVolumeModes: VolumeMode[] = ['Filesystem', 'Block'];\n\ntype PartialMatch = { partialMatch?: boolean };\ntype ModeMapping = {\n  [volumeMode in VolumeMode]?: AccessMode[];\n};\ntype AccessModeMapping = ModeMapping & PartialMatch;\n\ntype ProvisionerAccessModeMapping = {\n  [provisioner: string]: AccessModeMapping;\n};\n\n// See https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes and\n// https://docs.openshift.com/container-platform/4.15/storage/understanding-persistent-storage.html for more details\nexport const provisionerAccessModeMapping: ProvisionerAccessModeMapping = Object.freeze({\n  'kubernetes.io/no-provisioner': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'kubernetes.io/aws-ebs': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/gce-pd': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/glusterfs': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/cinder': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/azure-file': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/azure-disk': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'kubernetes.io/quobyte': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/rbd': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/vsphere-volume': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'kubernetes.io/portworx-volume': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'kubernetes.io/scaleio': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/storageos': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  // Since 4.6 new provisioners names will be without the 'kubernetes.io/' prefix.\n  'manila.csi.openstack.org': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n  },\n  'ebs.csi.aws.com': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'block.csi.ibm.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'csi.ovirt.org': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'cinder.csi.openstack.org': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'pd.csi.storage.gke.io': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod'],\n  },\n  'cephfs.csi.ceph.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    partialMatch: true,\n  },\n  'rbd.csi.ceph.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    partialMatch: true,\n  },\n  'file.csi.azure.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n});\n\nexport const getAccessModeOptions = () => [\n  {\n    value: 'ReadWriteOnce',\n    title: i18next.t('public~Single user (RWO)'),\n  },\n  {\n    value: 'ReadWriteMany',\n    title: i18next.t('public~Shared access (RWX)'),\n  },\n  {\n    value: 'ReadOnlyMany',\n    title: i18next.t('public~Read only (ROX)'),\n  },\n  {\n    value: 'ReadWriteOncePod',\n    title: i18next.t('public~Read write once pod (RWOP)'),\n  },\n];\n\nexport const getVolumeModeRadios = () => [\n  {\n    value: 'Filesystem',\n    title: i18next.t('public~Filesystem'),\n  },\n  {\n    value: 'Block',\n    title: i18next.t('public~Block'),\n  },\n];\n\nexport const dropdownUnits = {\n  i: 'B',\n  Ki: 'KiB',\n  Mi: 'MiB',\n  Gi: 'GiB',\n  Ti: 'TiB',\n  Pi: 'PiB',\n  Ei: 'EiB',\n};\n\nexport const getProvisionerModeMapping = (provisioner: string): ModeMapping =>\n  _.omit(\n    _.find(provisionerAccessModeMapping, (value: AccessModeMapping, key: string) => {\n      if (value?.partialMatch && provisioner?.includes(key)) {\n        return true;\n      }\n      if (key === provisioner) {\n        return true;\n      }\n      return false;\n    }) || {},\n    'partialMatch',\n  );\n\nexport const getAccessModeForProvisioner = (\n  provisioner: string,\n  ignoreReadOnly?: boolean,\n  volumeMode?: string,\n): AccessMode[] => {\n  let accessModes: AccessMode[];\n  const modeMapping: ModeMapping = getProvisionerModeMapping(provisioner);\n\n  if (!_.isEmpty(modeMapping)) {\n    accessModes = volumeMode\n      ? modeMapping[volumeMode]\n      : Object.keys(modeMapping)\n          .map((mode) => modeMapping[mode])\n          .flat();\n  } else {\n    accessModes = initialAccessModes;\n  }\n\n  // remove duplicate in accessModes\n  accessModes = [...new Set(accessModes)];\n\n  // Ignore ReadOnly related access for create-pvc\n  return ignoreReadOnly ? accessModes.filter((modes) => modes !== 'ReadOnlyMany') : accessModes;\n};\n\nexport const getVolumeModeForProvisioner = (\n  provisioner: string,\n  accessMode: string,\n): VolumeMode[] => {\n  const modeMapping: ModeMapping = getProvisionerModeMapping(provisioner);\n\n  if (!_.isEmpty(modeMapping)) {\n    return accessMode\n      ? (Object.keys(modeMapping).filter((volumeMode) =>\n          modeMapping[volumeMode].includes(accessMode),\n        ) as VolumeMode[])\n      : (Object.keys(modeMapping) as VolumeMode[]);\n  }\n  return initialVolumeModes;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import i18n from 'i18next';\n// eslint-disable-next-line import/no-cycle\nimport { PipelineBuilderFormValues } from './types';\n\nexport const STATUS_KEY_NAME_ERROR = 'taskError';\n\nexport enum UpdateOperationType {\n  ADD_LIST_TASK,\n  ADD_FINALLY_LIST_TASK,\n  ADD_LOADING_TASK,\n  ADD_FINALLY_LOADING_TASK,\n  CONVERT_LOADING_TASK_TO_TASK,\n  CONVERT_LOADING_TASK_TO_FINALLY_TASK,\n  CONVERT_LIST_TO_TASK,\n  CONVERT_LIST_TO_FINALLY_TASK,\n  RENAME_TASK,\n  REMOVE_TASK,\n  DELETE_LIST_TASK,\n  DELETE_FINALLY_LIST_TASK,\n  FIX_INVALID_LIST_TASK,\n  FIX_INVALID_FINALLY_LIST_TASK,\n}\n\nexport enum TaskErrorType {\n  NAME_ERROR = 'nameError',\n  MISSING_REQUIRED_PARAMS = 'missingParams',\n  MISSING_RESOURCES = 'missingResources',\n  MISSING_WORKSPACES = 'missingWorkspaces',\n  MISSING_REQUIRED_WHEN_EXPRESSIONS = 'missingWhenExpressions',\n}\n\nexport const TASK_FIELD_ERROR_TYPE_MAPPING: { [key in TaskErrorType]: string[] } = {\n  [TaskErrorType.NAME_ERROR]: ['name'],\n  [TaskErrorType.MISSING_REQUIRED_PARAMS]: ['params'],\n  [TaskErrorType.MISSING_RESOURCES]: ['resources'],\n  [TaskErrorType.MISSING_WORKSPACES]: ['workspaces'],\n  [TaskErrorType.MISSING_REQUIRED_WHEN_EXPRESSIONS]: ['when'],\n};\n\nexport const getTaskErrorString = (errorType: TaskErrorType): string => {\n  switch (errorType) {\n    case TaskErrorType.NAME_ERROR:\n      return i18n.t('pipelines-plugin~Invalid name');\n    case TaskErrorType.MISSING_REQUIRED_PARAMS:\n      return i18n.t('pipelines-plugin~Missing parameters');\n    case TaskErrorType.MISSING_RESOURCES:\n      return i18n.t('pipelines-plugin~Missing resources');\n    case TaskErrorType.MISSING_WORKSPACES:\n      return i18n.t('pipelines-plugin~Missing workspaces');\n    case TaskErrorType.MISSING_REQUIRED_WHEN_EXPRESSIONS:\n      return i18n.t('pipelines-plugin~Invalid when expressions');\n    default:\n      throw new Error(`Unknown errorType, ${errorType}`);\n  }\n};\n\nexport enum WhenExpressionOperatorType {\n  in = 'in',\n  notin = 'notin',\n}\n\nexport const initialPipelineFormData: PipelineBuilderFormValues = {\n  name: 'new-pipeline',\n  params: [],\n  resources: [],\n  workspaces: [],\n  tasks: [],\n  listTasks: [],\n  finallyTasks: [],\n  finallyListTasks: [],\n  loadingTasks: [],\n};\n","import * as React from 'react';\nimport { Selector } from '@console/dynamic-plugin-sdk/src';\nimport { TaskRunKind } from '../../../types';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport { useTaskRuns as useTaskRuns2 } from './usePipelineRuns';\nimport { GetNextPage } from './useTektonResults';\n\nexport const useTaskRuns = (\n  namespace: string,\n  pipelineRunName?: string,\n  taskName?: string,\n  cacheKey?: string,\n): [TaskRunKind[], boolean, unknown, GetNextPage] => {\n  const selector: Selector = React.useMemo(() => {\n    if (pipelineRunName) {\n      return { matchLabels: { [TektonResourceLabel.pipelinerun]: pipelineRunName } };\n    }\n    if (taskName) {\n      return { matchLabels: { [TektonResourceLabel.pipelineTask]: taskName } };\n    }\n    return undefined;\n  }, [taskName, pipelineRunName]);\n  const [taskRuns, loaded, error, getNextPage] = useTaskRuns2(\n    namespace,\n    selector && {\n      selector,\n    },\n    cacheKey,\n  );\n\n  const sortedTaskRuns = React.useMemo(\n    () =>\n      taskRuns?.sort((a, b) => {\n        if (a?.status?.completionTime) {\n          return b?.status?.completionTime &&\n            new Date(a?.status?.completionTime) > new Date(b?.status?.completionTime)\n            ? 1\n            : -1;\n        }\n        return b?.status?.startTime ||\n          new Date(a?.status?.startTime) > new Date(b?.status?.startTime)\n          ? 1\n          : -1;\n      }),\n    [taskRuns],\n  );\n  return React.useMemo(() => [sortedTaskRuns, loaded, error, getNextPage], [\n    sortedTaskRuns,\n    loaded,\n    error,\n    getNextPage,\n  ]);\n};\n","import * as React from 'react';\nimport { flatten, mapValues } from 'lodash';\nimport {\n  WatchK8sResource,\n  WatchK8sResources,\n  WatchK8sResults,\n  WatchK8sResultsObject,\n} from '@console/dynamic-plugin-sdk';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport {\n  useK8sWatchResource,\n  useK8sWatchResources,\n} from '@console/internal/components/utils/k8s-watch-hook';\nimport { RouteModel } from '@console/internal/models';\nimport { K8sResourceCommon, referenceForModel, RouteKind } from '@console/internal/module/k8s';\nimport { EventListenerModel, PipelineRunModel, TriggerTemplateModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport {\n  getResourceModelFromBindingKind,\n  getSafeBindingResourceKind,\n} from '../../../utils/pipeline-augment';\nimport { ResourceModelLink } from '../resource-overview/DynamicResourceLinkList';\nimport {\n  EventListenerKind,\n  EventListenerKindTrigger,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  EventListenerKindBindingReference,\n} from '../resource-types';\n\ntype RouteMap = { [generatedName: string]: RouteKind };\ntype TriggerTemplateMapping = { [key: string]: TriggerTemplateKind };\n\nconst getResourceName = (resource: K8sResourceCommon): string => resource.metadata.name;\nconst getEventListenerTemplateNames = (el: EventListenerKind): string[] =>\n  el.spec.triggers?.map(\n    (elTrigger: EventListenerKindTrigger) => elTrigger.template?.ref || elTrigger.template?.name,\n  ) || [];\nconst getEventListenerGeneratedName = (eventListener: EventListenerKind) =>\n  eventListener.status?.configuration.generatedName;\n\nconst useEventListenerRoutes = (\n  namespace: string,\n  eventListenerResources: EventListenerKind[],\n): RouteMap => {\n  const memoResources: WatchK8sResources<RouteMap> = React.useMemo(() => {\n    return (eventListenerResources || []).map(getEventListenerGeneratedName).reduce(\n      (acc, generatedName) => ({\n        ...acc,\n        [generatedName]: {\n          kind: RouteModel.kind,\n          name: generatedName,\n          namespace,\n          optional: true,\n        } as WatchK8sResource,\n      }),\n      {},\n    );\n  }, [namespace, eventListenerResources]);\n\n  const results: WatchK8sResults<RouteMap> = useK8sWatchResources<RouteMap>(memoResources);\n\n  return mapValues(results, (result: WatchK8sResultsObject<RouteKind>) => result.data);\n};\n\nconst useAllEventListeners = (namespace: string) => {\n  const eventListenerResource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: referenceForModel(EventListenerModel),\n      isList: true,\n      namespace,\n    }),\n    [namespace],\n  );\n  const [resources, eventListenerLoaded, error] = useK8sWatchResource<EventListenerKind[]>(\n    eventListenerResource,\n  );\n\n  return eventListenerLoaded && !error ? resources : null;\n};\n\nexport type RouteTemplate = {\n  routeURL: string | null;\n  triggerTemplateName: string;\n};\n\nexport const usePipelineTriggerTemplateNames = (\n  pipelineName: string,\n  namespace: string,\n): RouteTemplate[] | null => {\n  const eventListenerResources = useAllEventListeners(namespace);\n\n  const triggerTemplateResources: WatchK8sResources<TriggerTemplateMapping> = React.useMemo(() => {\n    if (!eventListenerResources) {\n      return {};\n    }\n    return flatten(eventListenerResources.map(getEventListenerTemplateNames))\n      .filter((t) => !!t)\n      .reduce(\n        (resourceMap, triggerTemplateName: string) => ({\n          ...resourceMap,\n          [triggerTemplateName]: {\n            kind: referenceForModel(TriggerTemplateModel),\n            name: triggerTemplateName,\n            namespace,\n            optional: true,\n          },\n        }),\n        {},\n      );\n  }, [eventListenerResources, namespace]);\n  const triggerTemplates: WatchK8sResults<TriggerTemplateMapping> = useK8sWatchResources(\n    triggerTemplateResources,\n  );\n  const routes: RouteMap = useEventListenerRoutes(namespace, eventListenerResources);\n\n  const triggerTemplateResults: WatchK8sResultsObject<TriggerTemplateKind>[] = Object.values(\n    triggerTemplates,\n  );\n  const countExpected = Object.keys(triggerTemplateResources).length;\n  const countLoaded = triggerTemplateResults.filter(({ loaded }) => loaded).length;\n  const countErrored = triggerTemplateResults.filter(({ loadError }) => !!loadError).length;\n  if (countLoaded === 0 || countLoaded !== countExpected - countErrored) {\n    return null;\n  }\n  const matchingTriggerTemplateNames: string[] = triggerTemplateResults\n    .filter((resourceWatch) => resourceWatch.loaded)\n    .map((resourceWatch) => resourceWatch.data)\n    .filter((triggerTemplate: TriggerTemplateKind) => {\n      const plr: PipelineRunKind = triggerTemplate?.spec?.resourcetemplates?.find(\n        ({ kind }) => kind === PipelineRunModel.kind,\n      );\n      return plr?.spec?.pipelineRef?.name === pipelineName;\n    })\n    .map(getResourceName);\n\n  return (eventListenerResources || []).reduce((acc, ev: EventListenerKind) => {\n    const eventListenerTemplateNames = getEventListenerTemplateNames(ev);\n    const generatedRouteName = getEventListenerGeneratedName(ev);\n\n    const triggerTemplateName = matchingTriggerTemplateNames.find((name) => {\n      return eventListenerTemplateNames.includes(name);\n    });\n    const route: RouteKind = routes[generatedRouteName];\n\n    if (!triggerTemplateName) {\n      return acc;\n    }\n\n    let routeURL = null;\n    try {\n      if (route) {\n        routeURL = getRouteWebURL(route);\n      }\n    } catch (e) {\n      // swallow errors, we don't care if we can't create a good route right now\n    }\n\n    return [...acc, { routeURL, triggerTemplateName }];\n  }, []);\n};\n\nexport const useEventListenerURL = (\n  eventListener: EventListenerKind,\n  namespace: string,\n): string | null => {\n  const [route, routeLoaded] = useK8sGet<RouteKind>(\n    RouteModel,\n    getEventListenerGeneratedName(eventListener),\n    namespace,\n  );\n\n  return routeLoaded && route?.status?.ingress ? getRouteWebURL(route) : null;\n};\n\nexport const getEventListenerTriggerBindingNames = (\n  bindings: EventListenerKindBindingReference[],\n): ResourceModelLink[] =>\n  bindings?.map((binding) => ({\n    resourceKind: getSafeBindingResourceKind(binding.kind),\n    // Ref is used since Tekton Triggers 0.5 (OpenShift Pipeline Operator 1.1)\n    // We keep the fallback to name here to support also OpenShift Pipeline Operator 1.0.\n    name: binding.ref || binding.name,\n  }));\n\nexport const getTriggerTemplatePipelineName = (triggerTemplate: TriggerTemplateKind): string => {\n  return (\n    triggerTemplate.spec.resourcetemplates.find(({ kind }) => kind === PipelineRunModel.kind)?.spec\n      .pipelineRef.name || ''\n  );\n};\n\nexport const useTriggerTemplateEventListenerNames = (triggerTemplate: TriggerTemplateKind) => {\n  const eventListenerResources = useAllEventListeners(triggerTemplate.metadata.namespace) || [];\n\n  return eventListenerResources\n    .filter((eventListener: EventListenerKind) =>\n      eventListener.spec.triggers?.find((trigger) =>\n        [trigger.template?.ref, trigger.template?.name].includes(getResourceName(triggerTemplate)),\n      ),\n    )\n    .map(getResourceName);\n};\n\nexport const useTriggerBindingEventListenerNames = (triggerBinding: TriggerBindingKind) => {\n  const eventListenerResources = useAllEventListeners(triggerBinding.metadata.namespace) || [];\n  return eventListenerResources\n    .filter((eventListener: EventListenerKind) =>\n      eventListener.spec.triggers?.find(({ bindings }) =>\n        bindings?.find(\n          ({ kind, name }) =>\n            getResourceName(triggerBinding) === name &&\n            getResourceModelFromBindingKind(kind).kind === triggerBinding.kind,\n        ),\n      ),\n    )\n    .map(getResourceName);\n};\n","export * from './hooks';\nexport { default as ResourceKebabWithUserLabel } from './ResourceKebabWithUserLabel';\n","import * as React from 'react';\nimport i18n from 'i18next';\nimport * as _ from 'lodash';\nimport { SemVer } from 'semver';\nimport { deleteModal, errorModal } from '@console/internal/components/modals';\nimport {\n  history,\n  resourcePathFromModel,\n  Kebab,\n  KebabAction,\n  asAccessReview,\n} from '@console/internal/components/utils';\nimport { k8sCreate, K8sKind, k8sPatch, referenceForModel } from '@console/internal/module/k8s';\nimport { StartedByAnnotation } from '../components/pipelines/const';\nimport {\n  addTriggerModal,\n  startPipelineModal,\n  removeTriggerModal,\n} from '../components/pipelines/modals';\nimport { getPipelineRunData } from '../components/pipelines/modals/common/utils';\nimport { getTaskRunsOfPipelineRun } from '../components/taskruns/useTaskRuns';\nimport { RESOURCE_LOADED_FROM_RESULTS_ANNOTATION } from '../const';\nimport { EventListenerModel, PipelineModel, PipelineRunModel, TaskRunModel } from '../models';\nimport { PipelineKind, PipelineRunKind, TaskRunKind } from '../types';\nimport {\n  shouldHidePipelineRunStop,\n  shouldHidePipelineRunCancel,\n  TaskStatus,\n  shouldHidePipelineRunStopForTaskRunStatus,\n  shouldHidePipelineRunCancelForTaskRunStatus,\n} from './pipeline-augment';\nimport { getSbomTaskRun, returnValidPipelineRunModel } from './pipeline-utils';\n\nexport const handlePipelineRunSubmit = (pipelineRun: PipelineRunKind) => {\n  history.push(\n    resourcePathFromModel(\n      PipelineRunModel,\n      pipelineRun.metadata.name,\n      pipelineRun.metadata.namespace,\n    ),\n  );\n};\n\nexport const triggerPipeline = (\n  pipeline: PipelineKind,\n  onSubmit?: (pipelineRun: PipelineRunKind) => void,\n) => {\n  k8sCreate(PipelineRunModel, getPipelineRunData(pipeline))\n    .then(onSubmit)\n    .catch((err) => errorModal({ error: err.message }));\n};\n\nexport const reRunPipelineRun: KebabAction = (kind: K8sKind, pipelineRun: PipelineRunKind) => ({\n  // t('pipelines-plugin~Rerun')\n  labelKey: 'pipelines-plugin~Rerun',\n  callback: () => {\n    const namespace = _.get(pipelineRun, 'metadata.namespace');\n    const { pipelineRef, pipelineSpec } = pipelineRun.spec;\n    if (namespace && (pipelineRef?.name || pipelineSpec)) {\n      k8sCreate(returnValidPipelineRunModel(pipelineRun), getPipelineRunData(null, pipelineRun));\n    } else {\n      errorModal({\n        error: i18n.t(\n          'pipelines-plugin~Invalid PipelineRun configuration, unable to start Pipeline.',\n        ),\n      });\n    }\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipelineRun.metadata.name,\n    namespace: pipelineRun.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nexport const editPipeline: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Edit Pipeline')\n  labelKey: 'pipelines-plugin~Edit Pipeline',\n  callback: () => {\n    const {\n      metadata: { name, namespace },\n    } = pipeline;\n    history.push(`/k8s/ns/${namespace}/${referenceForModel(PipelineModel)}/${name}/builder`);\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const startPipeline: KebabAction = (\n  kind: K8sKind,\n  pipeline: PipelineKind,\n  onSubmit?: (pipelineRun: PipelineRunKind) => void,\n) => ({\n  // t('pipelines-plugin~Start')\n  labelKey: 'pipelines-plugin~Start',\n  callback: () => {\n    const params = _.get(pipeline, ['spec', 'params'], []);\n    const resources = _.get(pipeline, ['spec', 'resources'], []);\n    const workspaces = _.get(pipeline, ['spec', 'workspaces'], []);\n\n    if (!_.isEmpty(params) || !_.isEmpty(resources) || !_.isEmpty(workspaces)) {\n      startPipelineModal({\n        pipeline,\n        modalClassName: 'modal-lg',\n        onSubmit,\n      });\n    } else {\n      triggerPipeline(pipeline, onSubmit);\n    }\n  },\n  accessReview: {\n    group: PipelineRunModel.apiGroup,\n    resource: PipelineRunModel.plural,\n    namespace: pipeline.metadata.namespace,\n    verb: 'create',\n  },\n});\n\ntype RerunPipelineData = {\n  onComplete?: (pipelineRun: PipelineRunKind) => void;\n  labelKey?: string;\n};\nconst rerunPipeline: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  resources: any,\n  customData: RerunPipelineData = {},\n) => {\n  // t('pipelines-plugin~Start last run')\n  const { labelKey = 'pipelines-plugin~Start last run', onComplete } = customData;\n\n  const sharedProps = { labelKey, accessReview: {} };\n\n  if (\n    !pipelineRun ||\n    !_.has(pipelineRun, 'metadata.name') ||\n    !_.has(pipelineRun, 'metadata.namespace')\n  ) {\n    return sharedProps;\n  }\n\n  return {\n    ...sharedProps,\n    callback: () => {\n      k8sCreate(kind, getPipelineRunData(null, pipelineRun))\n        .then(typeof onComplete === 'function' ? onComplete : () => {})\n        .catch((err) => errorModal({ error: err.message }));\n    },\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'create',\n    },\n  };\n};\n\nexport const rerunPipelineAndStay: KebabAction = (kind: K8sKind, pipelineRun: PipelineRunKind) => {\n  return rerunPipeline(kind, pipelineRun);\n};\n\nexport const rerunPipelineAndRedirect: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n) => {\n  return rerunPipeline(kind, pipelineRun, null, {\n    onComplete: handlePipelineRunSubmit,\n    // t('pipelines-plugin~Start last run')\n    labelKey: 'pipelines-plugin~Start last run',\n  });\n};\n\nexport const deleteResourceObj: KebabAction = (\n  kind: K8sKind,\n  resourceObj: PipelineRunKind | TaskRunKind,\n) => {\n  const tektonResultsFlag =\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/log'] ||\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/record'] ||\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/result'];\n  const isResourceLoadedFromTR =\n    resourceObj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const message = (\n    <p>\n      {i18n.t(\n        'pipelines-plugin~This action will delete resource from k8s but still the resource can be fetched from Tekton Results',\n      )}\n    </p>\n  );\n  return {\n    // t('pipelines-plugin~Delete {{kind}}', {kind: kind.label})\n    labelKey: 'pipelines-plugin~Delete {{kind}}',\n    labelKind: { kind: kind.labelKey ? i18n.t(kind.labelKey) : kind.label },\n    callback: () =>\n      deleteModal({\n        kind,\n        resource: resourceObj,\n        message: !isResourceLoadedFromTR && tektonResultsFlag ? message : '',\n      }),\n    accessReview: asAccessReview(kind, resourceObj, 'delete'),\n    isDisabled: !!isResourceLoadedFromTR,\n    tooltip: isResourceLoadedFromTR\n      ? i18n.t('pipelines-plugin~Resource is being fetched from Tekton Results.')\n      : '',\n  };\n};\n\nexport const rerunPipelineRunAndRedirect: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n) => {\n  return rerunPipeline(kind, pipelineRun, null, {\n    onComplete: handlePipelineRunSubmit,\n    // t('pipelines-plugin~Rerun')\n    labelKey: 'pipelines-plugin~Rerun',\n  });\n};\n\nexport const stopPipelineRun: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  operatorVersion: SemVer,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Stop')\n    labelKey: 'pipelines-plugin~Stop',\n    // t('pipelines-plugin~Let the running tasks complete, then execute finally tasks'),\n    tooltipKey: 'pipelines-plugin~Let the running tasks complete, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value:\n              operatorVersion.major === 1 && operatorVersion.minor < 9\n                ? 'PipelineRunCancelled'\n                : 'StoppedRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunStop(pipelineRun, PLRTasks),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const stopPipelineRunForTaskRunStatus: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  operatorVersion: SemVer,\n  taskRunStatusObj?: TaskStatus,\n) => {\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Stop')\n    labelKey: 'pipelines-plugin~Stop',\n    // t('pipelines-plugin~Let the running tasks complete, then execute finally tasks'),\n    tooltipKey: 'pipelines-plugin~Let the running tasks complete, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value:\n              operatorVersion.major === 1 && operatorVersion.minor < 9\n                ? 'PipelineRunCancelled'\n                : 'StoppedRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunStopForTaskRunStatus(pipelineRun, taskRunStatusObj),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const cancelPipelineRunFinally: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Cancel')\n    labelKey: 'pipelines-plugin~Cancel',\n    // t('pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks'),\n    tooltipKey:\n      'pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value: 'CancelledRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunCancel(pipelineRun, PLRTasks),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const cancelPipelineRunFinallyForTaskRunStatus: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj?: TaskStatus,\n) => {\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Cancel')\n    labelKey: 'pipelines-plugin~Cancel',\n    // t('pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks'),\n    tooltipKey:\n      'pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value: 'CancelledRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunCancelForTaskRunStatus(pipelineRun, taskRunStatusObj),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const viewPipelineRunSBOM: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  const sbomTaskRun = getSbomTaskRun(PLRTasks);\n\n  return {\n    labelKey: 'pipelines-plugin~View SBOM',\n    callback: () => {\n      history.push(\n        `/k8s/ns/${sbomTaskRun.metadata.namespace}/${referenceForModel(TaskRunModel)}/${\n          sbomTaskRun.metadata.name\n        }/logs`,\n      );\n    },\n    hidden: !sbomTaskRun,\n  };\n};\n\nconst addTrigger: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Add Trigger')\n  labelKey: 'pipelines-plugin~Add Trigger',\n  callback: () => {\n    const cleanPipeline: PipelineKind = {\n      ...pipeline,\n      metadata: {\n        ...pipeline.metadata,\n        annotations: _.omit(pipeline.metadata.annotations, [StartedByAnnotation.user]),\n      },\n    };\n    addTriggerModal({ pipeline: cleanPipeline, modalClassName: 'modal-lg' });\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst removeTrigger: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Remove Trigger')\n  labelKey: 'pipelines-plugin~Remove Trigger',\n  callback: () => {\n    removeTriggerModal({ pipeline });\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'delete',\n  },\n});\nexport const getPipelineKebabActions = (\n  pipelineRun?: PipelineRunKind,\n  isTriggerPresent?: boolean,\n): KebabAction[] => [\n  (model, resource: PipelineKind) => startPipeline(model, resource, handlePipelineRunSubmit),\n  ...(pipelineRun ? [() => rerunPipelineAndRedirect(PipelineRunModel, pipelineRun)] : []),\n  (model, pipeline) => addTrigger(EventListenerModel, pipeline),\n  ...(isTriggerPresent ? [(model, pipeline) => removeTrigger(EventListenerModel, pipeline)] : []),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (model, pipeline) => editPipeline(model, pipeline),\n  Kebab.factory.Delete,\n];\n\nexport const getPipelineRunKebabActions = (\n  operatorVersion: SemVer,\n  taskRuns?: TaskRunKind[],\n  redirectReRun?: boolean,\n  taskRunStatusObj?: TaskStatus,\n): KebabAction[] => [\n  redirectReRun\n    ? (model, pipelineRun) => rerunPipelineRunAndRedirect(model, pipelineRun)\n    : (model, pipelineRun) => reRunPipelineRun(model, pipelineRun),\n  !taskRunStatusObj\n    ? (model, pipelineRun) => stopPipelineRun(model, pipelineRun, operatorVersion, taskRuns)\n    : (model, pipelineRun) =>\n        stopPipelineRunForTaskRunStatus(model, pipelineRun, operatorVersion, taskRunStatusObj),\n  !taskRunStatusObj\n    ? (model, pipelineRun) => cancelPipelineRunFinally(model, pipelineRun, taskRuns)\n    : (model, pipelineRun) =>\n        cancelPipelineRunFinallyForTaskRunStatus(model, pipelineRun, taskRunStatusObj),\n  (model, pipelineRun) => deleteResourceObj(model, pipelineRun),\n];\n\nexport const getTaskRunKebabActions = (): KebabAction[] => [\n  (model, taskRun) => deleteResourceObj(model, taskRun),\n];\n","import * as React from 'react';\nimport { Form } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '@console/internal/components/factory';\n\ntype ModalStructureProps = {\n  children: React.ReactNode;\n  submitBtnText: string;\n  submitDanger?: boolean;\n  title: string;\n};\n\ntype ModalStructureCombinedProps = FormikProps<FormikValues> &\n  ModalComponentProps &\n  ModalStructureProps;\n\nconst ModalStructure: React.FC<ModalStructureCombinedProps> = (props) => {\n  const {\n    children,\n    close,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    status,\n    submitBtnText,\n    submitDanger,\n    title,\n  } = props;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"modal-content\">\n        <ModalTitle>{title}</ModalTitle>\n        <ModalBody>\n          <div className=\"pf-v5-c-form\">{children}</div>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={status?.submitError}\n          inProgress={isSubmitting}\n          submitText={submitBtnText}\n          submitDisabled={!_.isEmpty(errors) || isSubmitting}\n          submitDanger={submitDanger}\n          cancel={close}\n        />\n      </div>\n    </Form>\n  );\n};\n\nexport default ModalStructure;\n","import { merge } from 'lodash';\n// FIXME react-redux types are 6.x while react-redux is 7.x\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector } from 'react-redux';\nimport { getUser } from '@console/dynamic-plugin-sdk';\nimport { KebabAction, Kebab } from '@console/internal/components/utils';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunKind } from '../../../types';\nimport { StartedByAnnotation } from '../../pipelines/const';\n\ntype AnnotationMap = { [annotationKey: string]: string };\n\nconst mergeAnnotationsWithResource = (annotations: AnnotationMap, resource: K8sResourceCommon) => {\n  return merge({}, resource, { metadata: { annotations }, spec: {} });\n};\n\nexport const useUserAnnotationForManualStart = (): AnnotationMap => {\n  const user = useSelector(getUser);\n\n  if (!user?.metadata?.name) {\n    return {};\n  }\n\n  return {\n    [StartedByAnnotation.user]: user.metadata.name,\n  };\n};\n\nexport const usePipelineRunWithUserAnnotation = (plr: PipelineRunKind): PipelineRunKind => {\n  const annotations = useUserAnnotationForManualStart();\n\n  return plr && mergeAnnotationsWithResource(annotations, plr);\n};\n\nexport const useMenuActionsWithUserAnnotation = (menuActions: KebabAction[]): KebabAction[] => {\n  const annotations = useUserAnnotationForManualStart();\n\n  return menuActions.map((kebabAction) => {\n    if (Object.values(Kebab.factory).includes(kebabAction)) {\n      return kebabAction;\n    }\n    return (kind, resource, ...rest) =>\n      kebabAction(kind, mergeAnnotationsWithResource(annotations, resource), ...rest);\n  });\n};\n","import i18next from 'i18next';\nimport * as yup from 'yup';\nimport { paramIsRequired } from '../../../../utils/common';\nimport { PipelineResourceType, VolumeTypes } from '../../const';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\n\nexport const validateResourceType = () =>\n  yup.object().shape({\n    type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    params: yup\n      .object()\n      .when('type', {\n        is: PipelineResourceType.git,\n        then: yup.object({\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          revision: yup.string(),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.image,\n        then: yup.object({\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.storage,\n        then: yup.object({\n          type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          location: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          dir: yup.string(),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.cluster,\n        then: yup.object({\n          name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          username: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          password: yup.string(),\n          insecure: yup.string(),\n        }),\n      }),\n    secrets: yup.object().when('type', {\n      is: PipelineResourceType.cluster,\n      then: yup.object({\n        cadata: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        token: yup.string(),\n      }),\n    }),\n  });\n\nexport const formResources = () =>\n  yup.array().of(\n    yup.object().shape({\n      name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      selection: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      data: yup.object().when('selection', {\n        is: CREATE_PIPELINE_RESOURCE,\n        then: validateResourceType(),\n      }),\n    }),\n  );\n\nconst volumeTypeSchema = () =>\n  yup\n    .object()\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.Secret,\n      then: yup.object().shape({\n        secret: yup.object().shape({\n          secretName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          items: yup.array().of(\n            yup.object().shape({\n              key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n              path: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            }),\n          ),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.ConfigMap,\n      then: yup.object().shape({\n        configMap: yup.object().shape({\n          name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          items: yup.array().of(\n            yup.object().shape({\n              key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n              path: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            }),\n          ),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.PVC,\n      then: yup.object().shape({\n        persistentVolumeClaim: yup.object().shape({\n          claimName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.VolumeClaimTemplate,\n      then: yup.object().shape({\n        volumeClaimTemplate: yup.object().shape({\n          spec: yup.object().shape({\n            accessModes: yup\n              .array()\n              .of(yup.string().required(i18next.t('pipelines-plugin~Required'))),\n            resources: yup.object().shape({\n              requests: yup\n                .object()\n                .shape({ storage: yup.string().required(i18next.t('pipelines-plugin~Required')) }),\n            }),\n            storageClassName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            volumeMode: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          }),\n        }),\n      }),\n    });\n\nconst commonPipelineSchema = () =>\n  yup.object().shape({\n    parameters: yup.array().of(\n      yup.object().shape({\n        name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        default: yup.string(),\n        description: yup.string(),\n        value: yup\n          .string()\n          .test('test-if-param-can-be-empty', i18next.t('pipelines-plugin~Required'), function (\n            value: string,\n          ) {\n            return paramIsRequired(this.parent) ? !!value : true;\n          }),\n      }),\n    ),\n    resources: formResources(),\n    workspaces: yup.array().of(\n      yup.object().shape({\n        type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        data: volumeTypeSchema(),\n      }),\n    ),\n  });\n\nexport const startPipelineSchema = () =>\n  commonPipelineSchema().shape({\n    secretOpen: yup.boolean().equals([false]),\n  });\n\nexport const addTriggerSchema = () =>\n  commonPipelineSchema().shape({\n    triggerBinding: yup.object().shape({\n      name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      resource: yup\n        .object()\n        .shape({\n          metadata: yup.object().shape({\n            name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          }),\n        })\n        .required(i18next.t('pipelines-plugin~Required')),\n    }),\n  });\n\nexport const advancedSectionValidationSchema = () =>\n  yup.object().shape({\n    secretName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    annotations: yup.object().shape({\n      key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      value: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    }),\n  });\n","import { FormikErrors } from 'formik';\nimport i18n from 'i18next';\nimport * as _ from 'lodash';\nimport { apiVersionForModel } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { ClusterTaskModel, PipelineModel, TaskModel } from '../../../models';\nimport {\n  PipelineKind,\n  PipelineTask,\n  PipelineTaskParam,\n  TaskKind,\n  TektonParam,\n} from '../../../types';\nimport { sanitizePipelineParams } from '../detail-page-tabs/utils';\nimport { getTaskParameters } from '../resource-utils';\nimport {\n  getTaskErrorString,\n  STATUS_KEY_NAME_ERROR,\n  TASK_FIELD_ERROR_TYPE_MAPPING,\n  TaskErrorType,\n} from './const';\nimport {\n  BuilderTasksErrorGroup,\n  GetErrorMessage,\n  PipelineBuilderFormikStatus,\n  PipelineBuilderFormValues,\n  PipelineBuilderFormYamlValues,\n  PipelineBuilderLoadingTask,\n  PipelineBuilderTaskBase,\n  PipelineBuilderTaskResources,\n  TaskErrors,\n  TaskType,\n} from './types';\n\nconst isTaskArrayErrors = (errors: string | string[] | TaskErrors): errors is TaskErrors => {\n  return Array.isArray(errors) && errors.some((value) => typeof value === 'object');\n};\n\nexport const getBuilderTasksErrorGroup = (\n  formikFormErrors?: FormikErrors<PipelineBuilderFormValues>,\n  status?: PipelineBuilderFormikStatus,\n): BuilderTasksErrorGroup => {\n  const paths = Object.keys(status?.[STATUS_KEY_NAME_ERROR] || {});\n  const nameErrorString = getTaskErrorString(TaskErrorType.NAME_ERROR);\n  const { formData } = paths.reduce((data, path) => {\n    _.set(data, path, nameErrorString);\n    return data;\n  }, {} as FormikErrors<PipelineBuilderFormYamlValues>);\n\n  const getErrorsForType = (type: TaskType): TaskErrors => {\n    const formErrors = isTaskArrayErrors(formikFormErrors?.[type]) ? formikFormErrors[type] : [];\n    const displayNameErrors = formData?.[type];\n    return _.merge([], formErrors, displayNameErrors);\n  };\n\n  return {\n    tasks: getErrorsForType('tasks'),\n    finally: getErrorsForType('finallyTasks'),\n  };\n};\n\nexport const getTopLevelErrorMessage: GetErrorMessage = (errors) => (taskIndex) => {\n  const errorObj = errors[taskIndex] || {};\n  const taskErrors = Object.values(errorObj);\n\n  if (taskErrors.length === 0) return null;\n\n  // Check if it's one of the known error messages\n  const matchingErrorType: TaskErrorType = Object.values(\n    TaskErrorType,\n  ).find((errorType: TaskErrorType) => taskErrors.includes(getTaskErrorString(errorType)));\n  if (matchingErrorType) return getTaskErrorString(matchingErrorType);\n\n  // Not one of the top-level known ones, is it a problem with a known area?\n  const keys = Object.keys(TASK_FIELD_ERROR_TYPE_MAPPING) as TaskErrorType[];\n  const mappingErrorType: TaskErrorType = keys.find((key) => {\n    const properties: string[] = TASK_FIELD_ERROR_TYPE_MAPPING[key];\n    return properties?.some((propertyPath) => _.get(errorObj, propertyPath));\n  });\n  if (!mappingErrorType) return null;\n\n  // Problem with a known area, get the area based error for a high-level error (more specific error will be on the field)\n  return getTaskErrorString(mappingErrorType);\n};\n\nexport const findTask = (\n  resourceTasks: PipelineBuilderTaskResources,\n  task: PipelineTask,\n): TaskKind => {\n  if (task?.taskRef) {\n    if (\n      !resourceTasks?.tasksLoaded ||\n      !resourceTasks.clusterTasks ||\n      !resourceTasks.namespacedTasks\n    ) {\n      return null;\n    }\n    const {\n      taskRef: { kind, name },\n    } = task;\n    const matchingName = (taskResource: TaskKind) => taskResource.metadata.name === name;\n\n    if (kind === ClusterTaskModel.kind) {\n      return resourceTasks.clusterTasks.find(matchingName);\n    }\n    return resourceTasks.namespacedTasks.find(matchingName);\n  }\n\n  if (task?.taskSpec) {\n    return {\n      apiVersion: apiVersionForModel(TaskModel),\n      kind: 'EmbeddedTask',\n      metadata: {\n        name: i18n.t('pipelines-plugin~Embedded task'),\n      },\n      spec: task.taskSpec,\n    };\n  }\n\n  return null;\n};\n\nexport const findTaskFromFormikData = (\n  formikData: PipelineBuilderFormYamlValues,\n  task: PipelineTask,\n): TaskKind => {\n  const { taskResources } = formikData;\n  return findTask(taskResources, task);\n};\n\n/**\n * Swaps one runAfter (relatedTaskName) for another (taskName).\n */\nexport const mapReplaceRelatedInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(relatedTaskName)) {\n    return iterationTask;\n  }\n\n  const remainingRunAfters = iterationTask.runAfter.filter(\n    (runAfterName) => runAfterName !== relatedTaskName,\n  );\n\n  return {\n    ...iterationTask,\n    runAfter: [...remainingRunAfters, taskName],\n  };\n};\n\n/**\n * Finds and removes a related runAfter (taskName).\n */\nexport const mapRemoveRelatedInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(taskName)) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: iterationTask.runAfter.filter((runAfterName) => runAfterName !== taskName),\n  };\n};\n\n/**\n * Removes reference of a task (removalTask) in the other task (iterationTask) & combines the task\n * (removalTask) runAfters in the other task (iterationTask).\n */\nexport const mapStitchReplaceInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  removalTask: PipelineBuilderTaskBase,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!removalTask?.name) {\n    return iterationTask;\n  }\n  if (!removalTask?.runAfter) {\n    return mapRemoveRelatedInOthers<TaskType>(removalTask.name, iterationTask);\n  }\n  if (!iterationTask?.runAfter?.includes(removalTask.name)) {\n    return iterationTask;\n  }\n\n  const updatedIterationTask = mapRemoveRelatedInOthers(removalTask.name, iterationTask);\n  let newRunAfter: string[] = removalTask.runAfter;\n  if (updatedIterationTask.runAfter.length > 0) {\n    newRunAfter = [...updatedIterationTask.runAfter, ...newRunAfter];\n  }\n\n  return {\n    ...updatedIterationTask,\n    runAfter: _.uniq(newRunAfter),\n  };\n};\n\n/**\n * Simply add a runAfter (of newTaskName) to a task (iterationTask) on matching names (relatedTaskName).\n */\nexport const mapBeRelated = <TaskType extends PipelineBuilderTaskBase>(\n  newTaskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (iterationTask?.name !== relatedTaskName) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: [newTaskName],\n  };\n};\n\n/**\n * Adds a task (taskName) to an existing runAfter (iterationTask.runAfter) if a related name\n * (relatedTaskName) is already part of the runAfter.\n */\nexport const mapAddRelatedToOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(relatedTaskName)) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: [...iterationTask.runAfter, taskName],\n  };\n};\n\nexport const safeName = (reservedNames: string[], desiredName: string): string => {\n  if (reservedNames.includes(desiredName)) {\n    const newName = `${desiredName}-${getRandomChars(3)}`;\n    if (reservedNames.includes(newName)) {\n      return safeName(reservedNames, desiredName);\n    }\n    return newName;\n  }\n  return desiredName;\n};\n\nexport const convertResourceToLoadingTask = (\n  usedNames: string[],\n  resource: TaskKind,\n  isFinallyTask: boolean,\n  runAfter?: string[],\n): PipelineBuilderLoadingTask => {\n  const kind = resource.kind ?? TaskModel.kind;\n  return {\n    name: safeName(usedNames, resource.metadata.name),\n    runAfter: isFinallyTask ? [] : runAfter,\n    taskRef: {\n      kind,\n      name: resource.metadata.name,\n    },\n    resource,\n    isFinallyTask,\n  };\n};\n\nexport const convertResourceToTask = (\n  usedNames: string[],\n  resource: TaskKind,\n  runAfter?: string[],\n): PipelineTask => {\n  const kind = resource.kind ?? TaskModel.kind;\n  return {\n    name: safeName(usedNames, resource.metadata.name),\n    runAfter,\n    taskRef: {\n      kind,\n      name: resource.metadata.name,\n    },\n    params: getTaskParameters(resource).map(\n      (param: TektonParam): PipelineTaskParam => ({\n        name: param.name,\n        value: param.default,\n      }),\n    ),\n  };\n};\n\nconst removeListRunAfters = (task: PipelineTask, listIds: string[]): PipelineTask => {\n  if (task?.runAfter && listIds.length > 0) {\n    // Trim out any runAfters pointing at list nodes\n    const runAfter = (task.runAfter || []).filter(\n      (runAfterName) => !listIds.includes(runAfterName),\n    );\n\n    return {\n      ...task,\n      runAfter,\n    };\n  }\n\n  return task;\n};\n\nexport const removeEmptyFormFields = (task: PipelineTask): PipelineTask => {\n  let trimmedTask = task;\n  // Since we can submit, this param has a default; check for empty values and remove\n  if (task.params?.length > 0) {\n    const params = task.params?.filter((param) => !!param.value);\n    trimmedTask = { ...trimmedTask, params };\n  }\n  // Drop input/output resources which are not linked to an (optional) resource.\n  if (task.resources?.inputs?.length > 0 || task.resources?.outputs?.length > 0) {\n    const inputs = task.resources?.inputs?.filter((resource) => resource.resource);\n    const outputs = task.resources?.outputs?.filter((resource) => resource.resource);\n    trimmedTask = { ...trimmedTask, resources: { ...trimmedTask.resources, inputs, outputs } };\n  }\n  // Drop workspaces which are not linked to an (optional) workspace.\n  if (task.workspaces?.length > 0) {\n    const workspaces = task.workspaces?.filter((workspace) => workspace.workspace);\n    trimmedTask = { ...trimmedTask, workspaces };\n  }\n  return trimmedTask;\n};\n\nexport const convertBuilderFormToPipeline = (\n  formValues: PipelineBuilderFormValues,\n  namespace: string,\n  existingPipeline?: PipelineKind,\n): PipelineKind => {\n  const {\n    name,\n    resources,\n    params,\n    workspaces,\n    tasks,\n    listTasks,\n    finallyTasks,\n    ...others\n  } = formValues;\n  const listIds = listTasks.map((listTask) => listTask.name);\n  // Strip remaining builder-only properties\n  const unhandledSpec = _.omit(others, 'finallyListTasks', 'loadingTasks');\n\n  return {\n    ...existingPipeline,\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      ...existingPipeline?.metadata,\n      name: existingPipeline?.metadata?.name ? existingPipeline?.metadata?.name : name,\n      namespace,\n    },\n    spec: {\n      ...existingPipeline?.spec,\n      ...unhandledSpec,\n      params: sanitizePipelineParams(\n        params.length > 0 ? params : existingPipeline?.spec?.params ?? [],\n      ),\n      workspaces: workspaces.length > 0 ? workspaces : existingPipeline?.spec?.workspaces ?? [],\n      tasks:\n        tasks.length > 0\n          ? tasks\n          : existingPipeline?.spec?.tasks ??\n            [].map((task) => task && removeEmptyFormFields(removeListRunAfters(task, listIds))),\n      finally: finallyTasks,\n    },\n  };\n};\n\nexport const convertPipelineToBuilderForm = (pipeline: PipelineKind): PipelineBuilderFormValues => {\n  if (!pipeline) return null;\n\n  const {\n    metadata: { name },\n    spec: { params = [], resources = [], workspaces = [], tasks = [], finally: finallyTasks = [] },\n  } = pipeline;\n\n  return {\n    name,\n    params,\n    resources,\n    workspaces: workspaces.map((workspace) => ({\n      ...workspace,\n      optional: !!workspace.optional, // Formik fails to understand \"undefined boolean\" checkbox values\n    })),\n    tasks,\n    listTasks: [],\n    loadingTasks: [],\n    finallyTasks,\n    finallyListTasks: [],\n  };\n};\n\nexport const hasEmptyString = (arr: string[]) => _.find(arr, _.isEmpty) === '';\n\nexport const isFieldValid = (value: string | string[], dirty: boolean, emptyIsInvalid: boolean) =>\n  dirty && emptyIsInvalid ? (_.isArray(value) ? !hasEmptyString(value) : !_.isEmpty(value)) : true;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectList,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  getAccessModeForProvisioner,\n  getAccessModeOptions,\n} from '@console/internal/components/storage/shared';\nimport { PersistentVolumeClaimKind } from '@console/internal/module/k8s';\n\nexport const getPVCAccessModes = (resource: PersistentVolumeClaimKind, key: string) =>\n  _.reduce(\n    resource?.spec?.accessModes,\n    (res, value) => {\n      const mode = getAccessModeOptions().find((accessMode) => accessMode.value === value);\n      if (mode) {\n        res.push(mode[key]);\n      }\n      return res;\n    },\n    [],\n  );\n\nexport const AccessModeSelector: React.FC<AccessModeSelectorProps> = (props) => {\n  const {\n    className,\n    pvcResource,\n    filterByVolumeMode,\n    onChange,\n    loaded,\n    provisioner,\n    availableAccessModes = [],\n    description,\n    ignoreReadOnly,\n  } = props;\n\n  const { t } = useTranslation();\n  const pvcInitialAccessMode = pvcResource\n    ? getPVCAccessModes(pvcResource, 'value')\n    : availableAccessModes;\n  const volumeMode: string = pvcResource?.spec?.volumeMode;\n\n  const [allowedAccessModes, setAllowedAccessModes] = React.useState<string[]>();\n  const [accessMode, setAccessMode] = React.useState<string>();\n\n  const changeAccessMode = React.useCallback(\n    (mode: string) => {\n      setAccessMode(mode);\n      onChange(mode);\n    },\n    [onChange],\n  );\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState<string>(\n    getAccessModeOptions().find((mode) => mode.value === pvcInitialAccessMode[0]).title,\n  );\n\n  const onToggleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSelect = (_event: undefined, value: { val: string; label: string }) => {\n    setIsOpen(!isOpen);\n    setSelected(value.label);\n    changeAccessMode(value.val);\n  };\n  const selectOptions = getAccessModeOptions().map((option) => {\n    const disabled = !allowedAccessModes?.includes(option.value);\n    return (\n      <SelectOption\n        key={option.title}\n        value={{ val: option.value, label: option.title }}\n        isDisabled={disabled}\n        isSelected={accessMode === option.value}\n      >\n        {option.title}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={onToggleClick}\n      isExpanded={isOpen}\n      style={\n        {\n          width: '200px',\n        } as React.CSSProperties\n      }\n    >\n      {selected}\n    </MenuToggle>\n  );\n\n  React.useEffect(() => {\n    if (loaded) {\n      setAllowedAccessModes(\n        getAccessModeForProvisioner(\n          provisioner,\n          ignoreReadOnly,\n          filterByVolumeMode ? volumeMode : null,\n        ),\n      );\n    }\n  }, [filterByVolumeMode, ignoreReadOnly, loaded, provisioner, volumeMode]);\n\n  React.useEffect(() => {\n    // Make sure the default or already checked option button value is from any one of allowed the access mode\n    if (allowedAccessModes) {\n      if (!accessMode && allowedAccessModes.includes(pvcInitialAccessMode[0])) {\n        // To view the same access mode value of pvc\n        changeAccessMode(pvcInitialAccessMode[0]);\n      } else if (!allowedAccessModes.includes(accessMode)) {\n        // Old access mode will be disabled\n        changeAccessMode(allowedAccessModes[0]);\n      }\n    }\n  }, [accessMode, allowedAccessModes, changeAccessMode, pvcInitialAccessMode]);\n\n  return (\n    <FormGroup\n      label={t('console-app~Access mode')}\n      isRequired\n      fieldId=\"access-mode\"\n      className={className}\n    >\n      {loaded && allowedAccessModes && (\n        <Select\n          isOpen={isOpen}\n          selected={selected}\n          onSelect={onSelect}\n          onOpenChange={(open) => setIsOpen(open)}\n          toggle={toggle}\n          shouldFocusToggleOnSelect\n        >\n          <SelectList>{selectOptions}</SelectList>\n        </Select>\n      )}\n\n      {allowedAccessModes && allowedAccessModes && description && (\n        <p className=\"help-block\" id=\"access-mode-help\">\n          {description}\n        </p>\n      )}\n      {(!loaded || !allowedAccessModes) && <div className=\"skeleton-text\" />}\n    </FormGroup>\n  );\n};\n\ntype AccessModeSelectorProps = {\n  className?: string;\n  pvcResource?: PersistentVolumeClaimKind;\n  filterByVolumeMode?: boolean;\n  onChange: (accessMode: string) => void;\n  availableAccessModes?: string[];\n  loaded: boolean;\n  loadError?: any;\n  provisioner: string;\n  description?: string;\n  ignoreReadOnly?: boolean;\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\n/* eslint-disable import/named */\nimport { WithTranslation, withTranslation } from 'react-i18next';\n\nimport { Firehose, LoadingInline, Dropdown, ResourceName, ResourceIcon } from '.';\nimport { isDefaultClass } from '../storage-class';\nimport * as classNames from 'classnames';\n\n/* Component StorageClassDropdown - creates a dropdown list of storage classes */\n\nexport class StorageClassDropdownInnerWithTranslation extends React.Component<\n  StorageClassDropdownInnerProps,\n  StorageClassDropdownInnerState\n> {\n  readonly state: StorageClassDropdownInnerState = {\n    items: {},\n    name: this.props.name,\n    selectedKey: this.props.selectedKey,\n    title: <LoadingInline />,\n    defaultClass: this.props.defaultClass,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.UNSAFE_componentWillReceiveProps(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { loaded, loadError, resources, t } = nextProps;\n\n    if (loadError) {\n      this.setState({\n        title: (\n          <div className=\"cos-error-title\">\n            {t('public~Error loading {{desc}}', { desc: nextProps.desc })}\n          </div>\n        ),\n      });\n      return;\n    }\n    if (!loaded) {\n      return;\n    }\n\n    const state = {\n      items: {},\n      title: {},\n      defaultClass: '',\n    };\n    let unorderedItems = {};\n    const noStorageClass = t('public~No default StorageClass');\n    _.map(resources.StorageClass.data, (resource) => {\n      unorderedItems[resource.metadata.name] = {\n        kindLabel: 'StorageClass',\n        name: resource.metadata.name,\n        description: _.get(resource, 'metadata.annotations.description', ''),\n        default: isDefaultClass(resource),\n        accessMode: _.get(\n          resource,\n          ['metadata', 'annotations', 'storage.alpha.openshift.io/access-mode'],\n          '',\n        ),\n        provisioner: resource.provisioner,\n        parameters: resource.parameters,\n        type: _.get(resource, 'parameters.type', ''),\n        zone: _.get(resource, 'parameters.zone', ''),\n        resource,\n      };\n    });\n\n    //Filter if user provides a custom function\n    if (nextProps.filter) {\n      unorderedItems = Object.keys(unorderedItems)\n        .filter((sc) => nextProps.filter(unorderedItems[sc]))\n        .reduce((acc, key) => {\n          acc[key] = unorderedItems[key];\n          return acc;\n        }, {});\n    }\n\n    // Determine if there is a default storage class\n    state.defaultClass = _.findKey(unorderedItems, 'default');\n    const { selectedKey } = this.state;\n    if (!state.defaultClass) {\n      // Add No Storage Class option if there is not a default storage class\n      unorderedItems[''] = { kindLabel: '', name: noStorageClass };\n    }\n\n    if (!this.props.loaded || !selectedKey || !unorderedItems[selectedKey || state.defaultClass]) {\n      state.title = <span className=\"text-muted\">{t('public~Select StorageClass')}</span>;\n    }\n\n    const selectedItem = unorderedItems[selectedKey || state.defaultClass];\n    if (selectedItem) {\n      state.title = this.getTitle(selectedItem);\n    }\n\n    Object.keys(unorderedItems)\n      .sort()\n      .forEach((key) => {\n        state.items[key] = unorderedItems[key];\n      });\n    this.setState(state);\n  }\n\n  componentDidMount() {\n    const { defaultClass } = this.state;\n    if (defaultClass) {\n      this.onChange(defaultClass);\n    }\n  }\n\n  componentDidUpdate() {\n    const { defaultClass, selectedKey } = this.state;\n    if (selectedKey) {\n      this.onChange(selectedKey);\n    } else if (defaultClass) {\n      this.onChange(defaultClass);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state, nextState);\n  }\n\n  autocompleteFilter = (text, item) => fuzzy(text, item.props.name);\n\n  getTitle = (storageClass) => {\n    return storageClass.kindLabel ? (\n      <ResourceName kind=\"StorageClass\" name={storageClass.name} />\n    ) : (\n      <span>{storageClass.name}</span>\n    );\n  };\n\n  onChange = (key) => {\n    const storageClass = _.get(this.state, ['items', key], {});\n    this.setState(\n      {\n        selectedKey: key,\n        title: this.getTitle(storageClass),\n      },\n      () => this.props.onChange(storageClass.resource),\n    );\n  };\n\n  render() {\n    const { id, loaded, describedBy, noSelection, t } = this.props;\n    const items = {};\n    _.each(\n      this.state.items,\n      (props, key) =>\n        (items[key] = key ? (\n          <StorageClassDropdownEntry {...props} />\n        ) : (\n          <StorageClassDropdownNoStorageClassOption {...props} />\n        )),\n    );\n\n    const { selectedKey, defaultClass } = this.state;\n\n    // Only show the dropdown if 'no storage class' is not the only option which depends on defaultClass\n    const itemsAvailableToShow = defaultClass || _.size(items) > 1;\n    return (\n      <>\n        {loaded && itemsAvailableToShow && (\n          <div>\n            <label\n              className={classNames('control-label', this.props.hideClassName, {\n                'co-required': this.props.required,\n              })}\n              htmlFor={id}\n            >\n              {t('public~StorageClass')}\n            </label>\n            <Dropdown\n              className=\"co-storage-class-dropdown\"\n              dropDownClassName=\"dropdown--full-width\"\n              autocompleteFilter={this.autocompleteFilter}\n              autocompletePlaceholder={t('public~Select StorageClass')}\n              items={items}\n              selectedKey={selectedKey}\n              title={this.state.title}\n              onChange={this.onChange}\n              id={id}\n              dataTest={this.props?.['data-test']}\n              noSelection={noSelection}\n              menuClassName=\"dropdown-menu--text-wrap\"\n            />\n            {describedBy && (\n              <p className=\"help-block\" id={describedBy}>\n                {t('public~StorageClass for the new claim')}\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const StorageClassDropdownInner = withTranslation()(\n  StorageClassDropdownInnerWithTranslation,\n);\n\nexport const StorageClassDropdown = (props) => {\n  return (\n    <Firehose resources={[{ kind: 'StorageClass', prop: 'StorageClass', isList: true }]}>\n      <StorageClassDropdownInner {...props} />\n    </Firehose>\n  );\n};\n\nconst StorageClassDropdownEntry = (props) => {\n  const storageClassProperties = [\n    props.default ? ' (default)' : '',\n    props.description,\n    props.accessMode,\n    props.provisioner,\n    props.type,\n    props.zone,\n  ];\n  const storageClassDescriptionLine = _.compact(storageClassProperties).join(' | ');\n  return (\n    <span className=\"co-resource-item\">\n      <ResourceIcon kind={props.kindLabel} />\n      <span className=\"co-resource-item__resource-name\">\n        {props.name}\n        <div className=\"text-muted small\"> {storageClassDescriptionLine}</div>\n      </span>\n    </span>\n  );\n};\n\nconst StorageClassDropdownNoStorageClassOption = (props) => {\n  return (\n    <span className=\"co-resource-item\">\n      <span className=\"co-resource-item__resource-name\">{props.name}</span>\n    </span>\n  );\n};\n\nexport type StorageClassDropdownInnerState = {\n  items: any;\n  name: string;\n  selectedKey: string;\n  title: React.ReactNode;\n  defaultClass: string;\n};\n\nexport type StorageClassDropdownInnerProps = WithTranslation & {\n  id?: string;\n  loaded?: boolean;\n  resources?: any;\n  name: string;\n  onChange: (object) => void;\n  describedBy: string;\n  defaultClass: string;\n  required?: boolean;\n  hideClassName?: string;\n  filter?: (param) => boolean;\n  noSelection?: boolean;\n  selectedKey?: string;\n};\n","import { TektonParam } from '../types';\n\nexport const paramIsRequired = (param: TektonParam): boolean => {\n  return !('default' in param);\n};\n","import { k8sListResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { TaskRunModel } from '../../models';\nimport { TaskRunKind } from '../../types';\nimport { TektonResourceLabel } from '../pipelines/const';\n\nexport const useTaskRuns = (\n  namespace: string,\n  pipelineRunName?: string,\n): [TaskRunKind[], boolean, unknown] => {\n  const taskRunResource = pipelineRunName\n    ? {\n        kind: referenceForModel(TaskRunModel),\n        namespace,\n        selector: {\n          matchLabels: {\n            [TektonResourceLabel.pipelinerun]: pipelineRunName,\n          },\n        },\n        isList: true,\n      }\n    : {\n        kind: referenceForModel(TaskRunModel),\n        namespace,\n        isList: true,\n      };\n  return useK8sWatchResource<TaskRunKind[]>(taskRunResource);\n};\n\nexport const getTaskRuns = async (namespace: string, pipelineRunName?: string) => {\n  const taskRunResource = pipelineRunName\n    ? {\n        model: TaskRunModel,\n        queryParams: {\n          ns: namespace,\n          labelSelector: {\n            matchLabels: {\n              [TektonResourceLabel.pipelinerun]: pipelineRunName,\n            },\n          },\n        },\n      }\n    : {\n        model: TaskRunModel,\n        queryParams: {\n          ns: namespace,\n        },\n      };\n  const taskRuns = await k8sListResource(taskRunResource);\n  return taskRuns;\n};\n\nexport const getTaskRunsOfPipelineRun = (\n  taskRuns: TaskRunKind[],\n  pipelineRunName: string,\n): TaskRunKind[] => {\n  return taskRuns.filter(\n    (taskRun) => taskRun.metadata?.labels[TektonResourceLabel.pipelinerun] === pipelineRunName,\n  );\n};\n","import * as _ from 'lodash';\nimport {\n  K8sResourceCommon,\n  MatchExpression,\n  MatchLabels,\n  Selector,\n} from '@console/dynamic-plugin-sdk/src';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { ALL_NAMESPACES_KEY } from '@console/shared/src/constants';\nimport { consoleProxyFetch, consoleProxyFetchJSON } from '@console/shared/src/utils/proxy';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../const';\nimport { TektonResultModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\n\n// REST API spec\n// https://github.com/tektoncd/results/blob/main/docs/api/rest-api-spec.md\n\n// const URL_PREFIX = `/apis/results.tekton.dev/v1alpha2/parents/`;\n\nconst MINIMUM_PAGE_SIZE = 5;\nconst MAXIMUM_PAGE_SIZE = 10000;\n\nexport type ResultRecord = {\n  name: string;\n  uid: string;\n  createTime: string;\n  updateTime: string;\n  etag: string;\n  data: {\n    // tekton.dev/v1beta1.PipelineRun | tekton.dev/v1beta1.TaskRun | results.tekton.dev/v1alpha2.Log\n    type: string;\n    value: string;\n  };\n};\n\nexport type Log = {\n  result: {\n    name: string;\n    data: string;\n  };\n};\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type RecordsList = {\n  nextPageToken?: string;\n  records: ResultRecord[];\n};\n\nexport type TektonResultsOptions = {\n  pageSize?: number;\n  selector?: Selector;\n  // limit cannot be used in conjuction with pageSize and takes precedence\n  limit?: number;\n  filter?: string;\n};\n\nconst throw404 = () => {\n  // eslint-disable-next-line no-throw-literal\n  throw { code: 404 };\n};\n\n// decoding result base64\nexport const decodeValue = (value: string) => atob(value);\nexport const decodeValueJson = (value: string) => {\n  const decodedValue = value ? JSON.parse(decodeValue(value)) : null;\n  let resourceDeletedInK8sAnnotation;\n  if (_.has(decodedValue?.metadata, 'deletionTimestamp')) {\n    delete decodedValue?.metadata?.deletionTimestamp;\n    resourceDeletedInK8sAnnotation = { [DELETED_RESOURCE_IN_K8S_ANNOTATION]: 'true' };\n  }\n  const decodedValueWithTRAnnotation = decodedValue\n    ? {\n        ...decodedValue,\n        metadata: {\n          ...decodedValue?.metadata,\n          annotations: {\n            ...decodedValue?.metadata?.annotations,\n            [RESOURCE_LOADED_FROM_RESULTS_ANNOTATION]: 'true',\n            ...resourceDeletedInK8sAnnotation,\n          },\n        },\n      }\n    : null;\n  return decodedValueWithTRAnnotation;\n};\n\n// filter functions\nexport const AND = (...expressions: string[]) => expressions.filter((x) => x).join(' && ');\nexport const OR = (...expressions: string[]) => {\n  const filteredExpressions = expressions.filter((x) => x);\n  const filter = filteredExpressions.join(' || ');\n  return filteredExpressions.length > 1 ? `(${filter})` : filter;\n};\n\nconst EXP = (left: string, right: string, operator: string) => `${left} ${operator} ${right}`;\nexport const EQ = (left: string, right: string) => EXP(left, `\"${right}\"`, '==');\nexport const NEQ = (left: string, right: string) => EXP(left, `\"${right}\"`, '!=');\n\nexport enum DataType {\n  PipelineRunV1Beta1 = 'tekton.dev/v1beta1.PipelineRun',\n  TaskRunV1Beta1 = 'tekton.dev/v1beta1.TaskRun',\n  PipelineRunV1 = 'tekton.dev/v1.PipelineRun',\n  TaskRunV1 = 'tekton.dev/v1.TaskRun',\n}\n\nexport const labelsToFilter = (labels?: MatchLabels): string =>\n  labels\n    ? AND(\n        ...Object.keys(labels).map((label) =>\n          EQ(`data.metadata.labels[\"${label}\"]`, labels[label]),\n        ),\n      )\n    : '';\n\nexport const nameFilter = (name?: string): string =>\n  name ? AND(`data.metadata.name.startsWith(\"${name.trim().toLowerCase()}\")`) : '';\n\nexport const expressionsToFilter = (expressions: Omit<MatchExpression, 'value'>[]): string =>\n  AND(\n    ...expressions\n      .map((expression) => {\n        switch (expression.operator) {\n          case 'Exists':\n            return `data.metadata.labels.contains(\"${expression.key}\")`;\n          case 'DoesNotExist':\n            return `!data.metadata.labels.contains(\"${expression.key}\")`;\n          case 'NotIn':\n            return expression.values?.length > 0\n              ? AND(\n                  ...expression.values.map((value) =>\n                    NEQ(`data.metadata.labels[\"${expression.key}\"]`, value),\n                  ),\n                )\n              : '';\n          case 'In':\n            return expression.values?.length > 0\n              ? `data.metadata.labels[\"${expression.key}\"] in [${expression.values.map(\n                  (value) => `\"${value}\"`,\n                )}]`\n              : '';\n          case 'Equals':\n            return expression.values?.[0]\n              ? EQ(`data.metadata.labels[\"${expression.key}\"]`, expression.values?.[0])\n              : '';\n          case 'NotEquals':\n          case 'NotEqual':\n            return expression.values?.[0]\n              ? NEQ(`data.metadata.labels[\"${expression.key}\"]`, expression.values?.[0])\n              : '';\n          case 'GreaterThan':\n            return expression.values?.[0]\n              ? EXP(`data.metadata.labels[\"${expression.key}\"]`, expression.values?.[0], '>')\n              : '';\n          case 'LessThan':\n            return expression.values?.[0]\n              ? EXP(`data.metadata.labels[\"${expression.key}\"]`, expression.values?.[0], '<')\n              : '';\n          default:\n            throw new Error(\n              `Tekton results operator '${expression.operator}' conversion not implemented.`,\n            );\n        }\n      })\n      .filter((x) => x),\n  );\n\nexport const selectorToFilter = (selector) => {\n  let filter = '';\n  if (selector) {\n    const { matchLabels, matchExpressions, filterByName } = selector;\n    if (filterByName) {\n      filter = AND(filter, nameFilter(filterByName as string));\n    }\n    if (matchLabels || matchExpressions) {\n      if (matchLabels) {\n        filter = AND(filter, labelsToFilter(matchLabels));\n      }\n      if (matchExpressions) {\n        filter = AND(filter, expressionsToFilter(matchExpressions));\n      }\n    } else {\n      filter = labelsToFilter(selector as MatchLabels);\n    }\n  }\n  return filter;\n};\n\n// Devs should be careful to not cache a response that may not be complete.\n// In most situtations, caching is unnecessary.\n// Only cache a response that returns a single complete record as lists can change over time.\nlet CACHE: { [key: string]: [any[], RecordsList] } = {};\nexport const clearCache = () => {\n  CACHE = {};\n};\nconst InFlightStore: { [key: string]: boolean } = {};\n\nexport const getTRURLHost = async () => {\n  const tektonResult = await k8sGet(TektonResultModel, 'result');\n  const targetNamespace = tektonResult?.spec?.targetNamespace;\n  const serverPort = tektonResult?.spec?.server_port ?? '8080';\n  const tlsHostname = tektonResult?.spec?.tls_hostname_override;\n  let tektonResultsAPI;\n  if (tlsHostname) {\n    tektonResultsAPI = `${tlsHostname}:${serverPort}`;\n  } else if (targetNamespace && serverPort) {\n    tektonResultsAPI = `tekton-results-api-service.${targetNamespace}.svc.cluster.local:${serverPort}`;\n  } else {\n    tektonResultsAPI = `tekton-results-api-service.openshift-pipelines.svc.cluster.local:${serverPort}`;\n  }\n  return tektonResultsAPI;\n};\n\nexport const createTektonResultsUrl = async (\n  namespace: string,\n  dataType?: DataType,\n  filter?: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n): Promise<string> => {\n  const tektonResultsAPI = await getTRURLHost();\n  const namespaceToSearch = namespace && namespace !== ALL_NAMESPACES_KEY ? namespace : '-';\n  const url = `https://${tektonResultsAPI}/apis/results.tekton.dev/v1alpha2/parents/${namespaceToSearch}/results/-/records?${new URLSearchParams(\n    {\n      // default sort should always be by `create_time desc`\n      // order_by: 'create_time desc', not supported yet\n      page_size: `${Math.max(\n        MINIMUM_PAGE_SIZE,\n        Math.min(MAXIMUM_PAGE_SIZE, options?.limit >= 0 ? options.limit : options?.pageSize ?? 50),\n      )}`,\n      ...(nextPageToken ? { page_token: nextPageToken } : {}),\n      filter: AND(\n        EQ('data_type', dataType.toString()),\n        filter,\n        selectorToFilter(options?.selector),\n        options?.filter,\n      ),\n    },\n  ).toString()}`;\n  return url;\n};\n\nexport const getFilteredRecord = async <R extends K8sResourceCommon>(\n  namespace: string,\n  dataType: DataType,\n  filter?: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  cacheKey?: string,\n): Promise<[R[], RecordsList, boolean?]> => {\n  if (cacheKey) {\n    const result = CACHE[cacheKey];\n    if (result) {\n      return result;\n    }\n    if (InFlightStore[cacheKey]) {\n      return [\n        [],\n        {\n          nextPageToken: null,\n          records: [],\n        },\n        true,\n      ];\n    }\n  }\n  InFlightStore[cacheKey] = true;\n  const value = await (async (): Promise<[R[], RecordsList]> => {\n    try {\n      const url = await createTektonResultsUrl(namespace, dataType, filter, options, nextPageToken);\n      let list: RecordsList = await consoleProxyFetchJSON({\n        url,\n        method: 'GET',\n        allowInsecure: true,\n      });\n      if (options?.limit >= 0) {\n        list = {\n          nextPageToken: null,\n          records: list.records.slice(0, options.limit),\n        };\n      }\n      return [list.records.map((result) => decodeValueJson(result.data.value)), list];\n    } catch (e) {\n      // return an empty response if we get a 404 error\n      if (e?.code === 404) {\n        return [\n          [],\n          {\n            nextPageToken: null,\n            records: [],\n          },\n        ] as [R[], RecordsList];\n      }\n      throw e;\n    }\n  })();\n\n  if (cacheKey) {\n    InFlightStore[cacheKey] = false;\n    CACHE[cacheKey] = value;\n  }\n  return value;\n};\n\nconst getFilteredPipelineRuns = (\n  namespace: string,\n  filter: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  cacheKey?: string,\n  IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n) =>\n  getFilteredRecord<PipelineRunKind>(\n    namespace,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER\n      ? DataType.PipelineRunV1\n      : DataType.PipelineRunV1Beta1,\n    filter,\n    options,\n    nextPageToken,\n    cacheKey,\n  );\n\nconst getFilteredTaskRuns = (\n  namespace: string,\n  filter: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  cacheKey?: string,\n  IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n) =>\n  getFilteredRecord<TaskRunKind>(\n    namespace,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER ? DataType.TaskRunV1 : DataType.TaskRunV1Beta1,\n    filter,\n    options,\n    nextPageToken,\n    cacheKey,\n  );\n\nexport const getPipelineRuns = (\n  namespace: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  // supply a cacheKey only if the PipelineRun is complete and response will never change in the future\n  cacheKey?: string,\n  IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n) =>\n  getFilteredPipelineRuns(\n    namespace,\n    '',\n    options,\n    nextPageToken,\n    cacheKey,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n\nexport const getTaskRuns = (\n  namespace: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  // supply a cacheKey only if the TaskRun is complete and response will never change in the future\n  cacheKey?: string,\n  IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n) =>\n  getFilteredTaskRuns(\n    namespace,\n    '',\n    options,\n    nextPageToken,\n    cacheKey,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const consoleProxyFetchLog = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : response.body;\n  });\n};\n\nexport const getTaskRunLog = async (taskRunPath: string): Promise<string> => {\n  if (!taskRunPath) {\n    throw404();\n  }\n  const tektonResultsAPI = await getTRURLHost();\n  const url = `https://${tektonResultsAPI}/apis/results.tekton.dev/v1alpha2/parents/${taskRunPath.replace(\n    '/records/',\n    '/logs/',\n  )}`;\n  return consoleProxyFetchLog({ url, method: 'GET', allowInsecure: true });\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { PipelineModel, PipelineResourceModel } from '../../../models';\nimport {\n  PipelineKind,\n  PipelineRunKind,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  PipelineTask,\n  TektonParam,\n  TektonResource,\n} from '../../../types';\nimport { getSafeTaskResourceKind } from '../../../utils/pipeline-augment';\nimport PipelineResourceRef from '../../shared/common/PipelineResourceRef';\nimport { ResourceModelLink } from '../resource-overview/DynamicResourceLinkList';\n\nexport const removeEmptyDefaultFromPipelineParams = (parameters: TektonParam[]): TektonParam[] =>\n  _.map(\n    parameters,\n    (parameter) =>\n      _.omit(parameter, _.isEmpty(parameter.default) ? ['default'] : []) as TektonParam,\n  );\n\nexport const sanitizePipelineParams = (parameters: TektonParam[]): TektonParam[] => {\n  const pipelineWithNoEmptyDefaultParams = removeEmptyDefaultFromPipelineParams(parameters);\n  return pipelineWithNoEmptyDefaultParams.length > 0\n    ? pipelineWithNoEmptyDefaultParams.map((parameter) => {\n        if (parameter?.type === 'array' && typeof parameter?.default === 'string') {\n          return {\n            ...parameter,\n            default: parameter.default.split(',').map((param) => param.trim()),\n          };\n        }\n        return parameter;\n      })\n    : [];\n};\n\ntype PipelineTaskLinks = {\n  taskLinks: ResourceModelLink[];\n  finallyTaskLinks: ResourceModelLink[];\n};\n\nexport const getPipelineTaskLinks = (pipeline: PipelineKind): PipelineTaskLinks => {\n  const toResourceLinkData = (tasks: PipelineTask[]): ResourceModelLink[] => {\n    if (!tasks) return [];\n    return tasks?.map((task) =>\n      task.taskRef\n        ? task.taskRef.kind === 'ClusterTask' || task.taskRef.kind === 'Task'\n          ? {\n              resourceKind: getSafeTaskResourceKind(task.taskRef.kind),\n              name: task.taskRef.name,\n              qualifier: task.name,\n            }\n          : {\n              resourceKind: task.taskRef?.kind,\n              name: i18next.t('pipelines-plugin~Custom Task'),\n              qualifier: task.name,\n              disableLink: true,\n            }\n        : {\n            resourceKind: 'EmbeddedTask',\n            name: i18next.t('pipelines-plugin~Embedded task'),\n            qualifier: task.name,\n            disableLink: true,\n          },\n    );\n  };\n  return {\n    taskLinks: toResourceLinkData(pipeline.spec.tasks),\n    finallyTaskLinks: toResourceLinkData(pipeline.spec.finally),\n  };\n};\n\nconst isResourceRef = (resource: PipelineRunResource): resource is PipelineRunReferenceResource =>\n  !!(resource as PipelineRunReferenceResource).resourceRef;\n\nexport const getPipelineResourceLinks = (\n  definitionResources: TektonResource[] = [],\n  runResources: PipelineRunResource[],\n): ResourceModelLink[] => {\n  return runResources?.map(\n    (resource): ResourceModelLink => {\n      const definitionResource = definitionResources.find(({ name }) => name === resource.name);\n      const qualifier = definitionResource ? definitionResource.type : undefined;\n\n      if (isResourceRef(resource)) {\n        return {\n          resourceKind: PipelineResourceModel.kind,\n          name: resource.resourceRef.name,\n          qualifier,\n        };\n      }\n\n      return {\n        resourceKind: 'EmbeddedPipelineResource',\n        name: i18next.t('pipelines-plugin~Embedded PipelineResource'),\n        qualifier,\n      };\n    },\n  );\n};\n\nexport const convertBackingPipelineToPipelineResourceRefProps = (\n  pipelineRun: PipelineRunKind,\n): React.ComponentProps<typeof PipelineResourceRef> => {\n  if (pipelineRun.spec.pipelineRef) {\n    return {\n      resourceKind: PipelineModel.kind,\n      resourceName: pipelineRun.spec.pipelineRef.name,\n      namespace: pipelineRun.metadata.namespace,\n    };\n  }\n\n  return {\n    resourceKind: 'EmbeddedPipeLine', // intentional capitalization for EPL\n    resourceName: i18next.t('pipelines-plugin~Embedded Pipeline'),\n  };\n};\n","import * as React from 'react';\nimport differenceBy from 'lodash-es/differenceBy';\nimport uniqBy from 'lodash-es/uniqBy';\nimport { Selector } from '@console/dynamic-plugin-sdk/src';\nimport {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n} from '@console/dynamic-plugin-sdk/src/extensions/console-types';\nimport { useDeepCompareMemoize } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks/useDeepCompareMemoize';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks/useK8sWatchResource';\nimport {\n  PipelineRunGroupVersionKind,\n  PipelineRunKind,\n  TaskRunGroupVersionKind,\n  TaskRunKind,\n} from '../../../types';\nimport { EQ } from '../utils/tekton-results';\nimport { GetNextPage, useTRPipelineRuns, useTRTaskRuns } from './useTektonResults';\n\nconst useRuns = <Kind extends K8sResourceCommon>(\n  groupVersionKind: K8sGroupVersionKind,\n  namespace: string,\n  options?: {\n    selector?: Selector;\n    limit?: number;\n    name?: string;\n  },\n  cacheKey?: string,\n): [Kind[], boolean, unknown, GetNextPage] => {\n  const etcdRunsRef = React.useRef<Kind[]>([]);\n  const optionsMemo = useDeepCompareMemoize(options);\n  const isList = !optionsMemo?.name;\n  const limit = optionsMemo?.limit;\n  // do not include the limit when querying etcd because result order is not sorted\n  const watchOptions = React.useMemo(() => {\n    // reset cached runs as the options have changed\n    etcdRunsRef.current = [];\n    return {\n      groupVersionKind,\n      namespace: namespace || undefined,\n      isList,\n      selector: optionsMemo?.selector,\n      name: optionsMemo?.name,\n    };\n  }, [groupVersionKind, namespace, optionsMemo, isList]);\n\n  const [resources, loaded, error] = useK8sWatchResource(watchOptions);\n\n  // if a pipeline run was removed from etcd, we want to still include it in the return value without re-querying tekton-results\n  const etcdRuns = React.useMemo(() => {\n    if (!loaded || error) {\n      return [];\n    }\n    const resourcesArray = (isList ? resources : [resources]) as Kind[];\n\n    return resourcesArray;\n  }, [isList, resources, loaded, error]);\n\n  const runs = React.useMemo(() => {\n    if (!etcdRuns) {\n      return etcdRuns;\n    }\n    let value = etcdRunsRef.current\n      ? [\n          ...etcdRuns,\n          // identify the runs that were removed\n          ...differenceBy(etcdRunsRef.current, etcdRuns, (plr) => plr.metadata.name),\n        ]\n      : [...etcdRuns];\n    value.sort((a, b) => b.metadata.creationTimestamp.localeCompare(a.metadata.creationTimestamp));\n    if (limit && limit < value.length) {\n      value = value.slice(0, limit);\n    }\n    return value;\n  }, [etcdRuns, limit]);\n\n  // cache the last set to identify removed runs\n  etcdRunsRef.current = runs;\n\n  // Query tekton results if there's no limit or we received less items from etcd than the current limit\n  const queryTr =\n    !limit || (namespace && ((runs && loaded && optionsMemo.limit > runs.length) || error));\n\n  const trOptions: typeof optionsMemo = React.useMemo(() => {\n    if (optionsMemo?.name) {\n      const { name, ...rest } = optionsMemo;\n      return {\n        ...rest,\n        filter: EQ('data.metadata.name', name),\n      };\n    }\n    return optionsMemo;\n  }, [optionsMemo]);\n\n  // tekton-results includes items in etcd, therefore options must use the same limit\n  // these duplicates will later be de-duped\n  const [trResources, trLoaded, trError, trGetNextPage] = (groupVersionKind ===\n    PipelineRunGroupVersionKind\n    ? useTRPipelineRuns\n    : useTRTaskRuns)(queryTr ? namespace : null, trOptions, cacheKey) as [\n    [],\n    boolean,\n    unknown,\n    GetNextPage,\n  ];\n\n  return React.useMemo(() => {\n    const rResources =\n      runs && trResources\n        ? uniqBy([...runs, ...trResources], (r) => r.metadata.uid)\n        : runs || trResources;\n    return [\n      rResources,\n      !!rResources?.[0] || (loaded && trLoaded),\n      namespace\n        ? queryTr\n          ? isList\n            ? trError || error\n            : // when searching by name, return an error if we have no result\n              trError || (trLoaded && !trResources.length ? error : undefined)\n          : error\n        : undefined,\n      trGetNextPage,\n    ];\n  }, [\n    runs,\n    trResources,\n    trLoaded,\n    loaded,\n    namespace,\n    queryTr,\n    isList,\n    trError,\n    error,\n    trGetNextPage,\n  ]);\n};\n\nexport const usePipelineRuns = (\n  namespace: string,\n  options?: {\n    selector?: Selector;\n    limit?: number;\n  },\n): [PipelineRunKind[], boolean, unknown, GetNextPage] =>\n  useRuns<PipelineRunKind>(PipelineRunGroupVersionKind, namespace, options);\n\nexport const useTaskRuns = (\n  namespace: string,\n  options?: {\n    selector?: Selector;\n    limit?: number;\n  },\n  cacheKey?: string,\n): [TaskRunKind[], boolean, unknown, GetNextPage] =>\n  useRuns<TaskRunKind>(TaskRunGroupVersionKind, namespace, options, cacheKey);\n\nexport const usePipelineRun = (\n  namespace: string,\n  pipelineRunName: string,\n): [PipelineRunKind, boolean, string] => {\n  const result = (usePipelineRuns(\n    namespace,\n    React.useMemo(\n      () => ({\n        name: pipelineRunName,\n        limit: 1,\n      }),\n      [pipelineRunName],\n    ),\n  ) as unknown) as [PipelineRunKind[], boolean, string];\n\n  return React.useMemo(() => [result[0]?.[0], result[1], result[0]?.[0] ? undefined : result[2]], [\n    result,\n  ]);\n};\n\nexport const useTaskRun = (\n  namespace: string,\n  taskRunName: string,\n): [TaskRunKind, boolean, string] => {\n  const result = (useTaskRuns(\n    namespace,\n    React.useMemo(\n      () => ({\n        name: taskRunName,\n        limit: 1,\n      }),\n      [taskRunName],\n    ),\n  ) as unknown) as [TaskRunKind[], boolean, string];\n\n  return React.useMemo(() => [result[0]?.[0], result[1], result[0]?.[0] ? undefined : result[2]], [\n    result,\n  ]);\n};\n","import * as React from 'react';\nimport { uniqBy } from 'lodash';\nimport { K8sResourceCommon, Selector } from '@console/dynamic-plugin-sdk/src';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER } from '../../pipelines/const';\nimport { RepositoryLabels, RepositoryFields } from '../../repository/consts';\nimport {\n  getPipelineRuns,\n  TektonResultsOptions,\n  getTaskRuns,\n  RecordsList,\n  getTaskRunLog,\n} from '../utils/tekton-results';\n\nexport type GetNextPage = () => void | undefined;\n\nconst useTRRuns = <Kind extends K8sResourceCommon>(\n  getRuns: (\n    namespace: string,\n    options?: TektonResultsOptions,\n    nextPageToken?: string,\n    cacheKey?: string,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n  ) => Promise<[Kind[], RecordsList, boolean?]>,\n  namespace: string,\n  options?: TektonResultsOptions,\n  cacheKey?: string,\n): [Kind[], boolean, unknown, GetNextPage] => {\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n  const [nextPageToken, setNextPageToken] = React.useState<string>(null);\n  const [localCacheKey, setLocalCacheKey] = React.useState(cacheKey);\n\n  if (cacheKey !== localCacheKey) {\n    // force update local cache key\n    setLocalCacheKey(cacheKey);\n  }\n\n  const [result, setResult] = React.useState<[Kind[], boolean, unknown, GetNextPage]>([\n    [],\n    false,\n    undefined,\n    undefined,\n  ]);\n\n  // reset token if namespace or options change\n  React.useEffect(() => {\n    setNextPageToken(null);\n  }, [namespace, options, cacheKey]);\n\n  // eslint-disable-next-line consistent-return\n  React.useEffect(() => {\n    let disposed = false;\n    (async () => {\n      try {\n        const tkPipelineRuns = await getRuns(\n          namespace,\n          options,\n          nextPageToken,\n          localCacheKey,\n          IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n        );\n        if (!disposed) {\n          const token = tkPipelineRuns[1].nextPageToken;\n          const callInflight = !!tkPipelineRuns?.[2];\n          const loaded = !callInflight;\n          if (!callInflight) {\n            setResult((cur) => [\n              nextPageToken ? [...cur[0], ...tkPipelineRuns[0]] : tkPipelineRuns[0],\n              loaded,\n              undefined,\n              token\n                ? (() => {\n                    // ensure we can only call this once\n                    let executed = false;\n                    return () => {\n                      if (!disposed && !executed) {\n                        executed = true;\n                        // trigger the update\n                        setNextPageToken(token);\n                        return true;\n                      }\n                      return false;\n                    };\n                  })()\n                : undefined,\n            ]);\n          }\n        }\n      } catch (e) {\n        if (!disposed) {\n          if (nextPageToken) {\n            setResult((cur) => [cur[0], cur[1], e, undefined]);\n          } else {\n            setResult([[], false, e, undefined]);\n          }\n        }\n      }\n    })();\n    return () => {\n      disposed = true;\n    };\n  }, [\n    namespace,\n    options,\n    nextPageToken,\n    localCacheKey,\n    getRuns,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  ]);\n  return result;\n};\n\nexport const useTRPipelineRuns = (\n  namespace: string,\n  options?: TektonResultsOptions,\n  cacheKey?: string,\n): [PipelineRunKind[], boolean, unknown, GetNextPage] =>\n  useTRRuns<PipelineRunKind>(getPipelineRuns, namespace, options, cacheKey);\n\nexport const useTRTaskRuns = (\n  namespace: string,\n  options?: TektonResultsOptions,\n  cacheKey?: string,\n): [TaskRunKind[], boolean, unknown, GetNextPage] =>\n  useTRRuns<TaskRunKind>(getTaskRuns, namespace, options, cacheKey);\n\nexport const useGetPipelineRuns = (ns: string, options?: { name: string; kind: string }) => {\n  let selector: Selector;\n\n  if (options?.kind === 'Pipeline') {\n    selector = { matchLabels: { 'tekton.dev/pipeline': options?.name } };\n  }\n  if (options?.kind === 'Repository') {\n    selector = {\n      matchLabels: { [RepositoryLabels[RepositoryFields.REPOSITORY]]: options?.name },\n    };\n  }\n  const [resultPlrs, resultPlrsLoaded, resultPlrsLoadError, getNextPage] = useTRPipelineRuns(\n    ns,\n    options && {\n      selector,\n    },\n  );\n  const [k8sPlrs, k8sPlrsLoaded, k8sPlrsLoadError] = useK8sWatchResource<PipelineRunKind[]>({\n    isList: true,\n    kind: referenceForModel(PipelineRunModel),\n    namespace: ns,\n    ...(options ? { selector } : {}),\n  });\n  const mergedPlrs =\n    (resultPlrsLoaded || k8sPlrsLoaded) && !k8sPlrsLoadError\n      ? uniqBy([...k8sPlrs, ...resultPlrs], (r) => r.metadata.uid)\n      : [];\n  return [\n    mergedPlrs,\n    resultPlrsLoaded || k8sPlrsLoaded,\n    resultPlrsLoadError || k8sPlrsLoadError,\n    getNextPage,\n  ];\n};\n\nexport const useTRTaskRunLog = (\n  namespace: string,\n  taskRunName: string,\n  taskRunPath: string,\n): [string, boolean, unknown] => {\n  const [result, setResult] = React.useState<[string, boolean, unknown]>([null, false, undefined]);\n  React.useEffect(() => {\n    let disposed = false;\n    if (namespace && taskRunName) {\n      (async () => {\n        try {\n          const log = await getTaskRunLog(taskRunPath);\n          if (!disposed) {\n            setResult([log, true, undefined]);\n          }\n        } catch (e) {\n          if (!disposed) {\n            setResult([null, false, e]);\n          }\n        }\n      })();\n    }\n    return () => {\n      disposed = true;\n    };\n  }, [namespace, taskRunName, taskRunPath]);\n  return result;\n};\n","import * as React from 'react';\nimport { CombinedErrorDetails } from './log-snippet-types';\nimport LogSnippetFromPod from './LogSnippetFromPod';\n\ntype LogSnippetBlockProps = {\n  children: (logSnippet: string) => React.ReactNode;\n  logDetails: CombinedErrorDetails;\n  namespace: string;\n};\n\nconst LogSnippetBlock: React.FC<LogSnippetBlockProps> = ({ children, logDetails, namespace }) => {\n  return 'podName' in logDetails ? (\n    <LogSnippetFromPod\n      containerName={logDetails.containerName}\n      namespace={namespace}\n      podName={logDetails.podName}\n      title={logDetails.title}\n    >\n      {children}\n    </LogSnippetFromPod>\n  ) : (\n    <>{children(logDetails.staticMessage)}</>\n  );\n};\n\nexport default LogSnippetBlock;\n","import * as React from 'react';\nimport { Formik, FormikHelpers } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { createModalLauncher, ModalComponentProps } from '@console/internal/components/factory';\nimport { PipelineKind } from '../../../../types';\nimport ModalStructure from '../common/ModalStructure';\nimport { removeTrigger } from './remove-utils';\nimport RemoveTriggerForm from './RemoveTriggerForm';\nimport { RemoveTriggerFormValues } from './types';\nimport { removeTriggerSchema } from './validation-utils';\n\ntype RemoveTriggerModalProps = ModalComponentProps & {\n  pipeline: PipelineKind;\n};\n\nconst RemoveTriggerModal: React.FC<RemoveTriggerModalProps> = ({ pipeline, close }) => {\n  const { t } = useTranslation();\n  const initialValues: RemoveTriggerFormValues = {\n    selectedTrigger: null,\n  };\n\n  const handleSubmit = (\n    values: RemoveTriggerFormValues,\n    actions: FormikHelpers<RemoveTriggerFormValues>,\n  ) => {\n    return removeTrigger(values, pipeline)\n      .then(() => {\n        close();\n      })\n      .catch((e) => {\n        actions.setStatus({ submitError: e.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={removeTriggerSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          {...formikProps}\n          submitBtnText={t('pipelines-plugin~Remove')}\n          submitDanger\n          title={t('pipelines-plugin~Remove Trigger')}\n          close={close}\n        >\n          <RemoveTriggerForm pipeline={pipeline} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(RemoveTriggerModal);\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { errorModal } from '@console/internal/components/modals';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { useUserAnnotationForManualStart } from '../../../pipelineruns/triggered-by';\nimport { usePipelinePVC } from '../../hooks';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { startPipelineSchema } from '../common/validation-utils';\nimport StartPipelineForm from './StartPipelineForm';\nimport { submitStartPipeline } from './submit-utils';\nimport { StartPipelineFormValues } from './types';\n\nexport interface StartPipelineModalProps {\n  pipeline: PipelineKind;\n  onSubmit?: (pipelineRun: PipelineRunKind) => void;\n}\nconst StartPipelineModal: React.FC<StartPipelineModalProps & ModalComponentProps> = ({\n  pipeline,\n  close,\n  onSubmit,\n}) => {\n  const { t } = useTranslation();\n  const userStartedAnnotation = useUserAnnotationForManualStart();\n  const [pipelinePVC, pipelinePVCLoaded] = usePipelinePVC(\n    pipeline.metadata?.name,\n    pipeline.metadata?.namespace,\n  );\n\n  if (!pipelinePVCLoaded) {\n    return <LoadingBox />;\n  }\n\n  const initialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline, false, pipelinePVC?.metadata?.name),\n    secretOpen: false,\n  };\n\n  const handleSubmit = (values: StartPipelineFormValues, actions) => {\n    return submitStartPipeline(values, pipeline, null, userStartedAnnotation)\n      .then((res) => {\n        onSubmit && onSubmit(res);\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n        errorModal({ error: err.message });\n        close();\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={startPipelineSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          submitBtnText={t('pipelines-plugin~Start')}\n          title={t('pipelines-plugin~Start Pipeline')}\n          close={close}\n          {...formikProps}\n        >\n          <StartPipelineForm {...formikProps} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(StartPipelineModal);\n","import * as React from 'react';\nimport { KebabAction } from '@console/internal/components/utils';\nimport { useMenuActionsWithUserAnnotation } from './hooks';\nimport { ResourceKebab } from './ResourceKebab';\n\nconst ResourceKebabWithUserLabel: React.FC<React.ComponentProps<typeof ResourceKebab>> = ({\n  actions,\n  ...otherProps\n}) => {\n  const augmentedMenuActions: KebabAction[] = useMenuActionsWithUserAnnotation(actions);\n\n  return <ResourceKebab {...otherProps} actions={augmentedMenuActions} />;\n};\n\nexport default ResourceKebabWithUserLabel;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FieldArray, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { InputField, TextColumnField } from '@console/shared';\nimport { paramIsRequired } from '../../../../utils/common';\nimport AutoCompletePopover from '../../../shared/common/auto-complete/AutoCompletePopover';\nimport { CommonPipelineModalFormikValues, ModalParameter } from './types';\n\ntype ParametersSectionProps = {\n  autoCompleteValues?: string[];\n};\n\nconst PipelineParameterSection: React.FC<ParametersSectionProps> = ({ autoCompleteValues }) => {\n  const { t } = useTranslation();\n\n  const {\n    setFieldValue,\n    values: { parameters },\n  } = useFormikContext<CommonPipelineModalFormikValues>();\n\n  return (\n    <FieldArray\n      name=\"parameters\"\n      key=\"parameters-row\"\n      render={() =>\n        parameters.length > 0 && (\n          <FormSection title={t('pipelines-plugin~Parameters')} fullWidth>\n            {parameters.map((parameter: ModalParameter, index) => {\n              const name = `parameters.${index}.value`;\n              const isRequired = paramIsRequired(parameter);\n\n              const input = (ref?) => (\n                <InputField\n                  ref={ref}\n                  name={name}\n                  type={TextInputTypes.text}\n                  label={parameter.name}\n                  helpText={parameter.description}\n                  required={isRequired}\n                  autoComplete=\"off\"\n                />\n              );\n              return parameter.type === 'array' ? (\n                <TextColumnField\n                  name={name}\n                  label={parameter.name}\n                  helpText={parameter.description}\n                  required={isRequired}\n                  addLabel={`Add ${parameter.name}`}\n                  data-test={`${parameter.name}-text-column-field`}\n                >\n                  {({ name: arrayName, ...additionalProps }) =>\n                    autoCompleteValues ? (\n                      <AutoCompletePopover\n                        autoCompleteValues={autoCompleteValues}\n                        onAutoComplete={(value: string) => setFieldValue(name, value)}\n                      >\n                        {(callbackRef) => (\n                          <InputField\n                            ref={callbackRef}\n                            name={arrayName}\n                            {...additionalProps}\n                            autoComplete=\"off\"\n                          />\n                        )}\n                      </AutoCompletePopover>\n                    ) : (\n                      <InputField name={arrayName} {...additionalProps} autoComplete=\"off\" />\n                    )\n                  }\n                </TextColumnField>\n              ) : (\n                <React.Fragment key={parameter.name}>\n                  {autoCompleteValues ? (\n                    <AutoCompletePopover\n                      autoCompleteValues={autoCompleteValues}\n                      onAutoComplete={(value: string) => setFieldValue(name, value)}\n                    >\n                      {(callbackRef) => input(callbackRef)}\n                    </AutoCompletePopover>\n                  ) : (\n                    input()\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </FormSection>\n        )\n      }\n    />\n  );\n};\n\nexport default PipelineParameterSection;\n","import * as _ from 'lodash';\nimport { PipelineTask, TektonParam, TektonWorkspace } from '../../../../types';\nimport { PipelineBuilderTaskResources } from '../../../pipelines/pipeline-builder/types';\nimport { findTask } from '../../../pipelines/pipeline-builder/utils';\n\nexport const paramToAutoComplete = (param: TektonParam): string => `params.${param.name}`;\n\nexport const workspaceToAutoComplete = (workspace: TektonWorkspace): string =>\n  `workspaces.${workspace.name}.bound`;\n\nexport const taskToStatus = (task: PipelineTask): string => `tasks.${task.name}.status`;\n\nexport const taskToResult = (resources: PipelineBuilderTaskResources) => (\n  task: PipelineTask,\n): string[] | null => {\n  const taskResource = findTask(resources, task);\n  if (!taskResource?.spec.results) return null;\n\n  const {\n    spec: { results },\n  } = taskResource;\n  return results.map((result) => `tasks.${task.name}.results.${result.name}`);\n};\n\nexport const findTasksThatRunAfter = (tasks: PipelineTask[], taskName: string): string[] => {\n  const runAfterTasks = tasks.filter((task) => task.runAfter?.includes(taskName));\n\n  let runAfterNames = runAfterTasks.map((task) => task.name);\n  if (runAfterTasks.some((task) => task.runAfter)) {\n    runAfterNames = [\n      ...runAfterNames,\n      ...runAfterTasks.map((task) => findTasksThatRunAfter(tasks, task.name)).flat(),\n    ];\n  }\n\n  return _.uniq([taskName, ...runAfterNames]);\n};\n\nexport const computeAvailableResultACs = (\n  tasks: PipelineTask[],\n  taskResources: PipelineBuilderTaskResources,\n  taskIndex: number,\n): string[] => {\n  const thisTask: PipelineTask = tasks[taskIndex];\n  const invalidTasks: string[] = thisTask ? findTasksThatRunAfter(tasks, thisTask.name) : [];\n  return tasks\n    .filter((task: PipelineTask) => !invalidTasks.includes(task.name))\n    .map(taskToResult(taskResources))\n    .flat()\n    .filter((v) => !!v);\n};\n\nexport type CursorPosition = [number, number];\nexport const insertIntoValue = (value: string, position: CursorPosition, insertText = '') => {\n  const [startPos, endPos] = position;\n  return `${value.substring(0, startPos)}${insertText}${value.substring(endPos)}`;\n};\n","import * as React from 'react';\nimport { FieldArray, useField } from 'formik';\nimport { capitalize } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport PipelineResourceDropdownField from './PipelineResourceDropdownField';\nimport { PipelineModalFormResource } from './types';\n\ntype ResourceSectionType = {\n  formikIndex: number;\n  resource: PipelineModalFormResource;\n};\ntype ResourceSection = {\n  cluster?: ResourceSectionType[];\n  git?: ResourceSectionType[];\n  image?: ResourceSectionType[];\n  storage?: ResourceSectionType[];\n};\n\nconst reduceToSections = (\n  acc: ResourceSection,\n  resource: PipelineModalFormResource,\n  formikIndex: number,\n) => {\n  const resourceType = resource.data.type;\n\n  if (!resourceType) {\n    return acc;\n  }\n\n  return {\n    ...acc,\n    [resourceType]: [...(acc[resourceType] || []), { formikIndex, resource }],\n  };\n};\n\nconst PipelineResourceSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [{ value: resources }] = useField<PipelineModalFormResource[]>('resources');\n\n  const sections: ResourceSection = resources.reduce(reduceToSections, {} as ResourceSection);\n  const types = Object.keys(sections);\n\n  return (\n    <>\n      {types.map((type) => (\n        <FieldArray\n          name={type}\n          key={type}\n          render={() => {\n            const section = sections[type];\n\n            return (\n              <FormSection\n                title={t('pipelines-plugin~{{type}} resources', { type: capitalize(type) })}\n                fullWidth\n              >\n                {section.map((sectionData: ResourceSectionType) => {\n                  const { formikIndex, resource } = sectionData;\n\n                  return (\n                    <PipelineResourceDropdownField\n                      key={resource.name}\n                      name={`resources.${formikIndex}`}\n                      filterType={type}\n                      label={resource.name}\n                    />\n                  );\n                })}\n              </FormSection>\n            );\n          }}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PipelineResourceSection;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { SecretModel, ConfigMapModel } from '@console/internal/models';\nimport { DropdownField } from '@console/shared';\nimport { VolumeTypes } from '../../const';\nimport MultipleResourceKeySelector from './MultipleResourceKeySelector';\nimport PVCDropdown from './PVCDropdown';\nimport { PipelineModalFormWorkspace } from './types';\nimport VolumeClaimTemplateForm from './VolumeClaimTemplateForm';\nimport './PipelineWorkspacesSection.scss';\n\nconst getVolumeTypeFields = (volumeType: VolumeTypes, index: number) => {\n  switch (volumeType) {\n    case VolumeTypes.Secret: {\n      return (\n        <MultipleResourceKeySelector\n          resourceNameField={`workspaces.${index}.data.secret.secretName`}\n          resourceKeysField={`workspaces.${index}.data.secret.items`}\n          label={i18next.t('pipelines-plugin~Secret')}\n          resourceModel={SecretModel}\n          addString={i18next.t('pipelines-plugin~Add item')}\n          required\n        />\n      );\n    }\n    case VolumeTypes.ConfigMap: {\n      return (\n        <MultipleResourceKeySelector\n          resourceNameField={`workspaces.${index}.data.configMap.name`}\n          resourceKeysField={`workspaces.${index}.data.configMap.items`}\n          label={i18next.t('pipelines-plugin~Config Map')}\n          resourceModel={ConfigMapModel}\n          addString={i18next.t('pipelines-plugin~Add item')}\n          required\n        />\n      );\n    }\n    case VolumeTypes.EmptyDirectory: {\n      return (\n        <div className=\"odc-PipelineWorkspacesSection__emptydir\">\n          <Alert\n            isInline\n            variant=\"info\"\n            title={i18next.t(\n              \"pipelines-plugin~Empty Directory doesn't support shared data between tasks.\",\n            )}\n          />\n        </div>\n      );\n    }\n    case VolumeTypes.VolumeClaimTemplate: {\n      return (\n        <VolumeClaimTemplateForm\n          name={`workspaces.${index}.data.volumeClaimTemplate`}\n          initialSizeValue=\"1\"\n          initialSizeUnit=\"Gi\"\n        />\n      );\n    }\n    case VolumeTypes.PVC: {\n      return <PVCDropdown name={`workspaces.${index}.data.persistentVolumeClaim.claimName`} />;\n    }\n    default:\n      return null;\n  }\n};\n\nconst PipelineWorkspacesSection: React.FC = () => {\n  const { t } = useTranslation();\n  const { setFieldValue } = useFormikContext<FormikValues>();\n  const [{ value: workspaces }] = useField<PipelineModalFormWorkspace[]>('workspaces');\n\n  const volumeTypeOptions: { [type in VolumeTypes]: string } = {\n    [VolumeTypes.NoWorkspace]: t('pipelines-plugin~No workspace'),\n    [VolumeTypes.EmptyDirectory]: t('pipelines-plugin~Empty Directory'),\n    [VolumeTypes.ConfigMap]: t('pipelines-plugin~Config Map'),\n    [VolumeTypes.Secret]: t('pipelines-plugin~Secret'),\n    [VolumeTypes.PVC]: t('pipelines-plugin~PersistentVolumeClaim'),\n    [VolumeTypes.VolumeClaimTemplate]: t('pipelines-plugin~VolumeClaimTemplate'),\n  };\n\n  return (\n    workspaces.length > 0 && (\n      <FormSection title={t('pipelines-plugin~Workspaces')} fullWidth>\n        {workspaces.map((workspace, index) => {\n          return (\n            <div className=\"form-group\" key={workspace.name}>\n              <DropdownField\n                name={`workspaces.${index}.type`}\n                label={workspace.name}\n                items={\n                  workspace.optional\n                    ? volumeTypeOptions\n                    : _.omit(volumeTypeOptions, VolumeTypes.NoWorkspace)\n                }\n                onChange={(type) =>\n                  setFieldValue(\n                    `workspaces.${index}.data`,\n                    type === VolumeTypes.EmptyDirectory ? { emptyDir: {} } : {},\n                    // Validation is automatically done by DropdownField useFormikValidationFix\n                    false,\n                  )\n                }\n                fullWidth\n                required={!workspace.optional}\n                helpText={workspace.description}\n              />\n              {getVolumeTypeFields(workspace.type, index)}\n            </div>\n          );\n        })}\n      </FormSection>\n    )\n  );\n};\n\nexport default PipelineWorkspacesSection;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { PipelineKind } from '../../../../types';\nimport { usePipelinePVC } from '../../hooks';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { addTriggerSchema } from '../common/validation-utils';\nimport AddTriggerForm from './AddTriggerForm';\nimport { TRIGGER_BINDING_EMPTY } from './const';\nimport { submitTrigger } from './submit-utils';\nimport { AddTriggerFormValues } from './types';\n\ntype AddTriggerModalProps = ModalComponentProps & {\n  pipeline: PipelineKind;\n};\n\nconst AddTriggerModal: React.FC<AddTriggerModalProps> = ({ pipeline, close }) => {\n  const { t } = useTranslation();\n  const [pipelinePVC, pipelinePVCLoaded] = usePipelinePVC(\n    pipeline.metadata?.name,\n    pipeline.metadata?.namespace,\n  );\n\n  if (!pipelinePVCLoaded) {\n    return <LoadingBox />;\n  }\n  const initialValues: AddTriggerFormValues = {\n    ...convertPipelineToModalData(pipeline, true, pipelinePVC?.metadata?.name),\n    triggerBinding: {\n      name: TRIGGER_BINDING_EMPTY,\n      resource: null,\n    },\n  };\n\n  const handleSubmit = (values: AddTriggerFormValues, actions) => {\n    return submitTrigger(pipeline, values)\n      .then(() => {\n        close();\n      })\n      .catch((error) => {\n        actions.setStatus({\n          submitError: error?.message || t('pipelines-plugin~There was an unknown error'),\n        });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={addTriggerSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          submitBtnText={t('pipelines-plugin~Add')}\n          title={t('pipelines-plugin~Add Trigger')}\n          close={close}\n          {...formikProps}\n        >\n          <AddTriggerForm {...formikProps} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(AddTriggerModal);\n","import * as React from 'react';\nimport { TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { RowFilter } from '@console/internal/components/filter-toolbar';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../models';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatusFilter,\n} from '../../../utils/pipeline-filter-reducer';\nimport { ListFilterId, ListFilterLabels } from '../../../utils/pipeline-utils';\nimport { ListPage } from '../../ListPage';\nimport { usePipelineRuns } from '../../pipelineruns/hooks/usePipelineRuns';\nimport PipelineRunsList from '../../pipelineruns/list-page/PipelineRunList';\nimport { PipelineDetailsTabProps } from './types';\n\nexport const runFilters = (t: TFunction): RowFilter[] => {\n  return [\n    {\n      filterGroupName: t('pipelines-plugin~Status'),\n      type: 'pipelinerun-status',\n      reducer: pipelineRunFilterReducer,\n      items: [\n        { id: ListFilterId.Succeeded, title: ListFilterLabels[ListFilterId.Succeeded] },\n        { id: ListFilterId.Running, title: ListFilterLabels[ListFilterId.Running] },\n        { id: ListFilterId.Failed, title: ListFilterLabels[ListFilterId.Failed] },\n        { id: ListFilterId.Cancelled, title: ListFilterLabels[ListFilterId.Cancelled] },\n      ],\n      filter: pipelineRunStatusFilter,\n    },\n  ];\n};\n\nconst PipelineRuns: React.FC<PipelineDetailsTabProps> = (props) => {\n  const { t } = useTranslation();\n  const { obj } = props;\n  const selector = React.useMemo(() => {\n    return {\n      matchLabels: { 'tekton.dev/pipeline': obj.metadata.name },\n    };\n  }, [obj.metadata.name]);\n  const [pipelineRuns, pipelineRunsLoaded, pipelineRunsLoadError] = usePipelineRuns(\n    obj.metadata.namespace,\n    {\n      selector,\n    },\n  );\n  const resources = React.useMemo(\n    () => ({\n      [referenceForModel(PipelineRunModel)]: {\n        data: pipelineRuns,\n        kind: referenceForModel(PipelineRunModel),\n        loadError: pipelineRunsLoadError,\n        loaded: pipelineRunsLoaded,\n      },\n    }),\n    [pipelineRunsLoadError, pipelineRunsLoaded, pipelineRuns],\n  );\n  return (\n    <ListPage\n      showTitle={false}\n      canCreate={false}\n      kind={referenceForModel(PipelineRunModel)}\n      namespace={obj.metadata.namespace}\n      selector={{\n        matchLabels: { 'tekton.dev/pipeline': obj.metadata.name },\n      }}\n      ListComponent={PipelineRunsList}\n      rowFilters={runFilters(t)}\n      data={resources}\n    />\n  );\n};\n\nexport default PipelineRuns;\n","import i18next from 'i18next';\nimport {\n  Condition,\n  PipelineRunKind,\n  PLRTaskRunData,\n  PLRTaskRunStep,\n  TaskRunKind,\n} from '../../../types';\nimport { pipelineRunStatus } from '../../../utils/pipeline-filter-reducer';\nimport { CombinedErrorDetails } from './log-snippet-types';\nimport { taskRunSnippetMessage } from './log-snippet-utils';\n\nexport const getPLRLogSnippet = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): CombinedErrorDetails => {\n  if (!pipelineRun?.status) {\n    // Lack information to pull from the Pipeline Run\n    return null;\n  }\n  if (pipelineRunStatus(pipelineRun) !== 'Failed') {\n    // Not in a failed state, no need to get the log snippet\n    return null;\n  }\n\n  const succeededCondition = pipelineRun.status.conditions?.find(\n    (condition: Condition) => condition.type === 'Succeeded',\n  );\n\n  if (succeededCondition?.status !== 'False') {\n    // Not in error / lack information\n    return null;\n  }\n\n  const tRuns: PLRTaskRunData[] = Object.values(taskRuns || pipelineRun.status.taskRuns || {});\n  const failedTaskRuns = tRuns.filter((taskRun) =>\n    taskRun?.status?.conditions?.find(\n      (condition) => condition.type === 'Succeeded' && condition.status === 'False',\n    ),\n  );\n  const isKnownReason = (reason: string): boolean => {\n    // known reasons https://tekton.dev/vault/pipelines-v0.21.0/pipelineruns/#monitoring-execution-status\n    return ['StoppedRunFinally', 'CancelledRunFinally', 'PipelineRunTimeout'].includes(reason);\n  };\n\n  // We're intentionally looking at the first failure because we have to start somewhere - they have the YAML still\n  const failedTaskRun = failedTaskRuns[0];\n\n  if (!failedTaskRun || isKnownReason(succeededCondition?.reason)) {\n    // No specific task run failure information, just print pipeline run status\n    return {\n      staticMessage:\n        succeededCondition.message || i18next.t('pipelines-plugin~Unknown failure condition'),\n      title: i18next.t('pipelines-plugin~Failure - check logs for details.'),\n    };\n  }\n\n  const containerName = failedTaskRun.status.steps?.find(\n    (step: PLRTaskRunStep) => step.terminated?.exitCode !== 0,\n  )?.container;\n\n  return taskRunSnippetMessage(failedTaskRun.pipelineTaskName, failedTaskRun.status, containerName);\n};\n","export { default as removeTriggerModal } from './triggers/RemoveTriggerModal';\nexport { default as startPipelineModal } from './start-pipeline/StartPipelineModal';\nexport { default as addTriggerModal } from './triggers/AddTriggerModal';\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Kebab, ResourceKebabProps } from '@console/internal/components/utils';\nimport { connectToModel } from '@console/internal/kinds';\n\nexport const ResourceKebab = connectToModel((props: ResourceKebabProps) => {\n  const { t } = useTranslation();\n  const { actions, kindObj, resource, isDisabled, customData, terminatingTooltip } = props;\n  if (!kindObj) {\n    return null;\n  }\n  const options = _.reject(\n    actions.map((a) => a(kindObj, resource, null, customData)),\n    'hidden',\n  );\n  return (\n    <Kebab\n      options={options}\n      key={resource.metadata.uid}\n      isDisabled={isDisabled ?? options.length === 0}\n      terminatingTooltip={\n        _.has(resource.metadata, 'deletionTimestamp')\n          ? terminatingTooltip || t('pipelines-plugin~Resource is being deleted.')\n          : ''\n      }\n    />\n  );\n});\n","import * as React from 'react';\nimport { FocusTrap, Menu, MenuList, MenuItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { WithScrollContainer } from '@console/internal/components/utils';\nimport Popper from '@console/shared/src/components/popper/Popper';\nimport useAutoComplete from './useAutoComplete';\n\ntype AutoCompletePopoverProps = {\n  autoCompleteValues: string[];\n  children: (contentRefCallback: (ref: HTMLElement) => void) => React.ReactNode;\n  onAutoComplete: (newValue: string) => void;\n};\n\nconst AutoCompletePopover: React.FC<AutoCompletePopoverProps> = ({\n  autoCompleteValues,\n  children,\n  onAutoComplete,\n}) => {\n  const { t } = useTranslation();\n\n  const {\n    contentRefCallback,\n    focusTrapProps,\n    insertAutoComplete,\n    popperProps,\n    menuWidth,\n    options,\n  } = useAutoComplete(autoCompleteValues, onAutoComplete);\n\n  return (\n    <>\n      {children(contentRefCallback)}\n      <WithScrollContainer>\n        {(scrollContainer) => (\n          <Popper\n            {...popperProps}\n            placement=\"bottom-start\"\n            closeOnEsc\n            closeOnOutsideClick\n            container={scrollContainer}\n            popperOptions={{\n              modifiers: {\n                hide: {\n                  enabled: false,\n                },\n                preventOverflow: {\n                  enabled: false,\n                },\n                flip: {\n                  enabled: false,\n                },\n              },\n            }}\n          >\n            <FocusTrap {...focusTrapProps}>\n              <Menu\n                style={{ maxHeight: 200, overflow: 'auto', width: menuWidth }}\n                onSelect={(event, itemId: number) => {\n                  const text = options[itemId];\n                  if (text) {\n                    insertAutoComplete(text);\n                  }\n                }}\n              >\n                <MenuList>\n                  {options.length === 0 ? (\n                    // There is a tab-index problem with the Menus from PF. If the first option is removed, it breaks tab indexes\n                    // Need key 0 because of PF bug\n                    <MenuItem key={0} itemId={-1} isDisabled>\n                      {t('pipelines-plugin~No options matching your criteria')}\n                    </MenuItem>\n                  ) : (\n                    options.map((value, idx) => (\n                      // Using index-based keys to get around PF bug, see above\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={idx} itemId={idx}>\n                        {value}\n                      </MenuItem>\n                    ))\n                  )}\n                </MenuList>\n              </Menu>\n            </FocusTrap>\n          </Popper>\n        )}\n      </WithScrollContainer>\n    </>\n  );\n};\n\nexport default AutoCompletePopover;\n","import { get } from 'lodash';\nimport { TaskKind, TektonParam, TektonResource, TektonResourceGroup } from '../../types';\n\nexport type TaskKindAlpha = TaskKind & {\n  spec: {\n    inputs?: {\n      params?: TektonParam[];\n      resources?: TektonResource[];\n    };\n    outputs?: {\n      resources?: TektonResource[];\n    };\n  };\n};\n\nenum PATHS {\n  alphaInputResources = 'spec.inputs.resources',\n  alphaOutputResources = 'spec.outputs.resources',\n  alphaParameters = 'spec.inputs.params',\n\n  betaInputResources = 'spec.resources.inputs',\n  betaOutputResources = 'spec.resources.outputs',\n  betaParameters = 'spec.params',\n}\n\nexport const getTaskResources = (\n  taskResource: TaskKind | TaskKindAlpha,\n): TektonResourceGroup<TektonResource> => {\n  const inputs =\n    get(taskResource, PATHS.alphaInputResources) || get(taskResource, PATHS.betaInputResources);\n  const outputs =\n    get(taskResource, PATHS.alphaOutputResources) || get(taskResource, PATHS.betaOutputResources);\n\n  if (inputs || outputs) {\n    return {\n      inputs,\n      outputs,\n    };\n  }\n\n  return {};\n};\n\nexport const getTaskParameters = (taskResource: TaskKind | TaskKindAlpha): TektonParam[] => {\n  return get(taskResource, PATHS.alphaParameters) || get(taskResource, PATHS.betaParameters) || [];\n};\n","import { useFormikContext } from 'formik';\nimport { AddTriggerFormValues } from '../../../pipelines/modals/triggers/types';\nimport {\n  PipelineBuilderFormikValues,\n  SelectedBuilderTask,\n} from '../../../pipelines/pipeline-builder/types';\nimport {\n  computeAvailableResultACs,\n  paramToAutoComplete,\n  taskToStatus,\n  workspaceToAutoComplete,\n} from './autoCompleteUtils';\n\nexport const useBuilderParams = (selectedData: SelectedBuilderTask): string[] => {\n  const {\n    values: {\n      formData: { params, tasks, workspaces },\n      taskResources,\n    },\n  } = useFormikContext<PipelineBuilderFormikValues>();\n  const { taskIndex, isFinallyTask } = selectedData || {};\n\n  const paramACs: string[] = params.map(paramToAutoComplete);\n  const workspaceACs: string[] = workspaces.map(workspaceToAutoComplete);\n\n  const contextualACs: string[] = [\n    'context.pipelineRun.name',\n    'context.pipelineRun.namespace',\n    'context.pipelineRun.uid',\n    'context.pipeline.name',\n  ];\n\n  let finallyStatusACs: string[] = [];\n  if (isFinallyTask) {\n    finallyStatusACs = tasks.map(taskToStatus);\n  }\n\n  const taskResultACs: string[] = computeAvailableResultACs(tasks, taskResources, taskIndex);\n\n  return [...paramACs, ...workspaceACs, ...contextualACs, ...finallyStatusACs, ...taskResultACs];\n};\n\nexport const useAddTriggerParams = (): string[] => {\n  const {\n    values: { triggerBinding },\n  } = useFormikContext<AddTriggerFormValues>();\n\n  const bindingParamACs: string[] =\n    triggerBinding?.resource?.spec?.params?.map((param) => `tt.${paramToAutoComplete(param)}`) ||\n    [];\n\n  const staticACs: string[] = ['uid'];\n\n  return [...bindingParamACs, ...staticACs];\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Button, TextInput, TextInputProps } from '@patternfly/react-core';\nimport * as classNames from 'classnames';\n// eslint-disable-next-line no-restricted-imports\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useDispatch } from 'react-redux';\nimport { Link, useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { ColumnLayout } from '@console/dynamic-plugin-sdk';\nimport { filterList } from '@console/dynamic-plugin-sdk/src/app/k8s/actions/k8s';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { FilterToolbar, RowFilter } from '@console/internal/components/filter-toolbar';\nimport { storagePrefix } from '@console/internal/components/row-filter';\nimport {\n  Dropdown,\n  FirehoseResource,\n  FirehoseResourcesResult,\n  FirehoseResultObject,\n  inject,\n  kindObj,\n  makeQuery,\n  makeReduxID,\n  PageHeading,\n  RequireCreatePermission,\n} from '@console/internal/components/utils';\nimport {\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n  Selector,\n} from '@console/internal/module/k8s';\nimport { useDocumentListener, KEYBOARD_SHORTCUTS, useDeepCompareMemoize } from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport ListPropProvider from './ListPropProvider';\n\ntype CreateProps = {\n  action?: string;\n  createLink?: (item: string) => string;\n  to?: string;\n  items?: {\n    [key: string]: string;\n  };\n  onClick?: () => void;\n  isDisabled?: boolean;\n  id?: string;\n};\n\ntype TextFilterProps = Omit<TextInputProps, 'type' | 'tabIndex'> & {\n  label?: string;\n  parentClassName?: string;\n};\n\nexport const TextFilter: React.FC<TextFilterProps> = (props) => {\n  const {\n    label,\n    className,\n    placeholder,\n    autoFocus = false,\n    parentClassName,\n    ...otherInputProps\n  } = props;\n  const { ref } = useDocumentListener<HTMLInputElement>();\n  const { t } = useTranslation();\n  const placeholderText = placeholder ?? t('public~Filter {{label}}...', { label });\n\n  return (\n    <div className={classNames('has-feedback', parentClassName)}>\n      <TextInput\n        {...otherInputProps}\n        className={classNames('co-text-filter', className)}\n        data-test-id=\"item-filter\"\n        aria-label={placeholderText}\n        placeholder={placeholderText}\n        ref={ref}\n        autoFocus={autoFocus}\n        tabIndex={0}\n        type=\"text\"\n      />\n      <span className=\"co-text-filter-feedback\">\n        <kbd className=\"co-kbd co-kbd__filter-input\">{KEYBOARD_SHORTCUTS.focusFilterInput}</kbd>\n      </span>\n    </div>\n  );\n};\nTextFilter.displayName = 'TextFilter';\n\n// TODO (jon) make this into \"withListPageFilters\" HOC\n\ntype ListPageWrapperProps<L = any, C = any> = {\n  ListComponent: React.ComponentType<L>;\n  kinds: string[];\n  filters?: any;\n  flatten?: Flatten;\n  rowFilters?: RowFilter[];\n  hideNameLabelFilters?: boolean;\n  hideLabelFilter?: boolean;\n  columnLayout?: ColumnLayout;\n  name?: string;\n  resources?: FirehoseResourcesResult;\n  reduxIDs?: string[];\n  textFilter?: string;\n  nameFilterPlaceholder?: string;\n  namespace?: string;\n  labelFilterPlaceholder?: string;\n  label?: string;\n  staticFilters?: { key: string; value: string }[];\n  customData?: C;\n  hideColumnManagement?: boolean;\n  nameFilter?: string;\n  data?: any;\n};\n\nexport const ListPageWrapper: React.FC<ListPageWrapperProps> = (props) => {\n  const {\n    flatten,\n    ListComponent,\n    reduxIDs,\n    rowFilters,\n    textFilter,\n    nameFilterPlaceholder,\n    labelFilterPlaceholder,\n    hideNameLabelFilters,\n    hideLabelFilter,\n    columnLayout,\n    name,\n    nameFilter,\n    data,\n  } = props;\n  const dispatch = useDispatch();\n  const memoizedIds = useDeepCompareMemoize(reduxIDs);\n\n  React.useEffect(() => {\n    if (!_.isNil(nameFilter)) {\n      memoizedIds.forEach((id) => dispatch(filterList(id, 'name', { selected: [nameFilter] })));\n    }\n  }, [dispatch, nameFilter, memoizedIds]);\n\n  const dta = flatten ? flatten(data) : [];\n  const Filter = (\n    <FilterToolbar\n      rowFilters={rowFilters}\n      nameFilterPlaceholder={nameFilterPlaceholder}\n      labelFilterPlaceholder={labelFilterPlaceholder}\n      reduxIDs={reduxIDs}\n      textFilter={textFilter}\n      hideNameLabelFilters={hideNameLabelFilters}\n      hideLabelFilter={hideLabelFilter}\n      columnLayout={columnLayout}\n      uniqueFilterName={name}\n      {...props}\n      data={dta}\n    />\n  );\n\n  return (\n    <div>\n      {!_.isEmpty(dta) && Filter}\n      <div className=\"row\">\n        <div className=\"col-xs-12\">\n          <ListComponent {...props} data={dta} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nListPageWrapper.displayName = 'ListPageWrapper_';\n\nexport type FireManProps = {\n  canCreate?: boolean;\n  textFilter?: string;\n  createAccessReview?: {\n    model: K8sKind;\n    namespace?: string;\n  };\n  createButtonText?: string;\n  createProps?: CreateProps;\n  fieldSelector?: string;\n  filterLabel?: string;\n  resources: FirehoseResource[];\n  badge?: React.ReactNode;\n  helpText?: React.ReactNode;\n  title?: string;\n  autoFocus?: boolean;\n  cluster?: string; // TODO remove multicluster\n};\n\nexport const FireMan: React.FC<FireManProps & { filterList?: typeof filterList }> = (props) => {\n  const {\n    cluster,\n    resources,\n    textFilter,\n    canCreate,\n    createAccessReview,\n    createButtonText,\n    createProps = {},\n    helpText,\n    badge,\n    title,\n  } = props;\n  const navigate = useNavigate();\n  const [reduxIDs, setReduxIDs] = React.useState([]);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [expand] = React.useState();\n\n  React.useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    params.forEach((v, k) => applyFilter(k, v));\n\n    const reduxId = resources.map((r) =>\n      makeReduxID(kindObj(r.kind), makeQuery(r.namespace, r.selector, r.fieldSelector, r.name)),\n    );\n    setReduxIDs(reduxId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    const reduxId = resources.map((r) =>\n      makeReduxID(kindObj(r.kind), makeQuery(r.namespace, r.selector, r.fieldSelector, r.name)),\n    );\n\n    if (_.isEqual(reduxId, reduxIDs)) {\n      return;\n    }\n\n    // reapply filters to the new list...\n    setReduxIDs(reduxId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cluster, resources]);\n\n  const updateURL = (filterName: string, options: any) => {\n    if (filterName !== textFilter) {\n      // TODO (ggreer): support complex filters (objects, not just strings)\n      return;\n    }\n    const params = new URLSearchParams(window.location.search);\n    if (options) {\n      params.set(filterName, options);\n    } else {\n      params.delete(filterName);\n    }\n    const url = new URL(window.location.href);\n    navigate(`${url.pathname}?${params.toString()}${url.hash}`, { replace: true });\n  };\n\n  const applyFilter = (filterName: string, options: any) => {\n    // TODO: (ggreer) lame blacklist of query args. Use a whitelist based on resource filters\n    if (['q', 'kind', 'orderBy', 'sortBy'].includes(filterName)) {\n      return;\n    }\n    if (filterName.indexOf(storagePrefix) === 0) {\n      return;\n    }\n    reduxIDs.forEach((id) => props.filterList(id, filterName, options));\n    updateURL(filterName, options);\n  };\n\n  const runOrNavigate = (itemName: string) => {\n    const action = _.isFunction(createProps.action) && createProps.action(itemName);\n    if (action) {\n      action();\n    } else if (_.isFunction(createProps.createLink)) {\n      navigate(createProps.createLink(itemName), { replace: true });\n    }\n  };\n\n  let createLink: any;\n\n  if (canCreate) {\n    if (createProps.to) {\n      createLink = (\n        <Link className=\"co-m-primary-action\" to={createProps.to}>\n          <Button variant=\"primary\" id=\"yaml-create\" data-test=\"item-create\">\n            {createButtonText}\n          </Button>\n        </Link>\n      );\n    } else if (createProps.items) {\n      createLink = (\n        <div className=\"co-m-primary-action\">\n          <Dropdown\n            buttonClassName=\"pf-m-primary\"\n            id=\"item-create\"\n            dataTest=\"item-create\"\n            menuClassName={classNames({ 'pf-m-align-right-on-md': title })}\n            title={createButtonText}\n            noSelection\n            items={createProps.items}\n            onChange={runOrNavigate}\n          />\n        </div>\n      );\n    } else {\n      createLink = (\n        <div className=\"co-m-primary-action\">\n          <Button variant=\"primary\" id=\"yaml-create\" data-test=\"item-create\" {...createProps}>\n            {createButtonText}\n          </Button>\n        </div>\n      );\n    }\n    if (!_.isEmpty(createAccessReview)) {\n      createLink = (\n        <RequireCreatePermission\n          model={createAccessReview.model}\n          namespace={createAccessReview.namespace}\n        >\n          {createLink}\n        </RequireCreatePermission>\n      );\n    }\n  }\n\n  return (\n    <>\n      {/* Badge rendered from PageHeading only when title is present */}\n      <PageHeading\n        title={title}\n        badge={title ? badge : null}\n        className={classNames({ 'co-m-nav-title--row': createLink })}\n      >\n        {createLink && (\n          <div className={classNames({ 'co-m-pane__createLink--no-title': !title })}>\n            {createLink}\n          </div>\n        )}\n        {!title && badge && <div>{badge}</div>}\n      </PageHeading>\n      {helpText && <p className=\"co-m-pane__help-text co-help-text\">{helpText}</p>}\n      <div className=\"co-m-pane__body co-m-pane__body--no-top-margin\">\n        {inject(props.children, {\n          resources,\n          expand,\n          reduxIDs,\n          applyFilter,\n        })}\n      </div>\n    </>\n  );\n};\nFireMan.displayName = 'FireMan';\n\nexport type Flatten<\n  F extends FirehoseResultObject = { [key: string]: K8sResourceCommon | K8sResourceCommon[] },\n  R = any\n> = (resources: FirehoseResourcesResult<F>) => R;\n\nexport type ListPageProps<L = any, C = any> = PageCommonProps<L, C> & {\n  kind: string;\n  helpText?: React.ReactNode;\n  selector?: Selector;\n  fieldSelector?: string;\n  createHandler?: () => void;\n  name?: string;\n  filters?: any;\n  limit?: number;\n  nameFilter?: string;\n  skipAccessReview?: boolean;\n  data?: any;\n};\n\nexport const ListPage = withFallback<ListPageProps>((props) => {\n  const {\n    autoFocus,\n    canCreate,\n    createButtonText,\n    createHandler,\n    customData,\n    fieldSelector,\n    filterLabel,\n    labelFilterPlaceholder,\n    nameFilterPlaceholder,\n    filters,\n    helpText,\n    kind,\n    limit,\n    ListComponent,\n    mock,\n    name,\n    nameFilter,\n    namespace,\n    selector,\n    showTitle = true,\n    skipAccessReview,\n    textFilter,\n    badge,\n    hideLabelFilter,\n    hideNameLabelFilters,\n    hideColumnManagement,\n    columnLayout,\n    data,\n    flatten = (_resources) => _.get(_resources, kind)?.data,\n  } = props;\n  const { t } = useTranslation();\n  const params = useParams();\n  let { createProps } = props;\n  const ko = kindObj(kind);\n  const { label, labelKey, labelPlural, labelPluralKey, namespaced, plural } = ko;\n  const title = props.title || t(labelPluralKey) || labelPlural;\n  const usedNamespace = !namespace && namespaced ? params.ns : namespace;\n\n  let href = usedNamespace\n    ? `/k8s/ns/${usedNamespace || 'default'}/${plural}/~new`\n    : `/k8s/cluster/${plural}/~new`;\n  if (ko.crd) {\n    try {\n      const ref = referenceForModel(ko);\n      href = usedNamespace\n        ? `/k8s/ns/${usedNamespace || 'default'}/${ref}/~new`\n        : `/k8s/cluster/${ref}/~new`;\n    } catch (unused) {\n      /**/\n    }\n  }\n\n  createProps = createProps || (createHandler ? { onClick: createHandler } : { to: href });\n  const createAccessReview = skipAccessReview ? null : { model: ko, namespace: usedNamespace };\n  const resources = [\n    {\n      fieldSelector,\n      filters,\n      kind,\n      limit,\n      name,\n      namespaced,\n      selector,\n      prop: kind,\n    },\n  ];\n\n  // Don't show row filters if props.filters were passed. The content is already filtered and the row filters will have incorrect counts.\n  const rowFilters = _.isEmpty(filters) ? props.rowFilters : undefined;\n\n  if (!namespaced && usedNamespace) {\n    return <ErrorPage404 />;\n  }\n\n  return (\n    <MultiListPage\n      autoFocus={autoFocus}\n      canCreate={canCreate}\n      createAccessReview={createAccessReview}\n      createButtonText={\n        createButtonText || t('public~Create {{label}}', { label: t(labelKey) || label })\n      }\n      createProps={createProps}\n      customData={customData}\n      filterLabel={filterLabel || t('public~by name')}\n      nameFilterPlaceholder={nameFilterPlaceholder}\n      labelFilterPlaceholder={labelFilterPlaceholder}\n      flatten={flatten}\n      helpText={helpText}\n      label={t(labelPluralKey) || labelPlural}\n      ListComponent={ListComponent}\n      mock={mock}\n      namespace={usedNamespace}\n      resources={resources}\n      rowFilters={rowFilters}\n      showTitle={showTitle}\n      textFilter={textFilter}\n      title={title}\n      badge={badge}\n      hideLabelFilter={hideLabelFilter}\n      hideNameLabelFilters={hideNameLabelFilters}\n      hideColumnManagement={hideColumnManagement}\n      columnLayout={columnLayout}\n      nameFilter={nameFilter}\n      data={data}\n    />\n  );\n}, ErrorBoundaryFallbackPage);\n\nListPage.displayName = 'ListPage';\n\ntype PageCommonProps<L = any, C = any> = {\n  canCreate?: boolean;\n  createButtonText?: string;\n  createProps?: CreateProps;\n  flatten?: Flatten;\n  title?: string;\n  showTitle?: boolean;\n  filterLabel?: string;\n  textFilter?: string;\n  rowFilters?: RowFilter[];\n  ListComponent: React.ComponentType<L>;\n  namespace?: string;\n  customData?: C;\n  badge?: React.ReactNode;\n  hideNameLabelFilters?: boolean;\n  hideLabelFilter?: boolean;\n  columnLayout?: ColumnLayout;\n  hideColumnManagement?: boolean;\n  labelFilterPlaceholder?: string;\n  nameFilterPlaceholder?: string;\n  autoFocus?: boolean;\n  mock?: boolean;\n  data?: any;\n};\n\nexport type MultiListPageProps<L = any, C = any> = PageCommonProps<L, C> & {\n  createAccessReview?: {\n    model: K8sKind;\n    namespace?: string;\n  };\n  label?: string;\n  hideTextFilter?: boolean;\n  helpText?: React.ReactNode;\n  resources: (Omit<FirehoseResource, 'prop'> & { prop?: FirehoseResource['prop'] })[];\n  staticFilters?: { key: string; value: string }[];\n  nameFilter?: string;\n};\n\nexport const MultiListPage: React.FC<MultiListPageProps> = (props) => {\n  const {\n    autoFocus,\n    canCreate,\n    createAccessReview,\n    createButtonText,\n    createProps,\n    filterLabel,\n    nameFilterPlaceholder,\n    labelFilterPlaceholder,\n    flatten,\n    helpText,\n    label,\n    ListComponent,\n    mock,\n    namespace,\n    rowFilters,\n    showTitle = true,\n    staticFilters,\n    textFilter,\n    title,\n    customData,\n    badge,\n    hideLabelFilter,\n    hideNameLabelFilters,\n    hideColumnManagement,\n    columnLayout,\n    nameFilter,\n    data,\n  } = props;\n  const { t } = useTranslation();\n  const resources = _.map(props.resources, (r) => ({\n    ...r,\n    isList: r.isList !== undefined ? r.isList : true,\n    namespace: r.namespaced ? namespace : r.namespace,\n    prop: r.kind,\n  }));\n  return (\n    <FireMan\n      autoFocus={autoFocus}\n      canCreate={canCreate}\n      createAccessReview={createAccessReview}\n      createButtonText={createButtonText || t('public~Create')}\n      createProps={createProps}\n      filterLabel={filterLabel || t('public~by name')}\n      helpText={helpText}\n      resources={mock ? [] : resources}\n      textFilter={textFilter}\n      title={showTitle ? title : undefined}\n      badge={badge}\n    >\n      <ListPropProvider data={data}>\n        <ListPageWrapper\n          flatten={flatten}\n          kinds={_.map(resources, 'kind')}\n          label={label}\n          ListComponent={ListComponent}\n          textFilter={textFilter}\n          rowFilters={rowFilters}\n          staticFilters={staticFilters}\n          customData={customData}\n          hideLabelFilter={hideLabelFilter}\n          hideNameLabelFilters={hideNameLabelFilters}\n          hideColumnManagement={hideColumnManagement}\n          columnLayout={columnLayout}\n          nameFilterPlaceholder={nameFilterPlaceholder}\n          labelFilterPlaceholder={labelFilterPlaceholder}\n          nameFilter={nameFilter}\n          namespace={namespace}\n          resources={data}\n          data={data}\n        />\n      </ListPropProvider>\n    </FireMan>\n  );\n};\n\nMultiListPage.displayName = 'MultiListPage';\n","import i18next from 'i18next';\nimport { Condition, TaskRunStatus } from '../../../types';\nimport { CombinedErrorDetails } from './log-snippet-types';\n\nconst joinConditions = (conditions: Condition[]) =>\n  conditions.map((condition) => condition.message).join('\\n') ||\n  i18next.t('pipelines-plugin~Unknown failure condition');\n\nexport const taskRunSnippetMessage = (\n  taskName: string,\n  taskRunStatus: TaskRunStatus,\n  containerName: string,\n): CombinedErrorDetails => {\n  if (!taskRunStatus?.podName || !containerName) {\n    // Not enough to go to the logs, print all the conditions messages together\n    return {\n      staticMessage: joinConditions(taskRunStatus.conditions),\n      title: i18next.t('pipelines-plugin~Failure on task {{taskName}} - check logs for details.', {\n        taskName,\n      }),\n    };\n  }\n  // We don't know enough but have enough to locate the logs\n  return {\n    containerName,\n    podName: taskRunStatus.podName,\n    title: i18next.t('pipelines-plugin~Failure on task {{taskName}} - check logs for details.', {\n      taskName,\n    }),\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { LoadingInline, resourcePathFromModel } from '@console/internal/components/utils';\nimport { DASH } from '@console/shared';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\nimport { TaskStatus } from '../../../utils/pipeline-augment';\nimport { PipelineBars, PipelineBarsForTaskRunsStatus } from './PipelineBars';\n\nexport interface LinkedPipelineRunTaskStatusProps {\n  pipelineRun: PipelineRunKind;\n  taskRuns: TaskRunKind[];\n  taskRunsLoaded?: boolean;\n  taskRunStatusObj?: TaskStatus;\n}\n\n/**\n * Will attempt to render a link to the log file associated with the pipelineRun if it has the data.\n * If it does not, it'll just render the pipeline status.\n */\nconst LinkedPipelineRunTaskStatus: React.FC<LinkedPipelineRunTaskStatusProps> = ({\n  pipelineRun,\n  taskRuns,\n  taskRunsLoaded,\n  taskRunStatusObj,\n}) => {\n  const { t } = useTranslation();\n  const pipelineStatus =\n    taskRunStatusObj && Object.values(taskRunStatusObj)?.every((value) => value === 0) ? (\n      <>{DASH}</>\n    ) : taskRunStatusObj ? (\n      <PipelineBarsForTaskRunsStatus taskRunStatusObj={taskRunStatusObj} />\n    ) : taskRunsLoaded && taskRuns?.length > 0 ? (\n      <PipelineBars\n        key={pipelineRun.metadata?.name}\n        pipelinerun={pipelineRun}\n        taskRuns={taskRuns}\n      />\n    ) : taskRunsLoaded && taskRuns?.length === 0 && !taskRunStatusObj ? (\n      <>{DASH}</>\n    ) : (\n      <LoadingInline />\n    );\n\n  if (pipelineRun.metadata?.name && pipelineRun.metadata?.namespace) {\n    return (\n      <Link\n        to={`${resourcePathFromModel(\n          PipelineRunModel,\n          pipelineRun.metadata.name,\n          pipelineRun.metadata.namespace,\n        )}/logs`}\n        role=\"button\"\n        aria-label={t('pipelines-plugin~View logs')}\n      >\n        {pipelineStatus}\n      </Link>\n    );\n  }\n\n  return pipelineStatus;\n};\n\nexport default LinkedPipelineRunTaskStatus;\n","import * as React from 'react';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../types';\nimport { getPipelineFromPipelineRun } from '../../../utils/pipeline-augment';\n\nexport const usePipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const [pipeline, setPipeline] = React.useState<PipelineKind>(null);\n  React.useEffect(() => {\n    const emptyPipeline: PipelineKind = { spec: { tasks: [] } };\n    const pipelineFromPipelineRun = getPipelineFromPipelineRun(pipelineRun);\n    if (pipelineFromPipelineRun) {\n      setPipeline(pipelineFromPipelineRun);\n    } else if (pipelineRun.spec.pipelineRef?.name) {\n      const pipelineName = pipelineRun.spec.pipelineRef.name;\n      k8sGet(PipelineModel, pipelineName, pipelineRun.metadata.namespace)\n        .then((newPipeline: PipelineKind) => {\n          setPipeline(newPipeline);\n        })\n        .catch(() => setPipeline(emptyPipeline));\n    } else {\n      setPipeline(emptyPipeline);\n    }\n  }, [pipelineRun]);\n  return pipeline;\n};\n","import * as React from 'react';\nimport { Status } from '@console/shared';\n\ntype PipelineResourceStatusProps = {\n  status: string;\n  children?: React.ReactNode;\n  title?: string;\n};\nconst PipelineResourceStatus: React.FC<PipelineResourceStatusProps> = ({\n  status,\n  children,\n  title,\n}) => (\n  <Status status={status} title={title}>\n    {status === 'Failed' && React.Children.toArray(children).length > 0 && children}\n  </Status>\n);\n\nexport default PipelineResourceStatus;\n","import { saveAs } from 'file-saver';\nimport i18next from 'i18next';\nimport { coFetchText } from '@console/internal/co-fetch';\nimport { errorModal } from '@console/internal/components/modals';\nimport {\n  LOG_SOURCE_TERMINATED,\n  LOG_SOURCE_WAITING,\n  LineBuffer,\n} from '@console/internal/components/utils';\nimport { PodModel } from '@console/internal/models';\nimport {\n  PodKind,\n  ContainerSpec,\n  ContainerStatus,\n  resourceURL,\n  k8sGet,\n} from '@console/internal/module/k8s';\nimport { TaskRunKind } from '../../../types';\nimport { containerToLogSourceStatus } from '../../../utils/pipeline-utils';\nimport { getTaskRunLog } from '../utils/tekton-results';\n\nconst getSortedContainerStatus = (\n  containers: ContainerSpec[],\n  containerStatuses: ContainerStatus[],\n): ContainerStatus[] => {\n  const containerNames = containers.map((c) => c.name);\n  const sortedContainerStatus = [];\n  containerStatuses.forEach((cs) => {\n    const containerIndex = containerNames.indexOf(cs.name);\n    sortedContainerStatus[containerIndex] = cs;\n  });\n  return sortedContainerStatus;\n};\n\nexport const getRenderContainers = (\n  pod: PodKind,\n): { containers: ContainerSpec[]; stillFetching: boolean } => {\n  const containers: ContainerSpec[] = pod?.spec?.containers ?? [];\n  const containerStatuses: ContainerStatus[] = pod?.status?.containerStatuses ?? [];\n\n  const sortedContainerStatuses = getSortedContainerStatus(containers, containerStatuses);\n\n  const firstRunningCont = sortedContainerStatuses.findIndex(\n    (container) => containerToLogSourceStatus(container) !== LOG_SOURCE_TERMINATED,\n  );\n  return {\n    containers: containers.slice(\n      0,\n      firstRunningCont === -1 ? containers.length : firstRunningCont + 1,\n    ),\n    stillFetching: firstRunningCont !== -1,\n  };\n};\n\nconst getOrderedStepsFromPod = (name: string, ns: string): Promise<ContainerStatus[]> => {\n  return k8sGet(PodModel, name, ns)\n    .then((pod: PodKind) => {\n      return getSortedContainerStatus(\n        pod.spec.containers ?? [],\n        pod.status?.containerStatuses ?? [],\n      );\n    })\n    .catch((err) => {\n      errorModal({ error: err.message || i18next.t('pipelines-plugin~Error downloading logs.') });\n      return [];\n    });\n};\n\ntype StepsWatchUrl = {\n  [key: string]: {\n    name: string;\n    steps: { [step: string]: WatchURLStatus };\n    taskRunPath: string;\n  };\n};\n\ntype WatchURLStatus = {\n  status: string;\n  url: string;\n};\n\nexport const getDownloadAllLogsCallback = (\n  sortedTaskRunNames: string[],\n  taskRuns: TaskRunKind[],\n  namespace: string,\n  pipelineRunName: string,\n): (() => Promise<Error>) => {\n  const getWatchUrls = async (): Promise<StepsWatchUrl> => {\n    const stepsList: ContainerStatus[][] = await Promise.all(\n      sortedTaskRunNames.map((currTask) => {\n        const { status } = taskRuns.find((t) => t.metadata.name === currTask) ?? {};\n        return getOrderedStepsFromPod(status?.podName, namespace);\n      }),\n    );\n    return sortedTaskRunNames.reduce((acc, currTask, i) => {\n      const taskRun = taskRuns.find((t) => t.metadata.name === currTask);\n      const pipelineTaskName = taskRun?.spec.taskRef?.name ?? taskRun?.metadata.name;\n      const { status } = taskRun;\n      const podName = status?.podName;\n      const steps = stepsList[i];\n      const allStepUrls = steps.reduce((stepUrls, currentStep) => {\n        const { name } = currentStep;\n        const currentStatus = containerToLogSourceStatus(currentStep);\n        if (currentStatus === LOG_SOURCE_WAITING) return stepUrls;\n        const urlOpts = {\n          ns: namespace,\n          name: podName,\n          path: 'log',\n          queryParams: {\n            container: name,\n            follow: 'true',\n          },\n        };\n        return {\n          ...stepUrls,\n          [name]: {\n            status: currentStatus,\n            url: resourceURL(PodModel, urlOpts),\n          } as WatchURLStatus,\n        };\n      }, {});\n      acc[currTask] = {\n        name: pipelineTaskName,\n        steps: { ...allStepUrls },\n        taskRunPath: taskRun.metadata?.annotations?.['results.tekton.dev/record'],\n      };\n      return acc;\n    }, {});\n  };\n\n  const fetchLogs = async (tasksPromise: Promise<StepsWatchUrl>) => {\n    const tasks = await tasksPromise;\n    let allLogs = '';\n    for (const currTask of sortedTaskRunNames) {\n      const task = tasks[currTask];\n      const steps = Object.keys(task.steps);\n      allLogs += `${task.name}\\n\\n`;\n      if (steps.length > 0) {\n        for (const step of steps) {\n          const { url, status } = task.steps[step];\n          const getContentPromise = coFetchText(url).then((logs) => {\n            return `${step.toUpperCase()}\\n\\n${logs}\\n\\n`;\n          });\n          allLogs +=\n            status === LOG_SOURCE_TERMINATED\n              ? // If we are done, we want this log content\n                // eslint-disable-next-line no-await-in-loop\n                await getContentPromise\n              : // If we are not done, let's not wait indefinitely\n                // eslint-disable-next-line no-await-in-loop\n                await Promise.race([\n                  getContentPromise,\n                  new Promise<string>((resolve) => {\n                    setTimeout(() => resolve(''), 1000);\n                  }),\n                ]);\n        }\n      } else {\n        // eslint-disable-next-line no-await-in-loop\n        allLogs += await getTaskRunLog(task.taskRunPath).then(\n          (log) => `${tasks[currTask].name.toUpperCase()}\\n\\n${log}\\n\\n`,\n        );\n      }\n    }\n    const buffer = new LineBuffer(null);\n    buffer.ingest(allLogs);\n    const blob = buffer.getBlob({\n      type: 'text/plain;charset=utf-8',\n    });\n    saveAs(blob, `${pipelineRunName}.log`);\n    return null;\n  };\n  return (): Promise<Error> => {\n    return fetchLogs(getWatchUrls());\n  };\n};\n","import { k8sKill, k8sList, k8sPatch } from '@console/internal/module/k8s';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind } from '../../../../types';\nimport { EventListenerKind, EventListenerKindTrigger } from '../../resource-types';\nimport { RemoveTriggerFormValues } from './types';\n\nexport const removeTrigger = async (values: RemoveTriggerFormValues, pipeline: PipelineKind) => {\n  const ns = pipeline.metadata.namespace;\n  const selectedTriggerTemplate = values.selectedTrigger;\n\n  // Remove the selected TriggerTemplate\n  await k8sKill(TriggerTemplateModel, {\n    metadata: { name: selectedTriggerTemplate, namespace: ns },\n  });\n\n  const triggerMatchesTriggerTemplate = ({ template }: EventListenerKindTrigger) => {\n    return template?.ref === selectedTriggerTemplate || template?.name === selectedTriggerTemplate;\n  };\n\n  // Get all the event listeners so we can update their references\n  const eventListeners: EventListenerKind[] = await k8sList(EventListenerModel, { ns });\n  const matchingEventListeners = eventListeners.filter(({ spec: { triggers } }) =>\n    triggers.find(triggerMatchesTriggerTemplate),\n  );\n\n  const singleTriggers = ({ spec: { triggers } }) => triggers.length === 1;\n\n  // Delete all EventListeners that only had the one trigger\n  const deletableEventListeners: EventListenerKind[] = matchingEventListeners.filter(\n    singleTriggers,\n  );\n  await Promise.all(\n    deletableEventListeners.map((eventListener) => k8sKill(EventListenerModel, eventListener)),\n  );\n\n  // Update all EventListeners that had more than one trigger\n  const updatableEventListeners: EventListenerKind[] = matchingEventListeners.filter(\n    (eventListener) => !singleTriggers(eventListener),\n  );\n  await Promise.all(\n    updatableEventListeners.map((eventListener) =>\n      k8sPatch(EventListenerModel, eventListener, [\n        {\n          op: 'replace',\n          path: '/spec/triggers',\n          value: eventListener.spec.triggers.filter(triggerMatchesTriggerTemplate),\n        },\n      ]),\n    ),\n  );\n\n  return Promise.resolve();\n};\n","import * as React from 'react';\nimport { Icon, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { global_warning_color_100 as warningColor } from '@patternfly/react-tokens/dist/js/global_warning_color_100';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { PipelineKind } from '../../../../types';\nimport TriggerTemplateSelector from './TriggerTemplateSelector';\n\ntype RemoveTriggerFormProps = {\n  pipeline: PipelineKind;\n};\n\nconst RemoveTriggerForm: React.FC<RemoveTriggerFormProps> = (props) => {\n  const { t } = useTranslation();\n  const { pipeline } = props;\n  const pipelineName = pipeline.metadata.name;\n\n  return (\n    <Split className=\"odc-modal-content\" hasGutter>\n      <SplitItem>\n        <Icon size=\"md\">\n          <ExclamationTriangleIcon color={warningColor.value} />\n        </Icon>\n      </SplitItem>\n      <SplitItem isFilled>\n        <p className=\"co-break-word\">\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Select the trigger to remove from pipeline <b>{{ pipelineName }}</b>.\n          </Trans>\n        </p>\n        <TriggerTemplateSelector\n          name=\"selectedTrigger\"\n          placeholder={t('pipelines-plugin~Select TriggerTemplate')}\n          pipeline={pipeline}\n        />\n      </SplitItem>\n    </Split>\n  );\n};\n\nexport default RemoveTriggerForm;\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { DropdownField } from '@console/shared/src';\nimport { PipelineKind } from '../../../../types';\nimport { RouteTemplate, usePipelineTriggerTemplateNames } from '../../utils/triggers';\n\nimport './TriggerTemplateSelector.scss';\n\ntype TriggerTemplateSelectorProps = {\n  name: string;\n  pipeline: PipelineKind;\n  placeholder: string;\n};\n\nconst TriggerTemplateSelector: React.FC<TriggerTemplateSelectorProps> = (props) => {\n  const { t } = useTranslation();\n  const { name, pipeline, placeholder } = props;\n  const {\n    metadata: { name: pipelineName, namespace },\n  } = pipeline;\n\n  const [field] = useField(name);\n  const selection = field.value;\n\n  const templateNames: RouteTemplate[] =\n    usePipelineTriggerTemplateNames(pipelineName, namespace) || [];\n  const items = templateNames.reduce(\n    (acc, { triggerTemplateName }) => ({ ...acc, [triggerTemplateName]: triggerTemplateName }),\n    {},\n  );\n\n  return (\n    <div className=\"odc-trigger-template-selector\">\n      <DropdownField\n        fullWidth\n        disabled={templateNames.length === 0}\n        items={items}\n        name={name}\n        title={placeholder}\n      />\n      {selection ? (\n        <div className=\"co-break-word odc-trigger-template-selector__confirmationMessage\">\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Are you sure you want to remove <b>{{ selection }}</b> from <b>{{ pipelineName }}</b>?\n          </Trans>\n        </div>\n      ) : (\n        <div className=\"odc-trigger-template-selector__pfModalHack\" />\n      )}\n    </div>\n  );\n};\n\nexport default TriggerTemplateSelector;\n","import i18next from 'i18next';\nimport * as yup from 'yup';\n\nexport const removeTriggerSchema = () =>\n  yup.object().shape({\n    selectedTrigger: yup.string().required(i18next.t('pipelines-plugin~Required')),\n  });\n","import * as React from 'react';\nimport { FormikProps } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport PipelineParameterSection from '../common/PipelineParameterSection';\nimport PipelineResourceSection from '../common/PipelineResourceSection';\nimport PipelineSecretSection from '../common/PipelineSecretSection';\nimport PipelineWorkspacesSection from '../common/PipelineWorkspacesSection';\nimport { StartPipelineFormValues } from './types';\n\nconst StartPipelineForm: React.FC<FormikProps<StartPipelineFormValues>> = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <PipelineParameterSection />\n      <PipelineResourceSection />\n      <PipelineWorkspacesSection />\n      <FormSection title={t('pipelines-plugin~Advanced options')} fullWidth>\n        <PipelineSecretSection />\n      </FormSection>\n    </>\n  );\n};\n\nexport default StartPipelineForm;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { CursorPosition, insertIntoValue } from './autoCompleteUtils';\n\ntype ElementType = HTMLInputElement | HTMLTextAreaElement;\ntype AutoCompleteHook = {\n  contentRefCallback: (contentNode: ElementType) => void;\n  focusTrapProps: {\n    active: boolean;\n    focusTrapOptions: {\n      clickOutsideDeactivates: boolean;\n      onDeactivate: () => void;\n      fallbackFocus: ElementType;\n    };\n  };\n  insertAutoComplete: (newValue: string) => void;\n  menuWidth: number;\n  options: string[];\n  popperProps: {\n    open: boolean;\n    onRequestClose: () => void;\n    reference: () => ElementType;\n  };\n};\n\ntype ShouldOpenCallback = (event) => boolean;\ntype MenuKeyWatcherHook = {\n  isOpen: boolean;\n  shouldOpen: ShouldOpenCallback;\n  closeMenu: () => void;\n};\n\ntype SetAutoCompleteCallback = (newValue: string) => void;\n\ntype SetFilterOptions = (filterValue: string) => void;\ntype FilterOptionsHook = [string[], SetFilterOptions];\n\nconst PARAM_REFERENCE = '$(';\nconst PARAM_REFERENCE_CHARS = PARAM_REFERENCE.split('');\n\n/**\n * Tracks open state + manages keystrokes to open.\n */\nconst useOpenMenuKeyWatcher = (): MenuKeyWatcherHook => {\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n\n  const shouldOpen = React.useCallback<ShouldOpenCallback>(\n    (event) => {\n      const { key, code, ctrlKey } = event;\n\n      if (code === 'Space' && ctrlKey) {\n        // Hotkey to open\n        setOpen(true);\n        return true;\n      }\n\n      if (!PARAM_REFERENCE_CHARS.includes(key) || isOpen) {\n        // Ignore event, does not apply to opening\n        return false;\n      }\n\n      const cursorPos = event.target.selectionStart;\n      // Go back the character we added and then one more to get the previous character\n      const lastCharacter = event.target.value[cursorPos - 2];\n\n      if (lastCharacter === PARAM_REFERENCE_CHARS[0] && key === PARAM_REFERENCE_CHARS[1]) {\n        // Manual open\n        setOpen(true);\n        return true;\n      }\n\n      return false;\n    },\n    [isOpen],\n  );\n\n  return { isOpen, shouldOpen, closeMenu: React.useCallback(() => setOpen(false), []) };\n};\n\n/**\n * Filters options that are provided based on a setFilter.\n */\nconst useFilterOptions = (options: string[]): FilterOptionsHook => {\n  type FilterMap = { [singleValue: string]: string };\n\n  const [filteredOptions, setFilteredOptions] = React.useState<string[]>(options);\n  const filterMappings = React.useRef<FilterMap>({});\n\n  React.useEffect(() => {\n    filterMappings.current = options.reduce((acc: FilterMap, option: string, idx: number) => {\n      const optionPartMap = option.split('.').reduce((optionAcc, optionPart: string) => {\n        return {\n          ...optionAcc,\n          // startsWith value + unique identifier to allow multiple overlapping parts\n          [`${optionPart}|${idx}`]: option,\n        };\n      }, {});\n\n      return {\n        ...acc,\n        ...optionPartMap,\n        [option]: option,\n      };\n    }, {});\n  }, [options]);\n\n  const setFilter: SetFilterOptions = React.useCallback(\n    (newFilterValue: string) => {\n      if (!newFilterValue) {\n        setFilteredOptions(options);\n        return;\n      }\n\n      const newOptions: string[] = _.uniq(\n        Object.keys(filterMappings.current)\n          .filter((value: string) => value.toLowerCase().startsWith(newFilterValue.toLowerCase()))\n          .map((value: string) => filterMappings.current[value]),\n      );\n      setFilteredOptions(newOptions);\n    },\n    [options],\n  );\n\n  return [filteredOptions, setFilter];\n};\n\n/**\n * Listens to the node in various ways to prefer functions of AutoComplete.\n */\nconst useNodeListener = (\n  cursorPosition: React.MutableRefObject<CursorPosition>,\n  menuOptions: MenuKeyWatcherHook,\n  filterOptions: FilterOptionsHook,\n  setFocusingOptions: (isFocusing: boolean) => void,\n  closeCleanup: () => void,\n): [React.MutableRefObject<ElementType>, (node: ElementType) => void] => {\n  const [node, setNode] = React.useState<ElementType>(null);\n  const nodeRef = React.useRef<ElementType>(null);\n  nodeRef.current = node;\n\n  const { isOpen, shouldOpen } = menuOptions;\n  const [, setFilter] = filterOptions;\n\n  const onKeyCallback = React.useCallback(\n    (e) => {\n      const applyFilterAtCursor = () => {\n        const filterValue = nodeRef.current.value.substring(\n          cursorPosition.current[0],\n          cursorPosition.current[1],\n        );\n        setFilter(filterValue);\n      };\n\n      if (isOpen) {\n        cursorPosition.current = [cursorPosition.current[0], nodeRef.current.selectionEnd];\n\n        if (cursorPosition.current[1] < cursorPosition.current[0]) {\n          // User moved before the start of the autoComplete trigger, close\n          closeCleanup();\n          return;\n        }\n\n        applyFilterAtCursor();\n      } else {\n        cursorPosition.current = [nodeRef.current.selectionStart, nodeRef.current.selectionEnd];\n        const isOpening = shouldOpen(e);\n\n        if (isOpening) {\n          // In the case they are highlighting text, invoke auto complete immediately on the text\n          applyFilterAtCursor();\n        }\n      }\n    },\n    [isOpen, setFilter, shouldOpen, closeCleanup, cursorPosition],\n  );\n\n  const focusDropdownCallback = React.useCallback(\n    (e) => {\n      if (!isOpen) return;\n\n      if (e.code === 'Tab' || e.code === 'ArrowDown') {\n        e.stopPropagation();\n        e.preventDefault();\n        setFocusingOptions(true);\n      }\n    },\n    [isOpen, setFocusingOptions],\n  );\n\n  React.useEffect(() => {\n    if (node) {\n      node.addEventListener('keydown', focusDropdownCallback);\n      node.addEventListener('keyup', onKeyCallback);\n    }\n\n    return () => {\n      if (node) {\n        node.removeEventListener('keydown', focusDropdownCallback);\n        node.removeEventListener('keyup', onKeyCallback);\n      }\n    };\n  }, [focusDropdownCallback, onKeyCallback, node]);\n\n  return [nodeRef, (contentNode) => setNode(contentNode)];\n};\n\n/**\n * Manages auto complete state.\n */\nconst useAutoComplete = (\n  autoCompleteValues: string[],\n  onAutoComplete: SetAutoCompleteCallback,\n): AutoCompleteHook => {\n  const cursorPosition = React.useRef<CursorPosition>([0, 0]);\n  const [focusingOptions, setFocusingOptions] = React.useState<boolean>(false);\n  const menuOptions = useOpenMenuKeyWatcher();\n  const filterOptions = useFilterOptions(autoCompleteValues);\n\n  const { isOpen, closeMenu } = menuOptions;\n  const [options, setFilter] = filterOptions;\n\n  const closeCleanup = React.useCallback(() => {\n    closeMenu();\n    setFilter('');\n    setFocusingOptions(false);\n    cursorPosition.current = [0, 0];\n  }, [closeMenu, setFilter]);\n\n  const [nodeRef, setNodeRef] = useNodeListener(\n    cursorPosition,\n    menuOptions,\n    filterOptions,\n    setFocusingOptions,\n    closeCleanup,\n  );\n\n  const insertAutoComplete = React.useCallback(\n    (newValue: string) => {\n      // Look for the PARAM_REFERENCE prefix to see if we need to add it\n      const leftCapturePoint = cursorPosition.current[0] - PARAM_REFERENCE.length;\n      const prefix =\n        leftCapturePoint >= 0\n          ? nodeRef.current.value.substr(leftCapturePoint, PARAM_REFERENCE.length)\n          : null;\n      const hasPrefix = prefix === PARAM_REFERENCE;\n\n      // Update the value + the node\n      const insertValue = `${hasPrefix ? '' : PARAM_REFERENCE}${newValue})`;\n      onAutoComplete(insertIntoValue(nodeRef.current.value, cursorPosition.current, insertValue));\n\n      // Make sure the cursor remains at the end of the inserted text so they can continue typing a prefix (if desired)\n      const cursorEndPoint: number = cursorPosition.current[0] + insertValue.length;\n      setTimeout(() => {\n        nodeRef.current.setSelectionRange(cursorEndPoint, cursorEndPoint);\n      }, 0);\n\n      closeCleanup();\n    },\n    [nodeRef, closeCleanup, onAutoComplete],\n  );\n\n  return {\n    contentRefCallback: setNodeRef,\n    focusTrapProps: {\n      active: focusingOptions,\n      focusTrapOptions: {\n        clickOutsideDeactivates: true,\n        onDeactivate: closeCleanup,\n        fallbackFocus: nodeRef.current,\n      },\n    },\n    insertAutoComplete,\n    menuWidth: nodeRef.current?.getBoundingClientRect().width || 300,\n    options,\n    popperProps: {\n      open: isOpen,\n      onRequestClose: closeCleanup,\n      reference: () => nodeRef.current,\n    },\n  };\n};\n\nexport default useAutoComplete;\n","import * as React from 'react';\nimport { FormGroup } from '@patternfly/react-core';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport { DropdownFieldProps, useFormikValidationFix } from '@console/shared';\nimport PipelineResourceParam from '../../pipeline-resource/PipelineResourceParam';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\nimport PipelineResourceDropdown from './PipelineResourceDropdown';\nimport { PipelineModalFormResource } from './types';\n\ntype PipelineResourceDropdownFieldProps = DropdownFieldProps & {\n  filterType?: string;\n};\nconst PipelineResourceDropdownField: React.FC<PipelineResourceDropdownFieldProps> = (props) => {\n  const { filterType, name, label } = props;\n\n  const [field] = useField<PipelineModalFormResource>(name);\n  const { values } = useFormikContext<FormikValues>();\n  const { namespace } = values;\n  const {\n    value: { selection },\n  } = field;\n  const creating = selection === CREATE_PIPELINE_RESOURCE;\n\n  useFormikValidationFix(field.value);\n\n  return (\n    <>\n      <FormGroup fieldId={name} label={label} isRequired>\n        <PipelineResourceDropdown\n          {...props}\n          autoSelect={selection === ''}\n          filterType={filterType}\n          namespace={namespace}\n          name={`${name}.selection`}\n        />\n      </FormGroup>\n\n      {creating && <PipelineResourceParam name={`${name}.data`} type={filterType} />}\n    </>\n  );\n};\n\nexport default PipelineResourceDropdownField;\n","import * as React from 'react';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { PipelineResourceType } from '../const';\nimport PipelineClusterOptions from './PipelineClusterOptions';\nimport PipelineGitOptions from './PipelineGitOptions';\nimport PipelineImageOptions from './PipelineImageOptions';\nimport PipelineStorageOptions from './PipelineStorageOptions';\n\nexport interface PipelineResourceParamProps {\n  name: string;\n  type: string;\n}\n\nconst PipelineResourceParam: React.FC<PipelineResourceParamProps> = (props) => {\n  const { name, type } = props;\n\n  const renderTypeFields = () => {\n    switch (type) {\n      case PipelineResourceType.git:\n        return <PipelineGitOptions prefixName={name} />;\n      case PipelineResourceType.image:\n        return <PipelineImageOptions prefixName={name} />;\n      case PipelineResourceType.cluster:\n        return <PipelineClusterOptions prefixName={name} />;\n      case PipelineResourceType.storage:\n        return <PipelineStorageOptions prefixName={name} />;\n      default:\n        return null;\n    }\n  };\n\n  return <FormSection fullWidth>{renderTypeFields()}</FormSection>;\n};\n\nexport default PipelineResourceParam;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, DroppableFileInputField } from '@console/shared';\n\ntype PipelineClusterOptionsProps = { prefixName: string };\n\nconst PipelineClusterOptions: React.FC<PipelineClusterOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.name`}\n        label={t('pipelines-plugin~Name')}\n        helpText={t('pipelines-plugin~Name of the cluster.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.url`}\n        label={t('pipelines-plugin~URL')}\n        helpText={t('pipelines-plugin~Host URL of the control plane node.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.username`}\n        label={t('pipelines-plugin~Username')}\n        helpText={t('pipelines-plugin~The user with access to the cluster.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.password}\n        name={`${prefixName}.params.password`}\n        label={t('pipelines-plugin~Password')}\n        helpText={t('pipelines-plugin~Please provide password.')}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.insecure`}\n        label={t('pipelines-plugin~Insecure')}\n        helpText={t(\n          'pipelines-plugin~Indicate server should be accessed without verifying the TLS certificate.',\n        )}\n      />\n      <DroppableFileInputField\n        name={`${prefixName}.secrets.cadata`}\n        label={t('pipelines-plugin~Cadata')}\n        helpText={t(\n          'pipelines-plugin~The PEM format certificate. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n        )}\n        required\n      />\n      <DroppableFileInputField\n        name={`${prefixName}.secrets.token`}\n        label={t('pipelines-plugin~Token')}\n        helpText={t(\n          'pipelines-plugin~Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n        )}\n        required\n      />\n    </>\n  );\n};\n\nexport default PipelineClusterOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineGitOptionsProps = { prefixName: string };\n\nconst PipelineGitOptions: React.FC<PipelineGitOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.url`}\n        label={t('pipelines-plugin~URL')}\n        helpText={t('pipelines-plugin~Please provide Git URL.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.revision`}\n        label={t('pipelines-plugin~Revision')}\n        helpText={t('pipelines-plugin~Please provide revisions. i.e master')}\n      />\n    </>\n  );\n};\n\nexport default PipelineGitOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineImageOptionsProps = { prefixName: string };\n\nconst PipelineImageOptions: React.FC<PipelineImageOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <InputField\n      type={TextInputTypes.text}\n      name={`${prefixName}.params.url`}\n      label={t('pipelines-plugin~URL')}\n      helpText={t('pipelines-plugin~Please provide Image URL.')}\n      required\n    />\n  );\n};\n\nexport default PipelineImageOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineStorageOptionsProps = { prefixName: string };\n\nconst PipelineStorageOptions: React.FC<PipelineStorageOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.type`}\n        label={t('pipelines-plugin~Type')}\n        helpText={t('pipelines-plugin~Represents the type of blob storage i.e gcs')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.location`}\n        label={t('pipelines-plugin~Location')}\n        helpText={t(\n          'pipelines-plugin~Represents the location of the blob storage i.e gs://some-private-bucket',\n        )}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.dir`}\n        label={t('pipelines-plugin~Directory')}\n        helpText={t('pipelines-plugin~Represents whether the blob storage is a directory or not')}\n      />\n    </>\n  );\n};\n\nexport default PipelineStorageOptions;\n","import * as React from 'react';\nimport { FormikValues, useField, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { FormSelectField, FormSelectFieldOption } from '@console/shared';\nimport { PipelineResourceModel } from '../../../../models';\nimport { PipelineResourceKind } from '../../../../types';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\n\nimport './PipelineResourceDropdown.scss';\n\ntype PipelineResourceDropdownProps = {\n  autoSelect?: boolean;\n  filterType: string;\n  name: string;\n  namespace: string;\n};\n\nconst PipelineResourceDropdown: React.FC<PipelineResourceDropdownProps> = (props) => {\n  const { t } = useTranslation();\n  const { autoSelect, filterType, name, namespace } = props;\n\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [, { touched }] = useField(name);\n\n  const [resources, loaded, error] = useK8sWatchResource<PipelineResourceKind[]>({\n    isList: true,\n    namespace,\n    kind: referenceForModel(PipelineResourceModel),\n  });\n\n  const availableResources: PipelineResourceKind[] = resources.filter(\n    (resource) => resource.spec.type === filterType,\n  );\n\n  const canAutoSelect = autoSelect && !touched && loaded && !error;\n  React.useEffect(() => {\n    if (canAutoSelect) {\n      if (availableResources.length === 0) {\n        setFieldValue(name, CREATE_PIPELINE_RESOURCE);\n      } else {\n        setFieldValue(name, availableResources[0].metadata.name);\n      }\n      setFieldTouched(name);\n    }\n  }, [canAutoSelect, name, availableResources, setFieldTouched, setFieldValue]);\n\n  const options: FormSelectFieldOption<string>[] = [\n    {\n      value: '',\n      label: t('pipelines-plugin~Select Pipeline resource'),\n      isPlaceholder: true,\n      isDisabled: true,\n    },\n    {\n      label: t('pipelines-plugin~Create Pipeline resource'),\n      value: CREATE_PIPELINE_RESOURCE,\n    },\n    ...availableResources.map(\n      (resource): FormSelectFieldOption => {\n        const resourceName = resource.metadata.name;\n        const url = _.find(resource.spec.params, ['name', 'url'])?.value || '';\n        const label = url.trim().length > 0 ? `${url} (${resourceName})` : resourceName;\n\n        return { label, value: resourceName };\n      },\n    ),\n  ];\n\n  if (!loaded) {\n    return <LoadingInline />;\n  }\n\n  return (\n    <FormSelectField\n      name={name}\n      className=\"odc-pipeline-resource-dropdown\"\n      options={options}\n      isDisabled={loaded && availableResources.length === 0}\n    />\n  );\n};\n\nexport default PipelineResourceDropdown;\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport {\n  associateServiceAccountToSecret,\n  getSecretAnnotations,\n} from '../../../../utils/pipeline-utils';\nimport { SecretAnnotationId } from '../../const';\nimport SecretForm from './SecretForm';\nimport SecretsList from './SecretsList';\nimport { CommonPipelineModalFormikValues } from './types';\nimport { advancedSectionValidationSchema } from './validation-utils';\n\nimport './PipelineSecretSection.scss';\n\nconst initialValues = {\n  secretName: '',\n  annotations: { key: SecretAnnotationId.Image, value: '' },\n  type: SecretType.dockerconfigjson,\n  formData: {},\n};\n\nconst PipelineSecretSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [secretOpenField] = useField<boolean>('secretOpen');\n  const {\n    setFieldValue,\n    values: { namespace },\n  } = useFormikContext<CommonPipelineModalFormikValues>();\n\n  const handleSubmit = (values, actions) => {\n    const newSecret = {\n      apiVersion: SecretModel.apiVersion,\n      kind: SecretModel.kind,\n      metadata: {\n        name: values.secretName,\n        namespace,\n        annotations: getSecretAnnotations(values.annotations),\n      },\n      type: values.type,\n      stringData: values.formData,\n    };\n    return k8sCreate(SecretModel, newSecret)\n      .then((resp) => {\n        setFieldValue(secretOpenField.name, false);\n        associateServiceAccountToSecret(\n          resp,\n          namespace,\n          values.annotations.key === SecretAnnotationId.Image,\n        );\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  const handleReset = (values, actions) => {\n    actions.resetForm({ values: initialValues, status: {} });\n    setFieldValue(secretOpenField.name, false);\n  };\n\n  return (\n    <ExpandCollapse\n      textExpanded={t('pipelines-plugin~Hide credential options')}\n      textCollapsed={t('pipelines-plugin~Show credential options')}\n    >\n      <div className=\"odc-pipeline-secret-section\">\n        <p>\n          {t(\n            'pipelines-plugin~The following secrets are available for all pipelines in this namespace to authenticate to the specified Git server or Image registry:',\n          )}\n        </p>\n        <div className=\"odc-pipeline-secret-section__secrets\">\n          <SecretsList namespace={namespace} />\n          {secretOpenField.value ? (\n            <div className=\"odc-pipeline-secret-section__secret-form\">\n              <Formik\n                initialValues={initialValues}\n                validationSchema={advancedSectionValidationSchema()}\n                onSubmit={handleSubmit}\n                onReset={handleReset}\n              >\n                {(formikProps) => <SecretForm {...formikProps} />}\n              </Formik>\n            </div>\n          ) : (\n            <Button\n              variant=\"link\"\n              onClick={() => {\n                setFieldValue(secretOpenField.name, true);\n              }}\n              className=\"odc-pipeline-secret-section__secret-action\"\n              icon={<PlusCircleIcon />}\n            >\n              {t('pipelines-plugin~Add Secret')}\n            </Button>\n          )}\n        </div>\n      </div>\n    </ExpandCollapse>\n  );\n};\n\nexport default PipelineSecretSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  SecretType,\n  BasicAuthSubform,\n  SSHAuthSubform,\n  CreateConfigSubform,\n} from '@console/internal/components/secrets/create-secret';\nimport { ButtonBar } from '@console/internal/components/utils';\nimport { DropdownField, InputField, ActionGroupWithIcons } from '@console/shared';\nimport { SecretAnnotationId } from '../../const';\nimport './SecretForm.scss';\n\nconst renderSecretForm = (\n  type: SecretType,\n  stringData: {\n    [key: string]: any;\n  },\n  onDataChanged: (value: string) => void,\n) => {\n  switch (type) {\n    case SecretType.basicAuth:\n      return (\n        <BasicAuthSubform onChange={onDataChanged} stringData={stringData[SecretType.basicAuth]} />\n      );\n    case SecretType.sshAuth:\n      return (\n        <SSHAuthSubform onChange={onDataChanged} stringData={stringData[SecretType.sshAuth]} />\n      );\n    case SecretType.dockerconfigjson:\n      return (\n        <CreateConfigSubform\n          onChange={onDataChanged}\n          stringData={stringData[SecretType.dockerconfigjson]}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\ninterface SecretFormValues {\n  secretName: string;\n  type: SecretType;\n  annotations: {\n    key: SecretAnnotationId;\n    value: string; // url\n  };\n  formData: any;\n}\n\nconst SecretForm: React.FC<FormikProps<SecretFormValues>> = ({\n  values,\n  setFieldValue,\n  setFieldTouched,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n}) => {\n  const { t } = useTranslation();\n  const [stringData, setStringData] = React.useState({\n    [SecretType.basicAuth]: {},\n    [SecretType.sshAuth]: {},\n    [SecretType.dockerconfigjson]: {},\n  });\n\n  const secretTypes = React.useMemo<Record<string, string>>(\n    () => ({\n      [SecretAnnotationId.Git]: t('pipelines-plugin~Git Server'),\n      [SecretAnnotationId.Image]: t('pipelines-plugin~Image Registry'),\n    }),\n    [t],\n  );\n\n  const authTypes = React.useMemo<Record<string, string>>(() => {\n    switch (values.annotations.key) {\n      case SecretAnnotationId.Git:\n        return {\n          [SecretType.basicAuth]: t('pipelines-plugin~Basic Authentication'),\n          [SecretType.sshAuth]: t('pipelines-plugin~SSH Key'),\n        };\n      case SecretAnnotationId.Image:\n        return {\n          [SecretType.basicAuth]: t('pipelines-plugin~Basic Authentication'),\n          [SecretType.dockerconfigjson]: t('pipelines-plugin~Image Registry Credentials'),\n        };\n      default:\n        return {};\n    }\n  }, [values.annotations.key, t]);\n\n  const clearServerURL = React.useCallback(() => {\n    setFieldValue('annotations', {\n      key: values.annotations.key,\n      value: '', // clear url\n    });\n    setFieldTouched('annotations', false);\n  }, [setFieldTouched, setFieldValue, values.annotations.key]);\n\n  React.useEffect(() => {\n    const availableAuthTypes = Object.keys(authTypes);\n    if (!availableAuthTypes.includes(values.type)) {\n      setFieldValue('type', SecretType.basicAuth);\n      clearServerURL();\n    }\n  }, [authTypes, values.type, setFieldValue, clearServerURL]);\n\n  // Uses a memo instead of const outside of the function so that we can add i18n right here\n  const helpText = React.useMemo(\n    () => ({\n      [SecretType.dockerconfigjson]: t(\n        'pipelines-plugin~The base server url (e.g. https://quay.io/)',\n      ),\n      [SecretType.basicAuth]: t('pipelines-plugin~The base server url (e.g. https://github.com)'),\n      [SecretType.sshAuth]: t(\n        'pipelines-plugin~Server hostname without schema or path (e.g. github.com)',\n      ),\n    }),\n    [t],\n  );\n\n  const setValues = (type: SecretType, data) => {\n    if (type === SecretType.dockerconfigjson) {\n      setFieldValue('formData', _.mapValues({ '.dockerconfigjson': data[type] }, JSON.stringify));\n    } else {\n      setFieldValue('formData', data[type]);\n    }\n    if (values.type !== type) {\n      clearServerURL();\n    }\n  };\n\n  const onDataChanged = (value: string) => {\n    setStringData((prevState) => {\n      setValues(values.type, { ...prevState, [values.type]: value });\n      return { ...prevState, [values.type]: value };\n    });\n  };\n\n  return (\n    <div className=\"odc-secret-form\">\n      <h1 className=\"co-section-heading-tertiary odc-secret-form__title\">\n        {t('pipelines-plugin~Create Secret')}\n      </h1>\n      <div className=\"form-group\">\n        <InputField\n          type={TextInputTypes.text}\n          name=\"secretName\"\n          label={t('pipelines-plugin~Secret name')}\n          helpText={t('pipelines-plugin~Unique name of the new secret.')}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <DropdownField\n          name=\"annotations.key\"\n          label={t('pipelines-plugin~Access to')}\n          helpText={t('pipelines-plugin~Designate provider to be authenticated.')}\n          items={secretTypes}\n          fullWidth\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <DropdownField\n          name=\"type\"\n          label={t('pipelines-plugin~Authentication type')}\n          items={authTypes}\n          title={authTypes[values.type]}\n          onChange={(type: SecretType) => setValues(type, stringData)}\n          fullWidth\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <InputField\n          name=\"annotations.value\"\n          label={t('pipelines-plugin~Server URL')}\n          helpText={helpText[values.type]}\n          type={TextInputTypes.text}\n          required\n        />\n      </div>\n      {renderSecretForm(values.type, stringData, onDataChanged)}\n      <ButtonBar errorMessage={status?.submitError} inProgress={isSubmitting}>\n        <ActionGroupWithIcons onSubmit={handleSubmit} onClose={handleReset} />\n      </ButtonBar>\n    </div>\n  );\n};\n\nexport default SecretForm;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport {\n  ResourceLink,\n  Firehose,\n  FirehoseResult,\n  FirehoseResource,\n} from '@console/internal/components/utils';\nimport { SecretModel, ServiceAccountModel } from '@console/internal/models';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { SecondaryStatus } from '@console/shared';\nimport { ServiceAccountType } from '../../../../utils/pipeline-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport './SecretsList.scss';\n\ntype SecretsProps = {\n  secrets?: FirehoseResult<SecretKind[]>;\n  serviceaccounts?: FirehoseResult<ServiceAccountType>;\n};\n\ntype SecretsListProps = {\n  namespace: string;\n};\n\nconst secretTypes = [SecretType.dockerconfigjson, SecretType.basicAuth, SecretType.sshAuth];\n\nconst Secrets: React.FC<SecretsProps> = ({ secrets, serviceaccounts }) => {\n  const { t } = useTranslation();\n  const serviceAccountSecrets = _.map(serviceaccounts.data.secrets, 'name');\n  const filterData = _.filter(\n    secrets.data,\n    (secret) =>\n      _.includes(secretTypes, secret.type) &&\n      _.includes(serviceAccountSecrets, secret.metadata.name),\n  );\n  const sortedFilterData = _.sortBy(filterData, (data) => data.metadata.name);\n\n  return (\n    <div className=\"odc-secrets-list\">\n      {sortedFilterData.map((secret) => {\n        return (\n          <ResourceLink\n            key={secret.metadata.uid}\n            kind={SecretModel.kind}\n            name={secret.metadata.name}\n            namespace={secret.metadata.namespace}\n            linkTo={false}\n          />\n        );\n      })}\n      {_.isEmpty(sortedFilterData) && (\n        <SecondaryStatus status={t('pipelines-plugin~No secrets found')} />\n      )}\n    </div>\n  );\n};\n\nconst SecretsList: React.FC<SecretsListProps> = ({ namespace }) => {\n  const resources: FirehoseResource[] = [\n    {\n      isList: true,\n      namespace,\n      kind: SecretModel.kind,\n      prop: SecretModel.plural,\n    },\n    {\n      isList: false,\n      namespace,\n      kind: ServiceAccountModel.kind,\n      prop: ServiceAccountModel.plural,\n      name: PIPELINE_SERVICE_ACCOUNT,\n    },\n  ];\n\n  return (\n    <Firehose resources={resources}>\n      <Secrets />\n    </Firehose>\n  );\n};\n\nexport default SecretsList;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { RedExclamationCircleIcon, WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ResourceDropdown, getFieldId, useFormikValidationFix } from '@console/shared';\nimport MultipleKeySelector from './MultipleKeySelector';\n\ninterface MultipleResourceKeySelectorProps {\n  label: string;\n  resourceModel: K8sKind;\n  required?: boolean;\n  resourceNameField: string;\n  resourceKeysField: string;\n  addString?: string;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst MultipleResourceKeySelector: React.FC<StateProps & MultipleResourceKeySelectorProps> = ({\n  label,\n  namespace,\n  resourceModel,\n  required,\n  resourceNameField,\n  resourceKeysField,\n  addString,\n}) => {\n  const { t } = useTranslation();\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [field, { touched, error }] = useField(resourceNameField);\n  const isValid = !(touched && error);\n  const fieldId = getFieldId(resourceNameField, 'res-dropdown');\n  const [keys, setKeys] = React.useState({});\n\n  useFormikValidationFix(field.value);\n\n  const resource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: resourceModel.kind,\n      isList: true,\n      namespace,\n      optional: true,\n    }),\n    [namespace, resourceModel.kind],\n  );\n\n  const [resources, loaded, loadError] = useK8sWatchResource(resource);\n\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n\n  const generateKeys = (resourceName: string) => {\n    const selectedResource: K8sResourceKind = _.find(resources, (res) => {\n      return _.get(res, 'metadata.name') === resourceName;\n    });\n    const keyMap = selectedResource?.data ?? {};\n    const itemKeys = Object.keys(keyMap).reduce((acc, key) => ({ ...acc, [key]: key }), {});\n    setKeys(itemKeys);\n  };\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={label}\n      className=\"odc-multiple-key-selector\"\n      isRequired={required}\n    >\n      <ResourceDropdown\n        resources={[\n          { kind: resourceModel.kind, loaded, loadError, data: resources as K8sResourceKind[] },\n        ]}\n        loaded={loaded}\n        loadError={loadError}\n        dataSelector={['metadata', 'name']}\n        selectedKey={field.value}\n        placeholder={t('pipelines-plugin~Select a {{label}}', { label: t(resourceModel.labelKey) })}\n        autocompleteFilter={autocompleteFilter}\n        dropDownClassName={cx({ 'dropdown--full-width': true })}\n        onChange={(value: string) => {\n          setFieldValue(resourceKeysField, undefined);\n          setFieldValue(resourceNameField, value);\n          setFieldTouched(resourceNameField, true);\n          generateKeys(value);\n        }}\n        showBadge\n      />\n      {field.value && !_.isEmpty(keys) && (\n        <MultipleKeySelector name={resourceKeysField} keys={keys} addString={addString} />\n      )}\n\n      {!isValid && (\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n              {error}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      )}\n    </FormGroup>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, MultipleResourceKeySelectorProps>(mapStateToProps)(\n  MultipleResourceKeySelector,\n);\n","import * as React from 'react';\nimport { TextInputTypes, Button, FormGroup, Tooltip, Flex, FlexItem } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { FieldArray, useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DropdownField, InputField, getFieldId, useFormikValidationFix } from '@console/shared';\nimport './MultipleKeySelector.scss';\n\ninterface MultipleKeySelectorProps {\n  name: string;\n  keys: { [key: string]: string };\n  addString?: string;\n  tooltip?: string;\n}\n\nconst MultipleKeySelector: React.FC<MultipleKeySelectorProps> = ({\n  name,\n  keys,\n  addString,\n  tooltip,\n}) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<FormikValues>();\n  const items = _.get(values, name, []);\n  useFormikValidationFix(items);\n  return (\n    <FieldArray\n      name={name}\n      key=\"multiple-key-selector\"\n      render={({ push, remove }) => {\n        return (\n          <FormGroup\n            fieldId={getFieldId(name, 'multiple-key-selector')}\n            label={t('pipelines-plugin~Items')}\n            className=\"odc-multiple-key-selector\"\n          >\n            {items.length > 0 &&\n              items.map((item, index) => {\n                const fieldKey = `${name}.${index}.${item.key}`;\n                return (\n                  <div className=\"form-group odc-multiple-key-selector__item\" key={fieldKey}>\n                    <Flex direction={{ default: 'column', lg: 'row' }}>\n                      <FlexItem grow={{ default: 'grow' }}>\n                        <DropdownField\n                          name={`${name}.${index}.key`}\n                          title={t('pipelines-plugin~Select a key')}\n                          items={keys}\n                          fullWidth\n                        />\n                      </FlexItem>\n                      <FlexItem grow={{ default: 'grow' }}>\n                        <InputField\n                          name={`${name}.${index}.path`}\n                          type={TextInputTypes.text}\n                          placeholder={t('pipelines-plugin~Enter a path')}\n                        />\n                      </FlexItem>\n                    </Flex>\n                    <div className=\"odc-multiple-key-selector__deleteButton\">\n                      <Tooltip content={tooltip || t('pipelines-plugin~Remove')}>\n                        <MinusCircleIcon aria-hidden=\"true\" onClick={() => remove(index)} />\n                      </Tooltip>\n                    </div>\n                  </div>\n                );\n              })}\n            <Button\n              variant=\"link\"\n              onClick={() => push({ key: '', path: '' })}\n              icon={<PlusCircleIcon />}\n              isInline\n            >\n              {addString || t('pipelines-plugin~Add items')}\n            </Button>\n          </FormGroup>\n        );\n      }}\n    />\n  );\n};\n\nexport default MultipleKeySelector;\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ResourceDropdownField } from '@console/shared';\nimport './PVCDropdown.scss';\n\ninterface PVCDropdownProps {\n  name: string;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst PVCDropdown: React.FC<PVCDropdownProps & StateProps> = ({ name, namespace }) => {\n  const { t } = useTranslation();\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n  const resources = [\n    {\n      isList: true,\n      kind: PersistentVolumeClaimModel.kind,\n      namespace,\n      prop: PersistentVolumeClaimModel.id,\n      optional: true,\n    },\n  ];\n  return (\n    <ResourceDropdownField\n      name={name}\n      className=\"odc-pvc-dropdown\"\n      resources={resources}\n      dataSelector={['metadata', 'name']}\n      placeholder={t('pipelines-plugin~Select a PVC')}\n      autocompleteFilter={autocompleteFilter}\n      fullWidth\n      showBadge\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, PVCDropdownProps>(mapStateToProps)(PVCDropdown);\n","import * as React from 'react';\nimport { FormGroup, Alert } from '@patternfly/react-core';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { AccessModeSelector } from '@console/app/src/components/access-modes/access-mode';\nimport { RadioInput } from '@console/internal/components//radio';\nimport {\n  getVolumeModeRadios,\n  initialAccessModes,\n  dropdownUnits,\n  getAccessModeForProvisioner,\n} from '@console/internal/components/storage/shared';\nimport { RequestSizeInput, ExpandCollapse } from '@console/internal/components/utils';\nimport { StorageClassDropdown } from '@console/internal/components/utils/storage-class-dropdown';\nimport { useFormikValidationFix } from '@console/shared/src/hooks';\nimport { cephStorageProvisioners } from '@console/shared/src/utils';\n\nimport './VolumeClaimTemplateForm.scss';\n\ninterface VolumeClaimTemplateFormProps {\n  name: string;\n  initialSizeValue?: string;\n  initialSizeUnit?: string;\n  initialVolumeMode?: string;\n}\n\ninterface RequestSize {\n  value: string;\n  unit: string;\n}\n\nconst VolumeClaimTemplateForm: React.FC<VolumeClaimTemplateFormProps> = ({\n  name,\n  initialSizeValue = '1',\n  initialSizeUnit = 'Gi',\n  initialVolumeMode = 'Filesystem',\n}) => {\n  const { t } = useTranslation();\n  const [field] = useField(name);\n  const initAccessModeHelp = t('pipelines-plugin~Permissions to the mounted drive.');\n  const [accessModeHelp, setAccessModeHelp] = React.useState(initAccessModeHelp);\n  const { setFieldValue, setFieldTouched, errors } = useFormikContext<FormikValues>();\n  const [allowedAccessModes, setAllowedAccessModes] = React.useState<string[]>(initialAccessModes);\n  const [volumeMode, setVolumeMode] = React.useState(initialVolumeMode);\n  const [accessMode, setAccessMode] = React.useState('ReadWriteOnce');\n  const [requestSizeError, setRequestSizeError] = React.useState(null);\n  const [requestSizeValue, setRequestSizeValue] = React.useState(initialSizeValue);\n  const [requestSizeUnit, setRequestSizeUnit] = React.useState(initialSizeUnit);\n  const [storageProvisioner, setStorageProvisioner] = React.useState('');\n  const [storageClass, setStorageClass] = React.useState('');\n  useFormikValidationFix(field.value);\n\n  const handleVolumeMode: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    setVolumeMode(event.currentTarget.value);\n  };\n\n  const handleStorageClass = (updatedStorageClass): void => {\n    const provisioner: string = updatedStorageClass?.provisioner || '';\n    // if the provisioner is unknown or no storage class selected, user should be able to set any access mode\n    const modes = getAccessModeForProvisioner(provisioner);\n    // setting message to display for various modes when a storage class of a know provisioner is selected\n    const displayMessage = modes\n      ? t('pipelines-plugin~Access mode is set by storage class and cannot be changed')\n      : t('pipelines-plugin~Permissions to the mounted drive');\n    setAccessMode('ReadWriteOnce');\n    setAccessModeHelp(displayMessage);\n    // setting accessMode to default with the change to Storage Class selection\n    setAllowedAccessModes(modes);\n    setStorageClass(updatedStorageClass?.metadata?.name);\n    setStorageProvisioner(provisioner);\n    if (storageProvisioner.includes(cephStorageProvisioners[1])) {\n      setVolumeMode('Filesystem');\n    }\n  };\n\n  const handleRequestSizeChange = (size: RequestSize): void => {\n    const { value, unit } = size;\n    setRequestSizeValue(value);\n    setRequestSizeUnit(unit);\n  };\n\n  React.useEffect(() => {\n    setRequestSizeError(null);\n    const volumeClaimTemplate = {\n      spec: {\n        accessModes: [accessMode],\n        storageClassName: storageClass,\n        volumeMode,\n        resources: {\n          requests: { storage: `${requestSizeValue}${requestSizeUnit}` },\n        },\n      },\n    };\n    if (!requestSizeValue || parseInt(requestSizeValue, 10) < 1) {\n      volumeClaimTemplate.spec.resources.requests.storage = null;\n      setRequestSizeError(t('pipelines-plugin~Size must be an integer greater than 0.'));\n    }\n\n    setFieldValue(name, volumeClaimTemplate);\n    setFieldTouched(name);\n  }, [\n    volumeMode,\n    accessMode,\n    requestSizeValue,\n    requestSizeUnit,\n    storageClass,\n    name,\n    setFieldTouched,\n    setFieldValue,\n    t,\n  ]);\n\n  const helpText = !requestSizeError\n    ? t(\n        'pipelines-plugin~This will create a PersistentVolumeClaim with a size of {{requestSizeValue}} {{requestSizeUnit}}.',\n        { requestSizeValue, requestSizeUnit },\n      )\n    : t('pipelines-plugin~This will create a PersistentVolumeClaim.');\n\n  return (\n    <FormGroup fieldId={name}>\n      {errors[name] && <Alert isInline variant=\"danger\" title={t('pipelines-plugin~Required')} />}\n      <p className=\"help-block\">{helpText}</p>\n      <ExpandCollapse\n        textExpanded={t('pipelines-plugin~Hide VolumeClaimTemplate options')}\n        textCollapsed={t('pipelines-plugin~Show VolumeClaimTemplate options')}\n      >\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <StorageClassDropdown\n            onChange={handleStorageClass}\n            id=\"storageclass-dropdown\"\n            data-test=\"storageclass-dropdown\"\n            describedBy=\"storageclass-dropdown-help\"\n            required={false}\n            name=\"storageClass\"\n          />\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <AccessModeSelector\n            onChange={setAccessMode}\n            provisioner={storageProvisioner}\n            loaded\n            availableAccessModes={allowedAccessModes}\n            description={accessModeHelp}\n            ignoreReadOnly\n          />\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <label className=\"control-label co-required\" htmlFor=\"request-size-input\">\n            {t('pipelines-plugin~Size')}\n          </label>\n          <RequestSizeInput\n            name=\"requestSize\"\n            required\n            onChange={handleRequestSizeChange}\n            defaultRequestSizeUnit={requestSizeUnit}\n            defaultRequestSizeValue={requestSizeValue}\n            dropdownUnits={dropdownUnits}\n            describedBy=\"request-size-help\"\n            inputID=\"request-size-input\"\n            data-test-id=\"pvc-size-input\"\n          />\n          {requestSizeError ? (\n            <p className=\"pf-v5-c-form__helper-text pf-m-error\">{requestSizeError}</p>\n          ) : (\n            <p className=\"help-block\">{t('pipelines-plugin~Desired storage capacity')}</p>\n          )}\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <label className=\"control-label\" htmlFor=\"volume-mode\">\n            {t('pipelines-plugin~Volume Mode')}\n          </label>\n          <FormGroup fieldId=\"volumeMode\" data-test-id=\"volumeModeRadio\">\n            {getVolumeModeRadios().map((radio) => (\n              <RadioInput\n                {...radio}\n                key={radio.value}\n                onChange={handleVolumeMode}\n                inline\n                checked={radio.value === volumeMode}\n                name={`${name}.volumeMode`}\n              />\n            ))}\n          </FormGroup>\n        </div>\n      </ExpandCollapse>\n    </FormGroup>\n  );\n};\n\nexport default VolumeClaimTemplateForm;\n","import * as React from 'react';\nimport { FormikProps } from 'formik';\nimport { useAddTriggerParams } from '../../../shared/common/auto-complete/autoCompleteValueParsers';\nimport PipelineParameterSection from '../common/PipelineParameterSection';\nimport PipelineResourceSection from '../common/PipelineResourceSection';\nimport PipelineWorkspacesSection from '../common/PipelineWorkspacesSection';\nimport TriggerBindingSection from './TriggerBindingSection';\nimport { AddTriggerFormValues } from './types';\n\nconst AddTriggerForm: React.FC<FormikProps<AddTriggerFormValues>> = () => {\n  const autoCompleteValues: string[] = useAddTriggerParams();\n\n  return (\n    <>\n      <TriggerBindingSection />\n      <PipelineParameterSection autoCompleteValues={autoCompleteValues} />\n      <PipelineResourceSection />\n      <PipelineWorkspacesSection />\n    </>\n  );\n};\n\nexport default AddTriggerForm;\n","import * as React from 'react';\nimport { Badge, ExpandableSection, FormHelperText } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { TriggerBindingKind, TriggerBindingParam } from '../../resource-types';\nimport { usePipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport TriggerBindingSelector from './TriggerBindingSelector';\nimport { AddTriggerFormValues } from './types';\n\nimport './TriggerBindingSection.scss';\n\nconst TriggerBindingSection: React.FC = () => {\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<AddTriggerFormValues>();\n  const [bindingVars, setBindingVars] = React.useState<TriggerBindingParam[]>(null);\n\n  // Starting with Pipeline Operator 1.1 (Tekton Triggers 0.6) we should use a new param name.\n  const pipelineOperatorVersion = usePipelineOperatorVersion(values.namespace);\n  const paramPrefix =\n    pipelineOperatorVersion?.major === 0 ||\n    (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n      ? 'params.'\n      : 'tt.params.';\n\n  const updateTriggerBindingVariables = React.useCallback(\n    (selectedTriggerBinding: TriggerBindingKind) => {\n      setBindingVars(selectedTriggerBinding.spec.params);\n      setFieldValue('triggerBinding.resource', selectedTriggerBinding);\n    },\n    [setFieldValue],\n  );\n\n  return (\n    <div className=\"odc-trigger-binding-section\">\n      <FormSection title={t('pipelines-plugin~Webhook')} fullWidth>\n        <TriggerBindingSelector\n          description={t(\n            'pipelines-plugin~Select your Git provider type to be associated with the Trigger.',\n          )}\n          label={t('pipelines-plugin~Git provider type')}\n          onChange={updateTriggerBindingVariables}\n        />\n        {bindingVars && (\n          <ExpandableSection\n            toggleTextExpanded={t('pipelines-plugin~Hide variables')}\n            toggleTextCollapsed={t('pipelines-plugin~Show variables')}\n          >\n            <div className=\"odc-trigger-binding-section__variable-container\">\n              <p className=\"odc-trigger-binding-section__variable-descriptor\">\n                {t(\n                  'pipelines-plugin~The following variables can be used in the Parameters or when created new Resources.',\n                )}\n              </p>\n              {bindingVars.map(({ name }) => (\n                <Badge key={name} className=\"odc-trigger-binding-section__variable-badge\" isRead>\n                  {name}\n                </Badge>\n              ))}\n            </div>\n            <FormHelperText className=\"odc-trigger-binding-section__variable-help-text\">\n              {t('pipelines-plugin~Use this format when you reference variables in this form: ')}\n              <code className=\"co-code\">{`$(${paramPrefix}parameter)`}</code>\n            </FormHelperText>\n          </ExpandableSection>\n        )}\n      </FormSection>\n    </div>\n  );\n};\n\nexport default TriggerBindingSection;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport { referenceForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ResourceDropdownField } from '@console/shared';\nimport { ClusterTriggerBindingModel, TriggerBindingModel } from '../../../../models';\nimport { TriggerBindingKind } from '../../resource-types';\nimport { AddTriggerFormValues } from './types';\n\ntype TriggerBindingSelectorProps = {\n  description?: string;\n  label?: string;\n  onChange: (selectedTriggerBinding: TriggerBindingKind) => void;\n};\n\nconst KEY_DIVIDER = '~';\n\nconst TriggerBindingSelector: React.FC<TriggerBindingSelectorProps> = (props) => {\n  const { t } = useTranslation();\n  const { description, label = t(TriggerBindingModel.labelKey), onChange } = props;\n  const { values } = useFormikContext<AddTriggerFormValues>();\n  const autoCompleteFilter = (strText: string, item: React.ReactElement): boolean =>\n    fuzzy(strText, item?.props?.name);\n  const onTriggerChange = (key: string, value: string, selectedResource: TriggerBindingKind) => {\n    if (selectedResource) {\n      onChange && onChange(selectedResource);\n    }\n  };\n\n  return (\n    <ResourceDropdownField\n      name=\"triggerBinding.name\"\n      resources={[\n        {\n          isList: true,\n          namespace: values.namespace,\n          kind: referenceForModel(TriggerBindingModel),\n          prop: 'triggerBindingData',\n          optional: true,\n        },\n        {\n          isList: true,\n          kind: referenceForModel(ClusterTriggerBindingModel),\n          prop: 'clusterTriggerBindingData',\n          optional: true,\n        },\n      ]}\n      autocompleteFilter={autoCompleteFilter}\n      dataSelector={['metadata', 'name']}\n      customResourceKey={(key: string, resource: K8sResourceKind) => {\n        const { kind } = resource;\n        const order = kind === ClusterTriggerBindingModel.kind ? 2 : 1;\n        return `${order}${KEY_DIVIDER}${key}`;\n      }}\n      fullWidth\n      helpText={description}\n      label={label}\n      placeholder={t('pipelines-plugin~Select {{label}}', { label })}\n      title={t('pipelines-plugin~Select {{label}}', { label })}\n      showBadge\n      onChange={onTriggerChange}\n    />\n  );\n};\n\nexport default TriggerBindingSelector;\n","export const TRIGGER_BINDING_EMPTY = '#empty-trigger-binding#';\n","import * as React from 'react';\nimport { SortByDirection } from '@patternfly/react-table';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { Table } from '@console/internal/components/factory';\nimport { useUserSettings } from '@console/shared/src';\nimport { PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY } from '../../../const';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport { usePipelineOperatorVersion } from '../../pipelines/utils/pipeline-operator';\nimport { getPipelineRunVulnerabilities } from '../hooks/usePipelineRunVulnerabilities';\nimport PipelineRunHeader from './PipelineRunHeader';\nimport PipelineRunRow from './PipelineRunRow';\n\nimport './PipelineRunList.scss';\n\ntype PipelineRunListProps = {\n  namespace: string;\n  loaded?: boolean;\n  data?: PipelineRunKind[];\n  customData?: any;\n};\n\nexport const PipelineRunList: React.FC<PipelineRunListProps> = (props) => {\n  const { t } = useTranslation();\n  const { namespace, loaded, data, customData } = props;\n  const operatorVersion = usePipelineOperatorVersion(namespace);\n  const activePerspective = useActivePerspective()[0];\n  const [, setPreferredTab, preferredTabLoaded] = useUserSettings<string>(\n    PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY,\n    'pipelines',\n  );\n  React.useEffect(() => {\n    if (preferredTabLoaded && activePerspective === 'dev') {\n      setPreferredTab('pipeline-runs');\n    }\n  }, [activePerspective, preferredTabLoaded, setPreferredTab]);\n\n  const onRowsRendered = ({ stopIndex }) => {\n    if (loaded && stopIndex === data.length - 1) {\n      customData?.nextPage?.();\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~PipelineRuns')}</title>\n      </Helmet>\n      <Table\n        {...props}\n        aria-label={t(PipelineRunModel.labelPluralKey)}\n        defaultSortField=\"status.startTime\"\n        defaultSortOrder={SortByDirection.desc}\n        Header={PipelineRunHeader}\n        Row={PipelineRunRow}\n        customSorts={{\n          vulnerabilities: (obj: PipelineRunKind) => {\n            const scanResults = getPipelineRunVulnerabilities(obj);\n            if (!scanResults?.vulnerabilities) {\n              return -1;\n            }\n            // Expect no more than 999 of any one severity\n            return (\n              (scanResults.vulnerabilities.critical ?? 0) * 1000000000 +\n              (scanResults.vulnerabilities.high ?? 0) * 1000000 +\n              (scanResults.vulnerabilities.medium ?? 0) * 1000 +\n              (scanResults.vulnerabilities.low ?? 0)\n            );\n          },\n        }}\n        customData={{ operatorVersion }}\n        onRowsRendered={onRowsRendered}\n        virtualize\n      />\n    </>\n  );\n};\n\nexport default PipelineRunList;\n","import * as React from 'react';\nimport { PipelineRunKind } from '../../../types';\n\nconst SCAN_OUTPUT_SUFFIX = 'SCAN_OUTPUT';\n\nexport type ScanResults = {\n  vulnerabilities?: {\n    critical: number;\n    high: number;\n    medium: number;\n    low: number;\n  };\n};\n\nexport const getPipelineRunVulnerabilities = (pipelineRun: PipelineRunKind): ScanResults => {\n  const results = pipelineRun.status?.results || pipelineRun.status?.pipelineResults;\n  return results?.reduce((acc, result) => {\n    if (result.name?.endsWith(SCAN_OUTPUT_SUFFIX)) {\n      if (!acc.vulnerabilities) {\n        acc.vulnerabilities = { critical: 0, high: 0, medium: 0, low: 0 };\n      }\n      try {\n        const taskVulnerabilities = JSON.parse(result.value);\n        if (taskVulnerabilities.vulnerabilities) {\n          acc.vulnerabilities.critical += taskVulnerabilities.vulnerabilities.critical || 0;\n          acc.vulnerabilities.high += taskVulnerabilities.vulnerabilities.high || 0;\n          acc.vulnerabilities.medium += taskVulnerabilities.vulnerabilities.medium || 0;\n          acc.vulnerabilities.low += taskVulnerabilities.vulnerabilities.low || 0;\n        }\n      } catch (e) {\n        // ignore\n      }\n    }\n    return acc;\n  }, {} as ScanResults);\n};\n\nexport const usePipelineRunVulnerabilities = (pipelineRun: PipelineRunKind): ScanResults =>\n  React.useMemo(() => {\n    if (!pipelineRun) {\n      return null;\n    }\n\n    return getPipelineRunVulnerabilities(pipelineRun);\n  }, [pipelineRun]);\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = {\n  name: '',\n  namespace: '',\n  vulnerabilities: 'pf-m-hidden pf-m-visible-on-md',\n  status: 'pf-m-hidden pf-m-visible-on-sm',\n  taskStatus: 'pf-m-hidden pf-m-visible-on-lg',\n  started: 'pf-m-hidden pf-m-visible-on-lg',\n  duration: 'pf-m-hidden pf-m-visible-on-xl',\n  actions: Kebab.columnClass,\n};\n","module.exports = __webpack_public_path__ + \"assets/packages/pipelines-plugin/src/images/signed-badge.svg\";","import * as React from 'react';\nimport classNames from 'classnames';\nimport './HorizontalStackedBars.scss';\n\nexport type StackedValue = {\n  color: string;\n  name: string;\n  size: number;\n};\n\nexport type HorizontalStackedBarsProps = {\n  barGap?: number;\n  height?: number | string;\n  inline?: boolean;\n  values: StackedValue[];\n  width?: number | string;\n};\n\nconst HorizontalStackedBars: React.FC<HorizontalStackedBarsProps> = ({\n  barGap,\n  height,\n  inline,\n  values,\n  width,\n}) => {\n  return (\n    <div\n      className={classNames('odc-horizontal-stacked-bars', { 'is-inline': inline })}\n      style={{ height, width, ['--bar-gap' as any]: barGap && `${barGap}px` }}\n    >\n      <div className=\"odc-horizontal-stacked-bars__bars\">\n        {values.map(({ color, name, size }) => (\n          <div\n            key={name}\n            className=\"odc-horizontal-stacked-bars__data-bar\"\n            style={{\n              background: color,\n              flexGrow: size,\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HorizontalStackedBars;\n","import { PipelineKind, PipelineRunKind, TaskRunKind } from '../../../types';\nimport { getTaskStatus, TaskStatus } from '../../../utils/pipeline-augment';\nimport { usePipelineFromPipelineRun } from './usePipelineFromPipelineRun';\n\nexport const useTaskStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const pipeline: PipelineKind = usePipelineFromPipelineRun(pipelineRun);\n  return getTaskStatus(pipelineRun, pipeline, taskRuns);\n};\n","import * as React from 'react';\nimport { ComputedStatus } from '../../../types';\nimport { TaskStatus, getRunStatusColor } from '../../../utils/pipeline-augment';\nimport './TaskStatusTooltip.scss';\n\ninterface TaskStatusToolTipProps {\n  taskStatus: TaskStatus;\n}\n\nconst TaskStatusToolTip: React.FC<TaskStatusToolTipProps> = ({ taskStatus }) => {\n  return (\n    <div className=\"odc-task-status-tooltip\">\n      {Object.keys(ComputedStatus).map((status) => {\n        const { message, pftoken } = getRunStatusColor(status);\n        return taskStatus[status] ? (\n          <React.Fragment key={status}>\n            <div\n              className=\"odc-task-status-tooltip__legend\"\n              style={{ background: pftoken.value }}\n            />\n            <div>\n              {status === ComputedStatus.PipelineNotStarted ||\n              status === ComputedStatus.FailedToStart\n                ? message\n                : `${taskStatus[status]} ${message}`}\n            </div>\n          </React.Fragment>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport default TaskStatusToolTip;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { coFetchText } from '@console/internal/co-fetch';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { PodModel } from '@console/internal/models';\nimport { resourceURL } from '@console/internal/module/k8s';\n\ntype LogSnippetFromPodProps = {\n  children: (logSnippet: string) => React.ReactNode;\n  containerName: string;\n  namespace: string;\n  podName: string;\n  title: string;\n};\n\nconst LogSnippetFromPod: React.FC<LogSnippetFromPodProps> = ({\n  children,\n  containerName,\n  namespace,\n  podName,\n  title,\n}) => {\n  const { t } = useTranslation();\n  const [logSnippet, setLogSnippet] = React.useState<string>(null);\n  const [logError, setLogError] = React.useState<string>(null);\n\n  React.useEffect(() => {\n    const urlOpts = {\n      ns: namespace,\n      name: podName,\n      path: 'log',\n      queryParams: {\n        container: containerName,\n        tailLines: '5',\n      },\n    };\n    const watchURL = resourceURL(PodModel, urlOpts);\n    coFetchText(watchURL)\n      .then((logContent: string) => {\n        setLogSnippet(logContent);\n      })\n      .catch((error) => {\n        setLogError(error?.message || t('pipelines-plugin~Unknown error retrieving logs'));\n      });\n  }, [containerName, namespace, podName, t]);\n\n  if (logError) {\n    return (\n      <Alert isInline title={title} variant=\"danger\">\n        {logError}\n      </Alert>\n    );\n  }\n\n  if (!logSnippet) {\n    return <LoadingInline />;\n  }\n\n  return <>{children(logSnippet)}</>;\n};\n\nexport default LogSnippetFromPod;\n","import * as React from 'react';\nimport {\n  CriticalRiskIcon,\n  AngleDoubleDownIcon,\n  AngleDoubleUpIcon,\n  EqualsIcon,\n} from '@patternfly/react-icons/dist/js/icons';\nimport { global_palette_blue_300 as blueColor } from '@patternfly/react-tokens/dist/js/global_palette_blue_300';\nimport { global_palette_gold_400 as goldColor } from '@patternfly/react-tokens/dist/js/global_palette_gold_400';\nimport { global_palette_orange_300 as orangeColor } from '@patternfly/react-tokens/dist/js/global_palette_orange_300';\nimport { global_palette_red_200 as redColor } from '@patternfly/react-tokens/dist/js/global_palette_red_200';\nimport i18n from 'i18next';\nimport { PipelineRunKind } from '../../../types';\nimport { usePipelineRunVulnerabilities } from '../hooks/usePipelineRunVulnerabilities';\n\nimport './PipelineRunVulnerabilities.scss';\n\nexport const CriticalIcon = () => <CriticalRiskIcon title=\"Critical\" color={redColor.value} />;\nexport const HighIcon = () => <AngleDoubleUpIcon title=\"High\" color={orangeColor.value} />;\nexport const MediumIcon = () => <EqualsIcon title=\"Medium\" color={goldColor.value} />;\nexport const LowIcon = () => <AngleDoubleDownIcon title=\"Low\" color={blueColor.value} />;\n\ntype PipelineRunVulnerabilitiesProps = {\n  pipelineRun: PipelineRunKind;\n  condensed?: boolean;\n};\n\nconst PipelineRunVulnerabilities: React.FC<PipelineRunVulnerabilitiesProps> = ({\n  pipelineRun,\n  condensed,\n}) => {\n  const scanResults = usePipelineRunVulnerabilities(pipelineRun);\n\n  return scanResults?.vulnerabilities ? (\n    <div\n      className=\"opp-vulnerabilities\"\n      data-test={`${pipelineRun?.metadata?.name}-vulnerabilities`}\n    >\n      <div className=\"opp-vulnerabilities__severity\">\n        <span className=\"opp-vulnerabilities__severity-status\">\n          <CriticalIcon />\n          {!condensed ? i18n.t('pipelines-plugin~Critical') : null}\n        </span>\n        <span className=\"opp-vulnerabilities__severity-count\">\n          {scanResults.vulnerabilities.critical}\n        </span>\n      </div>\n      <div className=\"opp-vulnerabilities__severity\">\n        <span className=\"opp-vulnerabilities__severity-status\">\n          <HighIcon />\n          {!condensed ? i18n.t('pipelines-plugin~High') : null}\n        </span>\n        <span className=\"opp-vulnerabilities__severity-count\">\n          {scanResults.vulnerabilities.high}\n        </span>\n      </div>\n      <div className=\"opp-vulnerabilities__severity\">\n        <span className=\"opp-vulnerabilities__severity-status\">\n          <MediumIcon />\n          {!condensed ? i18n.t('pipelines-plugin~Medium') : null}\n        </span>\n        <span className=\"opp-vulnerabilities__severity-count\">\n          {scanResults.vulnerabilities.medium}\n        </span>\n      </div>\n      <div className=\"opp-vulnerabilities__severity\">\n        <span className=\"opp-vulnerabilities__severity-status\">\n          <LowIcon />\n          {!condensed ? i18n.t('pipelines-plugin~Low') : null}\n        </span>\n        <span className=\"opp-vulnerabilities__severity-count\">\n          {scanResults.vulnerabilities.low}\n        </span>\n      </div>\n    </div>\n  ) : (\n    <div>-</div>\n  );\n};\n\nexport default PipelineRunVulnerabilities;\n","import * as React from 'react';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { CompressIcon, DownloadIcon, ExpandIcon } from '@patternfly/react-icons/dist/js/icons';\nimport classNames from 'classnames';\nimport { saveAs } from 'file-saver';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PodKind, WatchK8sResource } from '@console/internal/module/k8s';\nimport { useFullscreen } from '@console/shared';\nimport { TaskRunKind } from '../../../types';\nimport { MultiStreamLogs } from './MultiStreamLogs';\nimport { TektonTaskRunLog } from './TektonTaskRunLog';\n\ntype LogsWrapperComponentProps = {\n  taskName?: string;\n  downloadAllLabel?: string;\n  onDownloadAll?: () => Promise<Error>;\n  taskRun?: TaskRunKind;\n  resource?: WatchK8sResource;\n};\n\nconst LogsWrapperComponent: React.FC<LogsWrapperComponentProps> = ({\n  resource,\n  taskRun,\n  taskName,\n  onDownloadAll,\n  downloadAllLabel = 'Download all',\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const resourceRef = React.useRef(null);\n  const [obj, loaded, error] = useK8sWatchResource<PodKind>(resource);\n  const [isFullscreen, fullscreenRef, fullscreenToggle] = useFullscreen<HTMLDivElement>();\n  const [downloadAllStatus, setDownloadAllStatus] = React.useState(false);\n  const currentLogGetterRef = React.useRef<() => string>();\n\n  if (loaded && !error && resource.name === obj.metadata.name) {\n    resourceRef.current = obj;\n  } else if (error) {\n    resourceRef.current = null;\n  }\n\n  const downloadLogs = () => {\n    if (!currentLogGetterRef.current) return;\n    const logString = currentLogGetterRef.current();\n    const blob = new Blob([logString], {\n      type: 'text/plain;charset=utf-8',\n    });\n    saveAs(blob, `${taskName}.log`);\n  };\n  const setLogGetter = React.useCallback((getter) => (currentLogGetterRef.current = getter), []);\n\n  const startDownloadAll = () => {\n    setDownloadAllStatus(true);\n    onDownloadAll()\n      .then(() => {\n        setDownloadAllStatus(false);\n      })\n      .catch((err: Error) => {\n        setDownloadAllStatus(false);\n        // eslint-disable-next-line no-console\n        console.warn(err.message || 'Error downloading logs.');\n      });\n  };\n\n  return (\n    <div ref={fullscreenRef} className=\"odc-multi-stream-logs\">\n      <Flex\n        className={(classNames as any)({\n          'odc-multi-stream-logs--fullscreen': isFullscreen,\n        })}\n      >\n        <FlexItem className=\"odc-multi-stream-logs__button\" align={{ default: 'alignRight' }}>\n          <Button variant=\"link\" onClick={downloadLogs} isInline>\n            <DownloadIcon className=\"odc-multi-stream-logs__icon\" />\n            {t('pipelines-plugin~Download')}\n          </Button>\n        </FlexItem>\n        <FlexItem className=\"odc-multi-stream-logs__divider\">|</FlexItem>\n        {onDownloadAll && (\n          <>\n            <FlexItem className=\"odc-multi-stream-logs__button\">\n              <Button\n                variant=\"link\"\n                onClick={startDownloadAll}\n                isDisabled={downloadAllStatus}\n                isInline\n              >\n                <DownloadIcon className=\"odc-multi-stream-logs__icon\" />\n                {downloadAllLabel || t('pipelines-plugin~Download all')}\n                {downloadAllStatus && <LoadingInline />}\n              </Button>\n            </FlexItem>\n            <FlexItem className=\"odc-multi-stream-logs__divider\">|</FlexItem>\n          </>\n        )}\n        {fullscreenToggle && (\n          <FlexItem className=\"odc-multi-stream-logs__button\">\n            <Button variant=\"link\" onClick={fullscreenToggle} isInline>\n              {isFullscreen ? (\n                <>\n                  <CompressIcon className=\"odc-multi-stream-logs__icon\" />\n                  {t('pipelines-plugin~Collapse')}\n                </>\n              ) : (\n                <>\n                  <ExpandIcon className=\"odc-multi-stream-logs__icon\" />\n                  {t('pipelines-plugin~Expand')}\n                </>\n              )}\n            </Button>\n          </FlexItem>\n        )}\n      </Flex>\n      {!error ? (\n        <MultiStreamLogs\n          {...props}\n          taskName={taskName}\n          resource={resourceRef.current}\n          setCurrentLogsGetter={setLogGetter}\n        />\n      ) : (\n        <TektonTaskRunLog taskRun={taskRun} setCurrentLogsGetter={setLogGetter} />\n      )}\n    </div>\n  );\n};\n\nexport default LogsWrapperComponent;\n","import * as React from 'react';\nimport { LoadingInline, LOG_SOURCE_WAITING } from '@console/internal/components/utils';\nimport { ContainerStatus, PodKind, ContainerSpec } from '@console/internal/module/k8s';\nimport { useScrollDirection, ScrollDirection } from '@console/shared';\nimport { containerToLogSourceStatus } from '../../../utils/pipeline-utils';\nimport Logs from './Logs';\nimport { getRenderContainers } from './logs-utils';\n\nimport './MultiStreamLogs.scss';\n\ntype MultiStreamLogsProps = {\n  resource: PodKind;\n  taskName?: string;\n  setCurrentLogsGetter?: (getter: () => string) => void;\n};\n\nexport const MultiStreamLogs: React.FC<MultiStreamLogsProps> = ({\n  resource,\n  taskName,\n  setCurrentLogsGetter,\n}) => {\n  const scrollPane = React.useRef<HTMLDivElement>();\n  const completedRef = React.useRef<boolean[]>([]);\n  const [renderToCount, setRenderToCount] = React.useState(0);\n  const [scrollDirection, handleScrollCallback] = useScrollDirection();\n  const { containers, stillFetching } = getRenderContainers(resource);\n  const dataRef = React.useRef<ContainerSpec[]>(null);\n  dataRef.current = containers;\n\n  React.useEffect(() => {\n    setCurrentLogsGetter(() => {\n      return scrollPane.current?.innerText;\n    });\n  }, [setCurrentLogsGetter]);\n\n  const handleComplete = React.useCallback((containerName) => {\n    const index = dataRef.current.findIndex(({ name }) => name === containerName);\n    completedRef.current[index] = true;\n    const newRenderTo = dataRef.current.findIndex((c, i) => completedRef.current[i] !== true);\n    if (newRenderTo === -1) {\n      setRenderToCount(dataRef.current.length);\n    } else {\n      setRenderToCount(newRenderTo);\n    }\n  }, []);\n\n  const autoScroll =\n    scrollDirection == null || scrollDirection !== ScrollDirection.scrolledToBottom;\n\n  const containerStatus: ContainerStatus[] = resource?.status?.containerStatuses ?? [];\n  return (\n    <>\n      <div className=\"odc-multi-stream-logs__taskName\" data-test-id=\"logs-taskName\">\n        {taskName}\n        {stillFetching && (\n          <span className=\"odc-multi-stream-logs__taskName__loading-indicator\">\n            <LoadingInline />\n          </span>\n        )}\n      </div>\n      <div\n        className=\"odc-multi-stream-logs__container\"\n        onScroll={handleScrollCallback}\n        data-test-id=\"logs-task-container\"\n      >\n        <div className=\"odc-multi-stream-logs__container__logs\" ref={scrollPane}>\n          {containers.map((container, idx) => {\n            const statusIndex = containerStatus.findIndex((c) => c.name === container.name);\n            const resourceStatus = containerToLogSourceStatus(containerStatus[statusIndex]);\n            return (\n              resourceStatus !== LOG_SOURCE_WAITING && (\n                <Logs\n                  key={`${taskName}-${container.name}`}\n                  resource={resource}\n                  container={container}\n                  resourceStatus={resourceStatus}\n                  onComplete={handleComplete}\n                  render={renderToCount >= idx}\n                  autoScroll={autoScroll}\n                />\n              )\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { Base64 } from 'js-base64';\nimport { throttle } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { coFetchText } from '@console/internal/co-fetch';\nimport { LOG_SOURCE_TERMINATED } from '@console/internal/components/utils';\nimport { resourceURL, modelFor, PodKind, ContainerSpec } from '@console/internal/module/k8s';\nimport { WSFactory } from '@console/internal/module/ws-factory';\nimport './Logs.scss';\n\ntype LogsProps = {\n  resource: PodKind;\n  resourceStatus: string;\n  container: ContainerSpec;\n  render: boolean;\n  autoScroll?: boolean;\n  onComplete: (containerName: string) => void;\n};\n\nconst Logs: React.FC<LogsProps> = ({\n  resource,\n  resourceStatus,\n  container,\n  onComplete,\n  render,\n  autoScroll = true,\n}) => {\n  const { t } = useTranslation();\n  const { name } = container;\n  const { kind, metadata = {} } = resource;\n  const { name: resName, namespace: resNamespace } = metadata;\n  const scrollToRef = React.useRef<HTMLDivElement>(null);\n  const contentRef = React.useRef<HTMLDivElement>(null);\n  const [error, setError] = React.useState<boolean>(false);\n  const resourceStatusRef = React.useRef<string>(resourceStatus);\n  const onCompleteRef = React.useRef<(name) => void>();\n  const blockContentRef = React.useRef<string>('');\n  onCompleteRef.current = onComplete;\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const addContentAndScroll = React.useCallback(\n    throttle(() => {\n      if (contentRef.current) {\n        contentRef.current.innerText += blockContentRef.current;\n      }\n      if (scrollToRef.current) {\n        scrollToRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' });\n      }\n      blockContentRef.current = '';\n    }, 1000),\n    [],\n  );\n\n  const appendMessage = React.useRef<(blockContent) => void>();\n\n  appendMessage.current = React.useCallback(\n    (blockContent: string) => {\n      blockContentRef.current += blockContent;\n      if (scrollToRef.current && blockContent && render && autoScroll) {\n        addContentAndScroll();\n      }\n    },\n    [autoScroll, render, addContentAndScroll],\n  );\n\n  if (resourceStatusRef.current !== resourceStatus) {\n    resourceStatusRef.current = resourceStatus;\n  }\n\n  React.useEffect(() => {\n    let loaded: boolean = false;\n    let ws: WSFactory;\n    const urlOpts = {\n      ns: resNamespace,\n      name: resName,\n      path: 'log',\n      queryParams: {\n        container: name,\n        follow: 'true',\n      },\n    };\n    const watchURL = resourceURL(modelFor(kind), urlOpts);\n    if (resourceStatusRef.current === LOG_SOURCE_TERMINATED) {\n      coFetchText(watchURL)\n        .then((res) => {\n          if (loaded) return;\n          appendMessage.current(res);\n          onCompleteRef.current(name);\n        })\n        .catch(() => {\n          if (loaded) return;\n          setError(true);\n          onCompleteRef.current(name);\n        });\n    } else {\n      const wsOpts = {\n        host: 'auto',\n        path: watchURL,\n        subprotocols: ['base64.binary.k8s.io'],\n      };\n      ws = new WSFactory(watchURL, wsOpts);\n      ws.onmessage((msg) => {\n        if (loaded) return;\n        const message = Base64.decode(msg);\n        appendMessage.current(message);\n      })\n        .onclose(() => {\n          onCompleteRef.current(name);\n        })\n        .onerror(() => {\n          if (loaded) return;\n          setError(true);\n          onCompleteRef.current(name);\n        });\n    }\n    return () => {\n      loaded = true;\n      ws && ws.destroy();\n    };\n  }, [kind, name, resName, resNamespace]);\n\n  React.useEffect(() => {\n    if (scrollToRef.current && render && autoScroll) {\n      addContentAndScroll();\n    }\n  }, [autoScroll, render, addContentAndScroll]);\n\n  return (\n    <div className=\"odc-logs\" style={{ display: render ? '' : 'none' }}>\n      <p className=\"odc-logs__name\">{name}</p>\n      {error && (\n        <Alert\n          variant=\"danger\"\n          isInline\n          title={t('pipelines-plugin~An error occurred while retrieving the requested logs.')}\n        />\n      )}\n      <div>\n        <div className=\"odc-logs__content\" ref={contentRef} />\n        <div ref={scrollToRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default Logs;\n","import * as React from 'react';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { TaskRunKind } from '../../../types';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport { useTRTaskRunLog } from '../hooks/useTektonResults';\n\nimport './Logs.scss';\nimport './MultiStreamLogs.scss';\n\ntype TektonTaskRunLogProps = {\n  taskRun?: TaskRunKind;\n  setCurrentLogsGetter: (getter: () => string) => void;\n};\n\nexport const TektonTaskRunLog: React.FC<TektonTaskRunLogProps> = ({\n  taskRun,\n  setCurrentLogsGetter,\n}) => {\n  const scrollPane = React.useRef<HTMLDivElement>();\n  const taskName = taskRun?.metadata?.labels?.[TektonResourceLabel.pipelineTask] || '-';\n  const [trResults, trLoaded, trError] = useTRTaskRunLog(\n    taskRun.metadata.namespace,\n    taskRun.metadata.name,\n    taskRun.metadata?.annotations?.['results.tekton.dev/record'],\n  );\n\n  React.useEffect(() => {\n    setCurrentLogsGetter(() => scrollPane.current?.innerText);\n  }, [setCurrentLogsGetter]);\n\n  React.useEffect(() => {\n    if (!trError && trLoaded && scrollPane.current && trResults) {\n      scrollPane.current.scrollTop = scrollPane.current.scrollHeight;\n    }\n  }, [trError, trLoaded, trResults]);\n\n  const errorMessage =\n    (trError as HttpError)?.code === 404\n      ? `Logs are no longer accessible for ${taskName} task`\n      : null;\n  return (\n    <>\n      <div className=\"odc-multi-stream-logs__taskName\" data-test-id=\"logs-taskName\">\n        {taskName}\n        {!trLoaded && (\n          <span\n            className=\"odc-multi-stream-logs__taskName__loading-indicator\"\n            data-test-id=\"loading-indicator\"\n          >\n            <LoadingInline />\n          </span>\n        )}\n      </div>\n      <div\n        className=\"odc-multi-stream-logs__container\"\n        data-test-id=\"tr-logs-task-container\"\n        ref={scrollPane}\n      >\n        <div className=\"odc-multi-stream-logs__container__logs\" data-testid=\"tr-logs-container\">\n          {errorMessage && (\n            <div className=\"odc-pipeline-run-logs__logtext\" data-testid=\"tr-logs-error-message\">\n              {errorMessage}\n            </div>\n          )}\n          {!errorMessage && trLoaded ? (\n            <div className=\"odc-logs\" data-testid=\"tr-logs-container\">\n              <p className=\"odc-logs__name\">{taskName}</p>\n              <div>\n                <div className=\"odc-logs__content\" data-testid=\"tr-logs-content\">\n                  {trResults}\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { getURLSearchParams } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport {\n  COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n  COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n  TableColumnsType,\n  useUserSettingsCompatibility,\n} from '@console/shared';\nimport { TaskRunModel } from '../../../models';\nimport { usePipelineTechPreviewBadge } from '../../../utils/hooks';\nimport { ListPage } from '../../ListPage';\nimport { useTaskRuns } from '../../pipelineruns/hooks/useTaskRuns';\nimport { runFilters as taskRunFilters } from '../../pipelines/detail-page-tabs/PipelineRuns';\nimport TaskRunsHeader from './TaskRunsHeader';\nimport TaskRunsList from './TaskRunsList';\n\ninterface TaskRunsListPageProps {\n  hideBadge?: boolean;\n  showPipelineColumn?: boolean;\n}\n\nconst TaskRunsListPage: React.FC<\n  Omit<\n    React.ComponentProps<typeof ListPage>,\n    'canCreate' | 'kind' | 'ListComponent' | 'rowFilters'\n  > &\n    TaskRunsListPageProps\n> = ({ hideBadge, showPipelineColumn = true, namespace, ...props }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const searchParams = getURLSearchParams();\n  const kind = searchParams?.kind;\n  const ns = namespace || params?.ns;\n  const badge = usePipelineTechPreviewBadge(ns);\n  const trForPlr = props.selector && props.selector?.matchLabels?.['tekton.dev/pipelineRun'];\n  const [taskRuns, taskRunsLoaded, taskRunsLoadError, getNextPage] = useTaskRuns(ns, trForPlr);\n\n  const taskRunsResource = {\n    [referenceForModel(TaskRunModel)]: {\n      data: taskRuns,\n      kind: referenceForModel(TaskRunModel),\n      loadError: taskRunsLoadError,\n      loaded: taskRunsLoaded,\n    },\n  };\n  const customData = React.useMemo(\n    () => ({\n      showPipelineColumn,\n      nextPage: getNextPage,\n    }),\n    [showPipelineColumn, getNextPage],\n  );\n  const columnManagementID = referenceForModel(TaskRunModel);\n  const [tableColumns, , userSettingsLoaded] = useUserSettingsCompatibility<TableColumnsType>(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~TaskRuns')}</title>\n      </Helmet>\n      {userSettingsLoaded && (\n        <ListPage\n          {...props}\n          customData={customData}\n          canCreate={kind?.includes(referenceForModel(TaskRunModel)) ?? false}\n          kind={referenceForModel(TaskRunModel)}\n          ListComponent={TaskRunsList}\n          rowFilters={taskRunFilters(t)}\n          badge={hideBadge ? null : badge}\n          namespace={ns}\n          columnLayout={{\n            columns: TaskRunsHeader()().map((column) =>\n              _.pick(column, ['title', 'additional', 'id']),\n            ),\n            id: columnManagementID,\n            selectedColumns:\n              tableColumns?.[columnManagementID]?.length > 0\n                ? new Set(tableColumns[columnManagementID])\n                : null,\n            type: t('pipelines-plugin~TaskRun'),\n          }}\n          data={taskRunsResource}\n        />\n      )}\n    </>\n  );\n};\nexport default TaskRunsListPage;\n","import { sortable } from '@patternfly/react-table';\nimport i18next from 'i18next';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport { tableColumnClasses } from './taskruns-table';\n\nconst TaskRunsHeader = (showPipelineColumn: boolean = true) => () => {\n  return [\n    {\n      title: i18next.t('pipelines-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n      id: 'name',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Pipeline'),\n      sortField: `metadata.labels[\"${TektonResourceLabel.pipeline}\"]`,\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n      id: 'pipeline',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Task'),\n      sortField: `metadata.labels[\"${TektonResourceLabel.pipelineTask}\"]`,\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n      id: 'task',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Pod'),\n      sortField: 'status.podName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n      id: 'pod',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Status'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n      id: 'status',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Started'),\n      sortField: 'status.startTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n      id: 'started',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Duration'),\n      sortField: 'status.completionTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[7] },\n      id: 'duration',\n      additional: true,\n    },\n    {\n      title: '',\n      id: '',\n      props: { className: tableColumnClasses[8] },\n    },\n  ].filter((item) => !(item.id === 'pipeline' && !showPipelineColumn));\n};\n\nexport default TaskRunsHeader;\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  '', // pipeline\n  'pf-m-hidden pf-m-visible-on-sm', // task\n  'pf-m-hidden pf-m-visible-on-sm', // pod\n  'pf-m-hidden pf-m-visible-on-sm', // status\n  'pf-m-hidden pf-m-visible-on-sm', // started\n  'pf-m-hidden pf-m-visible-on-sm', // duration\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TektonWorkspace } from '../../../types';\n\nexport interface WorkspaceDefinitionListProps {\n  workspaces: TektonWorkspace[];\n}\n\nconst WorkspaceDefinitionList: React.FC<WorkspaceDefinitionListProps> = ({ workspaces }) => {\n  const { t } = useTranslation();\n\n  if (!workspaces || workspaces.length === 0) return null;\n\n  return (\n    <dl data-test-id=\"workspace-definition-section\">\n      <dt>{t('pipelines-plugin~Workspaces')}</dt>\n      <dd>\n        {workspaces.map((workspace) => (\n          <div\n            key={workspace.name}\n            data-test-id={`workspace-definition${workspace.optional ? '-optional' : ''}`}\n          >\n            {workspace.optional\n              ? `${workspace.name} (${t('pipelines-plugin~optional')})`\n              : `${workspace.name}`}\n          </div>\n        ))}\n      </dd>\n    </dl>\n  );\n};\n\nexport default WorkspaceDefinitionList;\n","import * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { DASH } from '@console/shared';\nimport { ComputedStatus, PipelineRunKind } from '../../../types';\nimport PipelineResourceStatus from './PipelineResourceStatus';\nimport PipelineRunStatusPopoverContent from './PipelineRunStatusPopoverContent';\nimport './PipelineRunStatusContent.scss';\n\ntype PipelineRunStatusProps = {\n  status: string;\n  pipelineRun: PipelineRunKind;\n  title?: string;\n};\nconst PipelineRunStatusContent: React.FC<PipelineRunStatusProps> = ({\n  status,\n  pipelineRun,\n  title,\n}) => {\n  const [isPopoverOpen, setIsPopoverOpen] = React.useState(false);\n\n  const PopoverContent = () => {\n    return <>{isPopoverOpen && <PipelineRunStatusPopoverContent pipelineRun={pipelineRun} />}</>;\n  };\n  return (\n    <>\n      {pipelineRun ? (\n        status === ComputedStatus.Failed ? (\n          <Popover\n            bodyContent={PopoverContent}\n            isVisible={isPopoverOpen}\n            shouldClose={() => setIsPopoverOpen(false)}\n            shouldOpen={() => setIsPopoverOpen(true)}\n            position={PopoverPosition.auto}\n          >\n            <Button variant=\"plain\" className=\"odc-status-column-text\">\n              <PipelineResourceStatus status={status} title={title} />\n            </Button>\n          </Popover>\n        ) : (\n          <PipelineResourceStatus status={status} title={title} />\n        )\n      ) : (\n        <>{DASH}</>\n      )}\n    </>\n  );\n};\n\nexport default PipelineRunStatusContent;\n","import * as React from 'react';\nimport { CombinedErrorDetails } from '../logs/log-snippet-types';\nimport LogSnippetBlock from '../logs/LogSnippetBlock';\n\nimport './StatusPopoverContent.scss';\n\ntype StatusPopoverContentProps = {\n  link?: React.ReactNode;\n  namespace: string;\n  logDetails: CombinedErrorDetails;\n};\nconst StatusPopoverContent: React.FC<StatusPopoverContentProps> = ({\n  namespace,\n  logDetails,\n  link = null,\n}) => {\n  return (\n    <div className=\"odc-statuspopover-content\">\n      <LogSnippetBlock logDetails={logDetails} namespace={namespace}>\n        {(logSnippet: string) => (\n          <>\n            <pre className=\"co-pre\">{logSnippet}</pre>\n            {link}\n          </>\n        )}\n      </LogSnippetBlock>\n    </div>\n  );\n};\n\nexport default StatusPopoverContent;\n","import i18next from 'i18next';\nimport { Condition, PLRTaskRunStep, TaskRunKind } from '../../../types';\nimport { taskRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { CombinedErrorDetails } from '../../pipelineruns/logs/log-snippet-types';\nimport { taskRunSnippetMessage } from '../../pipelineruns/logs/log-snippet-utils';\n\nexport const getTRLogSnippet = (taskRun: TaskRunKind): CombinedErrorDetails => {\n  if (!taskRun?.status) {\n    // Lack information to pull from the Pipeline Run\n    return null;\n  }\n  if (taskRunFilterReducer(taskRun) !== 'Failed') {\n    // Not in a failed state, no need to get the log snippet\n    return null;\n  }\n\n  const succeededCondition = taskRun.status.conditions?.find(\n    (condition: Condition) => condition.type === 'Succeeded',\n  );\n\n  if (succeededCondition?.status !== 'False') {\n    // Not in error / lack information\n    return null;\n  }\n  const isKnownReason = (reason: string): boolean => {\n    // known reasons https://tekton.dev/vault/pipelines-v0.21.0/taskruns/#monitoring-execution-status\n    return ['TaskRunCancelled', 'TaskRunTimeout'].includes(reason);\n  };\n\n  if (isKnownReason(succeededCondition?.reason)) {\n    // No specific task run failure information, just print task run status\n    return {\n      staticMessage:\n        succeededCondition.message || i18next.t('pipelines-plugin~Unknown failure condition'),\n      title: i18next.t('pipelines-plugin~Failure on task {{taskName}} - check logs for details.', {\n        taskName: taskRun.metadata.name,\n      }),\n    };\n  }\n\n  const containerName = taskRun.status.steps?.find(\n    (step: PLRTaskRunStep) => step.terminated?.exitCode !== 0,\n  )?.container;\n\n  return taskRunSnippetMessage(taskRun.metadata.name, taskRun.status, containerName);\n};\n","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\nimport * as _ from 'lodash';\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector } from 'react-redux';\nimport { inject, processReduxId } from '@console/internal/components/utils';\n\nconst worstError = (errors) => {\n  let worst = errors && errors[0];\n  for (const e of errors) {\n    if (e.status === 403) {\n      return e;\n    }\n    if (e.status === 401) {\n      worst = e;\n    }\n    if (e.status > worst.status) {\n      worst = e;\n    }\n  }\n  return worst;\n};\n\nconst ListPropProvider = (props) => {\n  const k8sData: ImmutableMap<string, any> = useSelector(({ k8s }) => k8s);\n  const reduxes = props.resources.map(({ prop, isList, filters, optional, kind }) => {\n    return {\n      reduxID: props.reduxIDs[0],\n      prop,\n      isList,\n      filters,\n      optional,\n      kind,\n    };\n  });\n  const resources: any = {};\n  reduxes.forEach((redux) => {\n    resources[redux.prop] = processReduxId({ k8s: k8sData }, redux);\n  });\n  const required = _.filter(resources, (r) => !r.optional);\n  const loaded = _.every(resources, (resource) =>\n    resource.optional ? resource.loaded || !_.isEmpty(resource.loadError) : resource.loaded,\n  );\n  const loadError = worstError(_.map(required, 'loadError').filter(Boolean));\n\n  const k8sResults = Object.assign({}, resources, {\n    filters: Object.assign({}, ..._.map(resources, 'filters')),\n    loaded,\n    loadError,\n    reduxIDs: _.map(reduxes, 'reduxID'),\n    resources,\n  });\n  return (\n    <>\n      {inject(props.children, {\n        ...props,\n        ...props?.data,\n        ...k8sResults,\n      })}\n    </>\n  );\n};\n\nexport default ListPropProvider;\n","import { sortable } from '@patternfly/react-table';\nimport i18n from 'i18next';\nimport { tableColumnClasses } from './pipelinerun-table';\n\nconst PipelineRunHeader = () => {\n  return [\n    {\n      title: i18n.t('pipelines-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.name },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.namespace },\n      id: 'namespace',\n    },\n    {\n      title: i18n.t('pipelines-plugin~Vulnerabilities'),\n      sortFunc: 'vulnerabilities',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.vulnerabilities },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Status'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.status },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Task status'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.taskStatus },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Started'),\n      sortField: 'status.startTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.started },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Duration'),\n      sortField: 'status.completionTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.duration },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses.actions },\n    },\n  ];\n};\n\nexport default PipelineRunHeader;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ArchiveIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport { SemVer } from 'semver';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { Timestamp, ResourceLink } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../const';\nimport SignedPipelinerunIcon from '../../../images/signed-badge.svg';\nimport { PipelineRunModel } from '../../../models';\nimport { ComputedStatus, PipelineRunKind, TaskRunKind } from '../../../types';\nimport { getPipelineRunKebabActions } from '../../../utils/pipeline-actions';\nimport { TaskStatus } from '../../../utils/pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  pipelineRunTitleFilterReducer,\n} from '../../../utils/pipeline-filter-reducer';\nimport { getPipelineRunStatus, pipelineRunDuration } from '../../../utils/pipeline-utils';\nimport { chainsSignedAnnotation } from '../../pipelines/const';\nimport { useTaskRuns } from '../hooks/useTaskRuns';\nimport LinkedPipelineRunTaskStatus from '../status/LinkedPipelineRunTaskStatus';\nimport PipelineRunStatusContent from '../status/PipelineRunStatusContent';\nimport PipelineRunVulnerabilities from '../status/PipelineRunVulnerabilities';\nimport { ResourceKebabWithUserLabel } from '../triggered-by';\nimport { tableColumnClasses } from './pipelinerun-table';\n\nconst pipelinerunReference = referenceForModel(PipelineRunModel);\n\ntype PLRStatusProps = {\n  obj: PipelineRunKind;\n};\n\ntype PipelineRunRowWithoutTaskRunsProps = {\n  obj: PipelineRunKind;\n  operatorVersion: SemVer;\n  taskRunStatusObj: TaskStatus;\n};\n\ntype PipelineRunRowWithTaskRunsProps = {\n  obj: PipelineRunKind;\n  operatorVersion: SemVer;\n};\n\nconst TASKRUNSFORPLRCACHE: { [key: string]: TaskRunKind[] } = {};\nconst InFlightStoreForTaskRunsForPLR: { [key: string]: boolean } = {};\n\nconst PLRStatus: React.FC<PLRStatusProps> = React.memo(({ obj }) => {\n  return (\n    <PipelineRunStatusContent\n      status={pipelineRunFilterReducer(obj)}\n      title={pipelineRunTitleFilterReducer(obj)}\n      pipelineRun={obj}\n    />\n  );\n});\n\nconst PipelineRunRowTable = ({\n  obj,\n  PLRTaskRuns,\n  taskRunsLoaded,\n  taskRunStatusObj,\n  operatorVersion,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <TableData className={tableColumnClasses.name}>\n        <ResourceLink\n          kind={pipelinerunReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          data-test-id={obj.metadata.name}\n          nameSuffix={\n            <>\n              {obj?.metadata?.annotations?.[chainsSignedAnnotation] === 'true' ? (\n                <Tooltip content={t('pipelines-plugin~Signed')}>\n                  <div className=\"opp-pipeline-run-list__signed-indicator\">\n                    <img src={SignedPipelinerunIcon} alt={t('pipelines-plugin~Signed')} />\n                  </div>\n                </Tooltip>\n              ) : null}\n              {obj?.metadata?.annotations?.[DELETED_RESOURCE_IN_K8S_ANNOTATION] === 'true' ||\n              obj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION] === 'true' ? (\n                <Tooltip content={t('pipelines-plugin~Archived in Tekton results')}>\n                  <div className=\"opp-pipeline-run-list__results-indicator\">\n                    <ArchiveIcon />\n                  </div>\n                </Tooltip>\n              ) : null}\n            </>\n          }\n        />\n      </TableData>\n      <TableData className={tableColumnClasses.namespace} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses.vulnerabilities}>\n        <PipelineRunVulnerabilities pipelineRun={obj} condensed />\n      </TableData>\n      <TableData className={tableColumnClasses.status}>\n        <PLRStatus obj={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses.taskStatus}>\n        <LinkedPipelineRunTaskStatus\n          pipelineRun={obj}\n          taskRuns={PLRTaskRuns}\n          taskRunsLoaded={taskRunsLoaded}\n          taskRunStatusObj={taskRunStatusObj}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses.started}>\n        <Timestamp timestamp={obj.status && obj.status.startTime} />\n      </TableData>\n      <TableData className={tableColumnClasses.duration}>{pipelineRunDuration(obj)}</TableData>\n      <TableData className={tableColumnClasses.actions}>\n        <ResourceKebabWithUserLabel\n          actions={getPipelineRunKebabActions(\n            operatorVersion,\n            PLRTaskRuns,\n            undefined,\n            taskRunStatusObj,\n          )}\n          kind={pipelinerunReference}\n          resource={obj}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst PipelineRunRowWithoutTaskRuns: React.FC<PipelineRunRowWithoutTaskRunsProps> = React.memo(\n  ({ obj, operatorVersion, taskRunStatusObj }) => {\n    return (\n      <PipelineRunRowTable\n        obj={obj}\n        PLRTaskRuns={[]}\n        taskRunsLoaded\n        operatorVersion={operatorVersion}\n        taskRunStatusObj={taskRunStatusObj}\n      />\n    );\n  },\n);\n\nconst PipelineRunRowWithTaskRunsFetch: React.FC<PipelineRunRowWithTaskRunsProps> = React.memo(\n  ({ obj, operatorVersion }) => {\n    const cacheKey = `${obj.metadata.namespace}-${obj.metadata.name}`;\n    const [PLRTaskRuns, taskRunsLoaded] = useTaskRuns(\n      obj.metadata.namespace,\n      obj.metadata.name,\n      undefined,\n      `${obj.metadata.namespace}-${obj.metadata.name}`,\n    );\n    InFlightStoreForTaskRunsForPLR[cacheKey] = false;\n    if (taskRunsLoaded) {\n      TASKRUNSFORPLRCACHE[cacheKey] = PLRTaskRuns;\n    }\n    return (\n      <PipelineRunRowTable\n        obj={obj}\n        PLRTaskRuns={PLRTaskRuns}\n        taskRunsLoaded={taskRunsLoaded}\n        operatorVersion={operatorVersion}\n        taskRunStatusObj={undefined}\n      />\n    );\n  },\n);\n\nconst PipelineRunRowWithTaskRuns: React.FC<PipelineRunRowWithTaskRunsProps> = React.memo(\n  ({ obj, operatorVersion }) => {\n    let PLRTaskRuns: TaskRunKind[];\n    let taskRunsLoaded: boolean;\n    const cacheKey = `${obj.metadata.namespace}-${obj.metadata.name}`;\n    const result = TASKRUNSFORPLRCACHE[cacheKey];\n    if (result) {\n      PLRTaskRuns = result;\n      taskRunsLoaded = true;\n    } else if (InFlightStoreForTaskRunsForPLR[cacheKey]) {\n      PLRTaskRuns = [];\n      taskRunsLoaded = true;\n      InFlightStoreForTaskRunsForPLR[cacheKey] = true;\n    } else {\n      return <PipelineRunRowWithTaskRunsFetch obj={obj} operatorVersion={operatorVersion} />;\n    }\n    return (\n      <PipelineRunRowTable\n        obj={obj}\n        PLRTaskRuns={PLRTaskRuns}\n        taskRunsLoaded={taskRunsLoaded}\n        operatorVersion={operatorVersion}\n        taskRunStatusObj={undefined}\n      />\n    );\n  },\n);\n\nconst PipelineRunRow: React.FC<RowFunctionArgs<PipelineRunKind>> = ({ obj, customData }) => {\n  const { operatorVersion } = customData;\n  const plrStatus = pipelineRunStatus(obj);\n  if (plrStatus === ComputedStatus.Cancelled && (obj?.status?.childReferences ?? []).length > 0) {\n    return <PipelineRunRowWithTaskRuns obj={obj} operatorVersion={operatorVersion} />;\n  }\n  const taskRunStatusObj = getPipelineRunStatus(obj);\n  return (\n    <PipelineRunRowWithoutTaskRuns\n      obj={obj}\n      operatorVersion={operatorVersion}\n      taskRunStatusObj={taskRunStatusObj}\n    />\n  );\n};\n\nexport default PipelineRunRow;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ComputedStatus, PipelineRunKind, TaskRunKind } from '../../../types';\nimport { TaskStatus, getRunStatusColor } from '../../../utils/pipeline-augment';\nimport HorizontalStackedBars from '../../charts/HorizontalStackedBars';\nimport { useTaskStatus } from '../hooks/useTaskStatus';\nimport TaskStatusToolTip from './TaskStatusTooltip';\n\nexport interface PipelineBarProps {\n  pipelinerun: PipelineRunKind;\n  taskRuns: TaskRunKind[];\n}\n\nexport interface PipelineBarsForTaskRunsStatus {\n  taskRunStatusObj: TaskStatus;\n}\n\nexport const PipelineBars: React.FC<PipelineBarProps> = ({ pipelinerun, taskRuns }) => {\n  const taskStatus = useTaskStatus(pipelinerun, taskRuns);\n  return (\n    <Tooltip content={<TaskStatusToolTip taskStatus={taskStatus} />}>\n      <HorizontalStackedBars\n        height=\"1em\"\n        inline\n        values={Object.keys(ComputedStatus).map((status) => ({\n          color: getRunStatusColor(ComputedStatus[status]).pftoken.value,\n          name: status,\n          size: taskStatus[ComputedStatus[status]],\n        }))}\n      />\n    </Tooltip>\n  );\n};\n\nexport const PipelineBarsForTaskRunsStatus: React.FC<PipelineBarsForTaskRunsStatus> = ({\n  taskRunStatusObj,\n}) => (\n  <Tooltip content={<TaskStatusToolTip taskStatus={taskRunStatusObj} />}>\n    <HorizontalStackedBars\n      height=\"1em\"\n      inline\n      values={Object.keys(ComputedStatus).map((status) => ({\n        color: getRunStatusColor(ComputedStatus[status]).pftoken.value,\n        name: status,\n        size: taskRunStatusObj[ComputedStatus[status]],\n      }))}\n    />\n  </Tooltip>\n);\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { LoadingInline, resourcePathFromModel } from '@console/internal/components/utils';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport { useTaskRuns } from '../hooks/useTaskRuns';\nimport LogSnippetBlock from '../logs/LogSnippetBlock';\nimport { getPLRLogSnippet } from '../logs/pipelineRunLogSnippet';\nimport './StatusPopoverContent.scss';\n\ntype StatusPopoverContentProps = {\n  pipelineRun: PipelineRunKind;\n};\nconst PipelineRunStatusPopoverContent: React.FC<StatusPopoverContentProps> = ({ pipelineRun }) => {\n  const { t } = useTranslation();\n  const [PLRTaskRuns, taskRunsLoaded] = useTaskRuns(\n    pipelineRun.metadata.namespace,\n    pipelineRun.metadata.name,\n  );\n\n  if (!taskRunsLoaded) {\n    return (\n      <div style={{ minHeight: '300px' }}>\n        <LoadingInline />\n      </div>\n    );\n  }\n\n  const logDetails = getPLRLogSnippet(pipelineRun, PLRTaskRuns);\n\n  return (\n    <div className=\"odc-statuspopover-content\" style={{ minHeight: '300px' }}>\n      <LogSnippetBlock logDetails={logDetails} namespace={pipelineRun.metadata.namespace}>\n        {(logSnippet: string) => (\n          <>\n            <pre className=\"co-pre\">{logSnippet}</pre>\n            <Link\n              to={`${resourcePathFromModel(\n                PipelineRunModel,\n                pipelineRun.metadata.name,\n                pipelineRun.metadata.namespace,\n              )}/logs`}\n            >\n              {t('pipelines-plugin~View logs')}\n            </Link>\n          </>\n        )}\n      </LogSnippetBlock>\n    </div>\n  );\n};\n\nexport default PipelineRunStatusPopoverContent;\n","import * as React from 'react';\nimport { PipelineRunWorkspace } from '../../../types';\nimport EmptyDirectoriesSection from './EmptyDirectoriesSection';\nimport VolumeClaimTemplateSection from './VolumeClaimTemplateSection';\nimport WorkspaceResourcesSection from './WorkspaceResourcesSection';\n\nexport interface WorkspaceResourceLinkListProps {\n  workspaces: PipelineRunWorkspace[];\n  namespace: string;\n  ownerResourceName: string;\n  ownerResourceKind?: string;\n}\n\nconst WorkspaceResourceLinkList: React.FC<WorkspaceResourceLinkListProps> = ({\n  workspaces,\n  namespace,\n  ownerResourceName,\n  ownerResourceKind,\n}) => {\n  if (!workspaces || workspaces.length === 0) return null;\n\n  return (\n    <>\n      <WorkspaceResourcesSection namespace={namespace} workspaces={workspaces} />\n      <VolumeClaimTemplateSection\n        namespace={namespace}\n        ownerResourceName={ownerResourceName}\n        ownerResourceKind={ownerResourceKind}\n      />\n      <EmptyDirectoriesSection workspaces={workspaces} />\n    </>\n  );\n};\n\nexport default WorkspaceResourceLinkList;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineRunWorkspace } from '../../../types';\n\ntype EmptyDirectoriesSectionProps = {\n  workspaces: PipelineRunWorkspace[];\n};\n\nconst EmptyDirectoriesSection: React.FC<EmptyDirectoriesSectionProps> = ({ workspaces }) => {\n  const { t } = useTranslation();\n\n  if (!workspaces || workspaces.length === 0) return null;\n\n  const emptyDirectoryWorkspaces = workspaces.filter((workspace) => !!workspace.emptyDir);\n  if (emptyDirectoryWorkspaces.length === 0) return null;\n\n  return (\n    <dl data-test-id=\"empty-directories-section\">\n      <dt>{t('pipelines-plugin~Empty Directories')}</dt>\n      <dd>\n        {emptyDirectoryWorkspaces.map((workspace) => (\n          <div key={workspace.name} data-test-id=\"empty-directory-workspace\">\n            {t(`pipelines-plugin~Empty Directory ({{workspaceName}})`, {\n              workspaceName: workspace.name,\n            })}\n          </div>\n        ))}\n      </dd>\n    </dl>\n  );\n};\n\nexport default EmptyDirectoriesSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport { PersistentVolumeClaimKind } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../models';\nimport { getMatchedPVCs } from '../../../utils/pipeline-utils';\n\nexport interface VolumeClaimTemplatesSectionProps {\n  namespace: string;\n  ownerResourceName: string;\n  ownerResourceKind?: string;\n}\n\nconst VolumeClaimTemplatesSection: React.FC<VolumeClaimTemplatesSectionProps> = ({\n  namespace,\n  ownerResourceName,\n  ownerResourceKind = PipelineRunModel.kind,\n}) => {\n  const [pvcResources, loaded, loadError] = useK8sWatchResource<PersistentVolumeClaimKind[]>({\n    kind: PersistentVolumeClaimModel.kind,\n    isList: true,\n    namespace,\n  });\n\n  const { t } = useTranslation();\n\n  if (!ownerResourceName || !loaded || loadError || pvcResources?.length === 0) return null;\n\n  const matchedPVCs = getMatchedPVCs(pvcResources, ownerResourceName, ownerResourceKind);\n\n  if (!matchedPVCs || matchedPVCs.length === 0) return null;\n\n  return (\n    <dl data-test-id=\"volumeClaimTemplate-resources-section\">\n      <dt>{t('pipelines-plugin~VolumeClaimTemplate Resources')}</dt>\n      <dd>\n        {matchedPVCs.map((pvcResource) => {\n          return (\n            <ResourceLink\n              name={pvcResource.metadata.name}\n              key={pvcResource.metadata.name}\n              namespace={pvcResource.metadata.namespace}\n              kind={PersistentVolumeClaimModel.kind}\n            />\n          );\n        })}\n      </dd>\n    </dl>\n  );\n};\n\nexport default VolumeClaimTemplatesSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { ConfigMapModel, PersistentVolumeClaimModel, SecretModel } from '@console/internal/models';\nimport {\n  PipelineRunWorkspace,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from '../../../types';\n\ntype WorkspaceResourcesSectionProps = {\n  namespace: string;\n  workspaces: PipelineRunWorkspace[];\n};\n\nconst WorkspaceResourcesSection: React.FC<WorkspaceResourcesSectionProps> = ({\n  namespace,\n  workspaces,\n}) => {\n  const { t } = useTranslation();\n\n  if (!namespace || !workspaces || workspaces.length === 0) return null;\n\n  const workspacesRenders = workspaces\n    .map((workspace) => {\n      if (workspace.persistentVolumeClaim) {\n        const persistentVolumeClaim = workspace.persistentVolumeClaim as VolumeTypePVC;\n        const displayName = `${persistentVolumeClaim.claimName} (${workspace.name})`;\n        return (\n          <ResourceLink\n            key={workspace.name}\n            name={persistentVolumeClaim.claimName}\n            namespace={namespace}\n            kind={PersistentVolumeClaimModel.kind}\n            displayName={displayName}\n          />\n        );\n      }\n      if (workspace.configMap) {\n        const configMap = workspace.configMap as VolumeTypeConfigMaps;\n        const displayName = `${configMap.name} (${workspace.name})`;\n        return (\n          <ResourceLink\n            key={workspace.name}\n            name={configMap.name}\n            namespace={namespace}\n            kind={ConfigMapModel.kind}\n            displayName={displayName}\n          />\n        );\n      }\n      if (workspace.secret) {\n        const secret = workspace.secret as VolumeTypeSecret;\n        const displayName = `${secret.secretName} (${workspace.name})`;\n        return (\n          <ResourceLink\n            key={workspace.name}\n            name={secret.secretName}\n            kind={SecretModel.kind}\n            namespace={namespace}\n            displayName={displayName}\n          />\n        );\n      }\n      return null;\n    })\n    .filter((v) => !!v);\n\n  if (workspacesRenders.length === 0) return null;\n\n  return (\n    <dl data-test-id=\"workspace-resources-section\">\n      <dt>{t('pipelines-plugin~Workspace Resources')}</dt>\n      <dd>{workspacesRenders}</dd>\n    </dl>\n  );\n};\n\nexport default WorkspaceResourcesSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CombinedErrorDetails } from './log-snippet-types';\nimport LogSnippetBlock from './LogSnippetBlock';\n\ntype RunDetailErrorLogProps = {\n  logDetails: CombinedErrorDetails;\n  namespace: string;\n};\n\nconst RunDetailsErrorLog: React.FC<RunDetailErrorLogProps> = ({ logDetails, namespace }) => {\n  const { t } = useTranslation();\n  if (!logDetails) {\n    return null;\n  }\n\n  return (\n    <>\n      <dl>\n        <dt>{t('pipelines-plugin~Message')}</dt>\n        <dd>{logDetails.title}</dd>\n      </dl>\n      <dl>\n        <dt>{t('pipelines-plugin~Log snippet')}</dt>\n        <dd>\n          <LogSnippetBlock logDetails={logDetails} namespace={namespace}>\n            {(logSnippet: string) => <pre className=\"co-pre\">{logSnippet}</pre>}\n          </LogSnippetBlock>\n        </dd>\n      </dl>\n    </>\n  );\n};\n\nexport default RunDetailsErrorLog;\n","import * as React from 'react';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PodModel } from '@console/internal/models';\nimport {\n  EventInvolvedObject,\n  K8sResourceKind,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { PipelineRunModel, TaskRunModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\nimport { TektonResourceLabel } from '../../pipelines/const';\n\nexport type EventFilter = (eventObj: EventInvolvedObject) => boolean;\ntype ResourcesType = { [key: string]: K8sResourceKind[] };\n/**\n * Returns the pod resource for watchK8sResource\n * @param namespace\n * @param labels metadata lables to query\n */\nexport const getPodsByLabels = (namespace: string, labels: { [label: string]: string }) => {\n  return {\n    kind: PodModel.kind,\n    selector: {\n      matchLabels: labels,\n    },\n    namespace,\n    isList: true,\n    optional: true,\n  };\n};\n/**\n * Get associated taskruns and pods for a given namespace.\n * @param namespace\n */\nexport const usePipelineRunRelatedResources = (\n  namespace: string,\n  pipelineRunName: string,\n): WatchK8sResults<ResourcesType> => {\n  const plrRelatedResources: WatchK8sResources<ResourcesType> = React.useMemo(() => {\n    return {\n      taskruns: {\n        kind: referenceForModel(TaskRunModel),\n        namespace,\n        selector: {\n          matchLabels: { [TektonResourceLabel.pipelinerun]: pipelineRunName },\n        },\n        isList: true,\n        optional: true,\n      },\n      pods: getPodsByLabels(namespace, { [TektonResourceLabel.pipelinerun]: pipelineRunName }),\n    };\n  }, [namespace, pipelineRunName]);\n  return useK8sWatchResources<ResourcesType>(plrRelatedResources);\n};\n/**\n * Returns the pods associated with the taskRuns\n * @param namespace\n * @param taskRunName\n */\nexport const useTaskRunRelatedResources = (\n  namespace: string,\n  taskRunName: string,\n): WatchK8sResults<ResourcesType> => {\n  const tsrRelatedResources: WatchK8sResources<ResourcesType> = React.useMemo(() => {\n    return {\n      pods: getPodsByLabels(namespace, { [TektonResourceLabel.taskrun]: taskRunName }),\n    };\n  }, [namespace, taskRunName]);\n  return useK8sWatchResources<ResourcesType>(tsrRelatedResources);\n};\n\nconst isTaskRunMatched = (taskruns): EventFilter => (taskRun: EventInvolvedObject): boolean =>\n  taskRun.kind === TaskRunModel.kind && taskruns.data.find((t) => t.metadata.uid === taskRun.uid);\n\nconst isPodMatched = (pods): EventFilter => (pod: EventInvolvedObject): boolean =>\n  pod.kind === PodModel.kind && pods.data.find((p) => p.metadata.uid === pod.uid);\n\n/**\n * Custom hook to return the list of event filters to find the pipelinerun related resources.\n * @param namespace\n * @param pipelineRun\n */\nexport const usePipelineRunFilters = (\n  namespace: string,\n  pipelineRun: PipelineRunKind,\n): EventFilter[] => {\n  const { taskruns, pods } = usePipelineRunRelatedResources(namespace, pipelineRun.metadata.name);\n  const isPipelineRunMatched: EventFilter = (plr: EventInvolvedObject): boolean => {\n    return plr.kind === PipelineRunModel.kind && plr.uid === pipelineRun.metadata.uid;\n  };\n  return [isPipelineRunMatched, isTaskRunMatched(taskruns), isPodMatched(pods)];\n};\n\n/**\n * Custom hook to return the list of event filters to find the taskrun related resources.\n * @param namespace\n * @param taskRun\n */\nexport const useTaskRunFilters = (namespace: string, taskRun: TaskRunKind): EventFilter[] => {\n  const { pods } = useTaskRunRelatedResources(namespace, taskRun.metadata.name);\n\n  const isTaskRun: EventFilter = (tRun: EventInvolvedObject): boolean => {\n    return tRun.kind === TaskRunModel.kind && tRun.uid === taskRun.metadata.uid;\n  };\n  return [isTaskRun, isPodMatched(pods)];\n};\n","import * as React from 'react';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { ColumnLayout } from '@console/dynamic-plugin-sdk';\nimport { Table } from '@console/internal/components/factory';\nimport { useActiveColumns } from '@console/internal/components/factory/Table/active-columns-hook';\nimport { TaskRunModel } from '../../../models';\nimport { TaskRunKind } from '../../../types';\nimport TaskRunsHeader from './TaskRunsHeader';\nimport TaskRunsRow from './TaskRunsRow';\n\ninterface TaskRunsListProps {\n  customData?: { [key: string]: any };\n  columnLayout: ColumnLayout;\n  loaded?: boolean;\n  data?: TaskRunKind[];\n}\n\nconst TaskRunsList: React.FC<TaskRunsListProps> = (props) => {\n  const { t } = useTranslation();\n  const {\n    columnLayout: { columns, id },\n    customData,\n    data,\n    loaded,\n  } = props;\n  const [activeColumns, userSettingsLoaded] = useActiveColumns({\n    columns,\n    columnManagementID: id,\n  });\n  const selectedColumns = React.useMemo(() => new Set(activeColumns.map((col) => col.id)), [\n    activeColumns,\n  ]);\n  const newCustomData = { ...customData, selectedColumns };\n  const onRowsRendered = ({ stopIndex }) => {\n    if (loaded && stopIndex === data.length - 1) {\n      customData?.nextPage?.();\n    }\n  };\n  return (\n    userSettingsLoaded && (\n      <Table\n        {...props}\n        aria-label={t(TaskRunModel.labelPluralKey)}\n        defaultSortField=\"status.startTime\"\n        defaultSortOrder={SortByDirection.desc}\n        Header={TaskRunsHeader(props.customData?.showPipelineColumn)}\n        Row={TaskRunsRow}\n        virtualize\n        activeColumns={selectedColumns}\n        customData={newCustomData}\n        onRowsRendered={onRowsRendered}\n      />\n    )\n  );\n};\n\nexport default TaskRunsList;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ArchiveIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../const';\nimport { TaskRunModel, PipelineModel } from '../../../models';\nimport { TaskRunKind } from '../../../types';\nimport { getTaskRunKebabActions } from '../../../utils/pipeline-actions';\nimport { getModelReferenceFromTaskKind } from '../../../utils/pipeline-augment';\nimport { taskRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { pipelineRunDuration } from '../../../utils/pipeline-utils';\nimport { ResourceKebab } from '../../pipelineruns/triggered-by/ResourceKebab';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport TaskRunStatus from '../status/TaskRunStatus';\nimport { tableColumnClasses } from './taskruns-table';\n\nimport './TaskRunsRow.scss';\n\nconst taskRunsReference = referenceForModel(TaskRunModel);\nconst pipelineReference = referenceForModel(PipelineModel);\n\nconst TaskRunsRow: React.FC<RowFunctionArgs<TaskRunKind>> = ({ obj, customData }) => {\n  const { t } = useTranslation();\n  const { selectedColumns } = customData;\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={taskRunsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          data-test-id={obj.metadata.name}\n          nameSuffix={\n            <>\n              {obj?.metadata?.annotations?.[DELETED_RESOURCE_IN_K8S_ANNOTATION] === 'true' ||\n              obj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION] === 'true' ? (\n                <Tooltip content={t('pipelines-plugin~Archived in Tekton results')}>\n                  <div className=\"opp-task-run-list__results-indicator\">\n                    <ArchiveIcon />\n                  </div>\n                </Tooltip>\n              ) : null}\n            </>\n          }\n        />\n      </TableData>\n      {selectedColumns?.has('namespace') && (\n        <TableData className={tableColumnClasses[1]} columnID=\"namespace\">\n          <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n        </TableData>\n      )}\n      {customData?.showPipelineColumn && selectedColumns?.has('pipeline') && (\n        <TableData className={tableColumnClasses[2]}>\n          {obj.metadata.labels[TektonResourceLabel.pipeline] ? (\n            <ResourceLink\n              kind={pipelineReference}\n              name={obj.metadata.labels[TektonResourceLabel.pipeline]}\n              namespace={obj.metadata.namespace}\n            />\n          ) : (\n            '-'\n          )}\n        </TableData>\n      )}\n      {selectedColumns?.has('task') && (\n        <TableData className={tableColumnClasses[3]}>\n          {obj.spec.taskRef?.name ? (\n            <ResourceLink\n              kind={getModelReferenceFromTaskKind(obj.spec.taskRef?.kind)}\n              displayName={obj.metadata.labels[TektonResourceLabel.pipelineTask]}\n              name={obj.spec.taskRef.name}\n              namespace={obj.metadata.namespace}\n            />\n          ) : (\n            '-'\n          )}\n        </TableData>\n      )}\n      {selectedColumns?.has('pod') && (\n        <TableData className={tableColumnClasses[4]}>\n          {obj.status?.podName ? (\n            <ResourceLink kind=\"Pod\" name={obj.status.podName} namespace={obj.metadata.namespace} />\n          ) : (\n            '-'\n          )}\n        </TableData>\n      )}\n      {selectedColumns?.has('status') && (\n        <TableData className={tableColumnClasses[5]}>\n          <TaskRunStatus status={taskRunFilterReducer(obj)} taskRun={obj} />\n        </TableData>\n      )}\n      {selectedColumns?.has('started') && (\n        <TableData className={tableColumnClasses[6]}>\n          <Timestamp timestamp={obj?.status?.startTime} />\n        </TableData>\n      )}\n      {selectedColumns?.has('duration') && (\n        <TableData className={tableColumnClasses[7]}>{pipelineRunDuration(obj)}</TableData>\n      )}\n      <TableData className={tableColumnClasses[8]}>\n        <ResourceKebab actions={getTaskRunKebabActions()} kind={taskRunsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport default TaskRunsRow;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { TaskRunModel } from '../../../models';\nimport { TaskRunKind } from '../../../types';\nimport { taskRunFilterTitleReducer } from '../../../utils/pipeline-filter-reducer';\nimport PipelineResourceStatus from '../../pipelineruns/status/PipelineResourceStatus';\nimport StatusPopoverContent from '../../pipelineruns/status/StatusPopoverContent';\nimport { getTRLogSnippet } from '../logs/taskRunLogSnippet';\n\ntype TaskRunStatusProps = {\n  status: string;\n  taskRun: TaskRunKind;\n};\nconst TaskRunStatus: React.FC<TaskRunStatusProps> = ({ status, taskRun }) => {\n  const { t } = useTranslation();\n  return (\n    <PipelineResourceStatus status={status} title={taskRunFilterTitleReducer(taskRun)}>\n      <StatusPopoverContent\n        logDetails={getTRLogSnippet(taskRun)}\n        namespace={taskRun.metadata.namespace}\n        link={\n          <Link\n            to={`${resourcePathFromModel(\n              TaskRunModel,\n              taskRun.metadata.name,\n              taskRun.metadata.namespace,\n            )}/logs`}\n          >\n            {t('pipelines-plugin~View logs')}\n          </Link>\n        }\n      />\n    </PipelineResourceStatus>\n  );\n};\n\nexport default TaskRunStatus;\n","import * as React from 'react';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant } from '@patternfly/react-core';\nimport { Table, Thead, Tbody, Th, Td, Tr } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading } from '@console/internal/components/utils';\nimport { ComputedStatus, TektonResultsRun } from '../../../types';\nimport { handleURLs } from '../../../utils/render-utils';\n\nexport interface ResultsListProps {\n  results: TektonResultsRun[];\n  resourceName: string;\n  status: string;\n}\n\nconst ResultsList: React.FC<ResultsListProps> = ({ results, resourceName, status }) => {\n  const { t } = useTranslation();\n  if (!results.length) return null;\n\n  return (\n    <>\n      <SectionHeading text={t('pipelines-plugin~{{resourceName}} results', { resourceName })} />\n      {status !== ComputedStatus.Failed ? (\n        <Table aria-label={t('pipelines-plugin~{{resourceName}} results', { resourceName })}>\n          <Thead>\n            <Tr>\n              <Th>{t('pipelines-plugin~Name')}</Th>\n              <Th>{t('pipelines-plugin~Value')}</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {results.map(({ name, value }) => (\n              <Tr key={`row-${name}`}>\n                <Td>{name}</Td>\n                <Td>{handleURLs(value)}</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      ) : (\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateBody>\n              {t('pipelines-plugin~No {{resourceName}} results available due to failure', {\n                resourceName,\n              })}\n            </EmptyStateBody>\n          </EmptyState>\n        </Bullseye>\n      )}\n    </>\n  );\n};\n\nexport default ResultsList;\n","import * as React from 'react';\nimport { ExternalLink } from '@console/internal/components/utils';\n\nimport './render-utils.scss';\n\nconst URL_REGEXP = /https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)/;\nexport const GROUP_MATCH_REGEXP = new RegExp(`^(.*\\\\s)?(${URL_REGEXP.source})(\\\\s.*)?$`, 'i');\n\nexport const handleURLs = (value: string): React.ReactNode => {\n  if (typeof value !== 'string') return JSON.stringify(value, null, 2);\n\n  const matches = value.match(GROUP_MATCH_REGEXP);\n  const [, prefix, link, suffix] = matches || [];\n\n  if (link) {\n    return (\n      <>\n        {handleURLs(prefix)}\n        <ExternalLink additionalClassName=\"opp-render-utils-external-url\" href={link}>\n          {link}\n        </ExternalLink>\n        {handleURLs(suffix)}\n      </>\n    );\n  }\n\n  return value;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StatusBox } from '@console/internal/components/utils/status-box';\nimport { PodModel } from '@console/internal/models';\nimport { TaskRunKind } from '../../types';\nimport LogsWrapperComponent from '../pipelineruns/logs/LogsWrapperComponent';\nimport './TaskRunLog.scss';\n\nexport type TaskRunLogProps = {\n  obj: TaskRunKind;\n};\n\nconst TaskRunLog: React.FC<TaskRunLogProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  if (obj?.status?.podName) {\n    const podResources = {\n      kind: PodModel.kind,\n      isList: false,\n      prop: `obj`,\n      namespace: obj.metadata.namespace,\n      name: obj.status.podName,\n    };\n    return (\n      <div className=\"odc-task-run-log\">\n        <LogsWrapperComponent\n          taskRun={obj}\n          resource={podResources}\n          downloadAllLabel={t('pipelines-plugin~Download all TaskRun logs')}\n        />\n      </div>\n    );\n  }\n  return (\n    <StatusBox\n      label={t('pipelines-plugin~TaskRun log')}\n      loadError={new Error(t('pipelines-plugin~Pod not found'))}\n    />\n  );\n};\n\nexport default TaskRunLog;\n","export { default as TaskRunDetailsPage } from './TaskRunDetailsPage';\nexport { default as TaskRunsListPage } from './list-page/TaskRunsListPage';\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ArchiveIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, DetailsPageProps } from '@console/internal/components/factory';\nimport { navFactory, viewYamlComponent } from '@console/internal/components/utils';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../const';\nimport { TaskRunKind } from '../../types';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { taskRunFilterReducer } from '../../utils/pipeline-filter-reducer';\nimport { useTaskRun } from '../pipelineruns/hooks/usePipelineRuns';\nimport { useTasksBreadcrumbsFor } from '../pipelines/hooks';\nimport TaskRunEvents from './events/TaskRunEvents';\nimport TaskRunDetails from './TaskRunDetails';\nimport TaskRunLog from './TaskRunLog';\n\nimport './TaskRunDetailsPage.scss';\n\nconst TaskRunDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj, namespace, name } = props;\n  const { t } = useTranslation();\n  const breadcrumbsFor = useTasksBreadcrumbsFor(kindObj);\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n  const [taskRun, loaded, error] = useTaskRun(namespace, name);\n  const resourceTitleFunc = (obj: TaskRunKind): string | JSX.Element => {\n    return (\n      <div className=\"taskrun-details-page\">\n        {obj?.metadata?.name}{' '}\n        {(obj?.metadata?.annotations?.[DELETED_RESOURCE_IN_K8S_ANNOTATION] === 'true' ||\n          obj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION] === 'true') && (\n          <Tooltip content={t('pipelines-plugin~Archived in Tekton results')}>\n            <ArchiveIcon className=\"pipelinerun-details-page__results-indicator\" />\n          </Tooltip>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      obj={{\n        data: taskRun,\n        loaded,\n        loadError: error,\n      }}\n      badge={badge}\n      breadcrumbsFor={() => breadcrumbsFor}\n      titleFunc={resourceTitleFunc}\n      getResourceStatus={taskRunFilterReducer}\n      pages={[\n        navFactory.details(TaskRunDetails),\n        navFactory.editYaml(viewYamlComponent),\n        {\n          href: 'logs',\n          path: 'logs/:name?',\n          // t('pipelines-plugin~Logs')\n          nameKey: 'pipelines-plugin~Logs',\n          component: TaskRunLog,\n        },\n        navFactory.events(TaskRunEvents),\n      ]}\n    />\n  );\n};\nexport default TaskRunDetailsPage;\n","export { default as ClusterTaskDetailsPage } from './ClusterTaskDetailsPage';\nexport { default as ClusterTaskListPage } from './ClusterTaskListPage';\n","import * as React from 'react';\nimport { DetailsPageProps, DetailsPage } from '@console/internal/components/factory';\nimport { navFactory, Kebab } from '@console/internal/components/utils';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { useTasksBreadcrumbsFor } from '../pipelines/hooks';\nimport ClusterTaskDetails from './ClusterTaskDetails';\n\nconst ClusterTaskDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const breadcrumbsFor = useTasksBreadcrumbsFor(kindObj);\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n\n  return (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      menuActions={Kebab.factory.common}\n      breadcrumbsFor={() => breadcrumbsFor}\n      pages={[navFactory.details(ClusterTaskDetails), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport default ClusterTaskDetailsPage;\n","import * as React from 'react';\nimport { DefaultList } from '@console/internal/components/default-resource';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ClusterTaskModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\n\ninterface ClusterTaskListPageProps {\n  hideBadge?: boolean;\n  canCreate?: boolean;\n}\n\nconst ClusterTaskListPage: React.FC<\n  Omit<React.ComponentProps<typeof ListPage>, 'canCreate' | 'kind' | 'ListComponent'> &\n    ClusterTaskListPageProps\n> = ({ hideBadge, ...props }) => {\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n  return (\n    <ListPage\n      {...props}\n      canCreate={props.canCreate ?? true}\n      kind={referenceForModel(ClusterTaskModel)}\n      ListComponent={DefaultList}\n      badge={hideBadge ? null : badge}\n    />\n  );\n};\nexport default ClusterTaskListPage;\n","export { default as TaskDetailsPage } from './TaskDetailsPage';\nexport { default as TasksListsPage } from './list-page/TasksListsPage';\nexport { default as TaskListPage } from './TaskListPage';\n","import * as React from 'react';\nimport { DetailsPageProps, DetailsPage } from '@console/internal/components/factory';\nimport { navFactory, Kebab } from '@console/internal/components/utils';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { useTasksBreadcrumbsFor } from '../pipelines/hooks';\nimport TaskDetails from './TaskDetails';\n\nconst TaskDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const breadcrumbsFor = useTasksBreadcrumbsFor(kindObj);\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n\n  return (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      menuActions={Kebab.factory.common}\n      breadcrumbsFor={() => breadcrumbsFor}\n      pages={[navFactory.details(TaskDetails), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport default TaskDetailsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { Page } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { MenuActions, MultiTabListPage } from '@console/shared';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { TaskModel, ClusterTaskModel, TaskRunModel } from '../../../models';\nimport { usePipelineTechPreviewBadge } from '../../../utils/hooks';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER } from '../../pipelines/const';\nimport TaskRunsListPage from '../../taskruns/list-page/TaskRunsListPage';\nimport ClusterTasksPage from './ClusterTasksPage';\nimport TasksPage from './TasksPage';\n\nconst TasksListsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n  const { ns: namespace } = useParams();\n  const badge = usePipelineTechPreviewBadge(namespace);\n  const [showTitle, canCreate, hideBadge] = [false, false, true];\n  const menuActions: MenuActions = {\n    tasks: { model: TaskModel },\n    taskRun: { model: TaskRunModel },\n    ...(!IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER && {\n      clusterTask: { model: ClusterTaskModel },\n    }),\n  };\n  const pages: Page[] = [\n    {\n      href: '',\n      name: t('pipelines-plugin~Tasks'),\n      component: TasksPage,\n      pageData: {\n        kind: referenceForModel(TaskModel),\n        canCreate,\n        namespace,\n        showTitle,\n      },\n    },\n    {\n      href: 'task-runs',\n      name: t('pipelines-plugin~TaskRuns'),\n      component: TaskRunsListPage,\n      pageData: {\n        hideBadge,\n        showTitle,\n      },\n    },\n    ...(!IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER\n      ? [\n          {\n            href: 'cluster-tasks',\n            name: t('pipelines-plugin~ClusterTasks'),\n            component: ClusterTasksPage,\n            pageData: {\n              kind: referenceForModel(ClusterTaskModel),\n              canCreate,\n              showTitle,\n            },\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} hideApplications>\n      <MultiTabListPage\n        pages={pages}\n        title={t('pipelines-plugin~Tasks')}\n        badge={badge}\n        menuActions={menuActions}\n      />\n    </NamespacedPage>\n  );\n};\n\nexport default TasksListsPage;\n","import * as React from 'react';\nimport { DefaultList } from '@console/internal/components/default-resource';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { TaskModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\n\ninterface TaskListPageProps {\n  hideBadge?: boolean;\n  canCreate?: boolean;\n}\n\nconst TaskListPage: React.FC<\n  Omit<React.ComponentProps<typeof ListPage>, 'canCreate' | 'kind' | 'ListComponent'> &\n    TaskListPageProps\n> = ({ hideBadge, ...props }) => {\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n  return (\n    <ListPage\n      {...props}\n      canCreate={props.canCreate ?? true}\n      kind={referenceForModel(TaskModel)}\n      ListComponent={DefaultList}\n      badge={hideBadge ? null : badge}\n    />\n  );\n};\nexport default TaskListPage;\n"],"sourceRoot":""}