{"version":3,"sources":["webpack:///./packages/pipelines-plugin/src/components/pipelines/list-page/PipelineList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/list-page/PipelineHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/list-page/PipelineRow.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/list-page/PipelineRowKebabActions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/EventListenerDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/EventListenerTriggers.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/EventListenerURL.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/TriggerTemplateDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/TriggerBindingDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/switch-to-form-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/PipelineBuilderForm.tsx","webpack:///./packages/pipelines-plugin/src/components/quicksearch/PipelineQuickSearch.tsx","webpack:///./packages/pipelines-plugin/src/components/quicksearch/PipelineQuickSearchDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/quicksearch/PipelineQuickSearchTaskAlert.tsx","webpack:///./packages/pipelines-plugin/src/components/quicksearch/PipelineQuickSearchVersionDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/modals/index.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/modals/ModalContent.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/PipelineBuilderFormEditor.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/PipelineBuilderVisualization.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/PipelineBuilderHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/task-sidebar/TaskSidebar.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/task-sidebar/TaskSidebarHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/task-sidebar/TaskSidebarShortcuts.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/task-sidebar/TaskSidebarName.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/task-sidebar/TaskSidebarParam.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/task-sidebar/TaskSidebarResource.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/task-sidebar/TaskSidebarWhenExpression.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/WhenExpressionForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/task-sidebar/TaskSidebarWorkspace.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/update-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/detail-page-tabs/PipelineRunDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/detail-page-tabs/PipelineRunDetailsSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/detail-page-tabs/PipelineRunCustomDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryLinkList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/detail-page-tabs/TriggeredBySection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/detail-page-tabs/PipelineRunVisualization.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/detail-page-tabs/PipelineRunLogs.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/events/PipelineRunEvents.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/PipelineRunParametersForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/PipelineRunParameters.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/list-page/ReppositoryList.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/list-page/RepositoryRow.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineMetricsEmptyState.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineMetricsRefreshDropdown.tsx","webpack:///./public/components/monitoring/poll-interval-dropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineMetricsTimeRangeDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineMetricsUnsupported.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineRunCount.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineRunDurationGraph.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineRunTaskRunGraph.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineSuccessRatioDonut.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/charts/successRatioDonut.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryPipelineRunListPage.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryPipelineRunList.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryPipelineRunRow.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryForm.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/RepositoryFormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/hooks/useBuilderImages.ts","webpack:///./packages/pipelines-plugin/src/components/repository/sections/AdvancedConfigurations.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/RepositoryOverview.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/form-fields/CopyPipelineRunButton.tsx","webpack:///./public/components/resource-quota.jsx","webpack:///./packages/pipelines-plugin/src/components/pipelines-index.ts","webpack:///./public/components/namespace.jsx","webpack:///./packages/console-shared/src/components/dashboard/inventory-card/utils.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/image-stream.tsx","webpack:///./public/components/storage-class.tsx","webpack:///./public/components/modals/confirm-modal.jsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard-context.tsx","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./public/components/dashboard/with-dashboard-resources.tsx","webpack:///./packages/dev-console/src/utils/imagestream-utils.ts","webpack:///./packages/console-app/src/components/resource-quota/utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/const.ts","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/dev-console/src/components/health-checks/create-health-checks-probe-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utils.ts","webpack:///./packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/health-item.tsx","webpack:///./packages/console-shared/src/promql/project-dashboard.ts","webpack:///./packages/console-shared/src/promql/cluster-dashboard.ts","webpack:///./packages/console-app/src/components/resource-quota/ResourceQuotaCharts.tsx","webpack:///./packages/console-app/src/components/resource-quota/AppliedClusterResourceQuotaCharts.tsx","webpack:///./public/components/graphs/donut.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/QuotaSummary.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./public/components/image-stream-timeline.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/context.ts","webpack:///./packages/pipelines-plugin/src/utils/hooks.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-utils.ts","webpack:///./packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/status-card.tsx","webpack:///./packages/dev-console/src/components/projects/CreateProjectListPage.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","webpack:///./public/components/graphs/gauge.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/hooks.ts","webpack:///./packages/dev-console/src/components/import/import-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils.ts","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.tsx","webpack:///./public/components/overview/index.tsx","webpack:///./public/components/dashboard/project-dashboard/details-card.tsx","webpack:///./public/components/dashboard/project-dashboard/status-card.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-card.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/inventory-card.tsx","webpack:///./public/components/dashboard/project-dashboard/activity-card.tsx","webpack:///./public/components/dashboard/project-dashboard/launcher-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherItem.tsx","webpack:///./public/components/dashboard/project-dashboard/resource-quota-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem.tsx","webpack:///./packages/console-app/src/components/resource-quota/ClusterResourceQuotaCharts.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem.tsx","webpack:///./packages/knative-plugin/src/utils/create-knative-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./public/components/storage/shared.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/dev-console/src/utils/shared-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/topology/src/components/svg/SvgResourceIcon.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualizationTask.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/draw-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/ErrorNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/useTaskRuns.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/factories.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/StatusIcon.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/triggers.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/index.ts","webpack:///./packages/topology/src/components/svg/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/pipeline-step-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualizationStepList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/LoadingTask.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PlusNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskListNode.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/WebhookSection.tsx","webpack:///./packages/pipelines-plugin/src/utils/pipeline-actions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/ModalStructure.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/hooks.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/utils.ts","webpack:///./packages/console-app/src/components/access-modes/access-mode.tsx","webpack:///./public/components/utils/storage-class-dropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/hooks/pac-hook.ts","webpack:///./packages/pipelines-plugin/src/utils/common.ts","webpack:///./packages/pipelines-plugin/src/components/taskruns/useTaskRuns.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/utils/tekton-results.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/usePipelineRuns.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/useTektonResults.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/LogSnippetBlock.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineTopologyGraph.tsx","webpack:///./packages/console-shared/src/components/editor/theme.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/RemoveTriggerModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/StartPipelineModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/ResourceKebabWithUserLabel.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineParameterSection.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/autoCompleteUtils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineWorkspacesSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/AddTriggerModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineRuns.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/pipelineRunLogSnippet.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/BuilderFinallyNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/WhenExpressionDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/dag.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/InstallingNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/RemoveNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/BuilderNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/CustomTaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/FinallyNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/InvalidTaskListNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/LoadingNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineTaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskEdge.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineVisualizationSurface.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/ConfigTypeSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/GithubSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/PermissionsSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/ResourceKebab.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/AutoCompletePopover.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/resource-utils.ts","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/autoCompleteValueParsers.ts","webpack:///./packages/pipelines-plugin/src/components/ListPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/log-snippet-utils.ts","webpack:///./packages/pipelines-plugin/src/components/quicksearch/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/LinkedPipelineRunTaskStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/usePipelineFromPipelineRun.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineResourceStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/logs-utils.ts","webpack:///./public/reducers/ols.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/remove-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/RemoveTriggerForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerTemplateSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/StartPipelineForm.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/useAutoComplete.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceDropdownField.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineResourceParam.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineClusterOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineGitOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineImageOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineStorageOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineSecretSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/SecretForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/SecretsList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/MultipleResourceKeySelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/MultipleKeySelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PVCDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/VolumeClaimTemplateForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/AddTriggerForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerBindingSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerBindingSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/list-page/PipelineRunList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/usePipelineRunVulnerabilities.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/list-page/pipelinerun-table.ts","webpack:///./packages/pipelines-plugin/src/images/signed-badge.svg","webpack:///./packages/pipelines-plugin/src/components/charts/HorizontalStackedBars.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/useTaskStatus.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/TaskStatusTooltip.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/LogSnippetFromPod.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineRunVulnerabilities.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/LogsWrapperComponent.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/MultiStreamLogs.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/Logs.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/TektonTaskRunLog.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/TaskRunsListPage.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/TaskRunsHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/taskruns-table.ts","webpack:///./packages/console-shared/src/components/editor/CodeEditorToolbar.tsx","webpack:///./packages/console-shared/src/hooks/ols-hook.ts","webpack:///./packages/console-shared/src/components/editor/ShortcutsLink.tsx","webpack:///./packages/dev-console/src/components/buildconfig/sections/EditorField.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/WorkspaceDefinitionList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/resource-overview/DynamicResourceLinkList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/PipelineParameters.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineRunStatusContent.tsx","webpack:///./packages/pipelines-plugin/src/components/catalog/apis/artifactHub.ts","webpack:///./packages/pipelines-plugin/src/components/catalog/apis/tektonHub.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/PipelineRunsResourceList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/StatusPopoverContent.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/logs/taskRunLogSnippet.ts","webpack:///./packages/pipelines-plugin/src/components/repository/list-page/RepositoriesList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/index.ts","webpack:///./packages/pipelines-plugin/src/components/shared/common/PipelineResourceRef.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineResources.tsx","webpack:///./packages/pipelines-plugin/src/components/ListPropProvider.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/list-page/PipelineRunHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/list-page/PipelineRunRow.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineBars.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineRunStatusPopoverContent.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/PipelinesResourceList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/list-page/PipelineAugmentRuns.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/PipelineBuilderPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/hooks.ts","webpack:///./packages/pipelines-plugin/src/components/quicksearch/pipeline-quicksearch-utils.ts","webpack:///./packages/pipelines-plugin/src/components/catalog/hooks/useApiResponse.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/index.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-utils.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/WorkspaceResourceLinkList.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/EmptyDirectoriesSection.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/VolumeClaimTemplateSection.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/workspaces/WorkspaceResourcesSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/RunDetailsErrorLog.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/events/event-utils.ts","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/TaskRunsList.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/list-page/TaskRunsRow.tsx","webpack:///./packages/pipelines-plugin/src/components/taskruns/status/TaskRunStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/PipelineDetailsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineDetails.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineParametersForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineResourcesForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineWorkspaces.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipelineForm-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/PipelinesPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/list-page/PipelineAugmentRunsWrapper.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/list-page/pipeline-table.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/EventListenerPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/TriggerTemplatePage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/resource-overview/ResourceLinkList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/TriggerBindingPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/ClusterTriggerBindingPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineResourceDetailsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/PipelineConditionDetailsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/form-switcher-validation.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/PipelineBuilderEditPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/PipelineTabbedPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/PipelineRunDetailsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/PipelineRunsK8sResourceList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/PipelineRunsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/detail-page-tabs/TaskRuns.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/list-page/RepositoryHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/PipelineRunStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/list-page/PipelinesList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineMetrics.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/PipelineMetricsQuickstart.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/charts/TimeSeriesChart.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/charts/lineChart.tsx","webpack:///./packages/pipelines-plugin/src/components/conditions/index.ts","webpack:///./packages/pipelines-plugin/src/components/conditions/ConditionListPage.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines-lists/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines-lists/PipelinesListsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/index.ts","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryDetailsPage.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryPipelineRunHeader.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/RepositoryFormPage.tsx","webpack:///./packages/pipelines-plugin/src/components/LogURLRedirect.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/resource-overview/TriggerTemplateResourceLink.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/OptionalableWorkspace.tsx"],"names":["props","t","defaultSortField","defaultSortOrder","desc","labelPluralKey","Header","Row","virtualize","title","sortField","transforms","className","id","pipelineReference","pipelinerunReference","TASKRUNSFORPLRCACHE","InFlightStoreForTaskRunsForPLR","PipelineStatus","obj","status","pipelineRun","latestRun","PipelineRowTable","PLRTaskRuns","taskRunsLoaded","taskRunStatusObj","kind","name","metadata","namespace","columnID","taskRuns","startTime","timestamp","pipeline","PipelineRowWithoutTaskRuns","PipelineRowWithTaskRunsFetch","cacheKey","undefined","PipelineRowWithTaskRuns","result","Cancelled","childReferences","length","templateNames","actions","resource","eventListener","triggers","spec","filter","trigger","template","ref","text","triggerTemplates","tr","map","triggerTemplateKind","triggerTemplateName","bindings","key","displayName","inline","links","removeSpaceBelow","routeURL","variant","inlineCompact","triggerTemplate","eventListeners","pipelineName","model","triggerBinding","triggerBindingLabel","labelKey","resourceDefinitionYAML","of","required","validRunAfter","formData","thisTask","test","runAfter","taskValidationYAMLSchema","taskObject","tKey","taskRef","default","taskSpec","params","value","Array","isArray","resources","inputs","outputs","when","input","operator","values","workspaces","workspace","task","pipelineBuilderYAMLSchema","description","val","type","tasks","finally","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","selectedTask","setSelectedTask","selectedTaskRef","current","contentRef","existingPipeline","isSubmitting","dirty","handleReset","handleSubmit","errors","setFieldValue","editorType","taskResources","validateForm","statusRef","menuOpen","setMenuOpen","savedCallback","resetSelectedTask","updateTasks","changes","listTasks","finallyTasks","finallyListTasks","loadingTasks","nodeType","isFinallyTask","selectedId","taskIndex","selectedIds","taskGroup","highlightedIds","onUpdateTasks","updatedTaskGroup","op","closeSidebarAndHandleReset","formEditor","hasExistingPipeline","onTaskSelection","builderNodes","findIndex","onTaskSearch","callback","yamlEditor","showSamples","onSave","closeRef","currentSelection","setTimeout","isExpanded","position","panelContent","onClose","resourceList","workspaceList","errorMap","onRenameTask","data","RENAME_TASK","onRemoveTask","taskName","REMOVE_TASK","selectedData","onClick","onSubmit","flexLayout","disablePaneBody","viewContainer","isOpen","setIsOpen","open","noMargin","formContext","editor","label","sanitizeTo","yamlPipeline","yamlContext","lastViewUserSettingKey","errorMessage","submitError","submitLabel","disableSubmit","YAML","resetLabel","sticky","Contents","catalogService","failedTasks","setFailedTasks","quickSearchProviders","catalogType","items","reduce","acc","item","installedTask","provider","artifactHub","tektonHub","redhat","attributes","installed","versions","version","toString","cta","selectedVersion","Promise","resolve","selectedVersionUrl","catch","push","loaded","getCatalogURL","searchTerm","ns","catalogLinkLabel","extensions","catalogExtensions","allItemsLoaded","searchPlaceholder","disableKeyboardOpen","icon","width","height","detailsRenderer","catalogId","selectedItem","closeModal","fireTelemetryEvent","setSelectedVersion","setVersions","hasInstalledVersion","setHasInstalledVersion","resetVersions","artifactHubDataLoaded","setArtifactHubDataLoaded","onChangeVersion","then","available_versions","selectedVersionContentUrl","content_url","tags","keywords","err","console","warn","mounted","itemVersions","apiURL","log","debouncedLoadVersions","debouncedLoadDetails","latestVersion","loadedVersion","find","hubLink","hubURLPath","uiURL","hasGutter","headingLevel","isDisabled","primary","e","uid","onChange","color","ctaType","additionalClassName","dataTestID","href","categories","categoryName","category","tag","Install","isInline","Update","setOpen","toggleIsOpen","v","versionItems","onSelect","_","toggle","toggleRef","onOpenChange","Object","keys","removeTaskModal","onRemove","message","size","buttonText","executeFn","submitDanger","isFilled","fieldName","addLabel","nameLabel","nameFieldName","descriptionLabel","descriptionFieldName","valueLabel","valueFieldName","emptyMessage","emptyValues","nodes","hasWhenExpression","taskLoadingError","tasksLoaded","graph","layout","DAGRE_BUILDER_SPACED","DAGRE_BUILDER","edges","n","join","builder","componentFactory","badge","grow","safeIndex","list","comparatorFunc","idx","taskResource","formikTaskReference","inputResources","outputResources","renderResource","resourceIdx","thisParam","availableResources","hasResource","removeThisTask","newName","preChangePipelineTask","param","taskParams","paramIdx","hasParam","resourceParam","taskWorkspaces","workspaceIdx","thisWorkspace","availableWorkspaces","hasWorkspace","resourceWorkspace","resourceKind","resourceName","largeIcon","disableLink","bodyContent","ctrl","keyName","maxWidth","distance","setStatus","initialName","statusPath","nameError","interimName","setInterimName","validating","setValidating","isValid","reservedNames","usedName","saveErrorState","fieldId","isRequired","validated","_event","includes","validate","onBlur","placeholder","autoCompleteOptions","emptyIsInvalid","resourceParamName","setValue","textAreaSettings","rows","resizeOrientation","mergeNewValue","arrayName","additionalProps","autoCompleteValues","onAutoComplete","newValue","newValues","helpText","getFieldMeta","resourceType","optional","dropdownResources","trim","currentLinkedResourceName","currentLinkedResourceSelectable","some","options","isPlaceholder","selectedResource","field","removeWhenExpressionLabel","headers","rowRenderer","onDelete","namePrefix","content","plain","button","span","autoComplete","dataTest","fullWidth","workspaceName","dropdownWorkspaces","currentLinkedWorkspaceName","currentLinkedWorkspaceSelectable","selectedWorkspace","getTaskNames","removeAndUpdateTasks","removalTaskName","updateAndRemoveTasks","updateOnlyTasks","removalTask","applyChange","taskGrouping","ADD_LIST_TASK","direction","relatedTask","newTaskName","relatedTaskName","BEFORE","pipelineTask","listTask","AFTER","PARALLEL","Error","addListNode","CONVERT_LIST_TO_TASK","usedNames","newPipelineTask","convertListToTask","CONVERT_LIST_TO_FINALLY_TASK","convertFinallyListToTask","DELETE_LIST_TASK","listTaskName","updateFinallyTasks","updateFinallyListTasks","deleteListTask","finallyUpdateAndRemoveTasks","removeTask","getUpdatedTasks","updatedTasks","updatedFinallyTasks","renameTask","FIX_INVALID_LIST_TASK","existingName","fixInvalidListTask","FIX_INVALID_FINALLY_LIST_TASK","fixInvalidFinallyListTask","ADD_FINALLY_LIST_TASK","addFinallyListTask","ADD_LOADING_TASK","newLoadingTask","convertToLoadingTask","CONVERT_LOADING_TASK_TO_TASK","convertLoadingNodeToTask","CONVERT_LOADING_TASK_TO_FINALLY_TASK","convertLoadingNodeToFinallyTask","PipelineRunDetails","pipelineResourceLinks","pipelineSpec","sbomTaskRun","buildImage","linkToSbom","isExternalLink","logDetails","isReadOnly","hoverTip","clickTip","startsWith","to","completionTime","ownerResourceName","plrLabels","labels","plrAnnotations","annotations","repoLabel","REPOSITORY","repoName","repoURL","REPO_URL","shaURL","SHA_URL","branchName","BRANCH","SHA","truncateEnd","omission","EVENT_TYPE","manualTrigger","user","autoTrigger","PipelineRunLogsWithTranslation","super","getActiveTaskRun","activeTask","activeTaskRun","taskRun","Failed","getSortedTaskRun","tRuns","sort","a","b","Date","pipelineTaskNames","c","d","indexOf","onNavSelect","this","setState","activeItem","itemId","navUntouched","state","sortedTaskRuns","nextProps","taskRunNames","tRun","pipelineStatus","taskCount","downloadAllCallback","podName","pipelineRunFinished","Running","isList","waitingForPods","selectedItemRef","scrollIntoView","behavior","block","logsPath","theme","taskRunName","isActive","downloadAllLabel","onDownloadAll","staticMessage","PipelineRunLogs","PipelineRunLogsWithActiveTask","location","URLSearchParams","search","get","filters","initialValues","parameters","pipelineRuns","pipelineRunsLoaded","customData","plrs","plr","latestPLREventType","factory","common","full","interval","setInterval","htmlFor","setClosed","intervalOptions","count","selectedKey","isSelected","timespan","setTimespan","timeRangeOptions","selected","shouldFocusToggleOnSelect","updatePermission","metricsLevel","onLoad","onInitialLoad","queryPrefix","pipelineRunResult","error","loading","delay","pipelineRunResultData","chartName","hasData","newGraphData","grouped","g","x","finalArray","bounds","measureRef","contentRect","style","ariaDesc","containerComponent","constrainToVisibleArea","datum","childName","y","runData","runDataError","runDataLoading","pipelineRunDurationData","chartHeight","r","metric","pipelinerun","prun","totalDuration","duration","time","averageDuration","spaceItems","themeColor","green","yTickFormatter","seconds","Math","floor","voronoiPadding","bottom","activateData","LegendContainer","children","hiddenSeries","setHiddenSeries","Set","taskNameMap","pipelineTaskRunData","pRuns","tickValues","finalObj","getLegendData","index","has","isHidden","handleLegendClick","hidden","delete","add","events","chartNames","l","i","legendName","onLegendClick","legendComponent","groupComponent","gutter","fontSize","fill","mouseFollowTooltips","voronoiDimension","cursorDimension","labelComponent","legendData","statusColor","cancelled","failed","success","pipelineSuccessData","pipelineRunsCollection","totalValue","percentage","toFixed","sortOrder","parseFloat","successTimeSeriesObj","date","setHours","emptyState","successValue","successData","xl2","xl","lg","md","sm","marginTop","OVERLAP","subTitle","bar","domain","ariaTitle","sortKey","padding","left","right","top","subTitleComponent","titleComponent","repository","pac","url","path","git_provider","secret","webhook_secret","flex","selector","matchLabels","pipelineRunsLoadError","loadError","showTitle","canCreate","ListComponent","rowFilters","operatorVersion","PLRStatus","nameSuffix","src","alt","SHA_MESSAGE","condensed","RepositoryForm","showOverviewPage","templatesRef","builderImages","debouncedHandleGitUrlChange","detectedGitType","recommendedRepoName","gitService","importStrategyData","strategies","detectedBuildTypes","s","S2I","detectedCustomData","recommendedBuildType","recommended","hasOwnProperty","trimmedURL","target","useBuilderImages","imageStreams","loadedError","prop","builderImageStreams","githubAppAvailable","setGithubAppAvailable","GITHUB","WEBHOOK","gitProvider","webhook","autoAttach","info","gitUrl","showShortcuts","toolbarLinks","language","lineHeight","readOnly","minimap","enabled","scrollBeyondLastLine","align","yamlData","method","copied","setCopied","tooltipText","tooltipContent","exitDelay","onCopy","onMouseEnter","resourceQuotaMenuActions","getExtensionsActionsForKind","clusterResourceQuotaMenuActions","appliedClusterResourceQuotaMenuActions","ModifyLabels","ModifyAnnotations","accessReview","group","apiGroup","plural","verb","Delete","isClusterQuota","quota","clusterQuotaReference","appliedClusterQuotaReference","quotaActions","getQuotaResourceTypes","specHard","getACRQResourceUsage","used","namespaces","cluster","total","totalUsed","max","hard","percentNamespace","percentOtherNamespaces","percent","otherNamespaces","unused","getResourceUsage","isCluster","specPath","usedPath","tableColumnClasses","columnClass","acrqTableColumnClasses","UsageIcon","usageIcon","ResourceUsageRow","QuotaScopesInline","scopes","QuotaScopesList","quotaScopes","Terminating","NotTerminating","BestEffort","NotBestEffort","scope","scopeObj","hasComputeResources","resourceTypes","Details","rq","reference","isACRQ","charts","appliedClusterResourceQuota","clusterResourceQuota","resourceQuota","canListCRQ","display","marginBottom","ResourceQuotaTableRow","resourcesAtQuota","creationTimestamp","AppliedClusterResourceQuotaTableRow","ResourceQuotasList","AppliedClusterResourceQuotasList","quotaType","flatten","ResourceQuotasPage","OPENSHIFT","flags","mock","namespaced","filterGroupName","reducer","createNS","createAccessReview","createButtonText","createProps","AppliedClusterResourceQuotasPage","ResourceQuotasDetailsPage","menuActions","pages","details","editYaml","AppliedClusterResourceQuotasDetailsPage","getDisplayName","getFilters","requester","ME","USER","SYSTEM","hideIfEmpty","deleteModal","labelKind","weight","tooltip","phase","nsMenuActions","Edit","fetchNamespaceMetrics","promises","query","Number","all","namespaceColumnInfo","freeze","classes","memory","cpu","created","NamespacesTableHeader","sortFunc","additional","NamespacesColumnManagementID","getNamespacesSelectedColumns","column","NamespacesTableRow","tableColumns","metrics","UI","getIn","bytes","cores","columns","NamespacesNotFoundMessage","Icon","NamespacesEmptyMessage","NamespacesList","dispatch","updateMetrics","clearInterval","selectedColumns","activeColumns","columnManagementID","EmptyMsg","NoDataEmptyMsg","NamespacesPage","createNamespaceModal","createHandler","columnLayout","projectMenuActions","projectColumnManagementID","projectTableHeader","showMetrics","showActions","ProjectLink","project","setLastNamespace","URL","window","basePath","pathname","newUrl","hash","namespacedPath","sessionStorage","setItem","projectHeaderWithoutActions","ProjectTableRow","ProjectLinkComponent","actionsEnabled","isColumnManagementEnabled","getProjectSelectedColumns","ProjectsTable","headerWithMetrics","headerNoMetrics","ProjectNotFoundMessage","canCreateNs","CAN_CREATE_NS","canCreateProject","CAN_CREATE_PROJECT","ProjectEmptyMessage","ProjectList","tableProps","canGetNS","CAN_GET_NS","screen","ProjectsPage","createProjectModal","filterLabel","skipAccessReview","textFilter","PullSecret","isLoading","setIsLoading","setData","setError","canViewSecrets","serviceAccount","imagePullSecrets","modal","pullSecret","linkTo","NamespaceLineCharts","humanize","byteDataType","BinaryBytes","TopPodsBarChart","ResourceUsage","NamespaceSummary","serviceMeshEnabled","canListSecrets","showLabelEditor","NamespaceDetails","perspective","consoleLinks","hideHeading","link","RolesPage","createPath","NamespacesDetailsPage","roles","ProjectsDetailsPage","nameKey","component","workloads","POD_PHASE_GROUP_MAPPING","NOT_MAPPED","ERROR","PROGRESS","WARN","PVC_STATUS_GROUP_MAPPING","PV_STATUS_GROUP_MAPPING","NODE_STATUS_GROUP_MAPPING","VS_STATUS_GROUP_MAPPING","getStatusGroups","mapping","mapper","filterType","groups","UNKNOWN","statusIDs","forEach","getPodStatusGroups","getNodeStatusGroups","getPVCStatusGroups","pvc","getPVStatusGroups","pv","getVSStatusGroups","getAnnotationTags","specTag","split","getBuilderTags","imageStream","statusTags","getStatusTags","annotationTags","isBuilderTag","getBuilderTagsSortedByVersion","v1","v2","localeCompare","getMostRecentBuilderTag","isBuilder","ImageStreamTagsRow","statusTag","imageStreamStatus","latest","from","referencesTag","image","dockerRepositoryCheck","ExampleDockerCommandPopover","publicImageRepository","pushCommand","pullCommand","headerContent","minWidth","ImageStreamsDetails","imageRepository","imageCount","specTagByName","importErrors","importErrorCondition","conditions","condition","warning","alerts","ImageStreamHistory","imageStreamStatusTags","imageStreamTags","imageStreamName","imageStreamNamespace","history","ImageStreamsDetailsPage","ImageStreamsTableRow","ImageStreamsList","ImageStreamsTableHeader","buildPhase","build","ImageStreamsPage","StorageClassReference","isDefaultClass","storageClass","StorageClassDetails","StorageClassTableRow","provisioner","reclaimPolicy","StorageClassList","StorageClassPage","StorageClassDetailsPage","ConfirmModal","_submit","bind","_cancel","cancel","event","preventDefault","handlePromise","supressNotifications","close","titleKey","messageKey","btnText","btnTextKey","cancelText","cancelTextKey","inProgress","submitText","propTypes","confirmModal","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","getCheDecoratorData","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","branch","baseUrl","owner","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","itemData","reject","updates","getType","groupResources","groupResource","nextResource","createTopologyResourceConnection","source","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","dockerconfigjson","opaque","toTypeAbstraction","sshAuth","dockercfg","generic","generateSecret","s4","random","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","DroppableFileInput","loader","API_PROXY_URL","convertHeaders","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","onCancel","navigate","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","setInProgress","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","onDataChanged","secretsData","onError","onNameChanged","newSecret","save","encode","renderBody","disabled","onFormDisable","disable","saveButtonText","ImageStreamActions","GitReadableTypes","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","authType","changeAuthenticationType","authTypes","dropDownClassName","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","k","decodedAuth","parsedAuth","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","host","defaultBranch","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","getContents","specificPath","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","isFilePresent","getFileContent","Buffer","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","isServerURL","f","skip_cert_verification","filePath","GitlabService","getRepo","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","BuildTools","expectedRegexp","priority","RegExp","customDetection","packageJson","detectBuildTypes","detectedFiles","t1","t2","SucceedConditionReason","pipelineRunStatus","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","TaskRunCancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRunFilterTitleReducer","flexStyle","flexDirection","margin","extraMargin","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","is","deploymentValidationSchema","replicas","transform","cv","min","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","excludeEmptyString","domainName","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","request","requestUnit","limitUnit","ensure","imageValidationSchema","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","PipelineModel","abbr","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","isFinallyTasks","Idle","taskStatus","mTask","pipelineTaskName","getTime","getPipelineTasks","out","taskList","flag","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","getPipelineRunWorkspaces","pipelineWorkspaces","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","associateServiceAccountToSecret","isImageSecret","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceKind","ownerReferences","getPipeline","pipelines","p","getTriggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","match","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","updateResourceApplication","instanceName","prevApplication","patches","listsValue","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","detectImportStrategies","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","getTaskStatus","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","visible","getTopologyEdgeItems","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","URL_REPO","URL_ORG","RepositoryAnnotations","PacConfigurationTypes","defaultRepositoryFormValues","INVALID","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","git","docker","devfile","serverless","route","limits","healthChecks","hasDomain","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","isNaN","end","step","getRangeVectorData","xMutator","yMutator","getXaxisValues","xValues","oneDayDuration","numDays","round","now","setDate","getDate","slice","getDuration","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","repositoryName","generateName","createTokenSecret","gitHost","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","ProjectDashboardContext","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","labelPosition","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","nexChild","getAllNodeChildren","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","mapDispatchToProps","watchURL","stopWatchURL","watchPrometheusQuery","stopWatchPrometheusQuery","mapStateToProps","dashboards","PROMETHEUS","notificationAlerts","observe","withDashboardResources","WrappedComponent","urls","queries","watchingAlerts","watchPrometheus","queryKey","q","watchAlerts","stopWatchAlerts","watchK8sResource","k8sResources","stopWatchK8sResource","getExternalProps","nextState","urlResultChanged","urlKey","queryResultChanged","alertsResultChanged","k8sResourcesChanged","nextExternalProps","externalProps","urlResults","prometheusResults","imageStreamLabels","getSampleRepo","sampleRepo","getSampleRef","sampleRef","getSampleContextDir","sampleContextDir","getPorts","imageStreamImage","portSpec","parts","parseInt","protocol","toUpperCase","portsFromSpec","dockerImageMetadata","Config","ExposedPorts","ContainerConfig","makePortName","toLowerCase","prettifyName","first","prep","letter","normalizeBuilderImages","recentTag","iconClass","iconUrl","getTagDataWithDisplayName","imageTags","selectedTag","defaultName","imageTag","getSuggestedName","imageName","RegistryType","BuilderImagesNamespace","imageRegistryType","External","Internal","getImageStreamTags","getSortedTags","getProjectResource","getImageStreamResource","genericCountResources","getUsedPercentage","usedNum","hardNum","getLabelAndUsage","useCount","NODE_SEPARATION_HORIZONTAL","DROP_SHADOW_SPACING","BUILDER_NODE_ADD_RADIUS","BUILDER_NODE_DECORATOR_RADIUS","BUILDER_NODE_ADD_PADDING","NODE_WIDTH","NODE_HEIGHT","FINALLY_NODE_PADDING","FINALLY_NODE_VERTICAL_SPACING","FINALLY_ADD_LINK_TEXT_HEIGHT","FINALLY_ADD_LINK_SIZE","WHEN_EXPRESSSION_DIAMOND_SIZE","WHEN_EXPRESSION_SPACING","DEFAULT_NODE_HEIGHT","NODE_PADDING","DEFAULT_NODE_ICON_WIDTH","DEFAULT_BADGE_WIDTH","DEFAULT_FINALLLY_GROUP_PADDING","TOOLBAR_HEIGHT","GRAPH_MIN_WIDTH","GRAPH_MAX_HEIGHT_PERCENT","NodeType","DrawDesign","PipelineLayout","AddNodeDirection","DAGRE_SHARED_PROPS","nodesep","ranksep","edgesep","ranker","rankdir","marginx","marginy","DAGRE_VIEWER_PROPS","DAGRE_VIEWER_SPACED_PROPS","DAGRE_BUILDER_PROPS","DAGRE_BUILDER_SPACED_PROPS","CustomTask","useK8sGet","opts","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","getPipelineName","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","dataSelector","getPipelineOperatorVersion","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","getAppLabels","applicationName","runtimeIcon","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageNamespace","imageTrigger","fieldPath","paused","getPodLabels","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","sourceSecret","volumes","getTemplateLabels","dataModelContext","extensionContext","getExtension","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","endpoint","RULES","constructProbeData","ContainerCommand","HTTPGET","scheme","TCPSocket","convertResourceDataToFormData","getHealthChecksData","containerIndex","ReadinessProbe","LivenessProbe","StartupProbe","getProbesData","HealthChecksProbeType","RequestType","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","dir","insecure","cadata","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","dx","dy","stdDeviation","floodColor","floodOpacity","navigator","userAgent","in","in2","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","uniqueResource","ConsumerPopover","consumers","onShow","onHide","PopoverBody","enableFlip","getLimitIcon","LimitsBody","limitState","requestedState","available","requested","OK","currentConsumer","setCurrentConsumer","activePerspective","canAccessMonitoring","SERVER_FLAGS","prometheusBaseURL","fieldSelector","k8sResource","getResourceToWatch","consumerData","consumerLoaded","consumersLoadError","top5Data","bodyData","consumer","monitoringParams","set","dropdownItems","curr","onDropdownChange","monitoringURL","String","ListItem","OperatorRow","operatorStatus","isResolved","Component","LoadingComponent","ResolvedComponent","operators","OperatorsPopup","operatorExtensions","dynamicOperatorSubsystems","sections","o","operatorResources","getOperatorsWithStatuses","viewAllLink","operatorRowLoader","reverse","OperatorHealthItem","healthStatuses","health","NOT_AVAILABLE","LOADING","operatorStatuses","importantStatuses","operatorsHealth","detailMessage","popupTitle","URLHealthItem","subsystem","modelExists","additionalResource","healthResult","healthResultError","k8sResult","healthState","healthHandler","popupBodyContent","popupComponent","hide","PrometheusHealthItem","infrastructure","queryResults","popupClassname","popupKeepOnOutsideClick","responses","ResourceHealthItem","resourcesWithNamespace","imageManifestVuln","resourcesResult","ProjectQueries","CPU_USAGE","CPU_REQUESTS","MEMORY_USAGE","MEMORY_REQUESTS","POD_COUNT","FILESYSTEM_USAGE","NETWORK_IN_UTILIZATION","NETWORK_OUT_UTILIZATION","top25Queries","PODS_BY_CPU","PODS_BY_MEMORY","PODS_BY_FILESYSTEM","PODS_BY_NETWORK_IN","PODS_BY_NETWORK_OUT","getMultilineQueries","NETWORK_UTILIZATION","getUtilizationQueries","getTopConsumerQueries","OverviewQuery","PODS_BY_STORAGE","NODES_BY_CPU","NODES_BY_MEMORY","NODES_BY_STORAGE","NODES_BY_PODS","NODES_BY_NETWORK_IN","NODES_BY_NETWORK_OUT","PROJECTS_BY_CPU","PROJECTS_BY_MEMORY","PROJECTS_BY_STORAGE","PROJECTS_BY_PODS","PROJECTS_BY_NETWORK_IN","PROJECTS_BY_NETWORK_OUT","overviewQueries","MEMORY_TOTAL","MEMORY_UTILIZATION","CPU_UTILIZATION","CPU_TOTAL","STORAGE_UTILIZATION","STORAGE_TOTAL","POD_UTILIZATION","getTop25ConsumerQueries","utilization","thresholds","nsQuotas","clusterHard","clusterUsed","nsUsed","clusterUsage","nsUsage","DonutChart","ariaChartLinkLabel","ariaChartTitle","ariaDescription","usedLabel","secondaryTitle","usedLabelText","secondaryTitleText","labelText","namespaceData","colorScale","getDefinedObj","objData","createPipelineResource","secretResp","pipelineResource","secretKey","createSecretResource","FILTER_ID","circleRef","typedIconSize","typedIconRef","iconWidth","iconHeight","cx","cy","xlinkHref","getImageStreamTagName","ImageStreamTimelineItem","linkToTag","referenceAndSHA","dockerImageReference","simple","isTagVersionLatest","comparedTag","comparedTagPosition","orderedTagArray","orderedTag","ImageStreamTimeline","tagsArray","timeline","ClusterDashboardContext","infrastructureLoaded","infrastructureError","getOSPTechPreviewBadge","installedGAVersion","TECH","usePipelineTechPreviewBadge","useTriggersTechPreviewBadge","getHealthChecksProbeConfig","probe","formTitle","formSubtitle","healthChecksDefaultValues","httpHeaders","healthChecksProbeInitialData","OperatorsSection","sortedOperatorStatuses","operatorsHealthy","RowLoading","firstColumn","operatorStatusLength","secondColumn","cvResource","DashboardAlerts","hasCVResource","CLUSTER_VERSION","cvLoaded","showClusterUpdate","StatusCard","k8sModels","k8s","subsystemExtensions","dynamicSubsystemExtensions","subsystems","filterSubsystems","popup","operatorSubsystemIndex","healthItems","disallowedControlPlaneTopology","controlPlaneTopology","operatorSubsystems","isClickable","isSelectable","hasNoOffset","CreateAProjectButton","openProjectModal","onCreate","setActiveNamespace","createNamespaceOrProjectModal","networkPopovers","PrometheusUtilizationItem","utilizationQuery","totalQuery","TopConsumerPopover","humanizeValue","limitQuery","requestQuery","setLimitReqState","utilizationError","totalError","limitError","requestError","PrometheusMultilineUtilizationItem","TopConsumerPopovers","stats","hasError","responseError","UtilizationCardNodeFilter","machineConfigPools","onNodeSelect","selectedNodes","selectOptions","order","indexA","indexB","mcp","mcpName","hasCheckbox","role","isRead","UtilizationCard","machineConfigPoolsLoaded","setSelectedNodes","dynamicItemExtensions","dynamicMultilineItemExtensions","utilizationQueries","multilineQueries","selectionUpdated","getUtilizationQuery","getTotalQuery","getRequestQuery","getLimitQuery","DEFAULT_THRESHOLDS","GaugeChart","invert","remainderLabel","ready","Gauge","QUERY","createGenericNode","runAfterTasks","createTaskNode","TASK_NODE","createCustomTaskNode","CUSTOM_TASK_NODE","createSpacerNode","SPACER_NODE","createTaskListNode","TASK_LIST_NODE","createInvalidTaskListNode","INVALID_TASK_LIST_NODE","createBuilderNode","BUILDER_NODE","createLoadingNode","LOADING_NODE","createBuilderFinallyNode","BUILDER_FINALLY_NODE","createPipelineTaskNode","handleParallelToParallelNodes","multipleRunBeforeMap","atIndex","multiParallelToParallelList","newNodes","newRunAfterNodeMap","p2p","names","p2pData","parallelSpacerName","p2pNodeId","newRunAfters","createNode","getNodeCreator","tasksToBuilderNodes","onAddNode","onNodeSelection","getError","getBuilderEdgesFromNodes","edgeList","getFinallyTaskHeight","allTasksLength","disableBuilder","getFinallyTaskWidth","whenExpressionSpacing","getLastRegularTasks","regularTasks","runAfters","concat","getTextWidth","font","context","document","createElement","getContext","measureText","extractDepsFromContextVariables","contextVariable","regex","deps","lastIndex","getSpacerNode","getTaskWhenStatus","Met","Unmet","getWhenStatus","getGraphDataModel","dag","addEdges","maxWidthForLevel","topologicalSort","level","vertex","depsFromContextVariables","paramValue","whenValue","dependancies","dependancyNames","depObj","vertices","minLevelDep","nd","badgePadding","isTaskSkipped","taskKind","whenStatus","finallyTaskList","maxFinallyNodeName","finallyNodes","fTask","FINALLY_NODE","finallyGroup","FINALLY_GROUP","spacerNodes","EDGE","DAGRE_VIEWER","scaleExtent","taskHasWhenExpression","nodesHasWhenExpression","getLayoutData","DAGRE_VIEWER_SPACED","getWhenExpressionDiamondState","isPipelineRun","diamondColor","getTooltipContent","statusReason","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","submitStartPipeline","processWorkspaces","pipelineRunResource","mainCards","Card","leftCards","rightCards","getNamespaceDashboardConsoleLinks","ProjectDashboard","namespaceLinks","hasNamespaceLinks","rc","usePipelinesBreadcrumbsFor","isAdminPerspective","useTasksBreadcrumbsFor","useTriggersBreadcrumbsFor","useDevPipelinesBreadcrumbsFor","navOption","useLatestPipelineRun","pipelineRunLoaded","pipelineRunError","usePipelinePVC","pvcResource","PVCLoaded","PVCError","usePipelineSuccessRatioPoll","QUERY_RANGE","usePipelineRunTaskRunPoll","usePipelineRunDurationPoll","usePipelineRunPoll","createProject","projectData","createOrUpdateImageStream","imageStreamData","appResources","generatedImageStreamName","userLabels","NAME_LABEL","imageStreamList","imgstr","imageStreamFilterData","originalImageStream","defaultLabels","defaultAnnotations","imgStreamName","newImageStream","createWebhookSecret","createOrUpdateBuildConfig","originalBuildConfig","imageEnv","env","buildStrategy","buildStrategyData","desiredContextDir","imageEnvKeys","customEnvs","buildEnv","dockerStrategy","sourceStrategy","webhookTriggerData","excludedGitTypesForTriggers","buildConfigName","newBuildConfig","uri","imageChange","createOrUpdateDeployment","originalDeployment","ports","podLabels","templateLabels","newDeployment","createOrUpdateResources","createNewProject","create","canCreateRoute","webhookTrigger","option","originalRepository","Devfile","devfileProjectType","devfileResourceObjects","imageStreamResponse","buildConfigResponse","buildResource","webhookSecretResponse","deploymentResponse","deployResource","serviceModelResponse","service","routeResponse","devfileResources","createDevfileResources","pacRepository","pipelineResources","pipelineData","managedPipeline","triggerResources","detectedType","pipelineServiceAccount","managePipelineResources","originalShipwrightBuild","clusterBuildStrategy","imageStreamRepository","dockerImageRepository","shipwrightParamsObj","Docker","Source","shipwrightBuildName","newShipwrightBuild","cloneSecret","paramValues","shipwrightBuild","createOrUpdateShipwrightBuild","imageStreamURL","originalAnnotations","editAppResource","triggerAnnotations","knDeploymentResource","domainMappingResources","originalDeploymentConfig","newDeploymentConfig","imageChangeParams","automatic","containerNames","deploymentConfig","createOrUpdateDeploymentConfig","originalService","originalRoute","filterDeployedResources","handleRedirect","perspectiveExtensions","searchParamOverrides","perspectiveData","redirectURL","importRedirectURL","searchParams","urlObj","fromEntries","addSearchParamsToRelativeURL","isRouteAdvOptionsUsed","routeData","ksvcRouteData","tlsKey","isScalingAdvOptions","scalingData","ksvcData","ksvcScalingData","scKey","defaultConcurrencytarget","defaultConcurrencyutilization","autoscaleData","asKey","defaultAutoscalewindow","isResourceLimitAdvOptions","resLimits","isLimitUsed","resLimitObj","limitKey","defaultLimitUnit","defaultRequestUnit","getTelemetryImport","devfileJson","selStrategy","import","selectedStrategy","useRecommended","recommendedStrategy","recommendedBuilderImage","devFileLanguage","projectType","devFileProjectType","targetPortChanged","useRunCommand","NPM_RUN","useAdvancedOptionsGit","useAdvancedOptionsBuild","useAdvancedOptionsDeployment","useAdvancedOptionsRoute","useAdvancedOptionsHealthChecks","useAdvancedOptionsScaling","useAdvancedOptionsResourceLimits","useAdvancedOptionsLabels","getPipelineParams","gitDir","isDockerPipeline","createPipelineForImportFlow","createPipelineRunForImportFlow","isServerlessFunctionPipeline","pipelineInitialValues","VolumeClaimTemplate","secretOpen","updatePipelineForImportFlow","updatedPipeline","pipelineRuntimeOrVersionChanged","resourceVersion","listComponent","listPageProps","OverviewListPageLoader","m","OverviewListPage","DetailsCard","labelsSubset","firstThreelabels","detailsLink","projectName","ClusterUtilizationContext","useConsumers","nsQuery","podQuery","nodeQuery","consumerQueries","CPUPopover","MemoryPopover","StoragePopover","PodPopover","NetworkInPopover","NetworkOutPopover","ProjectUtilizationContext","FilesystemPopover","ProjectInventoryItem","additionalResources","additionalDynamicResources","createFirehoseResource","resourceLoaded","resourceLoadError","additionalResourcesData","additionalResourcesLoaded","additionalResourcesLoadError","dynamicResources","dynamicResourcesError","dynamicResourcesLoaded","InventoryCard","itemExtensions","inventoryExtensions","RecentEvent","viewEvents","eventsResource","getEventsResource","moreLink","OngoingActivity","resourceActivityExtensions","dynamicResourceActivityExtensions","resourceActivities","allResourceActivities","isActivity","getTimestamp","resourcesLoaded","ActivityCard","LauncherCard","nl","consoleLink","ResourceQuotaCard","quotas","rqLoaded","rqLoadError","groupVersionKind","clusterQuotas","acrqLoaded","acrqLoadError","noText","cq","setExpanded","onToggle","toggleContent","truncate","getKnativeServiceDepResource","imageStreamUrl","imageStreamTag","originalKnativeService","defaultUnknownPort","imagePolicy","formType","fileUpload","contTargetPort","imgPullPolicy","Always","IfNotPresent","cpuRequest","cpuRequestUnit","cpuLimit","cpuLimitUnit","memoryRequest","memoryRequestUnit","memoryLimit","memoryLimitUnit","defaultLabel","jArgsIndex","javaArgs","newKnativeDeployResource","jarFileName","containerConcurrency","imagePullPolicy","securityContext","allowPrivilegeEscalation","capabilities","drop","runAsNonRoot","seccompProfile","knativeServiceUpdated","formDomainMappingStruct","knativeSvcResource","curDomainMapping","svcName","getDomainMappingResources","selectedDomainMapping","allDomainMappingList","dmDeleteList","ksvcName","selDomainMappingNames","dmRes","dmSvc","dmDel","action","dmCreateUpdateList","curDomain","domainMappingResourceData","Create","getDomainMappingRequests","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","snapshotPVCStorageClassAnnotation","snapshotPVCAccessModeAnnotation","snapshotPVCVolumeModeAnnotation","initialAccessModes","initialVolumeModes","provisionerAccessModeMapping","Filesystem","Block","partialMatch","getAccessModeOptions","getVolumeModeRadios","dropdownUnits","Ki","Mi","Gi","Ti","Pi","Ei","getProvisionerModeMapping","getAccessModeForProvisioner","ignoreReadOnly","modeMapping","mode","flat","modes","getVolumeModeForProvisioner","accessMode","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","servicePort","submitTrigger","thisNamespace","triggerTemplateParams","pipelineOperatorVersion","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","isDeployImageFormData","createService","imagePorts","isi","isiPorts","existingRouteTargetPort","targetPort","newService","createRoute","routeLabels","newRoute","wildcardPolicy","createTriggerTemplate","createEventListener","triggerBindings","createEventListenerRoute","eventListenerName","referenceName","eventlistener","SvgResourceIcon","leftJustified","iconRef","kindAbbr","kindStr","kindColor","getKindStringAndAbbreviation","textSize","textRef","paddingX","paddingY","rx","ry","textAnchor","getAllNotStartedPipelines","getItem","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setPipelineNotStarted","PipelineVisualizationTask","pipelineRunName","disableTooltip","isSkipped","taskComponent","TaskComponent","disableVisualizationTooltip","stepStatusList","steps","showStatusState","visualName","nameRef","pillRef","enableLogLink","hasRunAfter","taskStatusColor","hover","hoverRef","truncatedVisualName","renderVisualName","taskPill","triggerRef","viewBox","disableSpin","SvgTaskStatus","isSpecOverview","taskNode","appendLine","enableTooltip","leftOffset","stepWidth","segments","seg","leftRight","p1","p2","topDown","bottomUp","moveTo","lineTo","quadTo","corner","CURVE_SIZE","curve","fromPoint","cornerPoint","toPoint","rightAndDown","downAndRight","rightAndUp","upAndRight","straightPath","finish","integralShapePath","firstCurve","secondCurve","cornerX","firstCorner","secondCorner","errorStr","STATUS_KEY_NAME_ERROR","UpdateOperationType","TaskErrorType","TASK_FIELD_ERROR_TYPE_MAPPING","NAME_ERROR","MISSING_REQUIRED_PARAMS","MISSING_RESOURCES","MISSING_WORKSPACES","MISSING_REQUIRED_WHEN_EXPRESSIONS","getTaskErrorString","errorType","WhenExpressionOperatorType","initialPipelineFormData","useTaskRuns","getNextPage","builderComponentsFactory","dagreViewerComponentFactory","layoutFactory","linkDistance","nodeDistance","groupDistance","collideDistance","simulationSpeed","chargeStrength","allowDrag","layoutOnDrag","StatusIcon","ColoredStatusIcon","others","getResourceName","getEventListenerTemplateNames","el","elTrigger","getEventListenerGeneratedName","useAllEventListeners","eventListenerResource","eventListenerLoaded","usePipelineTriggerTemplateNames","eventListenerResources","triggerTemplateResources","resourceMap","memoResources","useEventListenerRoutes","triggerTemplateResults","countExpected","countLoaded","countErrored","matchingTriggerTemplateNames","resourceWatch","ev","eventListenerTemplateNames","generatedRouteName","useEventListenerURL","routeLoaded","ingress","getEventListenerTriggerBindingNames","binding","getTriggerTemplatePipelineName","useTriggerTemplateEventListenerNames","useTriggerBindingEventListenerNames","TerminatedReasons","getMatchingStep","statusStep","getMatchingStepDuration","matchingStep","startedAt","finishedAt","running","createStepStatus","stepRunStatus","TooltipColoredStatusIcon","sharedProps","PipelineVisualizationStepList","hideHeader","truncatedName","tooltipPosition","unselectedText","onNewTask","unselectedTaskText","truncatedTaskText","renderText","stopPropagation","removeCallback","element","formContextField","fieldPrefix","controllerUrl","setControllerUrl","setWebhookSecret","ctlUrl","labelIcon","activeChildren","rel","autocompleteFilter","showBadge","toggleText","getPermssionSectionHeading","small","handlePipelineRunSubmit","startPipeline","triggerPipeline","modalClassName","rerunPipeline","onComplete","rerunPipelineAndStay","deleteResourceObj","tektonResultsFlag","isResourceLoadedFromTR","getPipelineKebabActions","isTriggerPresent","rerunPipelineAndRedirect","cleanPipeline","addTrigger","removeTrigger","editPipeline","getPipelineRunKebabActions","redirectReRun","rerunPipelineRunAndRedirect","reRunPipelineRun","tooltipKey","stopPipelineRunForTaskRunStatus","PLRTasks","stopPipelineRun","cancelPipelineRunFinallyForTaskRunStatus","cancelPipelineRunFinally","getTaskRunKebabActions","submitBtnText","submitDisabled","mergeAnnotationsWithResource","useUserAnnotationForManualStart","usePipelineRunWithUserAnnotation","useMenuActionsWithUserAnnotation","kebabAction","rest","commonPipelineSchema","Secret","ConfigMap","configMap","startPipelineSchema","equals","addTriggerSchema","advancedSectionValidationSchema","getBuilderTasksErrorGroup","formikFormErrors","paths","nameErrorString","getErrorsForType","formErrors","displayNameErrors","getTopLevelErrorMessage","errorObj","taskErrors","matchingErrorType","mappingErrorType","propertyPath","findTask","resourceTasks","clusterTasks","namespacedTasks","matchingName","findTaskFromFormikData","formikData","mapReplaceRelatedInOthers","iterationTask","remainingRunAfters","runAfterName","mapRemoveRelatedInOthers","mapStitchReplaceInOthers","updatedIterationTask","newRunAfter","mapBeRelated","mapAddRelatedToOthers","safeName","desiredName","convertResourceToLoadingTask","convertResourceToTask","convertBuilderFormToPipeline","listIds","unhandledSpec","trimmedTask","removeEmptyFormFields","removeListRunAfters","convertPipelineToBuilderForm","getPVCAccessModes","AccessModeSelector","filterByVolumeMode","availableAccessModes","pvcInitialAccessMode","allowedAccessModes","setAllowedAccessModes","setAccessMode","changeAccessMode","setSelected","onToggleClick","StorageClassDropdownInnerWithTranslation","defaultClass","getTitle","kindLabel","UNSAFE_componentWillReceiveProps","unorderedItems","noStorageClass","StorageClass","zone","sc","describedBy","noSelection","StorageClassDropdownEntry","StorageClassDropdownNoStorageClassOption","itemsAvailableToShow","hideClassName","autocompletePlaceholder","menuClassName","StorageClassDropdownInner","StorageClassDropdown","storageClassProperties","storageClassDescriptionLine","usePacInfo","paramIsRequired","taskRunResource","getTaskRunsOfPipelineRun","decodeValueJson","decodedValue","atob","decodeValue","resourceDeletedInK8sAnnotation","deletionTimestamp","AND","expressions","EXP","EQ","NEQ","DataType","labelsToFilter","selectorToFilter","matchExpressions","filterByName","expression","CACHE","InFlightStore","getTRURLHost","tektonResult","targetNamespace","serverPort","server_port","tlsHostname","tls_hostname_override","tektonResultsAPI","getFilteredRecord","dataType","nextPageToken","records","page_size","pageSize","page_token","createTektonResultsUrl","code","getPipelineRuns","PipelineRunV1","PipelineRunV1Beta1","getFilteredPipelineRuns","getTaskRuns","TaskRunV1","TaskRunV1Beta1","getFilteredTaskRuns","consoleProxyFetchLog","getTaskRunLog","taskRunPath","throw404","sanitizePipelineParams","pipelineWithNoEmptyDefaultParams","parameter","removeEmptyDefaultFromPipelineParams","getPipelineTaskLinks","toResourceLinkData","qualifier","taskLinks","finallyTaskLinks","getPipelineResourceLinks","definitionResources","runResources","definitionResource","resourceRef","isResourceRef","convertBackingPipelineToPipelineResourceRefProps","useRuns","etcdRunsRef","optionsMemo","watchOptions","etcdRuns","queryTr","trOptions","trResources","trLoaded","trError","trGetNextPage","rResources","usePipelineRuns","usePipelineRun","useTaskRun","useTRRuns","getRuns","setNextPageToken","localCacheKey","setLocalCacheKey","setResult","disposed","tkPipelineRuns","callInflight","cur","executed","useTRPipelineRuns","useTRTaskRuns","useGetPipelineRuns","resultPlrs","resultPlrsLoaded","resultPlrsLoadError","k8sPlrs","k8sPlrsLoaded","k8sPlrsLoadError","useTRTaskRunLog","showControlBar","noScrollbar","monaco","defineTheme","base","inherit","colors","rules","foreground","selectedTrigger","formikProps","userStartedAnnotation","pipelinePVC","pipelinePVCLoaded","otherProps","augmentedMenuActions","render","callbackRef","paramToAutoComplete","workspaceToAutoComplete","taskToStatus","findTasksThatRunAfter","runAfterNames","computeAvailableResultACs","invalidTasks","insertIntoValue","insertText","startPos","endPos","reduceToSections","formikIndex","types","section","sectionData","volumeTypeOptions","volumeType","resourceNameField","resourceKeysField","addString","initialSizeValue","initialSizeUnit","getVolumeTypeFields","runFilters","getPLRLogSnippet","failedTaskRun","exitCode","addNewFinallyListNode","finallyLoadingTasks","finallyInvalidListTasks","nodeCenter","leftPadding","verticalHeight","finallyTaskLinkX","IntegralShape","ft","fld","ivl","convertList","flt","cursor","nodeRef","diamondHeight","sin","cos","diamondNode","stroke","x1","y1","x2","y2","DAG","Map","fn","visited","dependancy","len","visit","addVertex","hasOutgoing","fromNode","toNode","before","after","addEdge","orderedNodes","stage","trashRef","showAdd","CustomTaskComponent","customTask","customTaskName","customRun","resourcesData","strokeWidth","onContextMenu","contextMenuOpen","detailsLevel","computedTask","stepList","skippedTask","succeededStepsCount","passedData","newData","hasTaskIcon","taskIconClass","taskIcon","whenDecorator","toolTip","plrName","getLabel","showContextMenu","scaleNode","high","hideDetailsAtMedium","truncateLength","startPoint","getStartPoint","endPoint","getEndPoint","sourceNode","vis","setVis","maxSize","setMaxSize","setWidth","storedGraphModel","onLayoutUpdate","nodeBounds","w1","w2","maxHeight","h1","h2","maxObject","nb","maxX","maxY","horizontalMargin","verticalMargin","finallyTaskHeight","regularTaskHeight","visualization","registerLayoutFactory","registerComponentFactory","fromModel","addEventListener","getNodes","onResize","innerHeight","controller","controlBar","controlButtons","zoomInCallback","scaleBy","zoomOutCallback","fitToScreenCallback","fit","resetViewCallback","reset","legend","appLink","permission","ResourceKebab","terminatingTooltip","contentRefCallback","focusTrapProps","insertAutoComplete","popperProps","menuWidth","scrollContainer","placement","closeOnEsc","closeOnOutsideClick","popperOptions","modifiers","preventOverflow","flip","overflow","PATHS","getTaskResources","alphaInputResources","betaInputResources","alphaOutputResources","betaOutputResources","getTaskParameters","alphaParameters","betaParameters","useBuilderParams","paramACs","workspaceACs","finallyStatusACs","taskResultACs","useAddTriggerParams","ListPageWrapper","reduxIDs","nameFilterPlaceholder","labelFilterPlaceholder","hideNameLabelFilters","hideLabelFilter","nameFilter","memoizedIds","dta","Filter","uniqueFilterName","FireMan","setReduxIDs","expand","applyFilter","reduxId","filterName","filterList","updateURL","runOrNavigate","itemName","createLink","ListPage","autoFocus","hideColumnManagement","_resources","ko","usedNamespace","MultiListPage","staticFilters","kinds","taskRunSnippetMessage","CTALabel","TEKTONHUB","ARTIFACTHUB","usePipelineFromPipelineRun","setPipeline","emptyPipeline","pipelineFromPipelineRun","newPipeline","toArray","getSortedContainerStatus","containerStatuses","sortedContainerStatus","cs","getRenderContainers","pod","firstRunningCont","stillFetching","getDownloadAllLogsCallback","sortedTaskRunNames","getWatchUrls","stepsList","currTask","allStepUrls","stepUrls","currentStep","currentStatus","urlOpts","follow","tasksPromise","allLogs","getContentPromise","logs","race","buffer","ingest","blob","getBlob","ActionType","getOLSCodeBlock","plugins","ols","selectedTriggerTemplate","triggerMatchesTriggerTemplate","matchingEventListeners","singleTriggers","deletableEventListeners","updatableEventListeners","removeTriggerSchema","PARAM_REFERENCE_CHARS","cursorPosition","focusingOptions","setFocusingOptions","menuOptions","shouldOpen","ctrlKey","cursorPos","selectionStart","closeMenu","useOpenMenuKeyWatcher","filterOptions","filteredOptions","setFilteredOptions","filterMappings","optionPartMap","optionAcc","optionPart","newFilterValue","newOptions","useFilterOptions","setFilter","closeCleanup","setNodeRef","setNode","onKeyCallback","applyFilterAtCursor","filterValue","selectionEnd","focusDropdownCallback","removeEventListener","contentNode","useNodeListener","leftCapturePoint","insertValue","substr","cursorEndPoint","setSelectionRange","focusTrapOptions","clickOutsideDeactivates","onDeactivate","fallbackFocus","getBoundingClientRect","onRequestClose","creating","autoSelect","prefixName","renderTypeFields","setFieldTouched","touched","canAutoSelect","secretOpenField","textExpanded","textCollapsed","onReset","resetForm","secretTypes","clearServerURL","setValues","renderSecretForm","prevState","Secrets","serviceaccounts","serviceAccountSecrets","filterData","sortedFilterData","setKeys","strText","keyMap","itemKeys","generateKeys","remove","fieldKey","initialVolumeMode","initAccessModeHelp","accessModeHelp","setAccessModeHelp","setVolumeMode","requestSizeError","setRequestSizeError","requestSizeValue","setRequestSizeValue","requestSizeUnit","setRequestSizeUnit","storageProvisioner","setStorageProvisioner","setStorageClass","handleVolumeMode","updatedStorageClass","displayMessage","defaultRequestSizeUnit","defaultRequestSizeValue","inputID","radio","checked","bindingVars","setBindingVars","paramPrefix","updateTriggerBindingVariables","selectedTriggerBinding","toggleTextExpanded","toggleTextCollapsed","customResourceKey","TRIGGER_BINDING_EMPTY","setPreferredTab","preferredTabLoaded","customSorts","vulnerabilities","scanResults","critical","medium","low","onRowsRendered","stopIndex","nextPage","getPipelineRunVulnerabilities","taskVulnerabilities","usePipelineRunVulnerabilities","started","module","exports","barGap","background","flexGrow","useTaskStatus","logSnippet","setLogSnippet","logError","setLogError","tailLines","logContent","CriticalIcon","HighIcon","MediumIcon","LowIcon","isFullscreen","fullscreenRef","fullscreenToggle","downloadAllStatus","setDownloadAllStatus","currentLogGetterRef","setLogGetter","logString","Blob","setCurrentLogsGetter","MultiStreamLogs","scrollPane","completedRef","renderToCount","setRenderToCount","scrollDirection","handleScrollCallback","dataRef","innerText","handleComplete","newRenderTo","autoScroll","scrolledToBottom","containerStatus","onScroll","statusIndex","resourceStatus","resName","resNamespace","scrollToRef","resourceStatusRef","onCompleteRef","blockContentRef","addContentAndScroll","appendMessage","blockContent","ws","wsOpts","subprotocols","onmessage","msg","onclose","onerror","destroy","TektonTaskRunLog","trResults","scrollTop","scrollHeight","hideBadge","showPipelineColumn","trForPlr","taskRunsLoadError","taskRunsResource","userSettingsLoaded","showLightspeedButton","OpenOLS","orientation","OLSConfigModel","useOLSConfig","onHideShortcuts","shift","ctrlCmd","debouncedOnChange","linkName","isPopoverOpen","setIsPopoverOpen","shouldClose","auto","ARTIFACRHUB_TASKS_SEARCH_URL","getArtifactHubTaskDetails","API_BASE_URL","useGetArtifactHubTasks","hasPermission","resultData","setLoadedError","packages","createArtifactHubTask","installedFrom","semVersion","updateArtifactHubTask","taskData","TEKTON_HUB_INTEGRATION_KEY","getHubUIPath","useInclusterTektonHubURLs","hub","apiUrl","uiUrl","useTektonHubResources","getTektonHubTaskVersions","resourceId","getTRLogSnippet","MODEL_KINDS","classNames","pipelineResourceTypeSelections","resourceTypeLabel","k8sData","reduxes","reduxID","redux","worst","worstError","k8sResults","assign","PipelineRunRowTable","PipelineRunRowWithoutTaskRuns","PipelineRunRowWithTaskRunsFetch","PipelineRunRowWithTaskRuns","PipelineBars","PipelineBarsForTaskRunsStatus","minHeight","allFilters","Form","resourceCall","pipelineModel","goBack","findResource","taskType","pathParts","tasksReferenceIdx","pathPart","taskPath","runAfterMatches","thisTaskName","taskNames","resourceDefinition","hasResourcesOfTheSameType","resourceValue","formResource","isResourceTheCorrectType","taskValidation","requiredTaskParams","requiredParam","matchingParam","areRequiredParamsAdded","requiredResources","noResources","needResources","resourcesNames","hasRequiredResources","w","areRequiredWhenExpressionsAdded","workspaceValue","findWorkspace","requiredWorkspaces","noWorkspaces","needWorkspaces","workspaceNames","hasRequiredWorkspaces","pipelineBuilderFormSchema","abortEarly","useFormikFetchAndSaveTasks","resourcesToWatch","watchedClusterTasks","namespacedTaskData","clusterTaskData","useConnectFinally","tasksInError","taskGroupRef","onNewInstallingTask","lt","finallyValidTasks","finallyInvalidTasks","finallyNodeName","regularRunAfters","getInvalidFinallyListTaskData","convertInvalidListToFinallyTask","getFinallyListTaskData","convertListToFinallyTask","namespaceTaskList","clusterTaskList","ivlt","useNodes","newListNode","firstTask","invalidTaskList","validTaskList","invalidTaskListNodes","newInvalidListNode","loadingNodes","newLoadingNode","taskNodes","taskListNodes","soloTask","finallyNode","touchTaskWorkspaces","touchTaskResources","useExplicitPipelineTaskTouch","setTouched","workspacesTouched","resourcesTouched","useLoadingTaskCleanup","nt","updateOperationType","useCleanupOnFailure","isSelectedVersionInstalled","isTaskVersionInstalled","isOneVersionInstalled","isTektonHubTaskWithoutVersions","isArtifactHubTask","getTaskCtaType","Add","isSelectedVersionUpgradable","getCtaButtonText","isExternalTask","isTaskSearchable","isInstalledNamespaceTask","getSelectedVersionUrl","rawURL","findInstalledTask","updateTask","yaml","taskModel","createTask","getGitProviderIcon","getLabelValue","sanitizeBranchName","emptyDirectoryWorkspaces","matchedPVCs","workspacesRenders","getPodsByLabels","isTaskRunMatched","isPodMatched","usePipelineRunFilters","plrRelatedResources","usePipelineRunRelatedResources","useTaskRunFilters","tsrRelatedResources","taskrun","useTaskRunRelatedResources","col","newCustomData","taskRunsReference","breadcrumbsFor","pipelineLoaded","pipelineError","pageProps","PipelineFormComponent","formName","pipelineParameterAccess","successMessage","showAlert","complexFields","newObj","parametersValidationSchema","getFormData","sanitizedListTasks","listRunAfter","specProps","pipelineSpecProperties","validateFormData","newFormData","strict","safeOmit","object","pathToArray","array","handleSanitizeToFormError","counter","validatedFormData","validatedYamlData","inner","currPath","pathComponents","namePath","getValidatedFormAndYaml","errObj","sanitizeToForm","safeReturn","sanitizeToYaml","skipInvalid","setEditPipeline","PageContentsWithStartGuide","isRepositoryEnabled","preferredTab","onSelection","_key","_action","pageData","telemetryPrefix","light","getResourceStatus","titleFunc","pipelineRunLabel","repositoriesTableColumnClasses","loadedGraphs","setLoadedGraphs","totalGraphs","graphOnLoad","graphData","PipelineMetricsQuickstartInfo","setActiveQuickStart","quickStarts","isPipelineMetricsQSAvailable","qs","TimeSeriesChart","startTimespan","endDate","startDate","domainX","domainY","domainValue","yTickFormat","gData","minY","xAxisStyle","tickLabels","angle","verticalAnchor","chart","domainPadding","scale","legendPosition","blue","tickFormat","dependentAxis","showGrid","alignment","line","LineChart","filteredData","findMin","series","findMax","multiUnordered","tickCount","isConditionsEnabled","hasCreateAccess","hasCreateAccessLoading","pacSecretData","pacSecretDataLoaded","pacSecretDataError","secondaryButtonAction","showSecondaryAction","breadcrumbs","createLogURL","LogURLRedirect"],"mappings":"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","file":"pipelines-plugin/code-refs/pipelinesComponent-chunk-de33c3df412db4454fa8.min.js","sourcesContent":["import * as React from 'react';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { Table } from '@console/internal/components/factory';\nimport { PipelineModel } from '../../../models';\nimport { PropPipelineData } from '../../../utils/pipeline-augment';\nimport PipelineHeader from './PipelineHeader';\nimport PipelineRow from './PipelineRow';\n\nexport interface PipelineListProps {\n  data?: PropPipelineData[];\n  namespace: string;\n}\n\nconst PipelineList: React.FC<PipelineListProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      defaultSortField=\"latestRun.status.startTime\"\n      defaultSortOrder={SortByDirection.desc}\n      aria-label={t(PipelineModel.labelPluralKey)}\n      Header={PipelineHeader}\n      Row={PipelineRow}\n      virtualize\n    />\n  );\n};\n\nexport default PipelineList;\n","import { sortable } from '@patternfly/react-table';\nimport i18next from 'i18next';\nimport { tableColumnClasses } from './pipeline-table';\n\nconst PipelineHeader = () => {\n  return [\n    {\n      title: i18next.t('pipelines-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Last run'),\n      sortField: 'latestRun.metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Task status'),\n      sortField: 'latestRun.status.succeededCondition',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Last run status'),\n      sortField: 'latestRun.status.succeededCondition',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Last run time'),\n      sortField: 'latestRun.status.completionTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nexport default PipelineHeader;\n","import * as React from 'react';\nimport { RowFunctionArgs, TableData } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineModel, PipelineRunModel } from '../../../models';\nimport { ComputedStatus, PipelineWithLatest, TaskRunKind } from '../../../types';\nimport { TaskStatus } from '../../../utils/pipeline-augment';\nimport {\n  pipelineFilterReducer,\n  pipelineRunStatus,\n  pipelineTitleFilterReducer,\n} from '../../../utils/pipeline-filter-reducer';\nimport { getPipelineRunStatus } from '../../../utils/pipeline-utils';\nimport { useTaskRuns } from '../../pipelineruns/hooks/useTaskRuns';\nimport LinkedPipelineRunTaskStatus from '../../pipelineruns/status/LinkedPipelineRunTaskStatus';\nimport PipelineRunStatusContent from '../../pipelineruns/status/PipelineRunStatusContent';\nimport { tableColumnClasses } from './pipeline-table';\nimport PipelineRowKebabActions from './PipelineRowKebabActions';\n\nconst pipelineReference = referenceForModel(PipelineModel);\nconst pipelinerunReference = referenceForModel(PipelineRunModel);\n\ntype PipelineStatusProps = {\n  obj: PipelineWithLatest;\n};\n\ntype PipelineRowWithoutTaskRunsProps = {\n  obj: PipelineWithLatest;\n  taskRunStatusObj: TaskStatus;\n};\n\ntype PipelineRowWithTaskRunsProps = {\n  obj: PipelineWithLatest;\n};\n\nconst TASKRUNSFORPLRCACHE: { [key: string]: TaskRunKind[] } = {};\nconst InFlightStoreForTaskRunsForPLR: { [key: string]: boolean } = {};\n\nconst PipelineStatus: React.FC<PipelineStatusProps> = ({ obj }) => {\n  return (\n    <PipelineRunStatusContent\n      status={pipelineFilterReducer(obj)}\n      title={pipelineTitleFilterReducer(obj)}\n      pipelineRun={obj.latestRun}\n    />\n  );\n};\n\nconst PipelineRowTable = ({ obj, PLRTaskRuns, taskRunsLoaded, taskRunStatusObj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={pipelineReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {obj.latestRun && obj.latestRun.metadata && obj.latestRun.metadata.name ? (\n          <ResourceLink\n            kind={pipelinerunReference}\n            name={obj.latestRun.metadata.name}\n            namespace={obj.latestRun.metadata.namespace}\n          />\n        ) : (\n          '-'\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {obj.latestRun ? (\n          <LinkedPipelineRunTaskStatus\n            pipelineRun={obj.latestRun}\n            taskRuns={PLRTaskRuns}\n            taskRunsLoaded={taskRunsLoaded}\n            taskRunStatusObj={taskRunStatusObj}\n          />\n        ) : (\n          '-'\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <PipelineStatus obj={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {(obj.latestRun?.status?.startTime && (\n          <Timestamp timestamp={obj.latestRun.status.startTime} />\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <PipelineRowKebabActions pipeline={obj} />\n      </TableData>\n    </>\n  );\n};\n\nconst PipelineRowWithoutTaskRuns: React.FC<PipelineRowWithoutTaskRunsProps> = React.memo(\n  ({ obj, taskRunStatusObj }) => {\n    return (\n      <PipelineRowTable\n        obj={obj}\n        PLRTaskRuns={[]}\n        taskRunsLoaded\n        taskRunStatusObj={taskRunStatusObj}\n      />\n    );\n  },\n);\n\nconst PipelineRowWithTaskRunsFetch: React.FC<PipelineRowWithTaskRunsProps> = React.memo(\n  ({ obj }) => {\n    const cacheKey = `${obj.latestRun.metadata.namespace}-${obj.latestRun.metadata.name}`;\n    const [PLRTaskRuns, taskRunsLoaded] = useTaskRuns(\n      obj.latestRun.metadata.namespace,\n      obj.latestRun.metadata.name,\n      undefined,\n      `${obj.latestRun.metadata.namespace}-${obj.latestRun.metadata.name}`,\n    );\n    InFlightStoreForTaskRunsForPLR[cacheKey] = false;\n    if (taskRunsLoaded) {\n      TASKRUNSFORPLRCACHE[cacheKey] = PLRTaskRuns;\n    }\n    return (\n      <PipelineRowTable\n        obj={obj}\n        PLRTaskRuns={PLRTaskRuns}\n        taskRunsLoaded={taskRunsLoaded}\n        taskRunStatusObj={undefined}\n      />\n    );\n  },\n);\n\nconst PipelineRowWithTaskRuns: React.FC<PipelineRowWithTaskRunsProps> = React.memo(({ obj }) => {\n  let PLRTaskRuns: TaskRunKind[];\n  let taskRunsLoaded: boolean;\n  const cacheKey = `${obj.latestRun.metadata.namespace}-${obj.latestRun.metadata.name}`;\n  const result = TASKRUNSFORPLRCACHE[cacheKey];\n  if (result) {\n    PLRTaskRuns = result;\n    taskRunsLoaded = true;\n  } else if (InFlightStoreForTaskRunsForPLR[cacheKey]) {\n    PLRTaskRuns = [];\n    taskRunsLoaded = true;\n    InFlightStoreForTaskRunsForPLR[cacheKey] = true;\n  } else {\n    return <PipelineRowWithTaskRunsFetch obj={obj} />;\n  }\n  return (\n    <PipelineRowTable\n      obj={obj}\n      PLRTaskRuns={PLRTaskRuns}\n      taskRunsLoaded={taskRunsLoaded}\n      taskRunStatusObj={undefined}\n    />\n  );\n});\n\nconst PipelineRow: React.FC<RowFunctionArgs<PipelineWithLatest>> = ({ obj }) => {\n  const plrStatus = pipelineRunStatus(obj.latestRun);\n  if (\n    plrStatus === ComputedStatus.Cancelled &&\n    (obj?.latestRun?.status?.childReferences ?? []).length > 0\n  ) {\n    return <PipelineRowWithTaskRuns obj={obj} />;\n  }\n\n  const taskRunStatusObj = getPipelineRunStatus(obj.latestRun);\n  return <PipelineRowWithoutTaskRuns obj={obj} taskRunStatusObj={taskRunStatusObj} />;\n};\n\nexport default PipelineRow;\n","import * as React from 'react';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport { PipelineWithLatest } from '../../../types';\nimport { getPipelineKebabActions } from '../../../utils/pipeline-actions';\nimport { ResourceKebabWithUserLabel } from '../../pipelineruns/triggered-by';\nimport { usePipelineTriggerTemplateNames } from '../utils/triggers';\n\ntype PipelineRowKebabActionsProps = {\n  pipeline: PipelineWithLatest;\n};\n\nconst pipelineReference = referenceForModel(PipelineModel);\n\nconst PipelineRowKebabActions: React.FC<PipelineRowKebabActionsProps> = ({ pipeline }) => {\n  const {\n    metadata: { name, namespace },\n  } = pipeline;\n  const templateNames = usePipelineTriggerTemplateNames(name, namespace) || [];\n\n  return (\n    <ResourceKebabWithUserLabel\n      actions={getPipelineKebabActions(pipeline.latestRun, templateNames.length > 0)}\n      kind={pipelineReference}\n      resource={pipeline}\n    />\n  );\n};\n\nexport default PipelineRowKebabActions;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading, ResourceSummary } from '@console/internal/components/utils';\nimport { EventListenerKind } from '../resource-types';\nimport EventListenerTriggers from './EventListenerTriggers';\nimport EventListenerURL from './EventListenerURL';\n\nexport interface EventListenerDetailsProps {\n  obj: EventListenerKind;\n}\n\nconst EventListenerDetails: React.FC<EventListenerDetailsProps> = ({ obj: eventListener }) => {\n  const { t } = useTranslation();\n  const triggers =\n    eventListener.spec.triggers?.filter(\n      (trigger) => trigger.template?.ref || trigger.template?.name,\n    ) || [];\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('pipelines-plugin~EventListener details')} />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={eventListener} />\n        </div>\n        <div className=\"col-sm-6\">\n          <EventListenerURL\n            eventListener={eventListener}\n            namespace={eventListener.metadata.namespace}\n          />\n          {triggers.length > 0 && (\n            <EventListenerTriggers\n              namespace={eventListener.metadata.namespace}\n              triggers={triggers}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventListenerDetails;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { TriggerTemplateModel } from '../../../models';\nimport DynamicResourceLinkList, {\n  ResourceModelLink,\n} from '../resource-overview/DynamicResourceLinkList';\nimport { EventListenerKindTrigger } from '../resource-types';\nimport { getEventListenerTriggerBindingNames } from '../utils/triggers';\nimport './EventListenerTriggers.scss';\n\ninterface EventListenerTriggersProps {\n  triggers: EventListenerKindTrigger[];\n  namespace: string;\n}\n\nconst EventListenerTriggers: React.FC<EventListenerTriggersProps> = ({ namespace, triggers }) => {\n  const { t } = useTranslation();\n  const triggerTemplates = triggers.filter((tr) => tr.template?.ref || tr.template?.name);\n  if (triggerTemplates.length === 0) {\n    return null;\n  }\n  return (\n    <dl>\n      <dt>{t('pipelines-plugin~Triggers')}</dt>\n      <dd>\n        {triggerTemplates.map((trigger) => {\n          const triggerTemplateKind = referenceForModel(TriggerTemplateModel);\n          const triggerTemplateName = trigger.template?.ref || trigger.template?.name;\n          const bindings: ResourceModelLink[] = getEventListenerTriggerBindingNames(\n            trigger.bindings,\n          );\n          return (\n            <div key={`${triggerTemplateKind}/${triggerTemplateName}`}>\n              <ResourceLink\n                kind={triggerTemplateKind}\n                name={triggerTemplateName}\n                displayName={triggerTemplateName}\n                namespace={namespace}\n                title={triggerTemplateName}\n                inline\n              />\n              {!_.isEmpty(bindings) && (\n                <div className=\"odc-event-listener-triggers__bindings\">\n                  <DynamicResourceLinkList\n                    links={bindings}\n                    namespace={namespace}\n                    removeSpaceBelow\n                  />\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </dd>\n    </dl>\n  );\n};\n\nexport default EventListenerTriggers;\n","import * as React from 'react';\nimport { ClipboardCopy, ClipboardCopyVariant } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { EventListenerKind } from '../resource-types';\nimport { useEventListenerURL } from '../utils/triggers';\n\nimport './EventListenerURL.scss';\n\ntype EventListenerURLProps = {\n  eventListener: EventListenerKind;\n  namespace: string;\n};\n\nconst EventListenerURL: React.FC<EventListenerURLProps> = ({ eventListener, namespace }) => {\n  const { t } = useTranslation();\n  const routeURL = useEventListenerURL(eventListener, namespace);\n  return (\n    routeURL && (\n      <div className=\"odc-event-listener-url\">\n        <dl>\n          <dt>{t('pipelines-plugin~URL')}</dt>\n          <dd>\n            <ClipboardCopy variant={ClipboardCopyVariant.inlineCompact}>{routeURL}</ClipboardCopy>\n          </dd>\n        </dl>\n      </div>\n    )\n  );\n};\n\nexport default EventListenerURL;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading, ResourceSummary } from '@console/internal/components/utils';\nimport { EventListenerModel, PipelineModel } from '../../../models';\nimport ResourceLinkList from '../resource-overview/ResourceLinkList';\nimport { TriggerTemplateKind } from '../resource-types';\nimport {\n  useTriggerTemplateEventListenerNames,\n  getTriggerTemplatePipelineName,\n} from '../utils/triggers';\n\nexport interface TriggerTemplateDetailsProps {\n  obj: TriggerTemplateKind;\n}\n\nconst TriggerTemplateDetails: React.FC<TriggerTemplateDetailsProps> = ({\n  obj: triggerTemplate,\n}) => {\n  const { t } = useTranslation();\n  const eventListeners: string[] = useTriggerTemplateEventListenerNames(triggerTemplate);\n  const pipelineName: string = getTriggerTemplatePipelineName(triggerTemplate);\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('pipelines-plugin~TriggerTemplate details')} />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={triggerTemplate} />\n        </div>\n        <div className=\"col-sm-6\">\n          <ResourceLinkList\n            namespace={triggerTemplate.metadata.namespace}\n            model={PipelineModel}\n            links={[pipelineName]}\n          />\n          <ResourceLinkList\n            namespace={triggerTemplate.metadata.namespace}\n            model={EventListenerModel}\n            links={eventListeners}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TriggerTemplateDetails;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading, ResourceSummary } from '@console/internal/components/utils';\nimport { EventListenerModel } from '../../../models';\nimport { getResourceModelFromBindingKind } from '../../../utils/pipeline-augment';\nimport ResourceLinkList from '../resource-overview/ResourceLinkList';\nimport { TriggerBindingKind } from '../resource-types';\nimport { useTriggerBindingEventListenerNames } from '../utils/triggers';\n\nexport interface TriggerBindingDetailsProps {\n  obj: TriggerBindingKind;\n}\n\nconst TriggerBindingDetails: React.FC<TriggerBindingDetailsProps> = ({ obj: triggerBinding }) => {\n  const { t } = useTranslation();\n  const eventListeners: string[] = useTriggerBindingEventListenerNames(triggerBinding);\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading\n        text={t('pipelines-plugin~{{triggerBindingLabel}} details', {\n          triggerBindingLabel: t(getResourceModelFromBindingKind(triggerBinding.kind).labelKey),\n        })}\n      />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={triggerBinding} />\n        </div>\n        <div className=\"col-sm-6\">\n          <ResourceLinkList\n            namespace={triggerBinding.metadata.namespace}\n            model={EventListenerModel}\n            links={eventListeners}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TriggerBindingDetails;\n","import i18n from 'i18next';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { PipelineTask } from '../../../types';\nimport { PipelineBuilderFormValues } from './types';\nimport { runAfterMatches } from './validation-utils';\n\nconst resourceDefinitionYAML = () => {\n  return yup.array().of(\n    yup.object({\n      name: yup.string().required(),\n      resource: yup.string(),\n    }),\n  );\n};\n\nexport const validRunAfter = (formData: PipelineBuilderFormValues, thisTask: PipelineTask) => {\n  return yup.array().of(\n    yup\n      .string()\n      .test('tasks-matches-runAfters', i18n.t('pipelines-plugin~Invalid runAfter'), function (\n        runAfter: string,\n      ) {\n        return runAfterMatches(formData, [runAfter], thisTask.name);\n      }),\n  );\n};\n\nconst taskValidationYAMLSchema = (formData: PipelineBuilderFormValues) => {\n  return yup.array().of(\n    yup.lazy((taskObject) =>\n      yup\n        .object({\n          name: nameValidationSchema((tKey) => i18n.t(tKey)),\n          taskRef: yup\n            .object({\n              name: yup.string(),\n              kind: yup.string(),\n            })\n            .default(undefined),\n          taskSpec: yup.object(),\n          runAfter: validRunAfter(formData, taskObject),\n          params: yup.array().of(\n            yup.object({\n              name: yup.string().required(),\n              value: yup.lazy((value) => {\n                if (Array.isArray(value)) {\n                  return yup.array().of(yup.string());\n                }\n                return yup.string();\n              }),\n            }),\n          ),\n          resources: yup.object({\n            inputs: resourceDefinitionYAML(),\n            outputs: resourceDefinitionYAML(),\n          }),\n          when: yup.array().of(\n            yup.object({\n              input: yup.string(),\n              operator: yup.string(),\n              values: yup.array().of(yup.string()),\n            }),\n          ),\n\n          workspaces: yup.array().of(\n            yup.object({\n              name: yup.string().required(),\n              workspace: yup.string(),\n            }),\n          ),\n        })\n        .test(\n          'taskRef-or-taskSpec',\n          i18n.t('pipelines-plugin~TaskSpec or TaskRef must be provided.'),\n          function (task: PipelineTask) {\n            return !!task.taskRef || !!task.taskSpec;\n          },\n        ),\n    ),\n  );\n};\n\nexport const pipelineBuilderYAMLSchema = (formData: PipelineBuilderFormValues) => {\n  return yup.object({\n    metadata: yup.object({ name: yup.string() }),\n    spec: yup.object({\n      params: yup.array().of(\n        yup.object({\n          name: yup.string(),\n          description: yup.string(),\n          default: yup.lazy((val) => (Array.isArray(val) ? yup.array() : yup.string())),\n        }),\n      ),\n      resources: yup.array().of(\n        yup.object({\n          name: yup.string(),\n          type: yup.string(),\n        }),\n      ),\n      workspaces: yup.array().of(\n        yup.object({\n          name: yup.string(),\n        }),\n      ),\n      tasks: taskValidationYAMLSchema(formData),\n      finally: taskValidationYAMLSchema(formData),\n    }),\n  });\n};\n","import * as React from 'react';\nimport { Drawer, DrawerContent, DrawerContentBody } from '@patternfly/react-core';\nimport { FormikProps } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormFooter,\n  SyncedEditorField,\n  CodeEditorField,\n  FlexForm,\n  FormBody,\n} from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineTask, TaskKind } from '../../../types';\nimport PipelineQuickSearch from '../../quicksearch/PipelineQuickSearch';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER } from '../const';\nimport { STATUS_KEY_NAME_ERROR, UpdateOperationType } from './const';\nimport { sanitizeToForm, sanitizeToYaml } from './form-switcher-validation';\nimport { useExplicitPipelineTaskTouch, useFormikFetchAndSaveTasks } from './hooks';\nimport { removeTaskModal } from './modals';\nimport PipelineBuilderFormEditor from './PipelineBuilderFormEditor';\nimport PipelineBuilderHeader from './PipelineBuilderHeader';\nimport TaskSidebar from './task-sidebar/TaskSidebar';\nimport {\n  CleanupResults,\n  PipelineBuilderTaskGroup,\n  SelectedBuilderTask,\n  UpdateOperationRenameTaskData,\n  PipelineBuilderFormikValues,\n  TaskType,\n  TaskSearchCallback,\n} from './types';\nimport { applyChange } from './update-utils';\n\nimport './PipelineBuilderForm.scss';\n\ntype PipelineBuilderFormProps = FormikProps<PipelineBuilderFormikValues> & {\n  existingPipeline: PipelineKind;\n  namespace: string;\n};\n\nconst PipelineBuilderForm: React.FC<PipelineBuilderFormProps> = (props) => {\n  const { t } = useTranslation();\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n  const [selectedTask, setSelectedTask] = React.useState<SelectedBuilderTask>(null);\n  const selectedTaskRef = React.useRef<SelectedBuilderTask>(null);\n  selectedTaskRef.current = selectedTask;\n  const contentRef = React.useRef<HTMLDivElement>(null);\n\n  const {\n    existingPipeline,\n    status,\n    isSubmitting,\n    dirty,\n    handleReset,\n    handleSubmit,\n    errors,\n    namespace,\n    setFieldValue,\n    values: { editorType, formData, taskResources },\n    validateForm,\n  } = props;\n  useFormikFetchAndSaveTasks(namespace, validateForm, IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER);\n  useExplicitPipelineTaskTouch();\n\n  const statusRef = React.useRef(status);\n  const [menuOpen, setMenuOpen] = React.useState<boolean>(false);\n  const savedCallback = React.useRef(() => {});\n\n  statusRef.current = status;\n\n  const resetSelectedTask = (): void => {\n    setSelectedTask(null);\n    selectedTaskRef.current = null;\n  };\n  const onTaskSearch: TaskSearchCallback = (callback: () => void): void => {\n    setMenuOpen(true);\n    resetSelectedTask();\n    savedCallback.current = callback;\n  };\n  const onTaskSelection = (task: PipelineTask, resource: TaskKind, isFinallyTask: boolean) => {\n    const builderNodes = isFinallyTask ? formData.finallyTasks : formData.tasks;\n    setSelectedTask({\n      isFinallyTask,\n      taskIndex: builderNodes.findIndex(({ name }) => name === task.name),\n      resource,\n    });\n  };\n\n  const updateTasks = (changes: CleanupResults): void => {\n    const { tasks, listTasks, finallyTasks, finallyListTasks, loadingTasks } = changes;\n\n    setFieldValue('formData', {\n      ...formData,\n      tasks,\n      listTasks,\n      loadingTasks,\n      finallyTasks,\n      finallyListTasks,\n    });\n  };\n\n  const nodeType: TaskType = selectedTask?.isFinallyTask ? 'finallyTasks' : 'tasks';\n  const selectedId = formData[nodeType][selectedTask?.taskIndex]?.name;\n  const selectedIds = selectedId ? [selectedId] : [];\n\n  const taskGroup: PipelineBuilderTaskGroup = {\n    tasks: formData.tasks,\n    listTasks: formData.listTasks,\n    loadingTasks: formData.loadingTasks,\n    highlightedIds: selectedIds,\n    finallyTasks: formData.finallyTasks,\n    finallyListTasks: formData.finallyListTasks,\n  };\n\n  const onUpdateTasks = (updatedTaskGroup, op) => {\n    updateTasks(applyChange(updatedTaskGroup, op));\n  };\n\n  const closeSidebarAndHandleReset = React.useCallback(() => {\n    resetSelectedTask();\n    handleReset();\n  }, [handleReset]);\n\n  const LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY = 'pipeline.pipelineBuilderForm.editor.lastView';\n\n  const formEditor = (\n    <PipelineBuilderFormEditor\n      hasExistingPipeline={!!existingPipeline}\n      taskGroup={taskGroup}\n      taskResources={taskResources}\n      onTaskSelection={onTaskSelection}\n      onTaskSearch={onTaskSearch}\n      onUpdateTasks={onUpdateTasks}\n    />\n  );\n\n  const yamlEditor = (\n    <CodeEditorField\n      name=\"yamlData\"\n      model={PipelineModel}\n      showSamples={!existingPipeline}\n      onSave={handleSubmit}\n    />\n  );\n\n  const closeRef = React.useCallback(() => {\n    if (!!contentRef.current && !!selectedTask) {\n      const currentSelection: SelectedBuilderTask = selectedTaskRef.current;\n      setTimeout(() => {\n        if (\n          currentSelection?.taskIndex === selectedTaskRef.current?.taskIndex &&\n          currentSelection?.isFinallyTask === selectedTaskRef.current?.isFinallyTask\n        ) {\n          // Clicked on itself or on a non-node\n          setSelectedTask(null);\n        }\n      }, 0); // let the click logic flow through\n    }\n  }, [selectedTask]);\n\n  return (\n    <Drawer isExpanded={!!selectedTask} position=\"right\">\n      <DrawerContent\n        panelContent={\n          selectedTask ? (\n            <TaskSidebar\n              // Intentional remount when selection changes\n              key={selectedTask?.taskIndex}\n              onClose={() => setSelectedTask(null)}\n              resourceList={formData.resources || []}\n              workspaceList={formData.workspaces || []}\n              errorMap={status?.tasks || {}}\n              onRenameTask={(data: UpdateOperationRenameTaskData) => {\n                updateTasks(\n                  applyChange(taskGroup, { type: UpdateOperationType.RENAME_TASK, data }),\n                );\n              }}\n              onRemoveTask={(taskName: string) => {\n                removeTaskModal(taskName, () => {\n                  setSelectedTask(null);\n                  updateTasks(\n                    applyChange(taskGroup, {\n                      type: UpdateOperationType.REMOVE_TASK,\n                      data: { taskName },\n                    }),\n                  );\n                });\n              }}\n              selectedData={selectedTask}\n            />\n          ) : null\n        }\n      >\n        <DrawerContentBody onClick={closeRef}>\n          <div\n            className=\"opp-pipeline-builder  ocs-quick-search-modal__no-backdrop\"\n            ref={contentRef}\n          >\n            <PipelineBuilderHeader namespace={namespace} />\n            <FlexForm className=\"opp-pipeline-builder-form\" onSubmit={handleSubmit}>\n              <div className=\"opp-pipeline-builder-form__content\">\n                <FormBody\n                  flexLayout\n                  disablePaneBody\n                  className=\"co-m-pane__body co-m-pane__body--no-top-margin\"\n                >\n                  <PipelineQuickSearch\n                    namespace={namespace}\n                    viewContainer={contentRef.current}\n                    isOpen={menuOpen}\n                    callback={savedCallback.current}\n                    setIsOpen={(open) => setMenuOpen(open)}\n                    onUpdateTasks={onUpdateTasks}\n                    taskGroup={taskGroup}\n                  />\n                  <SyncedEditorField\n                    noMargin\n                    name=\"editorType\"\n                    formContext={{\n                      name: 'formData',\n                      editor: formEditor,\n                      label: t('pipelines-plugin~Pipeline builder'),\n                      sanitizeTo: (yamlPipeline: PipelineKind) =>\n                        sanitizeToForm(formData, yamlPipeline),\n                    }}\n                    yamlContext={{\n                      name: 'yamlData',\n                      editor: yamlEditor,\n                      sanitizeTo: () => sanitizeToYaml(formData, namespace, existingPipeline),\n                    }}\n                    lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n                  />\n                </FormBody>\n              </div>\n              <FormFooter\n                handleReset={closeSidebarAndHandleReset}\n                errorMessage={status?.submitError}\n                isSubmitting={isSubmitting}\n                submitLabel={\n                  existingPipeline ? t('pipelines-plugin~Save') : t('pipelines-plugin~Create')\n                }\n                disableSubmit={\n                  editorType === EditorType.YAML\n                    ? !dirty\n                    : !dirty ||\n                      !_.isEmpty(errors) ||\n                      !_.isEmpty(status?.tasks) ||\n                      !_.isEmpty(status?.[STATUS_KEY_NAME_ERROR]) ||\n                      formData.tasks.length === 0 ||\n                      formData.loadingTasks.length > 0\n                }\n                resetLabel={t('pipelines-plugin~Cancel')}\n                sticky\n              />\n            </FlexForm>\n          </div>\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport default PipelineBuilderForm;\n","import * as React from 'react';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport {\n  QuickSearchController,\n  QuickSearchProviders,\n  CatalogService,\n  CatalogServiceProvider,\n} from '@console/shared';\nimport { createArtifactHubTask, updateArtifactHubTask } from '../catalog/apis/artifactHub';\nimport { TaskProviders } from '../pipelines/const';\nimport { useCleanupOnFailure, useLoadingTaskCleanup } from '../pipelines/pipeline-builder/hooks';\nimport {\n  PipelineBuilderTaskGroup,\n  TaskSearchCallback,\n  UpdateTasksCallback,\n} from '../pipelines/pipeline-builder/types';\nimport {\n  createTask,\n  findInstalledTask,\n  getSelectedVersionUrl,\n  isArtifactHubTask,\n  isTaskSearchable,\n  updateTask,\n} from './pipeline-quicksearch-utils';\nimport PipelineQuickSearchDetails from './PipelineQuickSearchDetails';\n\ninterface QuickSearchProps {\n  namespace: string;\n  viewContainer?: HTMLElement;\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  callback: TaskSearchCallback;\n  onUpdateTasks: UpdateTasksCallback;\n  taskGroup: PipelineBuilderTaskGroup;\n}\n\nconst Contents: React.FC<\n  {\n    catalogService: CatalogService;\n  } & QuickSearchProps\n> = ({\n  catalogService,\n  namespace,\n  viewContainer,\n  isOpen,\n  setIsOpen,\n  callback,\n  onUpdateTasks,\n  taskGroup,\n}) => {\n  const { t } = useTranslation();\n  const savedCallback = React.useRef(null);\n  savedCallback.current = callback;\n  const [failedTasks, setFailedTasks] = React.useState<string[]>([]);\n\n  useLoadingTaskCleanup(onUpdateTasks, taskGroup);\n  useCleanupOnFailure(failedTasks, onUpdateTasks, taskGroup);\n\n  const catalogServiceItems = catalogService.items.reduce((acc, item) => {\n    const installedTask = findInstalledTask(catalogService.items, item);\n\n    if (\n      (item.provider === TaskProviders.artifactHub || item.provider === TaskProviders.tektonHub) &&\n      item.type !== TaskProviders.redhat\n    ) {\n      item.attributes.installed = '';\n      if (installedTask) {\n        item.attributes.installed = installedTask.attributes?.versions[0]?.version?.toString();\n      }\n    }\n\n    item.cta.callback = ({ selectedVersion }) => {\n      return new Promise((resolve) => {\n        if (!isArtifactHubTask(item)) {\n          if (item.provider === TaskProviders.tektonHub) {\n            const selectedVersionUrl = getSelectedVersionUrl(item, selectedVersion);\n            if (installedTask) {\n              if (selectedVersion === item.attributes.installed) {\n                resolve(savedCallback.current(installedTask.data));\n              } else {\n                resolve(savedCallback.current({ metadata: { name: item.data.name } }));\n                updateTask(selectedVersionUrl, installedTask, namespace, item.data.name).catch(() =>\n                  setFailedTasks([...failedTasks, item.data.name]),\n                );\n              }\n            } else {\n              resolve(savedCallback.current({ metadata: { name: item.data.name } }));\n              createTask(selectedVersionUrl, namespace).catch(() =>\n                setFailedTasks([...failedTasks, item.data.name]),\n              );\n            }\n          } else {\n            resolve(savedCallback.current(item.data));\n          }\n        }\n\n        if (item.provider === TaskProviders.artifactHub && isArtifactHubTask(item)) {\n          const selectedVersionUrl = getSelectedVersionUrl(item, selectedVersion);\n          if (installedTask) {\n            if (selectedVersion === item.attributes.installed) {\n              resolve(savedCallback.current(installedTask.data));\n            } else {\n              resolve(savedCallback.current({ metadata: { name: item.data.task.name } }));\n              updateArtifactHubTask(\n                selectedVersionUrl,\n                installedTask,\n                namespace,\n                item.data.task.name,\n                selectedVersion,\n              ).catch(() => setFailedTasks([...failedTasks, item.data.task.name]));\n            }\n          } else {\n            resolve(savedCallback.current({ metadata: { name: item.data.task.name } }));\n            createArtifactHubTask(selectedVersionUrl, namespace, selectedVersion).catch(() =>\n              setFailedTasks([...failedTasks, item.data.task.name]),\n            );\n          }\n        }\n      });\n    };\n\n    if (isTaskSearchable(catalogService.items, item)) {\n      acc.push(item);\n    }\n    return acc;\n  }, []);\n\n  const quickSearchProviders: QuickSearchProviders = [\n    {\n      catalogType: 'pipelinesTaskCatalog',\n      items: catalogServiceItems,\n      loaded: catalogService.loaded,\n      getCatalogURL: (searchTerm: string, ns: string) => `/search/ns/${ns}?keyword=${searchTerm}`,\n      // t('pipelines-plugin~View all tekton tasks ({{itemCount, number}})')\n      catalogLinkLabel: 'pipelines-plugin~View all tekton tasks ({{itemCount, number}})',\n      extensions: catalogService.catalogExtensions,\n    },\n  ];\n  return (\n    <QuickSearchController\n      quickSearchProviders={quickSearchProviders}\n      allItemsLoaded={catalogService.loaded}\n      searchPlaceholder={`${t('pipelines-plugin~Add task')}...`}\n      namespace={namespace}\n      viewContainer={viewContainer}\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n      disableKeyboardOpen\n      icon={<PlusCircleIcon width=\"1.5em\" height=\"1.5em\" />}\n      detailsRenderer={(props) => <PipelineQuickSearchDetails {...props} />}\n    />\n  );\n};\n\nconst PipelineQuickSearch: React.FC<QuickSearchProps> = ({\n  namespace,\n  viewContainer,\n  isOpen,\n  setIsOpen,\n  callback,\n  onUpdateTasks,\n  taskGroup,\n}) => {\n  return (\n    <CatalogServiceProvider namespace={namespace} catalogId=\"pipelines-task-catalog\">\n      {(catalogService: CatalogService) => (\n        <Contents\n          {...{\n            namespace,\n            viewContainer,\n            isOpen,\n            setIsOpen,\n            catalogService,\n            callback,\n            onUpdateTasks,\n            taskGroup,\n          }}\n        />\n      )}\n    </CatalogServiceProvider>\n  );\n};\n\nexport default React.memo(PipelineQuickSearch);\n","import * as React from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  Label,\n  LabelGroup,\n  Level,\n  LevelItem,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport { debounce } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { handleCta } from '@console/shared';\nimport { QuickSearchDetailsRendererProps } from '@console/shared/src/components/quick-search/QuickSearchDetails';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getArtifactHubTaskDetails } from '../catalog/apis/artifactHub';\nimport { getHubUIPath, getTektonHubTaskVersions } from '../catalog/apis/tektonHub';\nimport {\n  getCtaButtonText,\n  getTaskCtaType,\n  isArtifactHubTask,\n  isOneVersionInstalled,\n  isTaskVersionInstalled,\n  isTektonHubTaskWithoutVersions,\n} from './pipeline-quicksearch-utils';\nimport PipelineQuickSearchTaskAlert from './PipelineQuickSearchTaskAlert';\nimport PipelineQuickSearchVersionDropdown from './PipelineQuickSearchVersionDropdown';\n\nimport './PipelineQuickSearchDetails.scss';\n\nconst PipelineQuickSearchDetails: React.FC<QuickSearchDetailsRendererProps> = ({\n  selectedItem,\n  closeModal,\n}) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [selectedVersion, setSelectedVersion] = React.useState<string>();\n  const [versions, setVersions] = React.useState(selectedItem?.attributes?.versions ?? []);\n  const [hasInstalledVersion, setHasInstalledVersion] = React.useState<boolean>(\n    isOneVersionInstalled(selectedItem),\n  );\n  const resetVersions = React.useCallback(() => {\n    setVersions(selectedItem?.attributes?.versions ?? []);\n    setSelectedVersion(selectedItem?.attributes?.installed ?? '');\n    setHasInstalledVersion(isOneVersionInstalled(selectedItem));\n  }, [selectedItem]);\n  const [artifactHubDataLoaded, setArtifactHubDataLoaded] = React.useState<boolean>(false);\n\n  const onChangeVersion = React.useCallback(\n    (key) => {\n      setSelectedVersion(key);\n      if (isArtifactHubTask(selectedItem)) {\n        getArtifactHubTaskDetails(selectedItem, key)\n          .then((item) => {\n            selectedItem.attributes.versions = item.available_versions;\n            selectedItem.attributes.selectedVersionContentUrl = item.content_url;\n            selectedItem.tags = item.keywords;\n\n            setVersions([...item.available_versions]);\n            setHasInstalledVersion(isOneVersionInstalled(selectedItem));\n          })\n          .catch((err) => {\n            // eslint-disable-next-line no-console\n            console.warn('Error while getting ArtifactHub Task details:', err);\n            resetVersions();\n          });\n      }\n    },\n    [resetVersions, selectedItem],\n  );\n\n  React.useEffect(() => {\n    resetVersions();\n    let mounted = true;\n    if (isTektonHubTaskWithoutVersions(selectedItem) && !isArtifactHubTask(selectedItem)) {\n      const debouncedLoadVersions = debounce(async () => {\n        if (mounted) {\n          try {\n            const itemVersions = await getTektonHubTaskVersions(\n              selectedItem?.data?.id,\n              selectedItem?.attributes?.apiURL,\n            );\n\n            selectedItem.attributes.versions = itemVersions;\n\n            if (mounted) {\n              setVersions([...itemVersions]);\n              setHasInstalledVersion(isOneVersionInstalled(selectedItem));\n            }\n          } catch (err) {\n            if (mounted) {\n              resetVersions();\n            }\n            console.log('failed to fetch versions:', err); // eslint-disable-line no-console\n          }\n        }\n      }, 10);\n      debouncedLoadVersions();\n    }\n\n    if (isArtifactHubTask(selectedItem)) {\n      const debouncedLoadDetails = debounce(async () => {\n        if (mounted) {\n          setArtifactHubDataLoaded(false);\n          try {\n            const item = await getArtifactHubTaskDetails(selectedItem);\n            selectedItem.attributes.versions = item.available_versions;\n            selectedItem.attributes.selectedVersionContentUrl = item.content_url;\n            selectedItem.tags = item.keywords;\n            if (mounted) {\n              setVersions([...item.available_versions]);\n              setHasInstalledVersion(isOneVersionInstalled(selectedItem));\n            }\n          } catch (err) {\n            if (mounted) {\n              resetVersions();\n            }\n          } finally {\n            setArtifactHubDataLoaded(true);\n          }\n        }\n      }, 10);\n      debouncedLoadDetails();\n    }\n\n    return () => (mounted = false);\n  }, [resetVersions, selectedItem]);\n\n  React.useEffect(() => {\n    if (isTaskVersionInstalled(selectedItem)) {\n      setSelectedVersion(selectedItem.attributes.installed);\n    } else {\n      setSelectedVersion(\n        selectedItem.data?.latestVersion?.version?.toString() ||\n          selectedItem.data?.task?.version?.toString(),\n      );\n    }\n  }, [selectedItem]);\n  const loadedVersion = React.useMemo(\n    () => versions?.find((version) => version.version?.toString() === selectedVersion),\n    [selectedVersion, versions],\n  );\n\n  const hubLink = getHubUIPath(loadedVersion?.hubURLPath, selectedItem.attributes.uiURL);\n  return (\n    <div className=\"opp-quick-search-details\">\n      <Level hasGutter>\n        <LevelItem>\n          <Title data-test=\"task-name\" headingLevel=\"h4\">\n            {selectedItem.name}\n          </Title>\n        </LevelItem>\n        <LevelItem>\n          <Label data-test=\"task-provider\">{selectedItem.provider}</Label>\n        </LevelItem>\n      </Level>\n      <Level hasGutter>\n        <LevelItem>\n          <Split hasGutter>\n            <SplitItem>\n              <Button\n                isDisabled={\n                  isTektonHubTaskWithoutVersions(selectedItem) ||\n                  (isArtifactHubTask(selectedItem) && !artifactHubDataLoaded)\n                }\n                data-test=\"task-cta\"\n                variant={ButtonVariant.primary}\n                className=\"opp-quick-search-details__form-button\"\n                onClick={(e) => {\n                  handleCta(e, selectedItem, closeModal, fireTelemetryEvent, { selectedVersion });\n                }}\n              >\n                {getCtaButtonText(selectedItem, selectedVersion)}\n              </Button>\n            </SplitItem>\n            {versions.length > 0 && (\n              <SplitItem data-test=\"task-version-dropdown\">\n                <PipelineQuickSearchVersionDropdown\n                  key={selectedItem.uid}\n                  versions={versions}\n                  item={selectedItem}\n                  selectedVersion={selectedVersion}\n                  onChange={onChangeVersion}\n                />\n              </SplitItem>\n            )}\n          </Split>\n        </LevelItem>\n        {hasInstalledVersion && (\n          <LevelItem>\n            <Label color=\"green\" icon={<CheckCircleIcon />} data-test=\"task-installed-badge\">\n              {t('pipelines-plugin~Installed')}\n            </Label>\n          </LevelItem>\n        )}\n      </Level>\n      {<PipelineQuickSearchTaskAlert ctaType={getTaskCtaType(selectedItem, selectedVersion)} />}\n      <TextContent className=\"opp-quick-search-details__description\" data-test=\"task-description\">\n        {selectedItem.description}\n        {hubLink && (\n          <ExternalLink\n            additionalClassName=\"opp-quick-search-details__hublink\"\n            dataTestID=\"task-hub-link\"\n            href={hubLink}\n            text={t('pipelines-plugin~Read more')}\n          />\n        )}\n      </TextContent>\n      <Stack className=\"opp-quick-search-details__badges-section\" hasGutter>\n        {selectedItem?.attributes?.categories?.length > 0 && (\n          <StackItem>\n            <LabelGroup\n              categoryName={t('pipelines-plugin~Categories')}\n              data-test=\"task-category-list\"\n            >\n              {selectedItem?.attributes?.categories.map((category) => (\n                <Label color=\"blue\" key={category} data-test=\"task-category-list-item\">\n                  {category}\n                </Label>\n              ))}\n            </LabelGroup>\n          </StackItem>\n        )}\n        {selectedItem?.tags?.length > 0 && (\n          <StackItem>\n            <LabelGroup categoryName={t('pipelines-plugin~Tags')} data-test=\"task-tag-list\">\n              {selectedItem.tags.map((tag) => (\n                <Label color=\"blue\" key={tag} data-test=\"task-tag-list-item\">\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </StackItem>\n        )}\n      </Stack>\n    </div>\n  );\n};\n\nexport default PipelineQuickSearchDetails;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { CTALabel } from './const';\n\ninterface PipelineQuickSearchTaskAlertProps {\n  ctaType: string;\n}\n\nconst PipelineQuickSearchTaskAlert: React.FC<PipelineQuickSearchTaskAlertProps> = ({ ctaType }) => {\n  const { t } = useTranslation();\n  switch (ctaType) {\n    case CTALabel.Install:\n      return (\n        <Alert\n          className=\"co-alert\"\n          variant=\"info\"\n          title={t('pipelines-plugin~This task is not installed')}\n          isInline\n        >\n          <p>{t('pipelines-plugin~Adding this task may take a few moments.')}</p>\n        </Alert>\n      );\n    case CTALabel.Update:\n      return (\n        <Alert\n          className=\"co-alert\"\n          title={t('pipelines-plugin~Task version will be updated across all instances')}\n          variant=\"warning\"\n          isInline\n        >\n          <p>\n            {t(\n              `pipelines-plugin~Only update this task's version if you'd like to replace all of its references in the namespace.`,\n            )}\n          </p>\n        </Alert>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default PipelineQuickSearchTaskAlert;\n","import * as React from 'react';\nimport {\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport { global_palette_green_500 as greenColor } from '@patternfly/react-tokens';\nimport i18n from 'i18next';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk';\nimport { TektonHubTaskVersion } from '../catalog/apis/tektonHub';\nimport { isSelectedVersionInstalled } from './pipeline-quicksearch-utils';\n\ninterface PipelineQuickSearchVersionDropdownProps {\n  selectedVersion: string;\n  item: CatalogItem;\n  versions: TektonHubTaskVersion[];\n  onChange: (key: string) => void;\n}\n\nconst PipelineQuickSearchVersionDropdown: React.FC<PipelineQuickSearchVersionDropdownProps> = ({\n  item,\n  versions,\n  onChange,\n  selectedVersion,\n}) => {\n  const [isOpen, setOpen] = React.useState(false);\n  const toggleIsOpen = React.useCallback(() => setOpen((v) => !v), []);\n\n  if (!versions || !versions.length) {\n    return null;\n  }\n  const versionItems = versions.reduce((acc, { version }) => {\n    if (version) {\n      acc[version.toString()] =\n        version === item.data?.latestVersion?.version\n          ? i18n.t('pipelines-plugin~{{version}} (latest)', { version })\n          : version;\n    }\n    return acc;\n  }, {});\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      className=\"opp-quick-search-details__version-dropdown\"\n      onClick={toggleIsOpen}\n      isExpanded={isOpen}\n      ref={toggleRef}\n      isDisabled={versions.length === 1}\n      data-test=\"task-version\"\n    >\n      {versionItems[selectedVersion]}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      className=\"opp-quick-search-details__version-dropdown\"\n      isOpen={isOpen}\n      onSelect={(_, value: string) => {\n        if (value) {\n          onChange(value);\n        }\n        setOpen(false);\n      }}\n      toggle={toggle}\n      onOpenChange={(open) => setOpen(open)}\n    >\n      <SelectList>\n        {Object.keys(versionItems).map((key) => (\n          <SelectOption key={key} label={versionItems[key]} value={key}>\n            <div className=\"opp-quick-search-details__version-dropdown-item\">\n              {versionItems[key]}\n              {isSelectedVersionInstalled(item, key) && (\n                <CheckCircleIcon color={greenColor.value} />\n              )}\n            </div>\n          </SelectOption>\n        ))}\n      </SelectList>\n    </Select>\n  );\n};\n\nexport default PipelineQuickSearchVersionDropdown;\n","import * as React from 'react';\nimport { Icon } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { global_warning_color_100 as warningColor } from '@patternfly/react-tokens/dist/js/global_warning_color_100';\nimport i18next from 'i18next';\nimport { confirmModal } from '@console/internal/components/modals/confirm-modal';\nimport ModalContent from './ModalContent';\n\ntype ModalCallback = () => void;\n\nexport const removeTaskModal = (taskName: string, onRemove: ModalCallback) => {\n  confirmModal({\n    title: i18next.t('pipelines-plugin~Remove task'),\n    message: (\n      <ModalContent\n        icon={\n          <Icon size=\"lg\">\n            <ExclamationTriangleIcon color={warningColor.value} />\n          </Icon>\n        }\n        title={i18next.t('pipelines-plugin~Remove {{taskName}}?', { taskName })}\n        message={i18next.t('pipelines-plugin~Are you sure you want to remove {{taskName}}?', {\n          taskName,\n        })}\n      />\n    ),\n    buttonText: i18next.t('pipelines-plugin~Remove'),\n    executeFn: () => {\n      onRemove();\n      return Promise.resolve();\n    },\n    submitDanger: true,\n  });\n};\n","import * as React from 'react';\nimport { Split, SplitItem } from '@patternfly/react-core';\n\nimport './ModalContent.scss';\n\ntype ModalContentProps = {\n  icon?: React.ReactNode;\n  title: string;\n  message: string;\n};\n\nconst ModalContent: React.FC<ModalContentProps> = ({ icon, message, title }) => {\n  return (\n    <Split className=\"odc-modal-content\" hasGutter>\n      {icon && <SplitItem>{icon}</SplitItem>}\n      <SplitItem isFilled>\n        <h2 className=\"co-break-word odc-modal-content__confirm-title\">{title}</h2>\n        <p className=\"co-break-word\">{message}</p>\n      </SplitItem>\n    </Split>\n  );\n};\n\nexport default ModalContent;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\nimport { PipelineWorkspaces } from '../detail-page-tabs';\nimport PipelineParameters from '../PipelineParameters';\nimport PipelineBuilderVisualization from './PipelineBuilderVisualization';\nimport {\n  PipelineBuilderTaskResources,\n  PipelineBuilderTaskGroup,\n  SelectTaskCallback,\n  UpdateTasksCallback,\n  TaskSearchCallback,\n} from './types';\n\nimport './PipelineBuilderForm.scss';\n\ntype PipelineBuilderFormEditorProps = {\n  hasExistingPipeline: boolean;\n  taskGroup: PipelineBuilderTaskGroup;\n  taskResources: PipelineBuilderTaskResources;\n  onTaskSelection: SelectTaskCallback;\n  onTaskSearch: TaskSearchCallback;\n  onUpdateTasks: UpdateTasksCallback;\n};\n\nconst PipelineBuilderFormEditor: React.FC<PipelineBuilderFormEditorProps> = (props) => {\n  const { t } = useTranslation();\n  const {\n    hasExistingPipeline,\n    taskGroup,\n    taskResources,\n    onTaskSelection,\n    onUpdateTasks,\n    onTaskSearch,\n  } = props;\n\n  return (\n    <>\n      <div className=\"opp-pipeline-builder-form__short-section\">\n        <InputField\n          label={t('pipelines-plugin~Name')}\n          name=\"formData.name\"\n          type={TextInputTypes.text}\n          isDisabled={hasExistingPipeline}\n          required\n        />\n      </div>\n\n      <div>\n        <h2>\n          {t('pipelines-plugin~Tasks')}\n          <span className=\"pf-v5-c-form__label-required\">*</span>\n        </h2>\n        <PipelineBuilderVisualization\n          onTaskSelection={onTaskSelection}\n          onUpdateTasks={onUpdateTasks}\n          onTaskSearch={onTaskSearch}\n          taskGroup={taskGroup}\n          taskResources={taskResources}\n        />\n      </div>\n\n      <div>\n        <h2>{t('pipelines-plugin~Parameters')}</h2>\n        <PipelineParameters\n          fieldName=\"formData.params\"\n          addLabel={t('pipelines-plugin~Add parameter')}\n          nameLabel={t('pipelines-plugin~Name')}\n          nameFieldName=\"name\"\n          descriptionLabel={t('pipelines-plugin~Description')}\n          descriptionFieldName=\"description\"\n          valueLabel={t('pipelines-plugin~Default value')}\n          valueFieldName=\"default\"\n          emptyMessage={t('pipelines-plugin~No parameters are associated with this Pipeline.')}\n          emptyValues={{ name: '', description: '', default: '' }}\n        />\n      </div>\n\n      <div>\n        <h2>{t('pipelines-plugin~Workspaces')}</h2>\n        <PipelineWorkspaces\n          addLabel={t('pipelines-plugin~Add workspace')}\n          fieldName=\"formData.workspaces\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default PipelineBuilderFormEditor;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { ModelKind } from '@patternfly/react-topology';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { PipelineLayout } from '../pipeline-topology/const';\nimport { builderComponentsFactory } from '../pipeline-topology/factories';\nimport PipelineTopologyGraph from '../pipeline-topology/PipelineTopologyGraph';\nimport { getBuilderEdgesFromNodes, nodesHasWhenExpression } from '../pipeline-topology/utils';\nimport { useNodes } from './hooks';\nimport {\n  PipelineBuilderFormikValues,\n  PipelineBuilderTaskResources,\n  PipelineBuilderTaskGroup,\n  SelectTaskCallback,\n  UpdateTasksCallback,\n  TaskSearchCallback,\n} from './types';\nimport { getBuilderTasksErrorGroup } from './utils';\n\ntype PipelineBuilderVisualizationProps = {\n  onTaskSelection: SelectTaskCallback;\n  onUpdateTasks: UpdateTasksCallback;\n  onTaskSearch: TaskSearchCallback;\n  taskGroup: PipelineBuilderTaskGroup;\n  taskResources: PipelineBuilderTaskResources;\n};\n\nconst PipelineBuilderVisualization: React.FC<PipelineBuilderVisualizationProps> = ({\n  onTaskSelection,\n  onUpdateTasks,\n  onTaskSearch,\n  taskGroup,\n  taskResources,\n}) => {\n  const { t } = useTranslation();\n  const { errors, status } = useFormikContext<PipelineBuilderFormikValues>();\n  const nodes = useNodes(\n    onTaskSelection,\n    onUpdateTasks,\n    onTaskSearch,\n    taskGroup,\n    taskResources,\n    getBuilderTasksErrorGroup(errors?.formData, status),\n  );\n  const hasWhenExpression = nodesHasWhenExpression(nodes);\n\n  if (status?.taskLoadingError) {\n    return (\n      <Alert variant=\"danger\" isInline title={t('pipelines-plugin~Error loading the tasks.')}>\n        {status.taskLoadingError}\n      </Alert>\n    );\n  }\n  if (!taskResources.tasksLoaded) {\n    return <LoadingBox />;\n  }\n\n  const model = {\n    graph: {\n      id: 'pipeline-builder',\n      type: ModelKind.graph,\n      layout: hasWhenExpression\n        ? PipelineLayout.DAGRE_BUILDER_SPACED\n        : PipelineLayout.DAGRE_BUILDER,\n    },\n    nodes,\n    edges: getBuilderEdgesFromNodes(nodes),\n  };\n\n  return (\n    <PipelineTopologyGraph\n      // TODO: fix this; the graph layout isn't properly laying out nodes\n      key={`${nodes.map((n) => n.id).join('-')}${hasWhenExpression ? '-spaced' : ''}`}\n      data-test=\"pipeline-builder\"\n      builder\n      model={model}\n      componentFactory={builderComponentsFactory}\n    />\n  );\n};\n\nexport default PipelineBuilderVisualization;\n","import * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { TechPreviewBadge } from '@console/shared';\nimport { usePipelineTechPreviewBadge } from '../../../utils/hooks';\n\nimport './PipelineBuilderHeader.scss';\n\nconst PipelineBuilderHeader: React.FC<{ namespace: string }> = ({ namespace }) => {\n  const { t } = useTranslation();\n  const badge = usePipelineTechPreviewBadge(namespace);\n\n  return (\n    <div className=\"odc-pipeline-builder-header\">\n      <Flex className=\"odc-pipeline-builder-header__content\">\n        <FlexItem grow={{ default: 'grow' }}>\n          <div className=\"co-m-nav-title\">\n            <h1 className=\"co-m-pane__heading odc-pipeline-builder-header__title\">\n              {t('pipelines-plugin~Pipeline builder')}\n            </h1>\n          </div>\n        </FlexItem>\n        {badge && (\n          <FlexItem>\n            <TechPreviewBadge />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n\nexport default PipelineBuilderHeader;\n","import * as React from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { FormikErrors, useField } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport CloseButton from '@console/shared/src/components/close-button';\nimport {\n  PipelineTask,\n  PipelineTaskParam,\n  TektonResource,\n  TektonWorkspace,\n  TektonParam,\n  PipelineTaskResource,\n  ResourceTarget,\n  TektonResourceGroup,\n} from '../../../../types';\nimport { getTaskParameters, getTaskResources } from '../../resource-utils';\nimport { SelectedBuilderTask, TaskType, UpdateOperationRenameTaskData } from '../types';\nimport TaskSidebarHeader from './TaskSidebarHeader';\nimport TaskSidebarName from './TaskSidebarName';\nimport TaskSidebarParam from './TaskSidebarParam';\nimport TaskSidebarResource from './TaskSidebarResource';\nimport TaskSidebarWhenExpression from './TaskSidebarWhenExpression';\nimport TaskSidebarWorkspace from './TaskSidebarWorkspace';\n\nimport './TaskSidebar.scss';\n\ntype TaskSidebarProps = {\n  errorMap: FormikErrors<PipelineTask>[];\n  onRemoveTask: (taskName: string) => void;\n  onRenameTask: (data: UpdateOperationRenameTaskData) => void;\n  resourceList: TektonResource[];\n  workspaceList: TektonWorkspace[];\n  selectedData: SelectedBuilderTask;\n  onClose: () => void;\n};\n\n/** Protect against -1 index for Formik 'name' use-cases */\nfunction safeIndex<T>(list: T[], comparatorFunc: (v: T) => boolean): number {\n  const idx = list.findIndex(comparatorFunc);\n  return idx === -1 ? list.length : idx;\n}\n\nconst TaskSidebar: React.FC<TaskSidebarProps> = (props) => {\n  const { t } = useTranslation();\n  const { onRemoveTask, onRenameTask, resourceList, workspaceList, selectedData, onClose } = props;\n  const { isFinallyTask, taskIndex, resource: taskResource } = selectedData;\n  const taskType: TaskType = isFinallyTask ? 'finallyTasks' : 'tasks';\n  const formikTaskReference = `formData.${taskType}.${taskIndex}`;\n  const [{ value: thisTask }] = useField<PipelineTask>(formikTaskReference);\n\n  const params: TektonParam[] = getTaskParameters(taskResource) || [];\n  const resources: TektonResourceGroup<TektonResource> = getTaskResources(taskResource);\n  const inputResources: TektonResource[] = resources.inputs || [];\n  const outputResources: TektonResource[] = resources.outputs || [];\n  const workspaces: TektonWorkspace[] = taskResource.spec.workspaces || [];\n\n  const renderResource = (type: ResourceTarget) => (resource: TektonResource) => {\n    const taskResources: PipelineTaskResource[] = thisTask.resources?.[type] || [];\n    const resourceIdx = safeIndex(taskResources, (thisParam) => thisParam.name === resource.name);\n    return (\n      <div key={resource.name} className=\"odc-task-sidebar__resource\">\n        <TaskSidebarResource\n          availableResources={resourceList}\n          hasResource={!!taskResources[resourceIdx]}\n          name={`${formikTaskReference}.resources.${type}.${resourceIdx}`}\n          resource={resource}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <Stack className=\"opp-task-sidebar\">\n      <StackItem className=\"co-sidebar-dismiss  clearfix\">\n        <CloseButton\n          onClick={onClose}\n          dataTestID=\"sidebar-close-button\"\n          additionalClassName=\"co-sidebar-dismiss__close-button\"\n        />\n      </StackItem>\n      <StackItem className=\"opp-task-sidebar__header\">\n        <TaskSidebarHeader\n          taskResource={taskResource}\n          removeThisTask={() => onRemoveTask(thisTask.name)}\n        />\n      </StackItem>\n      <StackItem className=\"opp-task-sidebar__content pf-v5-c-form\">\n        <TaskSidebarName\n          name={`${formikTaskReference}.name`}\n          taskName={taskResource.metadata.name}\n          // We need to do this through an update call because runAfters are tied to the name and we need to fix those\n          // with this change to maintain a healthy and stable graph\n          onChange={(newName) => onRenameTask({ preChangePipelineTask: thisTask, newName })}\n        />\n\n        {params.length > 0 && (\n          <div>\n            <h2>{t('pipelines-plugin~Parameters')}</h2>\n            <p className=\"co-help-text opp-task-sidebar__paragraph\">\n              <Trans ns=\"pipelines-plugin\">\n                Use this format when you reference variables in this form:{' '}\n                <code className=\"co-code\">$(</code>\n              </Trans>\n            </p>\n            {params.map((param) => {\n              const taskParams: PipelineTaskParam[] = thisTask.params || [];\n              const paramIdx = safeIndex(taskParams, (thisParam) => thisParam.name === param.name);\n              return (\n                <div key={param.name} className=\"opp-task-sidebar__param\">\n                  <TaskSidebarParam\n                    hasParam={!!taskParams[paramIdx]}\n                    name={`${formikTaskReference}.params.${paramIdx}`}\n                    resourceParam={param}\n                    selectedData={selectedData}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        )}\n        {workspaces.length > 0 && (\n          <div>\n            <h2>{t('pipelines-plugin~Workspaces')}</h2>\n            {workspaces.map((workspace) => {\n              const taskWorkspaces: TektonWorkspace[] = thisTask.workspaces || [];\n              const workspaceIdx = safeIndex(\n                taskWorkspaces,\n                (thisWorkspace) => thisWorkspace.name === workspace.name,\n              );\n              return (\n                <div key={workspace.name} className=\"opp-task-sidebar__workspace\">\n                  <TaskSidebarWorkspace\n                    availableWorkspaces={workspaceList}\n                    hasWorkspace={!!taskWorkspaces[workspaceIdx]}\n                    name={`${formikTaskReference}.workspaces.${workspaceIdx}`}\n                    resourceWorkspace={workspace}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        )}\n\n        {inputResources.length > 0 && (\n          <div>\n            <h2>{t('pipelines-plugin~Input resources')}</h2>\n            {inputResources.map(renderResource('inputs'))}\n          </div>\n        )}\n        {outputResources.length > 0 && (\n          <div>\n            <h2>{t('pipelines-plugin~Output resources')}</h2>\n            {outputResources.map(renderResource('outputs'))}\n          </div>\n        )}\n        <div className=\"opp-task-sidebar__when-expressions\">\n          <TaskSidebarWhenExpression\n            hasParam={false}\n            name={`${formikTaskReference}.when`}\n            selectedData={selectedData}\n          />\n        </div>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default TaskSidebar;\n","import * as React from 'react';\nimport { Divider } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ActionsMenu } from '@console/internal/components/utils';\nimport { TaskKind } from '../../../../types';\nimport PipelineResourceRef from '../../../shared/common/PipelineResourceRef';\nimport TaskSidebarShortcuts from './TaskSidebarShortcuts';\n\nimport './TaskSidebarHeader.scss';\n\ntype TaskSidebarHeaderProps = {\n  removeThisTask: () => void;\n  taskResource: TaskKind;\n};\n\nconst TaskSidebarHeader: React.FC<TaskSidebarHeaderProps> = ({ removeThisTask, taskResource }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"opp-task-sidebar-header\">\n      <div className=\"opp-task-sidebar-header__title\">\n        <h1 className=\"co-m-pane__heading\">\n          <div className=\"co-m-pane__name co-resource-item\">\n            <PipelineResourceRef\n              resourceKind={taskResource.kind}\n              resourceName={taskResource.metadata.name}\n              largeIcon\n              disableLink\n            />\n          </div>\n          <div className=\"co-actions\">\n            <ActionsMenu\n              actions={[\n                {\n                  label: t('pipelines-plugin~Remove task'),\n                  callback: () => removeThisTask(),\n                },\n              ]}\n            />\n          </div>\n        </h1>\n      </div>\n      <div className=\"opp-task-sidebar-header__shortcuts clearfix\">\n        <TaskSidebarShortcuts />\n      </div>\n      <Divider className=\"co-divider\" />\n    </div>\n  );\n};\n\nexport default TaskSidebarHeader;\n","import * as React from 'react';\nimport { Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { Shortcut, ShortcutTable } from '@console/shared';\n\nconst TaskSidebarShortcuts: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Popover\n      aria-label={t('pipelines-plugin~View shortcuts')}\n      bodyContent={\n        <ShortcutTable>\n          <Shortcut ctrl keyName=\"space\">\n            {t('pipelines-plugin~Activate auto complete')}\n          </Shortcut>\n        </ShortcutTable>\n      }\n      maxWidth=\"25rem\"\n      distance={18}\n    >\n      <Button type=\"button\" variant=\"link\" isInline>\n        <QuestionCircleIcon className=\"co-icon-space-r co-p-has-sidebar__sidebar-link-icon\" />\n        {t('pipelines-plugin~View shortcuts')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport default TaskSidebarShortcuts;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { RedExclamationCircleIcon, nameValidationSchema } from '@console/shared';\nimport { STATUS_KEY_NAME_ERROR } from '../const';\nimport { NameErrorStatus, PipelineBuilderFormikValues } from '../types';\n\ntype TaskSidebarNameProps = {\n  name: string;\n  onChange: (newName: string) => void;\n  taskName: string;\n};\n\nconst TaskSidebarName: React.FC<TaskSidebarNameProps> = (props) => {\n  const { t } = useTranslation();\n  const { name, onChange, taskName } = props;\n  const { setStatus, status, values } = useFormikContext<PipelineBuilderFormikValues>();\n  const {\n    formData: { tasks, finallyTasks },\n  } = values;\n  const initialName: string = _.get(values, name, taskName);\n  const statusPath: string[] = [STATUS_KEY_NAME_ERROR, name];\n  const { nameError, errorMessage }: NameErrorStatus = _.get(status, statusPath, {});\n  const [interimName, setInterimName] = React.useState(nameError ?? initialName);\n  const [validating, setValidating] = React.useState(null);\n  const isValid = !errorMessage;\n  const reservedNames: string[] = [...tasks, ...finallyTasks]\n    .map(({ name: usedName }) => usedName)\n    .filter((usedName) => usedName !== initialName);\n\n  const saveErrorState = (value: string, message: string) => {\n    setStatus({\n      ...status,\n      [STATUS_KEY_NAME_ERROR]: {\n        ...(status?.[STATUS_KEY_NAME_ERROR] || {}),\n        // `name` stored as a path string intentionally\n        [name]: {\n          nameError: value,\n          errorMessage: message,\n        },\n      },\n    });\n  };\n  const clearErrorState = () => {\n    setStatus({\n      ...status,\n      [STATUS_KEY_NAME_ERROR]: _.omit(status?.[STATUS_KEY_NAME_ERROR], name),\n    });\n  };\n\n  return (\n    <FormGroup fieldId=\"task-name\" label={t('pipelines-plugin~Display name')} isRequired>\n      <TextInput\n        data-test={`task-name ${interimName}`}\n        id=\"task-name\"\n        validated={isValid ? 'default' : 'error'}\n        isRequired\n        onChange={(_event, value) => {\n          setInterimName(value);\n\n          if (reservedNames.includes(value)) {\n            saveErrorState(value, t('pipelines-plugin~This name is already in use.'));\n            return;\n          }\n\n          setValidating(true);\n          nameValidationSchema(t, 63)\n            .validate(value)\n            .then(() => {\n              clearErrorState();\n              setValidating(false);\n            })\n            .catch((err) => {\n              saveErrorState(value, err?.message || t('pipelines-plugin~Required'));\n              setValidating(false);\n            });\n        }}\n        onBlur={() => {\n          if (!validating && isValid) {\n            onChange(interimName);\n          }\n        }}\n        placeholder={taskName}\n        type={TextInputTypes.text}\n        value={interimName}\n      />\n\n      {!isValid && (\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n              {errorMessage}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      )}\n    </FormGroup>\n  );\n};\n\nexport default TaskSidebarName;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { TextAreaField, TextColumnField, MergeNewValueUtil } from '@console/shared';\nimport { TektonParam } from '../../../../types';\nimport { paramIsRequired } from '../../../../utils/common';\nimport AutoCompletePopover from '../../../shared/common/auto-complete/AutoCompletePopover';\nimport { useBuilderParams } from '../../../shared/common/auto-complete/autoCompleteValueParsers';\nimport { PipelineBuilderFormikValues, SelectedBuilderTask } from '../types';\n\nimport './TaskSidebarParam.scss';\n\ntype TaskSidebarParamProps = {\n  hasParam: boolean;\n  name: string;\n  resourceParam: TektonParam;\n  selectedData?: SelectedBuilderTask;\n};\n\nconst TaskSidebarParam: React.FC<TaskSidebarParamProps> = (props) => {\n  const { setFieldValue } = useFormikContext<PipelineBuilderFormikValues>();\n  const { hasParam, name, resourceParam, selectedData } = props;\n  const autoCompleteOptions = useBuilderParams(selectedData);\n\n  const emptyIsInvalid = paramIsRequired(resourceParam);\n\n  const resourceParamName = resourceParam.name;\n  const fieldName = `${name}.value`;\n\n  const setValue = React.useCallback(\n    (value: string) => {\n      if (hasParam) {\n        setFieldValue(fieldName, value);\n      } else {\n        setFieldValue(name, { name: resourceParamName, value });\n      }\n    },\n    [hasParam, fieldName, name, setFieldValue, resourceParamName],\n  );\n\n  const textAreaSettings: Omit<React.ComponentProps<typeof TextAreaField>, 'name'> = {\n    rows: 1,\n    resizeOrientation: 'vertical',\n  };\n\n  return (\n    <div className=\"opp-task-sidebar-param\" data-test={`parameter ${resourceParamName}`}>\n      {resourceParam.type === 'array' ? (\n        <TextColumnField name={fieldName} label={resourceParam.name} required={emptyIsInvalid}>\n          {({ name: arrayName, ...additionalProps }, mergeNewValue: MergeNewValueUtil) => (\n            <AutoCompletePopover\n              autoCompleteValues={autoCompleteOptions}\n              onAutoComplete={(newValue: string) => {\n                const newValues = mergeNewValue(newValue);\n                setFieldValue(name, { name: resourceParamName, value: newValues });\n              }}\n            >\n              {(ref) => (\n                <TextAreaField\n                  ref={ref}\n                  data-test={`value ${arrayName}`}\n                  aria-label={resourceParam.name}\n                  name={arrayName}\n                  {...additionalProps}\n                  {...textAreaSettings}\n                  onChange={(newValue: string) => {\n                    const values: string[] = mergeNewValue(newValue);\n                    if (!hasParam) {\n                      setFieldValue(name, { name: resourceParamName, value: values });\n                    }\n                  }}\n                />\n              )}\n            </AutoCompletePopover>\n          )}\n        </TextColumnField>\n      ) : (\n        <AutoCompletePopover autoCompleteValues={autoCompleteOptions} onAutoComplete={setValue}>\n          {(ref) => (\n            <TextAreaField\n              ref={ref}\n              data-test={`value ${fieldName}`}\n              name={fieldName}\n              label={resourceParam.name}\n              placeholder={resourceParam.default as string}\n              helpText={resourceParam.description}\n              required={emptyIsInvalid}\n              onChange={(value: string) => {\n                if (!hasParam) {\n                  setValue(value);\n                }\n              }}\n              {...textAreaSettings}\n            />\n          )}\n        </AutoCompletePopover>\n      )}\n    </div>\n  );\n};\n\nexport default TaskSidebarParam;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { FormSelectField, FormSelectFieldOption } from '@console/shared';\nimport { TektonResource } from '../../../../types';\nimport { PipelineBuilderFormikValues } from '../types';\n\ntype TaskSidebarResourceProps = {\n  availableResources: TektonResource[];\n  hasResource: boolean;\n  name: string;\n  resource: TektonResource;\n};\n\ninterface ResourceLink {\n  name: string;\n  resource: string;\n}\n\nconst TaskSidebarResource: React.FC<TaskSidebarResourceProps> = (props) => {\n  const { t } = useTranslation();\n  const { getFieldMeta, setFieldValue } = useFormikContext<PipelineBuilderFormikValues>();\n  const {\n    availableResources,\n    hasResource,\n    name,\n    resource: { name: resourceName, type: resourceType, optional = false },\n  } = props;\n\n  const dropdownResources = availableResources.filter(\n    (resource) => resourceType === resource.type && !!resource.name?.trim(),\n  );\n\n  const currentLinkedResourceName = getFieldMeta<ResourceLink>(name).value?.resource;\n  const currentLinkedResourceSelectable =\n    currentLinkedResourceName &&\n    dropdownResources.some((resource) => resource.name === currentLinkedResourceName);\n\n  const options: FormSelectFieldOption[] = [\n    {\n      label: optional\n        ? t('pipelines-plugin~No {{resourceType}} resource', { resourceType })\n        : t('pipelines-plugin~Select {{resourceType}} resource...', { resourceType }),\n      value: '',\n      isPlaceholder: true,\n      isDisabled: !optional,\n    },\n  ];\n  if (currentLinkedResourceName && !currentLinkedResourceSelectable) {\n    options.push({\n      label: currentLinkedResourceName,\n      value: currentLinkedResourceName,\n      isDisabled: true,\n    });\n  }\n  options.push(\n    ...dropdownResources.map((resource) => ({ label: resource.name, value: resource.name })),\n  );\n\n  return (\n    <FormSelectField\n      name={`${name}.resource`}\n      label={resourceName}\n      helpText={t('pipelines-plugin~Only showing resources for this type ({{resourceType}}).', {\n        resourceType,\n      })}\n      options={options}\n      isDisabled={options.length === 1}\n      onChange={(selectedResource: string) => {\n        if (!hasResource) {\n          setFieldValue(name, { name: resourceName, resource: selectedResource });\n        }\n      }}\n      required={!optional}\n    />\n  );\n};\n\nexport default TaskSidebarResource;\n","import * as React from 'react';\nimport { Button, ButtonType, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { useField } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { MultiColumnField } from '@console/shared';\nimport { RowRendererProps } from '@console/shared/src/components/formik-fields/multi-column-field/MultiColumnFieldRow';\nimport { useBuilderParams } from '../../../shared/common/auto-complete/autoCompleteValueParsers';\nimport WhenExpressionForm from '../../pipeline-topology/WhenExpressionForm';\nimport { SelectedBuilderTask } from '../types';\n\nimport './TaskSidebarWhenExpression.scss';\n\ntype TaskSidebarWhenExpressionProps = {\n  hasParam: boolean;\n  name: string;\n  selectedData: SelectedBuilderTask;\n};\n\nconst TaskSidebarWhenExpression: React.FC<TaskSidebarWhenExpressionProps> = (props) => {\n  const { name, selectedData } = props;\n  const [field] = useField(name);\n  const { t } = useTranslation();\n  const removeWhenExpressionLabel = t('pipelines-plugin~Remove when expression');\n  const autoCompleteValues: string[] = useBuilderParams(selectedData);\n\n  return (\n    <div className=\"opp-task-sidebar-when-expression\">\n      <h2>{t('pipelines-plugin~When expressions')}</h2>\n      <p className=\"co-help-text opp-task-sidebar__paragraph\">\n        {field.value?.length > 0 ? (\n          <Trans ns=\"pipelines-plugin\">\n            Use this format when you reference variables in this form:{' '}\n            <code className=\"co-code\">$(</code>\n          </Trans>\n        ) : (\n          t('pipelines-plugin~No when expressions are associated with this task.')\n        )}\n      </p>\n      <MultiColumnField\n        data-test=\"when-expression\"\n        name={name}\n        addLabel={t('pipelines-plugin~Add when expression')}\n        headers={[]}\n        emptyValues={{ input: '', operator: '', values: [''] }}\n        rowRenderer={({ onDelete, fieldName }: RowRendererProps) => (\n          <div className=\"opp-task-sidebar-when-expression__section\" data-test={`row ${fieldName}`}>\n            <WhenExpressionForm autoCompleteValues={autoCompleteValues} namePrefix={fieldName} />\n            <div className=\"opp-task-sidebar-when-expression__control-button-wrapper\">\n              <Tooltip content={removeWhenExpressionLabel}>\n                <Button\n                  onClick={onDelete}\n                  data-test=\"remove-when-expression\"\n                  className=\"opp-task-sidebar-when-expression__control-button\"\n                  aria-label={removeWhenExpressionLabel}\n                  variant={ButtonVariant.plain}\n                  type={ButtonType.button}\n                >\n                  <MinusCircleIcon />\n                  <span className=\"opp-task-sidebar-when-expression__control-label\">\n                    {removeWhenExpressionLabel}\n                  </span>\n                </Button>\n              </Tooltip>\n            </div>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default TaskSidebarWhenExpression;\n","import * as React from 'react';\nimport { Grid, GridItem, TextInputTypes } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, DropdownField, TextColumnField } from '@console/shared';\nimport AutoCompletePopover from '../../shared/common/auto-complete/AutoCompletePopover';\nimport { WhenExpressionOperatorType } from '../pipeline-builder/const';\nimport { PipelineBuilderFormikValues } from '../pipeline-builder/types';\n\ntype WhenExpressionFormProps = {\n  namePrefix?: string;\n  autoCompleteValues: string[];\n};\n\nconst WhenExpressionForm: React.FC<WhenExpressionFormProps> = ({\n  namePrefix,\n  autoCompleteValues,\n}) => {\n  const { setFieldValue } = useFormikContext<PipelineBuilderFormikValues>();\n  const { t } = useTranslation();\n\n  return (\n    <Grid hasGutter>\n      <GridItem span={6}>\n        <AutoCompletePopover\n          autoCompleteValues={autoCompleteValues}\n          onAutoComplete={(input: string) => setFieldValue(`${namePrefix}.input`, input)}\n        >\n          {(ref) => (\n            <InputField\n              ref={ref}\n              data-test=\"input\"\n              type={TextInputTypes.text}\n              name={`${namePrefix}.input`}\n              label={t('pipelines-plugin~Input')}\n              autoComplete=\"off\"\n            />\n          )}\n        </AutoCompletePopover>\n      </GridItem>\n      <GridItem span={6}>\n        <DropdownField\n          dataTest=\"operator\"\n          name={`${namePrefix}.operator`}\n          label={t('pipelines-plugin~Operator')}\n          items={WhenExpressionOperatorType}\n          title={t('pipelines-plugin~Select operator')}\n          onChange={(operator: string) => setFieldValue(`${namePrefix}.operator`, operator)}\n          fullWidth\n        />\n      </GridItem>\n      <GridItem>\n        <TextColumnField\n          data-test=\"values\"\n          name={`${namePrefix}.values`}\n          label={t('pipelines-plugin~Values')}\n        >\n          {({ name: arrayName, ...additionalProps }) => (\n            <AutoCompletePopover\n              autoCompleteValues={autoCompleteValues}\n              onAutoComplete={(newValue: string) => {\n                setFieldValue(arrayName, newValue);\n              }}\n            >\n              {(ref) => (\n                <InputField\n                  data-test={`${arrayName} value`}\n                  ref={ref}\n                  name={arrayName}\n                  {...additionalProps}\n                  autoComplete=\"off\"\n                />\n              )}\n            </AutoCompletePopover>\n          )}\n        </TextColumnField>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default WhenExpressionForm;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { FormSelectField, FormSelectFieldOption } from '@console/shared';\nimport { TektonWorkspace } from '../../../../types';\nimport { PipelineBuilderFormikValues } from '../types';\n\ntype TaskSidebarWorkspaceProps = {\n  availableWorkspaces: TektonWorkspace[];\n  hasWorkspace: boolean;\n  name: string;\n  resourceWorkspace: TektonWorkspace;\n};\n\ninterface WorkspaceLink {\n  name: string;\n  workspace: string;\n}\n\nconst TaskSidebarWorkspace: React.FC<TaskSidebarWorkspaceProps> = (props) => {\n  const {\n    availableWorkspaces,\n    hasWorkspace,\n    name,\n    resourceWorkspace: { name: workspaceName, optional = false },\n  } = props;\n  const { t } = useTranslation();\n  const { getFieldMeta, setFieldValue } = useFormikContext<PipelineBuilderFormikValues>();\n\n  const dropdownWorkspaces = availableWorkspaces.filter((workspace) => !!workspace.name?.trim());\n\n  const currentLinkedWorkspaceName = getFieldMeta<WorkspaceLink>(name).value?.workspace;\n  const currentLinkedWorkspaceSelectable =\n    currentLinkedWorkspaceName &&\n    dropdownWorkspaces.some((resource) => resource.name === currentLinkedWorkspaceName);\n\n  const options: FormSelectFieldOption[] = [\n    {\n      label: optional\n        ? t('pipelines-plugin~No workspace')\n        : t('pipelines-plugin~Select workspace...'),\n      value: '',\n      isPlaceholder: true,\n      isDisabled: !optional,\n    },\n  ];\n  if (currentLinkedWorkspaceName && !currentLinkedWorkspaceSelectable) {\n    options.push({\n      label: currentLinkedWorkspaceName,\n      value: currentLinkedWorkspaceName,\n      isDisabled: true,\n    });\n  }\n  options.push(\n    ...dropdownWorkspaces.map((workspace) => ({\n      value: workspace.name,\n      label: workspace.name,\n    })),\n  );\n\n  return (\n    <FormSelectField\n      data-test={`workspaces ${workspaceName}`}\n      name={`${name}.workspace`}\n      label={workspaceName}\n      isDisabled={options.length === 1}\n      options={options}\n      onChange={(selectedWorkspace: string) => {\n        if (!hasWorkspace) {\n          setFieldValue(name, { name: workspaceName, workspace: selectedWorkspace });\n        }\n      }}\n      required={!optional}\n    />\n  );\n};\n\nexport default TaskSidebarWorkspace;\n","import { getRandomChars } from '@console/shared';\nimport { PipelineTask } from '../../../types';\nimport { AddNodeDirection } from '../pipeline-topology/const';\nimport { UpdateOperationType } from './const';\nimport {\n  CleanupResults,\n  PipelineBuilderListTask,\n  PipelineBuilderTaskBase,\n  PipelineBuilderTaskGroup,\n  PipelineBuilderTaskGrouping,\n  UpdateOperation,\n  UpdateOperationAction,\n  UpdateOperationAddData,\n  UpdateOperationConvertToFinallyTaskData,\n  UpdateOperationConvertToLoadingTaskData,\n  UpdateOperationConvertToTaskData,\n  UpdateOperationDeleteListTaskData,\n  UpdateOperationFixInvalidTaskListData,\n  UpdateOperationRemoveTaskData,\n  UpdateOperationRenameTaskData,\n} from './types';\nimport {\n  convertResourceToLoadingTask,\n  convertResourceToTask,\n  mapAddRelatedToOthers,\n  mapBeRelated,\n  mapReplaceRelatedInOthers,\n  mapStitchReplaceInOthers,\n} from './utils';\n\nconst addListNode: UpdateOperationAction<UpdateOperationAddData> = (taskGrouping, data) => {\n  const { direction, relatedTask } = data;\n\n  const newTaskName = `${direction}-${getRandomChars(6)}`;\n  const relatedTaskName = relatedTask.name;\n  const { tasks, listTasks } = taskGrouping;\n  switch (direction) {\n    case AddNodeDirection.BEFORE:\n      return {\n        ...taskGrouping,\n        tasks: tasks.map((pipelineTask) =>\n          mapBeRelated<PipelineTask>(newTaskName, relatedTaskName, pipelineTask),\n        ),\n        listTasks: [\n          ...listTasks.map((listTask) =>\n            mapBeRelated<PipelineBuilderListTask>(newTaskName, relatedTaskName, listTask),\n          ),\n          { name: newTaskName, runAfter: relatedTask.runAfter },\n        ],\n      };\n    case AddNodeDirection.AFTER:\n      return {\n        ...taskGrouping,\n        tasks: tasks.map((pipelineTask) =>\n          mapReplaceRelatedInOthers<PipelineTask>(newTaskName, relatedTaskName, pipelineTask),\n        ),\n        listTasks: [\n          ...listTasks.map((listTask) =>\n            mapReplaceRelatedInOthers<PipelineBuilderListTask>(\n              newTaskName,\n              relatedTaskName,\n              listTask,\n            ),\n          ),\n          { name: newTaskName, runAfter: [relatedTaskName] },\n        ],\n      };\n    case AddNodeDirection.PARALLEL:\n      return {\n        ...taskGrouping,\n        tasks: tasks.map((pipelineTask) =>\n          mapAddRelatedToOthers<PipelineTask>(newTaskName, relatedTaskName, pipelineTask),\n        ),\n        listTasks: [\n          ...listTasks.map((listTask) =>\n            mapAddRelatedToOthers<PipelineBuilderListTask>(newTaskName, relatedTaskName, listTask),\n          ),\n          { name: newTaskName, runAfter: relatedTask.runAfter },\n        ],\n      };\n    default:\n      throw new Error(`Invalid direction ${direction}`);\n  }\n};\n\nconst getTaskNames = (tasks: PipelineTask[]) => tasks.map((t) => t.name);\n\nconst convertListToTask: UpdateOperationAction<UpdateOperationConvertToTaskData> = (\n  taskGrouping,\n  data,\n) => {\n  const { name, resource, runAfter } = data;\n  const { tasks, listTasks, finallyTasks } = taskGrouping;\n  const usedNames = getTaskNames([...tasks, ...finallyTasks]);\n  const newPipelineTask: PipelineTask = convertResourceToTask(usedNames, resource, runAfter);\n  return {\n    ...taskGrouping,\n    tasks: [\n      ...tasks.map((pipelineTask) =>\n        mapReplaceRelatedInOthers(newPipelineTask.name, name, pipelineTask),\n      ),\n      newPipelineTask,\n    ],\n    listTasks: listTasks\n      .filter((n) => n.name !== name)\n      .map((listTask) => mapReplaceRelatedInOthers(newPipelineTask.name, name, listTask)),\n  };\n};\nconst convertFinallyListToTask: UpdateOperationAction<UpdateOperationConvertToTaskData> = (\n  taskGrouping,\n  data,\n) => {\n  const { name, resource } = data;\n  const { tasks, finallyTasks, finallyListTasks } = taskGrouping;\n  const usedNames = getTaskNames([...tasks, ...finallyTasks]);\n  const newPipelineTask: PipelineTask = convertResourceToTask(usedNames, resource);\n\n  return {\n    ...taskGrouping,\n    finallyTasks: [\n      ...finallyTasks.map((pipelineTask) =>\n        mapReplaceRelatedInOthers(newPipelineTask.name, name, pipelineTask),\n      ),\n      newPipelineTask,\n    ],\n    finallyListTasks: finallyListTasks\n      .filter((n) => n.name !== name)\n      .map((listTask) => mapReplaceRelatedInOthers(newPipelineTask.name, name, listTask)),\n  };\n};\n\nconst convertLoadingNodeToFinallyTask: UpdateOperationAction<UpdateOperationConvertToTaskData> = (\n  taskGrouping,\n  data,\n) => {\n  const { name, resource, runAfter } = data;\n  const { tasks, loadingTasks, finallyTasks } = taskGrouping;\n  const usedNames = getTaskNames([...tasks, ...finallyTasks]);\n  const newPipelineTask: PipelineTask = convertResourceToTask(usedNames, resource, runAfter);\n  return {\n    ...taskGrouping,\n    finallyTasks: [\n      ...finallyTasks.map((pipelineTask) =>\n        mapReplaceRelatedInOthers(newPipelineTask.name, name, pipelineTask),\n      ),\n      newPipelineTask,\n    ],\n    loadingTasks: loadingTasks\n      .filter((n) => n.name !== name)\n      .map((listTask) => mapReplaceRelatedInOthers(newPipelineTask.name, name, listTask)),\n  };\n};\n\nconst convertLoadingNodeToTask: UpdateOperationAction<UpdateOperationConvertToTaskData> = (\n  taskGrouping,\n  data,\n) => {\n  const { name, resource, runAfter } = data;\n  const { tasks, loadingTasks, finallyTasks } = taskGrouping;\n  const usedNames = getTaskNames([...tasks, ...finallyTasks]);\n  const newPipelineTask: PipelineTask = convertResourceToTask(usedNames, resource, runAfter);\n  return {\n    ...taskGrouping,\n    tasks: [\n      ...tasks.map((pipelineTask) =>\n        mapReplaceRelatedInOthers(newPipelineTask.name, name, pipelineTask),\n      ),\n      newPipelineTask,\n    ],\n    loadingTasks: loadingTasks\n      .filter((n) => n.name !== name)\n      .map((listTask) => mapReplaceRelatedInOthers(newPipelineTask.name, name, listTask)),\n  };\n};\n\nconst convertToLoadingTask: UpdateOperationAction<UpdateOperationConvertToLoadingTaskData> = (\n  taskGrouping,\n  data,\n) => {\n  const { name, resource, runAfter, isFinallyTask } = data;\n  const { tasks, listTasks, finallyTasks, finallyListTasks, loadingTasks } = taskGrouping;\n  const usedNames = getTaskNames([...tasks, ...finallyTasks]);\n  const newLoadingTask = convertResourceToLoadingTask(usedNames, resource, isFinallyTask, runAfter);\n\n  return {\n    ...taskGrouping,\n    loadingTasks: [...loadingTasks, newLoadingTask],\n    tasks: [\n      ...tasks\n        .filter((n) => n.name !== name)\n        .map((pipelineTask) => mapReplaceRelatedInOthers(newLoadingTask.name, name, pipelineTask)),\n    ],\n    finallyTasks: [\n      ...finallyTasks\n        .filter((n) => n.name !== name)\n        .map((pipelineTask) => mapReplaceRelatedInOthers(newLoadingTask.name, name, pipelineTask)),\n    ],\n    listTasks: [\n      ...listTasks\n        .filter((n) => n.name !== name && !isFinallyTask)\n        .map((pipelineTask) => mapReplaceRelatedInOthers(newLoadingTask.name, name, pipelineTask)),\n    ],\n    finallyListTasks: finallyListTasks\n      .filter((n) => n.name !== name && isFinallyTask)\n      .map((listTask) => mapReplaceRelatedInOthers(newLoadingTask.name, name, listTask)),\n  };\n};\n\nconst removeAndUpdateTasks = <\n  URT extends PipelineBuilderTaskBase,\n  UT extends PipelineBuilderTaskBase\n>(\n  removalTaskName: string,\n  updateAndRemoveTasks: URT[],\n  updateOnlyTasks: UT[],\n): { updateOnlyTasks: UT[]; updateAndRemoveTasks: URT[] } => {\n  const removalTask = updateAndRemoveTasks.find((task) => task.name === removalTaskName);\n  if (!removalTask) {\n    return {\n      updateAndRemoveTasks,\n      updateOnlyTasks,\n    };\n  }\n  return {\n    updateOnlyTasks: updateOnlyTasks.map((task) => mapStitchReplaceInOthers<UT>(removalTask, task)),\n    updateAndRemoveTasks: updateAndRemoveTasks\n      .filter((task) => task.name !== removalTaskName)\n      .map((task) => mapStitchReplaceInOthers<URT>(removalTask, task)),\n  };\n};\n\nconst deleteListTask: UpdateOperationAction<UpdateOperationDeleteListTaskData> = (\n  taskGrouping,\n  data,\n) => {\n  const { listTaskName } = data;\n  const { tasks, listTasks, finallyTasks, finallyListTasks } = taskGrouping;\n  const { updateOnlyTasks, updateAndRemoveTasks } = removeAndUpdateTasks<\n    PipelineBuilderListTask,\n    PipelineTask\n  >(listTaskName, listTasks, tasks);\n  const {\n    updateOnlyTasks: updateFinallyTasks,\n    updateAndRemoveTasks: updateFinallyListTasks,\n  } = removeAndUpdateTasks<PipelineBuilderListTask, PipelineTask>(\n    listTaskName,\n    finallyListTasks,\n    finallyTasks,\n  );\n  return {\n    ...taskGrouping,\n    tasks: updateOnlyTasks,\n    listTasks: updateAndRemoveTasks,\n    finallyTasks: updateFinallyTasks,\n    finallyListTasks: updateFinallyListTasks,\n  };\n};\n\nexport const removeTask: UpdateOperationAction<UpdateOperationRemoveTaskData> = (\n  taskGrouping,\n  data,\n) => {\n  const { taskName } = data;\n  const { tasks, listTasks, finallyTasks, finallyListTasks } = taskGrouping;\n  const { updateOnlyTasks, updateAndRemoveTasks } = removeAndUpdateTasks<\n    PipelineTask,\n    PipelineBuilderListTask\n  >(taskName, tasks, listTasks);\n\n  const { updateAndRemoveTasks: finallyUpdateAndRemoveTasks } = removeAndUpdateTasks<\n    PipelineTask,\n    PipelineBuilderListTask\n  >(taskName, finallyTasks, finallyListTasks);\n\n  return {\n    ...taskGrouping,\n    tasks: updateAndRemoveTasks,\n    listTasks: updateOnlyTasks,\n    finallyTasks: finallyUpdateAndRemoveTasks,\n  };\n};\n\nconst renameTask: UpdateOperationAction<UpdateOperationRenameTaskData> = (taskGrouping, data) => {\n  const { preChangePipelineTask, newName } = data;\n  const { tasks, listTasks, finallyTasks } = taskGrouping;\n\n  const getUpdatedTasks = (updateTasks: PipelineTask[]): PipelineTask[] =>\n    updateTasks.map((pipelineTask) => {\n      if (pipelineTask.name !== preChangePipelineTask.name) {\n        // Not the task that is changing, rework runAfters that may include it\n        return mapReplaceRelatedInOthers(newName, preChangePipelineTask.name, pipelineTask);\n      }\n\n      return {\n        ...pipelineTask,\n        name: newName,\n      };\n    });\n\n  const updatedTasks = getUpdatedTasks(tasks);\n  const updatedFinallyTasks = getUpdatedTasks(finallyTasks);\n\n  return {\n    ...taskGrouping,\n    tasks: updatedTasks,\n    listTasks: listTasks.map((listTask) =>\n      mapReplaceRelatedInOthers(newName, preChangePipelineTask.name, listTask),\n    ),\n    finallyTasks: updatedFinallyTasks,\n  };\n};\n\nconst fixInvalidListTask: UpdateOperationAction<UpdateOperationFixInvalidTaskListData> = (\n  taskGrouping,\n  data,\n) => {\n  const { existingName, resource, runAfter } = data;\n  const { tasks, listTasks } = taskGrouping;\n  const usedNames = getTaskNames(tasks);\n  const newPipelineTask: PipelineTask = convertResourceToTask(usedNames, resource, runAfter);\n\n  return {\n    ...taskGrouping,\n    tasks: [\n      ...tasks\n        .filter((pipelineTask) => pipelineTask.name !== existingName)\n        .map((pipelineTask) =>\n          mapReplaceRelatedInOthers(newPipelineTask.name, existingName, pipelineTask),\n        ),\n      newPipelineTask,\n    ],\n    listTasks,\n  };\n};\nconst fixInvalidFinallyListTask: UpdateOperationAction<UpdateOperationFixInvalidTaskListData> = (\n  taskGrouping,\n  data,\n) => {\n  const { existingName, resource, runAfter } = data;\n  const { tasks, finallyTasks, finallyListTasks } = taskGrouping;\n  const usedNames = getTaskNames([...finallyTasks, ...tasks]);\n  const newPipelineTask: PipelineTask = convertResourceToTask(usedNames, resource, runAfter);\n\n  return {\n    ...taskGrouping,\n    finallyTasks: [\n      ...finallyTasks\n        .filter((pipelineTask) => pipelineTask.name !== existingName)\n        .map((pipelineTask) =>\n          mapReplaceRelatedInOthers(newPipelineTask.name, existingName, pipelineTask),\n        ),\n      newPipelineTask,\n    ],\n    finallyListTasks,\n  };\n};\n\nconst addFinallyListTask: UpdateOperationAction<UpdateOperationConvertToFinallyTaskData> = (\n  taskGrouping,\n  data,\n) => {\n  const { finallyListTasks } = taskGrouping;\n  return {\n    ...taskGrouping,\n    finallyListTasks: [...finallyListTasks, { name: data.listTaskName }],\n  };\n};\n\nexport const applyChange = (\n  taskGroup: PipelineBuilderTaskGroup,\n  op: UpdateOperation,\n): CleanupResults => {\n  const { type, data } = op;\n  const { tasks, listTasks, finallyTasks, finallyListTasks, loadingTasks } = taskGroup;\n  const taskGrouping: PipelineBuilderTaskGrouping = {\n    tasks,\n    listTasks,\n    loadingTasks,\n    finallyTasks,\n    finallyListTasks,\n  };\n  switch (type) {\n    case UpdateOperationType.ADD_LIST_TASK:\n      return addListNode(taskGrouping, data as UpdateOperationAddData);\n    case UpdateOperationType.CONVERT_LIST_TO_TASK:\n      return convertListToTask(taskGrouping, data as UpdateOperationConvertToTaskData);\n    case UpdateOperationType.CONVERT_LIST_TO_FINALLY_TASK:\n      return convertFinallyListToTask(taskGrouping, data as UpdateOperationConvertToTaskData);\n    case UpdateOperationType.DELETE_LIST_TASK:\n      return deleteListTask(taskGrouping, data as UpdateOperationDeleteListTaskData);\n    case UpdateOperationType.REMOVE_TASK:\n      return removeTask(taskGrouping, data as UpdateOperationRemoveTaskData);\n    case UpdateOperationType.RENAME_TASK:\n      return renameTask(taskGrouping, data as UpdateOperationRenameTaskData);\n    case UpdateOperationType.FIX_INVALID_LIST_TASK:\n      return fixInvalidListTask(taskGrouping, data as UpdateOperationFixInvalidTaskListData);\n    case UpdateOperationType.FIX_INVALID_FINALLY_LIST_TASK:\n      return fixInvalidFinallyListTask(taskGrouping, data as UpdateOperationFixInvalidTaskListData);\n    case UpdateOperationType.ADD_FINALLY_LIST_TASK:\n      return addFinallyListTask(taskGrouping, data as UpdateOperationConvertToFinallyTaskData);\n    case UpdateOperationType.ADD_LOADING_TASK:\n      return convertToLoadingTask(taskGrouping, data as UpdateOperationConvertToLoadingTaskData);\n    case UpdateOperationType.CONVERT_LOADING_TASK_TO_TASK:\n      return convertLoadingNodeToTask(taskGrouping, data as UpdateOperationConvertToTaskData);\n    case UpdateOperationType.CONVERT_LOADING_TASK_TO_FINALLY_TASK:\n      return convertLoadingNodeToFinallyTask(\n        taskGrouping,\n        data as UpdateOperationConvertToTaskData,\n      );\n    default:\n      throw new Error(`Invalid update operation ${type}`);\n  }\n};\n","import * as React from 'react';\nimport { PipelineRunKind } from '../../../types';\nimport PipelineRunDetailsSection from './PipelineRunDetailsSection';\nimport './TriggeredBySection.scss';\n\nexport interface PipelineRunDetailsProps {\n  obj: PipelineRunKind;\n}\n\nexport const PipelineRunDetails: React.FC<PipelineRunDetailsProps> = ({ obj: pipelineRun }) => {\n  return (\n    <div className=\"co-m-pane__body odc-pipeline-run-details\">\n      <PipelineRunDetailsSection pipelineRun={pipelineRun} />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading, ResourceSummary } from '@console/internal/components/utils';\nimport { PipelineRunKind } from '../../../types';\nimport PipelineRunCustomDetails from './PipelineRunCustomDetails';\nimport PipelineRunVisualization from './PipelineRunVisualization';\n\nexport interface PipelineRunDetailsSectionProps {\n  pipelineRun: PipelineRunKind;\n}\n\nconst PipelineRunDetailsSection: React.FC<PipelineRunDetailsSectionProps> = ({ pipelineRun }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SectionHeading text={t('pipelines-plugin~PipelineRun details')} />\n      <PipelineRunVisualization pipelineRun={pipelineRun} />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={pipelineRun} />\n        </div>\n        <div className=\"col-sm-6 odc-pipeline-run-details__customDetails\">\n          <PipelineRunCustomDetails pipelineRun={pipelineRun} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PipelineRunDetailsSection;\n","import * as React from 'react';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { ExternalLink, Timestamp } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { TaskRunModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunTitleFilterReducer,\n} from '../../../utils/pipeline-filter-reducer';\nimport {\n  getImageUrl,\n  getSbomLink,\n  getSbomTaskRun,\n  hasExternalLink,\n  pipelineRunDuration,\n} from '../../../utils/pipeline-utils';\nimport {\n  convertBackingPipelineToPipelineResourceRefProps,\n  getPipelineResourceLinks,\n} from '../../pipelines/detail-page-tabs';\nimport DynamicResourceLinkList from '../../pipelines/resource-overview/DynamicResourceLinkList';\nimport RepositoryLinkList from '../../repository/RepositoryLinkList';\nimport PipelineResourceRef from '../../shared/common/PipelineResourceRef';\nimport WorkspaceResourceLinkList from '../../shared/workspaces/WorkspaceResourceLinkList';\nimport { useTaskRuns } from '../../taskruns/useTaskRuns';\nimport { getPLRLogSnippet } from '../logs/pipelineRunLogSnippet';\nimport RunDetailsErrorLog from '../logs/RunDetailsErrorLog';\nimport PipelineRunVulnerabilities from '../status/PipelineRunVulnerabilities';\nimport TriggeredBySection from './TriggeredBySection';\n\nexport type PipelineRunCustomDetailsProps = {\n  pipelineRun: PipelineRunKind;\n};\n\nconst PipelineRunCustomDetails: React.FC<PipelineRunCustomDetailsProps> = ({ pipelineRun }) => {\n  const { t } = useTranslation();\n  const [taskRuns, taskRunsLoaded] = useTaskRuns(\n    pipelineRun?.metadata?.namespace,\n    pipelineRun?.metadata?.name,\n  );\n  const pipelineResourceLinks = getPipelineResourceLinks(\n    pipelineRun.status?.pipelineSpec?.resources,\n    pipelineRun.spec.resources,\n  );\n\n  const sbomTaskRun = taskRunsLoaded ? getSbomTaskRun(taskRuns) : null;\n  const buildImage = getImageUrl(pipelineRun);\n  const linkToSbom = getSbomLink(sbomTaskRun);\n  const isExternalLink = hasExternalLink(sbomTaskRun);\n  return (\n    <>\n      <dl>\n        <dt>{t('pipelines-plugin~Status')}</dt>\n        <dd>\n          <Status\n            status={pipelineRunFilterReducer(pipelineRun)}\n            title={pipelineRunTitleFilterReducer(pipelineRun)}\n          />\n        </dd>\n      </dl>\n      {taskRunsLoaded && (\n        <RunDetailsErrorLog\n          logDetails={getPLRLogSnippet(pipelineRun, taskRuns)}\n          namespace={pipelineRun.metadata.namespace}\n        />\n      )}\n      <dl>\n        <dt>{t('pipelines-plugin~Vulnerabilities')}</dt>\n        <dd>\n          <PipelineRunVulnerabilities pipelineRun={pipelineRun} />\n        </dd>\n      </dl>\n      <dl>\n        <dt>{t('pipelines-plugin~Pipeline')}</dt>\n        <dd>\n          <PipelineResourceRef {...convertBackingPipelineToPipelineResourceRefProps(pipelineRun)} />\n        </dd>\n        {buildImage && sbomTaskRun && (\n          <>\n            <dt data-test=\"download-sbom\">{t('pipelines-plugin~Download SBOM')}</dt>\n            <dd>\n              <ClipboardCopy\n                isReadOnly\n                hoverTip={t('pipelines-plugin~Copy')}\n                clickTip={t('pipelines-plugin~Copied')}\n              >\n                {`cosign download sbom ${buildImage}`}\n              </ClipboardCopy>\n              <ExternalLink href=\"https://docs.sigstore.dev/cosign/installation\">\n                {t('pipelines-plugin~Install Cosign')}\n              </ExternalLink>\n            </dd>\n          </>\n        )}\n        {sbomTaskRun && (\n          <>\n            <dt data-test=\"view-sbom\">{t('pipelines-plugin~SBOM')}</dt>\n            <dd>\n              {isExternalLink &&\n              linkToSbom &&\n              (linkToSbom.startsWith('http://') || linkToSbom.startsWith('https://')) ? (\n                <ExternalLink href={linkToSbom}>{t('pipelines-plugin~View SBOM')}</ExternalLink>\n              ) : (\n                <Link\n                  to={`/k8s/ns/${sbomTaskRun.metadata.namespace}/${referenceForModel(\n                    TaskRunModel,\n                  )}/${sbomTaskRun.metadata.name}/logs`}\n                >\n                  {t('pipelines-plugin~View SBOM')}\n                </Link>\n              )}\n            </dd>\n          </>\n        )}\n      </dl>\n\n      <dl>\n        <dt>{t('pipelines-plugin~Start time')}</dt>\n        <dd>\n          <Timestamp timestamp={pipelineRun?.status?.startTime} />\n        </dd>\n        <dt>{t('pipelines-plugin~Completion time')}</dt>\n        <dd>\n          <Timestamp timestamp={pipelineRun?.status?.completionTime} />\n        </dd>\n        <dt>{t('pipelines-plugin~Duration')}</dt>\n        <dd>{pipelineRunDuration(pipelineRun)}</dd>\n      </dl>\n      <TriggeredBySection pipelineRun={pipelineRun} />\n      <DynamicResourceLinkList\n        links={pipelineResourceLinks}\n        title={t('pipelines-plugin~PipelineResources')}\n        namespace={pipelineRun.metadata.namespace}\n      />\n      <RepositoryLinkList pipelineRun={pipelineRun} />\n      <WorkspaceResourceLinkList\n        workspaces={pipelineRun.spec.workspaces}\n        namespace={pipelineRun.metadata.namespace}\n        ownerResourceName={pipelineRun.metadata.name}\n      />\n    </>\n  );\n};\n\nexport default PipelineRunCustomDetails;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ExternalLink,\n  CopyToClipboard,\n  truncateMiddle,\n  ResourceIcon,\n  resourcePath,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { RepositoryModel } from '../../models';\nimport { PipelineRunKind } from '../../types';\nimport {\n  RepositoryAnnotations,\n  RepoAnnotationFields,\n  RepositoryFields,\n  RepositoryLabels,\n} from './consts';\nimport { getGitProviderIcon, getLabelValue, sanitizeBranchName } from './repository-utils';\n\nexport type RepositoryLinkListProps = {\n  pipelineRun: PipelineRunKind;\n};\n\nconst RepositoryLinkList: React.FC<RepositoryLinkListProps> = ({ pipelineRun }) => {\n  const { t } = useTranslation();\n  const plrLabels = pipelineRun.metadata.labels;\n  const plrAnnotations = pipelineRun.metadata.annotations;\n  const repoLabel = RepositoryLabels[RepositoryFields.REPOSITORY];\n  const repoName = plrLabels?.[repoLabel];\n  const repoURL = plrAnnotations?.[RepositoryAnnotations[RepoAnnotationFields.REPO_URL]];\n  const shaURL = plrAnnotations?.[RepositoryAnnotations[RepoAnnotationFields.SHA_URL]];\n  const branchName =\n    plrLabels?.[RepositoryAnnotations[RepoAnnotationFields.BRANCH]] ||\n    plrAnnotations?.[RepositoryAnnotations[RepoAnnotationFields.BRANCH]];\n\n  if (!repoName) return null;\n\n  return (\n    <dl>\n      <dt>{t('pipelines-plugin~Repository')}</dt>\n      <dd>\n        <div>\n          <ResourceIcon kind={referenceForModel(RepositoryModel)} />\n          <Link\n            data-test=\"pl-repository-link\"\n            to={`${resourcePath(\n              referenceForModel(RepositoryModel),\n              repoName,\n              pipelineRun.metadata.namespace,\n            )}/Runs`}\n            className=\"co-resource-item__resource-name\"\n          >\n            {repoName}\n          </Link>\n        </div>\n        {repoURL && (\n          <ExternalLink href={repoURL}>\n            {getGitProviderIcon(repoURL)} {repoURL}\n          </ExternalLink>\n        )}\n      </dd>\n      {branchName && (\n        <>\n          <dt>{t(getLabelValue(branchName))}</dt>\n          <dd data-test=\"pl-repository-branch\">{sanitizeBranchName(branchName)}</dd>\n        </>\n      )}\n      {plrLabels?.[RepositoryLabels[RepositoryFields.SHA]] && (\n        <>\n          <dt>{t('pipelines-plugin~Commit id')}</dt>\n          <dd>\n            {shaURL ? (\n              <ExternalLink href={shaURL} data-test=\"pl-sha-url\">\n                {truncateMiddle(plrLabels[RepositoryLabels[RepositoryFields.SHA]], {\n                  length: 7,\n                  truncateEnd: true,\n                  omission: '',\n                })}\n              </ExternalLink>\n            ) : (\n              <CopyToClipboard\n                value={plrLabels[RepositoryLabels[RepositoryFields.SHA]]}\n                data-test=\"pl-commit-id\"\n              />\n            )}\n          </dd>\n        </>\n      )}\n      {plrLabels?.[RepositoryLabels[RepositoryFields.EVENT_TYPE]] && (\n        <>\n          <dt>{t('pipelines-plugin~Event type')}</dt>\n          <dd data-test=\"pl-event-type\">\n            {plrLabels[RepositoryLabels[RepositoryFields.EVENT_TYPE]]}\n          </dd>\n        </>\n      )}\n    </dl>\n  );\n};\n\nexport default RepositoryLinkList;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { EventListenerModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport { StartedByAnnotation, StartedByLabel } from '../../pipelines/const';\n\ntype TriggeredByProps = {\n  pipelineRun: PipelineRunKind;\n};\n\nconst TriggeredBySection: React.FC<TriggeredByProps> = (props) => {\n  const { t } = useTranslation();\n  const {\n    pipelineRun: {\n      metadata: { annotations, namespace, labels },\n    },\n  } = props;\n\n  const manualTrigger = annotations?.[StartedByAnnotation.user];\n  const autoTrigger = labels?.[StartedByLabel.triggers];\n\n  if (!manualTrigger && !autoTrigger) {\n    return null;\n  }\n\n  let value = null;\n  if (manualTrigger) {\n    value = manualTrigger;\n  } else if (autoTrigger) {\n    value = (\n      <ResourceLink\n        kind={referenceForModel(EventListenerModel)}\n        name={autoTrigger}\n        namespace={namespace}\n      />\n    );\n  } else {\n    return null;\n  }\n\n  return (\n    <dl>\n      <dt>{t('pipelines-plugin~Triggered by')}:</dt>\n      <dd>{value}</dd>\n    </dl>\n  );\n};\n\nexport default TriggeredBySection;\n","import * as React from 'react';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { PipelineKind, PipelineRunKind } from '../../../types';\nimport PipelineVisualization from '../../pipelines/detail-page-tabs/pipeline-details/PipelineVisualization';\nimport { usePipelineFromPipelineRun } from '../hooks/usePipelineFromPipelineRun';\nimport { useTaskRuns } from '../hooks/useTaskRuns';\nimport './PipelineRunVisualization.scss';\n\ntype PipelineRunVisualizationProps = {\n  pipelineRun: PipelineRunKind;\n};\n\nconst PipelineRunVisualization: React.FC<PipelineRunVisualizationProps> = ({ pipelineRun }) => {\n  const [taskRuns, taskRunsLoaded] = useTaskRuns(\n    pipelineRun?.metadata?.namespace,\n    pipelineRun?.metadata?.name,\n  );\n  const pipeline: PipelineKind = usePipelineFromPipelineRun(pipelineRun);\n  if (!pipeline) {\n    return (\n      <div className=\"pipeline-plr-loader\">\n        <LoadingInline />\n      </div>\n    );\n  }\n  return (\n    taskRunsLoaded && (\n      <PipelineVisualization pipeline={pipeline} pipelineRun={pipelineRun} taskRuns={taskRuns} />\n    )\n  );\n};\n\nexport default PipelineRunVisualization;\n","import * as React from 'react';\nimport { Nav, NavItem, NavList } from '@patternfly/react-core';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { withTranslation } from 'react-i18next';\nimport { Link, useLocation } from 'react-router-dom-v5-compat';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { PipelineRunModel } from '../../../models';\nimport { ComputedStatus, PipelineRunKind, PipelineTask, TaskRunKind } from '../../../types';\nimport { pipelineRunStatus } from '../../../utils/pipeline-filter-reducer';\nimport { taskRunStatus } from '../../../utils/pipeline-utils';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport { ColoredStatusIcon } from '../../pipelines/detail-page-tabs/pipeline-details/StatusIcon';\nimport { useTaskRuns } from '../hooks/useTaskRuns';\nimport { ErrorDetailsWithStaticLog } from '../logs/log-snippet-types';\nimport { getDownloadAllLogsCallback } from '../logs/logs-utils';\nimport LogsWrapperComponent from '../logs/LogsWrapperComponent';\nimport { getPLRLogSnippet } from '../logs/pipelineRunLogSnippet';\nimport './PipelineRunLogs.scss';\n\ninterface PipelineRunLogsProps {\n  obj: PipelineRunKind;\n  activeTask?: string;\n  t: TFunction;\n  taskRuns: TaskRunKind[];\n}\ninterface PipelineRunLogsState {\n  activeItem: string;\n  navUntouched: boolean;\n}\nclass PipelineRunLogsWithTranslation extends React.Component<\n  PipelineRunLogsProps,\n  PipelineRunLogsState\n> {\n  constructor(props) {\n    super(props);\n    this.state = { activeItem: null, navUntouched: true };\n  }\n\n  componentDidMount() {\n    const { activeTask, taskRuns, obj } = this.props;\n    const sortedTaskRuns = this.getSortedTaskRun(taskRuns, [\n      ...(obj?.status?.pipelineSpec?.tasks || []),\n      ...(obj?.status?.pipelineSpec?.finally || []),\n    ]);\n    const activeItem = this.getActiveTaskRun(sortedTaskRuns, activeTask);\n    this.setState({ activeItem });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.obj !== nextProps.obj || this.props.taskRuns !== nextProps.taskRuns) {\n      const { activeTask, taskRuns } = nextProps;\n      const sortedTaskRuns = this.getSortedTaskRun(taskRuns, [\n        ...(this.props?.obj?.status?.pipelineSpec?.tasks || []),\n        ...(this.props?.obj?.status?.pipelineSpec?.finally || []),\n      ]);\n      const activeItem = this.getActiveTaskRun(sortedTaskRuns, activeTask);\n      this.state.navUntouched && this.setState({ activeItem });\n    }\n  }\n\n  getActiveTaskRun = (taskRuns: TaskRunKind[], activeTask: string): string => {\n    const activeTaskRun = activeTask\n      ? taskRuns.find((taskRun) => taskRun.metadata.name.includes(activeTask))\n      : taskRuns.find((taskRun) => taskRunStatus(taskRun) === ComputedStatus.Failed) ||\n        taskRuns[taskRuns.length - 1];\n\n    return activeTaskRun?.metadata.name;\n  };\n\n  getSortedTaskRun = (tRuns: TaskRunKind[], tasks: PipelineTask[]): TaskRunKind[] => {\n    const taskRuns = tRuns?.sort((a, b) => {\n      if (_.get(a, ['status', 'completionTime'], false)) {\n        return b.status?.completionTime &&\n          new Date(a.status.completionTime) > new Date(b.status.completionTime)\n          ? 1\n          : -1;\n      }\n      return b.status?.completionTime ||\n        new Date(a.status?.startTime) > new Date(b.status?.startTime)\n        ? 1\n        : -1;\n    });\n\n    const pipelineTaskNames = tasks?.map((t) => t?.name);\n    return (\n      taskRuns?.sort(\n        (c, d) =>\n          pipelineTaskNames?.indexOf(c?.metadata?.labels?.[TektonResourceLabel.pipelineTask]) -\n          pipelineTaskNames?.indexOf(d?.metadata?.labels?.[TektonResourceLabel.pipelineTask]),\n      ) || []\n    );\n  };\n\n  onNavSelect = (e, item) => {\n    this.setState({\n      activeItem: item.itemId,\n      navUntouched: false,\n    });\n  };\n\n  render() {\n    const { obj, t, taskRuns: tRuns } = this.props;\n    const { activeItem } = this.state;\n    const taskRunNames = this.getSortedTaskRun(tRuns, [\n      ...(obj?.status?.pipelineSpec?.tasks || []),\n      ...(obj?.status?.pipelineSpec?.finally || []),\n    ])?.map((tRun) => tRun.metadata.name);\n\n    const logDetails = getPLRLogSnippet(obj, tRuns) as ErrorDetailsWithStaticLog;\n    const pipelineStatus = pipelineRunStatus(obj);\n    const taskCount = taskRunNames.length;\n    const downloadAllCallback =\n      taskCount > 1\n        ? getDownloadAllLogsCallback(\n            taskRunNames,\n            tRuns,\n            obj.metadata?.namespace,\n            obj.metadata?.name,\n          )\n        : undefined;\n    const activeTaskRun = tRuns.find((taskRun) => taskRun.metadata.name === activeItem);\n    const podName = activeTaskRun?.status?.podName;\n    const taskName = activeTaskRun?.metadata?.labels?.[TektonResourceLabel.pipelineTask] || '-';\n    const pipelineRunFinished = pipelineStatus !== ComputedStatus.Running;\n    const resources: WatchK8sResource = taskCount > 0 &&\n      podName && {\n        name: podName,\n        kind: 'Pod',\n        namespace: obj.metadata.namespace,\n        isList: false,\n      };\n    const waitingForPods = !!(activeItem && !resources);\n\n    const selectedItemRef = (item: HTMLSpanElement) => {\n      if (item?.scrollIntoView) {\n        item.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n      }\n    };\n\n    const logsPath = `${resourcePathFromModel(\n      PipelineRunModel,\n      obj.metadata.name,\n      obj.metadata.namespace,\n    )}/logs`;\n\n    return (\n      <div className=\"odc-pipeline-run-logs\">\n        <div className=\"odc-pipeline-run-logs__tasklist\" data-test-id=\"logs-tasklist\">\n          {taskCount > 0 ? (\n            <Nav onSelect={this.onNavSelect} theme=\"light\">\n              <NavList className=\"odc-pipeline-run-logs__nav\">\n                {taskRunNames.map((taskRunName) => {\n                  const taskRun = tRuns.find((tRun) => tRun.metadata.name === taskRunName);\n                  return (\n                    <NavItem\n                      key={taskRunName}\n                      itemId={taskRunName}\n                      isActive={activeItem === taskRunName}\n                      className=\"odc-pipeline-run-logs__navitem\"\n                    >\n                      <Link\n                        to={`${logsPath}?taskName=${\n                          taskRun?.metadata?.labels?.[TektonResourceLabel.pipelineTask] || '-'\n                        }`}\n                      >\n                        <ColoredStatusIcon status={taskRunStatus(taskRun)} />\n                        <span\n                          className=\"odc-pipeline-run-logs__namespan\"\n                          ref={activeItem === taskRunName ? selectedItemRef : undefined}\n                        >\n                          {taskRun?.metadata?.labels?.[TektonResourceLabel.pipelineTask] || '-'}\n                        </span>\n                      </Link>\n                    </NavItem>\n                  );\n                })}\n              </NavList>\n            </Nav>\n          ) : (\n            <div className=\"odc-pipeline-run-logs__nav\">\n              {t('pipelines-plugin~No task runs found')}\n            </div>\n          )}\n        </div>\n        <div className=\"odc-pipeline-run-logs__container\">\n          {activeItem && resources ? (\n            <LogsWrapperComponent\n              key={taskName}\n              resource={resources}\n              taskName={taskName}\n              downloadAllLabel={t('pipelines-plugin~Download all task logs')}\n              onDownloadAll={downloadAllCallback}\n              taskRun={activeTaskRun}\n            />\n          ) : (\n            <div className=\"odc-pipeline-run-logs__log\">\n              <div className=\"odc-pipeline-run-logs__logtext\" data-test-id=\"task-logs-error\">\n                {waitingForPods && !pipelineRunFinished && `Waiting for ${taskName} task to start `}\n                {!resources &&\n                  pipelineRunFinished &&\n                  !obj.status &&\n                  t('pipelines-plugin~No logs found')}\n                {logDetails && (\n                  <div className=\"odc-pipeline-run-logs__logsnippet\">\n                    {logDetails.staticMessage}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\ntype PipelineRunLogsWithActiveTaskProps = {\n  obj: PipelineRunKind;\n};\n\nconst PipelineRunLogs = withTranslation()(PipelineRunLogsWithTranslation);\n\nexport const PipelineRunLogsWithActiveTask: React.FC<PipelineRunLogsWithActiveTaskProps> = ({\n  obj,\n}) => {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const activeTask = params?.get('taskName');\n  const [taskRuns, taskRunsLoaded] = useTaskRuns(obj?.metadata?.namespace, obj?.metadata?.name);\n\n  return (\n    taskRunsLoaded && <PipelineRunLogs obj={obj} activeTask={activeTask} taskRuns={taskRuns} />\n  );\n};\n\nexport default PipelineRunLogs;\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { ResourcesEventStream } from '@console/internal/components/events';\nimport { PipelineRunKind } from '../../../types';\nimport { usePipelineRunFilters } from './event-utils';\n\ntype PipelineRunEventsProps = {\n  obj: PipelineRunKind;\n};\n\nconst PipelineRunEvents: React.FC<PipelineRunEventsProps> = ({ obj: pipelineRun }) => {\n  const { ns: namespace } = useParams();\n  return (\n    <>\n      <ResourcesEventStream\n        filters={usePipelineRunFilters(namespace, pipelineRun)}\n        namespace={namespace}\n      />\n    </>\n  );\n};\nexport default PipelineRunEvents;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PipelineRunParameters from './PipelineRunParameters';\n\nexport interface PipelineRunParametersFormProps {\n  obj: K8sResourceKind;\n}\n\nconst PipelineRunParametersForm: React.FC<PipelineRunParametersFormProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const initialValues = {\n    parameters: _.get(obj.spec, 'params', []),\n  };\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={null}>\n        {() => (\n          <div className=\"co-m-pane__body\">\n            <PipelineRunParameters\n              fieldName=\"parameters\"\n              isReadOnly\n              nameLabel={t('pipelines-plugin~Name')}\n              nameFieldName=\"name\"\n              valueLabel={t('pipelines-plugin~Value')}\n              valueFieldName=\"value\"\n              emptyMessage={t(\n                'pipelines-plugin~No parameters are associated with this PipelineRun.',\n              )}\n              emptyValues={{\n                name: '',\n                value: '',\n              }}\n            />\n          </div>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default PipelineRunParametersForm;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { MultiColumnField, InputField } from '@console/shared';\n\ntype PipelineRunParametersProps = {\n  addLabel?: string;\n  nameLabel: string;\n  nameFieldName: string;\n  valueLabel: string;\n  valueFieldName: string;\n  emptyMessage: string;\n  fieldName: string;\n  emptyValues: { [name: string]: string };\n  isReadOnly?: boolean;\n};\n\nconst PipelineRunParameters: React.FC<PipelineRunParametersProps> = ({\n  addLabel,\n  nameLabel,\n  nameFieldName,\n  valueLabel,\n  valueFieldName,\n  emptyMessage,\n  fieldName,\n  emptyValues,\n  isReadOnly = false,\n}) => {\n  return (\n    <div className=\"co-m-pane__form\">\n      <MultiColumnField\n        data-test=\"pipeline-parameters\"\n        name={fieldName}\n        addLabel={addLabel}\n        headers={[\n          {\n            name: nameLabel,\n            required: true,\n          },\n          valueLabel,\n        ]}\n        emptyValues={emptyValues}\n        emptyMessage={emptyMessage}\n        isReadOnly={isReadOnly}\n      >\n        <InputField\n          data-test={nameFieldName}\n          name={nameFieldName}\n          type={TextInputTypes.text}\n          placeholder={nameLabel}\n          isDisabled={isReadOnly}\n          aria-label={nameLabel}\n        />\n        <InputField\n          data-test={valueFieldName}\n          name={valueFieldName}\n          type={TextInputTypes.text}\n          placeholder={valueLabel}\n          isDisabled={isReadOnly}\n          aria-label={valueLabel}\n        />\n      </MultiColumnField>\n    </div>\n  );\n};\n\nexport default PipelineRunParameters;\n","import * as React from 'react';\nimport { Table } from '@console/internal/components/factory';\nimport { RepositoryModel } from '../../../models';\nimport { usePipelineRuns } from '../../pipelineruns/hooks/usePipelineRuns';\nimport { useTaskRuns } from '../../pipelineruns/hooks/useTaskRuns';\nimport { RepositoryKind } from '../types';\nimport RepositoryHeader from './RepositoryHeader';\nimport RepositoryRow from './RepositoryRow';\n\nexport interface RepositoryListProps {\n  data?: RepositoryKind[];\n  namespace: string;\n}\n\nconst RepositoryList: React.FC<RepositoryListProps> = (props) => {\n  const [taskRuns, taskRunsLoaded] = useTaskRuns(props.namespace);\n  const [pipelineRuns, pipelineRunsLoaded] = usePipelineRuns(props.namespace);\n  return (\n    <Table\n      {...props}\n      aria-label={RepositoryModel.labelPluralKey}\n      Header={RepositoryHeader}\n      Row={RepositoryRow}\n      customData={{\n        taskRuns: taskRunsLoaded ? taskRuns : [],\n        pipelineRuns: pipelineRunsLoaded ? pipelineRuns : [],\n        taskRunsLoaded,\n      }}\n      virtualize\n    />\n  );\n};\n\nexport default RepositoryList;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport {\n  Kebab,\n  ResourceIcon,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Timestamp,\n} from '@console/internal/components/utils';\nimport { referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { getLatestRun } from '@console/pipelines-plugin/src/utils/pipeline-augment';\nimport { PipelineRunModel, RepositoryModel } from '../../../models';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunTitleFilterReducer,\n} from '../../../utils/pipeline-filter-reducer';\nimport { pipelineRunDuration } from '../../../utils/pipeline-utils';\nimport LinkedPipelineRunTaskStatus from '../../pipelineruns/status/LinkedPipelineRunTaskStatus';\nimport PipelineRunStatus from '../../pipelineruns/status/PipelineRunStatus';\nimport { getTaskRunsOfPipelineRun } from '../../taskruns/useTaskRuns';\nimport { RepositoryFields, RepositoryLabels } from '../consts';\nimport { RepositoryKind } from '../types';\nimport { repositoriesTableColumnClasses } from './RepositoryHeader';\n\nconst RepositoryRow: React.FC<RowFunctionArgs<RepositoryKind>> = ({ obj, customData }) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { taskRuns, pipelineRuns, taskRunsLoaded } = customData;\n  const plrs = pipelineRuns.filter((plr) => {\n    return (\n      plr.metadata?.labels?.[RepositoryLabels[RepositoryFields.REPOSITORY]] === obj.metadata.name\n    );\n  });\n  const latestRun = getLatestRun(plrs, 'creationTimestamp');\n\n  const latestPLREventType =\n    latestRun && latestRun?.metadata?.labels[RepositoryLabels[RepositoryFields.EVENT_TYPE]];\n\n  const PLRTaskRuns = getTaskRunsOfPipelineRun(taskRuns, latestRun?.metadata?.name);\n  return (\n    <>\n      <TableData className={repositoriesTableColumnClasses[0]}>\n        <ResourceIcon kind={referenceForModel(RepositoryModel)} />\n        <Link\n          to={`${resourcePath(referenceForModel(RepositoryModel), name, namespace)}/Runs`}\n          className=\"co-resource-item__resource-name\"\n          data-test-id={name}\n        >\n          {name}\n        </Link>\n      </TableData>\n      <TableData className={repositoriesTableColumnClasses[1]} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={repositoriesTableColumnClasses[2]}>\n        {latestPLREventType || '-'}\n      </TableData>\n      <TableData className={repositoriesTableColumnClasses[3]}>\n        {latestRun ? (\n          <ResourceLink\n            kind={referenceForModel(PipelineRunModel)}\n            name={latestRun?.metadata.name}\n            namespace={namespace}\n          />\n        ) : (\n          '-'\n        )}\n      </TableData>\n      <TableData className={repositoriesTableColumnClasses[4]}>\n        {}\n        {latestRun ? (\n          <LinkedPipelineRunTaskStatus\n            pipelineRun={latestRun}\n            taskRuns={PLRTaskRuns}\n            taskRunsLoaded={taskRunsLoaded}\n          />\n        ) : (\n          '-'\n        )}\n      </TableData>\n      <TableData className={repositoriesTableColumnClasses[5]}>\n        {\n          <PipelineRunStatus\n            status={pipelineRunFilterReducer(latestRun)}\n            title={pipelineRunTitleFilterReducer(latestRun)}\n            pipelineRun={latestRun}\n            taskRuns={PLRTaskRuns}\n            taskRunsLoaded={taskRunsLoaded}\n          />\n        }\n      </TableData>\n      <TableData className={repositoriesTableColumnClasses[6]}>\n        {<Timestamp timestamp={latestRun?.status.startTime} />}\n      </TableData>\n      <TableData className={repositoriesTableColumnClasses[7]}>\n        {pipelineRunDuration(latestRun)}\n      </TableData>\n      <TableData className={repositoriesTableColumnClasses[8]}>\n        <ResourceKebab actions={Kebab.factory.common} kind={referenceFor(obj)} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport default RepositoryRow;\n","import * as React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Stack,\n  StackItem,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { ChartLineIcon } from '@patternfly/react-icons/dist/esm/icons/chart-line-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport './PipelineMetrics.scss';\n\nconst PipelineMetricsEmptyState: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Stack className=\"pipeline-metrics-empty-state\">\n      <StackItem isFilled>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateHeader icon={<EmptyStateIcon icon={ChartLineIcon} />} />\n            <EmptyStateBody>\n              {t('pipelines-plugin~Start your pipeline to view pipeline metrics.')}\n            </EmptyStateBody>\n          </EmptyState>\n        </Bullseye>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default PipelineMetricsEmptyState;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport IntervalDropdown from '@console/internal/components/monitoring/poll-interval-dropdown';\n\ninterface PipelineMetricsRefreshDropdownProps {\n  interval: number;\n  setInterval: (v: number) => void;\n}\n\nconst PipelineMetricsRefreshDropdown: React.FC<PipelineMetricsRefreshDropdownProps> = ({\n  interval,\n  setInterval,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"pipeline-refresh-interval-dropdown\">\n        {t('pipelines-plugin~Refresh Interval')}\n      </label>\n      <div>\n        <IntervalDropdown\n          id=\"pipeline-refresh-interval-dropdown\"\n          interval={interval}\n          setInterval={setInterval}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PipelineMetricsRefreshDropdown;\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  formatPrometheusDuration,\n  parsePrometheusDuration,\n} from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport {\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\n\nimport { useBoolean } from './hooks/useBoolean';\n\nconst OFF_KEY = 'OFF_KEY';\n\ntype Props = {\n  interval: number;\n  setInterval: (v: number) => void;\n  id?: string;\n};\n\nconst IntervalDropdown: React.FC<Props> = ({ id, interval, setInterval }) => {\n  const [isOpen, toggleIsOpen, setOpen, setClosed] = useBoolean(false);\n  const { t } = useTranslation();\n\n  const onSelect = React.useCallback(\n    (v: string) => setInterval(v === OFF_KEY ? null : parsePrometheusDuration(v)),\n    [setInterval],\n  );\n\n  const intervalOptions = {\n    [OFF_KEY]: t('public~Refresh off'),\n    '15s': t('public~{{count}} second', { count: 15 }),\n    '30s': t('public~{{count}} second', { count: 30 }),\n    '1m': t('public~{{count}} minute', { count: 1 }),\n    '5m': t('public~{{count}} minute', { count: 5 }),\n    '15m': t('public~{{count}} minute', { count: 15 }),\n    '30m': t('public~{{count}} minute', { count: 30 }),\n    '1h': t('public~{{count}} hour', { count: 1 }),\n    '2h': t('public~{{count}} hour', { count: 2 }),\n    '1d': t('public~{{count}} day', { count: 1 }),\n  };\n\n  const selectedKey = interval === null ? OFF_KEY : formatPrometheusDuration(interval);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id={`${id}-dropdown`}\n      onClick={toggleIsOpen}\n      isExpanded={isOpen}\n      ref={toggleRef}\n      className=\"monitoring-dashboards__dropdown-button\"\n    >\n      {intervalOptions[selectedKey]}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      isOpen={isOpen}\n      onSelect={(_event, value: string) => {\n        if (value) {\n          onSelect(value);\n        }\n        setClosed();\n      }}\n      toggle={toggle}\n      className=\"monitoring-dashboards__variable-dropdown\"\n      onOpenChange={(open) => (open ? setOpen() : setClosed())}\n    >\n      <SelectList>\n        {_.map(intervalOptions, (name, key) => (\n          <SelectOption key={key} value={key} isSelected={key === selectedKey}>\n            {name}\n          </SelectOption>\n        ))}\n      </SelectList>\n    </Select>\n  );\n};\n\nexport default IntervalDropdown;\n","import * as React from 'react';\nimport {\n  formatPrometheusDuration,\n  parsePrometheusDuration,\n} from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport {\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { map } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineMetricsTimeRangeOptions } from './pipeline-metrics-utils';\n\ninterface PipelineMetricsTimeRangeDropdownProps {\n  timespan: number;\n  setTimespan: (t: number) => void;\n}\n\nconst PipelineMetricsTimeRangeDropdown: React.FC<PipelineMetricsTimeRangeDropdownProps> = ({\n  timespan,\n  setTimespan,\n}) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const toggleIsOpen = React.useCallback(() => setIsOpen((v) => !v), []);\n  const setClosed = React.useCallback(() => setIsOpen(false), []);\n  const onChange = React.useCallback((v: string) => setTimespan(parsePrometheusDuration(v)), [\n    setTimespan,\n  ]);\n  const { t } = useTranslation();\n  const timeRangeOptions = PipelineMetricsTimeRangeOptions();\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle onClick={toggleIsOpen} isExpanded={isOpen} ref={toggleRef}>\n      {timeRangeOptions[formatPrometheusDuration(timespan)]}\n    </MenuToggle>\n  );\n\n  return (\n    <div className=\"form-group\">\n      <label>{t('pipelines-plugin~Time Range')}</label>\n      <div>\n        <Select\n          isOpen={isOpen}\n          toggle={toggle}\n          onSelect={(_, value: string) => {\n            if (value) {\n              onChange(value);\n            }\n            setClosed();\n          }}\n          selected={timespan}\n          shouldFocusToggleOnSelect\n          onOpenChange={(open) => setIsOpen(open)}\n        >\n          <SelectList>\n            {map(timeRangeOptions, (name, key) => (\n              <SelectOption\n                key={key}\n                value={key}\n                isSelected={timespan === parsePrometheusDuration(key)}\n              >\n                {name}\n              </SelectOption>\n            ))}\n          </SelectList>\n        </Select>\n      </div>\n    </div>\n  );\n};\n\nexport default PipelineMetricsTimeRangeDropdown;\n","import * as React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Stack,\n  StackItem,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { ChartLineIcon } from '@patternfly/react-icons/dist/esm/icons/chart-line-icon';\nimport { useTranslation } from 'react-i18next';\nimport PipelineMetricsQuickstart from './PipelineMetricsQuickstart';\n\ntype PipelineMetricsUnsupportedProps = {\n  updatePermission: boolean;\n  metricsLevel: string;\n};\n\nconst PipelineMetricsUnsupported: React.FC<PipelineMetricsUnsupportedProps> = ({\n  updatePermission,\n  metricsLevel,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      {updatePermission && <PipelineMetricsQuickstart metricsLevel={metricsLevel} />}\n      <Stack className=\"pipeline-metrics-empty-state\">\n        <StackItem isFilled>\n          <Bullseye>\n            <EmptyState variant={EmptyStateVariant.full}>\n              <EmptyStateHeader icon={<EmptyStateIcon icon={ChartLineIcon} />} />\n              <EmptyStateBody>\n                {t('pipelines-plugin~Pipeline metrics configuration is unsupported.')}\n              </EmptyStateBody>\n            </EmptyState>\n          </Bullseye>\n        </StackItem>\n      </Stack>\n    </>\n  );\n};\n\nexport default PipelineMetricsUnsupported;\n","import * as React from 'react';\nimport { ChartVoronoiContainer } from '@patternfly/react-charts';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport Measure from 'react-measure';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { GraphEmpty } from '@console/internal/components/graphs/graph-empty';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { DEFAULT_CHART_HEIGHT, DEFAULT_SAMPLES } from '../const';\nimport { usePipelineRunPoll } from '../hooks';\nimport { TimeSeriesChart } from './charts/TimeSeriesChart';\nimport {\n  formatDate,\n  formatTimeSeriesValues,\n  getTransformedDataPoints,\n  PipelineMetricsGraphProps,\n} from './pipeline-metrics-utils';\n\nimport './pipeline-chart.scss';\n\nconst PipelineRunCount: React.FC<PipelineMetricsGraphProps> = ({\n  pipeline,\n  timespan,\n  interval,\n  loaded = true,\n  onLoad: onInitialLoad,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = pipeline;\n  const { t } = useTranslation();\n  const [pipelineRunResult, error, loading] = usePipelineRunPoll({\n    name,\n    namespace,\n    timespan,\n    delay: interval,\n    queryPrefix,\n    metricsLevel,\n  });\n  const pipelineRunResultData = React.useMemo(() => pipelineRunResult?.data?.result ?? [], [\n    pipelineRunResult,\n  ]);\n\n  React.useEffect(() => {\n    if (!loaded && onInitialLoad) {\n      onInitialLoad({ chartName: 'pipelineRunCount', hasData: !!pipelineRunResultData.length });\n    }\n  }, [loaded, onInitialLoad, pipelineRunResultData]);\n\n  if (loading) {\n    return <LoadingInline />;\n  }\n  if ((!loaded && pipelineRunResultData.length) || error || pipelineRunResultData.length === 0) {\n    return <GraphEmpty height={DEFAULT_CHART_HEIGHT} />;\n  }\n\n  const newGraphData = _.map(pipelineRunResultData, (result) => {\n    return formatTimeSeriesValues(result, DEFAULT_SAMPLES, timespan);\n  });\n  const grouped = _.groupBy(newGraphData[0], (g) => formatDate(g.x));\n  const finalArray: DataPoint[] = getTransformedDataPoints(\n    _.compact(_.keys(grouped).map((x) => _.maxBy(grouped[x], 'y'))),\n  );\n\n  return (\n    <Measure bounds>\n      {({ measureRef, contentRect }) => (\n        <div ref={measureRef} style={{ height: DEFAULT_CHART_HEIGHT }}>\n          <TimeSeriesChart\n            ariaDesc={t('pipelines-plugin~Pipeline run count chart')}\n            data={finalArray}\n            timespan={timespan}\n            width={contentRect.bounds.width}\n            containerComponent={\n              <ChartVoronoiContainer\n                constrainToVisibleArea\n                labels={({ datum }) =>\n                  datum.childName.includes('bar-') && datum.y !== null\n                    ? `${formatDate(datum.x)}\n                    ${t('pipelines-plugin~Pipeline Runs')}: ${datum.y}`\n                    : null\n                }\n              />\n            }\n          />\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nexport default PipelineRunCount;\n","import * as React from 'react';\nimport { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport { ChartThemeColor, ChartVoronoiContainer } from '@patternfly/react-charts';\nimport { Bullseye, Flex, FlexItem, Grid, GridItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport Measure from 'react-measure';\nimport { GraphEmpty } from '@console/internal/components/graphs/graph-empty';\nimport { LoadingInline, truncateMiddle } from '@console/internal/components/utils';\nimport { DEFAULT_LEGEND_CHART_HEIGHT } from '../const';\nimport { usePipelineRunDurationPoll } from '../hooks';\nimport { LineChart } from './charts/lineChart';\nimport { getRangeVectorData, PipelineMetricsGraphProps } from './pipeline-metrics-utils';\n\nimport './pipeline-chart.scss';\n\nconst PipelineRunDurationGraph: React.FC<PipelineMetricsGraphProps> = ({\n  pipeline,\n  timespan,\n  interval,\n  loaded = true,\n  onLoad: onInitialLoad,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = pipeline;\n  const { t } = useTranslation();\n  const [runData, runDataError, runDataLoading] = usePipelineRunDurationPoll({\n    name,\n    namespace,\n    timespan,\n    delay: interval,\n    queryPrefix,\n    metricsLevel,\n  });\n  const pipelineRunDurationData = React.useMemo(() => runData?.data?.result ?? [], [runData]);\n\n  const chartHeight = DEFAULT_LEGEND_CHART_HEIGHT;\n\n  React.useEffect(() => {\n    if (!loaded && onInitialLoad) {\n      onInitialLoad({\n        chartName: 'pipelineRunDuration',\n        hasData: !!pipelineRunDurationData.length,\n      });\n    }\n  }, [loaded, onInitialLoad, pipelineRunDurationData]);\n\n  if (runDataLoading) {\n    return <LoadingInline />;\n  }\n  if (\n    (!loaded && pipelineRunDurationData.length) ||\n    runDataError ||\n    pipelineRunDurationData.length === 0\n  ) {\n    return <GraphEmpty height={chartHeight - 30} />;\n  }\n\n  const pRuns =\n    getRangeVectorData(runData, (r) => truncateMiddle(r?.metric?.pipelinerun, { length: 10 })) ??\n    [];\n  const finalArray = pRuns.reduce(\n    (acc, prun) => {\n      if (!prun) return acc;\n      const obj = prun[prun.length - 1];\n      acc.totalDuration += obj.y;\n      acc.duration.push({ ...obj, time: formatPrometheusDuration(obj.y * 1000) });\n      return acc;\n    },\n    { totalDuration: 0, duration: [] },\n  );\n  const averageDuration = finalArray.totalDuration\n    ? formatPrometheusDuration((finalArray.totalDuration * 1000) / finalArray.duration.length)\n    : 0;\n\n  return (\n    <Grid hasGutter>\n      <GridItem span={3}>\n        <Bullseye className=\"pipeline-run-average\">\n          <Flex className=\"pipeline-run-average__body\" spaceItems={{ default: 'spaceItemsNone' }}>\n            <FlexItem className=\"pipeline-run-average__duration\">{`${averageDuration}`}</FlexItem>\n            <FlexItem className=\"pipeline-run-average__duration-desc\">\n              {t('pipelines-plugin~Average PipelineRun duration')}\n            </FlexItem>\n          </Flex>\n        </Bullseye>\n      </GridItem>\n      <GridItem span={9}>\n        <Measure bounds>\n          {({ measureRef, contentRect }) => (\n            <div ref={measureRef}>\n              <LineChart\n                ariaDesc={t('pipelines-plugin~Pipeline run duration chart')}\n                data={[finalArray.duration]}\n                themeColor={ChartThemeColor.green}\n                yTickFormatter={(seconds) => `${Math.floor(seconds / 60)}m`}\n                width={contentRect.bounds.width}\n                height={chartHeight}\n                containerComponent={\n                  <ChartVoronoiContainer\n                    voronoiPadding={{ bottom: 75 } as any}\n                    constrainToVisibleArea\n                    activateData={false}\n                    labels={({ datum }) =>\n                      datum.childName.includes('line-') && datum.y !== null\n                        ? `${datum?.metric?.pipelinerun}\\n${datum?.time}`\n                        : null\n                    }\n                  />\n                }\n              />\n            </div>\n          )}\n        </Measure>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default PipelineRunDurationGraph;\n","import * as React from 'react';\nimport { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport {\n  getInteractiveLegendEvents,\n  getInteractiveLegendItemStyles,\n  ChartLegendTooltip,\n  ChartLegend,\n} from '@patternfly/react-charts';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport Measure from 'react-measure';\nimport { CursorVoronoiContainer } from '@console/internal/components/graphs';\nimport { GraphEmpty } from '@console/internal/components/graphs/graph-empty';\nimport { LoadingInline, truncateMiddle } from '@console/internal/components/utils';\nimport { PipelineTask } from '../../../types';\nimport { DEFAULT_CHART_HEIGHT, DEFAULT_LEGEND_CHART_HEIGHT } from '../const';\nimport { usePipelineRunTaskRunPoll } from '../hooks';\nimport { LineChart } from './charts/lineChart';\nimport {\n  PipelineMetricsGraphProps,\n  getRangeVectorData,\n  getDuration,\n} from './pipeline-metrics-utils';\n\nimport './pipeline-chart.scss';\n\nconst LegendContainer = ({ children }: { children?: React.ReactNode }) => {\n  // The first child should be a <rect> with a `width` and `height` prop giving the legend's content width and height\n  const width = children?.[0]?.[0]?.props?.width ?? '100%';\n  const height = children?.[0]?.[0]?.props?.height ?? '100%';\n  return (\n    <foreignObject height={48} width=\"100%\" y={DEFAULT_CHART_HEIGHT + 55}>\n      <div className=\"pipeline-metrics__legend-wrap horizontal-scroll\">\n        <svg width={width} height={height}>\n          {children}\n        </svg>\n      </div>\n    </foreignObject>\n  );\n};\n\nconst PipelineRunTaskRunGraph: React.FC<PipelineMetricsGraphProps> = ({\n  pipeline,\n  timespan,\n  interval,\n  loaded = true,\n  onLoad: onInitialLoad,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = pipeline;\n  const { t } = useTranslation();\n  const [hiddenSeries, setHiddenSeries] = React.useState<Set<number>>(new Set());\n  const chartHeight = DEFAULT_LEGEND_CHART_HEIGHT;\n  const [runData, runDataError, runDataLoading] = usePipelineRunTaskRunPoll({\n    name,\n    namespace,\n    timespan,\n    delay: interval,\n    queryPrefix,\n    metricsLevel,\n  });\n\n  const taskNameMap = pipeline.spec.tasks\n    .filter((pipelineTask: PipelineTask) => !!pipelineTask.taskRef)\n    .reduce((acc, task) => {\n      acc[task.taskRef.name] = task.name;\n      return acc;\n    }, {});\n\n  const getCustomTaskName = (task: string): string =>\n    taskNameMap[task] ? taskNameMap[task] : task;\n\n  const pipelineTaskRunData = React.useMemo(() => runData?.data?.result ?? [], [runData]);\n  React.useEffect(() => {\n    if (!loaded && onInitialLoad) {\n      onInitialLoad({\n        chartName: 'pipelineTaskRunDuration',\n        hasData: !!pipelineTaskRunData.length,\n      });\n    }\n  }, [loaded, onInitialLoad, pipelineTaskRunData]);\n\n  if (runDataLoading) {\n    return <LoadingInline />;\n  }\n\n  if ((!loaded && pipelineTaskRunData.length) || runDataError || pipelineTaskRunData.length === 0) {\n    return <GraphEmpty height={chartHeight - 30} />;\n  }\n\n  const pRuns =\n    getRangeVectorData(runData, (r) => truncateMiddle(r.metric.pipelinerun, { length: 10 })) ?? [];\n  const tickValues = [];\n  const finalObj: { [x: string]: { x: string; y: number }[] } = pRuns.reduce((acc, prun) => {\n    if (!prun) return acc;\n    const obj = prun[prun.length - 1];\n    const taskName = getCustomTaskName(obj?.metric?.task);\n    if (taskName) {\n      if (!acc[taskName]) {\n        acc[taskName] = [];\n      }\n      tickValues.push(truncateMiddle(obj.metric.pipelinerun, { length: 10 }));\n      acc[taskName].push(obj);\n    }\n    return acc;\n  }, {});\n\n  const getLegendData = () => {\n    return _.map(Object.keys(finalObj), (task, index) => ({\n      childName: `line-${index}`,\n      name: task,\n      ...getInteractiveLegendItemStyles(hiddenSeries.has(index)),\n    }));\n  };\n  const getChartNames = (): string[][] => {\n    return getLegendData().map((l, i) => [l.childName, `scatter-${i}`]);\n  };\n  const isHidden = (index) => {\n    return hiddenSeries.has(index);\n  };\n  const handleLegendClick = (props) => {\n    const hidden = new Set(hiddenSeries);\n    if (!hidden.delete(props.index)) {\n      hidden.add(props.index);\n    }\n    setHiddenSeries(hidden);\n  };\n  const getEvents = () =>\n    getInteractiveLegendEvents({\n      chartNames: getChartNames() as [string | string[]],\n      isHidden,\n      legendName: 'legend',\n      onLegendClick: handleLegendClick,\n    });\n  return (\n    <Measure bounds>\n      {({ measureRef, contentRect }) => (\n        <div ref={measureRef}>\n          <LineChart\n            ariaDesc={t('pipelines-plugin~Pipeline task run duration chart')}\n            data={_.values(finalObj)}\n            yTickFormatter={(seconds) => getDuration(seconds)}\n            events={getEvents()}\n            hiddenSeries={hiddenSeries}\n            tickValues={tickValues}\n            width={contentRect.bounds.width}\n            height={chartHeight}\n            legendComponent={\n              !_.isEmpty(getLegendData()) && (\n                <ChartLegend\n                  groupComponent={<LegendContainer />}\n                  gutter={18}\n                  name=\"legend\"\n                  data={getLegendData()}\n                  style={{\n                    labels: { fontSize: 11, fill: 'var(--pf-v5-global--Color--100)' },\n                  }}\n                />\n              )\n            }\n            containerComponent={\n              <CursorVoronoiContainer\n                constrainToVisibleArea\n                mouseFollowTooltips\n                voronoiDimension=\"x\"\n                cursorDimension=\"x\"\n                labels={({ datum }) =>\n                  `${datum.y !== null ? formatPrometheusDuration(datum?.y * 1000) : null}`\n                }\n                labelComponent={\n                  <ChartLegendTooltip\n                    legendData={getLegendData()}\n                    title={({ datum }) => truncateMiddle(datum?.metric?.pipelinerun)}\n                  />\n                }\n                activateData={false}\n                voronoiPadding={{ bottom: 75 } as any}\n              />\n            }\n          />\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nexport default PipelineRunTaskRunGraph;\n","import * as React from 'react';\nimport { ChartThemeColor, ChartVoronoiContainer } from '@patternfly/react-charts';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { global_Color_200 as grayColor } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { global_danger_color_100 as dangerColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport Measure from 'react-measure';\nimport { GraphEmpty } from '@console/internal/components/graphs/graph-empty';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { DEFAULT_CHART_HEIGHT } from '../const';\nimport { usePipelineSuccessRatioPoll } from '../hooks';\nimport SuccessRatioDonut from './charts/successRatioDonut';\nimport { TimeSeriesChart } from './charts/TimeSeriesChart';\nimport {\n  PipelineMetricsGraphProps,\n  getRangeVectorData,\n  formatDate,\n} from './pipeline-metrics-utils';\n\nimport './pipeline-chart.scss';\n\nconst statusColor = {\n  cancelled: grayColor.value,\n  failed: dangerColor.value,\n  success: ChartThemeColor.green,\n};\n\nconst PipelineSuccessRatioDonut: React.FC<PipelineMetricsGraphProps> = ({\n  pipeline,\n  timespan,\n  interval,\n  loaded = true,\n  onLoad: onInitialLoad,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = pipeline;\n  const { t } = useTranslation();\n  const [runData, runDataError, runDataLoading] = usePipelineSuccessRatioPoll({\n    name,\n    namespace,\n    timespan,\n    delay: interval,\n    queryPrefix,\n    metricsLevel,\n  });\n  const pipelineSuccessData = React.useMemo(() => runData?.data?.result ?? [], [runData]);\n\n  React.useEffect(() => {\n    if (!loaded && onInitialLoad) {\n      onInitialLoad({\n        chartName: 'pipelineSuccessRatio',\n        hasData: !!pipelineSuccessData.length,\n      });\n    }\n  }, [loaded, onInitialLoad, pipelineSuccessData]);\n\n  if (runDataLoading) {\n    return <LoadingInline />;\n  }\n\n  if ((!loaded && pipelineSuccessData.length) || runDataError || pipelineSuccessData.length === 0) {\n    return <GraphEmpty height={DEFAULT_CHART_HEIGHT} />;\n  }\n\n  const pipelineRuns = getRangeVectorData(runData, (r) => r.metric.status) ?? [];\n  const pipelineRunsCollection = pipelineRuns.reduce((acc, prun) => {\n    if (!prun) return acc;\n    const obj = prun[prun.length - 1];\n    acc.push(obj);\n    return acc;\n  }, []);\n\n  const totalValue = _.sumBy(pipelineRunsCollection, 'y');\n  const finalArray = pipelineRunsCollection.map((obj) => {\n    const percentage = ((obj.y * 100) / totalValue).toFixed(2);\n    const sortOrder = obj.x === 'success' ? 1 : 2;\n    return {\n      ...obj,\n      count: obj.y,\n      sortOrder,\n      y: parseFloat(percentage),\n      name: `${obj.x}: ${percentage}%`,\n      fill: statusColor[obj.x as string],\n    };\n  });\n  let successTimeSeriesObj = finalArray.reduce((acc, obj) => {\n    if (obj.x !== 'success') return acc;\n    const date = formatDate(new Date(obj.time * 1000));\n    if (!acc[date]) {\n      acc[date] = { y: 0 };\n    }\n    acc[date] = {\n      ...obj,\n      x: new Date(obj.time * 1000).setHours(0, 0, 0, 0),\n      y: acc[date].y + obj.y,\n    };\n    return acc;\n  }, {});\n  // Empty state for line chart\n  if (!Object.keys(successTimeSeriesObj).length) {\n    successTimeSeriesObj = {\n      emptyState: {\n        ...finalArray[0],\n        x: new Date().setHours(0, 0, 0, 0),\n        y: 0,\n      },\n    };\n  }\n  const successValue = _.find(finalArray, { x: 'success' })?.count ?? 0;\n  const successData = _.sortBy(finalArray, 'sortOrder');\n  const OVERLAP = 20;\n  return (\n    <Grid hasGutter>\n      <GridItem xl2={3} xl={3} lg={3} md={3} sm={3}>\n        <div\n          style={{\n            height: DEFAULT_CHART_HEIGHT,\n            marginTop: OVERLAP * -1,\n          }}\n        >\n          <SuccessRatioDonut\n            data={successData}\n            successValue={successValue}\n            ariaDesc={t('pipelines-plugin~Pipeline success ratio chart')}\n            subTitle={\n              successData\n                ? t('pipelines-plugin~{{successValue}} of {{totalValue}} succeeded', {\n                    successValue,\n                    totalValue,\n                  })\n                : ''\n            }\n            title={successData.length ? `${((successValue * 100) / totalValue).toFixed(1)}%` : ''}\n          />\n        </div>\n      </GridItem>\n      <GridItem xl2={9} xl={9} lg={9} md={9} sm={9}>\n        <Measure bounds>\n          {({ measureRef, contentRect }) => (\n            <div ref={measureRef} style={{ height: DEFAULT_CHART_HEIGHT }}>\n              <TimeSeriesChart\n                ariaDesc={t('pipelines-plugin~Pipeline success chart')}\n                data={Object.values(successTimeSeriesObj) ?? []}\n                bar={false}\n                domain={{ y: [0, 100] }}\n                yTickFormatter={(v) => `${v}%`}\n                timespan={timespan}\n                width={contentRect.bounds.width}\n                containerComponent={\n                  <ChartVoronoiContainer\n                    constrainToVisibleArea\n                    labels={({ datum }) =>\n                      datum.childName.includes('line-') && datum.y !== null\n                        ? `${formatDate(datum.x)}\\n${datum?.y}%`\n                        : null\n                    }\n                  />\n                }\n              />\n            </div>\n          )}\n        </Measure>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default PipelineSuccessRatioDonut;\n","import * as React from 'react';\nimport { ChartDonut, ChartDonutProps, ChartLabel } from '@patternfly/react-charts';\nimport * as _ from 'lodash';\n\ninterface SuccessRatioDonutProps {\n  successValue: number;\n}\n\nconst SuccessRatioDonut: React.FC<SuccessRatioDonutProps & ChartDonutProps> = ({\n  data,\n  width,\n  successValue = 0,\n  ariaDesc,\n  ariaTitle,\n  title,\n  subTitle,\n}) => {\n  return (\n    <ChartDonut\n      ariaDesc={ariaDesc}\n      ariaTitle={ariaTitle}\n      constrainToVisibleArea\n      data={data}\n      sortKey={successValue ? ['success', 'failed', 'cancelled'] : ['failed', 'cancelled']}\n      labels={({ datum }) => `${_.capitalize(datum.x)}: ${datum.y}%`}\n      padding={{\n        bottom: 20,\n        left: 20,\n        right: 20,\n        top: 20,\n      }}\n      subTitle={subTitle}\n      subTitleComponent={\n        <ChartLabel style={{ fill: 'var(--pf-v5-global--Color--400)', fontSize: 14 }} />\n      }\n      title={title}\n      titleComponent={\n        <ChartLabel style={{ fill: 'var(--pf-v5-global--Color--100)', fontSize: 24 }} />\n      }\n      width={width}\n      style={{\n        data: {\n          fill: ({ datum }) => datum.fill,\n        },\n      }}\n    />\n  );\n};\n\nexport default SuccessRatioDonut;\n","import * as React from 'react';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport {\n  SectionHeading,\n  ResourceSummary,\n  ExternalLink,\n  ResourceLink,\n  DetailsItem,\n} from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { usePacInfo } from './hooks/pac-hook';\nimport { getGitProviderIcon } from './repository-utils';\nimport { RepositoryKind } from './types';\n\nexport interface RepositoryDetailsProps {\n  obj: RepositoryKind;\n}\n\nconst RepositoryDetails: React.FC<RepositoryDetailsProps> = ({ obj: repository }) => {\n  const { t } = useTranslation();\n  const { spec } = repository;\n  const [pac, loaded] = usePacInfo();\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('pipelines-plugin~Repository details')} />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={repository} />\n        </div>\n        <div className=\"col-sm-6\">\n          <dl>\n            {spec?.url && (\n              <DetailsItem\n                label={t('pipelines-plugin~Repository')}\n                obj={repository}\n                path=\"spec.url\"\n                data-test=\"pl-repository-customdetails\"\n              >\n                <ExternalLink href={spec?.url}>\n                  {getGitProviderIcon(spec?.url)} {spec?.url}\n                </ExternalLink>\n              </DetailsItem>\n            )}\n            {spec?.git_provider?.user && (\n              <DetailsItem\n                label={t('pipelines-plugin~Username')}\n                obj={repository}\n                path=\"spec.git_provider.user\"\n                data-test=\"git-provider-username\"\n              >\n                {spec?.git_provider?.user}\n              </DetailsItem>\n            )}\n            {spec?.git_provider?.secret?.name && (\n              <DetailsItem\n                label={t('pipelines-plugin~Git access token')}\n                obj={repository}\n                path=\"spec.git_provider.secret.name\"\n                data-test=\"git-provider-secret-name\"\n              >\n                <ResourceLink\n                  kind={SecretModel.kind}\n                  name={spec?.git_provider?.secret?.name}\n                  namespace={repository.metadata.namespace}\n                />\n              </DetailsItem>\n            )}\n            {spec?.git_provider?.webhook_secret?.name && pac && loaded && (\n              <DetailsItem\n                label={t('pipelines-plugin~Webhook URL')}\n                obj={repository}\n                data-test=\"webhook-url\"\n              >\n                <ClipboardCopy isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\" style={{ flex: '1' }}>\n                  {pac.data['controller-url']}\n                </ClipboardCopy>\n              </DetailsItem>\n            )}\n            {spec?.git_provider?.webhook_secret?.name && (\n              <DetailsItem\n                label={t('pipelines-plugin~Webhook Secret')}\n                obj={repository}\n                path=\"spec.git_provider.webhook_secret.name\"\n                data-test=\"git-provider-webhook-secret-name\"\n              >\n                <ResourceLink\n                  kind={SecretModel.kind}\n                  name={spec?.git_provider?.webhook_secret?.name}\n                  namespace={repository.metadata.namespace}\n                />\n              </DetailsItem>\n            )}\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepositoryDetails;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../models';\nimport { ListPage } from '../ListPage';\nimport { usePipelineRuns } from '../pipelineruns/hooks/usePipelineRuns';\nimport { runFilters } from '../pipelines/detail-page-tabs/PipelineRuns';\nimport { RepositoryFields, RepositoryLabels } from './consts';\nimport RunList from './RepositoryPipelineRunList';\nimport { RepositoryKind } from './types';\n\nexport interface RepositoryPipelineRunListPageProps {\n  obj: RepositoryKind;\n}\n\nconst RepositoryPipelineRunListPage: React.FC<RepositoryPipelineRunListPageProps> = (props) => {\n  const { t } = useTranslation();\n  const { obj } = props;\n  const selector = React.useMemo(() => {\n    return {\n      matchLabels: { [RepositoryLabels[RepositoryFields.REPOSITORY]]: obj.metadata.name },\n    };\n  }, [obj.metadata.name]);\n  const [pipelineRuns, pipelineRunsLoaded, pipelineRunsLoadError] = usePipelineRuns(\n    obj.metadata.namespace,\n    {\n      selector,\n    },\n  );\n  const resources = {\n    [referenceForModel(PipelineRunModel)]: {\n      data: pipelineRuns,\n      kind: referenceForModel(PipelineRunModel),\n      loadError: pipelineRunsLoadError,\n      loaded: pipelineRunsLoaded,\n    },\n  };\n  return (\n    <ListPage\n      showTitle={false}\n      canCreate={false}\n      kind={referenceForModel(PipelineRunModel)}\n      namespace={obj.metadata.namespace}\n      selector={{\n        matchLabels: {\n          [RepositoryLabels[RepositoryFields.REPOSITORY]]: obj.metadata.name,\n        },\n      }}\n      ListComponent={RunList}\n      rowFilters={runFilters(t)}\n      data={resources}\n    />\n  );\n};\n\nexport default RepositoryPipelineRunListPage;\n","import * as React from 'react';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { Table } from '@console/internal/components/factory';\nimport { PipelineRunModel } from '../../models';\nimport { useTaskRuns } from '../pipelineruns/hooks/useTaskRuns';\nimport { usePipelineOperatorVersion } from '../pipelines/utils/pipeline-operator';\nimport RepositoryPipelineRunHeader from './RepositoryPipelineRunHeader';\nimport RepositoryPipelineRunRow from './RepositoryPipelineRunRow';\n\ntype RepositoryPipelineRunListProps = {\n  namespace: string;\n};\n\nexport const RepositoryPipelineRunList: React.FC<RepositoryPipelineRunListProps> = (props) => {\n  const { t } = useTranslation();\n  const operatorVersion = usePipelineOperatorVersion(props.namespace);\n  const [taskRuns, taskRunsLoaded] = useTaskRuns(props.namespace);\n  return (\n    <Table\n      {...props}\n      aria-label={t(PipelineRunModel.labelPluralKey)}\n      defaultSortField=\"status.startTime\"\n      defaultSortOrder={SortByDirection.desc}\n      Header={RepositoryPipelineRunHeader}\n      Row={RepositoryPipelineRunRow}\n      customData={{\n        operatorVersion,\n        taskRuns: taskRunsLoaded ? taskRuns : [],\n        taskRunsLoaded,\n      }}\n      virtualize\n    />\n  );\n};\n\nexport default RepositoryPipelineRunList;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ArchiveIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport {\n  ResourceLink,\n  Timestamp,\n  truncateMiddle,\n  ExternalLink,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../const';\nimport SignedPipelinerunIcon from '../../images/signed-badge.svg';\nimport { PipelineRunModel } from '../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../types';\nimport { getPipelineRunKebabActions } from '../../utils/pipeline-actions';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunTitleFilterReducer,\n} from '../../utils/pipeline-filter-reducer';\nimport { pipelineRunDuration } from '../../utils/pipeline-utils';\nimport LinkedPipelineRunTaskStatus from '../pipelineruns/status/LinkedPipelineRunTaskStatus';\nimport PipelineRunStatus from '../pipelineruns/status/PipelineRunStatus';\nimport PipelineRunVulnerabilities from '../pipelineruns/status/PipelineRunVulnerabilities';\nimport { ResourceKebabWithUserLabel } from '../pipelineruns/triggered-by';\nimport { chainsSignedAnnotation } from '../pipelines/const';\nimport { getTaskRunsOfPipelineRun } from '../taskruns/useTaskRuns';\nimport {\n  RepoAnnotationFields,\n  RepositoryAnnotations,\n  RepositoryFields,\n  RepositoryLabels,\n} from './consts';\nimport { sanitizeBranchName } from './repository-utils';\nimport { tableColumnClasses } from './RepositoryPipelineRunHeader';\n\nconst pipelinerunReference = referenceForModel(PipelineRunModel);\n\ntype PLRStatusProps = {\n  obj: PipelineRunKind;\n  taskRuns: TaskRunKind[];\n  taskRunsLoaded?: boolean;\n};\n\nconst PLRStatus: React.FC<PLRStatusProps> = ({ obj, taskRuns, taskRunsLoaded }) => {\n  return (\n    <PipelineRunStatus\n      status={pipelineRunFilterReducer(obj)}\n      title={pipelineRunTitleFilterReducer(obj)}\n      pipelineRun={obj}\n      taskRuns={taskRuns}\n      taskRunsLoaded={taskRunsLoaded}\n    />\n  );\n};\n\nconst RepositoryPipelineRunRow: React.FC<RowFunctionArgs<PipelineRunKind>> = ({\n  obj,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  const plrLabels = obj.metadata.labels;\n  const plrAnnotations = obj.metadata.annotations;\n  const { operatorVersion, taskRuns, taskRunsLoaded } = customData;\n  const PLRTaskRuns = getTaskRunsOfPipelineRun(taskRuns, obj?.metadata?.name);\n  const branchName =\n    plrLabels?.[RepositoryAnnotations[RepoAnnotationFields.BRANCH]] ||\n    plrAnnotations?.[RepositoryAnnotations[RepoAnnotationFields.BRANCH]];\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={pipelinerunReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          data-test-id={obj.metadata.name}\n          nameSuffix={\n            <>\n              {obj?.metadata?.annotations?.[chainsSignedAnnotation] === 'true' ? (\n                <Tooltip content={t('pipelines-plugin~Signed')}>\n                  <div className=\"opp-pipeline-run-list__signed-indicator\">\n                    <img src={SignedPipelinerunIcon} alt={t('pipelines-plugin~Signed')} />\n                  </div>\n                </Tooltip>\n              ) : null}\n              {obj?.metadata?.annotations?.[DELETED_RESOURCE_IN_K8S_ANNOTATION] === 'true' ||\n              obj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION] === 'true' ? (\n                <Tooltip content={t('pipelines-plugin~Archived in Tekton results')}>\n                  <div className=\"opp-pipeline-run-list__results-indicator\">\n                    <ArchiveIcon />\n                  </div>\n                </Tooltip>\n              ) : null}\n            </>\n          }\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]} columnID=\"sha\">\n        <Tooltip\n          data-test=\"tooltip-msg\"\n          content={\n            <>\n              {plrAnnotations?.[RepositoryAnnotations[RepoAnnotationFields.SHA_MESSAGE]] ??\n                plrLabels?.[RepositoryLabels[RepositoryFields.SHA]]}\n            </>\n          }\n        >\n          <ExternalLink\n            href={plrAnnotations?.[RepositoryAnnotations[RepoAnnotationFields.SHA_URL]]}\n          >\n            {truncateMiddle(plrLabels?.[RepositoryLabels[RepositoryFields.SHA]], {\n              length: 7,\n              truncateEnd: true,\n              omission: '',\n            })}\n          </ExternalLink>\n        </Tooltip>\n      </TableData>\n      <TableData className={tableColumnClasses[2]} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <PipelineRunVulnerabilities pipelineRun={obj} condensed />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <PLRStatus obj={obj} taskRuns={PLRTaskRuns} taskRunsLoaded={taskRunsLoaded} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <LinkedPipelineRunTaskStatus\n          pipelineRun={obj}\n          taskRuns={PLRTaskRuns}\n          taskRunsLoaded={taskRunsLoaded}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.status && obj.status.startTime} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>{pipelineRunDuration(obj)}</TableData>\n      <TableData className={tableColumnClasses[7]}>{sanitizeBranchName(branchName)}</TableData>\n      <TableData className={tableColumnClasses[8]}>\n        <ResourceKebabWithUserLabel\n          actions={getPipelineRunKebabActions(operatorVersion, PLRTaskRuns)}\n          kind={pipelinerunReference}\n          resource={obj}\n        />\n      </TableData>\n    </>\n  );\n};\n\nexport default RepositoryPipelineRunRow;\n","import * as React from 'react';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { history } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { FormFooter, FlexForm, FormBody, useActiveNamespace } from '@console/shared';\nimport { RepositoryModel } from '../../models';\nimport RepositoryFormSection from './sections/RepositoryFormSection';\nimport RepositoryOverview from './sections/RepositoryOverview';\nimport { RepositoryFormValues } from './types';\n\nimport './RepositoryForm.scss';\n\ntype RepositoryFormProps = FormikProps<FormikValues & RepositoryFormValues>;\n\nexport const RepositoryForm: React.FC<RepositoryFormProps> = ({\n  values,\n  status,\n  isSubmitting,\n  dirty,\n  handleReset,\n  handleSubmit,\n  errors,\n}) => {\n  const { t } = useTranslation();\n  const [namespace] = useActiveNamespace();\n  const { showOverviewPage } = values;\n  const onClose = () => {\n    history.push(`/k8s/ns/${namespace}/${referenceForModel(RepositoryModel)}/${values.name}`);\n  };\n  return (\n    <FlexForm onSubmit={handleSubmit} className=\"opp-repository-form\">\n      <FormBody className=\"opp-repository-form__body\">\n        {showOverviewPage ? <RepositoryOverview /> : <RepositoryFormSection />}\n      </FormBody>\n      <FormFooter\n        handleSubmit={showOverviewPage ? onClose : null}\n        handleReset={showOverviewPage ? null : handleReset}\n        errorMessage={status?.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={showOverviewPage ? t('pipelines-plugin~Close') : t('pipelines-plugin~Add')}\n        disableSubmit={showOverviewPage ? false : !dirty || !_.isEmpty(errors) || isSubmitting}\n        resetLabel={t('pipelines-plugin~Cancel')}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n","import * as React from 'react';\nimport { Flex, FlexItem, TextInputTypes, Title } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { getGitService, ImportStrategy } from '@console/git-service/src';\nimport { detectImportStrategies } from '@console/git-service/src/utils/import-strategy-detector';\nimport { FormHeader, getBadgeFromType, InputField, useDebounceCallback } from '@console/shared';\nimport { RepositoryModel } from '../../../models';\nimport { useBuilderImages } from '../hooks/useBuilderImages';\nimport {\n  recommendRepositoryName,\n  detectGitType,\n  getPipelineRunTemplate,\n} from '../repository-form-utils';\nimport { RepositoryFormValues } from '../types';\nimport AdvancedConfigurations from './AdvancedConfigurations';\n\nconst RepositoryFormSection = () => {\n  const { t } = useTranslation();\n  const templatesRef = React.useRef({});\n  const { setFieldValue } = useFormikContext<RepositoryFormValues>();\n\n  const [builderImages] = useBuilderImages();\n  const handleGitUrlChange = async (url) => {\n    if (!url) {\n      return;\n    }\n    const detectedGitType = detectGitType(url);\n    const recommendedRepoName = recommendRepositoryName(url);\n    if (recommendedRepoName) {\n      setFieldValue('name', recommendedRepoName);\n    }\n    detectedGitType && setFieldValue('gitProvider', detectedGitType);\n    const gitService = getGitService(url, detectedGitType);\n\n    const importStrategyData = await detectImportStrategies(url, gitService);\n    if (importStrategyData.strategies.length > 0) {\n      const detectedBuildTypes = importStrategyData.strategies?.find(\n        (s) => s.type === ImportStrategy.S2I,\n      )?.detectedCustomData;\n\n      const recommendedBuildType =\n        builderImages &&\n        detectedBuildTypes?.find(\n          ({ type: recommended }) => recommended && builderImages.hasOwnProperty(recommended),\n        );\n\n      const template: string = templatesRef.current[recommendedBuildType?.type]\n        ? templatesRef.current[recommendedBuildType?.type]\n        : await getPipelineRunTemplate(recommendedBuildType?.type, recommendedRepoName);\n      if (template) {\n        templatesRef.current[recommendedBuildType?.type] = template;\n        setFieldValue('yamlData', template);\n      }\n    }\n  };\n  const debouncedHandleGitUrlChange = useDebounceCallback(handleGitUrlChange);\n\n  const title = (\n    <Flex className=\"odc-pipeline-builder-header__content\">\n      <FlexItem grow={{ default: 'grow' }}>\n        <Title headingLevel=\"h1\">{t('pipelines-plugin~Add Git Repository')}</Title>\n      </FlexItem>\n      <FlexItem>{getBadgeFromType(RepositoryModel.badge)}</FlexItem>\n    </Flex>\n  );\n\n  return (\n    <>\n      <FormHeader title={title} />\n      <FormSection>\n        <InputField\n          label={t('pipelines-plugin~Git Repo URL')}\n          name=\"gitUrl\"\n          type={TextInputTypes.text}\n          required\n          onBlur={(e: React.FocusEvent<HTMLInputElement>) => {\n            const trimmedURL = e.target.value.trim();\n            if (e.target.value !== trimmedURL) {\n              debouncedHandleGitUrlChange(trimmedURL, '', '');\n            }\n          }}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            debouncedHandleGitUrlChange(e.target.value.trim(), '', '');\n          }}\n        />\n        <InputField\n          label={t('pipelines-plugin~Name')}\n          name=\"name\"\n          type={TextInputTypes.text}\n          required\n        />\n        <AdvancedConfigurations />\n      </FormSection>\n    </>\n  );\n};\n\nexport default RepositoryFormSection;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {\n  normalizeBuilderImages,\n  NormalizedBuilderImages,\n} from '@console/dev-console/src/utils/imagestream-utils';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { isBuilder } from '@console/internal/components/image-stream';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nexport const useBuilderImages = (): [NormalizedBuilderImages, boolean, any] => {\n  const resourceSelector = {\n    isList: true,\n    kind: 'ImageStream',\n    namespace: 'openshift',\n    prop: 'imageStreams',\n  };\n  const [imageStreams, loaded, loadedError] = useK8sWatchResource<K8sResourceKind[]>(\n    resourceSelector,\n  );\n\n  const builderImageStreams = React.useMemo(() => _.filter(imageStreams, isBuilder), [\n    imageStreams,\n  ]);\n\n  const normalizedBuilderImages = React.useMemo(() => normalizeBuilderImages(builderImageStreams), [\n    builderImageStreams,\n  ]);\n\n  return [normalizedBuilderImages, loaded, loadedError];\n};\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { GitProvider } from '@console/git-service';\nimport { PacConfigurationTypes } from '../consts';\nimport { usePacInfo } from '../hooks/pac-hook';\nimport { RepositoryFormValues } from '../types';\nimport ConfigTypeSection from './ConfigTypeSection';\nimport WebhookSection from './WebhookSection';\n\nconst AdvancedConfigurations = () => {\n  const [githubAppAvailable, setGithubAppAvailable] = React.useState(false);\n  const { values, setFieldValue } = useFormikContext<RepositoryFormValues>();\n  const [pac, loaded] = usePacInfo();\n\n  React.useEffect(() => {\n    if (loaded && !!pac && pac.data['app-link']) {\n      setGithubAppAvailable(true);\n      setFieldValue('githubAppAvailable', true);\n      setFieldValue('method', PacConfigurationTypes.GITHUB);\n    } else {\n      setFieldValue('method', PacConfigurationTypes.WEBHOOK);\n    }\n  }, [pac, loaded, setFieldValue]);\n\n  return (\n    values.gitProvider && (\n      <>\n        {githubAppAvailable && values.gitProvider === GitProvider.GITHUB ? (\n          <ConfigTypeSection pac={pac} />\n        ) : (\n          <WebhookSection pac={pac} />\n        )}\n      </>\n    )\n  );\n};\n\nexport default AdvancedConfigurations;\n","import * as React from 'react';\nimport {\n  Alert,\n  AlertVariant,\n  Flex,\n  FlexItem,\n  Text,\n  Title,\n  TitleSizes,\n  FormGroup,\n  ClipboardCopy,\n} from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation, Trans } from 'react-i18next';\nimport EditorField from '@console/dev-console/src/components/buildconfig/sections/EditorField';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { GitProvider } from '@console/git-service/src';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport CodeEditorToolbar from '@console/shared/src/components/editor/CodeEditorToolbar';\nimport CopyPipelineRunButton from '../form-fields/CopyPipelineRunButton';\nimport { RepositoryFormValues } from '../types';\n\nconst RepositoryOverview = () => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<RepositoryFormValues>();\n  return (\n    <FormSection>\n      <FormGroup fieldId=\"alert-message\">\n        <Alert\n          isInline\n          variant={values?.webhook?.autoAttach ? AlertVariant.success : AlertVariant.info}\n          title={\n            values?.webhook?.autoAttach\n              ? t('pipelines-plugin~Webhook attached to the Git Repository')\n              : t('pipelines-plugin~Could not attach webhook to the Git Repository.')\n          }\n        >\n          {!values?.webhook?.autoAttach &&\n            t(\n              'pipelines-plugin~Please follow the instructions below to attach the webhook manually.',\n            )}\n        </Alert>\n      </FormGroup>\n      <FormGroup fieldId=\"title\">\n        <Title headingLevel=\"h4\" size={TitleSizes.xl} data-test=\"repository-overview-title\">\n          {t('pipelines-plugin~Git repository added.')}\n        </Title>\n      </FormGroup>\n      <FormGroup fieldId=\"instructions\">\n        <Text>\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Copy this code to <code className=\"co-code\">.tekton</code> directory in your{' '}\n            <a href={values.gitUrl}>Git repository</a>.{' '}\n            <ExternalLink\n              text={t('pipelines-plugin~Learn more')}\n              href=\"https://pipelinesascode.com/docs/guide/authoringprs/\"\n            />\n          </Trans>\n        </Text>\n        <Text>\n          <Trans t={t} ns=\"pipelines-plugin\">\n            You can now add PipelineRuns to the <code className=\"co-code\">.tekton</code> directory\n            in your <a href={values.gitUrl}>Git repository</a> and execute them on Git events.\n          </Trans>\n        </Text>\n      </FormGroup>\n      <FormGroup fieldId=\"step-1\">\n        <Title headingLevel=\"h4\" size={TitleSizes.md}>\n          {t('pipelines-plugin~Step 1')}\n        </Title>\n        <Trans t={t} ns=\"pipelines-plugin\">\n          <Text>\n            In your repository, create the <code className=\"co-code\">.tekton</code> directory to\n            store you pipeline.\n          </Text>\n        </Trans>\n      </FormGroup>\n      <FormGroup fieldId=\"step-2\">\n        <Title headingLevel=\"h4\" size={TitleSizes.md}>\n          {t('pipelines-plugin~Step 2')}\n        </Title>\n        <Trans t={t} ns=\"pipelines-plugin\">\n          <Text>\n            In the <code className=\"co-code\">.tekton</code> directory, create a new file called\n            <code className=\"co-code\">push.yaml</code> and add the following code:\n          </Text>\n        </Trans>\n        <>\n          <CodeEditorToolbar showShortcuts toolbarLinks={[]} />\n          <EditorField\n            name=\"yamlData\"\n            height={200}\n            language=\"yaml\"\n            theme=\"console\"\n            options={{\n              lineHeight: 20,\n              readOnly: false,\n              minimap: { enabled: false },\n              scrollBeyondLastLine: false,\n            }}\n          />\n          <Flex style={{ marginTop: '16px' }}>\n            <FlexItem align={{ default: 'alignRight' }}>\n              {' '}\n              <CopyPipelineRunButton text={values.yamlData} />\n            </FlexItem>\n          </Flex>\n        </>\n      </FormGroup>\n      <FormGroup fieldId=\"step-3\">\n        <Title headingLevel=\"h4\" size={TitleSizes.md}>\n          {t('pipelines-plugin~Step 3')}\n        </Title>\n        <Text>\n          {t('pipelines-plugin~Commit these changes and push them to your Git repository.')}\n        </Text>\n      </FormGroup>\n      {!(\n        values.gitProvider === GitProvider.GITHUB &&\n        values.method === GitProvider.GITHUB &&\n        values.githubAppAvailable === true\n      ) &&\n        values?.webhook?.url &&\n        !values?.webhook?.autoAttach && (\n          <FormGroup fieldId=\"step-4\">\n            <Title headingLevel=\"h4\" size={TitleSizes.md}>\n              {t('pipelines-plugin~Step 4')}\n            </Title>\n            <Text>\n              <Trans t={t} ns=\"pipelines-plugin\">\n                Webhook URL to configure the webhook in your Git repository:\n              </Trans>\n            </Text>\n            <Text>\n              <ClipboardCopy isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\" style={{ flex: '1' }}>\n                {values.webhook.url}\n              </ClipboardCopy>\n            </Text>\n          </FormGroup>\n        )}\n      <FormGroup fieldId=\"step-5\">\n        <Text>\n          <Trans t={t} ns=\"pipelines-plugin\">\n            You can install Tekton CLI from{' '}\n            <ExternalLink\n              text={t('pipelines-plugin~releases')}\n              href=\"https://github.com/openshift-pipelines/pipelines-as-code/releases\"\n            />{' '}\n            page and generate example pipelineruns using the{' '}\n            <code className=\"co-code\">tkn pac generate</code>\n          </Trans>\n        </Text>\n        <br />\n        <Trans t={t} ns=\"pipelines-plugin\">\n          Your Git repository is now configured to run <code className=\"co-code\">push.yaml</code> on\n          every Git push event.\n        </Trans>\n      </FormGroup>\n    </FormSection>\n  );\n};\n\nexport default RepositoryOverview;\n","import * as React from 'react';\nimport { Tooltip, Button } from '@patternfly/react-core';\nimport { CopyIcon } from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { CopyToClipboard as CTC } from 'react-copy-to-clipboard';\nimport { useTranslation } from 'react-i18next';\n\nconst CopyPipelineRunButton = ({ text }) => {\n  const [copied, setCopied] = React.useState(false);\n\n  const { t } = useTranslation();\n  const tooltipText = copied\n    ? t('pipelines-plugin~Copied to clipboard')\n    : t('pipelines-plugin~Copy to clipboard');\n  const tooltipContent = [\n    <span className=\"co-nowrap\" key=\"nowrap\">\n      {tooltipText}\n    </span>,\n  ];\n\n  return (\n    <div data-test=\"pipelinerun-copy-btn\">\n      <Tooltip content={tooltipContent} trigger=\"click mouseenter focus\" exitDelay={1250}>\n        <CTC text={text} onCopy={() => setCopied(true)}>\n          <span onMouseEnter={() => setCopied(false)}>\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              className=\"pf-v5-c-button--align-right hidden-sm hidden-xs\"\n            >\n              <CopyIcon /> {t('pipelines-plugin~Copy')}\n            </Button>\n          </span>\n        </CTC>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default CopyPipelineRunButton;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { OutlinedCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-circle-icon';\nimport { ResourcesAlmostEmptyIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-empty-icon';\nimport { ResourcesAlmostFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-full-icon';\nimport { ResourcesFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport { UnknownIcon } from '@patternfly/react-icons/dist/esm/icons/unknown-icon';\n\nimport { useTranslation } from 'react-i18next';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport ClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/ClusterResourceQuotaCharts';\n\nimport { FLAGS, YellowExclamationTriangleIcon } from '@console/shared';\nimport { DetailsPage, MultiListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  SectionHeading,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  convertToBaseValue,\n  FieldLevelHelp,\n  useAccessReview,\n  LabelList,\n  Selector,\n  Timestamp,\n  DetailsItem,\n} from './utils';\nimport { connectToFlags } from '../reducers/connectToFlags';\nimport { flagPending } from '../reducers/features';\nimport { LoadingBox } from './utils/status-box';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport {\n  AppliedClusterResourceQuotaModel,\n  ResourceQuotaModel,\n  ClusterResourceQuotaModel,\n} from '../models';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\n\nconst { common } = Kebab.factory;\n\nconst resourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ResourceQuotaModel),\n  ...common,\n];\nconst clusterResourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  ...common,\n];\nconst appliedClusterResourceQuotaMenuActions = (namespace) => [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (kind, obj) => {\n    return {\n      // t('public~Edit AppliedClusterResourceQuota')\n      labelKey: 'public~Edit AppliedClusterResourceQuota',\n      href: `/k8s/ns/${namespace}/${referenceForModel(AppliedClusterResourceQuotaModel)}/${\n        obj.metadata.name\n      }/yaml`,\n      accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace,\n        verb: 'update',\n      },\n    };\n  },\n  Kebab.factory.Delete,\n];\n\nconst isClusterQuota = (quota) => !quota.metadata.namespace;\n\nconst clusterQuotaReference = referenceForModel(ClusterResourceQuotaModel);\nconst appliedClusterQuotaReference = referenceForModel(AppliedClusterResourceQuotaModel);\n\nconst quotaActions = (quota, customData = undefined) => {\n  if (quota.metadata.namespace) {\n    return resourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'ClusterResourceQuota') {\n    return clusterResourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'AppliedClusterResourceQuota') {\n    return appliedClusterResourceQuotaMenuActions(customData.namespace);\n  }\n};\n\nexport const getQuotaResourceTypes = (quota) => {\n  const specHard = isClusterQuota(quota)\n    ? _.get(quota, 'spec.quota.hard')\n    : _.get(quota, 'spec.hard');\n  return _.keys(specHard).sort();\n};\n\nexport const getACRQResourceUsage = (quota, resourceType, namespace) => {\n  let used;\n  if (namespace) {\n    const allNamespaceData = quota.status?.namespaces;\n    const currentNamespaceData = allNamespaceData.filter((ns) => ns.namespace === namespace);\n    used = {\n      namespace: currentNamespaceData[0]?.status?.used[resourceType],\n      cluster: quota.status?.total?.used[resourceType],\n    };\n  } else {\n    used = { namespace: 0, cluster: quota.status?.total?.used[resourceType] };\n  }\n  const totalUsed = quota.status?.total?.used[resourceType];\n  const max = quota.status?.total?.hard[resourceType] || quota.spec?.quota?.hard[resourceType];\n  const percentNamespace =\n    !max || !used.namespace\n      ? 0\n      : (convertToBaseValue(used.namespace) / convertToBaseValue(max)) * 100;\n  const percentCluster =\n    !max || !used.cluster ? 0 : (convertToBaseValue(used.cluster) / convertToBaseValue(max)) * 100;\n  const percentOtherNamespaces = percentCluster - percentNamespace;\n\n  return {\n    used,\n    totalUsed,\n    max,\n    percent: {\n      namespace: percentNamespace,\n      otherNamespaces: percentOtherNamespaces,\n      unused: 100 - (percentNamespace + percentOtherNamespaces),\n    },\n  };\n};\n\nexport const getResourceUsage = (quota, resourceType) => {\n  const isCluster = isClusterQuota(quota);\n  const statusPath = isCluster ? ['status', 'total', 'hard'] : ['status', 'hard'];\n  const specPath = isCluster ? ['spec', 'quota', 'hard'] : ['spec', 'hard'];\n  const usedPath = isCluster ? ['status', 'total', 'used'] : ['status', 'used'];\n  const max =\n    _.get(quota, [...statusPath, resourceType]) || _.get(quota, [...specPath, resourceType]);\n  const used = _.get(quota, [...usedPath, resourceType]);\n  const percent = !max || !used ? 0 : (convertToBaseValue(used) / convertToBaseValue(max)) * 100;\n\n  return {\n    used,\n    max,\n    percent,\n  };\n};\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst acrqTableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nexport const UsageIcon = ({ percent }) => {\n  let usageIcon = <UnknownIcon />;\n  if (percent === 0) {\n    usageIcon = <OutlinedCircleIcon className=\"co-resource-quota-empty\" />;\n  } else if (percent > 0 && percent < 50) {\n    usageIcon = <ResourcesAlmostEmptyIcon className=\"co-resource-quota-almost-empty\" />;\n  } else if (percent >= 50 && percent < 100) {\n    usageIcon = <ResourcesAlmostFullIcon className=\"co-resource-quota-almost-full\" />;\n  } else if (percent === 100) {\n    usageIcon = <ResourcesFullIcon className=\"co-resource-quota-full\" />;\n  } else if (percent > 100) {\n    usageIcon = <YellowExclamationTriangleIcon className=\"co-resource-quota-exceeded\" />;\n  }\n  return usageIcon;\n};\n\nexport const ResourceUsageRow = ({ quota, resourceType, namespace = undefined }) => {\n  const reference = referenceFor(quota);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  if (isACRQ) {\n    const { used, totalUsed, max, percent } = getACRQResourceUsage(quota, resourceType, namespace);\n    return (\n      <div className=\"row co-m-row\">\n        <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n        <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n          <UsageIcon percent={percent.namespace} />\n        </div>\n        <div className=\"col-sm-2 col-xs-2\">{used.namespace}</div>\n        <div className=\"col-sm-2 col-xs-2\">{totalUsed}</div>\n        <div className=\"col-sm-2 col-xs-2\">{max}</div>\n      </div>\n    );\n  }\n\n  const { used, max, percent } = getResourceUsage(quota, resourceType);\n  return (\n    <div className=\"row co-m-row\">\n      <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n      <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n        <UsageIcon percent={percent} />\n      </div>\n      <div className=\"col-sm-3 col-xs-3\">{used}</div>\n      <div className=\"col-sm-3 col-xs-3\">{max}</div>\n    </div>\n  );\n};\n\nexport const QuotaScopesInline = ({ scopes }) => {\n  return <span>({scopes.join(', ')})</span>;\n};\n\nexport const QuotaScopesList = ({ scopes }) => {\n  const { t } = useTranslation();\n  const quotaScopes = {\n    Terminating: {\n      description: t(\n        'public~Affects pods that have an active deadline. These pods usually include builds, deployers, and jobs.',\n      ),\n    },\n    NotTerminating: {\n      description: t(\n        'public~Affects pods that do not have an active deadline. These pods usually include your applications.',\n      ),\n    },\n    BestEffort: {\n      description: t(\n        'public~Affects pods that do not have resource limits set. These pods have a best effort quality of service.',\n      ),\n    },\n    NotBestEffort: {\n      description: t(\n        'public~Affects pods that have at least one resource limit set. These pods do not have a best effort quality of service.',\n      ),\n    },\n  };\n  return scopes.map((scope) => {\n    const scopeObj = _.get(quotaScopes, scope);\n    return scopeObj ? (\n      <dd key={scope}>\n        <div className=\"co-resource-quota-scope__label\">{scope}</div>\n        <div className=\"co-resource-quota-scope__description\">{scopeObj.description}</div>\n      </dd>\n    ) : (\n      <dd key={scope} className=\"co-resource-quota-scope__label\">\n        {scope}\n      </dd>\n    );\n  });\n};\n\nexport const hasComputeResources = (resourceTypes) => {\n  const chartResourceTypes = [\n    'requests.cpu',\n    'cpu',\n    'limits.cpu',\n    'requests.memory',\n    'memory',\n    'limits.memory',\n  ];\n  return _.intersection(resourceTypes, chartResourceTypes).length > 0;\n};\n\nconst Details = ({ obj: rq }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const resourceTypes = getQuotaResourceTypes(rq);\n  const scopes = rq.spec?.scopes ?? rq.spec?.quota?.scopes;\n  const reference = referenceFor(rq);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  const namespace = params?.ns;\n  let text;\n  let charts;\n  switch (reference) {\n    case appliedClusterQuotaReference:\n      text = t('public~AppliedClusterResourceQuota details');\n      charts = (\n        <AppliedClusterResourceQuotaCharts appliedClusterResourceQuota={rq} namespace={namespace} />\n      );\n      break;\n    case clusterQuotaReference:\n      text = t('public~ClusterResourceQuota details');\n      charts = <ClusterResourceQuotaCharts clusterResourceQuota={rq} />;\n      break;\n    default:\n      text = t('public~ResourceQuota details');\n      charts = <ResourceQuotaCharts resourceQuota={rq} />;\n  }\n  const canListCRQ = useAccessReview({\n    group: ClusterResourceQuotaModel.apiGroup,\n    resource: ClusterResourceQuotaModel.plural,\n    verb: 'list',\n  });\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} />\n        {charts}\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={rq}>\n              {canListCRQ && (\n                <DetailsItem\n                  label={t('public~ClusterResourceQuota')}\n                  obj={rq}\n                  path=\"rq.metadata.name\"\n                >\n                  <ResourceLink kind={clusterQuotaReference} name={rq.metadata.name} />\n                </DetailsItem>\n              )}\n              <DetailsItem\n                label={t('public~Label selector')}\n                obj={rq}\n                path=\"spec.selector.labels.matchLabels\"\n              >\n                <LabelList\n                  kind={appliedClusterQuotaReference}\n                  labels={rq.spec?.selector?.labels?.matchLabels}\n                />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Project annotations')}\n                obj={rq}\n                path=\"spec.selector.annotations\"\n              >\n                <Selector selector={rq.spec?.selector?.annotations} namespace={namespace} />\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          {scopes && (\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('public~Scopes')}</dt>\n                <QuotaScopesList scopes={scopes} />\n              </dl>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} style={{ display: 'block', marginBottom: '20px' }}>\n          <FieldLevelHelp>\n            <p>\n              {t(\n                'public~Requests are the amount of resources you expect to use. These are used when establishing if the cluster can fulfill your Request.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~Limits are a maximum amount of a resource you can consume. Applications consuming more than the Limit may be terminated.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~A cluster administrator can establish limits on both the amount you can request and your limits with a ResourceQuota.',\n              )}\n            </p>\n          </FieldLevelHelp>\n        </SectionHeading>\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          <div className=\"row co-m-table-grid__head\">\n            <div className=\"col-sm-4 col-xs-6\">{t('public~Resource type')}</div>\n            <div className=\"col-sm-2 hidden-xs\">{t('public~Capacity')}</div>\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Used')}\n            </div>\n            {isACRQ && <div className=\"col-sm-2 col-xs-2\">{t('public~Total used')}</div>}\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Max')}\n            </div>\n          </div>\n          <div className=\"co-m-table-grid__body\">\n            {resourceTypes.map((type) => (\n              <ResourceUsageRow key={type} quota={rq} resourceType={type} namespace={namespace} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  let resourcesAtQuota;\n  if (rq.kind === ResourceQuotaModel.kind) {\n    resourcesAtQuota = Object.keys(rq?.status?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.hard[resource], rq?.status?.used?.[resource]) >= 100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  } else {\n    resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n        100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  }\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceFor(rq)}\n          name={rq.metadata.name}\n          namespace={\n            referenceFor(rq) === appliedClusterQuotaReference\n              ? customData.namespace\n              : rq.metadata.namespace\n          }\n          className=\"co-resource-item__resource-name\"\n          dataTest=\"resource-quota-link\"\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        {rq.metadata.namespace ? (\n          <ResourceLink kind=\"Namespace\" name={rq.metadata.namespace} />\n        ) : (\n          t('public~None')\n        )}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={referenceFor(rq)}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst AppliedClusterResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  const resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n    (acc, resource) =>\n      getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n      100\n        ? acc + 1\n        : acc,\n    0,\n  );\n  return (\n    <>\n      <TableData className={acrqTableColumnClasses[0]}>\n        <ResourceLink\n          kind={appliedClusterQuotaReference}\n          name={rq.metadata.name}\n          namespace={customData.namespace}\n          className=\"co-resource-item__resource-name\"\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[1], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[2], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[3], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={acrqTableColumnClasses[4]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={acrqTableColumnClasses[5]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={appliedClusterQuotaReference}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nexport const ResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const ResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: tableColumnClasses[4] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[5] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[6] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ResourceQuotas')}\n      Header={ResourceQuotaTableHeader}\n      Row={ResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const AppliedClusterResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[0] },\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[1] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[2] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: acrqTableColumnClasses[3] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: acrqTableColumnClasses[5] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~AppliedClusterResourceQuotas')}\n      Header={AppliedClusterResourceQuotaTableHeader}\n      Row={AppliedClusterResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const quotaType = (quota) => {\n  if (!quota) {\n    return undefined;\n  }\n  return quota.metadata.namespace ? 'namespace' : 'cluster';\n};\n\n// Split each resource quota into one row per subject\nexport const flatten = (resources) => _.flatMap(resources, (resource) => _.compact(resource.data));\n\nexport const ResourceQuotasPage = connectToFlags(FLAGS.OPENSHIFT)(\n  ({ namespace, flags, mock, showTitle }) => {\n    const { t } = useTranslation();\n    const resources = [{ kind: 'ResourceQuota', namespaced: true }];\n    let rowFilters = null;\n\n    if (flagPending(flags[FLAGS.OPENSHIFT])) {\n      return <LoadingBox />;\n    }\n    if (flags[FLAGS.OPENSHIFT]) {\n      if (!namespace) {\n        resources.push({\n          kind: referenceForModel(ClusterResourceQuotaModel),\n          namespaced: false,\n          optional: true,\n        });\n      } else {\n        resources.push({\n          kind: referenceForModel(AppliedClusterResourceQuotaModel),\n          namespaced: true,\n          namespace,\n          optional: true,\n        });\n      }\n\n      rowFilters = [\n        {\n          filterGroupName: t('public~Role'),\n          type: 'role-kind',\n          reducer: quotaType,\n          items: [\n            {\n              id: 'cluster',\n              title: t('public~Cluster-wide {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n            {\n              id: 'namespace',\n              title: t('public~Namespace {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n          ],\n        },\n      ];\n    }\n    const createNS = namespace || 'default';\n    const accessReview = {\n      model: ResourceQuotaModel,\n      namespace: createNS,\n    };\n    return (\n      <MultiListPage\n        canCreate={true}\n        createAccessReview={accessReview}\n        createButtonText={t('public~Create ResourceQuota')}\n        createProps={{ to: `/k8s/ns/${createNS}/resourcequotas/~new` }}\n        ListComponent={ResourceQuotasList}\n        resources={resources}\n        label={t(ResourceQuotaModel.labelPluralKey)}\n        namespace={namespace}\n        flatten={flatten}\n        title={t(ResourceQuotaModel.labelPluralKey)}\n        rowFilters={rowFilters}\n        mock={mock}\n        showTitle={showTitle}\n      />\n    );\n  },\n);\n\nexport const AppliedClusterResourceQuotasPage = ({ namespace, mock, showTitle }) => {\n  const { t } = useTranslation();\n  const resources = [\n    {\n      kind: referenceForModel(AppliedClusterResourceQuotaModel),\n      namespaced: true,\n      namespace,\n      optional: true,\n    },\n  ];\n\n  return (\n    <MultiListPage\n      ListComponent={AppliedClusterResourceQuotasList}\n      resources={resources}\n      label={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      namespace={namespace}\n      flatten={flatten}\n      title={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      mock={mock}\n      showTitle={showTitle}\n    />\n  );\n};\n\nexport const ResourceQuotasDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={resourceQuotaMenuActions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasDetailsPage = (props) => {\n  const params = useParams();\n  const actions = appliedClusterResourceQuotaMenuActions(params?.ns);\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={actions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n","export * from './pipelines';\nexport * from './pipelineruns';\nexport * from './conditions';\nexport * from './pipelines-lists';\nexport * from './repository';\nexport { useIsTektonV1VersionPresent } from './pipelines/utils/pipeline-operator';\nexport { useIsPipelineOperatorVersion_1_16_or_newer } from './pipelines/utils/pipeline-operator';\nexport { useIsPipelineOperatorVersion_1_17_or_newer } from './pipelines/utils/pipeline-operator';\nexport { LogURLRedirect } from './LogURLRedirect';\n","/* eslint-disable tsdoc/syntax */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Alert, Button, Tooltip } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Status,\n  getRequester,\n  getDescription,\n  FLAGS,\n  GreenCheckCircleIcon,\n  getName,\n  COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n  COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n  useUserSettingsCompatibility,\n  isModifiedEvent,\n  REQUESTER_FILTER,\n  useFlag,\n  usePrometheusGate,\n} from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport * as k8sActions from '@console/dynamic-plugin-sdk/src/app/k8s/actions/k8s';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport {\n  ConsoleLinkModel,\n  NamespaceModel,\n  ProjectModel,\n  SecretModel,\n  ServiceAccountModel,\n} from '../models';\nimport { coFetchJSON } from '../co-fetch';\nimport { k8sGet, referenceForModel } from '../module/k8s';\nimport * as UIActions from '../actions/ui';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  DetailsItem,\n  ExternalLink,\n  Kebab,\n  LabelList,\n  LoadingInline,\n  ConsoleEmptyState,\n  ResourceIcon,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  formatBytesAsMiB,\n  formatCores,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  navFactory,\n  useAccessReview,\n} from './utils';\nimport { deleteNamespaceModal, configureNamespacePullSecretModal } from './modals';\nimport { RoleBindingsPage } from './RBAC';\nimport { Bar, Area, PROMETHEUS_BASE_PATH } from './graphs';\nimport { flagPending } from '../reducers/features';\nimport { OpenShiftGettingStarted } from './start-guide';\nimport { OverviewListPage } from './overview';\nimport {\n  getNamespaceDashboardConsoleLinks,\n  ProjectDashboard,\n} from './dashboard/project-dashboard/project-dashboard';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\n\nimport {\n  isCurrentUser,\n  isOtherUser,\n  isSystemNamespace,\n} from '@console/shared/src/components/namespace';\nimport { useCreateNamespaceModal } from '@console/shared/src/hooks/useCreateNamespaceModal';\nimport { useCreateProjectModal } from '@console/shared/src/hooks/useCreateProjectModal';\n\nconst getDisplayName = (obj) =>\n  _.get(obj, ['metadata', 'annotations', 'openshift.io/display-name']);\n\n// KKD CHECK TO SEE THAT ITEMS CHANGE WHEN LANGUAGE CHANGES\nconst getFilters = () => [\n  {\n    filterGroupName: i18next.t('public~Requester'),\n    type: 'requester',\n    reducer: (namespace) => {\n      const name = namespace.metadata?.name;\n      const requester = namespace.metadata?.annotations?.['openshift.io/requester'];\n      if (isCurrentUser(requester)) {\n        return REQUESTER_FILTER.ME;\n      }\n      if (isOtherUser(requester, name)) {\n        return REQUESTER_FILTER.USER;\n      }\n      if (isSystemNamespace({ title: name })) {\n        return REQUESTER_FILTER.SYSTEM;\n      }\n    },\n    items: [\n      { id: REQUESTER_FILTER.ME, title: i18next.t('public~Me') },\n      { id: REQUESTER_FILTER.USER, title: i18next.t('public~User') },\n      { id: REQUESTER_FILTER.SYSTEM, title: i18next.t('public~System'), hideIfEmpty: true },\n    ],\n  },\n];\n\nexport const deleteModal = (kind, ns) => {\n  const { labelKey, labelKind, weight, accessReview } = Kebab.factory.Delete(kind, ns);\n  let callback = undefined;\n  let tooltip;\n  let label;\n\n  if (ns.metadata.name === 'default') {\n    tooltip = `${kind.label} default cannot be deleted`;\n  } else if (ns.status?.phase === 'Terminating') {\n    tooltip = `${kind.label} is already terminating`;\n  } else {\n    callback = () => deleteNamespaceModal({ kind, resource: ns });\n  }\n  if (tooltip) {\n    label = (\n      <div className=\"dropdown__disabled\">\n        <Tooltip content={tooltip}>\n          <span>{i18next.t(labelKey, labelKind)}</span>\n        </Tooltip>\n      </div>\n    );\n  }\n  return { label, labelKey, labelKind, weight, callback, accessReview };\n};\n\nconst nsMenuActions = [\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  Kebab.factory.Edit,\n  deleteModal,\n];\n\nconst fetchNamespaceMetrics = () => {\n  const metrics = [\n    {\n      key: 'memory',\n      query: 'sum by(namespace) (container_memory_working_set_bytes{container=\"\",pod!=\"\"})',\n    },\n    {\n      key: 'cpu',\n      query: 'namespace:container_cpu_usage:sum',\n    },\n  ];\n  const promises = metrics.map(({ key, query }) => {\n    const url = `${PROMETHEUS_BASE_PATH}/api/v1/query?&query=${query}`;\n    return coFetchJSON(url).then(({ data: { result } }) => {\n      return result.reduce((acc, data) => {\n        const value = Number(data.value[1]);\n        return _.set(acc, [key, data.metric.namespace], value);\n      }, {});\n    });\n  });\n  return (\n    Promise.all(promises)\n      .then((data) => _.assign({}, ...data))\n      // eslint-disable-next-line no-console\n      .catch(console.error)\n  );\n};\n\nconst namespaceColumnInfo = Object.freeze({\n  name: {\n    classes: '',\n    id: 'name',\n  },\n  displayName: {\n    classes: 'co-break-word',\n    id: 'displayName',\n  },\n  status: {\n    classes: '',\n    id: 'status',\n  },\n  requester: {\n    classes: '',\n    id: 'requester',\n  },\n  memory: {\n    classes: '',\n    id: 'memory',\n  },\n  cpu: {\n    classes: '',\n    id: 'cpu',\n  },\n  created: {\n    classes: '',\n    id: 'created',\n  },\n  description: {\n    classes: '',\n    id: 'description',\n  },\n  labels: {\n    classes: '',\n    id: 'labels',\n  },\n});\n\nconst NamespacesTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    {\n      title: i18next.t('public~Memory'),\n      id: namespaceColumnInfo.memory.id,\n      sortFunc: 'namespaceMemory',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.memory.classes },\n    },\n    {\n      title: i18next.t('public~CPU'),\n      id: namespaceColumnInfo.cpu.id,\n      sortFunc: 'namespaceCPU',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.cpu.classes },\n    },\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    { title: '', props: { className: Kebab.columnClass } },\n  ];\n};\nNamespacesTableHeader.displayName = 'NamespacesTableHeader';\n\nconst NamespacesColumnManagementID = referenceForModel(NamespaceModel);\n\nconst getNamespacesSelectedColumns = () => {\n  return new Set(\n    NamespacesTableHeader().reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst NamespacesTableRow = ({ obj: ns, customData: { tableColumns } }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(ns);\n  const requester = getRequester(ns);\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(ns);\n  const labels = ns.metadata.labels;\n  const columns = tableColumns?.length > 0 ? new Set(tableColumns) : getNamespacesSelectedColumns();\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        <ResourceLink kind=\"Namespace\" name={ns.metadata.name} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(ns) || <span className=\"text-muted\">{t('public~No display name')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.status.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={ns.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.memory.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.memory.id}\n      >\n        {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.cpu.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.cpu.id}\n      >\n        {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={ns.metadata.creationTimestamp} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.description.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.description.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.labels.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.labels.id}\n      >\n        <LabelList kind=\"Namespace\" labels={labels} />\n      </TableData>\n      <TableData className={Kebab.columnClass}>\n        <ResourceKebab actions={nsMenuActions} kind=\"Namespace\" resource={ns} />\n      </TableData>\n    </>\n  );\n};\n\nconst NamespacesNotFoundMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No Namespaces found')} Icon={SearchIcon}>\n      {t('public~No results were found for the requested Namespaces.')}\n    </ConsoleEmptyState>\n  );\n};\n\nconst NamespacesEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Namespaces')} Icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const NamespacesList = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    const updateMetrics = () =>\n      fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n    updateMetrics();\n    const id = setInterval(updateMetrics, 30 * 1000);\n    return () => clearInterval(id);\n  }, [dispatch]);\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : null;\n\n  const customData = React.useMemo(\n    () => ({\n      tableColumns: tableColumns?.[NamespacesColumnManagementID],\n    }),\n    [tableColumns],\n  );\n\n  return (\n    <Table\n      {...props}\n      activeColumns={selectedColumns}\n      columnManagementID={NamespacesColumnManagementID}\n      aria-label={t('public~Namespaces')}\n      Header={NamespacesTableHeader}\n      Row={NamespacesTableRow}\n      customData={customData}\n      virtualize\n      EmptyMsg={NamespacesEmptyMessage}\n      NoDataEmptyMsg={NamespacesNotFoundMessage}\n    />\n  );\n};\n\nexport const NamespacesPage = (props) => {\n  const { t } = useTranslation();\n  const createNamespaceModal = useCreateNamespaceModal();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : getNamespacesSelectedColumns();\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={NamespacesList}\n      canCreate={true}\n      createHandler={() => createNamespaceModal()}\n      columnLayout={{\n        columns: NamespacesTableHeader(null, t).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: NamespacesColumnManagementID,\n        selectedColumns,\n        type: t('public~Namespaces'),\n      }}\n    />\n  );\n};\n\nexport const projectMenuActions = [Kebab.factory.Edit, deleteModal];\n\nconst projectColumnManagementID = referenceForModel(ProjectModel);\n\nconst projectTableHeader = ({ showMetrics, showActions }) => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    ...(showMetrics\n      ? [\n          {\n            title: i18next.t('public~Memory'),\n            id: namespaceColumnInfo.memory.id,\n            sortFunc: 'namespaceMemory',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.memory.classes },\n          },\n          {\n            title: i18next.t('public~CPU'),\n            id: namespaceColumnInfo.cpu.id,\n            sortFunc: 'namespaceCPU',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.cpu.classes },\n          },\n        ]\n      : []),\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    ...(showActions ? [{ title: '', props: { className: Kebab.columnClass } }] : []),\n  ];\n};\n\nconst getProjectSelectedColumns = ({ showMetrics, showActions }) => {\n  return new Set(\n    projectTableHeader({ showMetrics, showActions }).reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst ProjectLink = ({ project }) => {\n  const dispatch = useDispatch();\n  const [, setLastNamespace] = useUserSettingsCompatibility(\n    LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n    LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  );\n  const url = new URL(window.location.href);\n  const params = new URLSearchParams(url.search);\n  const basePath = url.pathname;\n  if (params.has('project-name')) {\n    // clear project-name query param from the url\n    params.delete('project-name');\n  }\n  const newUrl = {\n    search: `?${params.toString()}`,\n    hash: url.hash,\n  };\n  const namespacedPath = UIActions.formatNamespaceRoute(project.metadata.name, basePath, newUrl);\n\n  const handleClick = (e) => {\n    // Don't set last namespace if its modified click (Ctrl+Click).\n    if (isModifiedEvent(e)) {\n      return;\n    }\n    setLastNamespace(project.metadata.name);\n    // update last namespace in session storage (persisted only for current browser tab). Used to remember/restore if\n    // \"All Projects\" was selected when returning to the list view (typically from details view) via breadcrumb or\n    // sidebar navigation\n    sessionStorage.setItem(LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY, project.metadata.name);\n    // clear project-name filter when active namespace is changed\n    dispatch(k8sActions.filterList(referenceForModel(ProjectModel), 'project-name', ''));\n  };\n\n  return (\n    <span className=\"co-resource-item co-resource-item--truncate\">\n      <ResourceIcon kind=\"Project\" />\n      <Link to={namespacedPath} className=\"co-resource-item__resource-name\" onClick={handleClick}>\n        {project.metadata.name}\n      </Link>\n    </span>\n  );\n};\nconst projectHeaderWithoutActions = () =>\n  projectTableHeader({ showMetrics: false, showActions: false });\n\nconst ProjectTableRow = ({ obj: project, customData = {} }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(project);\n  const requester = getRequester(project);\n  const {\n    ProjectLinkComponent,\n    actionsEnabled = true,\n    showMetrics,\n    showActions,\n    isColumnManagementEnabled = true,\n    tableColumns,\n  } = customData;\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(project);\n  const labels = project.metadata.labels;\n  const columns = isColumnManagementEnabled\n    ? tableColumns?.length > 0\n      ? new Set(tableColumns)\n      : getProjectSelectedColumns({ showMetrics, showActions })\n    : null;\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        {customData && ProjectLinkComponent ? (\n          <ProjectLinkComponent project={project} />\n        ) : (\n          <span className=\"co-resource-item\">\n            <ResourceLink kind=\"Project\" name={project.metadata.name} />\n          </span>\n        )}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(project) || (\n            <span className=\"text-muted\">{t('public~No display name')}</span>\n          )}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.status.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={project.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      {showMetrics && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.memory.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.memory.id}\n          >\n            {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.cpu.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.cpu.id}\n          >\n            {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n          </TableData>\n        </>\n      )}\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={project.metadata.creationTimestamp} />\n      </TableData>\n      {isColumnManagementEnabled && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.description.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.description.id}\n          >\n            <span className=\"co-break-word co-line-clamp\">\n              {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n            </span>\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.labels.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.labels.id}\n          >\n            <LabelList labels={labels} kind=\"Project\" />\n          </TableData>\n        </>\n      )}\n      {actionsEnabled && (\n        <TableData className={Kebab.columnClass}>\n          <ResourceKebab actions={projectMenuActions} kind=\"Project\" resource={project} />\n        </TableData>\n      )}\n    </>\n  );\n};\nProjectTableRow.displayName = 'ProjectTableRow';\n\nexport const ProjectsTable = (props) => {\n  const { t } = useTranslation();\n  const customData = React.useMemo(\n    () => ({\n      ProjectLinkComponent: ProjectLink,\n      actionsEnabled: false,\n      isColumnManagementEnabled: false,\n    }),\n    [],\n  );\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Projects')}\n      Header={projectHeaderWithoutActions}\n      Row={ProjectTableRow}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nconst headerWithMetrics = () => projectTableHeader({ showMetrics: true, showActions: true });\nconst headerNoMetrics = () => projectTableHeader({ showMetrics: false, showActions: true });\n\nconst ProjectNotFoundMessage = () => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const canCreate = canCreateNs || canCreateProject;\n  return (\n    <ConsoleEmptyState title={t('public~Welcome to OpenShift')}>\n      <OpenShiftGettingStarted canCreate={canCreate} />\n    </ConsoleEmptyState>\n  );\n};\n\nconst ProjectEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Projects')} icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const ProjectList = ({ data, ...tableProps }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const customData = React.useMemo(\n    () => ({\n      showMetrics,\n      tableColumns: tableColumns?.[projectColumnManagementID],\n    }),\n    [showMetrics, tableColumns],\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    if (showMetrics) {\n      const updateMetrics = () =>\n        fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n      updateMetrics();\n      const id = setInterval(updateMetrics, 30 * 1000);\n      return () => clearInterval(id);\n    }\n  }, [dispatch, showMetrics]);\n  const selectedColumns =\n    tableColumns?.[projectColumnManagementID]?.length > 0\n      ? new Set(tableColumns[projectColumnManagementID])\n      : null;\n\n  // Don't render the table until we know whether we can get metrics. It's\n  // not possible to change the table headers once the component is mounted.\n  if (flagPending(canGetNS)) {\n    return null;\n  }\n\n  return (\n    <Table\n      {...tableProps}\n      activeColumns={selectedColumns}\n      columnManagementID={projectColumnManagementID}\n      aria-label={t('public~Projects')}\n      data={data}\n      Header={showMetrics ? headerWithMetrics : headerNoMetrics}\n      Row={ProjectTableRow}\n      NoDataEmptyMsg={ProjectNotFoundMessage}\n      EmptyMsg={ProjectEmptyMessage}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nexport const ProjectsPage = (props) => {\n  const { t } = useTranslation();\n  const createProjectModal = useCreateProjectModal();\n  // Skip self-subject access review for projects since they use a special project request API.\n  // `FLAGS.CAN_CREATE_PROJECT` determines if the user can create projects.\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const showActions = showMetrics;\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={ProjectList}\n      canCreate={canCreateProject}\n      createHandler={() => createProjectModal()}\n      filterLabel={t('public~by name or display name')}\n      skipAccessReview\n      textFilter=\"project-name\"\n      kind=\"Project\"\n      columnLayout={{\n        columns: projectTableHeader({ showMetrics, showActions }).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: projectColumnManagementID,\n        selectedColumns:\n          tableColumns?.[projectColumnManagementID]?.length > 0\n            ? new Set(tableColumns[projectColumnManagementID])\n            : null,\n        type: t('public~Project'),\n      }}\n    />\n  );\n};\n\n/** @type {React.SFC<{namespace: K8sResourceKind}>} */\nexport const PullSecret = (props) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [error, setError] = React.useState(false);\n  const { t } = useTranslation();\n  const { namespace, canViewSecrets } = props;\n\n  React.useEffect(() => {\n    k8sGet(ServiceAccountModel, 'default', namespace.metadata.name, {})\n      .then((serviceAccount) => {\n        setIsLoading(false);\n        setData(serviceAccount.imagePullSecrets ?? []);\n        setError(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setData([]);\n        setError(true);\n        // eslint-disable-next-line no-console\n        console.error('Error getting default ServiceAccount', err);\n      });\n  }, [namespace.metadata.name]);\n\n  const modal = () => configureNamespacePullSecretModal({ namespace, pullSecret: undefined });\n\n  const secrets = () => {\n    if (error) {\n      return <Alert variant=\"danger\" isInline title={t('Error loading default pull Secrets')} />;\n    }\n    return data.length > 0 ? (\n      data.map((secret) => (\n        <div key={secret.name}>\n          <ResourceLink\n            kind=\"Secret\"\n            name={secret.name}\n            namespace={namespace.metadata.name}\n            linkTo={canViewSecrets}\n          />\n        </div>\n      ))\n    ) : (\n      <Button variant=\"link\" type=\"button\" isInline onClick={modal}>\n        {t('public~Not configured')}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <dt>{t('public~Default pull Secret', { count: data.length })}</dt>\n      <dd>{isLoading ? <LoadingInline /> : secrets()}</dd>\n    </>\n  );\n};\n\nexport const NamespaceLineCharts = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~CPU usage')}\n          humanize={humanizeCpuCores}\n          namespace={ns.metadata.name}\n          query={`namespace:container_cpu_usage:sum{namespace='${ns.metadata.name}'}`}\n        />\n      </div>\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~Memory usage')}\n          humanize={humanizeBinaryBytes}\n          byteDataType={ByteDataTypes.BinaryBytes}\n          namespace={ns.metadata.name}\n          query={`sum by(namespace) (container_memory_working_set_bytes{namespace=\"${ns.metadata.name}\",container=\"\",pod!=\"\"})`}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const TopPodsBarChart = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <Bar\n      title={t('public~Memory usage by pod (top 10)')}\n      namespace={ns.metadata.name}\n      query={`sort_desc(topk(10, sum by (pod)(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace=\"${ns.metadata.name}\"})))`}\n      humanize={humanizeBinaryBytes}\n      metric=\"pod\"\n    />\n  );\n};\n\nconst ResourceUsage = ({ ns }) => {\n  const { t } = useTranslation();\n  const isPrometheusAvailable = usePrometheusGate();\n  return isPrometheusAvailable ? (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('public~Resource usage')} />\n      <NamespaceLineCharts ns={ns} />\n      <TopPodsBarChart ns={ns} />\n    </div>\n  ) : null;\n};\n\nexport const NamespaceSummary = ({ ns }) => {\n  const { t } = useTranslation();\n  const displayName = getDisplayName(ns);\n  const description = getDescription(ns);\n  const requester = getRequester(ns);\n  const serviceMeshEnabled = ns.metadata?.labels?.['maistra.io/member-of'];\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    verb: 'patch',\n    namespace: ns.metadata.name,\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-xs-12\">\n        {/* Labels aren't editable on kind Project, only Namespace. */}\n        <ResourceSummary resource={ns} showLabelEditor={ns.kind === 'Namespace'}>\n          <dt>{t('public~Display name')}</dt>\n          <dd\n            className={classNames({\n              'text-muted': !displayName,\n            })}\n          >\n            {displayName || t('public~No display name')}\n          </dd>\n          <dt>{t('public~Description')}</dt>\n          <dd>\n            <p\n              className={classNames({\n                'text-muted': !description,\n                'co-pre-wrap': description,\n                'co-namespace-summary__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </p>\n          </dd>\n          {requester && <dt>Requester</dt>}\n          {requester && <dd>{requester}</dd>}\n        </ResourceSummary>\n      </div>\n      <div className=\"col-sm-6 col-xs-12\">\n        <dl className=\"co-m-pane__details\">\n          <DetailsItem label={t('public~Status')} obj={ns} path=\"status.phase\">\n            <Status status={ns.status?.phase} />\n          </DetailsItem>\n          <PullSecret namespace={ns} canViewSecrets={canListSecrets} />\n          <dt>{t('public~NetworkPolicies')}</dt>\n          <dd>\n            <Link to={`/k8s/ns/${ns.metadata.name}/networkpolicies`}>\n              {t('public~NetworkPolicies')}\n            </Link>\n          </dd>\n          {serviceMeshEnabled && (\n            <>\n              <dt>{t('public~Service mesh')}</dt>\n              <dd>\n                <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n              </dd>\n            </>\n          )}\n        </dl>\n      </div>\n    </div>\n  );\n};\n\nexport const NamespaceDetails = ({ obj: ns, customData }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const links = getNamespaceDashboardConsoleLinks(ns, consoleLinks);\n  return (\n    <div>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project details')}</title>\n        </Helmet>\n      )}\n      <div className=\"co-m-pane__body\">\n        {!customData?.hideHeading && (\n          <SectionHeading text={t('public~{{kind}} details', { kind: ns.kind })} />\n        )}\n        <NamespaceSummary ns={ns} />\n      </div>\n      {ns.kind === 'Namespace' && <ResourceUsage ns={ns} />}\n      {!_.isEmpty(links) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Launcher')} />\n          <ul className=\"pf-v5-c-list pf-m-plain\">\n            {_.map(_.sortBy(links, 'spec.text'), (link) => {\n              return (\n                <li key={link.metadata.uid}>\n                  <ExternalLink href={link.spec.href} text={link.spec.text} />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst RolesPage = ({ obj: { metadata } }) => {\n  return (\n    <RoleBindingsPage\n      createPath={`/k8s/ns/${metadata.name}/rolebindings/~new`}\n      namespace={metadata.name}\n      showTitle={false}\n    />\n  );\n};\n\nexport const NamespacesDetailsPage = (props) => (\n  <DetailsPage\n    {...props}\n    menuActions={nsMenuActions}\n    pages={[\n      navFactory.details(NamespaceDetails),\n      navFactory.editYaml(),\n      navFactory.roles(RolesPage),\n    ]}\n  />\n);\n\nexport const ProjectsDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={projectMenuActions}\n      pages={[\n        {\n          href: '',\n          // t('public~Overview')\n          nameKey: 'public~Overview',\n          component: ProjectDashboard,\n        },\n        {\n          href: 'details',\n          // t('public~Details')\n          nameKey: 'public~Details',\n          component: NamespaceDetails,\n        },\n        navFactory.editYaml(),\n        navFactory.workloads(OverviewListPage),\n        navFactory.roles(RolesPage),\n      ]}\n    />\n  );\n};\n","import { nodeStatus } from '@console/app/src/status/node';\nimport { volumeSnapshotStatus } from '@console/app/src/status/snapshot';\nimport { podPhaseFilterReducer } from '@console/internal/module/k8s';\nimport { StatusGroupMapper } from './InventoryItem';\nimport { InventoryStatusGroup } from './status-group';\n\nconst POD_PHASE_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Running', 'Succeeded'],\n  [InventoryStatusGroup.ERROR]: ['CrashLoopBackOff', 'Failed'],\n  [InventoryStatusGroup.PROGRESS]: ['Terminating', 'Pending'],\n  [InventoryStatusGroup.WARN]: ['Unknown'],\n};\n\nconst PVC_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Bound'],\n  [InventoryStatusGroup.ERROR]: ['Lost'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n};\n\nconst PV_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Available', 'Bound'],\n  [InventoryStatusGroup.PROGRESS]: ['Released'],\n  [InventoryStatusGroup.ERROR]: ['Failed'],\n};\n\nconst NODE_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Not Ready'],\n};\n\nconst VS_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n  [InventoryStatusGroup.ERROR]: ['Error'],\n};\n\nexport const getStatusGroups = (resources, mapping, mapper, filterType) => {\n  const groups = {\n    [InventoryStatusGroup.UNKNOWN]: {\n      statusIDs: [],\n      count: 0,\n    },\n  };\n  Object.keys(mapping).forEach((key) => {\n    groups[key] = {\n      statusIDs: [...mapping[key]],\n      count: 0,\n      filterType,\n    };\n  });\n\n  resources.forEach((resource) => {\n    const status = mapper(resource);\n    const group =\n      Object.keys(mapping).find((key) => mapping[key].includes(status)) ||\n      InventoryStatusGroup.UNKNOWN;\n    groups[group].count++;\n  });\n\n  return groups;\n};\n\nexport const getPodStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, POD_PHASE_GROUP_MAPPING, podPhaseFilterReducer, 'pod-status');\nexport const getNodeStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, NODE_STATUS_GROUP_MAPPING, nodeStatus, 'node-status');\nexport const getPVCStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PVC_STATUS_GROUP_MAPPING, (pvc) => pvc.status.phase, 'pvc-status');\nexport const getPVStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PV_STATUS_GROUP_MAPPING, (pv) => pv.status.phase, 'pv-status');\nexport const getVSStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, VS_STATUS_GROUP_MAPPING, volumeSnapshotStatus, 'snapshot-status');\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { DOC_URL_PODMAN } from './utils';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline, getImageStreamTagName } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={from.name}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">{t('public~pushed image')}</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~Unable to resolve')}\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>{t('public~Not synced yet')}</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>{t('public~Unresolved')}</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~There is no image associated with this tag')}\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const { t } = useTranslation();\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>{t('public~Image registry commands')}</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            {t(\n              'public~Create a new ImageStreamTag by pushing an image to this ImageStream with the desired tag.',\n            )}\n          </p>\n          <br />\n          <p>{t('public~Authenticate to the internal registry')}</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>{t('public~Push an image to this ImageStream')}</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>{t('public~Pull an image from this ImageStream')}</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            <Trans t={t} ns=\"public\">\n              Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong>{' '}\n              commands.{' '}\n            </Trans>\n            <ExternalLink href={DOC_URL_PODMAN} text={t('public~Learn more.')} />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        {t('public~Do you need to work with this ImageStream outside of the web console?')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const { t } = useTranslation();\n\n  const getImportErrors = (): string[] => {\n    return _.transform(imageStream.status.tags, (acc, tag: any) => {\n      const importErrorCondition = _.find(\n        tag.conditions,\n        (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n      );\n      importErrorCondition &&\n        acc.push(\n          t('public~Unable to sync image for tag {{tag}}. {{message}}', {\n            tag: `${imageStream.metadata.name}:${tag.tag}`,\n            message: importErrorCondition.message,\n          }),\n        );\n    });\n  };\n\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text={t('public~ImageStream details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={imageStream}>\n              {imageRepository && <dt>{t('public~Image repository')}</dt>}\n              {imageRepository && <dd>{imageRepository}</dd>}\n              {publicImageRepository && <dt>{t('public~Public image repository')}</dt>}\n              {publicImageRepository && <dd>{publicImageRepository}</dd>}\n              <dt>{t('public~Image count')}</dt>\n              <dd>{imageCount ? imageCount : 0}</dd>\n            </ResourceSummary>\n            <ExampleDockerCommandPopover imageStream={imageStream} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Tags')} />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">{t('public~No tags')}</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">{t('public~Name')}</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">{t('public~From')}</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">{t('public~Identifier')}</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">{t('public~Last updated')}</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  const ImageStreamsTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n  ImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ImageStreams')}\n      Header={ImageStreamsTableHeader}\n      Row={ImageStreamsTableRow}\n      virtualize\n    />\n  );\n};\n\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {...props}\n      title={t('public~ImageStreams')}\n      kind={ImageStreamsReference}\n      ListComponent={ImageStreamsList}\n      canCreate={true}\n    />\n  );\n};\n\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport * as classNames from 'classnames';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  DetailsItem,\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  detailsPage,\n  navFactory,\n} from './utils';\nimport { StorageClassResourceKind, K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { StorageClassModel } from '../models';\n\nexport const StorageClassReference: K8sResourceKindReference = 'StorageClass';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(StorageClassModel), ...common];\n\nconst defaultClassAnnotation = 'storageclass.kubernetes.io/is-default-class';\nconst betaDefaultStorageClassAnnotation = 'storageclass.beta.kubernetes.io/is-default-class';\nexport const isDefaultClass = (storageClass: K8sResourceKind) => {\n  const annotations = _.get(storageClass, 'metadata.annotations') || {};\n  return (\n    annotations[defaultClassAnnotation] === 'true' ||\n    annotations[betaDefaultStorageClassAnnotation] === 'true'\n  );\n};\n\nconst tableColumnClasses = [\n  'pf-v5-u-w-42-on-md',\n  'pf-v5-u-w-42-on-md',\n  'pf-m-hidden pf-m-visible-on-md pf-v5-u-w-16-on-md',\n  Kebab.columnClass,\n];\n\nconst StorageClassDetails: React.FC<StorageClassDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~StorageClass details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={obj}>\n              <DetailsItem label={t('public~Provisioner')} obj={obj} path=\"provisioner\" />\n            </ResourceSummary>\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('public~Reclaim policy')} obj={obj} path=\"reclaimPolicy\" />\n              <dt>{t('public~Default class')}</dt>\n              <dd>{isDefaultClass(obj) ? t('public~True') : t('public~False')}</dd>\n              <DetailsItem\n                label={t('public~Volume binding mode')}\n                obj={obj}\n                path=\"volumeBindingMode\"\n              />\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst StorageClassTableRow: React.FC<RowFunctionArgs<StorageClassResourceKind>> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n        <ResourceLink kind={StorageClassReference} name={obj.metadata.name}>\n          {isDefaultClass(obj) && (\n            <span className=\"small text-muted co-resource-item__help-text\">\n              &ndash; {t('public~Default')}\n            </span>\n          )}\n        </ResourceLink>\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {obj.provisioner}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{obj.reclaimPolicy || '-'}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={StorageClassReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const StorageClassList: React.FC = (props) => {\n  const { t } = useTranslation();\n  const StorageClassTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Provisioner'),\n        sortField: 'provisioner',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('public~Reclaim policy'),\n        sortField: 'reclaimPolicy',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[3] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~StorageClasses')}\n      Header={StorageClassTableHeader}\n      Row={StorageClassTableRow}\n      virtualize\n    />\n  );\n};\nStorageClassList.displayName = 'StorageClassList';\n\nexport const StorageClassPage: React.FC<StorageClassPageProps> = (props) => {\n  const createProps = {\n    to: '/k8s/cluster/storageclasses/~new/form',\n  };\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {..._.omit(props, 'mock')}\n      title={t('public~StorageClasses')}\n      kind={StorageClassReference}\n      ListComponent={StorageClassList}\n      canCreate={true}\n      filterLabel={props.filterLabel}\n      createProps={createProps}\n      createButtonText={t('public~Create StorageClass')}\n    />\n  );\n};\nexport const StorageClassDetailsPage: React.FC = (props) => {\n  const pages = [navFactory.details(detailsPage(StorageClassDetails)), navFactory.editYaml()];\n  return (\n    <DetailsPage {...props} kind={StorageClassReference} menuActions={menuActions} pages={pages} />\n  );\n};\nStorageClassDetailsPage.displayName = 'StorageClassDetailsPage';\n\nexport type StorageClassDetailsProps = {\n  obj: any;\n};\n\nexport type StorageClassPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport * as PropTypes from 'prop-types';\n\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { PromiseComponent } from '../utils';\n\nclass ConfirmModal extends PromiseComponent {\n  constructor(props) {\n    super(props);\n    this._submit = this._submit.bind(this);\n    this._cancel = this.props.cancel.bind(this);\n  }\n\n  _submit(event) {\n    event.preventDefault();\n\n    this.handlePromise(\n      this.props.executeFn(null, {\n        supressNotifications: true,\n      }),\n    ).then(this.props.close);\n  }\n\n  render() {\n    const {\n      title,\n      titleKey,\n      message,\n      messageKey,\n      btnText,\n      btnTextKey,\n      cancelText,\n      cancelTextKey,\n      submitDanger,\n    } = this.props;\n\n    return (\n      <Translation>\n        {(t) => (\n          <form onSubmit={this._submit} name=\"form\" className=\"modal-content\">\n            <ModalTitle>{titleKey ? t(titleKey) : title}</ModalTitle>\n            <ModalBody>{messageKey ? t(messageKey) : message}</ModalBody>\n            <ModalSubmitFooter\n              errorMessage={this.state.errorMessage}\n              inProgress={this.state.inProgress}\n              submitText={btnTextKey ? t(btnTextKey) : btnText || t('Confirm')}\n              cancel={this._cancel}\n              cancelText={cancelTextKey ? t(cancelTextKey) : cancelText || t('Cancel')}\n              submitDanger={submitDanger}\n            />\n          </form>\n        )}\n      </Translation>\n    );\n  }\n}\nConfirmModal.propTypes = {\n  btnText: PropTypes.node,\n  btnTextKey: PropTypes.string,\n  cancel: PropTypes.func.isRequired,\n  cancelText: PropTypes.node,\n  cancelTextKey: PropTypes.string,\n  close: PropTypes.func.isRequired,\n  executeFn: PropTypes.func.isRequired,\n  message: PropTypes.node,\n  messageKey: PropTypes.string,\n  title: PropTypes.node,\n  titleKey: PropTypes.string,\n  submitDanger: PropTypes.bool,\n};\n\nexport const confirmModal = createModalLauncher(ConfirmModal);\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../module/k8s';\n\nexport const ProjectDashboardContext = React.createContext<ProjectDashboardContext>({});\n\n// eslint-disable-next-line no-redeclare\ntype ProjectDashboardContext = {\n  obj?: K8sResourceKind;\n  namespaceLinks?: K8sResourceKind[];\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\n\nimport { RESULTS_TYPE } from '../../reducers/dashboards';\nimport { NotificationAlerts } from '../../reducers/observe';\nimport {\n  StopWatchPrometheusAction,\n  stopWatchPrometheusQuery,\n  stopWatchURL,\n  StopWatchURLAction,\n  watchPrometheusQuery,\n  WatchPrometheusQueryAction,\n  watchURL,\n  WatchURLAction,\n  getQueryKey,\n} from '../../actions/dashboards';\nimport { RootState } from '../../redux';\nimport { Firehose, FirehoseResource, FirehoseResult } from '../utils';\nimport { K8sResourceKind, AppliedClusterResourceQuotaKind } from '../../module/k8s';\nimport { PrometheusResponse } from '../graphs';\nimport { Fetch, RequestMap } from '@console/dynamic-plugin-sdk/src/api/internal-types';\n\nconst mapDispatchToProps: DispatchToProps = (dispatch) => ({\n  watchURL: (url, fetch) => dispatch(watchURL(url, fetch)),\n  stopWatchURL: (url) => dispatch(stopWatchURL(url)),\n  watchPrometheusQuery: (query, namespace, timespan) =>\n    dispatch(watchPrometheusQuery(query, namespace, timespan)),\n  stopWatchPrometheusQuery: (query, timespan) =>\n    dispatch(stopWatchPrometheusQuery(query, timespan)),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  [RESULTS_TYPE.URL]: state.dashboards.get(RESULTS_TYPE.URL),\n  [RESULTS_TYPE.PROMETHEUS]: state.dashboards.get(RESULTS_TYPE.PROMETHEUS) as RequestMap<\n    PrometheusResponse\n  >,\n  notificationAlerts: state.observe.get('notificationAlerts'),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nexport const withDashboardResources = <P extends DashboardItemProps>(\n  WrappedComponent: React.ComponentType<P>,\n) =>\n  connect<StateProps, DispatchProps, Diff<P, DashboardItemProps>>(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(\n    class WithDashboardResources extends React.Component<\n      WithDashboardResourcesProps,\n      WithDashboardResourcesState\n    > {\n      private urls: Array<string> = [];\n      private queries: Array<string> = [];\n      private watchingAlerts: boolean = false;\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          k8sResources: [],\n        };\n      }\n\n      shouldComponentUpdate(\n        nextProps: WithDashboardResourcesProps,\n        nextState: WithDashboardResourcesState,\n      ) {\n        const urlResultChanged = this.urls.some(\n          (urlKey) =>\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'data']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'data']) ||\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']),\n        );\n        const queryResultChanged = this.queries.some(\n          (query) =>\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) ||\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']),\n        );\n        const alertsResultChanged =\n          this.props?.notificationAlerts?.data !== nextProps?.notificationAlerts?.data ||\n          this.props?.notificationAlerts?.loadError !== nextProps?.notificationAlerts?.loadError;\n        const k8sResourcesChanged = this.state.k8sResources !== nextState.k8sResources;\n\n        const nextExternalProps = this.getExternalProps(nextProps);\n        const externalProps = this.getExternalProps(this.props);\n\n        return (\n          urlResultChanged ||\n          queryResultChanged ||\n          k8sResourcesChanged ||\n          (this.watchingAlerts && alertsResultChanged) ||\n          Object.keys(nextExternalProps).length !== Object.keys(externalProps).length ||\n          Object.keys(nextExternalProps).some(\n            (key) => nextExternalProps[key] !== externalProps[key],\n          )\n        );\n      }\n\n      watchURL: WatchURL = (url, fetch) => {\n        this.urls.push(url);\n        this.props.watchURL(url, fetch);\n      };\n\n      watchPrometheus: WatchPrometheus = (query, namespace, timespan) => {\n        this.queries.push(getQueryKey(query, timespan));\n        this.props.watchPrometheusQuery(query, namespace, timespan);\n      };\n\n      stopWatchPrometheusQuery: StopWatchPrometheus = (query, timespan) => {\n        const queryKey = getQueryKey(query, timespan);\n        this.queries = this.queries.filter((q) => q !== queryKey);\n        this.props.stopWatchPrometheusQuery(query, timespan);\n      };\n\n      watchAlerts: WatchAlerts = () => {\n        this.watchingAlerts = true;\n      };\n\n      stopWatchAlerts: StopWatchAlerts = () => {\n        this.watchingAlerts = false;\n      };\n\n      watchK8sResource: WatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: [...state.k8sResources, { ...resource, optional: true }],\n        }));\n      };\n\n      stopWatchK8sResource: StopWatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: state.k8sResources.filter((r) => r.prop !== resource.prop),\n        }));\n      };\n\n      getExternalProps = (props) => {\n        return _.omit(\n          props,\n          'watchURL',\n          'stopWatchURL',\n          'watchPrometheusQuery',\n          'stopWatchPrometheusQuery',\n          'watchAlerts',\n          'stopWatchAlerts',\n          RESULTS_TYPE.URL,\n          RESULTS_TYPE.PROMETHEUS,\n          'notificationAlerts',\n        );\n      };\n\n      render() {\n        return (\n          <Firehose resources={this.state.k8sResources}>\n            <WrappedComponent\n              watchURL={this.watchURL}\n              stopWatchURL={this.props.stopWatchURL}\n              watchPrometheus={this.watchPrometheus}\n              stopWatchPrometheusQuery={this.stopWatchPrometheusQuery}\n              watchAlerts={this.watchAlerts}\n              stopWatchAlerts={this.stopWatchAlerts}\n              urlResults={this.props[RESULTS_TYPE.URL]}\n              prometheusResults={this.props[RESULTS_TYPE.PROMETHEUS]}\n              notificationAlerts={this.props.notificationAlerts}\n              watchK8sResource={this.watchK8sResource}\n              stopWatchK8sResource={this.stopWatchK8sResource}\n              {...this.getExternalProps(this.props)}\n            />\n          </Firehose>\n        );\n      }\n    },\n  );\n\ntype DispatchToProps = (\n  dispatch: any,\n) => {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheusQuery: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n};\n\ntype WatchURL = (url: string, fetch?: Fetch) => void;\ntype StopWatchURL = (url: string) => void;\ntype WatchPrometheus = (query: string, namespace?: string, timespan?: number) => void;\ntype StopWatchPrometheus = (query: string, timespan?: number) => void;\ntype WatchAlerts = () => void;\ntype StopWatchAlerts = () => void;\n\ntype WithDashboardResourcesState = {\n  k8sResources: FirehoseResource[];\n};\n\ntype WithDashboardResourcesProps = {\n  watchURL: WatchURLAction;\n  watchPrometheusQuery: WatchPrometheusQueryAction;\n  stopWatchURL: StopWatchURLAction;\n  stopWatchPrometheusQuery: StopWatchPrometheusAction;\n  [RESULTS_TYPE.PROMETHEUS]: RequestMap<PrometheusResponse>;\n  [RESULTS_TYPE.URL]: RequestMap<any>;\n  notificationAlerts: any;\n};\n\nexport type WatchK8sResource = (resource: FirehoseResource) => void;\nexport type StopWatchK8sResource = (resource: FirehoseResource) => void;\n\nexport type DashboardItemProps = {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheus: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n  watchAlerts: WatchAlerts;\n  stopWatchAlerts: StopWatchAlerts;\n  urlResults: RequestMap<any>;\n  prometheusResults: RequestMap<PrometheusResponse>;\n  notificationAlerts: NotificationAlerts;\n  watchK8sResource: WatchK8sResource;\n  stopWatchK8sResource: StopWatchK8sResource;\n  resources?: {\n    [key: string]:\n      | FirehoseResult\n      | FirehoseResult<K8sResourceKind>\n      | FirehoseResult<AppliedClusterResourceQuotaKind>;\n  };\n};\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as semver from 'semver';\nimport {\n  getImageStreamIcon,\n  getImageForIconClass,\n} from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  isBuilder,\n  getMostRecentBuilderTag,\n  getBuilderTagsSortedByVersion,\n} from '@console/internal/components/image-stream';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { ProjectModel, ImageStreamModel } from '@console/internal/models';\nimport { ContainerPort, K8sResourceKind, K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport interface ImageTag {\n  name: string;\n  annotations: {\n    [key: string]: string;\n  };\n  generation: number;\n  [key: string]: any;\n}\nexport interface BuilderImage {\n  obj: K8sResourceKind;\n  name: string;\n  displayName: string;\n  description: string;\n  title: string;\n  iconUrl: string;\n  tags: ImageTag[];\n  recentTag: ImageTag;\n  imageStreamNamespace: string;\n}\n\nexport interface NormalizedBuilderImages {\n  [builderImageName: string]: BuilderImage;\n}\n\nexport const imageStreamLabels = ['app.kubernetes.io/name', 'app.openshift.io/runtime'];\n\nexport const getSampleRepo = (tag) => tag?.annotations?.sampleRepo ?? '';\nexport const getSampleRef = (tag) => tag?.annotations?.sampleRef ?? '';\nexport const getSampleContextDir = (tag) => tag?.annotations?.sampleContextDir ?? '';\n\n// Transform image ports to k8s structure.\n// `{ '3306/tcp': {} }` -> `{ containerPort: 3306, protocol: 'TCP' }`\nconst portsFromSpec = (portSpec: object): ContainerPort[] => {\n  return _.reduce(\n    portSpec,\n    (result: ContainerPort[], value, key) => {\n      const parts = key.split('/');\n      if (parts.length === 1) {\n        parts.push('tcp');\n      }\n\n      const containerPort = parseInt(parts[0], 10);\n      if (_.isFinite(containerPort)) {\n        result.push({\n          containerPort,\n          protocol: parts[1].toUpperCase(),\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unrecognized image port format', key);\n      }\n\n      return result;\n    },\n    [],\n  );\n};\n\nexport const getPorts = (imageStreamImage): ContainerPort[] => {\n  const portSpec =\n    imageStreamImage?.image?.dockerImageMetadata?.Config?.ExposedPorts ||\n    imageStreamImage?.image?.dockerImageMetadata?.ContainerConfig?.ExposedPorts;\n  return portsFromSpec(portSpec);\n};\n\n// Use the same naming convention as the CLI.\nexport const makePortName = (port: ContainerPort): string =>\n  `${port.containerPort}-${port.protocol}`.toLowerCase();\n\nexport const prettifyName = (name: string) => {\n  return name.replace(/(-|^)([^-]?)/g, (first, prep, letter) => {\n    return (prep && ' ') + letter.toUpperCase();\n  });\n};\n\nexport const normalizeBuilderImages = (\n  imageStreams: K8sResourceCommon | K8sResourceCommon[],\n): NormalizedBuilderImages => {\n  const data = Array.isArray(imageStreams) ? imageStreams : [imageStreams];\n  const builderImageStreams = data.filter((imageStream) => isBuilder(imageStream));\n\n  return builderImageStreams.reduce((builderImages: NormalizedBuilderImages, imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    const recentTag = getMostRecentBuilderTag(imageStream);\n    const { name } = imageStream.metadata;\n    const displayName = imageStream?.metadata?.annotations?.['openshift.io/display-name'];\n    const description = recentTag?.annotations?.description;\n    const imageStreamNamespace = imageStream.metadata.namespace;\n    const title = displayName && displayName.length < 14 ? displayName : prettifyName(name);\n    const iconClass = getImageStreamIcon(recentTag);\n    const iconUrl = getImageForIconClass(iconClass);\n\n    builderImages[name] = {\n      obj: imageStream,\n      name,\n      displayName,\n      description,\n      title,\n      iconUrl,\n      tags,\n      recentTag,\n      imageStreamNamespace,\n    };\n    return builderImages;\n  }, {});\n};\n\nexport const getTagDataWithDisplayName = (\n  imageTags: ImageTag[],\n  selectedTag: string,\n  defaultName: string,\n): [ImageTag, string] => {\n  const imageTag = _.find(imageTags, { name: selectedTag });\n  const displayName = imageTag?.annotations?.['openshift.io/display-name'] ?? defaultName;\n\n  return [imageTag, displayName];\n};\n\nexport const getSuggestedName = (name: string): string | undefined => {\n  if (!name) {\n    return undefined;\n  }\n  const imageName: string = _.last(name.split('/'));\n  return _.first(imageName.split(/[^a-z0-9-]/));\n};\n\nexport enum RegistryType {\n  External = 'external',\n  Internal = 'internal',\n}\nexport enum BuilderImagesNamespace {\n  Openshift = 'openshift',\n}\nexport const imageRegistryType = (t: TFunction) => {\n  return {\n    External: {\n      value: RegistryType.External,\n      label: t('devconsole~Image name from external registry'),\n    },\n    Internal: {\n      value: RegistryType.Internal,\n      label: t('devconsole~Image stream tag from internal registry'),\n    },\n  };\n};\n\nexport const getSortedTags = (imageStream: K8sResourceKind) => {\n  return _.isArray(imageStream.status.tags) && imageStream.status.tags.length\n    ? imageStream.status.tags.sort(({ tag: a }, { tag: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n          return a.localeCompare(b);\n        }\n        if (!v1) {\n          return 1;\n        }\n        if (!v2) {\n          return -1;\n        }\n        return semver.rcompare(v1, v2);\n      })\n    : [];\n};\nexport const getImageStreamTags = (imageStream: K8sResourceKind) => {\n  const sortedTags = imageStream && !_.isEmpty(imageStream) ? getSortedTags(imageStream) : [];\n  return sortedTags.reduce((tags, { tag }) => {\n    tags[tag] = tag;\n    return tags;\n  }, {});\n};\n\nexport const getProjectResource = (): FirehoseResource[] => {\n  return [\n    {\n      isList: true,\n      kind: ProjectModel.kind,\n      prop: ProjectModel.id,\n    },\n  ];\n};\n\nexport const getImageStreamResource = (namespace: string): FirehoseResource[] => {\n  const resource = [];\n  if (namespace) {\n    resource.push({\n      isList: true,\n      kind: ImageStreamModel.kind,\n      prop: ImageStreamModel.id,\n      namespace,\n    });\n  }\n  return resource;\n};\n","import { convertToBaseValue, humanizePercentage } from '@console/internal/components/utils';\n\nconst genericCountResources = [\n  'configmaps',\n  'persistentvolumeclaims',\n  'pods',\n  'replicationcontrollers',\n  'resourcequotas',\n  'services',\n  'services.loadbalancers',\n  'services.nodeports',\n  'secrets',\n  'openshift.io/imagestreams',\n];\n\nexport const getUsedPercentage = (hard: string, used: string) => {\n  let usedNum = convertToBaseValue(used);\n  let hardNum = convertToBaseValue(hard);\n\n  if (!usedNum || !hardNum) {\n    // try to get the value without unit\n    usedNum = parseInt(usedNum, 10);\n    hardNum = parseInt(hardNum, 10);\n  }\n\n  return !usedNum || !hardNum ? 0 : (usedNum / hardNum) * 100;\n};\n\nexport const getLabelAndUsage = ({\n  resourceName,\n  used,\n  hard,\n}: {\n  resourceName: string;\n  used: string;\n  hard: string;\n}) => {\n  const useCount =\n    resourceName.startsWith('count/') || genericCountResources.includes(resourceName);\n\n  const percent = getUsedPercentage(hard, used);\n\n  return {\n    label: useCount ? `${used || 0} of ${hard}` : humanizePercentage(percent).string,\n    percent,\n  };\n};\n","import * as dagre from 'dagre';\n\nexport const NODE_SEPARATION_HORIZONTAL = 25;\nexport const NODE_SEPARATION_VERTICAL = 20;\nexport const DROP_SHADOW_SPACING = 5;\nexport const BUILDER_NODE_ADD_RADIUS = 9;\nexport const BUILDER_NODE_DECORATOR_RADIUS = 9;\nexport const BUILDER_NODE_ADD_PADDING = 4;\n\nexport const NODE_WIDTH = 120;\nexport const NODE_HEIGHT = 30;\nexport const FINALLY_NODE_PADDING = 30;\nexport const FINALLY_NODE_VERTICAL_SPACING = 20;\n\nexport const FINALLY_ADD_LINK_TEXT_HEIGHT = 10;\nexport const FINALLY_ADD_LINK_SIZE = 15;\nexport const WHEN_EXPRESSSION_DIAMOND_SIZE = 10;\nexport const WHEN_EXPRESSION_SPACING = 25;\n\nexport const DEFAULT_NODE_HEIGHT = 32;\nexport const NODE_PADDING = 12;\nexport const DEFAULT_NODE_ICON_WIDTH = 30;\nexport const DEFAULT_BADGE_WIDTH = 40;\nexport const DEFAULT_FINALLLY_GROUP_PADDING = 35;\nexport const TOOLBAR_HEIGHT = 40;\nexport const GRAPH_MIN_WIDTH = 300;\nexport const GRAPH_MAX_HEIGHT_PERCENT = 45;\n\nexport enum NodeType {\n  TASK_NODE = 'task',\n  CUSTOM_TASK_NODE = 'custom-task',\n  SPACER_NODE = 'spacer',\n  LOADING_NODE = 'loading',\n  TASK_LIST_NODE = 'task-list',\n  BUILDER_NODE = 'builder',\n  INVALID_TASK_LIST_NODE = 'invalid-task-list',\n  FINALLY_NODE = 'finally-node',\n  BUILDER_FINALLY_NODE = 'builder-finally-node',\n  FINALLY_GROUP = 'finally-group',\n  EDGE = 'edge',\n}\nexport enum DrawDesign {\n  INTEGRAL_SHAPE = 'integral-shape',\n  STRAIGHT = 'line',\n}\nexport enum PipelineLayout {\n  DAGRE_BUILDER = 'dagre-builder',\n  DAGRE_BUILDER_SPACED = 'dagre-builder-spaced',\n  DAGRE_VIEWER = 'dagre-viewer',\n  DAGRE_VIEWER_SPACED = 'dagre-viewer-spaced',\n}\n\nexport enum AddNodeDirection {\n  /**\n   * Rules today:\n   *  - the `relatedTask` is pointing at ONLY us\n   *  - we inherit all that `relatedTask` is pointing at\n   */\n  BEFORE = 'in-run-after',\n\n  /**\n   * Rules today:\n   *  - the `relatedTask` must be our ONLY runAfter\n   *  - we are added to all that is pointing at `relatedTask`\n   */\n  AFTER = 'has-run-after',\n\n  /**\n   * Rules today:\n   *  - we inherit all that `relatedTask` is pointing at\n   *  - we are added to all that is pointing at `relatedTask`\n   */\n  PARALLEL = 'shared-parallel',\n}\n\nconst DAGRE_SHARED_PROPS: dagre.GraphLabel = {\n  nodesep: NODE_SEPARATION_VERTICAL,\n  ranksep: NODE_SEPARATION_HORIZONTAL,\n  edgesep: 50,\n  ranker: 'longest-path',\n  rankdir: 'LR',\n  marginx: 20,\n  marginy: 20,\n};\nexport const DAGRE_VIEWER_PROPS: dagre.GraphLabel = {\n  ...DAGRE_SHARED_PROPS,\n};\nexport const DAGRE_VIEWER_SPACED_PROPS: dagre.GraphLabel = {\n  ...DAGRE_VIEWER_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + WHEN_EXPRESSION_SPACING,\n};\nexport const DAGRE_BUILDER_PROPS: dagre.GraphLabel = {\n  ...DAGRE_SHARED_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + BUILDER_NODE_ADD_RADIUS * 2,\n  nodesep: NODE_SEPARATION_VERTICAL + BUILDER_NODE_ADD_RADIUS,\n  marginx: DAGRE_SHARED_PROPS.marginx + BUILDER_NODE_ADD_RADIUS * 2,\n  marginy: DAGRE_SHARED_PROPS.marginy + BUILDER_NODE_ADD_RADIUS * 2,\n};\n\nexport const DAGRE_BUILDER_SPACED_PROPS: dagre.GraphLabel = {\n  ...DAGRE_BUILDER_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + WHEN_EXPRESSION_SPACING + BUILDER_NODE_ADD_RADIUS * 2,\n};\n\nexport enum CustomTask {\n  CUSTOM_TASK = 'CustomTask',\n}\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Resources, HealthChecksFormData } from '../import/import-types';\nimport { healthChecksDefaultValues } from './health-checks-probe-utils';\nimport {\n  HealthCheckProbeData,\n  RequestType,\n  HealthChecksProbeType,\n  HealthCheckFormProbeData,\n} from './health-checks-types';\n\nexport const constructProbeData = (\n  data: HealthCheckFormProbeData,\n  resourceType?: Resources,\n): HealthCheckProbeData => {\n  const probeData = {\n    ...(data.failureThreshold && { failureThreshold: _.toInteger(data.failureThreshold) }),\n    ...(data.successThreshold && { successThreshold: _.toInteger(data.successThreshold) }),\n    ...(data.requestType === RequestType.ContainerCommand && {\n      exec: data.exec,\n    }),\n    ...(data.requestType === RequestType.HTTPGET && {\n      httpGet: {\n        ...data[data.requestType],\n        scheme: data[data.requestType]?.scheme ? data[data.requestType].scheme[0] : 'HTTP',\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.httpGet.port),\n      },\n    }),\n    ...(data.requestType === RequestType.TCPSocket && {\n      tcpSocket: {\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.tcpSocket.port),\n      },\n    }),\n    ...(data.initialDelaySeconds && {\n      initialDelaySeconds: _.toInteger(data.initialDelaySeconds),\n    }),\n    ...(data.periodSeconds && { periodSeconds: _.toInteger(data.periodSeconds) }),\n    ...(data.timeoutSeconds && { timeoutSeconds: _.toInteger(data.timeoutSeconds) }),\n  };\n  return probeData;\n};\n\nexport const getRequestType = (data: HealthCheckProbeData) => {\n  if (_.has(data, RequestType.HTTPGET)) return RequestType.HTTPGET;\n  if (_.has(data, RequestType.TCPSocket)) return RequestType.TCPSocket;\n  if (_.has(data, 'exec.command')) return RequestType.ContainerCommand;\n  return '';\n};\n\nexport const convertResourceDataToFormData = (\n  resourceData: HealthCheckProbeData,\n): HealthCheckFormProbeData => {\n  return {\n    ...resourceData,\n    requestType: getRequestType(resourceData),\n    failureThreshold: resourceData.failureThreshold?.toString() || '',\n    successThreshold: resourceData.successThreshold?.toString() || '',\n    initialDelaySeconds: resourceData.initialDelaySeconds?.toString() || '',\n    periodSeconds: resourceData.periodSeconds?.toString() || '',\n    timeoutSeconds: resourceData.timeoutSeconds?.toString() || '',\n    ...(resourceData.httpGet && {\n      httpGet: {\n        ...resourceData.httpGet,\n        port: resourceData.httpGet.port?.toString() || '',\n        scheme: resourceData.httpGet.scheme === 'HTTP' ? undefined : ['HTTPS'],\n      },\n    }),\n    ...(resourceData.tcpSocket && {\n      tcpSocket: { port: resourceData.tcpSocket.port?.toString() || '' },\n    }),\n  };\n};\n\nexport const getHealthChecksData = (\n  resource: K8sResourceKind,\n  containerIndex: number = 0,\n): HealthChecksFormData => {\n  const containers = resource?.spec?.template?.spec?.containers ?? [];\n  const readinessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.ReadinessProbe] ?? {};\n  const livenessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.LivenessProbe] ?? {};\n  const startupProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.StartupProbe] ?? {};\n\n  const healthChecks = {\n    readinessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(readinessProbe),\n      data: !_.isEmpty(readinessProbe)\n        ? {\n            ...convertResourceDataToFormData(readinessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    livenessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(livenessProbe),\n      data: !_.isEmpty(livenessProbe)\n        ? {\n            ...convertResourceDataToFormData(livenessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    startupProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(startupProbe),\n      data: !_.isEmpty(startupProbe)\n        ? {\n            ...convertResourceDataToFormData(startupProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n  };\n  return healthChecks;\n};\n\nexport const getProbesData = (healthChecks: HealthChecksFormData, resourceType?: Resources) => {\n  const { readinessProbe, livenessProbe, startupProbe } = healthChecks;\n  return {\n    ...(readinessProbe.enabled\n      ? { readinessProbe: constructProbeData(readinessProbe.data, resourceType) }\n      : {}),\n    ...(livenessProbe.enabled\n      ? { livenessProbe: constructProbeData(livenessProbe.data, resourceType) }\n      : {}),\n    ...(resourceType !== Resources.KnativeService && startupProbe?.enabled\n      ? { startupProbe: constructProbeData(startupProbe.data) }\n      : {}),\n  };\n};\n","import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n}\n\nexport interface HealthCheckFormProbeData {\n  failureThreshold: string;\n  initialDelaySeconds: string;\n  periodSeconds: string;\n  timeoutSeconds: string;\n  successThreshold: string;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string[];\n    path: string;\n    port: string;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: string;\n  };\n}\nexport interface HealthCheckFormProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckFormProbeData;\n}\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import { FirehoseResource } from '../../../utils';\n\nexport const uniqueResource = (\n  resource: FirehoseResource,\n  prefix: string | number,\n): FirehoseResource => ({\n  ...resource,\n  prop: `${prefix}-${resource.prop}`,\n});\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useActivePerspective, LIMIT_STATE, Humanize } from '@console/dynamic-plugin-sdk';\nimport { getPrometheusQueryResponse } from '@console/internal/actions/dashboards';\nimport {\n  withDashboardResources,\n  DashboardItemProps,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, referenceForModel, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getName, getNamespace, useFlag } from '../../..';\nimport { FLAGS } from '../../../constants';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status';\nimport Status from '../status-card/StatusPopup';\n\nimport './top-consumer-popover.scss';\n\nconst ConsumerPopover: React.FC<ConsumerPopoverProps> = React.memo(\n  ({\n    current,\n    title,\n    humanize,\n    consumers,\n    namespace,\n    position = PopoverPosition.top,\n    description,\n    children,\n  }) => {\n    const { t } = useTranslation();\n    const [isOpen, setOpen] = React.useState(false);\n    const onShow = React.useCallback(() => setOpen(true), []);\n    const onHide = React.useCallback(() => setOpen(false), []);\n    if (!current) {\n      return null;\n    }\n    return (\n      <Popover\n        position={position}\n        headerContent={t('console-shared~{{title}} breakdown', { title })}\n        bodyContent={\n          <PopoverBody\n            humanize={humanize}\n            consumers={consumers}\n            namespace={namespace}\n            isOpen={isOpen}\n            description={description}\n          >\n            {children}\n          </PopoverBody>\n        }\n        enableFlip\n        onShow={onShow}\n        onHide={onHide}\n        maxWidth=\"21rem\"\n      >\n        <Button variant=\"link\" isInline>\n          {current}\n        </Button>\n      </Popover>\n    );\n  },\n);\n\nexport default ConsumerPopover;\n\nconst getLimitIcon = (state: LIMIT_STATE): React.ReactNode => {\n  switch (state) {\n    case LIMIT_STATE.ERROR:\n      return <RedExclamationCircleIcon />;\n    case LIMIT_STATE.WARN:\n      return <YellowExclamationTriangleIcon />;\n    default:\n      return null;\n  }\n};\n\nconst getResourceToWatch = (model: K8sKind, namespace: string, fieldSelector: string) => ({\n  isList: true,\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  fieldSelector,\n  namespace,\n});\n\nexport const LimitsBody: React.FC<LimitsBodyProps> = ({\n  limitState,\n  requestedState,\n  total,\n  limit,\n  current,\n  available,\n  requested,\n}) => {\n  const { t } = useTranslation();\n  return (\n    ((!!limitState && limitState !== LIMIT_STATE.OK) ||\n      (!!requestedState && requestedState !== LIMIT_STATE.OK)) && (\n      <ul className=\"co-utilization-card-popover__consumer-list\">\n        <Status value={total}>{t('console-shared~Total capacity')}</Status>\n        <Status value={limit} icon={getLimitIcon(limitState)}>\n          {t('console-shared~Total limit')}\n        </Status>\n        <Status value={current}>{t('console-shared~Current utilization')}</Status>\n        <Status value={available}>{t('console-shared~Current available capacity')}</Status>\n        <Status value={requested} icon={getLimitIcon(requestedState)}>\n          {t('console-shared~Total requested')}\n        </Status>\n      </ul>\n    )\n  );\n};\n\nexport const PopoverBody = withDashboardResources<DashboardItemProps & PopoverBodyProps>(\n  React.memo(\n    ({\n      humanize,\n      consumers,\n      namespace,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      prometheusResults,\n      isOpen,\n      description,\n      children,\n    }) => {\n      const { t } = useTranslation();\n      const [currentConsumer, setCurrentConsumer] = React.useState(consumers[0]);\n      const activePerspective = useActivePerspective()[0];\n      const canAccessMonitoring =\n        useFlag(FLAGS.CAN_GET_NS) && !!window.SERVER_FLAGS.prometheusBaseURL;\n      const { query, model, metric, fieldSelector } = currentConsumer;\n      const k8sResource = React.useMemo(\n        () => (isOpen ? getResourceToWatch(model, namespace, fieldSelector) : null),\n        [fieldSelector, isOpen, model, namespace],\n      );\n      const [consumerData, consumerLoaded, consumersLoadError] = useK8sWatchResource<\n        K8sResourceCommon[]\n      >(k8sResource);\n      React.useEffect(() => {\n        if (!isOpen) {\n          return () => {};\n        }\n        watchPrometheus(query, namespace);\n        return () => {\n          stopWatchPrometheusQuery(query);\n        };\n      }, [query, stopWatchPrometheusQuery, watchPrometheus, namespace, isOpen]);\n\n      const top5Data = [];\n\n      const [data, error] = getPrometheusQueryResponse(prometheusResults, query);\n      const bodyData = getInstantVectorStats(data, metric);\n\n      if (k8sResource && consumerLoaded && !consumersLoadError) {\n        for (const d of bodyData) {\n          const consumerExists = consumerData.some(\n            (consumer) =>\n              getName(consumer) === d.metric[metric] &&\n              (model.namespaced ? getNamespace(consumer) === d.metric.namespace : true),\n          );\n          if (consumerExists) {\n            top5Data.push({ ...d, y: humanize(d.y).string });\n          }\n          if (top5Data.length === 5) {\n            break;\n          }\n        }\n      }\n\n      const monitoringParams = React.useMemo(() => {\n        const params = new URLSearchParams();\n        params.set('query0', currentConsumer.query);\n        return params;\n      }, [currentConsumer.query]);\n\n      const dropdownItems = React.useMemo(\n        () =>\n          consumers.reduce((items, curr) => {\n            items[referenceForModel(curr.model)] = t('console-shared~By {{label}}', {\n              label: curr.model.labelKey ? t(curr.model.labelKey) : curr.model.label,\n            });\n            return items;\n          }, {}),\n        [consumers, t],\n      );\n\n      const onDropdownChange = React.useCallback(\n        (key) => setCurrentConsumer(consumers.find((c) => referenceForModel(c.model) === key)),\n        [consumers],\n      );\n\n      const monitoringURL =\n        canAccessMonitoring && activePerspective === 'admin'\n          ? `/monitoring/query-browser?${monitoringParams.toString()}`\n          : `/dev-monitoring/ns/${namespace}/metrics?${monitoringParams.toString()}`;\n\n      let body: React.ReactNode;\n      if (error || consumersLoadError) {\n        body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n      } else if (!consumerLoaded || !data) {\n        body = (\n          <ul className=\"co-utilization-card-popover__consumer-list\">\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n          </ul>\n        );\n      } else {\n        body = (\n          <>\n            <ul\n              className=\"co-utilization-card-popover__consumer-list\"\n              aria-label={t('console-shared~Top consumer by {{label}}', { label: model.label })}\n            >\n              {top5Data &&\n                top5Data.map((item) => {\n                  const title = String(item.x);\n                  return (\n                    <ListItem key={title} value={item.y}>\n                      <Link\n                        className=\"co-utilization-card-popover__consumer-name\"\n                        to={resourcePathFromModel(model, title, item.metric.namespace)}\n                      >\n                        {title}\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n            </ul>\n            <Link to={monitoringURL}>{t('console-shared~View more')}</Link>\n          </>\n        );\n      }\n\n      return (\n        <div className=\"co-utilization-card-popover__body\">\n          {description && (\n            <div className=\"co-utilization-card-popover__description\">{description}</div>\n          )}\n          {children}\n          <div className=\"co-utilization-card-popover__title\">\n            {consumers.length === 1\n              ? t('console-shared~Top {{label}} consumers', {\n                  label: currentConsumer.model.label.toLowerCase(),\n                })\n              : t('console-shared~Top consumers')}\n          </div>\n          {consumers.length > 1 && (\n            <Dropdown\n              className=\"co-utilization-card-popover__dropdown\"\n              id=\"consumer-select\"\n              name=\"selectConsumerType\"\n              aria-label={t('console-shared~Select consumer type')}\n              items={dropdownItems}\n              onChange={onDropdownChange}\n              selectedKey={referenceForModel(model)}\n            />\n          )}\n          {body}\n        </div>\n      );\n    },\n  ),\n);\n\nconst ListItem: React.FC<ListItemProps> = ({ children, value }) => (\n  <li className=\"co-utilization-card-popover__consumer-item\">\n    {children}\n    <div className=\"co-utilization-card-popover__consumer-value\">{value}</div>\n  </li>\n);\n\ntype ListItemProps = {\n  value: React.ReactText;\n};\n\ntype LimitsBodyProps = {\n  limitState?: LIMIT_STATE;\n  requestedState?: LIMIT_STATE;\n  limit?: string;\n  requested?: string;\n  available?: string;\n  total?: string;\n  current: string;\n};\n\ntype PopoverProps = {\n  humanize: Humanize;\n  consumers: { model: K8sKind; query: string; metric: string; fieldSelector?: string }[];\n  namespace?: string;\n  description?: string;\n};\n\ntype PopoverBodyProps = PopoverProps & {\n  topConsumers?: DataPoint[][];\n  error?: boolean;\n  isOpen: boolean;\n};\n\nexport type ConsumerPopoverProps = PopoverProps & {\n  position?: PopoverPosition;\n  title: string;\n  current: string;\n};\n","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\nimport { useTranslation } from 'react-i18next';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport {\n  DashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem,\n  SubsystemHealth,\n  OperatorRowProps,\n  LazyLoader,\n} from '@console/plugin-sdk';\nimport {\n  ResolvedExtension,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem as DynamicDashboardsOverviewHealthResourceSubsystem,\n  WatchK8sResources,\n  WatchK8sResults,\n  ResourcesObject,\n} from '@console/dynamic-plugin-sdk';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { OperatorsSection } from '@console/shared/src/components/dashboard/status-card/OperatorStatusBody';\nimport {\n  getOperatorsHealthState,\n  getMostImportantStatuses,\n} from '@console/shared/src/components/dashboard/status-card/state-utils';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { K8sKind } from '../../../../module/k8s';\nimport { FirehoseResourcesResult, AsyncComponent, resourcePath } from '../../../utils';\nimport { useK8sWatchResources } from '../../../utils/k8s-watch-hook';\nimport { withDashboardResources, DashboardItemProps } from '../../with-dashboard-resources';\nimport { uniqueResource } from './utils';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { ClusterDashboardContext } from './context';\n\nconst OperatorRow: React.FC<\n  OperatorRowProps & {\n    LoadingComponent: () => JSX.Element;\n    Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n    key: string;\n    isResolved: boolean;\n  }\n> = ({ operatorStatus, isResolved, key, Component, LoadingComponent }) => {\n  const ResolvedComponent = Component as React.ComponentType<OperatorRowProps>;\n  return isResolved ? (\n    <ResolvedComponent key={key} operatorStatus={operatorStatus} />\n  ) : (\n    <AsyncComponent\n      key={operatorStatus.operators[0].metadata.uid}\n      operatorStatus={operatorStatus}\n      loader={Component}\n      LoadingComponent={LoadingComponent}\n    />\n  );\n};\n\nexport const OperatorsPopup: React.FC<OperatorsPopupProps> = ({\n  resources,\n  operatorExtensions,\n  dynamicOperatorSubsystems,\n}) => {\n  const { t } = useTranslation();\n  const sections = [\n    ...operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved={false}\n          />\n        </StackItem>\n      );\n    }),\n    ...dynamicOperatorSubsystems.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved\n          />\n        </StackItem>\n      );\n    }),\n  ].reverse();\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        {t(\n          'public~Operators create, configure, and manage applications by extending the Kubernetes API.',\n        )}\n      </StackItem>\n      {sections}\n    </Stack>\n  );\n};\n\nexport const OperatorHealthItem = withDashboardResources<OperatorHealthItemProps>(\n  ({\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    operatorExtensions,\n    dynamicOperatorSubsystems,\n  }) => {\n    const { t } = useTranslation();\n    React.useEffect(() => {\n      operatorExtensions.forEach((o, index) =>\n        o.resources.forEach((r) => watchK8sResource(uniqueResource(r, index))),\n      );\n      return () => {\n        operatorExtensions.forEach((o, index) =>\n          o.resources.forEach((r) => stopWatchK8sResource(uniqueResource(r, index))),\n        );\n      };\n    }, [watchK8sResource, stopWatchK8sResource, operatorExtensions]);\n\n    const healthStatuses = operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop] || {};\n        return acc;\n      }, {});\n      if (\n        Object.keys(operatorResources).some((resource) => operatorResources[resource].loadError)\n      ) {\n        return { health: HealthState.NOT_AVAILABLE };\n      }\n      if (Object.keys(operatorResources).some((resource) => !operatorResources[resource].loaded)) {\n        return { health: HealthState.LOADING };\n      }\n      const operatorStatuses = o.getOperatorsWithStatuses(operatorResources);\n      if (!operatorStatuses.length) {\n        return { health: HealthState.OK };\n      }\n      const importantStatuses = getMostImportantStatuses(operatorStatuses);\n      return {\n        health: importantStatuses[0].status.health,\n        count: importantStatuses.length,\n      };\n    });\n\n    const operatorsHealth = getOperatorsHealthState(healthStatuses, t);\n\n    return (\n      <HealthItem\n        title={t('public~Operators')}\n        state={operatorsHealth.health}\n        details={operatorsHealth.detailMessage}\n        popupTitle={t('public~Operator status')}\n      >\n        <OperatorsPopup\n          resources={resources}\n          operatorExtensions={operatorExtensions}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      </HealthItem>\n    );\n  },\n);\n\nexport const URLHealthItem = withDashboardResources<URLHealthItemProps>(\n  ({\n    watchURL,\n    stopWatchURL,\n    urlResults,\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    subsystem,\n    models,\n  }) => {\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      watchURL(\n        subsystem.url,\n        (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          ? (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          : undefined,\n      );\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        stopWatchURL(subsystem.url);\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [watchURL, stopWatchURL, watchK8sResource, stopWatchK8sResource, subsystem, modelExists]);\n\n    const healthResult = urlResults.getIn([subsystem.url, 'data']);\n    const healthResultError = urlResults.getIn([subsystem.url, 'loadError']);\n\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(healthResult, healthResultError, k8sResult);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  healthResult={healthResult}\n                  healthResultError={healthResultError}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const PrometheusHealthItem = withDashboardResources<PrometheusHealthItemProps>(\n  ({\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    subsystem,\n    models,\n  }) => {\n    const { t } = useTranslation();\n    const { infrastructure } = React.useContext(ClusterDashboardContext);\n\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      subsystem.queries.forEach((q) => watchPrometheus(q));\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        subsystem.queries.forEach((q) => stopWatchPrometheusQuery(q));\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [\n      watchK8sResource,\n      stopWatchK8sResource,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      subsystem,\n      modelExists,\n    ]);\n\n    const queryResults = React.useMemo(\n      () =>\n        subsystem.queries.map((q) => {\n          const [response, error] = getPrometheusQueryResponse(prometheusResults, q);\n          return {\n            response,\n            error,\n          };\n        }),\n      [prometheusResults, subsystem.queries],\n    );\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(queryResults, t, k8sResult, infrastructure);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupClassname={subsystem.popupClassname}\n        popupKeepOnOutsideClick={subsystem.popupKeepOnOutsideClick}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  responses={queryResults}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const ResourceHealthItem: React.FC<ResourceHealthItemProps> = ({ subsystem, namespace }) => {\n  const { t } = useTranslation();\n\n  const { title, resources, healthHandler, popupComponent, popupTitle } = subsystem;\n\n  const resourcesWithNamespace: WatchK8sResources<ResourcesObject> = React.useMemo(() => {\n    return {\n      ...resources,\n      ...(resources.imageManifestVuln && {\n        imageManifestVuln: { ...resources.imageManifestVuln, namespace },\n      }),\n    };\n  }, [resources, namespace]);\n\n  const resourcesResult: WatchK8sResults<ResourcesObject> = useK8sWatchResources(\n    resourcesWithNamespace,\n  );\n  const healthState: SubsystemHealth = healthHandler(resourcesResult, t);\n\n  return (\n    <HealthItem\n      title={title}\n      state={healthState.state}\n      details={healthState.message}\n      popupTitle={popupTitle}\n    >\n      {popupComponent && resourcesResult && (\n        <AsyncComponent loader={popupComponent} {...resourcesResult} namespace={namespace} />\n      )}\n    </HealthItem>\n  );\n};\n\ntype OperatorHealthItemProps = DashboardItemProps & {\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n\ntype URLHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthURLSubsystem<any>['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem<any>>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype PrometheusHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthPrometheusSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype ResourceHealthItemProps = {\n  subsystem:\n    | DashboardsOverviewHealthResourceSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthResourceSubsystem>['properties'];\n  namespace?: string;\n};\n\ntype OperatorsPopupProps = {\n  resources: FirehoseResourcesResult;\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum ProjectQueries {\n  CPU_USAGE = 'CPU_USAGE',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  MEMORY_USAGE = 'MEMORY_USAGE',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  POD_COUNT = 'POD_COUNT',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_FILESYSTEM = 'PODS_BY_FILESYSTEM',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  FILESYSTEM_USAGE = 'FILESYSTEM_USAGE',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n}\n\nconst queries = {\n  [ProjectQueries.CPU_USAGE]: _.template(\n    `namespace:container_cpu_usage:sum{namespace='<%= project %>'}`,\n  ),\n  [ProjectQueries.CPU_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"cpu\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_USAGE]: _.template(\n    `sum(container_memory_working_set_bytes{namespace='<%= project %>',container=\"\",pod!=\"\"}) BY (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"memory\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.POD_COUNT]: _.template(\n    `count(kube_running_pod_ready{namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.FILESYSTEM_USAGE]: _.template(\n    `sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_IN_UTILIZATION]: _.template(\n    `sum(rate(container_network_receive_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_OUT_UTILIZATION]: _.template(\n    `sum(rate(container_network_transmit_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n};\n\nconst top25Queries = {\n  [ProjectQueries.PODS_BY_CPU]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_MEMORY]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: _.template(\n    `topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n};\n\nexport const getMultilineQueries = (\n  project: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [ProjectQueries.NETWORK_UTILIZATION]: [\n    {\n      query: queries[ProjectQueries.NETWORK_IN_UTILIZATION]({ project }),\n      desc: 'in',\n    },\n    {\n      query: queries[ProjectQueries.NETWORK_OUT_UTILIZATION]({ project }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getUtilizationQueries = (project: string) => ({\n  [ProjectQueries.CPU_USAGE]: queries[ProjectQueries.CPU_USAGE]({ project }),\n  [ProjectQueries.CPU_REQUESTS]: queries[ProjectQueries.CPU_REQUESTS]({ project }),\n  [ProjectQueries.MEMORY_USAGE]: queries[ProjectQueries.MEMORY_USAGE]({ project }),\n  [ProjectQueries.MEMORY_REQUESTS]: queries[ProjectQueries.MEMORY_REQUESTS]({ project }),\n  [ProjectQueries.POD_COUNT]: queries[ProjectQueries.POD_COUNT]({ project }),\n  [ProjectQueries.FILESYSTEM_USAGE]: queries[ProjectQueries.FILESYSTEM_USAGE]({\n    project,\n  }),\n});\n\nexport const getTopConsumerQueries = (project: string) => ({\n  [ProjectQueries.PODS_BY_CPU]: top25Queries[ProjectQueries.PODS_BY_CPU]({ project }),\n  [ProjectQueries.PODS_BY_MEMORY]: top25Queries[ProjectQueries.PODS_BY_MEMORY]({ project }),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: top25Queries[ProjectQueries.PODS_BY_FILESYSTEM]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: top25Queries[ProjectQueries.PODS_BY_NETWORK_IN]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: top25Queries[ProjectQueries.PODS_BY_NETWORK_OUT]({\n    project,\n  }),\n});\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum OverviewQuery {\n  MEMORY_TOTAL = 'MEMORY_TOTAL',\n  MEMORY_UTILIZATION = 'MEMORY_UTILIZATION',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  CPU_UTILIZATION = 'CPU_UTILIZATION',\n  CPU_TOTAL = 'CPU_TOTAL',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  STORAGE_UTILIZATION = 'STORAGE_UTILIZATION',\n  STORAGE_TOTAL = 'STORAGE_TOTAL',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_STORAGE = 'PODS_BY_STORAGE',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  NODES_BY_CPU = 'NODES_BY_CPU',\n  NODES_BY_MEMORY = 'NODES_BY_MEMORY',\n  NODES_BY_STORAGE = 'NODES_BY_STORAGE',\n  NODES_BY_NETWORK_IN = 'NODES_BY_NETWORK_IN',\n  NODES_BY_NETWORK_OUT = 'NODES_BY_NETWORK_OUT',\n  NODES_BY_PODS = 'NODES_BY_PODS',\n  PROJECTS_BY_CPU = 'PROJECTS_BY_CPU',\n  PROJECTS_BY_MEMORY = 'PROJECTS_BY_MEMORY',\n  PROJECTS_BY_STORAGE = 'PROJECTS_BY_STORAGE',\n  PROJECTS_BY_NETWORK_IN = 'PROJECTS_BY_NETWORK_IN',\n  PROJECTS_BY_NETWORK_OUT = 'PROJECTS_BY_NETWORK_OUT',\n  PROJECTS_BY_PODS = 'PROJECTS_BY_PODS',\n  POD_UTILIZATION = 'POD_UTILIZATION',\n}\n\nconst top25Queries = {\n  [OverviewQuery.PODS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        avg_over_time(instance:node_cpu:rate:sum[5m])\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum by (instance) (max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"}))\n          -\n          sum by (instance) (max by (device, instance) (node_filesystem_avail_bytes{device=~\"/.*\"}))\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(avg_over_time(kubelet_running_pods[5m])) BY (node)\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_receive_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_transmit_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n\n  [OverviewQuery.PROJECTS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        count by (namespace) (\n            topk without(uid) (1, kube_running_pod_ready)\n            *\n            ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n          *\n          on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})))\n        ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n};\n\nconst overviewQueries = {\n  [OverviewQuery.MEMORY_TOTAL]: _.template(\n    `\n      sum(\n        node_memory_MemTotal_bytes\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_UTILIZATION]: _.template(\n    `\n      sum(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"memory\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          instance:node_network_transmit_bytes_excluding_lo:rate1m\n          +\n          instance:node_network_receive_bytes_excluding_lo:rate1m\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_UTILIZATION]: _.template(\n    `\n      sum(\n        1 - sum without (mode) (rate(node_cpu_seconds_total{mode=~\"idle|iowait|steal\"}[2m]))\n        *\n        on(instance) group_left() (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\",\"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_TOTAL]: _.template(\n    `\n      sum(\n        kube_node_status_capacity{resource=\"cpu\",unit=\"core\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"cpu\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n          -\n          max by (device, instance) (node_filesystem_free_bytes{device=~\"/.*\"})\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_TOTAL]: _.template(\n    `\n      sum(\n        max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.POD_UTILIZATION]: _.template(\n    `\n      count(\n        (\n          topk without(uid) (1, kube_running_pod_ready)\n          *\n          ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n        )\n        *\n        on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_IN_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_receive_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_OUT_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_transmit_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n};\n\nexport const getMultilineQueries = (\n  nodeType: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [OverviewQuery.NETWORK_UTILIZATION]: [\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_IN_UTILIZATION]({ nodeType }),\n      desc: 'in',\n    },\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_OUT_UTILIZATION]({ nodeType }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getTop25ConsumerQueries = (nodeType: string) => ({\n  [OverviewQuery.PODS_BY_CPU]: top25Queries[OverviewQuery.PODS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PODS_BY_MEMORY]: top25Queries[OverviewQuery.PODS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PODS_BY_STORAGE]: top25Queries[OverviewQuery.PODS_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PODS_BY_NETWORK_IN]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PODS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_CPU]: top25Queries[OverviewQuery.NODES_BY_CPU]({ nodeType }),\n  [OverviewQuery.NODES_BY_MEMORY]: top25Queries[OverviewQuery.NODES_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.NODES_BY_STORAGE]: top25Queries[OverviewQuery.NODES_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.NODES_BY_PODS]: top25Queries[OverviewQuery.NODES_BY_PODS]({ nodeType }),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: top25Queries[OverviewQuery.NODES_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: top25Queries[OverviewQuery.NODES_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_CPU]: top25Queries[OverviewQuery.PROJECTS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: top25Queries[OverviewQuery.PROJECTS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: top25Queries[OverviewQuery.PROJECTS_BY_STORAGE]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_PODS]: top25Queries[OverviewQuery.PROJECTS_BY_PODS]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n});\n\nexport const getUtilizationQueries = (nodeType: string) => ({\n  [OverviewQuery.CPU_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.CPU_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.CPU_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.CPU_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.MEMORY_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.MEMORY_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.MEMORY_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.MEMORY_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.STORAGE_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.STORAGE_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.STORAGE_TOTAL]({ nodeType }),\n  },\n  [OverviewQuery.POD_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.POD_UTILIZATION]({ nodeType }),\n  },\n});\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GaugeChart } from '@console/internal/components/graphs/gauge';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ResourceQuotaChartsProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n\nconst ResourceQuotaCharts = ({ resourceQuota }: ResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(resourceQuota.status?.hard ?? {}).map((resourceName) => {\n    const hard = resourceQuota.status.hard[resourceName];\n    const used = resourceQuota.status.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({ resourceName, used, hard });\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <GaugeChart\n          data={{\n            x: `${percent}%`,\n            y: percent,\n          }}\n          thresholds={[{ value: 90 }, { value: 101 }]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ResourceQuotaCharts;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getUsedPercentage, getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype AppliedClusterResourceQuotaChartsProps = {\n  appliedClusterResourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n\nconst AppliedClusterResourceQuotaCharts = ({\n  appliedClusterResourceQuota,\n  namespace,\n}: AppliedClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const nsQuotas = appliedClusterResourceQuota.status?.namespaces?.find(\n    (ns) => ns.namespace === namespace,\n  );\n\n  const charts = Object.keys(nsQuotas?.status?.hard ?? {}).map((resourceName) => {\n    const clusterHard = appliedClusterResourceQuota.status.total?.hard?.[resourceName];\n    const clusterUsed = appliedClusterResourceQuota.status.total?.used?.[resourceName];\n    const nsUsed = nsQuotas.status.used?.[resourceName];\n    const clusterUsage = getUsedPercentage(clusterHard, clusterUsed);\n    const unused = 100 - clusterUsage;\n\n    const { label, percent: nsUsage } = getLabelAndUsage({\n      resourceName,\n      used: nsUsed,\n      hard: clusterHard,\n    });\n\n    const percentOtherNamespaces = clusterUsage - nsUsage;\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Namespace',\n              y: nsUsage,\n            },\n            {\n              x: 'Other namespaces',\n              y: percentOtherNamespaces,\n            },\n            {\n              x: 'Unused',\n              y: unused,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default AppliedClusterResourceQuotaCharts;\n","/* eslint-disable camelcase */\nimport * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport {\n  chart_color_black_100,\n  chart_color_green_300,\n  chart_color_green_500,\n  chart_color_gold_400,\n  chart_color_gold_500,\n} from '@patternfly/react-tokens';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { useRefWidth } from '../utils';\nimport { DataPoint } from '.';\n\nexport const DonutChart: React.FC<DonutChartProps> = ({\n  data,\n  query = '',\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  ariaDescription,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || t('No data');\n\n  const labels = ({ datum: { x, y } }) => t('public~{{x}}: {{y}}%', { x, y });\n\n  const namespaceData = data.filter((datum) => datum.x === 'Namespace');\n\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonut\n          ariaTitle={ariaChartTitle || title}\n          ariaDesc={ariaDescription}\n          data={data}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          labels={labels}\n          width={width}\n          subTitle={secondaryTitleText}\n          colorScale={\n            namespaceData[0]?.y === 100\n              ? [\n                  chart_color_gold_400.value,\n                  chart_color_gold_500.value,\n                  chart_color_black_100.value,\n                ]\n              : [\n                  chart_color_green_300.value,\n                  chart_color_green_500.value,\n                  chart_color_black_100.value,\n                ]\n          }\n          title={labelText}\n        />\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\ntype DonutChartProps = {\n  data: DataPoint[];\n  label: string;\n  query?: string;\n  secondaryTitle?: string;\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  ariaDescription?: string;\n  usedLabel?: string;\n  className?: string;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\nimport { YellowExclamationTriangleIcon } from '../../status';\n\nimport './quota-summary.scss';\n\ntype QuotaSummaryProps = {\n  hard: { [key: string]: string };\n  used: { [key: string]: string };\n};\n\nconst QuotaSummary = ({ hard, used }: QuotaSummaryProps): JSX.Element => {\n  const { t } = useTranslation();\n  const resourcesAtQuota = Object.keys(hard || {}).reduce(\n    (acc, resource) => (getUsedPercentage(hard[resource], used?.[resource]) >= 100 ? acc + 1 : acc),\n    0,\n  );\n\n  return (\n    <div className=\"co-resource-quota__summary\">\n      {t('console-shared~{{count}} resource', { count: Object.keys(hard || {}).length })}\n      {', '}\n      {resourcesAtQuota > 0 ? (\n        <>\n          <YellowExclamationTriangleIcon />{' '}\n          {t('console-shared~{{count}} resource reached quota', { count: resourcesAtQuota })}\n        </>\n      ) : (\n        t('console-shared~none are at quota')\n      )}\n    </div>\n  );\n};\n\nexport default QuotaSummary;\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { SquareIcon } from '@patternfly/react-icons/dist/esm/icons/square-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sResourceKindReference } from '../module/k8s';\nimport { ResourceLink } from './utils/resource-link';\nimport { Timestamp } from './utils/timestamp';\nimport { EmptyBox } from './utils/status-box';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nconst ImageStreamTimelineItem: React.FC<ImageStreamTimelineItemProps> = ({\n  tag,\n  imageStreamName,\n  imageStreamNamespace,\n  linkToTag,\n}) => {\n  const referenceAndSHA = _.split(tag.dockerImageReference, '@');\n  return (\n    <>\n      <li>\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__circle-icon\">\n            <CircleIcon />\n          </span>\n          <div className=\"co-images-stream-tag-timeline__timestamp\">\n            <Timestamp timestamp={tag.created} simple={true} />\n          </div>\n        </div>\n\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__line\" />\n          <div className=\"co-images-stream-tag-timeline__info\">\n            <ResourceLink\n              kind={ImageStreamTagsReference}\n              name={getImageStreamTagName(imageStreamName, tag.tag)}\n              namespace={imageStreamNamespace}\n              title={tag.tag}\n              linkTo={linkToTag}\n            />\n            <div className=\"co-break-all\">from {referenceAndSHA[0]}</div>\n            <div className=\"co-break-all\">{referenceAndSHA[1]}</div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n\n// check is the compared tag version, is the latest version in a sorted array of all tag versions\nconst isTagVersionLatest = (\n  comparedTag: string,\n  comparedTagPosition: number,\n  orderedTagArray: TagMeta[],\n) => {\n  return (\n    comparedTagPosition ===\n    _.findIndex(orderedTagArray, (orderedTag: TagMeta) => orderedTag.tag === comparedTag)\n  );\n};\n\nexport const ImageStreamTimeline: React.FC<ImageStreamTimelineProps> = ({\n  imageStreamTags,\n  imageStreamName,\n  imageStreamNamespace,\n}) => {\n  const { t } = useTranslation();\n  if (!_.some(imageStreamTags, 'items')) {\n    return <EmptyBox label={t('public~Images')} />;\n  }\n  const tagsArray: TagMeta[] = _.flatten(\n    _.map(imageStreamTags, ({ tag, items }) => {\n      return _.map(items, ({ created, dockerImageReference }) => ({\n        tag,\n        created,\n        dockerImageReference,\n      }));\n    }),\n  );\n  const orderedTagArray = _.orderBy(tagsArray, ['created'], ['desc']);\n  const timeline = _.map(orderedTagArray, (tag: TagMeta, i: number) => {\n    return (\n      <ImageStreamTimelineItem\n        key={tag.dockerImageReference}\n        tag={tag}\n        imageStreamName={imageStreamName}\n        imageStreamNamespace={imageStreamNamespace}\n        linkToTag={isTagVersionLatest(tag.tag, i, orderedTagArray)}\n      />\n    );\n  });\n\n  return (\n    <>\n      <ul className=\"co-images-stream-tag-timeline\">\n        {timeline}\n        <div>\n          <span className=\"co-images-stream-tag-timeline__square-icon\">\n            <SquareIcon />\n          </span>\n        </div>\n      </ul>\n    </>\n  );\n};\n\ntype ImageStreamTimelineItemProps = {\n  tag: TagMeta;\n  imageStreamName: string;\n  imageStreamNamespace: string;\n  linkToTag: boolean;\n};\n\ntype TagMeta = {\n  created: string;\n  tag: string;\n  dockerImageReference: string;\n};\n\ntype ImageStreamTimelineProps = {\n  imageStreamTags: any[];\n  imageStreamName: string;\n  imageStreamNamespace: string;\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../../module/k8s';\n\nexport const ClusterDashboardContext = React.createContext<ClusterDashboardContext>({\n  infrastructureLoaded: true,\n  infrastructureError: null,\n});\n\n// eslint-disable-next-line no-redeclare\ntype ClusterDashboardContext = {\n  infrastructure?: K8sResourceKind;\n  infrastructureLoaded: boolean;\n  infrastructureError: any;\n};\n","import { BadgeType, getBadgeFromType } from '@console/shared';\nimport {\n  isGAVersionInstalled,\n  isTriggersGAVersion,\n  usePipelineOperatorVersion,\n} from '../components/pipelines/utils/pipeline-operator';\n\nconst getOSPTechPreviewBadge = (installedGAVersion: boolean) =>\n  installedGAVersion ? null : getBadgeFromType(BadgeType.TECH);\n\nexport const usePipelineTechPreviewBadge = (namespace: string) => {\n  const operator = usePipelineOperatorVersion(namespace);\n  if (!operator) return null;\n  return getOSPTechPreviewBadge(isGAVersionInstalled(operator));\n};\n\nexport const useTriggersTechPreviewBadge = (namespace: string) => {\n  const operator = usePipelineOperatorVersion(namespace);\n  if (!operator) return null;\n  return getOSPTechPreviewBadge(isTriggersGAVersion(operator));\n};\n","import { TFunction } from 'i18next';\nimport { HealthChecksProbeType, RequestType, HealthCheckFormProbe } from './health-checks-types';\n\nexport const getHealthChecksProbeConfig = (probe: string, t: TFunction) => {\n  switch (probe) {\n    case HealthChecksProbeType.ReadinessProbe: {\n      return {\n        formTitle: t('devconsole~Readiness probe'),\n        formSubtitle: t(\n          \"devconsole~A readiness probe checks if the Container is ready to handle requests. A failed readiness probe means that a Container should not receive any traffic from a proxy, even if it's running.\",\n        ),\n      };\n    }\n    case HealthChecksProbeType.LivenessProbe: {\n      return {\n        formTitle: t('devconsole~Liveness probe'),\n        formSubtitle: t(\n          'devconsole~A liveness probe checks if the Container is still running. If the liveness probe fails the Container is killed.',\n        ),\n      };\n    }\n    case HealthChecksProbeType.StartupProbe: {\n      return {\n        formTitle: t('devconsole~Startup probe'),\n        formSubtitle: t(\n          'devconsole~A startup probe checks if the application within the Container is started. If the startup probe fails the Container is killed.',\n        ),\n      };\n    }\n    default:\n      return undefined;\n  }\n};\n\nexport const healthChecksDefaultValues: HealthCheckFormProbe = {\n  showForm: false,\n  enabled: false,\n  modified: false,\n  data: {\n    failureThreshold: '3',\n    requestType: RequestType.HTTPGET,\n    httpGet: {\n      scheme: undefined,\n      path: '/',\n      port: '8080',\n      httpHeaders: [],\n    },\n    tcpSocket: {\n      port: '8080',\n    },\n    exec: { command: [''] },\n    initialDelaySeconds: '0',\n    periodSeconds: '10',\n    timeoutSeconds: '1',\n    successThreshold: '1',\n  },\n};\n\nexport const healthChecksProbeInitialData = {\n  readinessProbe: healthChecksDefaultValues,\n  livenessProbe: healthChecksDefaultValues,\n  startupProbe: healthChecksDefaultValues,\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { FirehoseResourcesResult } from '@console/internal/components/utils';\nimport { GetOperatorsWithStatuses, LazyLoader, OperatorRowProps } from '@console/plugin-sdk';\nimport { getMostImportantStatuses } from './state-utils';\nimport { HealthState } from './states';\nimport StatusItem, { StatusPopupSection } from './StatusPopup';\n\nimport './operator-body.scss';\n\nexport const OperatorsSection: React.FC<OperatorsSectionProps> = ({\n  resources,\n  getOperatorsWithStatuses,\n  title,\n  linkTo,\n  Row,\n  Component,\n  isResolved,\n}) => {\n  const { t } = useTranslation();\n  const error = _.values(resources).some((r) => r.loadError);\n  const operatorStatuses = getOperatorsWithStatuses(resources);\n  const sortedOperatorStatuses = getMostImportantStatuses(operatorStatuses).sort((a, b) =>\n    a.operators[0].metadata.name.localeCompare(b.operators[0].metadata.name),\n  );\n  const operatorsHealthy = sortedOperatorStatuses.every((o) => o.status.health === HealthState.OK);\n  const RowLoading = React.useCallback(() => <div className=\"co-status__operator-skeleton\" />, []);\n  if (!operatorStatuses.length) {\n    return null;\n  }\n\n  return (\n    <StatusPopupSection\n      firstColumn={\n        <>\n          <span>{title}</span>\n          <span className=\"text-secondary co-status__operator-detail\">\n            {' '}\n            {t('console-shared~({{operatorStatusLength}} installed)', {\n              operatorStatusLength: operatorStatuses.length,\n            })}\n          </span>\n        </>\n      }\n      secondColumn={t('console-shared~Status')}\n    >\n      {error ? (\n        <div className=\"text-secondary\">{t('console-shared~Not available')}</div>\n      ) : (\n        !operatorsHealthy &&\n        sortedOperatorStatuses.map((operatorStatus) => (\n          <Row\n            key={operatorStatus.operators[0].metadata.uid}\n            Component={Component}\n            operatorStatus={operatorStatus}\n            LoadingComponent={RowLoading}\n            isResolved={isResolved}\n          />\n        ))\n      )}\n      <StatusItem\n        value={t('console-shared~All {{status}}', {\n          status: operatorStatuses[0].status.title.toLowerCase(),\n        })}\n        icon={operatorStatuses[0].status.icon}\n      >\n        <Link to={linkTo}>{t('console-shared~View all')}</Link>\n      </StatusItem>\n    </StatusPopupSection>\n  );\n};\n\ntype OperatorsSectionProps = {\n  resources: FirehoseResourcesResult;\n  getOperatorsWithStatuses: GetOperatorsWithStatuses;\n  title: string;\n  linkTo: string;\n  Row: React.ComponentType<\n    OperatorRowProps & {\n      LoadingComponent: () => JSX.Element;\n      Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n      key: string;\n      isResolved: boolean;\n    }\n  >;\n  isResolved: boolean;\n  Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useExtensions,\n  DashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthOperator,\n} from '@console/plugin-sdk';\nimport {\n  DashboardsOverviewHealthSubsystem as DynamicDashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem as isDynamicDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem as isDynamicDashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem as isDynamicDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthURLSubsystem,\n  isResolvedDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthResourceSubsystem,\n  isResolvedDashboardsOverviewHealthOperator,\n  ResolvedExtension,\n  useResolvedExtensions,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport { Gallery, GalleryItem, Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport { BlueArrowCircleUpIcon, FLAGS, useCanClusterUpgrade } from '@console/shared';\n\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport AlertItem, {\n  StatusItem,\n} from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '../../../monitoring/utils';\nimport {\n  ClusterVersionKind,\n  referenceForModel,\n  hasAvailableUpdates,\n  K8sKind,\n  ObjectMetadata,\n} from '../../../../module/k8s';\nimport { ClusterVersionModel } from '../../../../models';\nimport { RootState } from '../../../../redux';\nimport {\n  OperatorHealthItem,\n  PrometheusHealthItem,\n  URLHealthItem,\n  ResourceHealthItem,\n} from './health-item';\nimport { useK8sWatchResource } from '../../../utils/k8s-watch-hook';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { useNotificationAlerts } from '@console/shared/src/hooks/useNotificationAlerts';\n\nconst filterSubsystems = (\n  subsystems: (\n    | DashboardsOverviewHealthSubsystem\n    | ResolvedExtension<DynamicDashboardsOverviewHealthSubsystem>\n  )[],\n  k8sModels: ImmutableMap<string, K8sKind>,\n) =>\n  subsystems.filter((s) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(s) ||\n      isDashboardsOverviewHealthPrometheusSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthURLSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthPrometheusSubsystem(s)\n    ) {\n      const subsystem = s as\n        | DashboardsOverviewHealthPrometheusSubsystem\n        | DashboardsOverviewHealthURLSubsystem\n        | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>\n        | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem>;\n      return subsystem.properties.additionalResource &&\n        !subsystem.properties.additionalResource.optional\n        ? !!k8sModels.get(subsystem.properties.additionalResource.kind)\n        : true;\n    }\n    return true;\n  });\n\nconst cvResource: WatchK8sResource = {\n  kind: referenceForModel(ClusterVersionModel),\n  namespaced: false,\n  name: 'version',\n  isList: false,\n};\n\nexport const DashboardAlerts: React.FC<DashboardAlertsProps> = ({ labelSelector }) => {\n  const { t } = useTranslation();\n  const hasCVResource = useFlag(FLAGS.CLUSTER_VERSION);\n  const [alerts, , loadError] = useNotificationAlerts(labelSelector);\n  const [cv, cvLoaded] = useK8sWatchResource<ClusterVersionKind>(\n    hasCVResource ? cvResource : ({} as WatchK8sResource),\n  );\n  const canUpgrade = useCanClusterUpgrade();\n\n  const showClusterUpdate =\n    canUpgrade && hasCVResource && cvLoaded && hasAvailableUpdates(cv) && !labelSelector;\n  return (\n    <AlertsBody error={!_.isEmpty(loadError)}>\n      {showClusterUpdate && (\n        <StatusItem\n          key=\"clusterUpdate\"\n          Icon={BlueArrowCircleUpIcon}\n          message={t('public~A cluster version update is available')}\n        >\n          <Link to=\"/settings/cluster?showVersions\">{t('public~Update cluster')}</Link>\n        </StatusItem>\n      )}\n      {alerts.map((alert) => (\n        <AlertItem key={alertURL(alert, alert.rule.id)} alert={alert} />\n      ))}\n    </AlertsBody>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  k8sModels: state.k8s.getIn(['RESOURCES', 'models']),\n});\nexport const StatusCard = connect<StatusCardProps>(mapStateToProps)(({ k8sModels }) => {\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const [dynamicSubsystemExtensions] = useResolvedExtensions<\n    DynamicDashboardsOverviewHealthSubsystem\n  >(isDynamicDashboardsOverviewHealthSubsystem);\n\n  const subsystems = React.useMemo(() => {\n    const filteredSubsystems = filterSubsystems(\n      [...subsystemExtensions, ...dynamicSubsystemExtensions],\n      k8sModels,\n    );\n    return filteredSubsystems.map((e) => {\n      if (\n        isResolvedDashboardsOverviewHealthURLSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthPrometheusSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthResourceSubsystem(e)\n      ) {\n        const popup = e.properties.popupComponent\n          ? { popupComponent: () => Promise.resolve(e.properties.popupComponent) }\n          : {};\n        return {\n          ...e,\n          properties: {\n            ...e.properties,\n            ...popup,\n          },\n        };\n      }\n      return e;\n    });\n  }, [subsystemExtensions, dynamicSubsystemExtensions, k8sModels]);\n\n  const operatorSubsystemIndex = React.useMemo(\n    () =>\n      subsystems.findIndex(\n        (e) =>\n          isDashboardsOverviewHealthOperator(e) || isResolvedDashboardsOverviewHealthOperator(e),\n      ),\n    [subsystems],\n  );\n  const { t } = useTranslation();\n  const healthItems: { title: string; Component: React.ReactNode }[] = [];\n  subsystems.forEach((subsystem) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthURLSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <URLHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthPrometheusSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthPrometheusSubsystem(subsystem)\n    ) {\n      const { disallowedControlPlaneTopology } = subsystem.properties;\n      if (\n        disallowedControlPlaneTopology?.length &&\n        disallowedControlPlaneTopology.includes(window.SERVER_FLAGS.controlPlaneTopology)\n      ) {\n        return;\n      }\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <PrometheusHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthResourceSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthResourceSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <ResourceHealthItem subsystem={subsystem.properties} />,\n      });\n    }\n  });\n\n  if (operatorSubsystemIndex !== -1) {\n    const operatorSubsystems: DashboardsOverviewHealthOperator['properties'][] = [];\n    const dynamicOperatorSubsystems: ResolvedExtension<\n      DynamicDashboardsOverviewHealthOperator\n    >['properties'][] = [];\n    subsystems.forEach((e) => {\n      if (isResolvedDashboardsOverviewHealthOperator(e)) {\n        dynamicOperatorSubsystems.push(e.properties);\n      } else if (isDashboardsOverviewHealthOperator(e)) {\n        operatorSubsystems.push(e.properties);\n      }\n    });\n    healthItems.splice(operatorSubsystemIndex, 0, {\n      title: 'Operators',\n      Component: (\n        <OperatorHealthItem\n          operatorExtensions={operatorSubsystems}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      ),\n    });\n  }\n\n  return (\n    <Card\n      data-test-id=\"status-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to=\"/monitoring/alerts\" data-test=\"status-card-view-alerts\">\n                {t('public~View alerts')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      <HealthBody>\n        <Gallery className=\"co-overview-status__health\" hasGutter>\n          {healthItems.map((item) => {\n            return (\n              <GalleryItem key={item.title} data-test={item.title}>\n                {item.Component}\n              </GalleryItem>\n            );\n          })}\n        </Gallery>\n      </HealthBody>\n      <DashboardAlerts />\n    </Card>\n  );\n});\n\ntype StatusCardProps = {\n  k8sModels: ImmutableMap<string, K8sKind>;\n};\n\ntype DashboardAlertsProps = {\n  labelSelector?: ObjectMetadata['labels'];\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FLAGS, useActiveNamespace, useFlag } from '@console/shared';\nimport { useCreateNamespaceOrProjectModal } from '@console/shared/src/hooks/useCreateNamespaceOrProjectModal';\nimport ProjectListPage, { ProjectListPageProps } from './ProjectListPage';\n\ntype LazySubTitleRender = (openProjectModal: () => void) => React.ReactNode;\nexport interface CreateProjectListPageProps extends ProjectListPageProps {\n  title: string;\n  children: LazySubTitleRender;\n  onCreate?: (project: K8sResourceKind) => void;\n}\n\ntype CreateAProjectButtonProps = {\n  openProjectModal: () => void;\n};\n\nexport const CreateAProjectButton: React.FC<CreateAProjectButtonProps> = ({ openProjectModal }) => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  if (canCreateProject) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Project\n        </Button>\n      </Trans>\n    );\n  }\n  if (canCreateNs) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Namespace\n        </Button>\n      </Trans>\n    );\n  }\n  return null;\n};\n\nconst CreateProjectListPage: React.FC<CreateProjectListPageProps> = ({\n  onCreate,\n  title,\n  children,\n  ...props\n}) => {\n  const [, setActiveNamespace] = useActiveNamespace();\n  const createNamespaceOrProjectModal = useCreateNamespaceOrProjectModal();\n  const openProjectModal = React.useCallback(() => {\n    const handleSubmit = (project: K8sResourceKind) => {\n      setActiveNamespace(project.metadata?.name);\n      onCreate && onCreate(project);\n    };\n    createNamespaceOrProjectModal({ onSubmit: handleSubmit });\n  }, [onCreate, setActiveNamespace, createNamespaceOrProjectModal]);\n  return (\n    <ProjectListPage {...props} title={title}>\n      {children(openProjectModal)}\n    </ProjectListPage>\n  );\n};\n\nexport default CreateProjectListPage;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardTitle,\n  MenuToggle,\n  MenuToggleElement,\n  Select,\n  SelectList,\n  SelectOption,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport {\n  ClusterOverviewUtilizationItem,\n  isClusterOverviewUtilizationItem,\n  ClusterOverviewMultilineUtilizationItem,\n  isClusterOverviewMultilineUtilizationItem,\n  useResolvedExtensions,\n  Humanize,\n  TopConsumerPopoverProps,\n} from '@console/dynamic-plugin-sdk';\nimport UtilizationItem, {\n  MultilineUtilizationItem,\n  QueryWithDescription,\n  LimitRequested,\n  trimSecondsXMutator,\n} from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\n\nimport { DashboardItemProps, withDashboardResources } from '../../with-dashboard-resources';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils/units';\nimport { getRangeVectorStats, getInstantVectorStats } from '../../../graphs/utils';\nimport {\n  getMultilineQueries,\n  getUtilizationQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport { MachineConfigPoolModel } from '../../../../models';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { DataPoint, PrometheusResponse } from '../../../graphs';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { MachineConfigPoolKind, referenceForModel } from '@console/internal/module/k8s';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport { useUtilizationDuration } from '@console/shared/src/hooks/useUtilizationDuration';\nimport {\n  ClusterUtilizationContext,\n  CPUPopover,\n  MemoryPopover,\n  StoragePopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  PodPopover,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const PrometheusUtilizationItem = withDashboardResources<PrometheusUtilizationItemProps>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    utilizationQuery,\n    totalQuery,\n    title,\n    TopConsumerPopover,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n    limitQuery,\n    requestQuery,\n    setLimitReqState,\n  }) => {\n    let utilization: PrometheusResponse, utilizationError: any;\n    let total: PrometheusResponse, totalError: any;\n    let max: DataPoint<number>[];\n    let limit: PrometheusResponse, limitError: any;\n    let request: PrometheusResponse, requestError: any;\n    let isLoading = false;\n    const { duration } = useUtilizationDuration();\n\n    React.useEffect(() => {\n      if (!isDisabled) {\n        watchPrometheus(utilizationQuery, namespace, duration);\n        totalQuery && watchPrometheus(totalQuery, namespace);\n        limitQuery && watchPrometheus(limitQuery, namespace, duration);\n        requestQuery && watchPrometheus(requestQuery, namespace, duration);\n        return () => {\n          stopWatchPrometheusQuery(utilizationQuery, duration);\n          totalQuery && stopWatchPrometheusQuery(totalQuery);\n          limitQuery && stopWatchPrometheusQuery(limitQuery, duration);\n          requestQuery && stopWatchPrometheusQuery(requestQuery, duration);\n        };\n      }\n    }, [\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      duration,\n      utilizationQuery,\n      totalQuery,\n      namespace,\n      isDisabled,\n      limitQuery,\n      requestQuery,\n    ]);\n\n    if (!isDisabled) {\n      [utilization, utilizationError] = getPrometheusQueryResponse(\n        prometheusResults,\n        utilizationQuery,\n        duration,\n      );\n      [total, totalError] = getPrometheusQueryResponse(prometheusResults, totalQuery);\n      [limit, limitError] = getPrometheusQueryResponse(prometheusResults, limitQuery, duration);\n      [request, requestError] = getPrometheusQueryResponse(\n        prometheusResults,\n        requestQuery,\n        duration,\n      );\n\n      max = getInstantVectorStats(total);\n      isLoading = !utilization || (totalQuery && !total) || (limitQuery && !limit);\n    }\n\n    return (\n      <UtilizationItem\n        title={title}\n        utilization={utilization}\n        limit={limit}\n        requested={request}\n        error={utilizationError || totalError || limitError || requestError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        query={[utilizationQuery, limitQuery, requestQuery]}\n        max={max && max.length ? max[0].y : null}\n        TopConsumerPopover={TopConsumerPopover}\n        setLimitReqState={setLimitReqState}\n      />\n    );\n  },\n);\n\nexport const PrometheusMultilineUtilizationItem = withDashboardResources<\n  PrometheusMultilineUtilizationItemProps\n>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    queries,\n    title,\n    TopConsumerPopovers,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n  }) => {\n    const { duration } = useUtilizationDuration();\n    React.useEffect(() => {\n      if (!isDisabled) {\n        queries.forEach((q) => watchPrometheus(q.query, namespace, duration));\n        return () => {\n          queries.forEach((q) => stopWatchPrometheusQuery(q.query, duration));\n        };\n      }\n    }, [watchPrometheus, stopWatchPrometheusQuery, duration, queries, namespace, isDisabled]);\n\n    const stats = [];\n    let hasError = false;\n    let isLoading = false;\n    if (!isDisabled) {\n      queries.forEach((query) => {\n        const [response, responseError] = getPrometheusQueryResponse(\n          prometheusResults,\n          query.query,\n          duration,\n        );\n        if (responseError) {\n          hasError = true;\n          return false;\n        }\n        if (!response) {\n          isLoading = true;\n          return false;\n        }\n        stats.push(getRangeVectorStats(response, query.desc, null, trimSecondsXMutator)?.[0] || []);\n      });\n    }\n\n    return (\n      <MultilineUtilizationItem\n        title={title}\n        data={stats}\n        error={hasError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        queries={queries}\n        TopConsumerPopovers={TopConsumerPopovers}\n      />\n    );\n  },\n);\n\nconst UtilizationCardNodeFilter: React.FC<UtilizationCardNodeFilterProps> = ({\n  machineConfigPools,\n  onNodeSelect,\n  selectedNodes,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const sortedMCPs = machineConfigPools.sort((a, b) => {\n    const order = ['worker', 'master'];\n    const indexA = order.indexOf(a.metadata.name);\n    const indexB = order.indexOf(b.metadata.name);\n    if (indexA === -1 && indexB === -1) {\n      return a.metadata.name.localeCompare(b.metadata.name);\n    }\n    if (indexA === -1) {\n      return 1;\n    }\n    if (indexB === -1) {\n      return -1;\n    }\n    return indexA - indexB;\n  });\n\n  const selectOptions = sortedMCPs.map((mcp) => {\n    const mcpName = mcp.metadata.name === 'master' ? 'control plane' : mcp.metadata.name;\n    return (\n      <SelectOption\n        hasCheckbox\n        key={mcp.metadata.name}\n        value={mcpName}\n        isSelected={selectedNodes.includes(mcp.metadata.name)}\n      >\n        {mcpName}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle ref={toggleRef} onClick={(open) => setIsOpen(open)} variant=\"plainText\">\n      {t('public~Filter by Node type')}\n      {selectedNodes.length > 0 && (\n        <Badge className=\"pf-v5-u-ml-sm\" isRead>\n          {selectedNodes.length}\n        </Badge>\n      )}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      role=\"menu\"\n      aria-label={t('public~Filter by Node type')}\n      onSelect={onNodeSelect}\n      isOpen={isOpen}\n      selected={selectedNodes}\n      onOpenChange={(open) => setIsOpen(open)}\n      toggle={toggle}\n    >\n      <SelectList>{selectOptions}</SelectList>\n    </Select>\n  );\n};\n\nexport const UtilizationCard = () => {\n  const { t } = useTranslation();\n  const [machineConfigPools, machineConfigPoolsLoaded] = useK8sWatchResource<\n    MachineConfigPoolKind[]\n  >({\n    isList: true,\n    kind: referenceForModel(MachineConfigPoolModel),\n  });\n  // TODO: add `useUserSettings` to get default selected\n  const [selectedNodes, setSelectedNodes] = React.useState<string[]>([]);\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ClusterOverviewUtilizationItem>(\n    isClusterOverviewUtilizationItem,\n  );\n  const [dynamicMultilineItemExtensions] = useResolvedExtensions<\n    ClusterOverviewMultilineUtilizationItem\n  >(isClusterOverviewMultilineUtilizationItem);\n\n  // TODO: add `useUserSettingsCompatibility` to store selectedNodes\n  const onNodeSelect = (event: React.MouseEvent, selection: string) => {\n    const selectionUpdated = selection === 'control plane' ? 'master' : selection;\n    if (selectedNodes.includes(selectionUpdated)) {\n      setSelectedNodes(selectedNodes.filter((item) => item !== selectionUpdated));\n    } else {\n      setSelectedNodes([...selectedNodes, selectionUpdated]);\n    }\n  };\n  // if no filter is applied, show all nodes using regex\n  const nodeType = _.isEmpty(selectedNodes) ? '.+' : selectedNodes.join('|');\n  const [utilizationQueries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(nodeType), getMultilineQueries(nodeType)],\n    [nodeType],\n  );\n  return (\n    machineConfigPoolsLoaded && (\n      <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n        <CardHeader\n          actions={{\n            actions: (\n              <>\n                <Split>\n                  <SplitItem>\n                    <UtilizationCardNodeFilter\n                      machineConfigPools={machineConfigPools}\n                      onNodeSelect={onNodeSelect}\n                      selectedNodes={selectedNodes}\n                    />\n                  </SplitItem>\n                  <SplitItem>\n                    <UtilizationDurationDropdown />\n                  </SplitItem>\n                </Split>\n              </>\n            ),\n            hasNoOffset: false,\n            className: undefined,\n          }}\n        >\n          <CardTitle data-test=\"utilization-card__title\">\n            {t('public~Cluster utilization')}\n          </CardTitle>\n        </CardHeader>\n        <UtilizationBody>\n          <ClusterUtilizationContext.Provider value={nodeType}>\n            <PrometheusUtilizationItem\n              title={t('public~CPU')}\n              utilizationQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].requests}\n              TopConsumerPopover={CPUPopover}\n              humanizeValue={humanizeCpuCores}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Memory')}\n              utilizationQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].requests}\n              TopConsumerPopover={MemoryPopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Filesystem')}\n              utilizationQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].total}\n              TopConsumerPopover={StoragePopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusMultilineUtilizationItem\n              title={t('public~Network transfer')}\n              queries={multilineQueries[OverviewQuery.NETWORK_UTILIZATION]}\n              humanizeValue={humanizeDecimalBytesPerSec}\n              TopConsumerPopovers={networkPopovers}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Pod count')}\n              utilizationQuery={utilizationQueries[OverviewQuery.POD_UTILIZATION].utilization}\n              TopConsumerPopover={PodPopover}\n              humanizeValue={humanizeNumber}\n            />\n            {dynamicItemExtensions.map(({ uid, properties }) => (\n              <PrometheusUtilizationItem\n                key={uid}\n                title={properties.title}\n                utilizationQuery={properties.getUtilizationQuery(selectedNodes)}\n                totalQuery={properties.getTotalQuery?.(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopover={properties.TopConsumerPopover}\n                requestQuery={properties.getRequestQuery?.(selectedNodes)}\n                limitQuery={properties.getLimitQuery?.(selectedNodes)}\n              />\n            ))}\n            {dynamicMultilineItemExtensions.map(({ uid, properties }) => (\n              <PrometheusMultilineUtilizationItem\n                key={uid}\n                title={properties.title}\n                queries={properties.getUtilizationQueries(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopovers={properties.TopConsumerPopovers}\n              />\n            ))}\n          </ClusterUtilizationContext.Provider>\n        </UtilizationBody>\n      </Card>\n    )\n  );\n};\n\ntype PrometheusCommonProps = {\n  title: string;\n  humanizeValue: Humanize;\n  byteDataType?: ByteDataTypes;\n  namespace?: string;\n  isDisabled?: boolean;\n};\n\ntype PrometheusUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    utilizationQuery: string;\n    totalQuery?: string;\n    limitQuery?: string;\n    requestQuery?: string;\n    TopConsumerPopover?: React.ComponentType<TopConsumerPopoverProps>;\n    setLimitReqState?: (state: LimitRequested) => void;\n  };\n\ntype PrometheusMultilineUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    queries: QueryWithDescription[];\n    TopConsumerPopovers?: React.ComponentType<TopConsumerPopoverProps>[];\n  };\n\ntype UtilizationCardNodeFilterProps = {\n  machineConfigPools: MachineConfigPoolKind[];\n  onNodeSelect: (event: React.MouseEvent, selection: string) => void;\n  selectedNodes: string[];\n};\n","import * as React from 'react';\nimport {\n  ChartDonutThreshold,\n  ChartDonutUtilization,\n  ChartThemeColor,\n} from '@patternfly/react-charts';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { usePrometheusPoll } from './prometheus-poll-hook';\nimport { PrometheusEndpoint } from './helpers';\nimport { useRefWidth, humanizePercentage, Humanize } from '../utils';\nimport { getInstantVectorStats } from './utils';\nimport { DataPoint } from '.';\n\nconst DEFAULT_THRESHOLDS = [{ value: 67 }, { value: 92 }];\n\nexport const GaugeChart: React.FC<GaugeChartProps> = ({\n  data,\n  error,\n  humanize = humanizePercentage,\n  invert = false,\n  loading,\n  query = '',\n  remainderLabel,\n  themeColor = ChartThemeColor.green,\n  thresholds = DEFAULT_THRESHOLDS,\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n  const ready = !error && !loading;\n\n  const status = loading ? t('Loading') : error;\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || (data ? humanize(data.y).string : undefined) || t('No data');\n\n  const labels = ({ datum: { x, y } }) =>\n    x ? `${x} ${usedLabelText}` : `${y} ${remainderLabel || t('available')}`;\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonutThreshold\n          ariaTitle={ariaChartTitle || title}\n          data={thresholds}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          width={width}\n          y=\"value\"\n        >\n          <ChartDonutUtilization\n            labels={labels}\n            data={ready ? data : { y: 0 }}\n            invert={invert}\n            padding={0}\n            subTitle={ready ? secondaryTitleText : ''}\n            themeColor={themeColor}\n            thresholds={thresholds}\n            title={status || labelText}\n          />\n        </ChartDonutThreshold>\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\nexport const Gauge: React.FC<GaugeProps> = ({\n  humanize = humanizePercentage,\n  invert,\n  namespace,\n  percent = 0,\n  query,\n  remainderLabel,\n  secondaryTitle,\n  thresholds,\n  title,\n  usedLabel,\n}) => {\n  const { t } = useTranslation();\n\n  const [response, error, loading] = usePrometheusPoll({\n    endpoint: PrometheusEndpoint.QUERY,\n    namespace,\n    query,\n  });\n\n  const [data] = response\n    ? getInstantVectorStats(response, null, humanize).map(({ label, y }) => ({ x: label, y }))\n    : [{ x: humanize(percent).string, y: percent }];\n  return (\n    <GaugeChart\n      data={data}\n      error={!!error && t('No data')}\n      invert={invert}\n      label={data.x}\n      loading={loading}\n      query={query}\n      remainderLabel={remainderLabel}\n      secondaryTitle={secondaryTitle}\n      thresholds={thresholds}\n      title={title}\n      usedLabel={usedLabel}\n    />\n  );\n};\n\ntype GaugeChartProps = {\n  data: DataPoint;\n  error?: string;\n  humanize?: Humanize;\n  invert?: boolean;\n  isLoaded?: boolean;\n  label?: string;\n  loading?: boolean;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  themeColor?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  usedLabel?: string;\n  className?: string;\n};\n\ntype GaugeProps = {\n  humanize?: Humanize;\n  invert?: boolean;\n  namespace?: string;\n  percent?: number;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  usedLabel?: string;\n};\n","import { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport {\n  getSpacerNodes,\n  getEdgesFromNodes,\n  WhenStatus,\n  RunStatus,\n  ModelKind,\n  GraphModel,\n  EdgeModel,\n} from '@patternfly/react-topology';\nimport * as dagre from 'dagre';\nimport * as _ from 'lodash';\nimport i18n from '@console/internal/i18n';\nimport {\n  ComputedStatus,\n  PipelineKind,\n  PipelineRunKind,\n  PipelineTask,\n  PipelineTaskWithStatus,\n  TaskRunKind,\n} from '../../../types';\nimport { getRunStatusColor } from '../../../utils/pipeline-augment';\nimport {\n  getPipelineTasks,\n  getFinallyTasksWithStatus,\n  appendPipelineRunStatus,\n} from '../../../utils/pipeline-utils';\nimport { CheckTaskErrorMessage } from '../pipeline-builder/types';\nimport {\n  NODE_HEIGHT,\n  NodeType,\n  NODE_WIDTH,\n  AddNodeDirection,\n  PipelineLayout,\n  DAGRE_BUILDER_PROPS,\n  DAGRE_VIEWER_PROPS,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  WHEN_EXPRESSION_SPACING,\n  DAGRE_VIEWER_SPACED_PROPS,\n  DAGRE_BUILDER_SPACED_PROPS,\n  NODE_PADDING,\n  DEFAULT_NODE_ICON_WIDTH,\n  DEFAULT_FINALLLY_GROUP_PADDING,\n  DEFAULT_NODE_HEIGHT,\n  DEFAULT_BADGE_WIDTH,\n} from './const';\nimport { DAG, Vertex } from './dag';\nimport {\n  PipelineEdgeModel,\n  NodeCreator,\n  NodeCreatorSetup,\n  SpacerNodeModelData,\n  TaskListNodeModelData,\n  TaskNodeModelData,\n  PipelineMixedNodeModel,\n  PipelineTaskNodeModel,\n  BuilderNodeModelData,\n  PipelineRunAfterNodeModelData,\n  BuilderFinallyNodeModel,\n  FinallyNodeModel,\n  PipelineFinallyNodeModel,\n  DiamondStateType,\n  LoadingNodeModel,\n} from './types';\n\nconst createGenericNode: NodeCreatorSetup = (type, width?, height?) => (name, data) => ({\n  id: name,\n  label: data?.label || name,\n  runAfterTasks: data?.runAfterTasks || [],\n  ...(data && { data }),\n  height: height ?? NODE_HEIGHT,\n  width: width ?? NODE_WIDTH,\n  type,\n});\n\n// Node variations\nexport const createTaskNode: NodeCreator<TaskNodeModelData> = createGenericNode(NodeType.TASK_NODE);\n\nexport const createCustomTaskNode: NodeCreator<TaskNodeModelData> = createGenericNode(\n  NodeType.CUSTOM_TASK_NODE,\n);\n\nexport const createSpacerNode: NodeCreator<SpacerNodeModelData> = createGenericNode(\n  NodeType.SPACER_NODE,\n  0,\n);\nexport const createTaskListNode: NodeCreator<TaskListNodeModelData> = createGenericNode(\n  NodeType.TASK_LIST_NODE,\n);\nexport const createInvalidTaskListNode: NodeCreator<TaskListNodeModelData> = createGenericNode(\n  NodeType.INVALID_TASK_LIST_NODE,\n);\nexport const createBuilderNode: NodeCreator<BuilderNodeModelData> = createGenericNode(\n  NodeType.BUILDER_NODE,\n);\n\nexport const createFinallyNode = (height): NodeCreator<FinallyNodeModel> =>\n  createGenericNode(\n    NodeType.FINALLY_NODE,\n    NODE_WIDTH + WHEN_EXPRESSION_SPACING + FINALLY_NODE_PADDING * 2,\n    height,\n  );\n\nexport const createLoadingNode: NodeCreator<LoadingNodeModel> = createGenericNode(\n  NodeType.LOADING_NODE,\n);\n\nexport const createBuilderFinallyNode = (\n  height: number,\n  width: number,\n): NodeCreator<BuilderFinallyNodeModel> =>\n  createGenericNode(NodeType.BUILDER_FINALLY_NODE, width, height);\n\nconst createPipelineTaskNode = (type: NodeType, data: PipelineRunAfterNodeModelData) =>\n  createGenericNode(type, data.width, data.height)(data.id, data);\n\nexport const getNodeCreator = (type: NodeType): NodeCreator<PipelineRunAfterNodeModelData> => {\n  switch (type) {\n    case NodeType.TASK_LIST_NODE:\n      return createTaskListNode;\n    case NodeType.BUILDER_NODE:\n      return createBuilderNode;\n    case NodeType.SPACER_NODE:\n      return createSpacerNode;\n    case NodeType.LOADING_NODE:\n      return createLoadingNode;\n    case NodeType.INVALID_TASK_LIST_NODE:\n      return createInvalidTaskListNode;\n    case NodeType.CUSTOM_TASK_NODE:\n      return createCustomTaskNode;\n    case NodeType.TASK_NODE:\n    default:\n      return createTaskNode;\n  }\n};\n\nexport const handleParallelToParallelNodes = (\n  nodes: PipelineMixedNodeModel[],\n): PipelineMixedNodeModel[] => {\n  type ParallelNodeReference = {\n    node: PipelineTaskNodeModel;\n    runAfter: string[];\n    atIndex: number;\n  };\n  type ParallelNodeMap = {\n    [id: string]: ParallelNodeReference[];\n  };\n\n  // Collect only multiple run-afters\n  const multipleRunBeforeMap: ParallelNodeMap = nodes.reduce((acc, node, idx) => {\n    const {\n      data: {\n        task: { runAfter },\n      },\n    } = node;\n    if (runAfter && runAfter.length > 1) {\n      const id: string = [...runAfter]\n        .sort((a, b) => a.localeCompare(b))\n        .reduce((str, ref) => `${str}|${ref}`);\n\n      if (!Array.isArray(acc[id])) {\n        acc[id] = [];\n      }\n      acc[id].push({\n        node,\n        runAfter,\n        atIndex: idx,\n      });\n    }\n    return acc;\n  }, {} as ParallelNodeMap);\n\n  // Trim out single occurrences\n  const multiParallelToParallelList: ParallelNodeReference[][] = Object.values(\n    multipleRunBeforeMap,\n  ).filter((data: ParallelNodeReference[]) => data.length > 1);\n\n  if (multiParallelToParallelList.length === 0) {\n    // No parallel to parallel\n    return nodes;\n  }\n\n  // Insert a spacer node between the multiple nodes on the sides of a parallel-to-parallel\n  const newNodes: PipelineMixedNodeModel[] = [];\n  const newRunAfterNodeMap: { [nodeId: string]: string[] } = {};\n  multiParallelToParallelList.forEach((p2p: ParallelNodeReference[]) => {\n    // All nodes in each array share their runAfters\n    const { runAfter } = p2p[0];\n\n    const names: string[] = p2p.map((p2pData) => p2pData.node.id);\n    const parallelSpacerName = `parallel-${names.join('-')}`;\n\n    names.forEach((p2pNodeId) => {\n      if (!Array.isArray(newRunAfterNodeMap[p2pNodeId])) {\n        newRunAfterNodeMap[p2pNodeId] = [];\n      }\n      newRunAfterNodeMap[p2pNodeId].push(parallelSpacerName);\n    });\n\n    newNodes.push(\n      createSpacerNode(parallelSpacerName, {\n        task: {\n          name: parallelSpacerName,\n          runAfter,\n        },\n      }),\n    );\n  });\n\n  // Update all impacted nodes to point at the spacer node as the spacer points at their original runAfters\n  nodes.forEach((node) => {\n    const newRunAfters: string[] | undefined = newRunAfterNodeMap[node.id];\n    if (newRunAfters && newRunAfters.length > 0) {\n      const {\n        data: { task },\n        type,\n      } = node;\n\n      const createNode: NodeCreator<PipelineRunAfterNodeModelData> = getNodeCreator(type);\n\n      // Recreate the node with the new runAfter pointing to the spacer node\n      newNodes.push(\n        createNode(node.id, {\n          ...node.data,\n          task: {\n            ...task,\n            runAfter: newRunAfters,\n          },\n        }),\n      );\n    } else {\n      // Unaffected node, just carry it over\n      newNodes.push(node);\n    }\n  });\n\n  return newNodes;\n};\n\nexport const tasksToNodes = (\n  taskList: PipelineTask[],\n  pipeline?: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n): PipelineMixedNodeModel[] => {\n  const nodeList: PipelineTaskNodeModel[] = taskList.map((task) =>\n    createTaskNode(task.name, {\n      task,\n      pipeline,\n      pipelineRun,\n    }),\n  );\n\n  return handleParallelToParallelNodes(nodeList);\n};\n\nexport const tasksToBuilderNodes = (\n  taskList: PipelineTask[],\n  onAddNode: (task: PipelineTask, direction: AddNodeDirection) => void,\n  onNodeSelection: (task: PipelineTask) => void,\n  getError: CheckTaskErrorMessage,\n  selectedIds: string[],\n): PipelineMixedNodeModel[] => {\n  return taskList.map((task, idx) => {\n    return createBuilderNode(task.name, {\n      error: getError(idx),\n      task,\n      selected: selectedIds.includes(task.name),\n      onNodeSelection: () => {\n        onNodeSelection(task);\n      },\n      onAddNode: (direction: AddNodeDirection) => {\n        onAddNode(task, direction);\n      },\n    });\n  });\n};\n\nexport const getBuilderEdgesFromNodes = (nodes: PipelineMixedNodeModel[]): PipelineEdgeModel[] =>\n  _.flatten(\n    nodes.map((node) => {\n      const {\n        data: {\n          task: { name: target, runAfter = [] },\n        },\n      } = node;\n\n      if (runAfter.length === 0) return null;\n\n      return runAfter.map((source) => ({\n        id: `${source}~to~${target}`,\n        type: 'edge',\n        source,\n        target,\n      }));\n    }),\n  ).filter((edgeList) => !!edgeList);\n\nexport const getFinallyTaskHeight = (allTasksLength: number, disableBuilder: boolean): number => {\n  return (\n    allTasksLength * NODE_HEIGHT +\n    (allTasksLength - 1) * FINALLY_NODE_VERTICAL_SPACING +\n    (!disableBuilder ? NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING : 0) +\n    FINALLY_NODE_PADDING * 2\n  );\n};\n\nexport const getFinallyTaskWidth = (allTasksLength: number): number => {\n  const whenExpressionSpacing = allTasksLength > 0 ? WHEN_EXPRESSION_SPACING : 0;\n  return NODE_WIDTH + FINALLY_NODE_PADDING * 2 + whenExpressionSpacing;\n};\n\nexport const getLastRegularTasks = (regularTasks: PipelineMixedNodeModel[]): string[] => {\n  const runAfters = _.uniq(\n    regularTasks.reduce((acc, { data: { task: { runAfter } } }) => {\n      return runAfter ? acc.concat(runAfter) : acc;\n    }, []),\n  );\n  return _.difference(\n    regularTasks.map((n) => n.id),\n    runAfters,\n  );\n};\n\nexport const connectFinallyTasksToNodes = (\n  nodes: PipelineMixedNodeModel[],\n  pipeline?: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n  taskRuns?: TaskRunKind[],\n): PipelineMixedNodeModel[] => {\n  const finallyTasks = pipelineRun\n    ? getFinallyTasksWithStatus(pipeline, pipelineRun, taskRuns)\n    : pipeline.spec?.finally ?? [];\n  if (finallyTasks.length === 0) {\n    return nodes;\n  }\n  const regularRunAfters = getLastRegularTasks(nodes);\n  const name = 'finally-node';\n  const finallyGroupNode: PipelineFinallyNodeModel = createFinallyNode(\n    getFinallyTaskHeight(finallyTasks.length, true),\n  )(name, {\n    isFinallyTask: true,\n    pipeline,\n    pipelineRun,\n    task: {\n      isFinallyTask: true,\n      name,\n      runAfter: regularRunAfters,\n      finallyTasks: finallyTasks.map((ft) => ({\n        ...ft,\n        disableTooltip: false,\n      })),\n    },\n  });\n  return [...nodes, finallyGroupNode];\n};\n\nexport const getTopologyNodesEdges = (\n  pipeline: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n  taskRuns?: TaskRunKind[],\n): { nodes: PipelineMixedNodeModel[]; edges: PipelineEdgeModel[] } => {\n  const taskList: PipelineTask[] = _.flatten(getPipelineTasks(pipeline, pipelineRun, taskRuns));\n  const taskNodes: PipelineMixedNodeModel[] = tasksToNodes(taskList, pipeline, pipelineRun);\n\n  const nodes: PipelineMixedNodeModel[] = connectFinallyTasksToNodes(\n    taskNodes,\n    pipeline,\n    pipelineRun,\n    taskRuns,\n  );\n  const edges: PipelineEdgeModel[] = getEdgesFromNodes(nodes);\n\n  return { nodes, edges };\n};\n\nexport const getTextWidth = (text: string, font: string = '0.8rem RedHatText'): number => {\n  if (!text || text.length === 0) {\n    return 0;\n  }\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (!context) {\n    return text.length;\n  }\n  context.font = font;\n  const { width } = context.measureText(text);\n  return width;\n};\n\nexport const extractDepsFromContextVariables = (contextVariable: string) => {\n  const regex = /(?:(?:\\$\\(tasks.))([a-z0-9_-]+)(?:.results+)(?:[.^\\w]+\\))/g;\n  let matches;\n  const deps = [];\n  // eslint-disable-next-line no-cond-assign\n  while ((matches = regex.exec(contextVariable)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (matches.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n    if (matches) {\n      if (!deps.includes(matches[1])) {\n        deps.push(matches[1]);\n      }\n    }\n  }\n  return deps;\n};\n\nexport const getSpacerNode = (node: PipelineMixedNodeModel): PipelineMixedNodeModel => ({\n  ...node,\n  height: 1,\n  width: 1,\n});\n\nexport const getWhenStatus = (status: RunStatus): WhenStatus => {\n  switch (status) {\n    case RunStatus.Succeeded:\n    case RunStatus.Failed:\n      return WhenStatus.Met;\n    case RunStatus.Skipped:\n    case RunStatus['In Progress']:\n    case RunStatus.Idle:\n      return WhenStatus.Unmet;\n    default:\n      return undefined;\n  }\n};\n\nexport const getTaskWhenStatus = (task: PipelineTaskWithStatus): WhenStatus => {\n  if (!task.when) {\n    return undefined;\n  }\n  return getWhenStatus(task.status?.reason);\n};\n\nexport const getGraphDataModel = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): {\n  graph: GraphModel;\n  nodes: PipelineMixedNodeModel[];\n  edges: EdgeModel[];\n} => {\n  if (!pipeline) {\n    return null;\n  }\n\n  const taskList = _.flatten(getPipelineTasks(pipeline, pipelineRun, taskRuns));\n\n  const dag = new DAG();\n  taskList?.forEach((task: PipelineTask) => {\n    dag.addEdges(task.name, task, '', task.runAfter || []);\n  });\n\n  const nodes = [];\n  const maxWidthForLevel = {};\n  dag.topologicalSort((v: Vertex) => {\n    if (!maxWidthForLevel[v.level]) {\n      maxWidthForLevel[v.level] = getTextWidth(v.name);\n    } else {\n      maxWidthForLevel[v.level] = Math.max(maxWidthForLevel[v.level], getTextWidth(v.name));\n    }\n  });\n  dag.topologicalSort((vertex: Vertex) => {\n    const runAfterTasks = [];\n    const task = vertex.data;\n    const depsFromContextVariables = [];\n    if (task.params) {\n      task.params.forEach((p) => {\n        if (Array.isArray(p.value)) {\n          p.value.forEach((paramValue) => {\n            depsFromContextVariables.push(...extractDepsFromContextVariables(paramValue));\n          });\n        } else {\n          depsFromContextVariables.push(...extractDepsFromContextVariables(p.value));\n        }\n      });\n    }\n    if (task?.when) {\n      task.when.forEach(({ input, values }) => {\n        if (values) {\n          depsFromContextVariables.push(...extractDepsFromContextVariables(input));\n          values.forEach((whenValue) => {\n            depsFromContextVariables.push(...extractDepsFromContextVariables(whenValue));\n          });\n        }\n      });\n    }\n    const dependancies = _.uniq([...vertex.dependancyNames]);\n    if (dependancies) {\n      dependancies.forEach((dep) => {\n        const depObj = dag.vertices.get(dep);\n        if (depObj.level - vertex.level <= 1 || vertex.data.runAfter?.includes(depObj.name)) {\n          runAfterTasks.push(dep);\n        }\n      });\n    }\n    if (depsFromContextVariables.length > 0) {\n      const v = depsFromContextVariables.map((d) => {\n        return dag.vertices.get(d);\n      });\n      const minLevelDep = _.minBy(v, (d) => d.level);\n      const nearestDeps = v.filter((v1) => v1.level === minLevelDep.level);\n      nearestDeps.forEach((nd) => {\n        if (vertex.dependancyNames.includes(nd.name)) {\n          if (nd.level - vertex.level <= 1 || vertex.dependancyNames.length === 0) {\n            runAfterTasks.push(nd.name);\n          }\n        }\n      });\n    }\n    const badgePadding = Object.keys(pipelineRun.spec)?.length > 0 ? DEFAULT_BADGE_WIDTH : 0;\n    const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === task.name);\n    const getNodeType = (taskKind: string) => {\n      if (!taskKind || taskKind === 'Task' || taskKind === 'ClusterTask') {\n        return NodeType.TASK_NODE;\n      }\n      return NodeType.CUSTOM_TASK_NODE;\n    };\n\n    nodes.push(\n      createPipelineTaskNode(getNodeType(task?.taskRef?.kind), {\n        id: vertex.name,\n        label: vertex.name,\n        width:\n          maxWidthForLevel[vertex.level] +\n          NODE_PADDING * 2 +\n          DEFAULT_NODE_ICON_WIDTH +\n          badgePadding,\n        runAfterTasks,\n        status: isTaskSkipped ? RunStatus.Skipped : vertex.data.status?.reason,\n        whenStatus: getTaskWhenStatus(vertex.data),\n        task: vertex.data,\n        pipeline,\n        pipelineRun,\n      }),\n    );\n  });\n\n  const finallyTaskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\n  const maxFinallyNodeName =\n    finallyTaskList.sort((a, b) => b.name.length - a.name.length)[0]?.name || '';\n  const finallyNodes = finallyTaskList.map((fTask) => {\n    const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === fTask.name);\n\n    return createPipelineTaskNode(NodeType.FINALLY_NODE, {\n      id: fTask.name,\n      label: fTask.name,\n      width:\n        getTextWidth(maxFinallyNodeName) + NODE_PADDING * 2 + DEFAULT_FINALLLY_GROUP_PADDING * 2,\n      height: DEFAULT_NODE_HEIGHT,\n      runAfterTasks: [],\n      status: isTaskSkipped ? RunStatus.Skipped : fTask.status?.reason,\n      whenStatus: getTaskWhenStatus(fTask),\n      task: fTask,\n      pipeline,\n      pipelineRun,\n    });\n  });\n\n  const finallyGroup = finallyNodes.length\n    ? [\n        {\n          id: 'finally-group-id',\n          type: NodeType.FINALLY_GROUP,\n          children: finallyNodes.map((n) => n.id),\n          group: true,\n          style: { padding: DEFAULT_FINALLLY_GROUP_PADDING },\n        },\n      ]\n    : [];\n  const spacerNodes: PipelineMixedNodeModel[] = getSpacerNodes(\n    [...nodes, ...finallyNodes],\n    NodeType.SPACER_NODE,\n    [NodeType.FINALLY_NODE],\n  ).map(getSpacerNode);\n\n  const edges: PipelineEdgeModel[] = getEdgesFromNodes(\n    [...nodes, ...spacerNodes, ...finallyNodes],\n    NodeType.SPACER_NODE,\n    NodeType.EDGE,\n    NodeType.EDGE,\n    [NodeType.FINALLY_NODE],\n    NodeType.EDGE,\n  );\n\n  return {\n    graph: {\n      id: `${pipelineRun?.metadata?.name || pipeline.metadata.name}-graph`,\n      type: ModelKind.graph,\n      layout: PipelineLayout.DAGRE_VIEWER,\n      scaleExtent: [0.5, 1],\n    },\n    nodes: [...nodes, ...spacerNodes, ...finallyNodes, ...finallyGroup],\n    edges,\n  };\n};\n\nexport const taskHasWhenExpression = (task: PipelineTask): boolean => task?.when?.length > 0;\n\nexport const nodesHasWhenExpression = (nodes: PipelineMixedNodeModel[]): boolean =>\n  nodes.some((n) => taskHasWhenExpression(n.data.task));\n\nexport const hasWhenExpression = (pipeline: PipelineKind): boolean => {\n  return [...(pipeline?.spec?.tasks || []), ...(pipeline?.spec?.finally || [])].some(\n    taskHasWhenExpression,\n  );\n};\nexport const getLayoutData = (layout: PipelineLayout): dagre.GraphLabel => {\n  switch (layout) {\n    case PipelineLayout.DAGRE_BUILDER:\n      return DAGRE_BUILDER_PROPS;\n    case PipelineLayout.DAGRE_VIEWER:\n      return DAGRE_VIEWER_PROPS;\n    case PipelineLayout.DAGRE_VIEWER_SPACED:\n      return DAGRE_VIEWER_SPACED_PROPS;\n    case PipelineLayout.DAGRE_BUILDER_SPACED:\n      return DAGRE_BUILDER_SPACED_PROPS;\n    default:\n      return null;\n  }\n};\n\nexport const getWhenExpressionDiamondState = (\n  status: ComputedStatus,\n  isPipelineRun: boolean,\n  isFinallyTask: boolean,\n): DiamondStateType => {\n  let diamondColor: string;\n  if (isPipelineRun) {\n    if (status === ComputedStatus.Failed) {\n      diamondColor = successColor.value;\n    } else {\n      diamondColor = getRunStatusColor(status).pftoken.value;\n    }\n  } else if (!isFinallyTask) {\n    diamondColor = 'var(--pf-v5-global--BackgroundColor--200)';\n  } else {\n    diamondColor = 'var(--pf-v5-global--BackgroundColor--light-100)';\n  }\n\n  let tooltipContent: string;\n  switch (status) {\n    case ComputedStatus.Succeeded:\n    case ComputedStatus.Failed:\n      tooltipContent = i18n.t('pipelines-plugin~When expression was met');\n      break;\n    case ComputedStatus.Skipped:\n      tooltipContent = i18n.t('pipelines-plugin~When expression was not met');\n      break;\n    default:\n      tooltipContent = i18n.t('pipelines-plugin~When expression');\n  }\n  return { tooltipContent, diamondColor };\n};\n\nexport const getTooltipContent = (statusReason: ComputedStatus): string => {\n  switch (statusReason) {\n    case ComputedStatus.Succeeded:\n    case ComputedStatus.Failed:\n      return i18n.t('pipelines-plugin~When expression was met');\n    case ComputedStatus.Skipped:\n      return i18n.t('pipelines-plugin~When expression was not met');\n    default:\n      return i18n.t('pipelines-plugin~When expression');\n  }\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, LabelSelector, referenceForModel, Selector } from '../../../module/k8s';\nimport { DetailsCard } from './details-card';\nimport { StatusCard } from './status-card';\nimport { UtilizationCard } from './utilization-card';\nimport { InventoryCard } from './inventory-card';\nimport { ActivityCard } from './activity-card';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { LauncherCard } from './launcher-card';\nimport { ResourceQuotaCard } from './resource-quota-card';\n\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }, { Card: ResourceQuotaCard }];\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst rightCards = [{ Card: ActivityCard }];\n\nexport const getNamespaceDashboardConsoleLinks = (\n  ns: K8sResourceKind,\n  consoleLinks: K8sResourceKind[],\n): K8sResourceKind[] => {\n  return _.filter(consoleLinks, (link: K8sResourceKind): boolean => {\n    if (link.spec.location !== 'NamespaceDashboard') {\n      return false;\n    }\n\n    const namespaces: string[] = _.get(link, 'spec.namespaceDashboard.namespaces');\n    const selector: Selector = _.get(link, 'spec.namespaceDashboard.namespaceSelector');\n\n    // If neither namespaces or selector was provided, show the link for all namespaces.\n    if (_.isEmpty(namespaces) && _.isEmpty(selector)) {\n      return true;\n    }\n\n    // Show the link if either namespaces or the selector matches this namespace.\n    if (_.includes(namespaces, ns.metadata.name)) {\n      return true;\n    }\n\n    return !_.isEmpty(selector) && new LabelSelector(selector).matches(ns);\n  });\n};\n\nexport const ProjectDashboard: React.FC<ProjectDashboardProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const namespaceLinks = getNamespaceDashboardConsoleLinks(obj, consoleLinks);\n  const context = {\n    obj,\n    namespaceLinks,\n  };\n\n  const hasNamespaceLinks = !!namespaceLinks.length;\n\n  const rc = React.useMemo(\n    () => (hasNamespaceLinks ? [{ Card: LauncherCard }, ...rightCards] : rightCards),\n    [hasNamespaceLinks],\n  );\n\n  return (\n    <>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project overview')}</title>\n        </Helmet>\n      )}\n      <ProjectDashboardContext.Provider value={context}>\n        <Dashboard>\n          <DashboardGrid mainCards={mainCards} leftCards={leftCards} rightCards={rc} />\n        </Dashboard>\n      </ProjectDashboardContext.Provider>\n    </>\n  );\n};\n\ntype ProjectDashboardProps = {\n  obj: K8sResourceKind;\n};\n","import { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { WatchK8sResource, useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { getPrometheusURL, PrometheusEndpoint } from '@console/internal/components/graphs/helpers';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useURLPoll } from '@console/internal/components/utils/url-poll-hook';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport {\n  K8sKind,\n  PersistentVolumeClaimKind,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { useTabbedTableBreadcrumbsFor } from '@console/shared';\nimport { PipelineRunModel } from '../../models';\nimport { PipelineRunKind } from '../../types';\nimport { getLatestRun } from '../../utils/pipeline-augment';\nimport { pipelinesTab } from '../../utils/pipeline-utils';\nimport { DEFAULT_SAMPLES, TektonResourceLabel } from './const';\nimport { metricsQueries, PipelineQuery } from './pipeline-metrics/pipeline-metrics-utils';\n\nexport const usePipelinesBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'pipelines',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useTasksBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'tasks',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useTriggersBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'triggers',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useDevPipelinesBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const navOption = isAdminPerspective ? `pipelines` : 'dev-pipelines';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    navOption,\n    pipelinesTab(kindObj),\n    undefined,\n    true,\n  );\n};\n\nexport const useLatestPipelineRun = (pipelineName: string, namespace: string): PipelineRunKind => {\n  const pipelineRunResource: WatchK8sResource = {\n    kind: referenceForModel(PipelineRunModel),\n    namespace,\n    selector: {\n      matchLabels: { [TektonResourceLabel.pipeline]: pipelineName },\n    },\n    optional: true,\n    isList: true,\n  };\n  const [pipelineRun, pipelineRunLoaded, pipelineRunError] = useK8sWatchResource<PipelineRunKind[]>(\n    pipelineRunResource,\n  );\n  const latestRun = getLatestRun(pipelineRun, 'creationTimestamp');\n  return pipelineRunLoaded && !pipelineRunError ? latestRun : null;\n};\n\nexport const usePipelinePVC = (\n  pipelineName: string,\n  namespace: string,\n): [PersistentVolumeClaimKind, boolean] => {\n  const pvcResource: WatchK8sResource = {\n    kind: PersistentVolumeClaimModel.kind,\n    namespace,\n    selector: {\n      matchLabels: { [TektonResourceLabel.pipeline]: pipelineName },\n    },\n    optional: true,\n    isList: true,\n  };\n  const [PVC, PVCLoaded, PVCError] = useK8sWatchResource<PersistentVolumeClaimKind[]>(pvcResource);\n  return [!PVCError && PVC.length > 0 ? PVC[0] : null, PVCLoaded];\n};\n\nexport const usePipelineSuccessRatioPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_SUCCESS_RATIO]({ name, namespace }),\n      samples: 1,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunTaskRunPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]({\n        name,\n        namespace,\n      }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunDurationPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}): any => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_RUN_DURATION]({\n        name,\n        namespace,\n      }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.NUMBER_OF_PIPELINE_RUNS]({ name, namespace }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { history } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  ProjectRequestModel,\n  SecretModel,\n  ServiceModel,\n  ServiceAccountModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  k8sCreate,\n  k8sGet,\n  K8sResourceKind,\n  k8sUpdate,\n  K8sVerb,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport {\n  createPipelineForImportFlow,\n  createPipelineRunForImportFlow,\n  updatePipelineForImportFlow,\n} from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '@console/pipelines-plugin/src/components/pipelines/const';\nimport { createTrigger } from '@console/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils';\nimport { setPipelineNotStarted } from '@console/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils';\nimport { createRepositoryResources } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport {\n  updateServiceAccount,\n  getSecretAnnotations,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { LimitsData } from '@console/shared/src/types';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BUILD_OUTPUT_IMAGESTREAM_URL } from '@console/shipwright-plugin/src/const';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { RUNTIME_LABEL } from '../../const';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  getTriggerAnnotation,\n  mergeData,\n  getTemplateLabels,\n  getRouteAnnotations,\n} from '../../utils/resource-label-utils';\nimport { createService, createRoute, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  GitImportFormData,\n  ProjectData,\n  GitReadableTypes,\n  Resources,\n  DevfileSuggestedResources,\n  UploadJarFormData,\n  RouteData,\n  ServerlessData,\n  DeploymentData,\n  BuildOptions,\n} from './import-types';\n\nexport const generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const createProject = (projectData: ProjectData): Promise<K8sResourceKind> => {\n  const project = {\n    metadata: {\n      name: projectData.name,\n    },\n    displayName: projectData.displayName,\n    description: projectData.description,\n  };\n\n  return k8sCreate(ProjectRequestModel, project);\n};\n\nexport const createOrUpdateImageStream = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStreamData: K8sResourceKind,\n  dryRun: boolean,\n  appResources: AppResources,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    labels: userLabels,\n    image: { tag: selectedTag },\n    labels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const repository = (formData as GitImportFormData).git?.url;\n  const ref = (formData as GitImportFormData).git?.ref;\n  const imageStreamList = appResources?.imageStream?.data?.filter(\n    (imgstr) => imgstr.metadata?.labels?.[NAME_LABEL] === (labels[NAME_LABEL] || name),\n  );\n  const imageStreamFilterData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamFilterData.length && imageStreamFilterData[0]) || {};\n  const imageStreamName = imageStreamData && imageStreamData.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...(repository && getGitAnnotations(repository, ref)),\n    ...getCommonAnnotations(),\n  };\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: {\n        ...defaultLabels,\n        ...userLabels,\n        [NAME_LABEL]: imgStreamName,\n      },\n      annotations: defaultAnnotations,\n    },\n  };\n  const imageStream = mergeData(originalImageStream, newImageStream);\n  if (verb === 'update') {\n    imageStream.metadata.name = originalImageStream.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ImageStreamModel, imageStream)\n    : k8sCreate(ImageStreamModel, newImageStream, dryRun ? dryRunOpt : {});\n};\n\nexport const createWebhookSecret = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStream: K8sResourceKind,\n  secretType: string,\n  dryRun: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    image: { tag: selectedTag },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n\n  const webhookSecret = {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: `${name}-${secretType}-webhook-secret`,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n    },\n    stringData: { WebHookSecretKey: generateSecret() },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreate(SecretModel, webhookSecret, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateShipwrightBuild = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalShipwrightBuild?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n) => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, strategy: buildStrategy, clusterBuildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamRepository = imageStream && imageStream.status?.dockerImageRepository;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  let shipwrightParamsObj = [];\n  // eslint-disable-next-line default-case\n  switch (buildStrategy) {\n    case BuildStrategyType.Docker:\n      shipwrightParamsObj = [\n        {\n          name: 'dockerfile',\n          value: dockerfilePath,\n        },\n      ];\n      break;\n    case BuildStrategyType.Source:\n      shipwrightParamsObj = [\n        {\n          name: 'builder-image',\n          value: `${imageStreamRepository}:${selectedTag}`,\n        },\n      ];\n      break;\n  }\n\n  const shipwrightBuildName =\n    verb === 'update' && !_.isEmpty(originalShipwrightBuild)\n      ? originalShipwrightBuild.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newShipwrightBuild = {\n    apiVersion: 'shipwright.io/v1beta1',\n    kind: 'Build',\n    metadata: {\n      name: generatedImageStreamName || shipwrightBuildName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: shipwrightBuildName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      source: {\n        type: 'Git',\n        git: {\n          url: repository,\n          revision: ref,\n          ...(secretName ? { cloneSecret: secretName } : {}),\n        },\n        contextDir,\n      },\n      env: [...customEnvs, ...buildEnvs],\n      strategy: {\n        name: clusterBuildStrategy,\n        kind: 'ClusterBuildStrategy',\n      },\n      paramValues: shipwrightParamsObj,\n      output: {\n        image: `${BUILD_OUTPUT_IMAGESTREAM_URL}/${namespace}/${\n          generatedImageStreamName || shipwrightBuildName\n        }:latest`,\n      },\n    },\n  };\n\n  const shipwrightBuild = mergeData(originalShipwrightBuild, newShipwrightBuild);\n  if (verb === 'update') {\n    shipwrightBuild.metadata.name = originalShipwrightBuild.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ShipwrightBuildModel, shipwrightBuild)\n    : k8sCreate(ShipwrightBuildModel, newShipwrightBuild, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, type: gitType, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, triggers, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n  let buildStrategyData;\n\n  let desiredContextDir = contextDir;\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  switch (buildStrategy) {\n    case 'Devfile':\n      buildStrategyData = originalBuildConfig?.spec?.strategy || {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      desiredContextDir = originalBuildConfig?.spec?.source?.contextDir || contextDir;\n      break;\n    case 'Docker':\n      buildStrategyData = {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      break;\n    default:\n      buildStrategyData = {\n        sourceStrategy: {\n          env: [...customEnvs, ...buildEnvs],\n          from: {\n            kind: 'ImageStreamTag',\n            name: `${imageStreamName}:${selectedTag}`,\n            namespace: imageStreamNamespace,\n          },\n        },\n      };\n      break;\n  }\n\n  const webhookTriggerData = {\n    type: GitReadableTypes[gitType],\n    [gitType]: {\n      secretReference: { name: `${name}-${gitType}-webhook-secret` },\n    },\n  };\n\n  const excludedGitTypesForTriggers = [GitProvider.UNSURE, GitProvider.GITEA];\n\n  const buildConfigName =\n    verb === 'update' && !_.isEmpty(originalBuildConfig)\n      ? originalBuildConfig.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: generatedImageStreamName || buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: buildConfigName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || buildConfigName}:latest`,\n        },\n      },\n      source: {\n        contextDir: desiredContextDir,\n        git: {\n          uri: repository,\n          ref,\n        },\n        ...(secretName ? { sourceSecret: { name: secretName } } : {}),\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n        ...(triggers.webhook && !excludedGitTypesForTriggers.includes(gitType)\n          ? [webhookTriggerData]\n          : []),\n        ...(triggers.image ? [{ type: 'ImageChange', imageChange: {} }] : []),\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n  if (verb === 'update') {\n    buildConfig.metadata.name = originalBuildConfig.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, newBuildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeployment = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const runtimeIcon = imageStream && imageStream.metadata.labels?.[RUNTIME_LABEL];\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag,\n    runtimeIcon,\n  });\n  const imageName = name;\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n  };\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const managePipelineResources = async (\n  formData: GitImportFormData,\n  pipelineData: PipelineKind,\n): Promise<K8sResourceKind[]> => {\n  const pipelineResources = [];\n  if (!formData) return Promise.resolve([]);\n  const { name, git, pipeline, project, docker, image, build, labels } = formData;\n  let managedPipeline: PipelineKind;\n  const pipelineName = pipelineData?.metadata?.name;\n\n  if (!_.isEmpty(pipelineData) && pipelineName === name) {\n    managedPipeline = await updatePipelineForImportFlow(\n      pipelineData,\n      pipeline.template,\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n  } else if (pipeline.template) {\n    managedPipeline = await createPipelineForImportFlow(\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      pipeline,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n    pipelineResources.push(managedPipeline);\n    try {\n      const triggerResources = await createTrigger(managedPipeline, git.detectedType);\n      pipelineResources.push(...triggerResources);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('Error occured while creating triggers', error);\n    }\n  }\n\n  if (git.secret) {\n    const secret = await k8sGet(SecretModel, git.secret, project.name);\n    const gitUrl = GitUrlParse(git.url);\n    secret.metadata.annotations = getSecretAnnotations(\n      {\n        key: 'git',\n        value:\n          gitUrl.protocol === 'ssh' ? gitUrl.resource : `${gitUrl.protocol}://${gitUrl.resource}`,\n      },\n      secret.metadata.annotations,\n    );\n    await k8sUpdate(SecretModel, secret, project.name);\n\n    const pipelineServiceAccount = await k8sGet(\n      ServiceAccountModel,\n      PIPELINE_SERVICE_ACCOUNT,\n      project.name,\n    );\n    if (_.find(pipelineServiceAccount.secrets, (s) => s.name === git.secret) === undefined) {\n      await updateServiceAccount(git.secret, pipelineServiceAccount, false);\n    }\n  }\n\n  if (_.has(managedPipeline?.metadata?.labels, 'app.kubernetes.io/instance')) {\n    try {\n      const pipelineRun = await createPipelineRunForImportFlow(managedPipeline);\n      pipelineResources.push(pipelineRun);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('Failed to create PipelineRun for import flow', error);\n      setPipelineNotStarted(managedPipeline.metadata.name, managedPipeline.metadata.namespace);\n    }\n  }\n  return Promise.all(pipelineResources);\n};\n\nexport const createDevfileResources = async (\n  formData: GitImportFormData,\n  dryRun: boolean,\n  appResources: AppResources,\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind[]> => {\n  const verb: K8sVerb = 'create';\n\n  const {\n    name,\n    project: { name: namespace },\n    devfile: { devfileSuggestedResources, devfileProjectType },\n  } = formData;\n\n  const devfileResourceObjects: DevfileSuggestedResources = Object.keys(\n    devfileSuggestedResources,\n  ).reduce((acc: DevfileSuggestedResources, resourceType: string) => {\n    const resource: K8sResourceKind = devfileSuggestedResources[resourceType];\n    if (!resource) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [resourceType]: {\n        ...resource,\n        metadata: {\n          ...resource.metadata,\n          annotations: {\n            ...resource.metadata?.annotations,\n            isFromDevfile: 'true',\n          },\n          name,\n          namespace,\n          labels: {\n            ...resource.metadata?.labels,\n            ...(devfileProjectType ? { [RUNTIME_LABEL]: devfileProjectType } : {}),\n          },\n        },\n      },\n    };\n  }, {} as DevfileSuggestedResources);\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    appResources,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.buildResource,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const webhookSecretResponse = await createWebhookSecret(\n    formData,\n    devfileResourceObjects.imageStream,\n    'generic',\n    dryRun,\n  );\n\n  const deploymentResponse = await createOrUpdateDeployment(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.deployResource,\n    verb,\n  );\n\n  const serviceModelResponse =\n    devfileResourceObjects.service &&\n    (await k8sCreate(\n      ServiceModel,\n      createService(formData, devfileResourceObjects.imageStream, devfileResourceObjects.service),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const routeResponse =\n    devfileResourceObjects.route &&\n    (await k8sCreate(\n      RouteModel,\n      createRoute(formData, devfileResourceObjects.imageStream, devfileResourceObjects.route),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const devfileResources = [\n    imageStreamResponse,\n    buildConfigResponse,\n    webhookSecretResponse,\n    deploymentResponse,\n  ];\n\n  serviceModelResponse && devfileResources.push(serviceModelResponse);\n  routeResponse && devfileResources.push(routeResponse);\n\n  return devfileResources;\n};\n\nexport const createOrUpdateResources = async (\n  t: TFunction,\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: {\n      strategy: buildStrategy,\n      triggers: { webhook: webhookTrigger },\n      option: buildOption,\n    },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    git: { url: repository, type: gitType, ref },\n    pipeline,\n    resources,\n  } = formData;\n  const imageStreamName = _.get(imageStream, 'metadata.name');\n  const originalRepository =\n    appResources?.buildConfig?.data?.spec?.source?.git?.uri ??\n    appResources?.pipeline?.data?.spec?.params?.find((param) => param?.name === 'GIT_REPO')\n      ?.default;\n  createNewProject && (await createProject(formData.project));\n\n  const responses: K8sResourceKind[] = [];\n  let generatedImageStreamName: string = '';\n  if (\n    resources === Resources.KnativeService &&\n    originalRepository &&\n    originalRepository !== repository\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  if (buildStrategy === BuildStrategyType.Devfile) {\n    if (verb !== 'create') {\n      throw new Error(t('devconsole~Cannot update Devfile resources'));\n    }\n    return createDevfileResources(formData, dryRun, appResources, generatedImageStreamName);\n  }\n\n  if (pipeline.type === PipelineType.PAC && formData?.pipeline?.enabled) {\n    const pacRepository = formData?.pac?.repository;\n    const labels = formData?.labels;\n    const repo = await createRepositoryResources(pacRepository, namespace, labels, dryRun);\n    responses.push(repo);\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  if (pipeline.enabled && pipeline.type !== PipelineType.PAC) {\n    if (!dryRun) {\n      const pipelineResources = await managePipelineResources(\n        formData,\n        appResources?.pipeline?.data,\n      );\n      responses.push(...pipelineResources);\n    }\n  } else if (buildOption === BuildOptions.BUILDS) {\n    responses.push(\n      await createOrUpdateBuildConfig(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.buildConfig?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    responses.push(\n      await createOrUpdateShipwrightBuild(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.shipwrightBuild?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  }\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n    if (webhookTrigger) {\n      responses.push(await createWebhookSecret(formData, imageStream, gitType, dryRun));\n    }\n  }\n\n  if (formData.resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          }\n        : {\n            ...originalAnnotations,\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    const knativeResources = await Promise.all([\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    ]);\n    return [...knativeResources, ...responses];\n  }\n\n  if (formData.resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  } else if (formData.resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  }\n\n  if (\n    !_.isEmpty(ports) ||\n    buildStrategy === BuildStrategyType.Docker ||\n    buildStrategy === BuildStrategyType.Source\n  ) {\n    const originalService = _.get(appResources, 'service.data');\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = _.get(appResources, 'route.data');\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n\nexport const filterDeployedResources = (resources: K8sResourceKind[]) =>\n  resources.filter(\n    (resource) =>\n      resource.kind === DeploymentModel.kind ||\n      resource.kind === DeploymentConfigModel.kind ||\n      (resource.kind === KnServiceModel.kind &&\n        resource.apiVersion === `${KnServiceModel.apiGroup}/${KnServiceModel.apiVersion}`),\n  );\n\nexport const addSearchParamsToRelativeURL = (\n  url: string,\n  searchParams?: URLSearchParams,\n): string => {\n  const urlObj = new URL(url, 'thismessage:/'); // ITEF RFC 2557 section 5 (e)\n\n  urlObj.search = new URLSearchParams({\n    ...Object.fromEntries(urlObj.searchParams),\n    ...(searchParams ? Object.fromEntries(searchParams) : {}),\n  }).toString();\n\n  return urlObj.toString().replace(urlObj.protocol, '');\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n  searchParamOverrides?: URLSearchParams,\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n\n  if (searchParamOverrides) {\n    history.push(addSearchParamsToRelativeURL(redirectURL, searchParamOverrides));\n  } else {\n    history.push(redirectURL);\n  }\n};\n\nexport const isRouteAdvOptionsUsed = (\n  type: string,\n  routeData: RouteData,\n  ksvcRouteData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && routeData) {\n    if (!!routeData.hostname || !!routeData.path || !routeData.secure) return true;\n    if (routeData?.tls) {\n      for (const tlsKey in routeData.tls) {\n        if (routeData.tls.hasOwnProperty(tlsKey)) {\n          if (\n            ['caCertificate', 'certificate', 'destinationCACertificate', 'key'].includes(tlsKey) &&\n            !!routeData.tls[tlsKey]\n          )\n            return true;\n          if (tlsKey === 'insecureEdgeTerminationPolicy' && routeData.tls[tlsKey] !== 'None')\n            return true;\n          if (tlsKey === 'termination' && routeData.tls[tlsKey] !== 'reencrypt') return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (ksvcRouteData.domainMapping?.length > 0) return true;\n  return false;\n};\n\nexport const isScalingAdvOptions = (\n  type: string,\n  scalingData: DeploymentData,\n  ksvcData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && scalingData?.replicas > 1) {\n    return true;\n  }\n  const ksvcScalingData = ksvcData?.scaling;\n  if (ksvcScalingData) {\n    for (const scKey in ksvcScalingData) {\n      if (ksvcScalingData.hasOwnProperty(scKey)) {\n        if (['concurrencylimit', 'maxpods', 'minpods'].includes(scKey) && !!ksvcScalingData[scKey])\n          return true;\n        if (\n          scKey === 'concurrencytarget' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencytarget\n        )\n          return true;\n        if (\n          scKey === 'concurrencyutilization' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencyutilization\n        )\n          return true;\n        if (scKey === 'autoscale' && ksvcScalingData[scKey]) {\n          const autoscaleData = ksvcScalingData[scKey];\n          for (const asKey in autoscaleData) {\n            if (autoscaleData.hasOwnProperty(asKey)) {\n              if (\n                asKey === 'autoscalewindow' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindow\n              )\n                return true;\n              if (\n                asKey === 'autoscalewindowUnit' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindowUnit\n              )\n                return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const isResourceLimitAdvOptions = (resLimits: LimitsData): boolean => {\n  const isLimitUsed = (resLimitObj) => {\n    for (const limitKey in resLimitObj) {\n      if (resLimitObj.hasOwnProperty(limitKey)) {\n        if (['limit', 'request'].includes(limitKey) && !!resLimitObj[limitKey]) return true;\n        if (limitKey === 'limitUnit' && resLimitObj[limitKey] !== resLimitObj.defaultLimitUnit)\n          return true;\n        if (limitKey === 'requestUnit' && resLimitObj[limitKey] !== resLimitObj.defaultRequestUnit)\n          return true;\n      }\n    }\n    return false;\n  };\n\n  if (isLimitUsed(resLimits.cpu) || isLimitUsed(resLimits.memory)) return true;\n  return false;\n};\n\nexport const getTelemetryImport = (values: GitImportFormData) => {\n  if (!values) return {};\n  // get devfile data if exists\n  let devfileJson;\n  if (values.devfile?.devfileContent) {\n    devfileJson = safeYAMLToJS(values.devfile.devfileContent);\n  }\n  const applicationType =\n    (!values.application?.selectedKey && values.application?.name) ||\n    values.application?.selectedKey === values.application?.name\n      ? 'default'\n      : values.application?.selectedKey === CREATE_APPLICATION_KEY && !!values.application?.name\n      ? 'custom'\n      : 'none';\n  const resourceType =\n    values.resources === Resources.Kubernetes\n      ? 'Deployment'\n      : values.resources === Resources.OpenShift\n      ? 'DeploymentConfig'\n      : values.resources === Resources.KnativeService && 'Knative Service';\n  const selStrategy = values.import?.selectedStrategy?.name;\n  const telemetryImportData = {\n    useRecommended: values.image?.recommended === values.image?.selected,\n    recommendedStrategy: values.import?.recommendedStrategy?.name,\n    recommendedBuilderImage: values.image?.recommended,\n    strategy: selStrategy,\n    builderImage: values.image?.selected,\n\n    devFileLanguage: devfileJson?.metadata?.projectType || '',\n    devFileProjectType: devfileJson?.metadata?.language || '',\n\n    application: applicationType,\n\n    resource: resourceType,\n\n    targetPortChanged: !!values.route?.unknownTargetPort,\n\n    // currently run command is being used only for Node app\n    useRunCommand: !!values.image?.imageEnv?.NPM_RUN,\n\n    useAdvancedOptionsGit: values.git.dir !== '/' || !!values.git.ref || !!values.git.secret,\n\n    useAdvancedOptionsBuild:\n      values.build?.env.length > 0 || _.some(values.build?.triggers, (key) => !key),\n    useAdvancedOptionsDeployment:\n      selStrategy !== 'Devfile' &&\n      (values.deployment?.env.length > 0 || !values.deployment?.triggers?.image),\n    useAdvancedOptionsRoute: isRouteAdvOptionsUsed(\n      values.resources,\n      values.route,\n      values.serverless,\n    ),\n    useAdvancedOptionsHealthChecks:\n      values.healthChecks?.livenessProbe?.enabled ||\n      values.healthChecks?.readinessProbe?.enabled ||\n      values.healthChecks?.startupProbe?.enabled,\n    useAdvancedOptionsScaling: isScalingAdvOptions(\n      values.resources,\n      values.deployment,\n      values.serverless,\n    ),\n    useAdvancedOptionsResourceLimits: isResourceLimitAdvOptions(values.limits),\n    useAdvancedOptionsLabels: !_.isEmpty(values.labels),\n  };\n\n  return telemetryImportData;\n};\n","import * as _ from 'lodash';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport {\n  NameValueFromPair,\n  NameValuePair,\n} from '@console/shared/src/components/formik-fields/field-types';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n  PIPELINE_STRATEGY_LABEL,\n} from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind, TektonParam, TektonWorkspace } from '../../../types';\nimport { VolumeTypes } from '../../pipelines/const';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getServerlessFunctionDefaultPersistentVolumeClaim,\n} from '../../pipelines/modals/common/utils';\nimport { submitStartPipeline } from '../../pipelines/modals/start-pipeline/submit-utils';\nimport { StartPipelineFormValues } from '../../pipelines/modals/start-pipeline/types';\nimport { createPipelineResource } from '../../pipelines/pipeline-resource/pipelineResource-utils';\nimport { PipelineData } from '../import-types';\n\nconst getImageUrl = (name: string, namespace: string) => {\n  return `image-registry.openshift-image-registry.svc:5000/${namespace}/${name}`;\n};\n\nexport const createGitResource = (url: string, namespace: string, ref: string = 'master') => {\n  const params = { url, revision: ref };\n  return createPipelineResource(params, 'git', namespace);\n};\n\nexport const createImageResource = (name: string, namespace: string) => {\n  const params = {\n    url: getImageUrl(name, namespace),\n  };\n\n  return createPipelineResource(params, 'image', namespace);\n};\n\nexport const getPipelineParams = (\n  params: TektonParam[],\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: any,\n) => {\n  return (params || []).map((param) => {\n    switch (param.name) {\n      case 'APP_NAME':\n        return { ...param, default: name };\n      case 'GIT_REPO':\n        return { ...param, default: gitUrl };\n      case 'GIT_REVISION':\n        return { ...param, default: gitRef || '' };\n      case 'PATH_CONTEXT':\n        return { ...param, default: gitDir.replace(/^\\//, '') || param.default };\n      case 'IMAGE_NAME':\n        return { ...param, default: getImageUrl(name, namespace) };\n      case 'DOCKERFILE':\n        return { ...param, default: dockerfilePath };\n      case 'VERSION':\n        return { ...param, default: tag || param.default };\n      case 'BUILD_ENVS':\n        return { ...param, default: buildEnv || param.default };\n      default:\n        return param;\n    }\n  });\n};\n\nexport const pipelineRuntimeOrVersionChanged = (\n  template: PipelineKind,\n  pipeline: PipelineKind,\n): boolean =>\n  template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_LABEL] ||\n  template.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL];\n\nexport const isDockerPipeline = (template: PipelineKind): boolean =>\n  template?.metadata?.labels?.[PIPELINE_STRATEGY_LABEL] === 'docker';\n\nexport const createPipelineForImportFlow = async (\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  pipeline: PipelineData,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n) => {\n  const template = _.cloneDeep(pipeline.template);\n\n  template.metadata = {\n    name: `${name}`,\n    namespace,\n    labels: {\n      ...template.metadata?.labels,\n      ...labels,\n      'app.kubernetes.io/instance': name,\n      'app.kubernetes.io/name': name,\n      ...(!isDockerPipeline(template) && {\n        [PIPELINE_RUNTIME_VERSION_LABEL]: tag,\n      }),\n    },\n  };\n\n  template.spec.params =\n    template.spec.params &&\n    getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n\n  return k8sCreate(PipelineModel, template, { ns: namespace });\n};\n\nexport const createPipelineRunForImportFlow = async (\n  pipeline: PipelineKind,\n): Promise<PipelineRunKind> => {\n  const isServerlessFunctionPipeline =\n    pipeline?.metadata?.labels?.['function.knative.dev'] === 'true';\n  const pipelineInitialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n      ...workspace,\n      type: VolumeTypes.VolumeClaimTemplate,\n      data: isServerlessFunctionPipeline\n        ? getServerlessFunctionDefaultPersistentVolumeClaim(pipeline?.metadata?.name)\n        : getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n    })),\n    secretOpen: false,\n  };\n  return submitStartPipeline(pipelineInitialValues, pipeline);\n};\nexport const updatePipelineForImportFlow = async (\n  pipeline: PipelineKind,\n  template: PipelineKind,\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n): Promise<PipelineKind> => {\n  let updatedPipeline = _.cloneDeep(pipeline);\n\n  if (!template) {\n    updatedPipeline.metadata.labels = _.omit(\n      { ...updatedPipeline.metadata.labels, ...labels },\n      'app.kubernetes.io/instance',\n    );\n  } else {\n    if (pipelineRuntimeOrVersionChanged(template, pipeline)) {\n      updatedPipeline = _.cloneDeep(template);\n      updatedPipeline.metadata = {\n        resourceVersion: pipeline.metadata.resourceVersion,\n        name: `${name}`,\n        namespace,\n        labels: {\n          ...template.metadata?.labels,\n          ...labels,\n          'app.kubernetes.io/instance': name,\n          'app.kubernetes.io/name': name,\n          ...(!isDockerPipeline(template) && { [PIPELINE_RUNTIME_VERSION_LABEL]: tag }),\n        },\n      };\n    }\n\n    updatedPipeline.spec.params = getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n  }\n  return k8sUpdate(PipelineModel, updatedPipeline, namespace, name);\n};\n","import * as React from 'react';\nimport { Divider } from '@patternfly/react-core';\nimport { ListPage } from '@console/internal/components/factory';\nimport { ProjectsTable } from '@console/internal/components/namespace';\nimport { PageHeading } from '@console/internal/components/utils';\nimport './ProjectListPage.scss';\n\nexport type ProjectListPageProps = {\n  title: string;\n  listComponent?: React.ComponentType<any>;\n  children?: React.ReactNode;\n  badge?: React.ReactNode;\n};\nconst ProjectListPage: React.FC<ProjectListPageProps> = ({\n  badge,\n  title,\n  children,\n  listComponent,\n  ...listPageProps\n}) => (\n  <div className=\"odc-project-list-page\">\n    <PageHeading title={title} badge={badge}>\n      {children}\n    </PageHeading>\n    <Divider className=\"co-divider\" />\n    <ListPage\n      {...listPageProps}\n      showTitle={false}\n      kind=\"Project\"\n      ListComponent={listComponent || ProjectsTable}\n      canCreate={false}\n      filterLabel=\"by name or display name\"\n      textFilter=\"project-name\"\n    />\n  </div>\n);\n\nexport default ProjectListPage;\n","import * as React from 'react';\nimport { AsyncComponent } from '../utils';\n\nexport const OverviewListPageLoader = () =>\n  import('./OverviewListPage' /* webpackChunkName: \"overview-list-page\" */).then(\n    (m) => m.OverviewListPage,\n  );\n\nexport const OverviewListPage: React.FC = (props) => {\n  return <AsyncComponent loader={OverviewListPageLoader} {...props} />;\n};\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle, Button } from '@patternfly/react-core';\nimport DetailsBody from '@console/shared/src/components/dashboard/details-card/DetailsBody';\nimport { OverviewDetailItem } from '@openshift-console/plugin-shared/src';\nimport { getName, getRequester, GreenCheckCircleIcon } from '@console/shared';\nimport { LabelList, resourcePathFromModel } from '../../utils';\nimport { ProjectModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { Link } from 'react-router-dom-v5-compat';\n\nexport const DetailsCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const keys = _.keys(obj.metadata.labels).sort();\n  const labelsSubset = _.take(keys, 3);\n  const firstThreelabels = _.pick(obj.metadata.labels, labelsSubset);\n  const description = obj.metadata.annotations?.['openshift.io/description'];\n  const detailsLink = `${resourcePathFromModel(ProjectModel, obj.metadata.name)}/details`;\n  const serviceMeshEnabled = obj.metadata?.labels?.['maistra.io/member-of'];\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"details-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={detailsLink} data-test=\"details-card-view-all\">\n                {t('public~View all')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Details')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <DetailsBody>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Name')}>\n            {getName(obj)}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Requester')}>\n            {getRequester(obj) || <span className=\"text-muted\">{t('public~No requester')}</span>}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Labels')}>\n            <div className=\"co-project-dashboard__details-labels\">\n              <LabelList kind={ProjectModel.kind} labels={firstThreelabels} />\n              {keys.length > 3 && (\n                <Button variant=\"link\">\n                  <Link to={detailsLink}>{t('public~View all')}</Link>\n                </Button>\n              )}\n            </div>\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Description')}>\n            <span\n              className={cx({\n                'text-muted': !description,\n                'co-project-dashboard-details-card__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </span>\n          </OverviewDetailItem>\n          {serviceMeshEnabled && (\n            <OverviewDetailItem isLoading={!obj} title={t('public~Service mesh')}>\n              <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n            </OverviewDetailItem>\n          )}\n        </DetailsBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle, Gallery } from '@patternfly/react-core';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport { Status } from '@console/shared';\nimport { LoadingInline } from '@console/internal/components/utils/status-box';\nimport {\n  DashboardsOverviewHealthResourceSubsystem,\n  DashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthSubsystem,\n  useExtensions,\n} from '@console/plugin-sdk';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceHealthItem } from '../dashboards-page/cluster-dashboard/health-item';\n\nimport { DashboardAlerts } from '../dashboards-page/cluster-dashboard/status-card';\n\nexport const StatusCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const filterSubsystems = (subsystems: DashboardsOverviewHealthSubsystem[]) =>\n    subsystems.filter(isDashboardsOverviewHealthResourceSubsystem);\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const subsystem: DashboardsOverviewHealthResourceSubsystem = React.useMemo(\n    () =>\n      filterSubsystems(subsystemExtensions).find(\n        (s) => s.properties.title === 'Image Vulnerabilities',\n      ),\n    [subsystemExtensions],\n  );\n  const {\n    metadata: { name: namespace },\n  } = obj;\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"status-card\" className=\"co-overview-card--gradient\">\n      <CardHeader>\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      {obj ? (\n        <>\n          <HealthBody>\n            <Gallery className=\"co-overview-status__health\" hasGutter>\n              <div className=\"co-status-card__health-item\" data-test=\"project-status\">\n                <Status status={obj.status?.phase} className=\"co-icon-and-text--lg\" />\n              </div>\n              {subsystem && (\n                <ResourceHealthItem subsystem={subsystem.properties} namespace={namespace} />\n              )}\n            </Gallery>\n          </HealthBody>\n          <DashboardAlerts labelSelector={{ namespace }} />\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport {\n  isProjectOverviewUtilizationItem,\n  ProjectOverviewUtilizationItem,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeDecimalBytesPerSec,\n  humanizeNumber,\n} from '../../utils';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  getUtilizationQueries,\n  ProjectQueries,\n  getMultilineQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport {\n  PrometheusUtilizationItem,\n  PrometheusMultilineUtilizationItem,\n} from '../dashboards-page/cluster-dashboard/utilization-card';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport {\n  CPUPopover,\n  FilesystemPopover,\n  MemoryPopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  ProjectUtilizationContext,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const UtilizationCard: React.FC = () => {\n  const { t } = useTranslation();\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = obj?.metadata?.name;\n  const [queries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(projectName), getMultilineQueries(projectName)],\n    [projectName],\n  );\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ProjectOverviewUtilizationItem>(\n    isProjectOverviewUtilizationItem,\n  );\n\n  return (\n    <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <UtilizationDurationDropdown />\n            </>\n          ),\n          hasNoOffset: false,\n          className: undefined,\n        }}\n      >\n        <CardTitle>{t('public~Utilization')}</CardTitle>\n      </CardHeader>\n      <UtilizationBody>\n        <ProjectUtilizationContext.Provider value={projectName}>\n          <PrometheusUtilizationItem\n            title={t('public~CPU')}\n            humanizeValue={humanizeCpuCores}\n            utilizationQuery={queries[ProjectQueries.CPU_USAGE]}\n            requestQuery={queries[ProjectQueries.CPU_REQUESTS]}\n            TopConsumerPopover={CPUPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Memory')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.MEMORY_USAGE]}\n            requestQuery={queries[ProjectQueries.MEMORY_REQUESTS]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={MemoryPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Filesystem')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.FILESYSTEM_USAGE]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={FilesystemPopover}\n            namespace={projectName}\n          />\n          <PrometheusMultilineUtilizationItem\n            title={t('public~Network transfer')}\n            humanizeValue={humanizeDecimalBytesPerSec}\n            queries={multilineQueries[ProjectQueries.NETWORK_UTILIZATION]}\n            TopConsumerPopovers={networkPopovers}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Pod count')}\n            humanizeValue={humanizeNumber}\n            utilizationQuery={queries[ProjectQueries.POD_COUNT]}\n            namespace={projectName}\n          />\n          {dynamicItemExtensions.map(({ uid, properties }) => (\n            <PrometheusUtilizationItem\n              key={uid}\n              title={properties.title}\n              humanizeValue={properties.humanize}\n              utilizationQuery={properties.getUtilizationQuery(projectName)}\n              requestQuery={properties.getRequestQuery?.(projectName)}\n              limitQuery={properties.getLimitQuery?.(projectName)}\n              totalQuery={properties.getTotalQuery?.(projectName)}\n              namespace={projectName}\n              TopConsumerPopover={properties.TopConsumerPopover}\n            />\n          ))}\n        </ProjectUtilizationContext.Provider>\n      </UtilizationBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport {\n  getTop25ConsumerQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport { ProjectModel, PodModel, NodeModel } from '../../../../models';\nimport {\n  humanizeCpuCores,\n  humanizeBinaryBytes,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils';\n\nexport const ClusterUtilizationContext = React.createContext('.+');\n\nconst useConsumers = (\n  nsQuery: OverviewQuery,\n  podQuery: OverviewQuery,\n  nodeQuery: OverviewQuery,\n) => {\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  return React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[nsQuery],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[podQuery],\n        model: PodModel,\n        metric: 'pod',\n      },\n      {\n        query: consumerQueries[nodeQuery],\n        model: NodeModel,\n        metric: 'instance',\n      },\n    ];\n  }, [nodeQuery, nodeType, nsQuery, podQuery]);\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_CPU,\n    OverviewQuery.PODS_BY_CPU,\n    OverviewQuery.NODES_BY_CPU,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeCpuCores}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_MEMORY,\n    OverviewQuery.PODS_BY_MEMORY,\n    OverviewQuery.NODES_BY_MEMORY,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const StoragePopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_STORAGE,\n    OverviewQuery.PODS_BY_STORAGE,\n    OverviewQuery.NODES_BY_STORAGE,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const PodPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  const consumers = React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[OverviewQuery.PROJECTS_BY_PODS],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[OverviewQuery.NODES_BY_PODS],\n        model: NodeModel,\n        metric: 'node',\n      },\n    ];\n  }, [nodeType]);\n  return (\n    <ConsumerPopover\n      title={t('public~Pod count')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeNumber}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_IN,\n    OverviewQuery.PODS_BY_NETWORK_IN,\n    OverviewQuery.NODES_BY_NETWORK_IN,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_OUT,\n    OverviewQuery.PODS_BY_NETWORK_OUT,\n    OverviewQuery.NODES_BY_NETWORK_OUT,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport {\n  ProjectQueries,\n  getTopConsumerQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport { PodModel } from '../../../models';\nimport { humanizeCpuCores, humanizeBinaryBytes, humanizeDecimalBytesPerSec } from '../../utils';\n\nexport const ProjectUtilizationContext = React.createContext('');\n\nconst useConsumers = (query: ProjectQueries) => {\n  const namespace = React.useContext(ProjectUtilizationContext);\n  const consumers = React.useMemo(\n    () => [\n      {\n        query: getTopConsumerQueries(namespace)[query],\n        model: PodModel,\n        metric: 'pod',\n      },\n    ],\n    [query, namespace],\n  );\n  return {\n    consumers,\n    namespace,\n  };\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_CPU);\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      humanize={humanizeCpuCores}\n      {...consumers}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_MEMORY);\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const FilesystemPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_FILESYSTEM);\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_IN);\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_OUT);\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport {\n  PodModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  PersistentVolumeClaimModel,\n  ServiceModel,\n  StatefulSetModel,\n  RouteModel,\n  ConfigMapModel,\n  SecretModel,\n  VolumeSnapshotModel,\n} from '../../../models';\nimport {\n  ResourceInventoryItem,\n  StatusGroupMapper,\n} from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport {\n  getPodStatusGroups,\n  getPVCStatusGroups,\n  getVSStatusGroups,\n} from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { FirehoseResult, FirehoseResource, useAccessReview } from '../../utils';\nimport { K8sKind, referenceForModel } from '../../../module/k8s';\nimport { getName } from '@console/shared';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  useExtensions,\n  ProjectDashboardInventoryItem,\n  isProjectDashboardInventoryItem,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsProjectOverviewInventoryItem as DynamicProjectDashboardInventoryItem,\n  isDashboardsProjectOverviewInventoryItem as isDynamicProjectDashboardInventoryItem,\n  K8sResourceCommon,\n  WatchK8sResources,\n  ProjectOverviewInventoryItem,\n  isProjectOverviewInventoryItem,\n} from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\n\nconst createFirehoseResource = (model: K8sKind, projectName: string): FirehoseResource => ({\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  isList: true,\n  prop: 'resource',\n  namespace: projectName,\n});\n\nconst ProjectInventoryItem = withDashboardResources(\n  ({\n    projectName,\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    model,\n    mapper,\n    additionalResources,\n    additionalDynamicResources,\n  }: ProjectInventoryItemProps) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const resource = createFirehoseResource(model, projectName);\n        watchK8sResource(resource);\n        if (additionalResources) {\n          additionalResources.forEach((r) => watchK8sResource({ ...r, namespace: projectName }));\n        }\n        return () => {\n          stopWatchK8sResource(resource);\n          if (additionalResources) {\n            additionalResources.forEach(stopWatchK8sResource);\n          }\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName, model, additionalResources]);\n\n    const resourceData = _.get(resources.resource, 'data', []) as FirehoseResult['data'];\n    const resourceLoaded = _.get(resources.resource, 'loaded');\n    const resourceLoadError = _.get(resources.resource, 'loadError');\n\n    const additionalResourcesData = additionalResources\n      ? additionalResources.reduce((acc, r) => {\n          acc[r.prop] = _.get(resources[r.prop], 'data');\n          return acc;\n        }, {})\n      : {};\n    const additionalResourcesLoaded = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .every((r) => _.get(resources[r.prop], 'loaded'))\n      : true;\n    const additionalResourcesLoadError = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .some((r) => !!_.get(resources[r.prop], 'loadError'))\n      : false;\n\n    const dynamicResources = useK8sWatchResources(additionalDynamicResources || {});\n    const dynamicResourcesError = Object.values(dynamicResources).find((r) => r.loadError)\n      ?.loadError;\n    const dynamicResourcesLoaded = Object.keys(dynamicResources).every(\n      (key) => dynamicResources[key].loaded,\n    );\n\n    return (\n      <StackItem>\n        <ResourceInventoryItem\n          kind={model}\n          isLoading={\n            !projectName || !resourceLoaded || !additionalResourcesLoaded || !dynamicResourcesLoaded\n          }\n          namespace={projectName}\n          error={!!resourceLoadError || additionalResourcesLoadError || dynamicResourcesError}\n          resources={resourceData}\n          additionalResources={additionalResourcesData}\n          mapper={mapper}\n          dataTest=\"resource-inventory-item\"\n        />\n      </StackItem>\n    );\n  },\n);\n\nexport const InventoryCard = () => {\n  const itemExtensions = useExtensions<ProjectDashboardInventoryItem>(\n    isProjectDashboardInventoryItem,\n  );\n  const [dynamicItemExtensions] = useResolvedExtensions<DynamicProjectDashboardInventoryItem>(\n    isDynamicProjectDashboardInventoryItem,\n  );\n  const [inventoryExtensions] = useResolvedExtensions<ProjectOverviewInventoryItem>(\n    isProjectOverviewInventoryItem,\n  );\n\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    namespace: projectName,\n    verb: 'list',\n  });\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"inventory-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Inventory')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Stack hasGutter>\n          <ProjectInventoryItem projectName={projectName} model={DeploymentModel} />\n          <ProjectInventoryItem projectName={projectName} model={DeploymentConfigModel} />\n          <ProjectInventoryItem projectName={projectName} model={StatefulSetModel} />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PodModel}\n            mapper={getPodStatusGroups}\n          />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PersistentVolumeClaimModel}\n            mapper={getPVCStatusGroups}\n          />\n          <ProjectInventoryItem projectName={projectName} model={ServiceModel} />\n          <ProjectInventoryItem projectName={projectName} model={RouteModel} />\n          <ProjectInventoryItem projectName={projectName} model={ConfigMapModel} />\n          {canListSecrets && <ProjectInventoryItem projectName={projectName} model={SecretModel} />}\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={VolumeSnapshotModel}\n            mapper={getVSStatusGroups}\n          />\n          {itemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalResources={item.properties.additionalResources}\n            />\n          ))}\n          {dynamicItemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalDynamicResources={item.properties.additionalResources}\n            />\n          ))}\n          {inventoryExtensions.map(({ uid, properties: { component: Component } }) => (\n            <ErrorBoundary key={uid}>\n              <StackItem>\n                <Component projectName={projectName} />\n              </StackItem>\n            </ErrorBoundary>\n          ))}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\ntype ProjectInventoryItemProps = DashboardItemProps & {\n  projectName: string;\n  model: K8sKind;\n  mapper?: StatusGroupMapper;\n  additionalResources?: FirehoseResource[];\n  additionalDynamicResources?: WatchK8sResources<{\n    [key: string]: K8sResourceCommon[];\n  }>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport ActivityBody, {\n  RecentEventsBody,\n  OngoingActivityBody,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { FirehoseResource, FirehoseResult } from '../../utils';\nimport { EventModel } from '../../../models';\nimport { EventKind, K8sKind } from '../../../module/k8s';\nimport {\n  useExtensions,\n  DashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsOverviewResourceActivity as DynamicDashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity as isDynamicDashboardsOverviewResourceActivity,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { uniqueResource } from '../dashboards-page/cluster-dashboard/utils';\nimport { RootState } from '../../../redux';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { getName } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\nconst getEventsResource = (projectName: string): FirehoseResource => ({\n  isList: true,\n  kind: EventModel.kind,\n  prop: 'events',\n  namespace: projectName,\n});\n\nconst RecentEvent = withDashboardResources<RecentEventProps>(\n  ({ watchK8sResource, stopWatchK8sResource, resources, projectName, viewEvents }) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const eventsResource = getEventsResource(projectName);\n        watchK8sResource(eventsResource);\n        return () => {\n          stopWatchK8sResource(eventsResource);\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName]);\n    return (\n      <RecentEventsBody\n        events={resources.events as FirehoseResult<EventKind[]>}\n        moreLink={viewEvents}\n      />\n    );\n  },\n);\n\nconst mapStateToProps = (state: RootState): OngoingActivityReduxProps => ({\n  models: state.k8s.getIn(['RESOURCES', 'models']) as ImmutableMap<string, K8sKind>,\n});\n\nconst OngoingActivity = connect(mapStateToProps)(\n  withDashboardResources(\n    ({\n      watchK8sResource,\n      stopWatchK8sResource,\n      resources,\n      projectName,\n      models,\n    }: DashboardItemProps & OngoingActivityProps) => {\n      const resourceActivityExtensions = useExtensions<DashboardsOverviewResourceActivity>(\n        isDashboardsOverviewResourceActivity,\n      );\n      const [dynamicResourceActivityExtensions] = useResolvedExtensions<\n        DynamicDashboardsOverviewResourceActivity\n      >(isDynamicDashboardsOverviewResourceActivity);\n\n      const resourceActivities = React.useMemo(\n        () =>\n          [...resourceActivityExtensions, ...dynamicResourceActivityExtensions].filter((e) => {\n            const model = models.get(e.properties.k8sResource.kind);\n            return model && model.namespaced;\n          }),\n        [resourceActivityExtensions, dynamicResourceActivityExtensions, models],\n      );\n\n      React.useEffect(() => {\n        if (projectName) {\n          resourceActivities.forEach((a, index) => {\n            watchK8sResource(\n              uniqueResource({ ...a.properties.k8sResource, namespace: projectName }, index),\n            );\n          });\n          return () => {\n            resourceActivities.forEach((a, index) => {\n              stopWatchK8sResource(uniqueResource(a.properties.k8sResource, index));\n            });\n          };\n        }\n      }, [watchK8sResource, stopWatchK8sResource, projectName, resourceActivities]);\n\n      const allResourceActivities = React.useMemo(\n        () =>\n          _.flatten(\n            resourceActivities.map((a, index) => {\n              const k8sResources = _.get(\n                resources,\n                [uniqueResource(a.properties.k8sResource, index).prop, 'data'],\n                [],\n              ) as FirehoseResult['data'];\n              return k8sResources\n                .filter((r) => (a.properties.isActivity ? a.properties.isActivity(r) : true))\n                .map((r) => ({\n                  resource: r,\n                  timestamp: a.properties.getTimestamp ? a.properties.getTimestamp(r) : null,\n                  loader: (a as DashboardsOverviewResourceActivity)?.properties?.loader,\n                  component: (a as ResolvedExtension<DynamicDashboardsOverviewResourceActivity>)\n                    ?.properties?.component,\n                }));\n            }),\n          ),\n        [resourceActivities, resources],\n      );\n\n      const resourcesLoaded = React.useMemo(\n        () =>\n          resourceActivities.every((a, index) =>\n            _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'loaded']),\n          ),\n        [resourceActivities, resources],\n      );\n\n      return (\n        <OngoingActivityBody\n          loaded={projectName && resourcesLoaded && models.size !== 0}\n          resourceActivities={allResourceActivities}\n        />\n      );\n    },\n  ),\n);\n\nexport const ActivityCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const viewEvents = `/k8s/ns/${projectName}/events`;\n  const { t } = useTranslation();\n  return (\n    <Card\n      data-test-id=\"activity-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={viewEvents} data-test=\"view-events-link\">\n                {t('public~View events')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Activity')}</CardTitle>\n      </CardHeader>\n      <ActivityBody className=\"co-project-dashboard__activity-body\">\n        <OngoingActivity projectName={projectName} />\n        <RecentEvent projectName={projectName} viewEvents={viewEvents} />\n      </ActivityBody>\n    </Card>\n  );\n};\n\ntype RecentEventProps = DashboardItemProps & {\n  projectName: string;\n  viewEvents: string;\n};\n\ntype OngoingActivityReduxProps = {\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype OngoingActivityProps = OngoingActivityReduxProps & {\n  projectName: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle } from '@patternfly/react-core';\nimport LauncherBody from '@console/shared/src/components/dashboard/launcher-card/LauncherBody';\nimport LauncherItem from '@console/shared/src/components/dashboard/launcher-card/LauncherItem';\nimport { ProjectDashboardContext } from './project-dashboard-context';\n\nexport const LauncherCard: React.FC = () => {\n  const { namespaceLinks } = React.useContext(ProjectDashboardContext);\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"launcher-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Launcher')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <LauncherBody>\n          {_.sortBy(namespaceLinks, 'spec.text').map((nl) => (\n            <LauncherItem key={nl.metadata.uid} consoleLink={nl} />\n          ))}\n        </LauncherBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\n\nimport './launcher-card.scss';\n\nconst LauncherBody: React.FC = ({ children }) => (\n  <div className=\"co-launcher-card__body\">{children}</div>\n);\n\nexport default LauncherBody;\n","import * as React from 'react';\nimport { ExternalLink } from '@console/internal/components/utils/link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nconst LauncherItem: React.FC<LauncherItemProps> = ({ consoleLink }) => (\n  <ExternalLink\n    additionalClassName=\"co-launcher-card__item\"\n    href={consoleLink.spec.href}\n    text={consoleLink.spec.text}\n    dataTestID=\"launcher-item\"\n  />\n);\n\nexport default LauncherItem;\n\ntype LauncherItemProps = {\n  consoleLink: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport ResourceQuotaBody from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody';\nimport ResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem';\nimport AppliedClusterResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem';\nimport { AppliedClusterResourceQuotaModel, ResourceQuotaModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceQuotaKind, AppliedClusterResourceQuotaKind } from '../../../module/k8s';\n\nexport const ResourceQuotaCard = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n\n  const [quotas, rqLoaded, rqLoadError] = useK8sWatchResource<ResourceQuotaKind[]>({\n    groupVersionKind: {\n      kind: ResourceQuotaModel.kind,\n      version: ResourceQuotaModel.apiVersion,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const [clusterQuotas, acrqLoaded, acrqLoadError] = useK8sWatchResource<\n    AppliedClusterResourceQuotaKind[]\n  >({\n    groupVersionKind: {\n      kind: AppliedClusterResourceQuotaModel.kind,\n      version: AppliedClusterResourceQuotaModel.apiVersion,\n      group: AppliedClusterResourceQuotaModel.apiGroup,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"resource-quotas-card\">\n      <CardHeader>\n        <CardTitle>{t('public~ResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody error={!!rqLoadError} isLoading={!rqLoaded}>\n          {quotas.length ? (\n            <Stack hasGutter>\n              {quotas.map((rq) => (\n                <StackItem key={rq.metadata.uid}>\n                  <ResourceQuotaItem resourceQuota={rq} />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n      <CardHeader>\n        <CardTitle>{t('public~AppliedClusterResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody\n          error={!!acrqLoadError}\n          isLoading={!acrqLoaded}\n          noText={t('public~No AppliedClusterResourceQuotas')}\n        >\n          {clusterQuotas.length ? (\n            <Stack hasGutter>\n              {clusterQuotas.map((cq) => (\n                <StackItem key={cq.metadata.uid}>\n                  <AppliedClusterResourceQuotaItem\n                    resourceQuota={cq}\n                    namespace={obj.metadata.name}\n                  />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './resource-quota-card.scss';\n\nconst ResourceQuotaBody: React.FC<ResourceQuotaBodyProps> = ({\n  error,\n  isLoading,\n  noText,\n  children,\n}) => {\n  let body: React.ReactNode;\n  const { t } = useTranslation();\n  if (error) {\n    body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n  } else if (isLoading) {\n    body = <div className=\"skeleton-quota\" />;\n  } else if (!React.Children.count(children)) {\n    body = <div className=\"text-secondary\">{noText || t('console-shared~No ResourceQuotas')}</div>;\n  }\n\n  return <>{body || children}</>;\n};\n\nexport default ResourceQuotaBody;\n\ntype ResourceQuotaBodyProps = {\n  error: boolean;\n  isLoading: boolean;\n  noText?: string;\n};\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { ResourceQuotaModel } from '@console/internal/models';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst ResourceQuotaItem: React.FC<ResourceQuotaItemProps> = ({ resourceQuota }) => {\n  const resources = Object.keys(resourceQuota.status?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n\n  const scopes = resourceQuota.spec?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: ResourceQuotaModel.kind,\n                  version: ResourceQuotaModel.apiVersion,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={resourceQuota.metadata.namespace}\n                inline\n                truncate\n                dataTest=\"resource-quota-link\"\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary hard={resourceQuota.status?.hard} used={resourceQuota.status?.used} />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <ResourceQuotaCharts resourceQuota={resourceQuota} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ResourceQuotaItem;\n\ntype ResourceQuotaItemProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { ClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ClusterResourceQuotaChartsProps = {\n  clusterResourceQuota: ClusterResourceQuotaKind;\n};\n\nconst ClusterResourceQuotaCharts = ({\n  clusterResourceQuota,\n}: ClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(clusterResourceQuota.status?.total?.hard ?? {}).map((resourceName) => {\n    const clusterHard = clusterResourceQuota.status.total.hard[resourceName];\n    const clusterUsed = clusterResourceQuota.status.total.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({\n      resourceName,\n      used: clusterUsed,\n      hard: clusterHard,\n    });\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Used',\n              y: percent,\n            },\n            {\n              x: 'Unused',\n              y: 100 - percent,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ClusterResourceQuotaCharts;\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { AppliedClusterResourceQuotaModel } from '@console/internal/models';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst AppliedClusterResourceQuotaItem: React.FC<AppliedClusterResourceQuotaItemProps> = ({\n  resourceQuota,\n  namespace,\n}) => {\n  const resources = Object.keys(resourceQuota.status?.total?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n  const scopes = resourceQuota?.spec?.quota?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen: boolean) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: AppliedClusterResourceQuotaModel.kind,\n                  version: AppliedClusterResourceQuotaModel.apiVersion,\n                  group: AppliedClusterResourceQuotaModel.apiGroup,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={namespace}\n                inline\n                truncate\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary\n            hard={resourceQuota.status?.total?.hard}\n            used={resourceQuota.status?.total?.used}\n          />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <AppliedClusterResourceQuotaCharts\n            appliedClusterResourceQuota={resourceQuota}\n            namespace={namespace}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AppliedClusterResourceQuotaItem;\n\ntype AppliedClusterResourceQuotaItemProps = {\n  resourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n","import * as _ from 'lodash';\nimport { getProbesData } from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport {\n  DeployImageFormData,\n  GitImportFormData,\n  UploadJarFormData,\n} from '@console/dev-console/src/components/import/import-types';\nimport { getAppLabels, mergeData } from '@console/dev-console/src/utils/resource-label-utils';\nimport { ImportStrategy } from '@console/git-service/src';\nimport {\n  K8sResourceKind,\n  ImagePullPolicy,\n  k8sGet,\n  k8sCreate,\n  k8sUpdate,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { NameValuePair } from 'packages/console-shared/src';\nimport { ServiceModel, DomainMappingModel } from '../models';\nimport { DomainMappingResponse, DomainMappingResponseAction } from '../types';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\nexport const getKnativeServiceDepResource = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamUrl: string,\n  imageStreamName?: string,\n  imageStreamTag?: string,\n  imageNamespace?: string,\n  annotations?: { [name: string]: string },\n  originalKnativeService?: K8sResourceKind,\n  generatedImageStreamName?: string,\n): K8sResourceKind => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    runtimeIcon,\n    serverless: { scaling },\n    limits,\n    route: { unknownTargetPort, create, defaultUnknownPort },\n    labels,\n    image: { tag: imageTag },\n    deployment: {\n      env,\n      triggers: { image: imagePolicy },\n    },\n    healthChecks,\n    resources,\n    formType,\n  } = formData;\n  const { fileUpload } = formData as UploadJarFormData;\n  const selectedStrategy = formData?.import?.selectedStrategy;\n\n  const contTargetPort = parseInt(unknownTargetPort, 10) || defaultUnknownPort;\n  const imgPullPolicy = imagePolicy ? ImagePullPolicy.Always : ImagePullPolicy.IfNotPresent;\n  const {\n    concurrencylimit,\n    concurrencytarget,\n    minpods,\n    maxpods,\n    autoscale: { autoscalewindow, autoscalewindowUnit },\n    concurrencyutilization,\n  } = scaling;\n  const {\n    cpu: {\n      request: cpuRequest,\n      requestUnit: cpuRequestUnit,\n      limit: cpuLimit,\n      limitUnit: cpuLimitUnit,\n    },\n    memory: {\n      request: memoryRequest,\n      requestUnit: memoryRequestUnit,\n      limit: memoryLimit,\n      limitUnit: memoryLimitUnit,\n    },\n  } = limits;\n  const defaultLabel = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag: imageStreamTag || imageTag,\n    namespace: imageNamespace,\n    runtimeIcon,\n  });\n  delete defaultLabel.app;\n  if (fileUpload) {\n    const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n    if (jArgsIndex !== -1) {\n      if (fileUpload.javaArgs !== '') {\n        (env[jArgsIndex] as NameValuePair).value = fileUpload.javaArgs;\n      } else {\n        env.splice(jArgsIndex, 1);\n      }\n    } else if (fileUpload.javaArgs !== '') {\n      env.push({ name: 'JAVA_ARGS', value: fileUpload.javaArgs });\n    }\n  }\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n        ...labels,\n        ...(formType === 'serverlessFunction' && { 'function.knative.dev': 'true' }),\n        ...(!create && { 'networking.knative.dev/visibility': `cluster-local` }),\n        ...(((formData as GitImportFormData).pipeline?.enabled || generatedImageStreamName) && {\n          'app.kubernetes.io/name': name,\n        }),\n        ...(selectedStrategy &&\n          selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION && {\n            'function.knative.dev': 'true',\n          }),\n      },\n      annotations: fileUpload ? { ...annotations, jarFileName: fileUpload.name } : annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: {\n            ...defaultLabel,\n            ...labels,\n            'app.kubernetes.io/name': generatedImageStreamName\n              ? formData.name\n              : labels['app.kubernetes.io/name'],\n          },\n          annotations: {\n            ...(concurrencytarget && {\n              'autoscaling.knative.dev/target': `${concurrencytarget}`,\n            }),\n            ...(minpods && { 'autoscaling.knative.dev/min-scale': `${minpods}` }),\n            ...(maxpods && { 'autoscaling.knative.dev/max-scale': `${maxpods}` }),\n            ...(autoscalewindow && {\n              'autoscaling.knative.dev/window': `${autoscalewindow}${autoscalewindowUnit}`,\n            }),\n            ...(concurrencyutilization && {\n              'autoscaling.knative.dev/target-utilization-percentage': `${concurrencyutilization}`,\n            }),\n          },\n        },\n        spec: {\n          ...(concurrencylimit && { containerConcurrency: concurrencylimit }),\n          containers: [\n            {\n              name,\n              image: `${imageStreamUrl}`,\n              ...(contTargetPort && {\n                ports: [\n                  {\n                    containerPort: contTargetPort,\n                  },\n                ],\n              }),\n              imagePullPolicy: imgPullPolicy,\n              securityContext: {\n                allowPrivilegeEscalation: false,\n                capabilities: {\n                  drop: ['ALL'],\n                },\n                runAsNonRoot: true,\n                seccompProfile: {\n                  type: 'RuntimeDefault',\n                },\n              },\n              env,\n              resources: {\n                ...((cpuLimit || memoryLimit) && {\n                  limits: {\n                    ...(cpuLimit && { cpu: `${cpuLimit}${cpuLimitUnit}` }),\n                    ...(memoryLimit && { memory: `${memoryLimit}${memoryLimitUnit}` }),\n                  },\n                }),\n                ...((cpuRequest || memoryRequest) && {\n                  requests: {\n                    ...(cpuRequest && { cpu: `${cpuRequest}${cpuRequestUnit}` }),\n                    ...(memoryRequest && { memory: `${memoryRequest}${memoryRequestUnit}` }),\n                  },\n                }),\n              },\n              ...getProbesData(healthChecks, resources),\n            },\n          ],\n        },\n      },\n    },\n  };\n  let knativeServiceUpdated = {};\n  if (!_.isEmpty(originalKnativeService)) {\n    knativeServiceUpdated = _.omit(originalKnativeService, [\n      'status',\n      'spec.template.metadata.name',\n      'spec.template.spec.containers',\n    ]);\n  }\n  const knativeDeployResource = mergeData(knativeServiceUpdated || {}, newKnativeDeployResource);\n\n  return knativeDeployResource;\n};\n\nconst getDomainMappingDeleteList = (\n  ksvcName: string,\n  allDomainMapping: K8sResourceKind[],\n  selDomainMappingNames: string[],\n): DomainMappingResponse[] => {\n  return allDomainMapping\n    .filter((dmRes) => dmRes.spec?.ref?.name === ksvcName)\n    .filter((dmSvc) => !selDomainMappingNames?.includes(dmSvc.metadata.name))\n    .map((dmDel) => ({\n      action: DomainMappingResponseAction.Delete,\n      resource: dmDel,\n    }));\n};\n\nconst formDomainMappingStruct = (\n  name: string,\n  knativeSvcResource: K8sResourceKind,\n  curDomainMapping?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    kind,\n    apiVersion,\n    metadata: { name: svcName, namespace },\n  } = knativeSvcResource;\n  return {\n    ...(curDomainMapping\n      ? { ...curDomainMapping }\n      : {\n          kind: DomainMappingModel.kind,\n          apiVersion: `${DomainMappingModel.apiGroup}/${DomainMappingModel.apiVersion}`,\n          metadata: {\n            name,\n            namespace,\n          },\n        }),\n    spec: {\n      ref: {\n        name: svcName,\n        kind,\n        apiVersion,\n      },\n    },\n  };\n};\n\nexport const getDomainMappingResources = (\n  knativeSvcResource: K8sResourceKind,\n  selectedDomainMapping: string[],\n): Promise<DomainMappingResponse[]> => {\n  const {\n    metadata: { name, namespace },\n  } = knativeSvcResource;\n  const domainMappingResources = [];\n  return k8sGet(DomainMappingModel, null, namespace)\n    .then((res) => {\n      const allDomainMappingList = res.items;\n      if (!selectedDomainMapping?.length && !allDomainMappingList?.length) {\n        return Promise.resolve([]);\n      }\n\n      // form domain mapping to be deleted\n      const dmDeleteList = getDomainMappingDeleteList(\n        name,\n        allDomainMappingList,\n        selectedDomainMapping,\n      );\n      domainMappingResources.push(...dmDeleteList);\n\n      // form domain mapping to be created or updated\n      const dmCreateUpdateList = selectedDomainMapping.map((domainName) => {\n        const curDomainMapping = allDomainMappingList.find(\n          (curDomain) => curDomain.metadata.name === domainName,\n        );\n        let domainMappingResourceData: DomainMappingResponse;\n        if (curDomainMapping) {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Update,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource, curDomainMapping),\n          };\n        } else {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Create,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource),\n          };\n        }\n        return domainMappingResourceData;\n      });\n      domainMappingResources.push(...dmCreateUpdateList);\n\n      return domainMappingResources;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to get domain mapping resources', err);\n      return domainMappingResources;\n    });\n};\n\nexport const getDomainMappingRequests = async (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  knativeSvcResource: K8sResourceKind,\n  dryRun: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const {\n    serverless: { domainMapping: selectedDomainMapping = [] },\n  } = formData;\n  const domainMappingResources = await getDomainMappingResources(knativeSvcResource, [\n    ...new Set(selectedDomainMapping.map((dm) => dm.replace(/ *\\([^)]*\\) */g, ''))),\n  ]);\n  const requests: Promise<K8sResourceKind>[] = [];\n  domainMappingResources.length &&\n    domainMappingResources.forEach(({ action, resource: dmRes }) => {\n      switch (action) {\n        case DomainMappingResponseAction.Create:\n          requests.push(k8sCreate(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Update:\n          requests.push(k8sUpdate(DomainMappingModel, dmRes, null, null, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Delete:\n          requests.push(k8sKill(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        default:\n          break;\n      }\n    });\n  return requests;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\n\nexport const cephRBDProvisionerSuffix = 'rbd.csi.ceph.com';\n\nexport const snapshotPVCStorageClassAnnotation = 'snapshot.storage.kubernetes.io/pvc-storage-class';\nexport const snapshotPVCAccessModeAnnotation = 'snapshot.storage.kubernetes.io/pvc-access-modes';\nexport const snapshotPVCVolumeModeAnnotation = 'snapshot.storage.kubernetes.io/pvc-volume-mode';\n\ntype AccessMode = 'ReadWriteOnce' | 'ReadWriteMany' | 'ReadOnlyMany' | 'ReadWriteOncePod';\ntype VolumeMode = 'Filesystem' | 'Block';\n\nexport const initialAccessModes: AccessMode[] = [\n  'ReadWriteOnce',\n  'ReadWriteMany',\n  'ReadOnlyMany',\n  'ReadWriteOncePod',\n];\nexport const initialVolumeModes: VolumeMode[] = ['Filesystem', 'Block'];\n\ntype PartialMatch = { partialMatch?: boolean };\ntype ModeMapping = {\n  [volumeMode in VolumeMode]?: AccessMode[];\n};\ntype AccessModeMapping = ModeMapping & PartialMatch;\n\ntype ProvisionerAccessModeMapping = {\n  [provisioner: string]: AccessModeMapping;\n};\n\n// See https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes and\n// https://docs.openshift.com/container-platform/4.15/storage/understanding-persistent-storage.html for more details\nexport const provisionerAccessModeMapping: ProvisionerAccessModeMapping = Object.freeze({\n  'kubernetes.io/no-provisioner': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'kubernetes.io/aws-ebs': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/gce-pd': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/glusterfs': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/cinder': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/azure-file': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/azure-disk': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'kubernetes.io/quobyte': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/rbd': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/vsphere-volume': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'kubernetes.io/portworx-volume': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'kubernetes.io/scaleio': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/storageos': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  // Since 4.6 new provisioners names will be without the 'kubernetes.io/' prefix.\n  'manila.csi.openstack.org': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n  },\n  'ebs.csi.aws.com': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'block.csi.ibm.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'csi.ovirt.org': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'cinder.csi.openstack.org': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'pd.csi.storage.gke.io': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod'],\n  },\n  'cephfs.csi.ceph.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    partialMatch: true,\n  },\n  'rbd.csi.ceph.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    partialMatch: true,\n  },\n  'file.csi.azure.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n});\n\nexport const getAccessModeOptions = () => [\n  {\n    value: 'ReadWriteOnce',\n    title: i18next.t('public~Single user (RWO)'),\n  },\n  {\n    value: 'ReadWriteMany',\n    title: i18next.t('public~Shared access (RWX)'),\n  },\n  {\n    value: 'ReadOnlyMany',\n    title: i18next.t('public~Read only (ROX)'),\n  },\n  {\n    value: 'ReadWriteOncePod',\n    title: i18next.t('public~Read write once pod (RWOP)'),\n  },\n];\n\nexport const getVolumeModeRadios = () => [\n  {\n    value: 'Filesystem',\n    title: i18next.t('public~Filesystem'),\n  },\n  {\n    value: 'Block',\n    title: i18next.t('public~Block'),\n  },\n];\n\nexport const dropdownUnits = {\n  i: 'B',\n  Ki: 'KiB',\n  Mi: 'MiB',\n  Gi: 'GiB',\n  Ti: 'TiB',\n  Pi: 'PiB',\n  Ei: 'EiB',\n};\n\nexport const getProvisionerModeMapping = (provisioner: string): ModeMapping =>\n  _.omit(\n    _.find(provisionerAccessModeMapping, (value: AccessModeMapping, key: string) => {\n      if (value?.partialMatch && provisioner?.includes(key)) {\n        return true;\n      }\n      if (key === provisioner) {\n        return true;\n      }\n      return false;\n    }) || {},\n    'partialMatch',\n  );\n\nexport const getAccessModeForProvisioner = (\n  provisioner: string,\n  ignoreReadOnly?: boolean,\n  volumeMode?: string,\n): AccessMode[] => {\n  let accessModes: AccessMode[];\n  const modeMapping: ModeMapping = getProvisionerModeMapping(provisioner);\n\n  if (!_.isEmpty(modeMapping)) {\n    accessModes = volumeMode\n      ? modeMapping[volumeMode]\n      : Object.keys(modeMapping)\n          .map((mode) => modeMapping[mode])\n          .flat();\n  } else {\n    accessModes = initialAccessModes;\n  }\n\n  // remove duplicate in accessModes\n  accessModes = [...new Set(accessModes)];\n\n  // Ignore ReadOnly related access for create-pvc\n  return ignoreReadOnly ? accessModes.filter((modes) => modes !== 'ReadOnlyMany') : accessModes;\n};\n\nexport const getVolumeModeForProvisioner = (\n  provisioner: string,\n  accessMode: string,\n): VolumeMode[] => {\n  const modeMapping: ModeMapping = getProvisionerModeMapping(provisioner);\n\n  if (!_.isEmpty(modeMapping)) {\n    return accessMode\n      ? (Object.keys(modeMapping).filter((volumeMode) =>\n          modeMapping[volumeMode].includes(accessMode),\n        ) as VolumeMode[])\n      : (Object.keys(modeMapping) as VolumeMode[]);\n  }\n  return initialVolumeModes;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import * as _ from 'lodash';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  GitImportFormData,\n  DeployImageFormData,\n  UploadJarFormData,\n} from '../components/import/import-types';\nimport { makePortName } from './imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  mergeData,\n} from './resource-label-utils';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\n\nconst isDeployImageFormData = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n): formData is DeployImageFormData => {\n  return 'isi' in (formData as DeployImageFormData);\n};\n\nexport const createService = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalService?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    image: { ports: imagePorts, tag: selectedTag },\n    route: { unknownTargetPort, defaultUnknownPort },\n    resources,\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(resources, name);\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    ports = [port];\n  } else if (\n    buildStrategy === BuildStrategyType.Devfile &&\n    !_.isEmpty(originalService?.spec?.ports)\n  ) {\n    ports = [\n      ...originalService.spec.ports.map((port) => ({\n        name: port.name,\n        containerPort: port.port,\n        protocol: 'TCP',\n      })),\n    ];\n  } else if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  } else if (_.isEmpty(ports)) {\n    const port = { containerPort: defaultUnknownPort, protocol: 'TCP' };\n    ports = [port];\n  }\n  if (\n    unknownTargetPort &&\n    !ports.some((port) => unknownTargetPort === port.containerPort.toString())\n  ) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    const existingRouteTargetPort = originalRoute?.spec?.port?.targetPort;\n    ports = [...ports.filter((p) => p.containerPort !== defaultUnknownPort), port];\n\n    if (existingRouteTargetPort) {\n      ports = [...ports.filter((p) => p.containerPort !== existingRouteTargetPort), port];\n    }\n  }\n\n  const newService: any = {\n    kind: 'Service',\n    apiVersion: 'v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...defaultAnnotations },\n    },\n    spec: {\n      selector: podLabels,\n      ports: _.map(ports, (port) => ({\n        port: port.containerPort,\n        targetPort: port.containerPort,\n        protocol: port.protocol,\n        // Use the same naming convention as CLI new-app.\n        name: port.name || makePortName(port),\n      })),\n    },\n  };\n\n  const service = mergeData(originalService, newService);\n\n  return service;\n};\n\nexport const createRoute = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    route: {\n      hostname,\n      unknownTargetPort,\n      defaultUnknownPort,\n      secure,\n      path,\n      tls,\n      labels: routeLabels,\n    },\n    image: { ports: imagePorts, tag: selectedTag },\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  }\n\n  let targetPort: string;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    targetPort = makePortName({\n      containerPort: _.toInteger(unknownTargetPort),\n      protocol: 'TCP',\n    });\n  } else if (buildStrategy === BuildStrategyType.Devfile) {\n    targetPort = originalRoute?.spec?.port?.targetPort;\n  } else if (unknownTargetPort) {\n    targetPort = makePortName({ containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' });\n  } else {\n    targetPort = makePortName({\n      containerPort: ports[0]?.containerPort || defaultUnknownPort,\n      protocol: 'TCP',\n    });\n  }\n\n  const newRoute: any = {\n    kind: 'Route',\n    apiVersion: 'route.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, ...routeLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      to: {\n        kind: 'Service',\n        name,\n      },\n      tls: secure ? tls : null,\n      host: hostname,\n      path,\n      // The service created by `createService` uses the same port as the container port.\n      port: {\n        // Use the port name, not the number for targetPort. The router looks\n        // at endpoints, not services, when resolving ports, so port numbers\n        // will not resolve correctly if the service port and container port\n        // numbers don't match.\n        targetPort,\n      },\n      wildcardPolicy: 'None',\n    },\n  };\n\n  const route = mergeData(originalRoute, newRoute);\n\n  return route;\n};\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import * as React from 'react';\nimport { useSize } from '@patternfly/react-topology';\nimport cx from 'classnames';\nimport { get } from 'lodash';\nimport { modelFor, kindToAbbr } from '@console/internal/module/k8s';\nimport './SvgResourceIcon.scss';\n\ninterface ResourceIconProps {\n  x: number;\n  y: number;\n  kind: string;\n  leftJustified?: boolean;\n}\n\nfunction getKindStringAndAbbreviation(kind: string) {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n}\n\nconst ForwardSvgResourceIcon: React.FC<ResourceIconProps> = (\n  { kind, x, y, leftJustified },\n  iconRef,\n) => {\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(kind);\n  const [textSize, textRef] = useSize([]);\n\n  let rect = null;\n  let paddingX = 0;\n  let paddingY = 0;\n  let width = 0;\n  let height = 0;\n\n  if (textSize) {\n    ({ height, width } = textSize);\n    paddingX = height / 2;\n    paddingY = height / 14;\n    height += paddingY * 2;\n    rect = (\n      <rect\n        fill={kindColor}\n        ref={iconRef}\n        x={x - (leftJustified ? 0 : paddingX + width / 2)}\n        width={textSize.width + paddingX * 2}\n        y={y - (leftJustified ? 0 : paddingY + textSize.height / 2)}\n        height={height}\n        rx={height / 2}\n        ry={height / 2}\n      />\n    );\n  }\n\n  return (\n    <g\n      className={cx('odc-resource-icon', {\n        [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n      })}\n      data-test={`icon ${kindStr.toLowerCase()}`}\n    >\n      {rect}\n      <title>{kindStr}</title>\n      <text\n        ref={textRef}\n        x={x + (leftJustified ? paddingX + width / 2 : 0)}\n        y={y + (leftJustified ? (paddingY + height) / 2 : 0)}\n        textAnchor=\"middle\"\n        dy=\"0.35em\"\n      >\n        {kindAbbr}\n      </text>\n    </g>\n  );\n};\n\nconst SvgResourceIcon = React.forwardRef(ForwardSvgResourceIcon);\nexport { SvgResourceIcon as default, getKindStringAndAbbreviation };\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { createSvgIdUrl, useHover } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  Firehose,\n  resourcePathFromModel,\n  truncateMiddle,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { SvgDropShadowFilter } from '@console/topology/src/components/svg';\nimport { PipelineRunModel, TaskModel, ClusterTaskModel } from '../../../../models';\nimport {\n  ComputedStatus,\n  TektonTaskSpec,\n  PipelineTaskRef,\n  TaskKind,\n  WhenExpression,\n} from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER } from '../../const';\nimport { WHEN_EXPRESSSION_DIAMOND_SIZE } from '../../pipeline-topology/const';\nimport WhenExpressionDecorator from '../../pipeline-topology/WhenExpressionDecorator';\nimport { createStepStatus, StepStatus, TaskStatus } from './pipeline-step-utils';\nimport { PipelineVisualizationStepList } from './PipelineVisualizationStepList';\nimport { StatusIcon } from './StatusIcon';\n\nimport './PipelineVisualizationTask.scss';\n\ntype PipelineVisualizationTask = {\n  name?: string;\n  taskSpec?: TektonTaskSpec;\n  taskRef?: PipelineTaskRef;\n  runAfter?: string[];\n  when?: WhenExpression[];\n  status?: TaskStatus;\n};\ninterface TaskProps {\n  pipelineRunName?: string;\n  name: string;\n  loaded?: boolean;\n  task?: {\n    data: TaskKind;\n  };\n  status: TaskStatus;\n  namespace: string;\n  isPipelineRun: boolean;\n  disableVisualizationTooltip?: boolean;\n  selected?: boolean;\n  width: number;\n  height: number;\n  isFinallyTask?: boolean;\n  pipelineTask: PipelineVisualizationTask;\n}\n\ninterface PipelineVisualizationTaskProp {\n  pipelineRunName?: string;\n  namespace: string;\n  task: PipelineVisualizationTask;\n  taskRun?: string;\n  pipelineRunStatus?: string;\n  disableTooltip?: boolean;\n  selected?: boolean;\n  isSkipped?: boolean;\n  width: number;\n  height: number;\n  isFinallyTask?: boolean;\n}\n\nconst FILTER_ID = 'SvgTaskDropShadowFilterId';\n\nexport const PipelineVisualizationTask: React.FC<PipelineVisualizationTaskProp> = ({\n  pipelineRunName,\n  task,\n  namespace,\n  pipelineRunStatus,\n  disableTooltip,\n  selected,\n  isSkipped,\n  width,\n  height,\n  isFinallyTask,\n}) => {\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n  const taskStatus = task.status || {\n    duration: '',\n    reason: ComputedStatus.Idle,\n  };\n  if (\n    pipelineRunStatus === ComputedStatus.Failed ||\n    pipelineRunStatus === ComputedStatus.Cancelled\n  ) {\n    if (\n      task.status?.reason === ComputedStatus.Idle ||\n      task.status?.reason === ComputedStatus.Pending\n    ) {\n      taskStatus.reason = ComputedStatus.Cancelled;\n    }\n  }\n  if (isSkipped) {\n    taskStatus.reason = ComputedStatus.Skipped;\n  }\n\n  const taskComponent = (\n    <TaskComponent\n      pipelineRunName={pipelineRunName}\n      name={task.name || ''}\n      task={task.taskSpec && { data: { spec: task.taskSpec } }}\n      namespace={namespace}\n      status={taskStatus}\n      isPipelineRun={!!pipelineRunStatus}\n      disableVisualizationTooltip={disableTooltip}\n      selected={selected}\n      width={width}\n      height={height}\n      isFinallyTask={isFinallyTask}\n      pipelineTask={task}\n    />\n  );\n\n  if (disableTooltip || task.taskSpec) {\n    return taskComponent;\n  }\n\n  let resources;\n  if (!IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER && task.taskRef.kind === ClusterTaskModel.kind) {\n    resources = [\n      {\n        kind: referenceForModel(ClusterTaskModel),\n        name: task.taskRef.name,\n        prop: 'task',\n      },\n    ];\n  } else {\n    resources = [\n      {\n        kind: referenceForModel(TaskModel),\n        name: task.taskRef.name,\n        namespace,\n        prop: 'task',\n      },\n    ];\n  }\n  return <Firehose resources={resources}>{taskComponent}</Firehose>;\n};\nconst TaskComponent: React.FC<TaskProps> = ({\n  pipelineRunName,\n  namespace,\n  task,\n  status,\n  name,\n  isPipelineRun,\n  disableVisualizationTooltip,\n  selected,\n  width,\n  height,\n  isFinallyTask,\n  pipelineTask,\n}) => {\n  const stepList = task?.data?.spec?.steps || [];\n  const stepStatusList: StepStatus[] = stepList.map((step) => createStepStatus(step, status));\n  const showStatusState: boolean = isPipelineRun && !!status && !!status.reason;\n  const visualName = name || _.get(task, ['metadata', 'name'], '');\n  const nameRef = React.useRef();\n  const pillRef = React.useRef();\n  const path = pipelineRunName\n    ? `${resourcePathFromModel(PipelineRunModel, pipelineRunName, namespace)}/logs/${name}`\n    : undefined;\n  const enableLogLink =\n    status?.reason !== ComputedStatus.Idle &&\n    status?.reason !== ComputedStatus.Pending &&\n    status?.reason !== ComputedStatus.Cancelled &&\n    !!path;\n  const hasWhenExpression = pipelineTask?.when?.length > 0;\n  const hasRunAfter = pipelineTask?.runAfter?.length > 0;\n  const taskStatusColor = status\n    ? getRunStatusColor(status.reason).pftoken.value\n    : getRunStatusColor(ComputedStatus.Cancelled).pftoken.value;\n\n  const [hover, hoverRef] = useHover();\n  const truncatedVisualName = React.useMemo(\n    () => truncateMiddle(visualName, { length: showStatusState ? 11 : 14, truncateEnd: true }),\n    [visualName, showStatusState],\n  );\n\n  const renderVisualName = (\n    <text\n      ref={nameRef}\n      x={showStatusState ? 30 : width / 2}\n      y={height / 2 + 1}\n      className={cx('odc-pipeline-vis-task-text', {\n        'is-text-center': !isPipelineRun,\n        'is-linked': enableLogLink,\n      })}\n    >\n      {truncatedVisualName}\n    </text>\n  );\n\n  let taskPill = (\n    <g ref={hoverRef}>\n      <SvgDropShadowFilter dy={1} id={FILTER_ID} />\n      <rect\n        filter={hover ? createSvgIdUrl(FILTER_ID) : ''}\n        width={width}\n        height={height}\n        rx={15}\n        className={cx('odc-pipeline-vis-task', {\n          'is-selected': selected,\n          'is-linked': enableLogLink,\n        })}\n      />\n      {visualName !== truncatedVisualName && disableVisualizationTooltip ? (\n        <Tooltip triggerRef={nameRef} content={visualName}>\n          {renderVisualName}\n        </Tooltip>\n      ) : (\n        renderVisualName\n      )}\n\n      {showStatusState && (\n        <>\n          <svg\n            width={30}\n            height={30}\n            viewBox=\"-5 -4 20 20\"\n            style={{\n              color: taskStatusColor,\n            }}\n          >\n            <g\n              className={cx({\n                'fa-spin odc-pipeline-vis-task--icon-spin':\n                  status.reason === ComputedStatus.Running,\n                'odc-pipeline-vis-task--icon-stop': status.reason !== ComputedStatus.Running,\n              })}\n            >\n              <StatusIcon status={status.reason} disableSpin />\n            </g>\n          </svg>\n          <SvgTaskStatus steps={stepStatusList} x={30} y={23} width={width / 2 + 15} />\n        </>\n      )}\n    </g>\n  );\n\n  if (!disableVisualizationTooltip) {\n    taskPill = (\n      <>\n        <Tooltip\n          triggerRef={pillRef}\n          position=\"bottom\"\n          enableFlip={false}\n          content={\n            <PipelineVisualizationStepList\n              isSpecOverview={!isPipelineRun}\n              taskName={visualName}\n              steps={stepStatusList}\n              isFinallyTask={isFinallyTask}\n            />\n          }\n        >\n          <g ref={pillRef}>{taskPill}</g>\n        </Tooltip>\n      </>\n    );\n  }\n\n  const taskNode = (\n    <>\n      {hasWhenExpression && (\n        <WhenExpressionDecorator\n          width={WHEN_EXPRESSSION_DIAMOND_SIZE}\n          height={WHEN_EXPRESSSION_DIAMOND_SIZE}\n          appendLine={!hasRunAfter && !isFinallyTask}\n          isPipelineRun={isPipelineRun}\n          status={status.reason}\n          enableTooltip\n          leftOffset={disableVisualizationTooltip && !isFinallyTask ? 3 : 2}\n          isFinallyTask={isFinallyTask}\n        />\n      )}\n      {taskPill}\n    </>\n  );\n  return enableLogLink ? (\n    <Link to={path}>\n      <g data-test={`task ${visualName}`}>{taskNode}</g>\n    </Link>\n  ) : (\n    taskNode\n  );\n};\n\ninterface SvgTaskStatusProps {\n  steps: StepStatus[];\n  x: number;\n  y: number;\n  width: number;\n}\n\nconst SvgTaskStatus: React.FC<SvgTaskStatusProps> = ({ steps, x, y, width }) => {\n  if (steps.length === 0) {\n    return null;\n  }\n  const stepWidth = width / steps.length;\n  const gap = 2;\n  return (\n    <g>\n      {steps.map((step, index) => {\n        return (\n          <rect\n            key={step.name}\n            x={x + stepWidth * index}\n            y={y}\n            width={stepWidth - gap}\n            height={2}\n            fill={getRunStatusColor(step.status).pftoken.value}\n          />\n        );\n      })}\n    </g>\n  );\n};\n","import { Point } from '@patternfly/react-topology';\nimport { DrawDesign, NODE_SEPARATION_HORIZONTAL } from './const';\n\ntype SingleDraw = (p: Point) => string;\ntype DoubleDraw = (p1: Point, p2: Point) => string;\ntype TripleDraw = (p1: Point, p2: Point, p3: Point) => string;\ntype DetermineDirection = (p1: Point, p2: Point) => boolean;\n\nconst join = (...segments: string[]) => segments.filter((seg) => !!seg).join(' ');\n\nconst leftRight: DetermineDirection = (p1, p2) => p1.x < p2.x;\nconst topDown: DetermineDirection = (p1, p2) => p1.y < p2.y;\nconst bottomUp: DetermineDirection = (p1, p2) => p1.y > p2.y;\n\nconst point: SingleDraw = (p) => `${p.x},${p.y}`;\nconst moveTo: SingleDraw = (p) => `M ${point(p)}`;\nconst lineTo: SingleDraw = (p) => `L ${point(p)}`;\nconst quadTo: DoubleDraw = (corner, end) => `Q ${point(corner)} ${point(end)}`;\n\n// TODO: Try to simplify\n// x should not be greater than (NODE_SEPARATION_HORIZONTAL / 2)\nconst CURVE_SIZE = { x: 8, y: 10 };\nconst curve: TripleDraw = (fromPoint, cornerPoint, toPoint) => {\n  const topToBottom = topDown(fromPoint, toPoint);\n  if (topToBottom) {\n    const rightAndDown = leftRight(fromPoint, cornerPoint) && topDown(cornerPoint, toPoint);\n    const downAndRight = topDown(fromPoint, cornerPoint) && leftRight(cornerPoint, toPoint);\n    if (rightAndDown) {\n      return join(\n        lineTo(cornerPoint.clone().translate(-CURVE_SIZE.x, 0)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(0, CURVE_SIZE.y)),\n      );\n    }\n    if (downAndRight) {\n      return join(\n        lineTo(cornerPoint.clone().translate(0, -CURVE_SIZE.y)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(CURVE_SIZE.x, 0)),\n      );\n    }\n  } else {\n    const rightAndUp = leftRight(fromPoint, cornerPoint) && bottomUp(cornerPoint, toPoint);\n    const upAndRight = bottomUp(fromPoint, cornerPoint) && leftRight(cornerPoint, toPoint);\n    if (rightAndUp) {\n      return join(\n        lineTo(cornerPoint.clone().translate(-CURVE_SIZE.x, 0)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(0, -CURVE_SIZE.y)),\n      );\n    }\n    if (upAndRight) {\n      return join(\n        lineTo(cornerPoint.clone().translate(0, CURVE_SIZE.y)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(CURVE_SIZE.x, 0)),\n      );\n    }\n  }\n\n  return '';\n};\n\nexport const straightPath: DoubleDraw = (start, finish) => join(moveTo(start), lineTo(finish));\n\nexport const integralShapePath: DoubleDraw = (start, finish) => {\n  // Integral shape: ∫\n  let firstCurve: string = null;\n  let secondCurve: string = null;\n\n  if (start.y !== finish.y) {\n    const cornerX = Math.floor(start.x + NODE_SEPARATION_HORIZONTAL / 2);\n    const firstCorner = new Point(cornerX, start.y);\n    const secondCorner = new Point(cornerX, finish.y);\n\n    firstCurve = curve(start, firstCorner, secondCorner);\n    secondCurve = curve(firstCorner, secondCorner, finish);\n  }\n\n  return join(moveTo(start), firstCurve, secondCurve, lineTo(finish));\n};\n\nexport const path = (start: Point, finish: Point, drawDesign?: DrawDesign) => {\n  switch (drawDesign) {\n    case DrawDesign.INTEGRAL_SHAPE:\n      return integralShapePath(start, finish);\n    case DrawDesign.STRAIGHT:\n    default:\n      return straightPath(start, finish);\n  }\n};\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ExclamationIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-icon';\nimport { global_danger_color_100 as redColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './ErrorNodeDecorator.scss';\n\ntype ErrorNodeDecoratorProps = {\n  errorStr: string;\n  x: number;\n  y: number;\n};\n\nconst ErrorNodeDecorator: React.FC<ErrorNodeDecoratorProps> = ({ errorStr, x, y }) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={errorStr}>\n      <g ref={iconRef} className=\"odc-error-node-decorator\" transform={`translate(${x}, ${y})`}>\n        <circle cx={0} cy={0} r={BUILDER_NODE_DECORATOR_RADIUS} fill={redColor.value} />\n        <g transform=\"translate(-5, -6)\">\n          <ExclamationIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default ErrorNodeDecorator;\n","import i18n from 'i18next';\n// eslint-disable-next-line import/no-cycle\nimport { PipelineBuilderFormValues } from './types';\n\nexport const STATUS_KEY_NAME_ERROR = 'taskError';\n\nexport enum UpdateOperationType {\n  ADD_LIST_TASK,\n  ADD_FINALLY_LIST_TASK,\n  ADD_LOADING_TASK,\n  ADD_FINALLY_LOADING_TASK,\n  CONVERT_LOADING_TASK_TO_TASK,\n  CONVERT_LOADING_TASK_TO_FINALLY_TASK,\n  CONVERT_LIST_TO_TASK,\n  CONVERT_LIST_TO_FINALLY_TASK,\n  RENAME_TASK,\n  REMOVE_TASK,\n  DELETE_LIST_TASK,\n  DELETE_FINALLY_LIST_TASK,\n  FIX_INVALID_LIST_TASK,\n  FIX_INVALID_FINALLY_LIST_TASK,\n}\n\nexport enum TaskErrorType {\n  NAME_ERROR = 'nameError',\n  MISSING_REQUIRED_PARAMS = 'missingParams',\n  MISSING_RESOURCES = 'missingResources',\n  MISSING_WORKSPACES = 'missingWorkspaces',\n  MISSING_REQUIRED_WHEN_EXPRESSIONS = 'missingWhenExpressions',\n}\n\nexport const TASK_FIELD_ERROR_TYPE_MAPPING: { [key in TaskErrorType]: string[] } = {\n  [TaskErrorType.NAME_ERROR]: ['name'],\n  [TaskErrorType.MISSING_REQUIRED_PARAMS]: ['params'],\n  [TaskErrorType.MISSING_RESOURCES]: ['resources'],\n  [TaskErrorType.MISSING_WORKSPACES]: ['workspaces'],\n  [TaskErrorType.MISSING_REQUIRED_WHEN_EXPRESSIONS]: ['when'],\n};\n\nexport const getTaskErrorString = (errorType: TaskErrorType): string => {\n  switch (errorType) {\n    case TaskErrorType.NAME_ERROR:\n      return i18n.t('pipelines-plugin~Invalid name');\n    case TaskErrorType.MISSING_REQUIRED_PARAMS:\n      return i18n.t('pipelines-plugin~Missing parameters');\n    case TaskErrorType.MISSING_RESOURCES:\n      return i18n.t('pipelines-plugin~Missing resources');\n    case TaskErrorType.MISSING_WORKSPACES:\n      return i18n.t('pipelines-plugin~Missing workspaces');\n    case TaskErrorType.MISSING_REQUIRED_WHEN_EXPRESSIONS:\n      return i18n.t('pipelines-plugin~Invalid when expressions');\n    default:\n      throw new Error(`Unknown errorType, ${errorType}`);\n  }\n};\n\nexport enum WhenExpressionOperatorType {\n  in = 'in',\n  notin = 'notin',\n}\n\nexport const initialPipelineFormData: PipelineBuilderFormValues = {\n  name: 'new-pipeline',\n  params: [],\n  resources: [],\n  workspaces: [],\n  tasks: [],\n  listTasks: [],\n  finallyTasks: [],\n  finallyListTasks: [],\n  loadingTasks: [],\n};\n","import * as React from 'react';\nimport { Selector } from '@console/dynamic-plugin-sdk/src';\nimport { TaskRunKind } from '../../../types';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport { useTaskRuns as useTaskRuns2 } from './usePipelineRuns';\nimport { GetNextPage } from './useTektonResults';\n\nexport const useTaskRuns = (\n  namespace: string,\n  pipelineRunName?: string,\n  taskName?: string,\n  cacheKey?: string,\n): [TaskRunKind[], boolean, unknown, GetNextPage] => {\n  const selector: Selector = React.useMemo(() => {\n    if (pipelineRunName) {\n      return { matchLabels: { [TektonResourceLabel.pipelinerun]: pipelineRunName } };\n    }\n    if (taskName) {\n      return { matchLabels: { [TektonResourceLabel.pipelineTask]: taskName } };\n    }\n    return undefined;\n  }, [taskName, pipelineRunName]);\n  const [taskRuns, loaded, error, getNextPage] = useTaskRuns2(\n    namespace,\n    selector && {\n      selector,\n    },\n    cacheKey,\n  );\n\n  const sortedTaskRuns = React.useMemo(\n    () =>\n      taskRuns?.sort((a, b) => {\n        if (a?.status?.completionTime) {\n          return b?.status?.completionTime &&\n            new Date(a?.status?.completionTime) > new Date(b?.status?.completionTime)\n            ? 1\n            : -1;\n        }\n        return b?.status?.startTime ||\n          new Date(a?.status?.startTime) > new Date(b?.status?.startTime)\n          ? 1\n          : -1;\n      }),\n    [taskRuns],\n  );\n  return React.useMemo(() => [sortedTaskRuns, loaded, error, getNextPage], [\n    sortedTaskRuns,\n    loaded,\n    error,\n    getNextPage,\n  ]);\n};\n","import {\n  ComponentFactory,\n  DagreLayout,\n  GraphComponent,\n  LayoutFactory,\n  ModelKind,\n  Graph,\n  TaskEdge,\n  PipelineDagreLayout,\n  withPanZoom,\n  SpacerNode,\n  DefaultTaskGroup,\n} from '@patternfly/react-topology';\nimport BuilderFinallyNode from './BuilderFinallyNode';\nimport BuilderNode from './BuilderNode';\nimport { NodeType, PipelineLayout } from './const';\nimport CustomTaskNode from './CustomTaskNode';\nimport FinallyNode from './FinallyNode';\nimport InvalidTaskListNode from './InvalidTaskListNode';\nimport LoadingNode from './LoadingNode';\nimport PipelineTaskNode from './PipelineTaskNode';\nimport BuilderTaskEdge from './TaskEdge';\nimport TaskListNode from './TaskListNode';\nimport TaskNode from './TaskNode';\nimport { getLayoutData } from './utils';\n\nexport const builderComponentsFactory: ComponentFactory = (kind: ModelKind, type: string) => {\n  switch (kind) {\n    case ModelKind.graph:\n      return GraphComponent;\n    case ModelKind.edge:\n      return BuilderTaskEdge;\n    case ModelKind.node:\n      switch (type) {\n        case NodeType.TASK_NODE:\n          return TaskNode;\n        case NodeType.SPACER_NODE:\n          return SpacerNode;\n        case NodeType.TASK_LIST_NODE:\n          return TaskListNode;\n        case NodeType.INVALID_TASK_LIST_NODE:\n          return InvalidTaskListNode;\n        case NodeType.BUILDER_NODE:\n          return BuilderNode;\n        case NodeType.FINALLY_NODE:\n          return FinallyNode;\n        case NodeType.BUILDER_FINALLY_NODE:\n          return BuilderFinallyNode;\n        case NodeType.LOADING_NODE:\n          return LoadingNode;\n        default:\n          return undefined;\n      }\n    default:\n      return undefined;\n  }\n};\n\nexport const dagreViewerComponentFactory: ComponentFactory = (kind: ModelKind, type: string) => {\n  switch (kind) {\n    case ModelKind.graph:\n      return withPanZoom()(GraphComponent);\n    case ModelKind.edge:\n      return TaskEdge;\n    case ModelKind.node:\n      switch (type) {\n        case NodeType.TASK_NODE:\n        case NodeType.FINALLY_NODE:\n          return PipelineTaskNode;\n        case NodeType.CUSTOM_TASK_NODE:\n          return CustomTaskNode;\n        case NodeType.FINALLY_GROUP:\n          return DefaultTaskGroup;\n        case NodeType.SPACER_NODE:\n          return SpacerNode;\n        default:\n          return undefined;\n      }\n    default:\n      return undefined;\n  }\n};\n\nexport const layoutFactory: LayoutFactory = (type: string, graph: Graph) => {\n  switch (type) {\n    case PipelineLayout.DAGRE_BUILDER:\n    case PipelineLayout.DAGRE_BUILDER_SPACED:\n      return new DagreLayout(graph, {\n        // Hack to get around undesirable defaults\n        // TODO: fix this, it's not ideal but it works for now\n        linkDistance: 0,\n        nodeDistance: 0,\n        groupDistance: 0,\n        collideDistance: 0,\n        simulationSpeed: 0,\n        chargeStrength: 0,\n        allowDrag: false,\n        layoutOnDrag: false,\n        ...getLayoutData(type),\n      });\n    case PipelineLayout.DAGRE_VIEWER:\n      return new PipelineDagreLayout(graph, { nodesep: 25 });\n    default:\n      return undefined;\n  }\n};\n","import * as React from 'react';\nimport { AngleDoubleRightIcon } from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { CheckCircleIcon } from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { HourglassHalfIcon } from '@patternfly/react-icons/dist/esm/icons/hourglass-half-icon';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport * as cx from 'classnames';\nimport { YellowExclamationTriangleIcon } from '@console/dynamic-plugin-sdk/src/app/components/status/icons';\nimport { ComputedStatus } from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\n\ninterface StatusIconProps {\n  status: string;\n  height?: number;\n  width?: number;\n  disableSpin?: boolean;\n}\n\nexport const StatusIcon: React.FC<StatusIconProps> = ({ status, disableSpin, ...props }) => {\n  switch (status) {\n    case ComputedStatus['In Progress']:\n    case ComputedStatus.Running:\n      return <SyncAltIcon {...props} className={cx({ 'fa-spin': !disableSpin })} />;\n\n    case ComputedStatus.Succeeded:\n      return <CheckCircleIcon {...props} />;\n\n    case ComputedStatus.Failed:\n      return <ExclamationCircleIcon {...props} />;\n\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return <HourglassHalfIcon {...props} />;\n\n    case ComputedStatus.Cancelled:\n      return <YellowExclamationTriangleIcon {...props} />;\n\n    case ComputedStatus.Skipped:\n      return <AngleDoubleRightIcon {...props} />;\n\n    default:\n      return <CircleIcon {...props} />;\n  }\n};\n\nexport const ColoredStatusIcon: React.FC<StatusIconProps> = ({ status, ...others }) => {\n  return (\n    <div\n      style={{\n        color: status\n          ? getRunStatusColor(status).pftoken.value\n          : getRunStatusColor(ComputedStatus.Cancelled).pftoken.value,\n      }}\n    >\n      <StatusIcon status={status} {...others} />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { flatten, mapValues } from 'lodash';\nimport {\n  WatchK8sResource,\n  WatchK8sResources,\n  WatchK8sResults,\n  WatchK8sResultsObject,\n} from '@console/dynamic-plugin-sdk';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport {\n  useK8sWatchResource,\n  useK8sWatchResources,\n} from '@console/internal/components/utils/k8s-watch-hook';\nimport { RouteModel } from '@console/internal/models';\nimport { K8sResourceCommon, referenceForModel, RouteKind } from '@console/internal/module/k8s';\nimport { EventListenerModel, PipelineRunModel, TriggerTemplateModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport {\n  getResourceModelFromBindingKind,\n  getSafeBindingResourceKind,\n} from '../../../utils/pipeline-augment';\nimport { ResourceModelLink } from '../resource-overview/DynamicResourceLinkList';\nimport {\n  EventListenerKind,\n  EventListenerKindTrigger,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  EventListenerKindBindingReference,\n} from '../resource-types';\n\ntype RouteMap = { [generatedName: string]: RouteKind };\ntype TriggerTemplateMapping = { [key: string]: TriggerTemplateKind };\n\nconst getResourceName = (resource: K8sResourceCommon): string => resource.metadata.name;\nconst getEventListenerTemplateNames = (el: EventListenerKind): string[] =>\n  el.spec.triggers?.map(\n    (elTrigger: EventListenerKindTrigger) => elTrigger.template?.ref || elTrigger.template?.name,\n  ) || [];\nconst getEventListenerGeneratedName = (eventListener: EventListenerKind) =>\n  eventListener.status?.configuration.generatedName;\n\nconst useEventListenerRoutes = (\n  namespace: string,\n  eventListenerResources: EventListenerKind[],\n): RouteMap => {\n  const memoResources: WatchK8sResources<RouteMap> = React.useMemo(() => {\n    return (eventListenerResources || []).map(getEventListenerGeneratedName).reduce(\n      (acc, generatedName) => ({\n        ...acc,\n        [generatedName]: {\n          kind: RouteModel.kind,\n          name: generatedName,\n          namespace,\n          optional: true,\n        } as WatchK8sResource,\n      }),\n      {},\n    );\n  }, [namespace, eventListenerResources]);\n\n  const results: WatchK8sResults<RouteMap> = useK8sWatchResources<RouteMap>(memoResources);\n\n  return mapValues(results, (result: WatchK8sResultsObject<RouteKind>) => result.data);\n};\n\nconst useAllEventListeners = (namespace: string) => {\n  const eventListenerResource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: referenceForModel(EventListenerModel),\n      isList: true,\n      namespace,\n    }),\n    [namespace],\n  );\n  const [resources, eventListenerLoaded, error] = useK8sWatchResource<EventListenerKind[]>(\n    eventListenerResource,\n  );\n\n  return eventListenerLoaded && !error ? resources : null;\n};\n\nexport type RouteTemplate = {\n  routeURL: string | null;\n  triggerTemplateName: string;\n};\n\nexport const usePipelineTriggerTemplateNames = (\n  pipelineName: string,\n  namespace: string,\n): RouteTemplate[] | null => {\n  const eventListenerResources = useAllEventListeners(namespace);\n\n  const triggerTemplateResources: WatchK8sResources<TriggerTemplateMapping> = React.useMemo(() => {\n    if (!eventListenerResources) {\n      return {};\n    }\n    return flatten(eventListenerResources.map(getEventListenerTemplateNames))\n      .filter((t) => !!t)\n      .reduce(\n        (resourceMap, triggerTemplateName: string) => ({\n          ...resourceMap,\n          [triggerTemplateName]: {\n            kind: referenceForModel(TriggerTemplateModel),\n            name: triggerTemplateName,\n            namespace,\n            optional: true,\n          },\n        }),\n        {},\n      );\n  }, [eventListenerResources, namespace]);\n  const triggerTemplates: WatchK8sResults<TriggerTemplateMapping> = useK8sWatchResources(\n    triggerTemplateResources,\n  );\n  const routes: RouteMap = useEventListenerRoutes(namespace, eventListenerResources);\n\n  const triggerTemplateResults: WatchK8sResultsObject<TriggerTemplateKind>[] = Object.values(\n    triggerTemplates,\n  );\n  const countExpected = Object.keys(triggerTemplateResources).length;\n  const countLoaded = triggerTemplateResults.filter(({ loaded }) => loaded).length;\n  const countErrored = triggerTemplateResults.filter(({ loadError }) => !!loadError).length;\n  if (countLoaded === 0 || countLoaded !== countExpected - countErrored) {\n    return null;\n  }\n  const matchingTriggerTemplateNames: string[] = triggerTemplateResults\n    .filter((resourceWatch) => resourceWatch.loaded)\n    .map((resourceWatch) => resourceWatch.data)\n    .filter((triggerTemplate: TriggerTemplateKind) => {\n      const plr: PipelineRunKind = triggerTemplate?.spec?.resourcetemplates?.find(\n        ({ kind }) => kind === PipelineRunModel.kind,\n      );\n      return plr?.spec?.pipelineRef?.name === pipelineName;\n    })\n    .map(getResourceName);\n\n  return (eventListenerResources || []).reduce((acc, ev: EventListenerKind) => {\n    const eventListenerTemplateNames = getEventListenerTemplateNames(ev);\n    const generatedRouteName = getEventListenerGeneratedName(ev);\n\n    const triggerTemplateName = matchingTriggerTemplateNames.find((name) => {\n      return eventListenerTemplateNames.includes(name);\n    });\n    const route: RouteKind = routes[generatedRouteName];\n\n    if (!triggerTemplateName) {\n      return acc;\n    }\n\n    let routeURL = null;\n    try {\n      if (route) {\n        routeURL = getRouteWebURL(route);\n      }\n    } catch (e) {\n      // swallow errors, we don't care if we can't create a good route right now\n    }\n\n    return [...acc, { routeURL, triggerTemplateName }];\n  }, []);\n};\n\nexport const useEventListenerURL = (\n  eventListener: EventListenerKind,\n  namespace: string,\n): string | null => {\n  const [route, routeLoaded] = useK8sGet<RouteKind>(\n    RouteModel,\n    getEventListenerGeneratedName(eventListener),\n    namespace,\n  );\n\n  return routeLoaded && route?.status?.ingress ? getRouteWebURL(route) : null;\n};\n\nexport const getEventListenerTriggerBindingNames = (\n  bindings: EventListenerKindBindingReference[],\n): ResourceModelLink[] =>\n  bindings?.map((binding) => ({\n    resourceKind: getSafeBindingResourceKind(binding.kind),\n    // Ref is used since Tekton Triggers 0.5 (OpenShift Pipeline Operator 1.1)\n    // We keep the fallback to name here to support also OpenShift Pipeline Operator 1.0.\n    name: binding.ref || binding.name,\n  }));\n\nexport const getTriggerTemplatePipelineName = (triggerTemplate: TriggerTemplateKind): string => {\n  return (\n    triggerTemplate.spec.resourcetemplates.find(({ kind }) => kind === PipelineRunModel.kind)?.spec\n      .pipelineRef.name || ''\n  );\n};\n\nexport const useTriggerTemplateEventListenerNames = (triggerTemplate: TriggerTemplateKind) => {\n  const eventListenerResources = useAllEventListeners(triggerTemplate.metadata.namespace) || [];\n\n  return eventListenerResources\n    .filter((eventListener: EventListenerKind) =>\n      eventListener.spec.triggers?.find((trigger) =>\n        [trigger.template?.ref, trigger.template?.name].includes(getResourceName(triggerTemplate)),\n      ),\n    )\n    .map(getResourceName);\n};\n\nexport const useTriggerBindingEventListenerNames = (triggerBinding: TriggerBindingKind) => {\n  const eventListenerResources = useAllEventListeners(triggerBinding.metadata.namespace) || [];\n  return eventListenerResources\n    .filter((eventListener: EventListenerKind) =>\n      eventListener.spec.triggers?.find(({ bindings }) =>\n        bindings?.find(\n          ({ kind, name }) =>\n            getResourceName(triggerBinding) === name &&\n            getResourceModelFromBindingKind(kind).kind === triggerBinding.kind,\n        ),\n      ),\n    )\n    .map(getResourceName);\n};\n","export * from './hooks';\nexport { default as ResourceKebabWithUserLabel } from './ResourceKebabWithUserLabel';\n","export { default as SvgBoxedText } from './SvgBoxedText';\nexport { default as SvgCircledIcon } from './SvgCircledIcon';\nexport { default as SvgDropShadowFilter } from './SvgDropShadowFilter';\nexport { default as SvgResourceIcon, getKindStringAndAbbreviation } from './SvgResourceIcon';\n","import { ComputedStatus } from '../../../../types';\nimport { calculateDuration } from '../../../../utils/pipeline-utils';\n\nenum TerminatedReasons {\n  Completed = 'Completed',\n}\n\nexport type TaskStatusStep = {\n  name: string;\n  running?: { startedAt: string };\n  terminated?: {\n    finishedAt: string;\n    reason: TerminatedReasons;\n    startedAt: string;\n  };\n  waiting?: {};\n};\n\nexport type TaskStatus = {\n  reason: ComputedStatus;\n  duration?: string;\n  steps?: TaskStatusStep[];\n};\n\nconst getMatchingStep = (step, status: TaskStatus): TaskStatusStep => {\n  const statusSteps: TaskStatusStep[] = status.steps || [];\n  return statusSteps.find((statusStep) => {\n    // In rare occasions the status step name is prefixed with `step-`\n    // This is likely a bug but this workaround will be temporary as it's investigated separately\n    return statusStep.name === step.name || statusStep.name === `step-${step.name}`;\n  });\n};\n\nconst getMatchingStepDuration = (matchingStep?: TaskStatusStep) => {\n  if (!matchingStep) return '';\n\n  if (matchingStep.terminated) {\n    return calculateDuration(matchingStep.terminated.startedAt, matchingStep.terminated.finishedAt);\n  }\n\n  if (matchingStep.running) {\n    return calculateDuration(matchingStep.running.startedAt);\n  }\n\n  return '';\n};\n\nexport type StepStatus = {\n  duration: string | null;\n  name: string;\n  status: ComputedStatus;\n};\n\nexport const createStepStatus = (step: { name: string }, status: TaskStatus): StepStatus => {\n  let stepRunStatus: ComputedStatus = ComputedStatus.PipelineNotStarted;\n  let duration: string = null;\n\n  if (!status || !status.reason) {\n    stepRunStatus = ComputedStatus.Cancelled;\n  } else if (status.reason === ComputedStatus['In Progress']) {\n    // In progress, try to get granular statuses\n    const matchingStep: TaskStatusStep = getMatchingStep(step, status);\n\n    if (!matchingStep) {\n      stepRunStatus = ComputedStatus.Pending;\n    } else if (matchingStep.terminated) {\n      stepRunStatus =\n        matchingStep.terminated.reason === TerminatedReasons.Completed\n          ? ComputedStatus.Succeeded\n          : ComputedStatus.Failed;\n      duration = getMatchingStepDuration(matchingStep);\n    } else if (matchingStep.running) {\n      stepRunStatus = ComputedStatus['In Progress'];\n      duration = getMatchingStepDuration(matchingStep);\n    } else if (matchingStep.waiting) {\n      stepRunStatus = ComputedStatus.Pending;\n    }\n  } else {\n    // Not in progress, just use the run status reason\n    stepRunStatus = status.reason;\n\n    duration = getMatchingStepDuration(getMatchingStep(step, status)) || status.duration;\n  }\n\n  return {\n    duration,\n    name: step.name,\n    status: stepRunStatus,\n  };\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { ComputedStatus } from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\nimport { StepStatus } from './pipeline-step-utils';\nimport { StatusIcon } from './StatusIcon';\n\nimport './PipelineVisualizationStepList.scss';\n\nexport interface PipelineVisualizationStepListProps {\n  isSpecOverview: boolean;\n  taskName: string;\n  steps: StepStatus[];\n  isFinallyTask?: boolean;\n  hideHeader?: boolean;\n}\n\nconst TooltipColoredStatusIcon = ({ status }) => {\n  const size = 18;\n  const sharedProps = {\n    height: size,\n    width: size,\n  };\n\n  const icon = <StatusIcon status={status} {...sharedProps} />;\n\n  if (status === ComputedStatus.Succeeded || status === ComputedStatus.Failed) {\n    // Succeeded and Failed icons have transparent centers shapes - in tooltips, this becomes an undesired black\n    // This will simply wrap the icon and place a white backdrop\n    return (\n      <div style={{ color: getRunStatusColor(status).pftoken.value }}>\n        <svg {...sharedProps}>\n          <circle\n            className=\"odc-pipeline-visualization-step-list__icon-backdrop\"\n            cx={size / 2}\n            cy={size / 2}\n            r={size / 2 - 1}\n          />\n          {icon}\n        </svg>\n      </div>\n    );\n  }\n\n  return icon;\n};\n\nexport const PipelineVisualizationStepList: React.FC<PipelineVisualizationStepListProps> = ({\n  isSpecOverview,\n  taskName,\n  steps,\n  isFinallyTask,\n  hideHeader,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-pipeline-visualization-step-list\">\n      {!hideHeader && (\n        <div className=\"odc-pipeline-visualization-step-list__task-name\">{taskName}</div>\n      )}\n      {isFinallyTask && (\n        <div className=\"odc-pipeline-visualization-step-list__task-type\">\n          {t('pipelines-plugin~Finally task')}\n        </div>\n      )}\n      {steps.map(({ duration, name, status }) => {\n        return (\n          <div\n            className={classNames('odc-pipeline-visualization-step-list__step', {\n              'odc-pipeline-visualization-step-list__step--task-run': !isSpecOverview,\n            })}\n            key={name}\n          >\n            {!isSpecOverview ? (\n              <div className=\"odc-pipeline-visualization-step-list__icon\">\n                <TooltipColoredStatusIcon status={status} />\n              </div>\n            ) : (\n              <span className=\"odc-pipeline-visualization-step-list__bullet\">&bull;</span>\n            )}\n            <div className=\"odc-pipeline-visualization-step-list__name\">{name}</div>\n            {!isSpecOverview && (\n              <div className=\"odc-pipeline-visualization-step-list__duration\">{duration}</div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport i18next from 'i18next';\nimport { truncateMiddle } from '@console/internal/components/utils';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\nimport InstallingNodeDecorator from './InstallingNodeDecorator';\n\nimport './LoadingTask.scss';\n\ntype LoadingTaskProps = {\n  width: number;\n  height: number;\n  name: string;\n};\n\nconst LoadingTask: React.FC<LoadingTaskProps> = ({ width, height, name }) => {\n  const textRef = React.useRef();\n  const truncatedName = React.useMemo(\n    () => truncateMiddle(name, { length: 10, truncateEnd: true }),\n    [name],\n  );\n  return (\n    <g>\n      <rect width={width} height={height} rx={15} className={'opp-pipeline-vis-loading-node'} />\n      <g>\n        <InstallingNodeDecorator\n          x={0}\n          y={BUILDER_NODE_ADD_RADIUS / 4}\n          content={i18next.t('pipelines-plugin~Installing')}\n        />\n      </g>\n      <Tooltip triggerRef={textRef} content={name}>\n        <text\n          ref={textRef}\n          className=\"opp-pipeline-vis-loading-node__name\"\n          x={width / 2}\n          y={height / 2 + 1}\n        >\n          {truncatedName}\n        </text>\n      </Tooltip>\n    </g>\n  );\n};\n\nexport default LoadingTask;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { PlusIcon } from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\n\nimport './PlusNodeDecorator.scss';\n\ntype PlusNodeProps = {\n  x: number;\n  y: number;\n  tooltip: string;\n  tooltipPosition?: TooltipPosition;\n  onClick?: () => void;\n};\n\nconst PlusNodeDecorator: React.FC<PlusNodeProps> = ({\n  x,\n  y,\n  onClick,\n  tooltip,\n  tooltipPosition,\n}) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={tooltip} position={tooltipPosition}>\n      <g\n        className=\"odc-plus-node-decorator\"\n        onClick={onClick}\n        transform={`translate(${x}, ${y})`}\n        ref={iconRef}\n      >\n        <circle\n          cx={0}\n          cy={0}\n          r={BUILDER_NODE_ADD_RADIUS}\n          className=\"odc-plus-node-decorator__circle\"\n        />\n        <g transform=\"translate(-6, -6)\">\n          <PlusIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default PlusNodeDecorator;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { useHover } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { truncateMiddle } from '@console/internal/components/utils';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\nimport RemoveNodeDecorator from './RemoveNodeDecorator';\n\nconst TaskList: React.FC<any> = ({\n  width,\n  height,\n  unselectedText,\n  onRemoveTask,\n  onNewTask,\n  onTaskSearch,\n}) => {\n  const { t } = useTranslation();\n  const triggerRef = React.useRef(null);\n  const textRef = React.useRef();\n  const [hover, hoverRef] = useHover();\n\n  const unselectedTaskText = unselectedText || t('pipelines-plugin~Add task');\n\n  const truncatedTaskText = React.useMemo(\n    () =>\n      truncateMiddle(unselectedTaskText, {\n        length: 10,\n        truncateEnd: true,\n      }),\n    [unselectedTaskText],\n  );\n  const renderText = (\n    <text\n      x={width / 2}\n      y={height / 2 + 1}\n      className=\"odc-task-list-node__render-text\"\n      ref={textRef}\n    >\n      {truncatedTaskText}\n    </text>\n  );\n\n  return (\n    <>\n      <g\n        data-test=\"task-list\"\n        ref={hoverRef}\n        className=\"odc-task-list-node__trigger\"\n        onClick={(e) => {\n          e.stopPropagation();\n          onTaskSearch(onNewTask);\n        }}\n      >\n        <rect\n          ref={triggerRef}\n          className={cx('odc-task-list-node__trigger-background')}\n          width={width}\n          height={height}\n        />\n        <g>\n          <rect\n            className={\n              hover\n                ? 'odc-task-list-node__trigger-underline--hover'\n                : 'odc-task-list-node__trigger-underline'\n            }\n            y={height}\n            width={width}\n            height={hover ? 2 : 1}\n          />\n\n          {onRemoveTask && hover && (\n            <g>\n              <RemoveNodeDecorator\n                removeCallback={onRemoveTask}\n                x={120}\n                y={BUILDER_NODE_ADD_RADIUS / 4}\n                content={t('pipelines-plugin~Delete task')}\n              />\n            </g>\n          )}\n          {unselectedTaskText !== truncatedTaskText ? (\n            <Tooltip content={unselectedTaskText} triggerRef={textRef}>\n              {renderText}\n            </Tooltip>\n          ) : (\n            renderText\n          )}\n        </g>\n      </g>\n    </>\n  );\n};\nexport default TaskList;\n","import * as React from 'react';\nimport { observer, Node, NodeModel } from '@patternfly/react-topology';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport { TaskNodeModelData } from './types';\n\ntype TaskNodeProps = {\n  element: Node<NodeModel, TaskNodeModelData>;\n  disableTooltip?: boolean;\n};\n\nconst TaskNode: React.FC<TaskNodeProps> = ({ element, disableTooltip }) => {\n  const { height, width } = element.getBounds();\n  const { pipeline, pipelineRun, task, selected } = element.getData();\n  const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === task.name);\n\n  return (\n    <PipelineVisualizationTask\n      pipelineRunName={pipelineRun?.metadata?.name}\n      task={task}\n      pipelineRunStatus={pipelineRun && pipelineRunFilterReducer(pipelineRun)}\n      namespace={pipeline?.metadata?.namespace}\n      disableTooltip={disableTooltip}\n      selected={selected}\n      width={width}\n      height={height}\n      isSkipped={isTaskSkipped}\n    />\n  );\n};\n\nexport default observer(TaskNode);\n","import * as React from 'react';\nimport { observer, Node, NodeModel } from '@patternfly/react-topology';\nimport TaskList from './TaskList';\nimport { TaskListNodeModelData } from './types';\n\nimport './TaskListNode.scss';\n\ntype TaskListNodeProps = {\n  element: Node<NodeModel, TaskListNodeModelData>;\n  unselectedText?: string;\n};\n\nconst TaskListNode: React.FC<TaskListNodeProps> = ({ element, unselectedText }) => {\n  const { height = 30, width = 120 } = {};\n  const { onNewTask = () => {}, onTaskSearch = () => {}, onRemoveTask = () => {} } =\n    element.getData() || {};\n\n  return (\n    <TaskList\n      width={width}\n      height={height}\n      unselectedText={unselectedText}\n      onRemoveTask={onRemoveTask}\n      onNewTask={onNewTask}\n      onTaskSearch={onTaskSearch}\n    />\n  );\n};\n\nexport default observer(TaskListNode);\n","import * as React from 'react';\nimport {\n  Text,\n  TextInputTypes,\n  FormGroup,\n  ClipboardCopy,\n  InputGroup,\n  ExpandableSection,\n  TextVariants,\n  Button,\n  Tooltip,\n  InputGroupItem,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons/dist/esm/icons/help-icon';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { generateSecret } from '@console/dev-console/src/components/import/import-submit-utils';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { GitProvider } from '@console/git-service/src';\nimport { ExternalLink, FirehoseResource } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { ConfigMapKind } from '@console/internal/module/k8s/types';\nimport {\n  RadioGroupField,\n  InputField,\n  ResourceDropdownField,\n  useActiveNamespace,\n} from '@console/shared/src';\nimport { AccessTokenDocLinks, WebhookDocLinks } from '../consts';\nimport PermissionsSection from './PermissionsSection';\n\ntype WebhoookSectionProps = {\n  pac: ConfigMapKind;\n  formContextField?: string;\n};\n\nconst WebhookSection: React.FC<WebhoookSectionProps> = ({ pac, formContextField }) => {\n  const [namespace] = useActiveNamespace();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { gitProvider, webhook } = _.get(values, formContextField) || values;\n  const [controllerUrl, setControllerUrl] = React.useState('');\n  const [webhookSecret, setWebhookSecret] = React.useState('');\n  const { t } = useTranslation();\n\n  React.useEffect(() => {\n    const ctlUrl = pac?.data?.['controller-url'];\n    if (ctlUrl) {\n      setControllerUrl(ctlUrl);\n      setFieldValue(`${fieldPrefix}webhook.url`, ctlUrl);\n    }\n  }, [fieldPrefix, pac, setFieldValue]);\n  const autocompleteFilter = (text: string, item: any): boolean => fuzzy(text, item?.props?.name);\n  const resources: FirehoseResource[] = [\n    {\n      isList: true,\n      kind: SecretModel.kind,\n      prop: SecretModel.id,\n      namespace,\n    },\n  ];\n\n  const generateWebhookSecret = () => {\n    setWebhookSecret(generateSecret());\n  };\n\n  const getPermssionSectionHeading = (git: GitProvider) => {\n    switch (git) {\n      case GitProvider.GITHUB:\n        return t('pipelines-plugin~See GitHub events');\n      case GitProvider.GITLAB:\n        return t('pipelines-plugin~See Gitlab events');\n      case GitProvider.BITBUCKET:\n        return t('pipelines-plugin~See BitBucket events');\n      default:\n        return t('pipelines-plugin~See Git events');\n    }\n  };\n\n  const HelpText = (): React.ReactElement => {\n    let helpText: React.ReactNode;\n    switch (gitProvider) {\n      case GitProvider.GITHUB:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your GitHub Personal token. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.GITHUB]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a <b>classic</b> token with <b>repo</b> & <b>admin:repo_hook</b> scopes and\n            give your token an expiration, i.e 30d.\n          </Trans>\n        );\n        break;\n\n      case GitProvider.GITLAB:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Gitlab Personal access token. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.GITLAB]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a token with <b>api</b> scope. Select the role as <b>Maintainer/Owner</b>.\n            Give your token an expiration i.e 30d.\n          </Trans>\n        );\n        break;\n\n      case GitProvider.BITBUCKET:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Bitbucket App password. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.BITBUCKET]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a token with <b>Read and Write </b>scopes in{' '}\n            <b>Account, Workspace membership, Projects, Issues, Pull requests and Webhooks</b>.\n          </Trans>\n        );\n        break;\n\n      default:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Git Personal token. Create a token with repo, public_repo & admin:repo_hook\n            scopes and give your token an expiration, i.e 30d.\n          </Trans>\n        );\n    }\n\n    return <div data-test={`${values.gitProvider}-helptext`}>{helpText}</div>;\n  };\n\n  return (\n    <FormSection fullWidth={!fieldPrefix} extraMargin>\n      {gitProvider && gitProvider === GitProvider.BITBUCKET ? (\n        <InputField\n          label={t('pipelines-plugin~Bitbucket username')}\n          name={`${fieldPrefix}webhook.user`}\n          type={TextInputTypes.text}\n          required\n        />\n      ) : null}\n      <RadioGroupField\n        name={`${fieldPrefix}webhook.method`}\n        label={t('pipelines-plugin~Secret')}\n        labelIcon={\n          <Tooltip\n            position=\"right\"\n            content={\n              <p>\n                {t(\n                  'pipelines-plugin~The secret is required to set the Build status and to attach the webhook to the Git repository.',\n                )}\n              </p>\n            }\n          >\n            <HelpIcon />\n          </Tooltip>\n        }\n        required\n        options={[\n          {\n            value: 'token',\n            label: t('pipelines-plugin~Git access token'),\n            activeChildren: (\n              <InputField\n                name={`${fieldPrefix}webhook.token`}\n                type={TextInputTypes.text}\n                helpText={<HelpText />}\n                required\n              />\n            ),\n          },\n          {\n            value: 'secret',\n            label: t('pipelines-plugin~Git access token secret'),\n\n            activeChildren: (\n              <ResourceDropdownField\n                helpText={t(\n                  'pipelines-plugin~Secret with the Git access token for pulling pipeline and tasks from your Git repository.',\n                )}\n                name={`${fieldPrefix}webhook.secretRef`}\n                resources={resources}\n                dataSelector={['metadata', 'name']}\n                placeholder={t('pipelines-plugin~Select a secret')}\n                autocompleteFilter={autocompleteFilter}\n                fullWidth\n                showBadge\n                onChange={(k, v, res) => {\n                  if (res && res.data) {\n                    setFieldValue(`${fieldPrefix}webhook.secretObj`, res);\n                    const secret = res?.data['webhook.secret'];\n                    if (secret) {\n                      setWebhookSecret(Base64.decode(secret));\n                    }\n                  }\n                }}\n              />\n            ),\n          },\n        ]}\n      />\n      {webhook?.url && (\n        <FormGroup fieldId=\"test\" label={t('pipelines-plugin~Webhook URL')}>\n          <ClipboardCopy\n            isReadOnly\n            name={`${fieldPrefix}webhook.url`}\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n            style={{ flex: '1' }}\n          >\n            {controllerUrl}\n          </ClipboardCopy>\n\n          <FormHelperText>\n            <HelperText>\n              <HelperTextItem>\n                {t(\n                  'pipelines-plugin~We have detected a URL that can be used to configure the webhook. It will be created and attached to the Git repository.',\n                )}\n              </HelperTextItem>\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n\n      {gitProvider && gitProvider !== GitProvider.BITBUCKET ? (\n        <FormGroup\n          fieldId={'webhook-secret-clipboard'}\n          label={t('pipelines-plugin~Webhook secret')}\n        >\n          <InputGroup style={{ display: 'flex' }}>\n            <InputGroupItem>\n              <ClipboardCopy\n                name={`${fieldPrefix}webhook.secret`}\n                hoverTip=\"Copy\"\n                clickTip=\"Copied\"\n                style={{ flex: '1' }}\n                onChange={(_event, v) => {\n                  setFieldValue(`${fieldPrefix}webhook.secret`, v);\n                }}\n              >\n                {webhookSecret}\n              </ClipboardCopy>\n            </InputGroupItem>\n            <InputGroupItem>\n              <Button data-test=\"generate-secret\" variant=\"control\" onClick={generateWebhookSecret}>\n                {t('pipelines-plugin~Generate')}\n              </Button>\n            </InputGroupItem>\n          </InputGroup>\n        </FormGroup>\n      ) : null}\n\n      {gitProvider && gitProvider !== GitProvider.UNSURE ? (\n        <>\n          <ExpandableSection toggleText={getPermssionSectionHeading(gitProvider)}>\n            <FormGroup\n              label={t('pipelines-plugin~Events triggering the webhook: ')}\n              fieldId=\"repo-permissions\"\n            >\n              <Text component={TextVariants.small}>\n                <PermissionsSection formContextField={formContextField} />\n              </Text>\n            </FormGroup>\n          </ExpandableSection>\n\n          <ExternalLink\n            text={t('pipelines-plugin~Read more about setting up webhook')}\n            href={WebhookDocLinks[gitProvider]}\n          />\n        </>\n      ) : null}\n    </FormSection>\n  );\n};\n\nexport default WebhookSection;\n","import * as React from 'react';\nimport i18n from 'i18next';\nimport * as _ from 'lodash';\nimport { SemVer } from 'semver';\nimport { deleteModal, errorModal } from '@console/internal/components/modals';\nimport {\n  history,\n  resourcePathFromModel,\n  Kebab,\n  KebabAction,\n  asAccessReview,\n} from '@console/internal/components/utils';\nimport { k8sCreate, K8sKind, k8sPatch, referenceForModel } from '@console/internal/module/k8s';\nimport { StartedByAnnotation } from '../components/pipelines/const';\nimport {\n  addTriggerModal,\n  startPipelineModal,\n  removeTriggerModal,\n} from '../components/pipelines/modals';\nimport { getPipelineRunData } from '../components/pipelines/modals/common/utils';\nimport { getTaskRunsOfPipelineRun } from '../components/taskruns/useTaskRuns';\nimport { RESOURCE_LOADED_FROM_RESULTS_ANNOTATION } from '../const';\nimport { EventListenerModel, PipelineModel, PipelineRunModel, TaskRunModel } from '../models';\nimport { PipelineKind, PipelineRunKind, TaskRunKind } from '../types';\nimport {\n  shouldHidePipelineRunStop,\n  shouldHidePipelineRunCancel,\n  TaskStatus,\n  shouldHidePipelineRunStopForTaskRunStatus,\n  shouldHidePipelineRunCancelForTaskRunStatus,\n} from './pipeline-augment';\nimport { getSbomTaskRun, returnValidPipelineRunModel } from './pipeline-utils';\n\nexport const handlePipelineRunSubmit = (pipelineRun: PipelineRunKind) => {\n  history.push(\n    resourcePathFromModel(\n      PipelineRunModel,\n      pipelineRun.metadata.name,\n      pipelineRun.metadata.namespace,\n    ),\n  );\n};\n\nexport const triggerPipeline = (\n  pipeline: PipelineKind,\n  onSubmit?: (pipelineRun: PipelineRunKind) => void,\n) => {\n  k8sCreate(PipelineRunModel, getPipelineRunData(pipeline))\n    .then(onSubmit)\n    .catch((err) => errorModal({ error: err.message }));\n};\n\nexport const reRunPipelineRun: KebabAction = (kind: K8sKind, pipelineRun: PipelineRunKind) => ({\n  // t('pipelines-plugin~Rerun')\n  labelKey: 'pipelines-plugin~Rerun',\n  callback: () => {\n    const namespace = _.get(pipelineRun, 'metadata.namespace');\n    const { pipelineRef, pipelineSpec } = pipelineRun.spec;\n    if (namespace && (pipelineRef?.name || pipelineSpec)) {\n      k8sCreate(returnValidPipelineRunModel(pipelineRun), getPipelineRunData(null, pipelineRun));\n    } else {\n      errorModal({\n        error: i18n.t(\n          'pipelines-plugin~Invalid PipelineRun configuration, unable to start Pipeline.',\n        ),\n      });\n    }\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipelineRun.metadata.name,\n    namespace: pipelineRun.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nexport const editPipeline: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Edit Pipeline')\n  labelKey: 'pipelines-plugin~Edit Pipeline',\n  callback: () => {\n    const {\n      metadata: { name, namespace },\n    } = pipeline;\n    history.push(`/k8s/ns/${namespace}/${referenceForModel(PipelineModel)}/${name}/builder`);\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const startPipeline: KebabAction = (\n  kind: K8sKind,\n  pipeline: PipelineKind,\n  onSubmit?: (pipelineRun: PipelineRunKind) => void,\n) => ({\n  // t('pipelines-plugin~Start')\n  labelKey: 'pipelines-plugin~Start',\n  callback: () => {\n    const params = _.get(pipeline, ['spec', 'params'], []);\n    const resources = _.get(pipeline, ['spec', 'resources'], []);\n    const workspaces = _.get(pipeline, ['spec', 'workspaces'], []);\n\n    if (!_.isEmpty(params) || !_.isEmpty(resources) || !_.isEmpty(workspaces)) {\n      startPipelineModal({\n        pipeline,\n        modalClassName: 'modal-lg',\n        onSubmit,\n      });\n    } else {\n      triggerPipeline(pipeline, onSubmit);\n    }\n  },\n  accessReview: {\n    group: PipelineRunModel.apiGroup,\n    resource: PipelineRunModel.plural,\n    namespace: pipeline.metadata.namespace,\n    verb: 'create',\n  },\n});\n\ntype RerunPipelineData = {\n  onComplete?: (pipelineRun: PipelineRunKind) => void;\n  labelKey?: string;\n};\nconst rerunPipeline: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  resources: any,\n  customData: RerunPipelineData = {},\n) => {\n  // t('pipelines-plugin~Start last run')\n  const { labelKey = 'pipelines-plugin~Start last run', onComplete } = customData;\n\n  const sharedProps = { labelKey, accessReview: {} };\n\n  if (\n    !pipelineRun ||\n    !_.has(pipelineRun, 'metadata.name') ||\n    !_.has(pipelineRun, 'metadata.namespace')\n  ) {\n    return sharedProps;\n  }\n\n  return {\n    ...sharedProps,\n    callback: () => {\n      k8sCreate(kind, getPipelineRunData(null, pipelineRun))\n        .then(typeof onComplete === 'function' ? onComplete : () => {})\n        .catch((err) => errorModal({ error: err.message }));\n    },\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'create',\n    },\n  };\n};\n\nexport const rerunPipelineAndStay: KebabAction = (kind: K8sKind, pipelineRun: PipelineRunKind) => {\n  return rerunPipeline(kind, pipelineRun);\n};\n\nexport const rerunPipelineAndRedirect: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n) => {\n  return rerunPipeline(kind, pipelineRun, null, {\n    onComplete: handlePipelineRunSubmit,\n    // t('pipelines-plugin~Start last run')\n    labelKey: 'pipelines-plugin~Start last run',\n  });\n};\n\nexport const deleteResourceObj: KebabAction = (\n  kind: K8sKind,\n  resourceObj: PipelineRunKind | TaskRunKind,\n) => {\n  const tektonResultsFlag =\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/log'] ||\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/record'] ||\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/result'];\n  const isResourceLoadedFromTR =\n    resourceObj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const message = (\n    <p>\n      {i18n.t(\n        'pipelines-plugin~This action will delete resource from k8s but still the resource can be fetched from Tekton Results',\n      )}\n    </p>\n  );\n  return {\n    // t('pipelines-plugin~Delete {{kind}}', {kind: kind.label})\n    labelKey: 'pipelines-plugin~Delete {{kind}}',\n    labelKind: { kind: kind.labelKey ? i18n.t(kind.labelKey) : kind.label },\n    callback: () =>\n      deleteModal({\n        kind,\n        resource: resourceObj,\n        message: !isResourceLoadedFromTR && tektonResultsFlag ? message : '',\n      }),\n    accessReview: asAccessReview(kind, resourceObj, 'delete'),\n    isDisabled: !!isResourceLoadedFromTR,\n    tooltip: isResourceLoadedFromTR\n      ? i18n.t('pipelines-plugin~Resource is being fetched from Tekton Results.')\n      : '',\n  };\n};\n\nexport const rerunPipelineRunAndRedirect: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n) => {\n  return rerunPipeline(kind, pipelineRun, null, {\n    onComplete: handlePipelineRunSubmit,\n    // t('pipelines-plugin~Rerun')\n    labelKey: 'pipelines-plugin~Rerun',\n  });\n};\n\nexport const stopPipelineRun: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  operatorVersion: SemVer,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Stop')\n    labelKey: 'pipelines-plugin~Stop',\n    // t('pipelines-plugin~Let the running tasks complete, then execute finally tasks'),\n    tooltipKey: 'pipelines-plugin~Let the running tasks complete, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value:\n              operatorVersion.major === 1 && operatorVersion.minor < 9\n                ? 'PipelineRunCancelled'\n                : 'StoppedRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunStop(pipelineRun, PLRTasks),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const stopPipelineRunForTaskRunStatus: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  operatorVersion: SemVer,\n  taskRunStatusObj?: TaskStatus,\n) => {\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Stop')\n    labelKey: 'pipelines-plugin~Stop',\n    // t('pipelines-plugin~Let the running tasks complete, then execute finally tasks'),\n    tooltipKey: 'pipelines-plugin~Let the running tasks complete, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value:\n              operatorVersion.major === 1 && operatorVersion.minor < 9\n                ? 'PipelineRunCancelled'\n                : 'StoppedRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunStopForTaskRunStatus(pipelineRun, taskRunStatusObj),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const cancelPipelineRunFinally: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Cancel')\n    labelKey: 'pipelines-plugin~Cancel',\n    // t('pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks'),\n    tooltipKey:\n      'pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value: 'CancelledRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunCancel(pipelineRun, PLRTasks),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const cancelPipelineRunFinallyForTaskRunStatus: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj?: TaskStatus,\n) => {\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Cancel')\n    labelKey: 'pipelines-plugin~Cancel',\n    // t('pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks'),\n    tooltipKey:\n      'pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value: 'CancelledRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunCancelForTaskRunStatus(pipelineRun, taskRunStatusObj),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const viewPipelineRunSBOM: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  const sbomTaskRun = getSbomTaskRun(PLRTasks);\n\n  return {\n    labelKey: 'pipelines-plugin~View SBOM',\n    callback: () => {\n      history.push(\n        `/k8s/ns/${sbomTaskRun.metadata.namespace}/${referenceForModel(TaskRunModel)}/${\n          sbomTaskRun.metadata.name\n        }/logs`,\n      );\n    },\n    hidden: !sbomTaskRun,\n  };\n};\n\nconst addTrigger: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Add Trigger')\n  labelKey: 'pipelines-plugin~Add Trigger',\n  callback: () => {\n    const cleanPipeline: PipelineKind = {\n      ...pipeline,\n      metadata: {\n        ...pipeline.metadata,\n        annotations: _.omit(pipeline.metadata.annotations, [StartedByAnnotation.user]),\n      },\n    };\n    addTriggerModal({ pipeline: cleanPipeline, modalClassName: 'modal-lg' });\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst removeTrigger: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Remove Trigger')\n  labelKey: 'pipelines-plugin~Remove Trigger',\n  callback: () => {\n    removeTriggerModal({ pipeline });\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'delete',\n  },\n});\nexport const getPipelineKebabActions = (\n  pipelineRun?: PipelineRunKind,\n  isTriggerPresent?: boolean,\n): KebabAction[] => [\n  (model, resource: PipelineKind) => startPipeline(model, resource, handlePipelineRunSubmit),\n  ...(pipelineRun ? [() => rerunPipelineAndRedirect(PipelineRunModel, pipelineRun)] : []),\n  (model, pipeline) => addTrigger(EventListenerModel, pipeline),\n  ...(isTriggerPresent ? [(model, pipeline) => removeTrigger(EventListenerModel, pipeline)] : []),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (model, pipeline) => editPipeline(model, pipeline),\n  Kebab.factory.Delete,\n];\n\nexport const getPipelineRunKebabActions = (\n  operatorVersion: SemVer,\n  taskRuns?: TaskRunKind[],\n  redirectReRun?: boolean,\n  taskRunStatusObj?: TaskStatus,\n): KebabAction[] => [\n  redirectReRun\n    ? (model, pipelineRun) => rerunPipelineRunAndRedirect(model, pipelineRun)\n    : (model, pipelineRun) => reRunPipelineRun(model, pipelineRun),\n  !taskRunStatusObj\n    ? (model, pipelineRun) => stopPipelineRun(model, pipelineRun, operatorVersion, taskRuns)\n    : (model, pipelineRun) =>\n        stopPipelineRunForTaskRunStatus(model, pipelineRun, operatorVersion, taskRunStatusObj),\n  !taskRunStatusObj\n    ? (model, pipelineRun) => cancelPipelineRunFinally(model, pipelineRun, taskRuns)\n    : (model, pipelineRun) =>\n        cancelPipelineRunFinallyForTaskRunStatus(model, pipelineRun, taskRunStatusObj),\n  (model, pipelineRun) => deleteResourceObj(model, pipelineRun),\n];\n\nexport const getTaskRunKebabActions = (): KebabAction[] => [\n  (model, taskRun) => deleteResourceObj(model, taskRun),\n];\n","import * as React from 'react';\nimport { Form } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '@console/internal/components/factory';\n\ntype ModalStructureProps = {\n  children: React.ReactNode;\n  submitBtnText: string;\n  submitDanger?: boolean;\n  title: string;\n};\n\ntype ModalStructureCombinedProps = FormikProps<FormikValues> &\n  ModalComponentProps &\n  ModalStructureProps;\n\nconst ModalStructure: React.FC<ModalStructureCombinedProps> = (props) => {\n  const {\n    children,\n    close,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    status,\n    submitBtnText,\n    submitDanger,\n    title,\n  } = props;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"modal-content\">\n        <ModalTitle>{title}</ModalTitle>\n        <ModalBody>\n          <div className=\"pf-v5-c-form\">{children}</div>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={status?.submitError}\n          inProgress={isSubmitting}\n          submitText={submitBtnText}\n          submitDisabled={!_.isEmpty(errors) || isSubmitting}\n          submitDanger={submitDanger}\n          cancel={close}\n        />\n      </div>\n    </Form>\n  );\n};\n\nexport default ModalStructure;\n","import { merge } from 'lodash';\n// FIXME react-redux types are 6.x while react-redux is 7.x\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector } from 'react-redux';\nimport { getUser } from '@console/dynamic-plugin-sdk';\nimport { KebabAction, Kebab } from '@console/internal/components/utils';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunKind } from '../../../types';\nimport { StartedByAnnotation } from '../../pipelines/const';\n\ntype AnnotationMap = { [annotationKey: string]: string };\n\nconst mergeAnnotationsWithResource = (annotations: AnnotationMap, resource: K8sResourceCommon) => {\n  return merge({}, resource, { metadata: { annotations }, spec: {} });\n};\n\nexport const useUserAnnotationForManualStart = (): AnnotationMap => {\n  const user = useSelector(getUser);\n\n  if (!user?.metadata?.name) {\n    return {};\n  }\n\n  return {\n    [StartedByAnnotation.user]: user.metadata.name,\n  };\n};\n\nexport const usePipelineRunWithUserAnnotation = (plr: PipelineRunKind): PipelineRunKind => {\n  const annotations = useUserAnnotationForManualStart();\n\n  return plr && mergeAnnotationsWithResource(annotations, plr);\n};\n\nexport const useMenuActionsWithUserAnnotation = (menuActions: KebabAction[]): KebabAction[] => {\n  const annotations = useUserAnnotationForManualStart();\n\n  return menuActions.map((kebabAction) => {\n    if (Object.values(Kebab.factory).includes(kebabAction)) {\n      return kebabAction;\n    }\n    return (kind, resource, ...rest) =>\n      kebabAction(kind, mergeAnnotationsWithResource(annotations, resource), ...rest);\n  });\n};\n","import i18next from 'i18next';\nimport * as yup from 'yup';\nimport { paramIsRequired } from '../../../../utils/common';\nimport { PipelineResourceType, VolumeTypes } from '../../const';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\n\nexport const validateResourceType = () =>\n  yup.object().shape({\n    type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    params: yup\n      .object()\n      .when('type', {\n        is: PipelineResourceType.git,\n        then: yup.object({\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          revision: yup.string(),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.image,\n        then: yup.object({\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.storage,\n        then: yup.object({\n          type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          location: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          dir: yup.string(),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.cluster,\n        then: yup.object({\n          name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          username: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          password: yup.string(),\n          insecure: yup.string(),\n        }),\n      }),\n    secrets: yup.object().when('type', {\n      is: PipelineResourceType.cluster,\n      then: yup.object({\n        cadata: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        token: yup.string(),\n      }),\n    }),\n  });\n\nexport const formResources = () =>\n  yup.array().of(\n    yup.object().shape({\n      name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      selection: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      data: yup.object().when('selection', {\n        is: CREATE_PIPELINE_RESOURCE,\n        then: validateResourceType(),\n      }),\n    }),\n  );\n\nconst volumeTypeSchema = () =>\n  yup\n    .object()\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.Secret,\n      then: yup.object().shape({\n        secret: yup.object().shape({\n          secretName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          items: yup.array().of(\n            yup.object().shape({\n              key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n              path: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            }),\n          ),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.ConfigMap,\n      then: yup.object().shape({\n        configMap: yup.object().shape({\n          name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          items: yup.array().of(\n            yup.object().shape({\n              key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n              path: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            }),\n          ),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.PVC,\n      then: yup.object().shape({\n        persistentVolumeClaim: yup.object().shape({\n          claimName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.VolumeClaimTemplate,\n      then: yup.object().shape({\n        volumeClaimTemplate: yup.object().shape({\n          spec: yup.object().shape({\n            accessModes: yup\n              .array()\n              .of(yup.string().required(i18next.t('pipelines-plugin~Required'))),\n            resources: yup.object().shape({\n              requests: yup\n                .object()\n                .shape({ storage: yup.string().required(i18next.t('pipelines-plugin~Required')) }),\n            }),\n            storageClassName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            volumeMode: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          }),\n        }),\n      }),\n    });\n\nconst commonPipelineSchema = () =>\n  yup.object().shape({\n    parameters: yup.array().of(\n      yup.object().shape({\n        name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        default: yup.string(),\n        description: yup.string(),\n        value: yup\n          .string()\n          .test('test-if-param-can-be-empty', i18next.t('pipelines-plugin~Required'), function (\n            value: string,\n          ) {\n            return paramIsRequired(this.parent) ? !!value : true;\n          }),\n      }),\n    ),\n    resources: formResources(),\n    workspaces: yup.array().of(\n      yup.object().shape({\n        type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        data: volumeTypeSchema(),\n      }),\n    ),\n  });\n\nexport const startPipelineSchema = () =>\n  commonPipelineSchema().shape({\n    secretOpen: yup.boolean().equals([false]),\n  });\n\nexport const addTriggerSchema = () =>\n  commonPipelineSchema().shape({\n    triggerBinding: yup.object().shape({\n      name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      resource: yup\n        .object()\n        .shape({\n          metadata: yup.object().shape({\n            name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          }),\n        })\n        .required(i18next.t('pipelines-plugin~Required')),\n    }),\n  });\n\nexport const advancedSectionValidationSchema = () =>\n  yup.object().shape({\n    secretName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    annotations: yup.object().shape({\n      key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      value: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    }),\n  });\n","import { FormikErrors } from 'formik';\nimport i18n from 'i18next';\nimport * as _ from 'lodash';\nimport { apiVersionForModel } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { ClusterTaskModel, PipelineModel, TaskModel } from '../../../models';\nimport {\n  PipelineKind,\n  PipelineTask,\n  PipelineTaskParam,\n  TaskKind,\n  TektonParam,\n} from '../../../types';\nimport { sanitizePipelineParams } from '../detail-page-tabs/utils';\nimport { getTaskParameters } from '../resource-utils';\nimport {\n  getTaskErrorString,\n  STATUS_KEY_NAME_ERROR,\n  TASK_FIELD_ERROR_TYPE_MAPPING,\n  TaskErrorType,\n} from './const';\nimport {\n  BuilderTasksErrorGroup,\n  GetErrorMessage,\n  PipelineBuilderFormikStatus,\n  PipelineBuilderFormValues,\n  PipelineBuilderFormYamlValues,\n  PipelineBuilderLoadingTask,\n  PipelineBuilderTaskBase,\n  PipelineBuilderTaskResources,\n  TaskErrors,\n  TaskType,\n} from './types';\n\nconst isTaskArrayErrors = (errors: string | string[] | TaskErrors): errors is TaskErrors => {\n  return Array.isArray(errors) && errors.some((value) => typeof value === 'object');\n};\n\nexport const getBuilderTasksErrorGroup = (\n  formikFormErrors?: FormikErrors<PipelineBuilderFormValues>,\n  status?: PipelineBuilderFormikStatus,\n): BuilderTasksErrorGroup => {\n  const paths = Object.keys(status?.[STATUS_KEY_NAME_ERROR] || {});\n  const nameErrorString = getTaskErrorString(TaskErrorType.NAME_ERROR);\n  const { formData } = paths.reduce((data, path) => {\n    _.set(data, path, nameErrorString);\n    return data;\n  }, {} as FormikErrors<PipelineBuilderFormYamlValues>);\n\n  const getErrorsForType = (type: TaskType): TaskErrors => {\n    const formErrors = isTaskArrayErrors(formikFormErrors?.[type]) ? formikFormErrors[type] : [];\n    const displayNameErrors = formData?.[type];\n    return _.merge([], formErrors, displayNameErrors);\n  };\n\n  return {\n    tasks: getErrorsForType('tasks'),\n    finally: getErrorsForType('finallyTasks'),\n  };\n};\n\nexport const getTopLevelErrorMessage: GetErrorMessage = (errors) => (taskIndex) => {\n  const errorObj = errors[taskIndex] || {};\n  const taskErrors = Object.values(errorObj);\n\n  if (taskErrors.length === 0) return null;\n\n  // Check if it's one of the known error messages\n  const matchingErrorType: TaskErrorType = Object.values(\n    TaskErrorType,\n  ).find((errorType: TaskErrorType) => taskErrors.includes(getTaskErrorString(errorType)));\n  if (matchingErrorType) return getTaskErrorString(matchingErrorType);\n\n  // Not one of the top-level known ones, is it a problem with a known area?\n  const keys = Object.keys(TASK_FIELD_ERROR_TYPE_MAPPING) as TaskErrorType[];\n  const mappingErrorType: TaskErrorType = keys.find((key) => {\n    const properties: string[] = TASK_FIELD_ERROR_TYPE_MAPPING[key];\n    return properties?.some((propertyPath) => _.get(errorObj, propertyPath));\n  });\n  if (!mappingErrorType) return null;\n\n  // Problem with a known area, get the area based error for a high-level error (more specific error will be on the field)\n  return getTaskErrorString(mappingErrorType);\n};\n\nexport const findTask = (\n  resourceTasks: PipelineBuilderTaskResources,\n  task: PipelineTask,\n): TaskKind => {\n  if (task?.taskRef) {\n    if (\n      !resourceTasks?.tasksLoaded ||\n      !resourceTasks.clusterTasks ||\n      !resourceTasks.namespacedTasks\n    ) {\n      return null;\n    }\n    const {\n      taskRef: { kind, name },\n    } = task;\n    const matchingName = (taskResource: TaskKind) => taskResource.metadata.name === name;\n\n    if (kind === ClusterTaskModel.kind) {\n      return resourceTasks.clusterTasks.find(matchingName);\n    }\n    return resourceTasks.namespacedTasks.find(matchingName);\n  }\n\n  if (task?.taskSpec) {\n    return {\n      apiVersion: apiVersionForModel(TaskModel),\n      kind: 'EmbeddedTask',\n      metadata: {\n        name: i18n.t('pipelines-plugin~Embedded task'),\n      },\n      spec: task.taskSpec,\n    };\n  }\n\n  return null;\n};\n\nexport const findTaskFromFormikData = (\n  formikData: PipelineBuilderFormYamlValues,\n  task: PipelineTask,\n): TaskKind => {\n  const { taskResources } = formikData;\n  return findTask(taskResources, task);\n};\n\n/**\n * Swaps one runAfter (relatedTaskName) for another (taskName).\n */\nexport const mapReplaceRelatedInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(relatedTaskName)) {\n    return iterationTask;\n  }\n\n  const remainingRunAfters = iterationTask.runAfter.filter(\n    (runAfterName) => runAfterName !== relatedTaskName,\n  );\n\n  return {\n    ...iterationTask,\n    runAfter: [...remainingRunAfters, taskName],\n  };\n};\n\n/**\n * Finds and removes a related runAfter (taskName).\n */\nexport const mapRemoveRelatedInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(taskName)) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: iterationTask.runAfter.filter((runAfterName) => runAfterName !== taskName),\n  };\n};\n\n/**\n * Removes reference of a task (removalTask) in the other task (iterationTask) & combines the task\n * (removalTask) runAfters in the other task (iterationTask).\n */\nexport const mapStitchReplaceInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  removalTask: PipelineBuilderTaskBase,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!removalTask?.name) {\n    return iterationTask;\n  }\n  if (!removalTask?.runAfter) {\n    return mapRemoveRelatedInOthers<TaskType>(removalTask.name, iterationTask);\n  }\n  if (!iterationTask?.runAfter?.includes(removalTask.name)) {\n    return iterationTask;\n  }\n\n  const updatedIterationTask = mapRemoveRelatedInOthers(removalTask.name, iterationTask);\n  let newRunAfter: string[] = removalTask.runAfter;\n  if (updatedIterationTask.runAfter.length > 0) {\n    newRunAfter = [...updatedIterationTask.runAfter, ...newRunAfter];\n  }\n\n  return {\n    ...updatedIterationTask,\n    runAfter: _.uniq(newRunAfter),\n  };\n};\n\n/**\n * Simply add a runAfter (of newTaskName) to a task (iterationTask) on matching names (relatedTaskName).\n */\nexport const mapBeRelated = <TaskType extends PipelineBuilderTaskBase>(\n  newTaskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (iterationTask?.name !== relatedTaskName) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: [newTaskName],\n  };\n};\n\n/**\n * Adds a task (taskName) to an existing runAfter (iterationTask.runAfter) if a related name\n * (relatedTaskName) is already part of the runAfter.\n */\nexport const mapAddRelatedToOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(relatedTaskName)) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: [...iterationTask.runAfter, taskName],\n  };\n};\n\nexport const safeName = (reservedNames: string[], desiredName: string): string => {\n  if (reservedNames.includes(desiredName)) {\n    const newName = `${desiredName}-${getRandomChars(3)}`;\n    if (reservedNames.includes(newName)) {\n      return safeName(reservedNames, desiredName);\n    }\n    return newName;\n  }\n  return desiredName;\n};\n\nexport const convertResourceToLoadingTask = (\n  usedNames: string[],\n  resource: TaskKind,\n  isFinallyTask: boolean,\n  runAfter?: string[],\n): PipelineBuilderLoadingTask => {\n  const kind = resource.kind ?? TaskModel.kind;\n  return {\n    name: safeName(usedNames, resource.metadata.name),\n    runAfter: isFinallyTask ? [] : runAfter,\n    taskRef: {\n      kind,\n      name: resource.metadata.name,\n    },\n    resource,\n    isFinallyTask,\n  };\n};\n\nexport const convertResourceToTask = (\n  usedNames: string[],\n  resource: TaskKind,\n  runAfter?: string[],\n): PipelineTask => {\n  const kind = resource.kind ?? TaskModel.kind;\n  return {\n    name: safeName(usedNames, resource.metadata.name),\n    runAfter,\n    taskRef: {\n      kind,\n      name: resource.metadata.name,\n    },\n    params: getTaskParameters(resource).map(\n      (param: TektonParam): PipelineTaskParam => ({\n        name: param.name,\n        value: param.default,\n      }),\n    ),\n  };\n};\n\nconst removeListRunAfters = (task: PipelineTask, listIds: string[]): PipelineTask => {\n  if (task?.runAfter && listIds.length > 0) {\n    // Trim out any runAfters pointing at list nodes\n    const runAfter = (task.runAfter || []).filter(\n      (runAfterName) => !listIds.includes(runAfterName),\n    );\n\n    return {\n      ...task,\n      runAfter,\n    };\n  }\n\n  return task;\n};\n\nexport const removeEmptyFormFields = (task: PipelineTask): PipelineTask => {\n  let trimmedTask = task;\n  // Since we can submit, this param has a default; check for empty values and remove\n  if (task.params?.length > 0) {\n    const params = task.params?.filter((param) => !!param.value);\n    trimmedTask = { ...trimmedTask, params };\n  }\n  // Drop input/output resources which are not linked to an (optional) resource.\n  if (task.resources?.inputs?.length > 0 || task.resources?.outputs?.length > 0) {\n    const inputs = task.resources?.inputs?.filter((resource) => resource.resource);\n    const outputs = task.resources?.outputs?.filter((resource) => resource.resource);\n    trimmedTask = { ...trimmedTask, resources: { ...trimmedTask.resources, inputs, outputs } };\n  }\n  // Drop workspaces which are not linked to an (optional) workspace.\n  if (task.workspaces?.length > 0) {\n    const workspaces = task.workspaces?.filter((workspace) => workspace.workspace);\n    trimmedTask = { ...trimmedTask, workspaces };\n  }\n  return trimmedTask;\n};\n\nexport const convertBuilderFormToPipeline = (\n  formValues: PipelineBuilderFormValues,\n  namespace: string,\n  existingPipeline?: PipelineKind,\n): PipelineKind => {\n  const {\n    name,\n    resources,\n    params,\n    workspaces,\n    tasks,\n    listTasks,\n    finallyTasks,\n    ...others\n  } = formValues;\n  const listIds = listTasks.map((listTask) => listTask.name);\n  // Strip remaining builder-only properties\n  const unhandledSpec = _.omit(others, 'finallyListTasks', 'loadingTasks');\n\n  return {\n    ...existingPipeline,\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      ...existingPipeline?.metadata,\n      name: existingPipeline?.metadata?.name ? existingPipeline?.metadata?.name : name,\n      namespace,\n    },\n    spec: {\n      ...existingPipeline?.spec,\n      ...unhandledSpec,\n      params: sanitizePipelineParams(\n        params.length > 0 ? params : existingPipeline?.spec?.params ?? [],\n      ),\n      workspaces: workspaces.length > 0 ? workspaces : existingPipeline?.spec?.workspaces ?? [],\n      tasks:\n        tasks.length > 0\n          ? tasks\n          : existingPipeline?.spec?.tasks ??\n            [].map((task) => task && removeEmptyFormFields(removeListRunAfters(task, listIds))),\n      finally: finallyTasks,\n    },\n  };\n};\n\nexport const convertPipelineToBuilderForm = (pipeline: PipelineKind): PipelineBuilderFormValues => {\n  if (!pipeline) return null;\n\n  const {\n    metadata: { name },\n    spec: { params = [], resources = [], workspaces = [], tasks = [], finally: finallyTasks = [] },\n  } = pipeline;\n\n  return {\n    name,\n    params,\n    resources,\n    workspaces: workspaces.map((workspace) => ({\n      ...workspace,\n      optional: !!workspace.optional, // Formik fails to understand \"undefined boolean\" checkbox values\n    })),\n    tasks,\n    listTasks: [],\n    loadingTasks: [],\n    finallyTasks,\n    finallyListTasks: [],\n  };\n};\n\nexport const hasEmptyString = (arr: string[]) => _.find(arr, _.isEmpty) === '';\n\nexport const isFieldValid = (value: string | string[], dirty: boolean, emptyIsInvalid: boolean) =>\n  dirty && emptyIsInvalid ? (_.isArray(value) ? !hasEmptyString(value) : !_.isEmpty(value)) : true;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectList,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  getAccessModeForProvisioner,\n  getAccessModeOptions,\n} from '@console/internal/components/storage/shared';\nimport { PersistentVolumeClaimKind } from '@console/internal/module/k8s';\n\nexport const getPVCAccessModes = (resource: PersistentVolumeClaimKind, key: string) =>\n  _.reduce(\n    resource?.spec?.accessModes,\n    (res, value) => {\n      const mode = getAccessModeOptions().find((accessMode) => accessMode.value === value);\n      if (mode) {\n        res.push(mode[key]);\n      }\n      return res;\n    },\n    [],\n  );\n\nexport const AccessModeSelector: React.FC<AccessModeSelectorProps> = (props) => {\n  const {\n    className,\n    pvcResource,\n    filterByVolumeMode,\n    onChange,\n    loaded,\n    provisioner,\n    availableAccessModes = [],\n    description,\n    ignoreReadOnly,\n  } = props;\n\n  const { t } = useTranslation();\n  const pvcInitialAccessMode = pvcResource\n    ? getPVCAccessModes(pvcResource, 'value')\n    : availableAccessModes;\n  const volumeMode: string = pvcResource?.spec?.volumeMode;\n\n  const [allowedAccessModes, setAllowedAccessModes] = React.useState<string[]>();\n  const [accessMode, setAccessMode] = React.useState<string>();\n\n  const changeAccessMode = React.useCallback(\n    (mode: string) => {\n      setAccessMode(mode);\n      onChange(mode);\n    },\n    [onChange],\n  );\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState<string>(\n    getAccessModeOptions().find((mode) => mode.value === pvcInitialAccessMode[0]).title,\n  );\n\n  const onToggleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSelect = (_event: undefined, value: { val: string; label: string }) => {\n    setIsOpen(!isOpen);\n    setSelected(value.label);\n    changeAccessMode(value.val);\n  };\n  const selectOptions = getAccessModeOptions().map((option) => {\n    const disabled = !allowedAccessModes?.includes(option.value);\n    return (\n      <SelectOption\n        key={option.title}\n        value={{ val: option.value, label: option.title }}\n        isDisabled={disabled}\n        isSelected={accessMode === option.value}\n      >\n        {option.title}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={onToggleClick}\n      isExpanded={isOpen}\n      style={\n        {\n          width: '200px',\n        } as React.CSSProperties\n      }\n    >\n      {selected}\n    </MenuToggle>\n  );\n\n  React.useEffect(() => {\n    if (loaded) {\n      setAllowedAccessModes(\n        getAccessModeForProvisioner(\n          provisioner,\n          ignoreReadOnly,\n          filterByVolumeMode ? volumeMode : null,\n        ),\n      );\n    }\n  }, [filterByVolumeMode, ignoreReadOnly, loaded, provisioner, volumeMode]);\n\n  React.useEffect(() => {\n    // Make sure the default or already checked option button value is from any one of allowed the access mode\n    if (allowedAccessModes) {\n      if (!accessMode && allowedAccessModes.includes(pvcInitialAccessMode[0])) {\n        // To view the same access mode value of pvc\n        changeAccessMode(pvcInitialAccessMode[0]);\n      } else if (!allowedAccessModes.includes(accessMode)) {\n        // Old access mode will be disabled\n        changeAccessMode(allowedAccessModes[0]);\n      }\n    }\n  }, [accessMode, allowedAccessModes, changeAccessMode, pvcInitialAccessMode]);\n\n  return (\n    <FormGroup\n      label={t('console-app~Access mode')}\n      isRequired\n      fieldId=\"access-mode\"\n      className={className}\n    >\n      {loaded && allowedAccessModes && (\n        <Select\n          isOpen={isOpen}\n          selected={selected}\n          onSelect={onSelect}\n          onOpenChange={(open) => setIsOpen(open)}\n          toggle={toggle}\n          shouldFocusToggleOnSelect\n        >\n          <SelectList>{selectOptions}</SelectList>\n        </Select>\n      )}\n\n      {allowedAccessModes && allowedAccessModes && description && (\n        <p className=\"help-block\" id=\"access-mode-help\">\n          {description}\n        </p>\n      )}\n      {(!loaded || !allowedAccessModes) && <div className=\"skeleton-text\" />}\n    </FormGroup>\n  );\n};\n\ntype AccessModeSelectorProps = {\n  className?: string;\n  pvcResource?: PersistentVolumeClaimKind;\n  filterByVolumeMode?: boolean;\n  onChange: (accessMode: string) => void;\n  availableAccessModes?: string[];\n  loaded: boolean;\n  loadError?: any;\n  provisioner: string;\n  description?: string;\n  ignoreReadOnly?: boolean;\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\n/* eslint-disable import/named */\nimport { WithTranslation, withTranslation } from 'react-i18next';\n\nimport { Firehose, LoadingInline, Dropdown, ResourceName, ResourceIcon } from '.';\nimport { isDefaultClass } from '../storage-class';\nimport * as classNames from 'classnames';\n\n/* Component StorageClassDropdown - creates a dropdown list of storage classes */\n\nexport class StorageClassDropdownInnerWithTranslation extends React.Component<\n  StorageClassDropdownInnerProps,\n  StorageClassDropdownInnerState\n> {\n  readonly state: StorageClassDropdownInnerState = {\n    items: {},\n    name: this.props.name,\n    selectedKey: this.props.selectedKey,\n    title: <LoadingInline />,\n    defaultClass: this.props.defaultClass,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.UNSAFE_componentWillReceiveProps(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { loaded, loadError, resources, t } = nextProps;\n\n    if (loadError) {\n      this.setState({\n        title: (\n          <div className=\"cos-error-title\">\n            {t('public~Error loading {{desc}}', { desc: nextProps.desc })}\n          </div>\n        ),\n      });\n      return;\n    }\n    if (!loaded) {\n      return;\n    }\n\n    const state = {\n      items: {},\n      title: {},\n      defaultClass: '',\n    };\n    let unorderedItems = {};\n    const noStorageClass = t('public~No default StorageClass');\n    _.map(resources.StorageClass.data, (resource) => {\n      unorderedItems[resource.metadata.name] = {\n        kindLabel: 'StorageClass',\n        name: resource.metadata.name,\n        description: _.get(resource, 'metadata.annotations.description', ''),\n        default: isDefaultClass(resource),\n        accessMode: _.get(\n          resource,\n          ['metadata', 'annotations', 'storage.alpha.openshift.io/access-mode'],\n          '',\n        ),\n        provisioner: resource.provisioner,\n        parameters: resource.parameters,\n        type: _.get(resource, 'parameters.type', ''),\n        zone: _.get(resource, 'parameters.zone', ''),\n        resource,\n      };\n    });\n\n    //Filter if user provides a custom function\n    if (nextProps.filter) {\n      unorderedItems = Object.keys(unorderedItems)\n        .filter((sc) => nextProps.filter(unorderedItems[sc]))\n        .reduce((acc, key) => {\n          acc[key] = unorderedItems[key];\n          return acc;\n        }, {});\n    }\n\n    // Determine if there is a default storage class\n    state.defaultClass = _.findKey(unorderedItems, 'default');\n    const { selectedKey } = this.state;\n    if (!state.defaultClass) {\n      // Add No Storage Class option if there is not a default storage class\n      unorderedItems[''] = { kindLabel: '', name: noStorageClass };\n    }\n\n    if (!this.props.loaded || !selectedKey || !unorderedItems[selectedKey || state.defaultClass]) {\n      state.title = <span className=\"text-muted\">{t('public~Select StorageClass')}</span>;\n    }\n\n    const selectedItem = unorderedItems[selectedKey || state.defaultClass];\n    if (selectedItem) {\n      state.title = this.getTitle(selectedItem);\n    }\n\n    Object.keys(unorderedItems)\n      .sort()\n      .forEach((key) => {\n        state.items[key] = unorderedItems[key];\n      });\n    this.setState(state);\n  }\n\n  componentDidMount() {\n    const { defaultClass } = this.state;\n    if (defaultClass) {\n      this.onChange(defaultClass);\n    }\n  }\n\n  componentDidUpdate() {\n    const { defaultClass, selectedKey } = this.state;\n    if (selectedKey) {\n      this.onChange(selectedKey);\n    } else if (defaultClass) {\n      this.onChange(defaultClass);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state, nextState);\n  }\n\n  autocompleteFilter = (text, item) => fuzzy(text, item.props.name);\n\n  getTitle = (storageClass) => {\n    return storageClass.kindLabel ? (\n      <ResourceName kind=\"StorageClass\" name={storageClass.name} />\n    ) : (\n      <span>{storageClass.name}</span>\n    );\n  };\n\n  onChange = (key) => {\n    const storageClass = _.get(this.state, ['items', key], {});\n    this.setState(\n      {\n        selectedKey: key,\n        title: this.getTitle(storageClass),\n      },\n      () => this.props.onChange(storageClass.resource),\n    );\n  };\n\n  render() {\n    const { id, loaded, describedBy, noSelection, t } = this.props;\n    const items = {};\n    _.each(\n      this.state.items,\n      (props, key) =>\n        (items[key] = key ? (\n          <StorageClassDropdownEntry {...props} />\n        ) : (\n          <StorageClassDropdownNoStorageClassOption {...props} />\n        )),\n    );\n\n    const { selectedKey, defaultClass } = this.state;\n\n    // Only show the dropdown if 'no storage class' is not the only option which depends on defaultClass\n    const itemsAvailableToShow = defaultClass || _.size(items) > 1;\n    return (\n      <>\n        {loaded && itemsAvailableToShow && (\n          <div>\n            <label\n              className={classNames('control-label', this.props.hideClassName, {\n                'co-required': this.props.required,\n              })}\n              htmlFor={id}\n            >\n              {t('public~StorageClass')}\n            </label>\n            <Dropdown\n              className=\"co-storage-class-dropdown\"\n              dropDownClassName=\"dropdown--full-width\"\n              autocompleteFilter={this.autocompleteFilter}\n              autocompletePlaceholder={t('public~Select StorageClass')}\n              items={items}\n              selectedKey={selectedKey}\n              title={this.state.title}\n              onChange={this.onChange}\n              id={id}\n              dataTest={this.props?.['data-test']}\n              noSelection={noSelection}\n              menuClassName=\"dropdown-menu--text-wrap\"\n            />\n            {describedBy && (\n              <p className=\"help-block\" id={describedBy}>\n                {t('public~StorageClass for the new claim')}\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const StorageClassDropdownInner = withTranslation()(\n  StorageClassDropdownInnerWithTranslation,\n);\n\nexport const StorageClassDropdown = (props) => {\n  return (\n    <Firehose resources={[{ kind: 'StorageClass', prop: 'StorageClass', isList: true }]}>\n      <StorageClassDropdownInner {...props} />\n    </Firehose>\n  );\n};\n\nconst StorageClassDropdownEntry = (props) => {\n  const storageClassProperties = [\n    props.default ? ' (default)' : '',\n    props.description,\n    props.accessMode,\n    props.provisioner,\n    props.type,\n    props.zone,\n  ];\n  const storageClassDescriptionLine = _.compact(storageClassProperties).join(' | ');\n  return (\n    <span className=\"co-resource-item\">\n      <ResourceIcon kind={props.kindLabel} />\n      <span className=\"co-resource-item__resource-name\">\n        {props.name}\n        <div className=\"text-muted small\"> {storageClassDescriptionLine}</div>\n      </span>\n    </span>\n  );\n};\n\nconst StorageClassDropdownNoStorageClassOption = (props) => {\n  return (\n    <span className=\"co-resource-item\">\n      <span className=\"co-resource-item__resource-name\">{props.name}</span>\n    </span>\n  );\n};\n\nexport type StorageClassDropdownInnerState = {\n  items: any;\n  name: string;\n  selectedKey: string;\n  title: React.ReactNode;\n  defaultClass: string;\n};\n\nexport type StorageClassDropdownInnerProps = WithTranslation & {\n  id?: string;\n  loaded?: boolean;\n  resources?: any;\n  name: string;\n  onChange: (object) => void;\n  describedBy: string;\n  defaultClass: string;\n  required?: boolean;\n  hideClassName?: string;\n  filter?: (param) => boolean;\n  noSelection?: boolean;\n  selectedKey?: string;\n};\n","import * as React from 'react';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { ConfigMapModel } from '@console/internal/models';\nimport { ConfigMapKind, k8sList } from '@console/internal/module/k8s';\nimport { RepositoryModel } from '@console/pipelines-plugin/src/models';\nimport { PAC_INFO } from '../../pac/const';\nimport { PIPELINE_NAMESPACE } from '../../pipelines/const';\n\nexport const usePacInfo = () =>\n  useK8sGet<ConfigMapKind>(ConfigMapModel, PAC_INFO, PIPELINE_NAMESPACE);\n\nexport const useRepositoryPresent = (repoURL: string) => {\n  const [repoAlreadyExists, setRepoAlreadyExists] = React.useState(false);\n\n  React.useEffect(() => {\n    k8sList(RepositoryModel)\n      .then((repos) => {\n        setRepoAlreadyExists(repos.some((r) => r.spec.url === repoURL));\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.warn('Error while fetching Pipeline-as-code repositories:', err);\n        setRepoAlreadyExists(false);\n      });\n  }, [repoURL]);\n\n  return repoAlreadyExists;\n};\n","import { TektonParam } from '../types';\n\nexport const paramIsRequired = (param: TektonParam): boolean => {\n  return !('default' in param);\n};\n","import { k8sListResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { TaskRunModel } from '../../models';\nimport { TaskRunKind } from '../../types';\nimport { TektonResourceLabel } from '../pipelines/const';\n\nexport const useTaskRuns = (\n  namespace: string,\n  pipelineRunName?: string,\n): [TaskRunKind[], boolean, unknown] => {\n  const taskRunResource = pipelineRunName\n    ? {\n        kind: referenceForModel(TaskRunModel),\n        namespace,\n        selector: {\n          matchLabels: {\n            [TektonResourceLabel.pipelinerun]: pipelineRunName,\n          },\n        },\n        isList: true,\n      }\n    : {\n        kind: referenceForModel(TaskRunModel),\n        namespace,\n        isList: true,\n      };\n  return useK8sWatchResource<TaskRunKind[]>(taskRunResource);\n};\n\nexport const getTaskRuns = async (namespace: string, pipelineRunName?: string) => {\n  const taskRunResource = pipelineRunName\n    ? {\n        model: TaskRunModel,\n        queryParams: {\n          ns: namespace,\n          labelSelector: {\n            matchLabels: {\n              [TektonResourceLabel.pipelinerun]: pipelineRunName,\n            },\n          },\n        },\n      }\n    : {\n        model: TaskRunModel,\n        queryParams: {\n          ns: namespace,\n        },\n      };\n  const taskRuns = await k8sListResource(taskRunResource);\n  return taskRuns;\n};\n\nexport const getTaskRunsOfPipelineRun = (\n  taskRuns: TaskRunKind[],\n  pipelineRunName: string,\n): TaskRunKind[] => {\n  return taskRuns.filter(\n    (taskRun) => taskRun.metadata?.labels[TektonResourceLabel.pipelinerun] === pipelineRunName,\n  );\n};\n","import * as _ from 'lodash';\nimport {\n  K8sResourceCommon,\n  MatchExpression,\n  MatchLabels,\n  Selector,\n} from '@console/dynamic-plugin-sdk/src';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { ALL_NAMESPACES_KEY } from '@console/shared/src/constants';\nimport { consoleProxyFetch, consoleProxyFetchJSON } from '@console/shared/src/utils/proxy';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../const';\nimport { TektonResultModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\n\n// REST API spec\n// https://github.com/tektoncd/results/blob/main/docs/api/rest-api-spec.md\n\n// const URL_PREFIX = `/apis/results.tekton.dev/v1alpha2/parents/`;\n\nconst MINIMUM_PAGE_SIZE = 5;\nconst MAXIMUM_PAGE_SIZE = 10000;\n\nexport type ResultRecord = {\n  name: string;\n  uid: string;\n  createTime: string;\n  updateTime: string;\n  etag: string;\n  data: {\n    // tekton.dev/v1beta1.PipelineRun | tekton.dev/v1beta1.TaskRun | results.tekton.dev/v1alpha2.Log\n    type: string;\n    value: string;\n  };\n};\n\nexport type Log = {\n  result: {\n    name: string;\n    data: string;\n  };\n};\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type RecordsList = {\n  nextPageToken?: string;\n  records: ResultRecord[];\n};\n\nexport type TektonResultsOptions = {\n  pageSize?: number;\n  selector?: Selector;\n  // limit cannot be used in conjuction with pageSize and takes precedence\n  limit?: number;\n  filter?: string;\n};\n\nconst throw404 = () => {\n  // eslint-disable-next-line no-throw-literal\n  throw { code: 404 };\n};\n\n// decoding result base64\nexport const decodeValue = (value: string) => atob(value);\nexport const decodeValueJson = (value: string) => {\n  const decodedValue = value ? JSON.parse(decodeValue(value)) : null;\n  let resourceDeletedInK8sAnnotation;\n  if (_.has(decodedValue?.metadata, 'deletionTimestamp')) {\n    delete decodedValue?.metadata?.deletionTimestamp;\n    resourceDeletedInK8sAnnotation = { [DELETED_RESOURCE_IN_K8S_ANNOTATION]: 'true' };\n  }\n  const decodedValueWithTRAnnotation = decodedValue\n    ? {\n        ...decodedValue,\n        metadata: {\n          ...decodedValue?.metadata,\n          annotations: {\n            ...decodedValue?.metadata?.annotations,\n            [RESOURCE_LOADED_FROM_RESULTS_ANNOTATION]: 'true',\n            ...resourceDeletedInK8sAnnotation,\n          },\n        },\n      }\n    : null;\n  return decodedValueWithTRAnnotation;\n};\n\n// filter functions\nexport const AND = (...expressions: string[]) => expressions.filter((x) => x).join(' && ');\nexport const OR = (...expressions: string[]) => {\n  const filteredExpressions = expressions.filter((x) => x);\n  const filter = filteredExpressions.join(' || ');\n  return filteredExpressions.length > 1 ? `(${filter})` : filter;\n};\n\nconst EXP = (left: string, right: string, operator: string) => `${left} ${operator} ${right}`;\nexport const EQ = (left: string, right: string) => EXP(left, `\"${right}\"`, '==');\nexport const NEQ = (left: string, right: string) => EXP(left, `\"${right}\"`, '!=');\n\nexport enum DataType {\n  PipelineRunV1Beta1 = 'tekton.dev/v1beta1.PipelineRun',\n  TaskRunV1Beta1 = 'tekton.dev/v1beta1.TaskRun',\n  PipelineRunV1 = 'tekton.dev/v1.PipelineRun',\n  TaskRunV1 = 'tekton.dev/v1.TaskRun',\n}\n\nexport const labelsToFilter = (labels?: MatchLabels): string =>\n  labels\n    ? AND(\n        ...Object.keys(labels).map((label) =>\n          EQ(`data.metadata.labels[\"${label}\"]`, labels[label]),\n        ),\n      )\n    : '';\n\nexport const nameFilter = (name?: string): string =>\n  name ? AND(`data.metadata.name.startsWith(\"${name.trim().toLowerCase()}\")`) : '';\n\nexport const expressionsToFilter = (expressions: Omit<MatchExpression, 'value'>[]): string =>\n  AND(\n    ...expressions\n      .map((expression) => {\n        switch (expression.operator) {\n          case 'Exists':\n            return `data.metadata.labels.contains(\"${expression.key}\")`;\n          case 'DoesNotExist':\n            return `!data.metadata.labels.contains(\"${expression.key}\")`;\n          case 'NotIn':\n            return expression.values?.length > 0\n              ? AND(\n                  ...expression.values.map((value) =>\n                    NEQ(`data.metadata.labels[\"${expression.key}\"]`, value),\n                  ),\n                )\n              : '';\n          case 'In':\n            return expression.values?.length > 0\n              ? `data.metadata.labels[\"${expression.key}\"] in [${expression.values.map(\n                  (value) => `\"${value}\"`,\n                )}]`\n              : '';\n          case 'Equals':\n            return expression.values?.[0]\n              ? EQ(`data.metadata.labels[\"${expression.key}\"]`, expression.values?.[0])\n              : '';\n          case 'NotEquals':\n          case 'NotEqual':\n            return expression.values?.[0]\n              ? NEQ(`data.metadata.labels[\"${expression.key}\"]`, expression.values?.[0])\n              : '';\n          case 'GreaterThan':\n            return expression.values?.[0]\n              ? EXP(`data.metadata.labels[\"${expression.key}\"]`, expression.values?.[0], '>')\n              : '';\n          case 'LessThan':\n            return expression.values?.[0]\n              ? EXP(`data.metadata.labels[\"${expression.key}\"]`, expression.values?.[0], '<')\n              : '';\n          default:\n            throw new Error(\n              `Tekton results operator '${expression.operator}' conversion not implemented.`,\n            );\n        }\n      })\n      .filter((x) => x),\n  );\n\nexport const selectorToFilter = (selector) => {\n  let filter = '';\n  if (selector) {\n    const { matchLabels, matchExpressions, filterByName } = selector;\n    if (filterByName) {\n      filter = AND(filter, nameFilter(filterByName as string));\n    }\n    if (matchLabels || matchExpressions) {\n      if (matchLabels) {\n        filter = AND(filter, labelsToFilter(matchLabels));\n      }\n      if (matchExpressions) {\n        filter = AND(filter, expressionsToFilter(matchExpressions));\n      }\n    } else {\n      filter = labelsToFilter(selector as MatchLabels);\n    }\n  }\n  return filter;\n};\n\n// Devs should be careful to not cache a response that may not be complete.\n// In most situtations, caching is unnecessary.\n// Only cache a response that returns a single complete record as lists can change over time.\nlet CACHE: { [key: string]: [any[], RecordsList] } = {};\nexport const clearCache = () => {\n  CACHE = {};\n};\nconst InFlightStore: { [key: string]: boolean } = {};\n\nexport const getTRURLHost = async () => {\n  const tektonResult = await k8sGet(TektonResultModel, 'result');\n  const targetNamespace = tektonResult?.spec?.targetNamespace;\n  const serverPort = tektonResult?.spec?.server_port ?? '8080';\n  const tlsHostname = tektonResult?.spec?.tls_hostname_override;\n  let tektonResultsAPI;\n  if (tlsHostname) {\n    tektonResultsAPI = `${tlsHostname}:${serverPort}`;\n  } else if (targetNamespace && serverPort) {\n    tektonResultsAPI = `tekton-results-api-service.${targetNamespace}.svc.cluster.local:${serverPort}`;\n  } else {\n    tektonResultsAPI = `tekton-results-api-service.openshift-pipelines.svc.cluster.local:${serverPort}`;\n  }\n  return tektonResultsAPI;\n};\n\nexport const createTektonResultsUrl = async (\n  namespace: string,\n  dataType?: DataType,\n  filter?: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n): Promise<string> => {\n  const tektonResultsAPI = await getTRURLHost();\n  const namespaceToSearch = namespace && namespace !== ALL_NAMESPACES_KEY ? namespace : '-';\n  const url = `https://${tektonResultsAPI}/apis/results.tekton.dev/v1alpha2/parents/${namespaceToSearch}/results/-/records?${new URLSearchParams(\n    {\n      // default sort should always be by `create_time desc`\n      // order_by: 'create_time desc', not supported yet\n      page_size: `${Math.max(\n        MINIMUM_PAGE_SIZE,\n        Math.min(MAXIMUM_PAGE_SIZE, options?.limit >= 0 ? options.limit : options?.pageSize ?? 50),\n      )}`,\n      ...(nextPageToken ? { page_token: nextPageToken } : {}),\n      filter: AND(\n        EQ('data_type', dataType.toString()),\n        filter,\n        selectorToFilter(options?.selector),\n        options?.filter,\n      ),\n    },\n  ).toString()}`;\n  return url;\n};\n\nexport const getFilteredRecord = async <R extends K8sResourceCommon>(\n  namespace: string,\n  dataType: DataType,\n  filter?: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  cacheKey?: string,\n): Promise<[R[], RecordsList, boolean?]> => {\n  if (cacheKey) {\n    const result = CACHE[cacheKey];\n    if (result) {\n      return result;\n    }\n    if (InFlightStore[cacheKey]) {\n      return [\n        [],\n        {\n          nextPageToken: null,\n          records: [],\n        },\n        true,\n      ];\n    }\n  }\n  InFlightStore[cacheKey] = true;\n  const value = await (async (): Promise<[R[], RecordsList]> => {\n    try {\n      const url = await createTektonResultsUrl(namespace, dataType, filter, options, nextPageToken);\n      let list: RecordsList = await consoleProxyFetchJSON({\n        url,\n        method: 'GET',\n        allowInsecure: true,\n      });\n      if (options?.limit >= 0) {\n        list = {\n          nextPageToken: null,\n          records: list.records.slice(0, options.limit),\n        };\n      }\n      return [list.records.map((result) => decodeValueJson(result.data.value)), list];\n    } catch (e) {\n      // return an empty response if we get a 404 error\n      if (e?.code === 404) {\n        return [\n          [],\n          {\n            nextPageToken: null,\n            records: [],\n          },\n        ] as [R[], RecordsList];\n      }\n      throw e;\n    }\n  })();\n\n  if (cacheKey) {\n    InFlightStore[cacheKey] = false;\n    CACHE[cacheKey] = value;\n  }\n  return value;\n};\n\nconst getFilteredPipelineRuns = (\n  namespace: string,\n  filter: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  cacheKey?: string,\n  IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n) =>\n  getFilteredRecord<PipelineRunKind>(\n    namespace,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER\n      ? DataType.PipelineRunV1\n      : DataType.PipelineRunV1Beta1,\n    filter,\n    options,\n    nextPageToken,\n    cacheKey,\n  );\n\nconst getFilteredTaskRuns = (\n  namespace: string,\n  filter: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  cacheKey?: string,\n  IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n) =>\n  getFilteredRecord<TaskRunKind>(\n    namespace,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER ? DataType.TaskRunV1 : DataType.TaskRunV1Beta1,\n    filter,\n    options,\n    nextPageToken,\n    cacheKey,\n  );\n\nexport const getPipelineRuns = (\n  namespace: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  // supply a cacheKey only if the PipelineRun is complete and response will never change in the future\n  cacheKey?: string,\n  IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n) =>\n  getFilteredPipelineRuns(\n    namespace,\n    '',\n    options,\n    nextPageToken,\n    cacheKey,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n\nexport const getTaskRuns = (\n  namespace: string,\n  options?: TektonResultsOptions,\n  nextPageToken?: string,\n  // supply a cacheKey only if the TaskRun is complete and response will never change in the future\n  cacheKey?: string,\n  IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n) =>\n  getFilteredTaskRuns(\n    namespace,\n    '',\n    options,\n    nextPageToken,\n    cacheKey,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const consoleProxyFetchLog = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : response.body;\n  });\n};\n\nexport const getTaskRunLog = async (taskRunPath: string): Promise<string> => {\n  if (!taskRunPath) {\n    throw404();\n  }\n  const tektonResultsAPI = await getTRURLHost();\n  const url = `https://${tektonResultsAPI}/apis/results.tekton.dev/v1alpha2/parents/${taskRunPath.replace(\n    '/records/',\n    '/logs/',\n  )}`;\n  return consoleProxyFetchLog({ url, method: 'GET', allowInsecure: true });\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { PipelineModel, PipelineResourceModel } from '../../../models';\nimport {\n  PipelineKind,\n  PipelineRunKind,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  PipelineTask,\n  TektonParam,\n  TektonResource,\n} from '../../../types';\nimport { getSafeTaskResourceKind } from '../../../utils/pipeline-augment';\nimport PipelineResourceRef from '../../shared/common/PipelineResourceRef';\nimport { ResourceModelLink } from '../resource-overview/DynamicResourceLinkList';\n\nexport const removeEmptyDefaultFromPipelineParams = (parameters: TektonParam[]): TektonParam[] =>\n  _.map(\n    parameters,\n    (parameter) =>\n      _.omit(parameter, _.isEmpty(parameter.default) ? ['default'] : []) as TektonParam,\n  );\n\nexport const sanitizePipelineParams = (parameters: TektonParam[]): TektonParam[] => {\n  const pipelineWithNoEmptyDefaultParams = removeEmptyDefaultFromPipelineParams(parameters);\n  return pipelineWithNoEmptyDefaultParams.length > 0\n    ? pipelineWithNoEmptyDefaultParams.map((parameter) => {\n        if (parameter?.type === 'array' && typeof parameter?.default === 'string') {\n          return {\n            ...parameter,\n            default: parameter.default.split(',').map((param) => param.trim()),\n          };\n        }\n        return parameter;\n      })\n    : [];\n};\n\ntype PipelineTaskLinks = {\n  taskLinks: ResourceModelLink[];\n  finallyTaskLinks: ResourceModelLink[];\n};\n\nexport const getPipelineTaskLinks = (pipeline: PipelineKind): PipelineTaskLinks => {\n  const toResourceLinkData = (tasks: PipelineTask[]): ResourceModelLink[] => {\n    if (!tasks) return [];\n    return tasks?.map((task) =>\n      task.taskRef\n        ? task.taskRef.kind === 'ClusterTask' || task.taskRef.kind === 'Task'\n          ? {\n              resourceKind: getSafeTaskResourceKind(task.taskRef.kind),\n              name: task.taskRef.name,\n              qualifier: task.name,\n            }\n          : {\n              resourceKind: task.taskRef?.kind,\n              name: i18next.t('pipelines-plugin~Custom Task'),\n              qualifier: task.name,\n              disableLink: true,\n            }\n        : {\n            resourceKind: 'EmbeddedTask',\n            name: i18next.t('pipelines-plugin~Embedded task'),\n            qualifier: task.name,\n            disableLink: true,\n          },\n    );\n  };\n  return {\n    taskLinks: toResourceLinkData(pipeline.spec.tasks),\n    finallyTaskLinks: toResourceLinkData(pipeline.spec.finally),\n  };\n};\n\nconst isResourceRef = (resource: PipelineRunResource): resource is PipelineRunReferenceResource =>\n  !!(resource as PipelineRunReferenceResource).resourceRef;\n\nexport const getPipelineResourceLinks = (\n  definitionResources: TektonResource[] = [],\n  runResources: PipelineRunResource[],\n): ResourceModelLink[] => {\n  return runResources?.map(\n    (resource): ResourceModelLink => {\n      const definitionResource = definitionResources.find(({ name }) => name === resource.name);\n      const qualifier = definitionResource ? definitionResource.type : undefined;\n\n      if (isResourceRef(resource)) {\n        return {\n          resourceKind: PipelineResourceModel.kind,\n          name: resource.resourceRef.name,\n          qualifier,\n        };\n      }\n\n      return {\n        resourceKind: 'EmbeddedPipelineResource',\n        name: i18next.t('pipelines-plugin~Embedded PipelineResource'),\n        qualifier,\n      };\n    },\n  );\n};\n\nexport const convertBackingPipelineToPipelineResourceRefProps = (\n  pipelineRun: PipelineRunKind,\n): React.ComponentProps<typeof PipelineResourceRef> => {\n  if (pipelineRun.spec.pipelineRef) {\n    return {\n      resourceKind: PipelineModel.kind,\n      resourceName: pipelineRun.spec.pipelineRef.name,\n      namespace: pipelineRun.metadata.namespace,\n    };\n  }\n\n  return {\n    resourceKind: 'EmbeddedPipeLine', // intentional capitalization for EPL\n    resourceName: i18next.t('pipelines-plugin~Embedded Pipeline'),\n  };\n};\n","import * as React from 'react';\nimport differenceBy from 'lodash-es/differenceBy';\nimport uniqBy from 'lodash-es/uniqBy';\nimport { Selector } from '@console/dynamic-plugin-sdk/src';\nimport {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n} from '@console/dynamic-plugin-sdk/src/extensions/console-types';\nimport { useDeepCompareMemoize } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks/useDeepCompareMemoize';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks/useK8sWatchResource';\nimport {\n  PipelineRunGroupVersionKind,\n  PipelineRunKind,\n  TaskRunGroupVersionKind,\n  TaskRunKind,\n} from '../../../types';\nimport { EQ } from '../utils/tekton-results';\nimport { GetNextPage, useTRPipelineRuns, useTRTaskRuns } from './useTektonResults';\n\nconst useRuns = <Kind extends K8sResourceCommon>(\n  groupVersionKind: K8sGroupVersionKind,\n  namespace: string,\n  options?: {\n    selector?: Selector;\n    limit?: number;\n    name?: string;\n  },\n  cacheKey?: string,\n): [Kind[], boolean, unknown, GetNextPage] => {\n  const etcdRunsRef = React.useRef<Kind[]>([]);\n  const optionsMemo = useDeepCompareMemoize(options);\n  const isList = !optionsMemo?.name;\n  const limit = optionsMemo?.limit;\n  // do not include the limit when querying etcd because result order is not sorted\n  const watchOptions = React.useMemo(() => {\n    // reset cached runs as the options have changed\n    etcdRunsRef.current = [];\n    return {\n      groupVersionKind,\n      namespace: namespace || undefined,\n      isList,\n      selector: optionsMemo?.selector,\n      name: optionsMemo?.name,\n    };\n  }, [groupVersionKind, namespace, optionsMemo, isList]);\n\n  const [resources, loaded, error] = useK8sWatchResource(watchOptions);\n\n  // if a pipeline run was removed from etcd, we want to still include it in the return value without re-querying tekton-results\n  const etcdRuns = React.useMemo(() => {\n    if (!loaded || error) {\n      return [];\n    }\n    const resourcesArray = (isList ? resources : [resources]) as Kind[];\n\n    return resourcesArray;\n  }, [isList, resources, loaded, error]);\n\n  const runs = React.useMemo(() => {\n    if (!etcdRuns) {\n      return etcdRuns;\n    }\n    let value = etcdRunsRef.current\n      ? [\n          ...etcdRuns,\n          // identify the runs that were removed\n          ...differenceBy(etcdRunsRef.current, etcdRuns, (plr) => plr.metadata.name),\n        ]\n      : [...etcdRuns];\n    value.sort((a, b) => b.metadata.creationTimestamp.localeCompare(a.metadata.creationTimestamp));\n    if (limit && limit < value.length) {\n      value = value.slice(0, limit);\n    }\n    return value;\n  }, [etcdRuns, limit]);\n\n  // cache the last set to identify removed runs\n  etcdRunsRef.current = runs;\n\n  // Query tekton results if there's no limit or we received less items from etcd than the current limit\n  const queryTr =\n    !limit || (namespace && ((runs && loaded && optionsMemo.limit > runs.length) || error));\n\n  const trOptions: typeof optionsMemo = React.useMemo(() => {\n    if (optionsMemo?.name) {\n      const { name, ...rest } = optionsMemo;\n      return {\n        ...rest,\n        filter: EQ('data.metadata.name', name),\n      };\n    }\n    return optionsMemo;\n  }, [optionsMemo]);\n\n  // tekton-results includes items in etcd, therefore options must use the same limit\n  // these duplicates will later be de-duped\n  const [trResources, trLoaded, trError, trGetNextPage] = (groupVersionKind ===\n    PipelineRunGroupVersionKind\n    ? useTRPipelineRuns\n    : useTRTaskRuns)(queryTr ? namespace : null, trOptions, cacheKey) as [\n    [],\n    boolean,\n    unknown,\n    GetNextPage,\n  ];\n\n  return React.useMemo(() => {\n    const rResources =\n      runs && trResources\n        ? uniqBy([...runs, ...trResources], (r) => r.metadata.uid)\n        : runs || trResources;\n    return [\n      rResources,\n      !!rResources?.[0] || (loaded && trLoaded),\n      namespace\n        ? queryTr\n          ? isList\n            ? trError || error\n            : // when searching by name, return an error if we have no result\n              trError || (trLoaded && !trResources.length ? error : undefined)\n          : error\n        : undefined,\n      trGetNextPage,\n    ];\n  }, [\n    runs,\n    trResources,\n    trLoaded,\n    loaded,\n    namespace,\n    queryTr,\n    isList,\n    trError,\n    error,\n    trGetNextPage,\n  ]);\n};\n\nexport const usePipelineRuns = (\n  namespace: string,\n  options?: {\n    selector?: Selector;\n    limit?: number;\n  },\n): [PipelineRunKind[], boolean, unknown, GetNextPage] =>\n  useRuns<PipelineRunKind>(PipelineRunGroupVersionKind, namespace, options);\n\nexport const useTaskRuns = (\n  namespace: string,\n  options?: {\n    selector?: Selector;\n    limit?: number;\n  },\n  cacheKey?: string,\n): [TaskRunKind[], boolean, unknown, GetNextPage] =>\n  useRuns<TaskRunKind>(TaskRunGroupVersionKind, namespace, options, cacheKey);\n\nexport const usePipelineRun = (\n  namespace: string,\n  pipelineRunName: string,\n): [PipelineRunKind, boolean, string] => {\n  const result = (usePipelineRuns(\n    namespace,\n    React.useMemo(\n      () => ({\n        name: pipelineRunName,\n        limit: 1,\n      }),\n      [pipelineRunName],\n    ),\n  ) as unknown) as [PipelineRunKind[], boolean, string];\n\n  return React.useMemo(() => [result[0]?.[0], result[1], result[0]?.[0] ? undefined : result[2]], [\n    result,\n  ]);\n};\n\nexport const useTaskRun = (\n  namespace: string,\n  taskRunName: string,\n): [TaskRunKind, boolean, string] => {\n  const result = (useTaskRuns(\n    namespace,\n    React.useMemo(\n      () => ({\n        name: taskRunName,\n        limit: 1,\n      }),\n      [taskRunName],\n    ),\n  ) as unknown) as [TaskRunKind[], boolean, string];\n\n  return React.useMemo(() => [result[0]?.[0], result[1], result[0]?.[0] ? undefined : result[2]], [\n    result,\n  ]);\n};\n","import * as React from 'react';\nimport { uniqBy } from 'lodash';\nimport { K8sResourceCommon, Selector } from '@console/dynamic-plugin-sdk/src';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER } from '../../pipelines/const';\nimport { RepositoryLabels, RepositoryFields } from '../../repository/consts';\nimport {\n  getPipelineRuns,\n  TektonResultsOptions,\n  getTaskRuns,\n  RecordsList,\n  getTaskRunLog,\n} from '../utils/tekton-results';\n\nexport type GetNextPage = () => void | undefined;\n\nconst useTRRuns = <Kind extends K8sResourceCommon>(\n  getRuns: (\n    namespace: string,\n    options?: TektonResultsOptions,\n    nextPageToken?: string,\n    cacheKey?: string,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER?: boolean,\n  ) => Promise<[Kind[], RecordsList, boolean?]>,\n  namespace: string,\n  options?: TektonResultsOptions,\n  cacheKey?: string,\n): [Kind[], boolean, unknown, GetNextPage] => {\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n  const [nextPageToken, setNextPageToken] = React.useState<string>(null);\n  const [localCacheKey, setLocalCacheKey] = React.useState(cacheKey);\n\n  if (cacheKey !== localCacheKey) {\n    // force update local cache key\n    setLocalCacheKey(cacheKey);\n  }\n\n  const [result, setResult] = React.useState<[Kind[], boolean, unknown, GetNextPage]>([\n    [],\n    false,\n    undefined,\n    undefined,\n  ]);\n\n  // reset token if namespace or options change\n  React.useEffect(() => {\n    setNextPageToken(null);\n  }, [namespace, options, cacheKey]);\n\n  // eslint-disable-next-line consistent-return\n  React.useEffect(() => {\n    let disposed = false;\n    (async () => {\n      try {\n        const tkPipelineRuns = await getRuns(\n          namespace,\n          options,\n          nextPageToken,\n          localCacheKey,\n          IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n        );\n        if (!disposed) {\n          const token = tkPipelineRuns[1].nextPageToken;\n          const callInflight = !!tkPipelineRuns?.[2];\n          const loaded = !callInflight;\n          if (!callInflight) {\n            setResult((cur) => [\n              nextPageToken ? [...cur[0], ...tkPipelineRuns[0]] : tkPipelineRuns[0],\n              loaded,\n              undefined,\n              token\n                ? (() => {\n                    // ensure we can only call this once\n                    let executed = false;\n                    return () => {\n                      if (!disposed && !executed) {\n                        executed = true;\n                        // trigger the update\n                        setNextPageToken(token);\n                        return true;\n                      }\n                      return false;\n                    };\n                  })()\n                : undefined,\n            ]);\n          }\n        }\n      } catch (e) {\n        if (!disposed) {\n          if (nextPageToken) {\n            setResult((cur) => [cur[0], cur[1], e, undefined]);\n          } else {\n            setResult([[], false, e, undefined]);\n          }\n        }\n      }\n    })();\n    return () => {\n      disposed = true;\n    };\n  }, [\n    namespace,\n    options,\n    nextPageToken,\n    localCacheKey,\n    getRuns,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  ]);\n  return result;\n};\n\nexport const useTRPipelineRuns = (\n  namespace: string,\n  options?: TektonResultsOptions,\n  cacheKey?: string,\n): [PipelineRunKind[], boolean, unknown, GetNextPage] =>\n  useTRRuns<PipelineRunKind>(getPipelineRuns, namespace, options, cacheKey);\n\nexport const useTRTaskRuns = (\n  namespace: string,\n  options?: TektonResultsOptions,\n  cacheKey?: string,\n): [TaskRunKind[], boolean, unknown, GetNextPage] =>\n  useTRRuns<TaskRunKind>(getTaskRuns, namespace, options, cacheKey);\n\nexport const useGetPipelineRuns = (ns: string, options?: { name: string; kind: string }) => {\n  let selector: Selector;\n\n  if (options?.kind === 'Pipeline') {\n    selector = { matchLabels: { 'tekton.dev/pipeline': options?.name } };\n  }\n  if (options?.kind === 'Repository') {\n    selector = {\n      matchLabels: { [RepositoryLabels[RepositoryFields.REPOSITORY]]: options?.name },\n    };\n  }\n  const [resultPlrs, resultPlrsLoaded, resultPlrsLoadError, getNextPage] = useTRPipelineRuns(\n    ns,\n    options && {\n      selector,\n    },\n  );\n  const [k8sPlrs, k8sPlrsLoaded, k8sPlrsLoadError] = useK8sWatchResource<PipelineRunKind[]>({\n    isList: true,\n    kind: referenceForModel(PipelineRunModel),\n    namespace: ns,\n    ...(options ? { selector } : {}),\n  });\n  const mergedPlrs =\n    (resultPlrsLoaded || k8sPlrsLoaded) && !k8sPlrsLoadError\n      ? uniqBy([...k8sPlrs, ...resultPlrs], (r) => r.metadata.uid)\n      : [];\n  return [\n    mergedPlrs,\n    resultPlrsLoaded || k8sPlrsLoaded,\n    resultPlrsLoadError || k8sPlrsLoadError,\n    getNextPage,\n  ];\n};\n\nexport const useTRTaskRunLog = (\n  namespace: string,\n  taskRunName: string,\n  taskRunPath: string,\n): [string, boolean, unknown] => {\n  const [result, setResult] = React.useState<[string, boolean, unknown]>([null, false, undefined]);\n  React.useEffect(() => {\n    let disposed = false;\n    if (namespace && taskRunName) {\n      (async () => {\n        try {\n          const log = await getTaskRunLog(taskRunPath);\n          if (!disposed) {\n            setResult([log, true, undefined]);\n          }\n        } catch (e) {\n          if (!disposed) {\n            setResult([null, false, e]);\n          }\n        }\n      })();\n    }\n    return () => {\n      disposed = true;\n    };\n  }, [namespace, taskRunName, taskRunPath]);\n  return result;\n};\n","import * as React from 'react';\nimport { CombinedErrorDetails } from './log-snippet-types';\nimport LogSnippetFromPod from './LogSnippetFromPod';\n\ntype LogSnippetBlockProps = {\n  children: (logSnippet: string) => React.ReactNode;\n  logDetails: CombinedErrorDetails;\n  namespace: string;\n};\n\nconst LogSnippetBlock: React.FC<LogSnippetBlockProps> = ({ children, logDetails, namespace }) => {\n  return 'podName' in logDetails ? (\n    <LogSnippetFromPod\n      containerName={logDetails.containerName}\n      namespace={namespace}\n      podName={logDetails.podName}\n      title={logDetails.title}\n    >\n      {children}\n    </LogSnippetFromPod>\n  ) : (\n    <>{children(logDetails.staticMessage)}</>\n  );\n};\n\nexport default LogSnippetBlock;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineKind, PipelineRunKind, TaskRunKind } from '../../../../types';\nimport { dagreViewerComponentFactory } from '../../pipeline-topology/factories';\nimport PipelineTopologyGraph from '../../pipeline-topology/PipelineTopologyGraph';\nimport { getGraphDataModel } from '../../pipeline-topology/utils';\n\nimport './PipelineVisualization.scss';\n\ninterface PipelineTopologyVisualizationProps {\n  pipeline: PipelineKind;\n  pipelineRun?: PipelineRunKind;\n  taskRuns?: TaskRunKind[];\n}\n\nconst PipelineVisualization: React.FC<PipelineTopologyVisualizationProps> = ({\n  pipeline,\n  pipelineRun,\n  taskRuns,\n}) => {\n  const { t } = useTranslation();\n  let content: React.ReactElement;\n  const model = getGraphDataModel(pipeline, pipelineRun, taskRuns);\n\n  if (!model || (model.nodes.length === 0 && model.edges.length === 0)) {\n    // Nothing to render\n    content = (\n      <Alert\n        variant=\"info\"\n        isInline\n        title={t('pipelines-plugin~This Pipeline has no tasks to visualize.')}\n      />\n    );\n  } else {\n    content = (\n      <PipelineTopologyGraph\n        data-test=\"pipeline-visualization\"\n        componentFactory={dagreViewerComponentFactory}\n        model={model}\n        showControlBar\n      />\n    );\n  }\n\n  return <div className=\"odc-pipeline-visualization\">{content}</div>;\n};\n\nexport default PipelineVisualization;\n","import * as React from 'react';\nimport { ComponentFactory, Model } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport PipelineVisualizationSurface from './PipelineVisualizationSurface';\n\nimport './PipelineTopologyGraph.scss';\n\ntype PipelineTopologyGraphProps = {\n  builder?: boolean;\n  model: Model;\n  componentFactory: ComponentFactory;\n  showControlBar?: boolean;\n};\n\nconst PipelineTopologyGraph: React.FC<PipelineTopologyGraphProps> = ({\n  builder,\n  model,\n  componentFactory,\n  ...props\n}) => {\n  return (\n    <div\n      className={cx('odc-pipeline-topology-graph', { builder })}\n      data-test={props['data-test'] || 'pipeline-topology-graph'}\n    >\n      <PipelineVisualizationSurface\n        model={model}\n        componentFactory={componentFactory}\n        noScrollbar={builder}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PipelineTopologyGraph);\n","import { global_BackgroundColor_200 as globalBackground200 } from '@patternfly/react-tokens/dist/js/global_BackgroundColor_200';\nimport { global_BackgroundColor_dark_100 as darkEditorBackground } from '@patternfly/react-tokens/dist/js/global_BackgroundColor_dark_100';\nimport { global_BackgroundColor_dark_200 as globalBackgroundDark200 } from '@patternfly/react-tokens/dist/js/global_BackgroundColor_dark_200';\nimport { global_BackgroundColor_light_100 as lightEditorBackground } from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport { global_Color_dark_100 as globalColorDark100 } from '@patternfly/react-tokens/dist/js/global_Color_dark_100';\nimport { global_Color_light_100 as globalColorLight100 } from '@patternfly/react-tokens/dist/js/global_Color_light_100';\n\n(window as any).monaco.editor.defineTheme('console-light', {\n  base: 'vs',\n  inherit: true,\n  colors: {\n    'editor.background': lightEditorBackground.value,\n    'editorGutter.background': '#f5f5f5', // black-150\n    'editorLineNumber.activeForeground': globalColorDark100.value,\n    'editorLineNumber.foreground': globalBackgroundDark200.value,\n  },\n  rules: [\n    { token: 'number', foreground: '486b00' }, // light-green-600\n    { token: 'type', foreground: '795600' }, // gold-500\n    { token: 'string', foreground: '004080' }, // blue-600\n    { token: 'keyword', foreground: '40199a' }, // purple-600\n  ],\n});\n\n(window as any).monaco.editor.defineTheme('console-dark', {\n  base: 'vs-dark',\n  inherit: true,\n  colors: {\n    'editor.background': darkEditorBackground.value,\n    'editorGutter.background': '#292e34', // no pf token defined\n    'editorLineNumber.activeForeground': globalColorLight100.value,\n    'editorLineNumber.foreground': globalBackground200.value,\n  },\n  rules: [\n    { token: 'number', foreground: 'ace12e' }, // light-green-600\n    { token: 'type', foreground: '73bcf7' }, // blue-200\n    { token: 'string', foreground: 'f0ab00' }, // gold-400\n    { token: 'keyword', foreground: 'cbc1ff' }, // purple-100\n  ],\n});\n","import * as React from 'react';\nimport { Formik, FormikHelpers } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { createModalLauncher, ModalComponentProps } from '@console/internal/components/factory';\nimport { PipelineKind } from '../../../../types';\nimport ModalStructure from '../common/ModalStructure';\nimport { removeTrigger } from './remove-utils';\nimport RemoveTriggerForm from './RemoveTriggerForm';\nimport { RemoveTriggerFormValues } from './types';\nimport { removeTriggerSchema } from './validation-utils';\n\ntype RemoveTriggerModalProps = ModalComponentProps & {\n  pipeline: PipelineKind;\n};\n\nconst RemoveTriggerModal: React.FC<RemoveTriggerModalProps> = ({ pipeline, close }) => {\n  const { t } = useTranslation();\n  const initialValues: RemoveTriggerFormValues = {\n    selectedTrigger: null,\n  };\n\n  const handleSubmit = (\n    values: RemoveTriggerFormValues,\n    actions: FormikHelpers<RemoveTriggerFormValues>,\n  ) => {\n    return removeTrigger(values, pipeline)\n      .then(() => {\n        close();\n      })\n      .catch((e) => {\n        actions.setStatus({ submitError: e.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={removeTriggerSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          {...formikProps}\n          submitBtnText={t('pipelines-plugin~Remove')}\n          submitDanger\n          title={t('pipelines-plugin~Remove Trigger')}\n          close={close}\n        >\n          <RemoveTriggerForm pipeline={pipeline} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(RemoveTriggerModal);\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { errorModal } from '@console/internal/components/modals';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { useUserAnnotationForManualStart } from '../../../pipelineruns/triggered-by';\nimport { usePipelinePVC } from '../../hooks';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { startPipelineSchema } from '../common/validation-utils';\nimport StartPipelineForm from './StartPipelineForm';\nimport { submitStartPipeline } from './submit-utils';\nimport { StartPipelineFormValues } from './types';\n\nexport interface StartPipelineModalProps {\n  pipeline: PipelineKind;\n  onSubmit?: (pipelineRun: PipelineRunKind) => void;\n}\nconst StartPipelineModal: React.FC<StartPipelineModalProps & ModalComponentProps> = ({\n  pipeline,\n  close,\n  onSubmit,\n}) => {\n  const { t } = useTranslation();\n  const userStartedAnnotation = useUserAnnotationForManualStart();\n  const [pipelinePVC, pipelinePVCLoaded] = usePipelinePVC(\n    pipeline.metadata?.name,\n    pipeline.metadata?.namespace,\n  );\n\n  if (!pipelinePVCLoaded) {\n    return <LoadingBox />;\n  }\n\n  const initialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline, false, pipelinePVC?.metadata?.name),\n    secretOpen: false,\n  };\n\n  const handleSubmit = (values: StartPipelineFormValues, actions) => {\n    return submitStartPipeline(values, pipeline, null, userStartedAnnotation)\n      .then((res) => {\n        onSubmit && onSubmit(res);\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n        errorModal({ error: err.message });\n        close();\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={startPipelineSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          submitBtnText={t('pipelines-plugin~Start')}\n          title={t('pipelines-plugin~Start Pipeline')}\n          close={close}\n          {...formikProps}\n        >\n          <StartPipelineForm {...formikProps} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(StartPipelineModal);\n","import * as React from 'react';\nimport { KebabAction } from '@console/internal/components/utils';\nimport { useMenuActionsWithUserAnnotation } from './hooks';\nimport { ResourceKebab } from './ResourceKebab';\n\nconst ResourceKebabWithUserLabel: React.FC<React.ComponentProps<typeof ResourceKebab>> = ({\n  actions,\n  ...otherProps\n}) => {\n  const augmentedMenuActions: KebabAction[] = useMenuActionsWithUserAnnotation(actions);\n\n  return <ResourceKebab {...otherProps} actions={augmentedMenuActions} />;\n};\n\nexport default ResourceKebabWithUserLabel;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FieldArray, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { InputField, TextColumnField } from '@console/shared';\nimport { paramIsRequired } from '../../../../utils/common';\nimport AutoCompletePopover from '../../../shared/common/auto-complete/AutoCompletePopover';\nimport { CommonPipelineModalFormikValues, ModalParameter } from './types';\n\ntype ParametersSectionProps = {\n  autoCompleteValues?: string[];\n};\n\nconst PipelineParameterSection: React.FC<ParametersSectionProps> = ({ autoCompleteValues }) => {\n  const { t } = useTranslation();\n\n  const {\n    setFieldValue,\n    values: { parameters },\n  } = useFormikContext<CommonPipelineModalFormikValues>();\n\n  return (\n    <FieldArray\n      name=\"parameters\"\n      key=\"parameters-row\"\n      render={() =>\n        parameters.length > 0 && (\n          <FormSection title={t('pipelines-plugin~Parameters')} fullWidth>\n            {parameters.map((parameter: ModalParameter, index) => {\n              const name = `parameters.${index}.value`;\n              const isRequired = paramIsRequired(parameter);\n\n              const input = (ref?) => (\n                <InputField\n                  ref={ref}\n                  name={name}\n                  type={TextInputTypes.text}\n                  label={parameter.name}\n                  helpText={parameter.description}\n                  required={isRequired}\n                  autoComplete=\"off\"\n                />\n              );\n              return parameter.type === 'array' ? (\n                <TextColumnField\n                  name={name}\n                  label={parameter.name}\n                  helpText={parameter.description}\n                  required={isRequired}\n                  addLabel={`Add ${parameter.name}`}\n                  data-test={`${parameter.name}-text-column-field`}\n                >\n                  {({ name: arrayName, ...additionalProps }) =>\n                    autoCompleteValues ? (\n                      <AutoCompletePopover\n                        autoCompleteValues={autoCompleteValues}\n                        onAutoComplete={(value: string) => setFieldValue(name, value)}\n                      >\n                        {(callbackRef) => (\n                          <InputField\n                            ref={callbackRef}\n                            name={arrayName}\n                            {...additionalProps}\n                            autoComplete=\"off\"\n                          />\n                        )}\n                      </AutoCompletePopover>\n                    ) : (\n                      <InputField name={arrayName} {...additionalProps} autoComplete=\"off\" />\n                    )\n                  }\n                </TextColumnField>\n              ) : (\n                <React.Fragment key={parameter.name}>\n                  {autoCompleteValues ? (\n                    <AutoCompletePopover\n                      autoCompleteValues={autoCompleteValues}\n                      onAutoComplete={(value: string) => setFieldValue(name, value)}\n                    >\n                      {(callbackRef) => input(callbackRef)}\n                    </AutoCompletePopover>\n                  ) : (\n                    input()\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </FormSection>\n        )\n      }\n    />\n  );\n};\n\nexport default PipelineParameterSection;\n","import * as _ from 'lodash';\nimport { PipelineTask, TektonParam, TektonWorkspace } from '../../../../types';\nimport { PipelineBuilderTaskResources } from '../../../pipelines/pipeline-builder/types';\nimport { findTask } from '../../../pipelines/pipeline-builder/utils';\n\nexport const paramToAutoComplete = (param: TektonParam): string => `params.${param.name}`;\n\nexport const workspaceToAutoComplete = (workspace: TektonWorkspace): string =>\n  `workspaces.${workspace.name}.bound`;\n\nexport const taskToStatus = (task: PipelineTask): string => `tasks.${task.name}.status`;\n\nexport const taskToResult = (resources: PipelineBuilderTaskResources) => (\n  task: PipelineTask,\n): string[] | null => {\n  const taskResource = findTask(resources, task);\n  if (!taskResource?.spec.results) return null;\n\n  const {\n    spec: { results },\n  } = taskResource;\n  return results.map((result) => `tasks.${task.name}.results.${result.name}`);\n};\n\nexport const findTasksThatRunAfter = (tasks: PipelineTask[], taskName: string): string[] => {\n  const runAfterTasks = tasks.filter((task) => task.runAfter?.includes(taskName));\n\n  let runAfterNames = runAfterTasks.map((task) => task.name);\n  if (runAfterTasks.some((task) => task.runAfter)) {\n    runAfterNames = [\n      ...runAfterNames,\n      ...runAfterTasks.map((task) => findTasksThatRunAfter(tasks, task.name)).flat(),\n    ];\n  }\n\n  return _.uniq([taskName, ...runAfterNames]);\n};\n\nexport const computeAvailableResultACs = (\n  tasks: PipelineTask[],\n  taskResources: PipelineBuilderTaskResources,\n  taskIndex: number,\n): string[] => {\n  const thisTask: PipelineTask = tasks[taskIndex];\n  const invalidTasks: string[] = thisTask ? findTasksThatRunAfter(tasks, thisTask.name) : [];\n  return tasks\n    .filter((task: PipelineTask) => !invalidTasks.includes(task.name))\n    .map(taskToResult(taskResources))\n    .flat()\n    .filter((v) => !!v);\n};\n\nexport type CursorPosition = [number, number];\nexport const insertIntoValue = (value: string, position: CursorPosition, insertText = '') => {\n  const [startPos, endPos] = position;\n  return `${value.substring(0, startPos)}${insertText}${value.substring(endPos)}`;\n};\n","import * as React from 'react';\nimport { FieldArray, useField } from 'formik';\nimport { capitalize } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport PipelineResourceDropdownField from './PipelineResourceDropdownField';\nimport { PipelineModalFormResource } from './types';\n\ntype ResourceSectionType = {\n  formikIndex: number;\n  resource: PipelineModalFormResource;\n};\ntype ResourceSection = {\n  cluster?: ResourceSectionType[];\n  git?: ResourceSectionType[];\n  image?: ResourceSectionType[];\n  storage?: ResourceSectionType[];\n};\n\nconst reduceToSections = (\n  acc: ResourceSection,\n  resource: PipelineModalFormResource,\n  formikIndex: number,\n) => {\n  const resourceType = resource.data.type;\n\n  if (!resourceType) {\n    return acc;\n  }\n\n  return {\n    ...acc,\n    [resourceType]: [...(acc[resourceType] || []), { formikIndex, resource }],\n  };\n};\n\nconst PipelineResourceSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [{ value: resources }] = useField<PipelineModalFormResource[]>('resources');\n\n  const sections: ResourceSection = resources.reduce(reduceToSections, {} as ResourceSection);\n  const types = Object.keys(sections);\n\n  return (\n    <>\n      {types.map((type) => (\n        <FieldArray\n          name={type}\n          key={type}\n          render={() => {\n            const section = sections[type];\n\n            return (\n              <FormSection\n                title={t('pipelines-plugin~{{type}} resources', { type: capitalize(type) })}\n                fullWidth\n              >\n                {section.map((sectionData: ResourceSectionType) => {\n                  const { formikIndex, resource } = sectionData;\n\n                  return (\n                    <PipelineResourceDropdownField\n                      key={resource.name}\n                      name={`resources.${formikIndex}`}\n                      filterType={type}\n                      label={resource.name}\n                    />\n                  );\n                })}\n              </FormSection>\n            );\n          }}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PipelineResourceSection;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { SecretModel, ConfigMapModel } from '@console/internal/models';\nimport { DropdownField } from '@console/shared';\nimport { VolumeTypes } from '../../const';\nimport MultipleResourceKeySelector from './MultipleResourceKeySelector';\nimport PVCDropdown from './PVCDropdown';\nimport { PipelineModalFormWorkspace } from './types';\nimport VolumeClaimTemplateForm from './VolumeClaimTemplateForm';\nimport './PipelineWorkspacesSection.scss';\n\nconst getVolumeTypeFields = (volumeType: VolumeTypes, index: number) => {\n  switch (volumeType) {\n    case VolumeTypes.Secret: {\n      return (\n        <MultipleResourceKeySelector\n          resourceNameField={`workspaces.${index}.data.secret.secretName`}\n          resourceKeysField={`workspaces.${index}.data.secret.items`}\n          label={i18next.t('pipelines-plugin~Secret')}\n          resourceModel={SecretModel}\n          addString={i18next.t('pipelines-plugin~Add item')}\n          required\n        />\n      );\n    }\n    case VolumeTypes.ConfigMap: {\n      return (\n        <MultipleResourceKeySelector\n          resourceNameField={`workspaces.${index}.data.configMap.name`}\n          resourceKeysField={`workspaces.${index}.data.configMap.items`}\n          label={i18next.t('pipelines-plugin~Config Map')}\n          resourceModel={ConfigMapModel}\n          addString={i18next.t('pipelines-plugin~Add item')}\n          required\n        />\n      );\n    }\n    case VolumeTypes.EmptyDirectory: {\n      return (\n        <div className=\"odc-PipelineWorkspacesSection__emptydir\">\n          <Alert\n            isInline\n            variant=\"info\"\n            title={i18next.t(\n              \"pipelines-plugin~Empty Directory doesn't support shared data between tasks.\",\n            )}\n          />\n        </div>\n      );\n    }\n    case VolumeTypes.VolumeClaimTemplate: {\n      return (\n        <VolumeClaimTemplateForm\n          name={`workspaces.${index}.data.volumeClaimTemplate`}\n          initialSizeValue=\"1\"\n          initialSizeUnit=\"Gi\"\n        />\n      );\n    }\n    case VolumeTypes.PVC: {\n      return <PVCDropdown name={`workspaces.${index}.data.persistentVolumeClaim.claimName`} />;\n    }\n    default:\n      return null;\n  }\n};\n\nconst PipelineWorkspacesSection: React.FC = () => {\n  const { t } = useTranslation();\n  const { setFieldValue } = useFormikContext<FormikValues>();\n  const [{ value: workspaces }] = useField<PipelineModalFormWorkspace[]>('workspaces');\n\n  const volumeTypeOptions: { [type in VolumeTypes]: string } = {\n    [VolumeTypes.NoWorkspace]: t('pipelines-plugin~No workspace'),\n    [VolumeTypes.EmptyDirectory]: t('pipelines-plugin~Empty Directory'),\n    [VolumeTypes.ConfigMap]: t('pipelines-plugin~Config Map'),\n    [VolumeTypes.Secret]: t('pipelines-plugin~Secret'),\n    [VolumeTypes.PVC]: t('pipelines-plugin~PersistentVolumeClaim'),\n    [VolumeTypes.VolumeClaimTemplate]: t('pipelines-plugin~VolumeClaimTemplate'),\n  };\n\n  return (\n    workspaces.length > 0 && (\n      <FormSection title={t('pipelines-plugin~Workspaces')} fullWidth>\n        {workspaces.map((workspace, index) => {\n          return (\n            <div className=\"form-group\" key={workspace.name}>\n              <DropdownField\n                name={`workspaces.${index}.type`}\n                label={workspace.name}\n                items={\n                  workspace.optional\n                    ? volumeTypeOptions\n                    : _.omit(volumeTypeOptions, VolumeTypes.NoWorkspace)\n                }\n                onChange={(type) =>\n                  setFieldValue(\n                    `workspaces.${index}.data`,\n                    type === VolumeTypes.EmptyDirectory ? { emptyDir: {} } : {},\n                    // Validation is automatically done by DropdownField useFormikValidationFix\n                    false,\n                  )\n                }\n                fullWidth\n                required={!workspace.optional}\n                helpText={workspace.description}\n              />\n              {getVolumeTypeFields(workspace.type, index)}\n            </div>\n          );\n        })}\n      </FormSection>\n    )\n  );\n};\n\nexport default PipelineWorkspacesSection;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { PipelineKind } from '../../../../types';\nimport { usePipelinePVC } from '../../hooks';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { addTriggerSchema } from '../common/validation-utils';\nimport AddTriggerForm from './AddTriggerForm';\nimport { TRIGGER_BINDING_EMPTY } from './const';\nimport { submitTrigger } from './submit-utils';\nimport { AddTriggerFormValues } from './types';\n\ntype AddTriggerModalProps = ModalComponentProps & {\n  pipeline: PipelineKind;\n};\n\nconst AddTriggerModal: React.FC<AddTriggerModalProps> = ({ pipeline, close }) => {\n  const { t } = useTranslation();\n  const [pipelinePVC, pipelinePVCLoaded] = usePipelinePVC(\n    pipeline.metadata?.name,\n    pipeline.metadata?.namespace,\n  );\n\n  if (!pipelinePVCLoaded) {\n    return <LoadingBox />;\n  }\n  const initialValues: AddTriggerFormValues = {\n    ...convertPipelineToModalData(pipeline, true, pipelinePVC?.metadata?.name),\n    triggerBinding: {\n      name: TRIGGER_BINDING_EMPTY,\n      resource: null,\n    },\n  };\n\n  const handleSubmit = (values: AddTriggerFormValues, actions) => {\n    return submitTrigger(pipeline, values)\n      .then(() => {\n        close();\n      })\n      .catch((error) => {\n        actions.setStatus({\n          submitError: error?.message || t('pipelines-plugin~There was an unknown error'),\n        });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={addTriggerSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          submitBtnText={t('pipelines-plugin~Add')}\n          title={t('pipelines-plugin~Add Trigger')}\n          close={close}\n          {...formikProps}\n        >\n          <AddTriggerForm {...formikProps} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(AddTriggerModal);\n","import * as React from 'react';\nimport { TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { RowFilter } from '@console/internal/components/filter-toolbar';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../models';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatusFilter,\n} from '../../../utils/pipeline-filter-reducer';\nimport { ListFilterId, ListFilterLabels } from '../../../utils/pipeline-utils';\nimport { ListPage } from '../../ListPage';\nimport { usePipelineRuns } from '../../pipelineruns/hooks/usePipelineRuns';\nimport PipelineRunsList from '../../pipelineruns/list-page/PipelineRunList';\nimport { PipelineDetailsTabProps } from './types';\n\nexport const runFilters = (t: TFunction): RowFilter[] => {\n  return [\n    {\n      filterGroupName: t('pipelines-plugin~Status'),\n      type: 'pipelinerun-status',\n      reducer: pipelineRunFilterReducer,\n      items: [\n        { id: ListFilterId.Succeeded, title: ListFilterLabels[ListFilterId.Succeeded] },\n        { id: ListFilterId.Running, title: ListFilterLabels[ListFilterId.Running] },\n        { id: ListFilterId.Failed, title: ListFilterLabels[ListFilterId.Failed] },\n        { id: ListFilterId.Cancelled, title: ListFilterLabels[ListFilterId.Cancelled] },\n      ],\n      filter: pipelineRunStatusFilter,\n    },\n  ];\n};\n\nconst PipelineRuns: React.FC<PipelineDetailsTabProps> = (props) => {\n  const { t } = useTranslation();\n  const { obj } = props;\n  const selector = React.useMemo(() => {\n    return {\n      matchLabels: { 'tekton.dev/pipeline': obj.metadata.name },\n    };\n  }, [obj.metadata.name]);\n  const [pipelineRuns, pipelineRunsLoaded, pipelineRunsLoadError] = usePipelineRuns(\n    obj.metadata.namespace,\n    {\n      selector,\n    },\n  );\n  const resources = React.useMemo(\n    () => ({\n      [referenceForModel(PipelineRunModel)]: {\n        data: pipelineRuns,\n        kind: referenceForModel(PipelineRunModel),\n        loadError: pipelineRunsLoadError,\n        loaded: pipelineRunsLoaded,\n      },\n    }),\n    [pipelineRunsLoadError, pipelineRunsLoaded, pipelineRuns],\n  );\n  return (\n    <ListPage\n      showTitle={false}\n      canCreate={false}\n      kind={referenceForModel(PipelineRunModel)}\n      namespace={obj.metadata.namespace}\n      selector={{\n        matchLabels: { 'tekton.dev/pipeline': obj.metadata.name },\n      }}\n      ListComponent={PipelineRunsList}\n      rowFilters={runFilters(t)}\n      data={resources}\n    />\n  );\n};\n\nexport default PipelineRuns;\n","import i18next from 'i18next';\nimport {\n  Condition,\n  PipelineRunKind,\n  PLRTaskRunData,\n  PLRTaskRunStep,\n  TaskRunKind,\n} from '../../../types';\nimport { pipelineRunStatus } from '../../../utils/pipeline-filter-reducer';\nimport { CombinedErrorDetails } from './log-snippet-types';\nimport { taskRunSnippetMessage } from './log-snippet-utils';\n\nexport const getPLRLogSnippet = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): CombinedErrorDetails => {\n  if (!pipelineRun?.status) {\n    // Lack information to pull from the Pipeline Run\n    return null;\n  }\n  if (pipelineRunStatus(pipelineRun) !== 'Failed') {\n    // Not in a failed state, no need to get the log snippet\n    return null;\n  }\n\n  const succeededCondition = pipelineRun.status.conditions?.find(\n    (condition: Condition) => condition.type === 'Succeeded',\n  );\n\n  if (succeededCondition?.status !== 'False') {\n    // Not in error / lack information\n    return null;\n  }\n\n  const tRuns: PLRTaskRunData[] = Object.values(taskRuns || pipelineRun.status.taskRuns || {});\n  const failedTaskRuns = tRuns.filter((taskRun) =>\n    taskRun?.status?.conditions?.find(\n      (condition) => condition.type === 'Succeeded' && condition.status === 'False',\n    ),\n  );\n  const isKnownReason = (reason: string): boolean => {\n    // known reasons https://tekton.dev/vault/pipelines-v0.21.0/pipelineruns/#monitoring-execution-status\n    return ['StoppedRunFinally', 'CancelledRunFinally', 'PipelineRunTimeout'].includes(reason);\n  };\n\n  // We're intentionally looking at the first failure because we have to start somewhere - they have the YAML still\n  const failedTaskRun = failedTaskRuns[0];\n\n  if (!failedTaskRun || isKnownReason(succeededCondition?.reason)) {\n    // No specific task run failure information, just print pipeline run status\n    return {\n      staticMessage:\n        succeededCondition.message || i18next.t('pipelines-plugin~Unknown failure condition'),\n      title: i18next.t('pipelines-plugin~Failure - check logs for details.'),\n    };\n  }\n\n  const containerName = failedTaskRun.status.steps?.find(\n    (step: PLRTaskRunStep) => step.terminated?.exitCode !== 0,\n  )?.container;\n\n  return taskRunSnippetMessage(failedTaskRun.pipelineTaskName, failedTaskRun.status, containerName);\n};\n","import * as React from 'react';\nimport { observer, Node, NodeModel, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport {\n  BUILDER_NODE_ADD_RADIUS,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  FINALLY_ADD_LINK_TEXT_HEIGHT,\n  BUILDER_NODE_DECORATOR_RADIUS,\n  FINALLY_ADD_LINK_SIZE,\n  WHEN_EXPRESSION_SPACING,\n} from './const';\nimport { integralShapePath, straightPath } from './draw-utils';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport LoadingTask from './LoadingTask';\nimport PlusNodeDecorator from './PlusNodeDecorator';\nimport TaskList from './TaskList';\nimport { BuilderFinallyNodeModel } from './types';\n\nimport './BuilderFinallyNode.scss';\n\ntype BuilderFinallyNodeProps = {\n  element: Node<NodeModel, BuilderFinallyNodeModel>;\n};\n\nconst BuilderFinallyNode: React.FC<BuilderFinallyNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const { width, height } = element.getBounds();\n  const { task, namespace } = element.getData();\n\n  const {\n    addNewFinallyListNode,\n    finallyTasks = [],\n    finallyListTasks = [],\n    finallyLoadingTasks = [],\n    finallyInvalidListTasks = [],\n    onTaskSearch = () => {},\n  } = task;\n  const allTasksLength =\n    finallyTasks.length +\n    finallyListTasks.length +\n    finallyLoadingTasks.length +\n    finallyInvalidListTasks.length;\n  const nodeCenter = NODE_HEIGHT + NODE_HEIGHT / 2;\n  const leftPadding = FINALLY_NODE_PADDING + WHEN_EXPRESSION_SPACING;\n  const verticalHeight = NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING;\n  const finallyTaskLinkX =\n    FINALLY_NODE_PADDING +\n    FINALLY_NODE_PADDING / 2 +\n    (allTasksLength === 0 ? 0 : WHEN_EXPRESSION_SPACING);\n\n  const IntegralShape = ({ taskIndex }: { taskIndex: number }) => (\n    <path\n      className=\"opp-builder-finally-node__task-connectors\"\n      d={\n        nodeCenter + taskIndex * verticalHeight === height / 2\n          ? straightPath(new Point(leftPadding, height / 2), new Point(0, height / 2))\n          : integralShapePath(\n              new Point(0, height / 2),\n              new Point(leftPadding, nodeCenter + taskIndex * verticalHeight),\n            )\n      }\n    />\n  );\n\n  return (\n    <g data-test=\"builder-finally-node\">\n      <rect className=\"opp-builder-finally-node\" width={width} height={height} rx=\"20\" ry=\"20\" />\n\n      {finallyTasks.map((ft, i) => (\n        <g key={ft.name}>\n          <IntegralShape taskIndex={i} />\n          <g\n            data-test={`finally-task-node ${ft.name}`}\n            transform={`translate(${leftPadding}, ${\n              NODE_HEIGHT * i + FINALLY_NODE_VERTICAL_SPACING * i + FINALLY_NODE_PADDING\n            })`}\n            onClick={ft.onTaskSelection}\n          >\n            <PipelineVisualizationTask\n              task={ft}\n              namespace={namespace}\n              disableTooltip\n              selected={ft.selected}\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              isFinallyTask\n            />\n            {ft.error && (\n              <ErrorNodeDecorator\n                x={BUILDER_NODE_ADD_RADIUS / 2}\n                y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n                errorStr={ft.error}\n              />\n            )}\n          </g>\n        </g>\n      ))}\n      {finallyLoadingTasks.map((fld, i) => (\n        <g key={fld.name} data-test={`finally-loading-task-list-node ${fld.name}`}>\n          <IntegralShape taskIndex={i + finallyTasks.length} />\n          <g\n            transform={`translate(${leftPadding},\n          ${\n            NODE_HEIGHT * (i + finallyTasks.length) +\n            FINALLY_NODE_VERTICAL_SPACING * (i + finallyTasks.length) +\n            FINALLY_NODE_PADDING\n          })`}\n          >\n            <LoadingTask width={NODE_WIDTH} height={NODE_HEIGHT} name={fld.name} key={fld.name} />\n          </g>\n        </g>\n      ))}\n      {finallyInvalidListTasks.map((ivl, i) => (\n        <g key={ivl.name} data-test={`finally-invalid-task-list-node ${ivl.name}`}>\n          <IntegralShape taskIndex={i + finallyTasks.length + finallyLoadingTasks.length} />\n          <g\n            transform={`translate(${leftPadding},\n              ${\n                NODE_HEIGHT * (i + finallyTasks.length + finallyLoadingTasks.length) +\n                FINALLY_NODE_VERTICAL_SPACING *\n                  (i + finallyTasks.length + finallyLoadingTasks.length) +\n                FINALLY_NODE_PADDING\n              })`}\n          >\n            <TaskList\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              onRemoveTask={ivl.onRemoveTask}\n              onNewTask={ivl.convertList}\n              onTaskSearch={onTaskSearch}\n              unselectedText={ivl.name}\n            />\n            <ErrorNodeDecorator\n              x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n              y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n              errorStr={t('pipelines-plugin~Task does not exist')}\n            />\n          </g>\n        </g>\n      ))}\n\n      {finallyListTasks.map((flt, i) => (\n        <g key={flt.name} data-test={`finally-task-list-node ${flt.name}`}>\n          <IntegralShape\n            taskIndex={\n              i + finallyTasks.length + finallyLoadingTasks.length + finallyInvalidListTasks.length\n            }\n          />\n          <g\n            transform={`translate(${leftPadding},\n              ${\n                NODE_HEIGHT *\n                  (i +\n                    finallyTasks.length +\n                    finallyLoadingTasks.length +\n                    finallyInvalidListTasks.length) +\n                FINALLY_NODE_VERTICAL_SPACING *\n                  (i +\n                    finallyTasks.length +\n                    finallyLoadingTasks.length +\n                    finallyInvalidListTasks.length) +\n                FINALLY_NODE_PADDING\n              })`}\n          >\n            <TaskList\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              onRemoveTask={flt.onRemoveTask}\n              onNewTask={flt.convertList}\n              onTaskSearch={onTaskSearch}\n            />\n          </g>\n        </g>\n      ))}\n      {\n        <g\n          transform={`translate(${finallyTaskLinkX}, ${\n            allTasksLength * NODE_HEIGHT +\n            (allTasksLength - 1) * FINALLY_NODE_VERTICAL_SPACING +\n            NODE_HEIGHT +\n            FINALLY_ADD_LINK_TEXT_HEIGHT +\n            FINALLY_NODE_PADDING\n          })`}\n          style={{ cursor: 'pointer' }}\n          onClick={addNewFinallyListNode}\n        >\n          <g>\n            <PlusNodeDecorator\n              x={0}\n              y={FINALLY_ADD_LINK_TEXT_HEIGHT - FINALLY_ADD_LINK_SIZE}\n              tooltip={t('pipelines-plugin~Add finally task')}\n            />\n            <text\n              x={FINALLY_ADD_LINK_SIZE}\n              data-test=\"add-finally-node\"\n              className=\"opp-builder-finally-node__text\"\n            >\n              {t('pipelines-plugin~Add finally task')}\n            </text>\n          </g>\n        </g>\n      }\n    </g>\n  );\n};\n\nexport default observer(BuilderFinallyNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ComputedStatus } from '../../../types';\nimport { NODE_HEIGHT } from './const';\nimport { getWhenExpressionDiamondState } from './utils';\n\nimport './WhenExpressionDecorator.scss';\n\ntype WhenExpressionDecoratorProps = {\n  width: number;\n  height: number;\n  leftOffset?: number;\n  stroke?: string;\n  status: ComputedStatus;\n  appendLine?: boolean;\n  enableTooltip?: boolean;\n  isFinallyTask: boolean;\n  isPipelineRun: boolean;\n};\n\nconst WhenExpressionDecorator: React.FC<WhenExpressionDecoratorProps> = ({\n  width,\n  height,\n  enableTooltip,\n  appendLine = false,\n  status,\n  leftOffset = 2,\n  isFinallyTask,\n  isPipelineRun,\n}) => {\n  const nodeRef = React.useRef();\n  const rotation = 45; // 45deg\n  const { tooltipContent, diamondColor } = getWhenExpressionDiamondState(\n    status,\n    isPipelineRun,\n    isFinallyTask,\n  );\n  const diamondHeight =\n    Math.round(width * Math.sin(rotation)) + Math.round(height * Math.cos(rotation));\n  const diamondNode = (\n    <g\n      transform={`translate(-${width * leftOffset}, ${NODE_HEIGHT / 2 - diamondHeight / 2})`}\n      ref={nodeRef}\n    >\n      <rect\n        data-test=\"diamond-decorator\"\n        className=\"opp-when-expression-decorator-diamond\"\n        width={width}\n        height={height}\n        fill={diamondColor}\n        stroke={isPipelineRun ? diamondColor : 'var(--pf-v5-global--BorderColor--light-100)'}\n      />\n      {appendLine && (\n        <line\n          x1={diamondHeight / 2}\n          y1={diamondHeight / 2}\n          x2={width * leftOffset}\n          y2={diamondHeight / 2}\n          stroke=\"var(--pf-v5-global--BorderColor--light-100)\"\n        />\n      )}\n    </g>\n  );\n\n  return enableTooltip ? (\n    <Tooltip\n      triggerRef={nodeRef}\n      position=\"bottom\"\n      enableFlip={false}\n      content={<div data-test=\"when-expression-tooltip\">{tooltipContent}</div>}\n    >\n      {diamondNode}\n    </Tooltip>\n  ) : (\n    diamondNode\n  );\n};\n\nexport default WhenExpressionDecorator;\n","export interface Vertex {\n  name: string;\n  level: number;\n  dependancy: {};\n  dependancyNames: string[];\n  hasOutgoing: boolean;\n  data: any;\n}\n\ntype Vertices = Map<string, Vertex>;\n\nexport class DAG {\n  names: string[];\n\n  vertices: Vertices;\n\n  constructor() {\n    this.names = [];\n    this.vertices = new Map();\n  }\n\n  private visit(\n    vertex: Vertex,\n    fn: (v: Vertex, path: string[]) => void,\n    visited?: any,\n    path?: string[],\n  ) {\n    const { name } = vertex;\n    const vertices = vertex.dependancy;\n    const names = vertex.dependancyNames;\n    const len = names.length;\n\n    if (!visited) {\n      // eslint-disable-next-line no-param-reassign\n      visited = new Map();\n    }\n    if (!path) {\n      // eslint-disable-next-line no-param-reassign\n      path = [];\n    }\n    if (visited.has(name)) {\n      return;\n    }\n    path.push(name);\n    visited.set(name, true);\n    for (let i = 0; i < len; i++) {\n      this.visit(vertices[names[i]], fn, visited, path);\n    }\n    fn(vertex, path);\n    path.pop();\n  }\n\n  private map(name: string, data: any) {\n    const vertex = this.addVertex(name);\n    vertex.data = data;\n  }\n\n  addVertex(name: string) {\n    if (!name) {\n      return null;\n    }\n    if (this.vertices.has(name)) {\n      return this.vertices.get(name);\n    }\n\n    const vertex: Vertex = {\n      name,\n      level: 0,\n      dependancy: {},\n      dependancyNames: [],\n      hasOutgoing: false,\n      data: {},\n    };\n    this.vertices.set(name, vertex);\n    this.names.push(name);\n    return vertex;\n  }\n\n  addEdge(source: string, target: string): void {\n    if (!source || !target || source === target) {\n      return;\n    }\n    const fromNode = this.addVertex(source);\n    const toNode = this.addVertex(target);\n\n    if (toNode.dependancy[source]) {\n      return;\n    }\n\n    const checkCycle = (vertex: Vertex, path: string[]) => {\n      if (vertex.name === target) {\n        throw new Error(`cycle detected: ${path.reverse().join(' --> ')} --> ${target}`);\n      } else {\n        vertex.level = path.length;\n      }\n    };\n    this.visit(fromNode, checkCycle);\n    fromNode.hasOutgoing = true;\n    toNode.dependancy[source] = fromNode;\n    toNode.dependancyNames.push(source);\n  }\n\n  addEdges(name: string, data: any, before: string | string[], after: string | string[]): void {\n    this.map(name, data);\n\n    if (before) {\n      if (typeof before === 'string') {\n        this.addEdge(name, before);\n      } else {\n        before.forEach((b) => this.addEdge(name, b));\n      }\n    }\n    if (after) {\n      if (typeof after === 'string') {\n        this.addEdge(after, name);\n      } else {\n        after.forEach((a) => this.addEdge(a, name));\n      }\n    }\n  }\n\n  topologicalSort(fn: any): void {\n    const visited = new Map();\n    const { vertices } = this;\n    const { names } = this;\n    const len = names.length;\n\n    for (let i = 0; i < len; i++) {\n      const vertex: Vertex = vertices.get(names[i]);\n      if (!vertex.hasOutgoing) {\n        this.visit(vertex, fn, visited);\n      }\n    }\n  }\n\n  printGraph() {\n    const orderedNodes = [];\n    this.topologicalSort((v, t) => {\n      v.data.stage = this.names.length - t.length;\n      orderedNodes.push(v.name);\n    });\n    // eslint-disable-next-line no-console\n    console.log(orderedNodes.join(' --> '));\n    return orderedNodes.join(' --> ');\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { InProgressIcon } from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './InstallingNodeDecorator.scss';\n\ntype InstallingNodeDecoratorProps = {\n  content: string;\n  x: number;\n  y: number;\n};\nconst InstallingNodeDecorator: React.FC<InstallingNodeDecoratorProps> = ({ content, x, y }) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={content}>\n      <g\n        ref={iconRef}\n        className=\"opp-installing-node-decorator\"\n        transform={`translate(${x}, ${y})`}\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <circle\n          cx={0}\n          cy={0}\n          r={BUILDER_NODE_DECORATOR_RADIUS}\n          className=\"opp-installing-node-decorator__circle\"\n        />\n        <g transform=\"translate(-5, -7)\">\n          <InProgressIcon className=\"fa-spin\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default InstallingNodeDecorator;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { TrashIcon } from '@patternfly/react-icons/dist/esm/icons/trash-icon';\nimport { global_palette_black_500 as greyColor } from '@patternfly/react-tokens';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './RemoveNodeDecorator.scss';\n\ntype RemoveNodeDecoratorProps = {\n  content: string;\n  x: number;\n  y: number;\n  removeCallback?: () => void;\n};\n\nconst RemoveNodeDecorator: React.FC<RemoveNodeDecoratorProps> = ({\n  content,\n  x,\n  y,\n  removeCallback = () => {},\n}) => {\n  const trashRef = React.useRef();\n  return (\n    <Tooltip triggerRef={trashRef} content={content}>\n      <g\n        ref={trashRef}\n        className=\"opp-remove-node-decorator\"\n        transform={`translate(${x}, ${y})`}\n        onClick={(e) => {\n          e.stopPropagation();\n          removeCallback();\n        }}\n        data-id=\"delete-task\"\n      >\n        <circle cx={0} cy={0} r={BUILDER_NODE_DECORATOR_RADIUS} fill={greyColor.value} />\n        <g transform=\"translate(-6, -6)\">\n          <TrashIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default RemoveNodeDecorator;\n","import * as React from 'react';\nimport { TooltipPosition } from '@patternfly/react-core';\nimport { Node, NodeModel, observer, useHover } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AddNodeDirection,\n  BUILDER_NODE_ADD_RADIUS,\n  BUILDER_NODE_DECORATOR_RADIUS,\n  BUILDER_NODE_ADD_PADDING,\n} from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport PlusNodeDecorator from './PlusNodeDecorator';\nimport TaskNode from './TaskNode';\nimport { BuilderNodeModelData } from './types';\n\ntype BuilderNodeProps = {\n  element: Node<NodeModel, BuilderNodeModelData>;\n};\n\nconst BuilderNode: React.FC<BuilderNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const [showAdd, hoverRef] = useHover();\n  const { width, height } = element.getBounds();\n  const data = element.getData();\n  const { error, onAddNode, onNodeSelection } = data;\n\n  return (\n    <g className=\"odc-builder-node\" data-test={`builder-node ${data.task.name}`} ref={hoverRef}>\n      <rect\n        x={-BUILDER_NODE_ADD_RADIUS * 2}\n        y={0}\n        width={width + BUILDER_NODE_ADD_RADIUS * 4}\n        height={height + BUILDER_NODE_ADD_RADIUS * 2}\n        fill=\"transparent\"\n      />\n      <g onClick={() => onNodeSelection(data)}>\n        <TaskNode element={element} disableTooltip />\n        {error && (\n          <ErrorNodeDecorator\n            x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n            y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n            errorStr={error}\n          />\n        )}\n      </g>\n      <g style={{ display: showAdd ? 'block' : 'none' }}>\n        <PlusNodeDecorator\n          data-test=\"add-after\"\n          x={width + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING}\n          y={height / 2}\n          tooltip={t('pipelines-plugin~Add a sequential task after this task')}\n          onClick={() => onAddNode(AddNodeDirection.AFTER)}\n        />\n        <PlusNodeDecorator\n          data-test=\"add-before\"\n          x={-BUILDER_NODE_ADD_RADIUS - BUILDER_NODE_ADD_PADDING}\n          y={height / 2}\n          tooltip={t('pipelines-plugin~Add a sequential task before this task')}\n          onClick={() => onAddNode(AddNodeDirection.BEFORE)}\n        />\n        <PlusNodeDecorator\n          data-test=\"add-parallel\"\n          x={width / 2}\n          y={height + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING}\n          tooltip={t('pipelines-plugin~Add a parallel task')}\n          tooltipPosition={TooltipPosition.bottom}\n          onClick={() => onAddNode(AddNodeDirection.PARALLEL)}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport default observer(BuilderNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/question-circle-icon';\nimport { global_palette_black_500 as customTaskColor } from '@patternfly/react-tokens/dist/js/global_palette_black_500';\nimport { observer, Node, NodeModel, useHover, createSvgIdUrl } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  K8sResourceKind,\n  WatchK8sResults,\n  getGroupVersionKindForModel,\n} from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { useK8sWatchResources } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks';\nimport { resourcePathFromModel, truncateMiddle } from '@console/internal/components/utils';\nimport { CustomRunModelV1Beta1 } from '@console/pipelines-plugin/src/models';\nimport { SvgDropShadowFilter } from '@console/topology/src/components/svg';\nimport { TaskKind, CustomRunKind } from '../../../types';\nimport { TaskNodeModelData } from './types';\n\nimport './CustomTaskNode.scss';\n\ntype CustomTaskNodeProps = {\n  element: Node<NodeModel, TaskNodeModelData>;\n  disableTooltip?: boolean;\n};\n\ntype WatchResource = {\n  [key: string]: K8sResourceKind[] | K8sResourceKind;\n};\n\ninterface CustomTaskProps {\n  pipelineRunName?: string;\n  name: string;\n  loaded?: boolean;\n  task?: {\n    data: TaskKind;\n  };\n  namespace: string;\n  disableVisualizationTooltip?: boolean;\n  width: number;\n  height: number;\n  customTask?: K8sResourceKind;\n}\n\nconst FILTER_ID = 'SvgTaskDropShadowFilterId';\n\nconst CustomTaskComponent: React.FC<CustomTaskProps> = ({\n  pipelineRunName,\n  namespace,\n  task,\n  name,\n  disableVisualizationTooltip,\n  width,\n  height,\n  customTask,\n}) => {\n  const { t } = useTranslation();\n  const showStatusState: boolean = !!pipelineRunName;\n  const visualName = name || _.get(task, ['metadata', 'name'], '');\n  const nameRef = React.useRef();\n  const pillRef = React.useRef();\n\n  const path = `${resourcePathFromModel(\n    CustomRunModelV1Beta1,\n    customTask?.metadata?.name,\n    namespace,\n  )}`;\n  const enableLogLink = !!path;\n  const [hover, hoverRef] = useHover();\n  const truncatedVisualName = React.useMemo(\n    () => truncateMiddle(visualName, { length: showStatusState ? 11 : 14, truncateEnd: true }),\n    [visualName, showStatusState],\n  );\n\n  const renderVisualName = (\n    <text\n      ref={nameRef}\n      x={showStatusState ? 30 : width / 2}\n      y={height / 2 + 1}\n      className={cx('odc-pipeline-vis-task-text', {\n        'is-text-center': !pipelineRunName,\n        'is-linked': enableLogLink,\n      })}\n    >\n      {truncatedVisualName}\n    </text>\n  );\n\n  let taskPill = (\n    <g ref={hoverRef}>\n      <SvgDropShadowFilter dy={1} id={FILTER_ID} />\n      <rect\n        filter={hover ? createSvgIdUrl(FILTER_ID) : ''}\n        width={width}\n        height={height}\n        rx={5}\n        className={cx('odc-pipeline-vis-task', {\n          'is-selected': !!pipelineRunName && hover,\n          'is-linked': !!pipelineRunName && enableLogLink,\n        })}\n        style={{\n          stroke: customTaskColor.value,\n        }}\n      />\n      {visualName !== truncatedVisualName && disableVisualizationTooltip ? (\n        <Tooltip triggerRef={nameRef} content={visualName}>\n          {renderVisualName}\n        </Tooltip>\n      ) : (\n        renderVisualName\n      )}\n\n      {showStatusState && (\n        <>\n          <svg\n            width={30}\n            height={30}\n            viewBox=\"-10 -7 30 30\"\n            style={{\n              color: customTaskColor.value,\n            }}\n          >\n            {<QuestionCircleIcon />}\n          </svg>\n        </>\n      )}\n    </g>\n  );\n\n  if (!disableVisualizationTooltip) {\n    taskPill = (\n      <Tooltip\n        triggerRef={pillRef}\n        position=\"bottom\"\n        enableFlip={false}\n        content={t('pipelines-plugin~Custom Task')}\n      >\n        <g ref={pillRef}>{taskPill}</g>\n      </Tooltip>\n    );\n  }\n  return (\n    <g className={cx('odc-pipeline-topology__task-node', { 'is-link': enableLogLink })}>\n      {enableLogLink ? <Link to={path}>{taskPill}</Link> : taskPill}\n    </g>\n  );\n};\n\nconst CustomTaskNode: React.FC<CustomTaskNodeProps> = ({ element, disableTooltip }) => {\n  const { height, width } = element.getBounds();\n\n  const { pipeline, pipelineRun, task } = element.getData();\n\n  const customTaskName = `${pipelineRun?.metadata?.name}-${task?.name}`;\n\n  const watchedResources = {\n    customRun: {\n      groupVersionKind: getGroupVersionKindForModel(CustomRunModelV1Beta1),\n      name: customTaskName,\n      namespace: pipeline?.metadata?.namespace,\n      prop: 'task',\n    },\n  };\n\n  const resourcesData: WatchK8sResults<WatchResource> = useK8sWatchResources<WatchResource>(\n    watchedResources,\n  );\n\n  const taskComponent: JSX.Element = (\n    <CustomTaskComponent\n      pipelineRunName={pipelineRun?.metadata?.name}\n      name={task.name || ''}\n      task={task.taskSpec && { data: { spec: task.taskSpec } }}\n      namespace={pipeline?.metadata?.namespace}\n      disableVisualizationTooltip={disableTooltip}\n      width={width}\n      height={height}\n      customTask={resourcesData.customRun?.data as CustomRunKind}\n    />\n  );\n  return taskComponent;\n};\n\nexport default React.memo(observer(CustomTaskNode));\n","import * as React from 'react';\nimport { observer, Node, NodeModel, Point } from '@patternfly/react-topology';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport {\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  WHEN_EXPRESSION_SPACING,\n} from './const';\nimport { integralShapePath, straightPath } from './draw-utils';\nimport { FinallyNodeModel } from './types';\n\nimport './FinallyNode.scss';\n\ntype FinallyNodeProps = {\n  element: Node<NodeModel, FinallyNodeModel>;\n};\n\nconst FinallyNode: React.FC<FinallyNodeProps> = ({ element }) => {\n  const { task, pipeline, pipelineRun } = element.getData();\n  const { width, height } = element.getBounds();\n  const nodeCenter = NODE_HEIGHT + NODE_HEIGHT / 2;\n  const leftPadding = FINALLY_NODE_PADDING + WHEN_EXPRESSION_SPACING;\n  const verticalHeight = NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING;\n\n  const { finallyTasks = [] } = task;\n  return (\n    <g transform=\"translate(0.5, 0.5)\" data-test=\"finally-node\">\n      <rect\n        className=\"opp-finally-node\"\n        strokeWidth={1}\n        width={width}\n        height={height}\n        rx=\"20\"\n        ry=\"20\"\n      />\n\n      {finallyTasks.map((ft, i) => {\n        return (\n          <g key={ft.name} data-test={`finally-task-node ${ft.name}`}>\n            <path\n              className=\"opp-finally-node__connector\"\n              d={\n                nodeCenter + i * verticalHeight === height / 2\n                  ? straightPath(new Point(leftPadding, height / 2), new Point(0, height / 2))\n                  : integralShapePath(\n                      new Point(0, height / 2),\n                      new Point(leftPadding, nodeCenter + i * verticalHeight),\n                    )\n              }\n            />\n            <g\n              transform={`translate(${leftPadding}, ${\n                NODE_HEIGHT * i + FINALLY_NODE_VERTICAL_SPACING * i + FINALLY_NODE_PADDING\n              })`}\n            >\n              <PipelineVisualizationTask\n                pipelineRunName={pipelineRun?.metadata?.name}\n                task={ft}\n                pipelineRunStatus={pipelineRun && pipelineRunFilterReducer(pipelineRun)}\n                namespace={pipeline?.metadata?.namespace}\n                selected={ft.selected}\n                width={NODE_WIDTH}\n                height={NODE_HEIGHT}\n                isFinallyTask\n                isSkipped={pipelineRun?.status?.skippedTasks?.some((t) => t.name === ft.name)}\n              />\n            </g>\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\nexport default observer(FinallyNode);\n","import * as React from 'react';\nimport { Node, NodeModel, observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport TaskListNode from './TaskListNode';\nimport { TaskListNodeModelData } from './types';\n\ntype InvalidTaskListNodeProps = {\n  element: Node<NodeModel, TaskListNodeModelData>;\n};\n\nconst InvalidTaskListNode: React.FC<InvalidTaskListNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const {\n    task: { name },\n  } = element.getData();\n\n  return (\n    <g>\n      <TaskListNode element={element} unselectedText={name} />\n      <ErrorNodeDecorator\n        x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n        y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n        errorStr={t('pipelines-plugin~Task does not exist')}\n      />\n    </g>\n  );\n};\n\nexport default observer(InvalidTaskListNode);\n","import * as React from 'react';\nimport { observer, Node } from '@patternfly/react-topology';\nimport LoadingTask from './LoadingTask';\n\nconst LoadingNode: React.FC<{ element: Node }> = ({ element }) => {\n  const { height, width } = element.getBounds();\n  const {\n    task: { name },\n  } = element.getData();\n\n  return <LoadingTask {...{ width, height, name }} />;\n};\n\nexport default observer(LoadingNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  DEFAULT_LAYER,\n  DEFAULT_WHEN_OFFSET,\n  Layer,\n  Node,\n  ScaleDetailsLevel,\n  TaskNode,\n  TOP_LAYER,\n  useDetailsLevel,\n  useHover,\n  WhenDecorator,\n  WithContextMenuProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { ClusterTaskModel, PipelineRunModel, TaskModel } from '../../../models';\nimport { ComputedStatus, TaskKind } from '../../../types';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER } from '../const';\nimport {\n  createStepStatus,\n  StepStatus,\n} from '../detail-page-tabs/pipeline-details/pipeline-step-utils';\nimport { PipelineVisualizationStepList } from '../detail-page-tabs/pipeline-details/PipelineVisualizationStepList';\nimport { NodeType } from './const';\nimport { getTooltipContent } from './utils';\n\nimport './PipelineTaskNode.scss';\n\ntype PipelineTaskNodeProps = {\n  element: Node;\n} & WithContextMenuProps &\n  WithSelectionProps;\n\nconst PipelineTaskNode: React.FunctionComponent<PipelineTaskNodeProps> = ({\n  element,\n  onContextMenu,\n  contextMenuOpen,\n  ...rest\n}) => {\n  const data = element.getData();\n  const [hover, hoverRef] = useHover();\n  const taskRef = React.useRef();\n  const detailsLevel = useDetailsLevel();\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n  const isFinallyTask = element.getType() === NodeType.FINALLY_NODE;\n  let resources;\n  if (\n    !IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER &&\n    data.task?.taskRef?.kind === ClusterTaskModel.kind\n  ) {\n    resources = {\n      kind: referenceForModel(ClusterTaskModel),\n      name: data.task.taskRef.name,\n      prop: 'task',\n    };\n  } else if (data.task?.taskRef) {\n    resources = {\n      kind: referenceForModel(TaskModel),\n      name: data.task.taskRef.name,\n      namespace: data.pipeline.metadata.namespace,\n      prop: 'task',\n    };\n  }\n  const [task] = useK8sWatchResource<TaskKind>(resources);\n\n  const computedTask = task && Object.keys(task).length ? task : data.task;\n  const stepList =\n    computedTask?.status?.steps || computedTask?.spec?.steps || computedTask?.taskSpec?.steps || [];\n\n  const pipelineRunStatus = data.pipelineRun && pipelineRunFilterReducer(data.pipelineRun);\n  const isSkipped = !!(\n    computedTask &&\n    data.pipelineRun?.status?.skippedTasks?.some(\n      (skippedTask) => skippedTask.name === data.task.name,\n      (skippedTask) => skippedTask.name === computedTask.name,\n    )\n  );\n\n  const taskStatus = data.task?.status || {\n    duration: '',\n    reason: ComputedStatus.Idle,\n  };\n  if (\n    pipelineRunStatus === ComputedStatus.Failed ||\n    pipelineRunStatus === ComputedStatus.Cancelled\n  ) {\n    if (\n      data.task?.status?.reason === ComputedStatus.Idle ||\n      data.task?.status?.reason === ComputedStatus.Pending\n    ) {\n      taskStatus.reason = ComputedStatus.Cancelled;\n    }\n  }\n  if (isSkipped) {\n    taskStatus.reason = ComputedStatus.Skipped;\n  }\n\n  const stepStatusList: StepStatus[] = stepList.map((step) => createStepStatus(step, taskStatus));\n  const { pipelineRun } = data;\n  const succeededStepsCount = stepStatusList.filter(\n    ({ status }) => status === ComputedStatus.Succeeded,\n  ).length;\n\n  const badge =\n    stepStatusList.length > 0 && data.status\n      ? `${succeededStepsCount}/${stepStatusList.length}`\n      : null;\n\n  const passedData = React.useMemo(() => {\n    const newData = { ...data };\n    Object.keys(newData).forEach((key) => {\n      if (newData[key] === undefined) {\n        delete newData[key];\n      }\n    });\n    return newData;\n  }, [data]);\n\n  const hasTaskIcon = !!(data.taskIconClass || data.taskIcon);\n  const tooltipContent = getTooltipContent(data.task?.status?.reason);\n  const whenDecorator = data.whenStatus ? (\n    <WhenDecorator\n      element={element}\n      status={data.whenStatus}\n      leftOffset={\n        hasTaskIcon\n          ? DEFAULT_WHEN_OFFSET + (element.getBounds().height - 4) * 0.75\n          : DEFAULT_WHEN_OFFSET\n      }\n      toolTip={tooltipContent}\n    />\n  ) : null;\n\n  const { name: plrName, namespace } = pipelineRun?.metadata;\n  const path = plrName\n    ? `${resourcePathFromModel(\n        PipelineRunModel,\n        plrName,\n        namespace,\n      )}/logs?taskName=${element.getLabel()}`\n    : undefined;\n\n  const enableLogLink =\n    data.status !== ComputedStatus.Idle &&\n    data.status !== ComputedStatus.Pending &&\n    data.status !== ComputedStatus.Cancelled &&\n    data.status !== ComputedStatus.Skipped &&\n    !!path;\n\n  const taskNode = (\n    <TaskNode\n      className=\"odc-pipeline-topology__task-node\"\n      element={element}\n      onContextMenu={data.showContextMenu ? onContextMenu : undefined}\n      contextMenuOpen={contextMenuOpen}\n      scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n      hideDetailsAtMedium\n      {...passedData}\n      {...rest}\n      badge={badge}\n      truncateLength={element.getData()?.label?.length}\n    >\n      {whenDecorator}\n    </TaskNode>\n  );\n\n  const classes = classNames('odc-pipeline-topology__task-node', { 'is-link': enableLogLink });\n  return (\n    <Layer\n      id={\n        detailsLevel !== ScaleDetailsLevel.high && (hover || contextMenuOpen)\n          ? TOP_LAYER\n          : DEFAULT_LAYER\n      }\n    >\n      <g data-test={`task ${element.getLabel()}`} className={classes} ref={hoverRef}>\n        <Tooltip\n          enableFlip\n          triggerRef={taskRef}\n          content={\n            <PipelineVisualizationStepList\n              isSpecOverview={!data.status}\n              taskName={element.getLabel()}\n              steps={stepStatusList}\n              isFinallyTask={isFinallyTask}\n            />\n          }\n        >\n          <g ref={taskRef}>{enableLogLink ? <Link to={path}>{taskNode}</Link> : taskNode}</g>\n        </Tooltip>\n      </g>\n    </Layer>\n  );\n};\n\nexport default React.memo(observer(PipelineTaskNode));\n","import * as React from 'react';\nimport { Edge, Point } from '@patternfly/react-topology';\nimport { integralShapePath } from './draw-utils';\n\nconst TaskEdge: React.FC<{ element: Edge }> = ({ element }) => {\n  const startPoint: Point = element.getStartPoint();\n  const endPoint: Point = element.getEndPoint();\n  const sourceNode = element.getSource();\n  const targetNode = element.getTarget();\n\n  return (\n    <path\n      d={integralShapePath(\n        startPoint.clone().translate(sourceNode.getBounds().width / 2 - 1, 0),\n        endPoint.clone().translate(-targetNode.getBounds().width / 2, 0),\n      )}\n      stroke=\"var(--pf-v5-global--BorderColor--light-100)\"\n      fill=\"none\"\n      transform=\"translate(0.5,0.5)\"\n    />\n  );\n};\n\nexport default TaskEdge;\n","import * as React from 'react';\nimport {\n  GRAPH_LAYOUT_END_EVENT,\n  Model,\n  Node,\n  Visualization,\n  VisualizationSurface,\n  VisualizationProvider,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  TopologyControlBar,\n  TopologyView,\n  Controller,\n  GRAPH_POSITION_CHANGE_EVENT,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport Measure from 'react-measure';\nimport {\n  DROP_SHADOW_SPACING,\n  NODE_HEIGHT,\n  TOOLBAR_HEIGHT,\n  GRAPH_MIN_WIDTH,\n  PipelineLayout,\n  GRAPH_MAX_HEIGHT_PERCENT,\n} from './const';\nimport { layoutFactory } from './factories';\nimport { getLayoutData } from './utils';\n\ntype PipelineVisualizationSurfaceProps = {\n  model: Model;\n  componentFactory: ComponentFactory;\n  showControlBar?: boolean;\n  noScrollbar?: boolean;\n};\n\nconst PipelineVisualizationSurface: React.FC<PipelineVisualizationSurfaceProps> = ({\n  model,\n  componentFactory,\n  showControlBar = false,\n  noScrollbar = false,\n}) => {\n  const [vis, setVis] = React.useState<Controller>(null);\n  const [maxSize, setMaxSize] = React.useState(null);\n  const [width, setWidth] = React.useState(null);\n  const storedGraphModel = React.useRef(null);\n\n  const layout: PipelineLayout = model.graph.layout as PipelineLayout;\n\n  const onLayoutUpdate = React.useCallback(\n    (nodes: Node[]) => {\n      const nodeBounds = nodes.map((node) => node.getBounds());\n      const maxWidth = Math.floor(\n        nodeBounds.map((bounds) => bounds.width).reduce((w1, w2) => Math.max(w1, w2), 0),\n      );\n      const maxHeight = Math.floor(\n        nodeBounds.map((bounds) => bounds.height).reduce((h1, h2) => Math.max(h1, h2), 0),\n      );\n      const maxObject = nodeBounds.find((nb) => nb.height === maxHeight);\n\n      const maxX = Math.floor(\n        nodeBounds.map((bounds) => bounds.x).reduce((x1, x2) => Math.max(x1, x2), 0),\n      );\n      const maxY = Math.floor(\n        nodeBounds.map((bounds) => bounds.y).reduce((y1, y2) => Math.max(y1, y2), 0),\n      );\n\n      let horizontalMargin = 0;\n      let verticalMargin = 0;\n      if (layout) {\n        horizontalMargin = getLayoutData(layout).marginx || 0;\n        verticalMargin = getLayoutData(layout).marginy || 0;\n      }\n      const finallyTaskHeight = maxObject.y + maxHeight + DROP_SHADOW_SPACING + verticalMargin * 2;\n      const regularTaskHeight = maxY + NODE_HEIGHT + DROP_SHADOW_SPACING + verticalMargin * 2;\n\n      setMaxSize({\n        height: Math.max(finallyTaskHeight, regularTaskHeight) + TOOLBAR_HEIGHT,\n        width: Math.max(\n          maxX + maxWidth + DROP_SHADOW_SPACING + horizontalMargin * 2,\n          GRAPH_MIN_WIDTH,\n        ),\n      });\n    },\n    [setMaxSize, layout],\n  );\n\n  React.useEffect(() => {\n    if (vis === null) {\n      const visualization = new Visualization();\n      visualization.registerLayoutFactory(layoutFactory);\n      visualization.registerComponentFactory(componentFactory);\n      visualization.fromModel(model);\n      visualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, () => {\n        storedGraphModel.current = visualization.getGraph().toModel();\n      });\n      visualization.addEventListener(GRAPH_LAYOUT_END_EVENT, () => {\n        onLayoutUpdate(visualization.getGraph().getNodes());\n      });\n      setVis(visualization);\n    } else {\n      const graph = storedGraphModel.current;\n      if (graph) {\n        model.graph = graph;\n      }\n      vis.fromModel(model);\n      vis.getGraph().layout();\n    }\n  }, [vis, model, onLayoutUpdate, componentFactory]);\n\n  React.useEffect(() => {\n    if (model && vis) {\n      const graph = storedGraphModel.current;\n      if (graph) {\n        model.graph = graph;\n      }\n      vis.fromModel(model);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, vis]);\n\n  if (!vis) return null;\n\n  const controlBar = (controller) => (\n    <TopologyControlBar\n      controlButtons={createTopologyControlButtons({\n        ...defaultControlButtonsOptions,\n        zoomInCallback: action(() => {\n          controller.getGraph().scaleBy(4 / 3);\n        }),\n        zoomOutCallback: action(() => {\n          controller.getGraph().scaleBy(0.75);\n        }),\n        fitToScreenCallback: action(() => {\n          controller.getGraph().fit(80);\n        }),\n        resetViewCallback: action(() => {\n          controller.getGraph().reset();\n          controller.getGraph().layout();\n        }),\n        legend: false,\n      })}\n    />\n  );\n\n  return (\n    <Measure\n      bounds\n      onResize={(contentRect) => {\n        setWidth(contentRect.bounds?.width);\n      }}\n    >\n      {({ measureRef }) => (\n        <div ref={measureRef}>\n          <div\n            style={{\n              height: noScrollbar\n                ? maxSize?.height\n                : Math.min((GRAPH_MAX_HEIGHT_PERCENT / 100) * window.innerHeight, maxSize?.height),\n              width: noScrollbar ? maxSize?.width : Math.min(maxSize?.width, width),\n            }}\n          >\n            <VisualizationProvider controller={vis}>\n              {showControlBar ? (\n                <TopologyView controlBar={controlBar(vis)}>\n                  <VisualizationSurface />\n                </TopologyView>\n              ) : (\n                <VisualizationSurface />\n              )}\n            </VisualizationProvider>\n          </div>\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nexport default PipelineVisualizationSurface;\n","import * as React from 'react';\nimport { FormGroup, Flex, FlexItem, Tile, Text } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { ConfigMapKind } from 'public/module/k8s/types';\nimport { PacConfigurationTypes } from '../consts';\nimport { RepositoryFormValues } from '../types';\nimport GithubSection from './GithubSection';\nimport WebhookSection from './WebhookSection';\n\ntype ConfigTypeSectionProps = {\n  pac: ConfigMapKind;\n  formContextField?: string;\n};\n\nconst ConfigTypeSection: React.FC<ConfigTypeSectionProps> = ({ pac, formContextField }) => {\n  const { values, setFieldValue } = useFormikContext<FormikValues & RepositoryFormValues>();\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { method } = _.get(values, formContextField) || values;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Text>\n        {t(\n          'pipelines-plugin~A GitHub App is already set up for this cluster. To use it, install the GitHub app on your personal account or GitHub organization.',\n        )}\n      </Text>\n      <br />\n      <FormSection extraMargin>\n        <FormGroup fieldId=\"method\">\n          <Flex>\n            <FlexItem span={3}>\n              <Tile\n                data-test=\"github\"\n                title={t('pipelines-plugin~Use GitHub App')}\n                onClick={() => setFieldValue(`${fieldPrefix}method`, PacConfigurationTypes.GITHUB)}\n                isSelected={method === PacConfigurationTypes.GITHUB}\n              />\n            </FlexItem>\n            <FlexItem span={3}>\n              <Tile\n                data-test=\"webhook\"\n                title={t('pipelines-plugin~Setup a webhook')}\n                onClick={() => setFieldValue(`${fieldPrefix}method`, PacConfigurationTypes.WEBHOOK)}\n                isSelected={method === PacConfigurationTypes.WEBHOOK}\n              />\n            </FlexItem>\n          </Flex>\n        </FormGroup>\n      </FormSection>\n      <FormSection fullWidth={method === PacConfigurationTypes.WEBHOOK || !fieldPrefix}>\n        {method === PacConfigurationTypes.GITHUB && <GithubSection pac={pac} />}\n        {method === PacConfigurationTypes.WEBHOOK && (\n          <WebhookSection pac={pac} formContextField={formContextField} />\n        )}\n      </FormSection>\n    </>\n  );\n};\n\nexport default ConfigTypeSection;\n","import * as React from 'react';\nimport { Text } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { ConfigMapKind } from '@console/internal/module/k8s/types';\n\ntype GithubSectionProps = {\n  pac: ConfigMapKind;\n};\n\nconst GithubSection: React.FC<GithubSectionProps> = ({ pac }) => {\n  const { t } = useTranslation();\n  const appLink = pac?.data?.['app-link'] ?? '';\n  return (\n    <Text>\n      <Trans t={t} ns=\"pipelines-plugin\">\n        Use{' '}\n        <a target=\"_blank\" href={appLink} rel=\"noopener noreferrer\">\n          {appLink}\n        </a>{' '}\n        link to install the GitHub Application to your repositories in your organisation/account.\n      </Trans>\n    </Text>\n  );\n};\n\nexport default GithubSection;\n","import * as React from 'react';\nimport { List, ListItem } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { GitProvider } from '@console/git-service';\nimport { RepositoryFormValues } from '../types';\n\ntype PermissionsSectionProps = {\n  formContextField?: string;\n};\n\nconst PermissionsSection: React.FC<PermissionsSectionProps> = ({ formContextField }) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<RepositoryFormValues>();\n  const { gitProvider } = _.get(values, formContextField) || values;\n\n  let permission;\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Commit comments')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Issue comments')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull request')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pushes')}</ListItem>\n        </List>\n      );\n      break;\n    case GitProvider.GITLAB:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Merge request Events')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Push Events')}</ListItem>\n        </List>\n      );\n      break;\n    case GitProvider.BITBUCKET:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Repository: Push')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Created')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Updated')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Comment Created')}</ListItem>\n        </List>\n      );\n      break;\n    default:\n      permission = null;\n  }\n  return permission;\n};\n\nexport default PermissionsSection;\n","export { default as removeTriggerModal } from './triggers/RemoveTriggerModal';\nexport { default as startPipelineModal } from './start-pipeline/StartPipelineModal';\nexport { default as addTriggerModal } from './triggers/AddTriggerModal';\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Kebab, ResourceKebabProps } from '@console/internal/components/utils';\nimport { connectToModel } from '@console/internal/kinds';\n\nexport const ResourceKebab = connectToModel((props: ResourceKebabProps) => {\n  const { t } = useTranslation();\n  const { actions, kindObj, resource, isDisabled, customData, terminatingTooltip } = props;\n  if (!kindObj) {\n    return null;\n  }\n  const options = _.reject(\n    actions.map((a) => a(kindObj, resource, null, customData)),\n    'hidden',\n  );\n  return (\n    <Kebab\n      options={options}\n      key={resource.metadata.uid}\n      isDisabled={isDisabled ?? options.length === 0}\n      terminatingTooltip={\n        _.has(resource.metadata, 'deletionTimestamp')\n          ? terminatingTooltip || t('pipelines-plugin~Resource is being deleted.')\n          : ''\n      }\n    />\n  );\n});\n","import * as React from 'react';\nimport { FocusTrap, Menu, MenuList, MenuItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { WithScrollContainer } from '@console/internal/components/utils';\nimport Popper from '@console/shared/src/components/popper/Popper';\nimport useAutoComplete from './useAutoComplete';\n\ntype AutoCompletePopoverProps = {\n  autoCompleteValues: string[];\n  children: (contentRefCallback: (ref: HTMLElement) => void) => React.ReactNode;\n  onAutoComplete: (newValue: string) => void;\n};\n\nconst AutoCompletePopover: React.FC<AutoCompletePopoverProps> = ({\n  autoCompleteValues,\n  children,\n  onAutoComplete,\n}) => {\n  const { t } = useTranslation();\n\n  const {\n    contentRefCallback,\n    focusTrapProps,\n    insertAutoComplete,\n    popperProps,\n    menuWidth,\n    options,\n  } = useAutoComplete(autoCompleteValues, onAutoComplete);\n\n  return (\n    <>\n      {children(contentRefCallback)}\n      <WithScrollContainer>\n        {(scrollContainer) => (\n          <Popper\n            {...popperProps}\n            placement=\"bottom-start\"\n            closeOnEsc\n            closeOnOutsideClick\n            container={scrollContainer}\n            popperOptions={{\n              modifiers: {\n                hide: {\n                  enabled: false,\n                },\n                preventOverflow: {\n                  enabled: false,\n                },\n                flip: {\n                  enabled: false,\n                },\n              },\n            }}\n          >\n            <FocusTrap {...focusTrapProps}>\n              <Menu\n                style={{ maxHeight: 200, overflow: 'auto', width: menuWidth }}\n                onSelect={(event, itemId: number) => {\n                  const text = options[itemId];\n                  if (text) {\n                    insertAutoComplete(text);\n                  }\n                }}\n              >\n                <MenuList>\n                  {options.length === 0 ? (\n                    // There is a tab-index problem with the Menus from PF. If the first option is removed, it breaks tab indexes\n                    // Need key 0 because of PF bug\n                    <MenuItem key={0} itemId={-1} isDisabled>\n                      {t('pipelines-plugin~No options matching your criteria')}\n                    </MenuItem>\n                  ) : (\n                    options.map((value, idx) => (\n                      // Using index-based keys to get around PF bug, see above\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={idx} itemId={idx}>\n                        {value}\n                      </MenuItem>\n                    ))\n                  )}\n                </MenuList>\n              </Menu>\n            </FocusTrap>\n          </Popper>\n        )}\n      </WithScrollContainer>\n    </>\n  );\n};\n\nexport default AutoCompletePopover;\n","import { get } from 'lodash';\nimport { TaskKind, TektonParam, TektonResource, TektonResourceGroup } from '../../types';\n\nexport type TaskKindAlpha = TaskKind & {\n  spec: {\n    inputs?: {\n      params?: TektonParam[];\n      resources?: TektonResource[];\n    };\n    outputs?: {\n      resources?: TektonResource[];\n    };\n  };\n};\n\nenum PATHS {\n  alphaInputResources = 'spec.inputs.resources',\n  alphaOutputResources = 'spec.outputs.resources',\n  alphaParameters = 'spec.inputs.params',\n\n  betaInputResources = 'spec.resources.inputs',\n  betaOutputResources = 'spec.resources.outputs',\n  betaParameters = 'spec.params',\n}\n\nexport const getTaskResources = (\n  taskResource: TaskKind | TaskKindAlpha,\n): TektonResourceGroup<TektonResource> => {\n  const inputs =\n    get(taskResource, PATHS.alphaInputResources) || get(taskResource, PATHS.betaInputResources);\n  const outputs =\n    get(taskResource, PATHS.alphaOutputResources) || get(taskResource, PATHS.betaOutputResources);\n\n  if (inputs || outputs) {\n    return {\n      inputs,\n      outputs,\n    };\n  }\n\n  return {};\n};\n\nexport const getTaskParameters = (taskResource: TaskKind | TaskKindAlpha): TektonParam[] => {\n  return get(taskResource, PATHS.alphaParameters) || get(taskResource, PATHS.betaParameters) || [];\n};\n","import { useFormikContext } from 'formik';\nimport { AddTriggerFormValues } from '../../../pipelines/modals/triggers/types';\nimport {\n  PipelineBuilderFormikValues,\n  SelectedBuilderTask,\n} from '../../../pipelines/pipeline-builder/types';\nimport {\n  computeAvailableResultACs,\n  paramToAutoComplete,\n  taskToStatus,\n  workspaceToAutoComplete,\n} from './autoCompleteUtils';\n\nexport const useBuilderParams = (selectedData: SelectedBuilderTask): string[] => {\n  const {\n    values: {\n      formData: { params, tasks, workspaces },\n      taskResources,\n    },\n  } = useFormikContext<PipelineBuilderFormikValues>();\n  const { taskIndex, isFinallyTask } = selectedData || {};\n\n  const paramACs: string[] = params.map(paramToAutoComplete);\n  const workspaceACs: string[] = workspaces.map(workspaceToAutoComplete);\n\n  const contextualACs: string[] = [\n    'context.pipelineRun.name',\n    'context.pipelineRun.namespace',\n    'context.pipelineRun.uid',\n    'context.pipeline.name',\n  ];\n\n  let finallyStatusACs: string[] = [];\n  if (isFinallyTask) {\n    finallyStatusACs = tasks.map(taskToStatus);\n  }\n\n  const taskResultACs: string[] = computeAvailableResultACs(tasks, taskResources, taskIndex);\n\n  return [...paramACs, ...workspaceACs, ...contextualACs, ...finallyStatusACs, ...taskResultACs];\n};\n\nexport const useAddTriggerParams = (): string[] => {\n  const {\n    values: { triggerBinding },\n  } = useFormikContext<AddTriggerFormValues>();\n\n  const bindingParamACs: string[] =\n    triggerBinding?.resource?.spec?.params?.map((param) => `tt.${paramToAutoComplete(param)}`) ||\n    [];\n\n  const staticACs: string[] = ['uid'];\n\n  return [...bindingParamACs, ...staticACs];\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Button, TextInput, TextInputProps } from '@patternfly/react-core';\nimport * as classNames from 'classnames';\n// eslint-disable-next-line no-restricted-imports\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useDispatch } from 'react-redux';\nimport { Link, useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { ColumnLayout } from '@console/dynamic-plugin-sdk';\nimport { filterList } from '@console/dynamic-plugin-sdk/src/app/k8s/actions/k8s';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { FilterToolbar, RowFilter } from '@console/internal/components/filter-toolbar';\nimport { storagePrefix } from '@console/internal/components/row-filter';\nimport {\n  Dropdown,\n  FirehoseResource,\n  FirehoseResourcesResult,\n  FirehoseResultObject,\n  inject,\n  kindObj,\n  makeQuery,\n  makeReduxID,\n  PageHeading,\n  RequireCreatePermission,\n} from '@console/internal/components/utils';\nimport {\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n  Selector,\n} from '@console/internal/module/k8s';\nimport { useDocumentListener, KEYBOARD_SHORTCUTS, useDeepCompareMemoize } from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport ListPropProvider from './ListPropProvider';\n\ntype CreateProps = {\n  action?: string;\n  createLink?: (item: string) => string;\n  to?: string;\n  items?: {\n    [key: string]: string;\n  };\n  onClick?: () => void;\n  isDisabled?: boolean;\n  id?: string;\n};\n\ntype TextFilterProps = Omit<TextInputProps, 'type' | 'tabIndex'> & {\n  label?: string;\n  parentClassName?: string;\n};\n\nexport const TextFilter: React.FC<TextFilterProps> = (props) => {\n  const {\n    label,\n    className,\n    placeholder,\n    autoFocus = false,\n    parentClassName,\n    ...otherInputProps\n  } = props;\n  const { ref } = useDocumentListener<HTMLInputElement>();\n  const { t } = useTranslation();\n  const placeholderText = placeholder ?? t('public~Filter {{label}}...', { label });\n\n  return (\n    <div className={classNames('has-feedback', parentClassName)}>\n      <TextInput\n        {...otherInputProps}\n        className={classNames('co-text-filter', className)}\n        data-test-id=\"item-filter\"\n        aria-label={placeholderText}\n        placeholder={placeholderText}\n        ref={ref}\n        autoFocus={autoFocus}\n        tabIndex={0}\n        type=\"text\"\n      />\n      <span className=\"co-text-filter-feedback\">\n        <kbd className=\"co-kbd co-kbd__filter-input\">{KEYBOARD_SHORTCUTS.focusFilterInput}</kbd>\n      </span>\n    </div>\n  );\n};\nTextFilter.displayName = 'TextFilter';\n\n// TODO (jon) make this into \"withListPageFilters\" HOC\n\ntype ListPageWrapperProps<L = any, C = any> = {\n  ListComponent: React.ComponentType<L>;\n  kinds: string[];\n  filters?: any;\n  flatten?: Flatten;\n  rowFilters?: RowFilter[];\n  hideNameLabelFilters?: boolean;\n  hideLabelFilter?: boolean;\n  columnLayout?: ColumnLayout;\n  name?: string;\n  resources?: FirehoseResourcesResult;\n  reduxIDs?: string[];\n  textFilter?: string;\n  nameFilterPlaceholder?: string;\n  namespace?: string;\n  labelFilterPlaceholder?: string;\n  label?: string;\n  staticFilters?: { key: string; value: string }[];\n  customData?: C;\n  hideColumnManagement?: boolean;\n  nameFilter?: string;\n  data?: any;\n};\n\nexport const ListPageWrapper: React.FC<ListPageWrapperProps> = (props) => {\n  const {\n    flatten,\n    ListComponent,\n    reduxIDs,\n    rowFilters,\n    textFilter,\n    nameFilterPlaceholder,\n    labelFilterPlaceholder,\n    hideNameLabelFilters,\n    hideLabelFilter,\n    columnLayout,\n    name,\n    nameFilter,\n    data,\n  } = props;\n  const dispatch = useDispatch();\n  const memoizedIds = useDeepCompareMemoize(reduxIDs);\n\n  React.useEffect(() => {\n    if (!_.isNil(nameFilter)) {\n      memoizedIds.forEach((id) => dispatch(filterList(id, 'name', { selected: [nameFilter] })));\n    }\n  }, [dispatch, nameFilter, memoizedIds]);\n\n  const dta = flatten ? flatten(data) : [];\n  const Filter = (\n    <FilterToolbar\n      rowFilters={rowFilters}\n      nameFilterPlaceholder={nameFilterPlaceholder}\n      labelFilterPlaceholder={labelFilterPlaceholder}\n      reduxIDs={reduxIDs}\n      textFilter={textFilter}\n      hideNameLabelFilters={hideNameLabelFilters}\n      hideLabelFilter={hideLabelFilter}\n      columnLayout={columnLayout}\n      uniqueFilterName={name}\n      {...props}\n      data={dta}\n    />\n  );\n\n  return (\n    <div>\n      {!_.isEmpty(dta) && Filter}\n      <div className=\"row\">\n        <div className=\"col-xs-12\">\n          <ListComponent {...props} data={dta} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nListPageWrapper.displayName = 'ListPageWrapper_';\n\nexport type FireManProps = {\n  canCreate?: boolean;\n  textFilter?: string;\n  createAccessReview?: {\n    model: K8sKind;\n    namespace?: string;\n  };\n  createButtonText?: string;\n  createProps?: CreateProps;\n  fieldSelector?: string;\n  filterLabel?: string;\n  resources: FirehoseResource[];\n  badge?: React.ReactNode;\n  helpText?: React.ReactNode;\n  title?: string;\n  autoFocus?: boolean;\n  cluster?: string; // TODO remove multicluster\n};\n\nexport const FireMan: React.FC<FireManProps & { filterList?: typeof filterList }> = (props) => {\n  const {\n    cluster,\n    resources,\n    textFilter,\n    canCreate,\n    createAccessReview,\n    createButtonText,\n    createProps = {},\n    helpText,\n    badge,\n    title,\n  } = props;\n  const navigate = useNavigate();\n  const [reduxIDs, setReduxIDs] = React.useState([]);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [expand] = React.useState();\n\n  React.useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    params.forEach((v, k) => applyFilter(k, v));\n\n    const reduxId = resources.map((r) =>\n      makeReduxID(kindObj(r.kind), makeQuery(r.namespace, r.selector, r.fieldSelector, r.name)),\n    );\n    setReduxIDs(reduxId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    const reduxId = resources.map((r) =>\n      makeReduxID(kindObj(r.kind), makeQuery(r.namespace, r.selector, r.fieldSelector, r.name)),\n    );\n\n    if (_.isEqual(reduxId, reduxIDs)) {\n      return;\n    }\n\n    // reapply filters to the new list...\n    setReduxIDs(reduxId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cluster, resources]);\n\n  const updateURL = (filterName: string, options: any) => {\n    if (filterName !== textFilter) {\n      // TODO (ggreer): support complex filters (objects, not just strings)\n      return;\n    }\n    const params = new URLSearchParams(window.location.search);\n    if (options) {\n      params.set(filterName, options);\n    } else {\n      params.delete(filterName);\n    }\n    const url = new URL(window.location.href);\n    navigate(`${url.pathname}?${params.toString()}${url.hash}`, { replace: true });\n  };\n\n  const applyFilter = (filterName: string, options: any) => {\n    // TODO: (ggreer) lame blacklist of query args. Use a whitelist based on resource filters\n    if (['q', 'kind', 'orderBy', 'sortBy'].includes(filterName)) {\n      return;\n    }\n    if (filterName.indexOf(storagePrefix) === 0) {\n      return;\n    }\n    reduxIDs.forEach((id) => props.filterList(id, filterName, options));\n    updateURL(filterName, options);\n  };\n\n  const runOrNavigate = (itemName: string) => {\n    const action = _.isFunction(createProps.action) && createProps.action(itemName);\n    if (action) {\n      action();\n    } else if (_.isFunction(createProps.createLink)) {\n      navigate(createProps.createLink(itemName), { replace: true });\n    }\n  };\n\n  let createLink: any;\n\n  if (canCreate) {\n    if (createProps.to) {\n      createLink = (\n        <Link className=\"co-m-primary-action\" to={createProps.to}>\n          <Button variant=\"primary\" id=\"yaml-create\" data-test=\"item-create\">\n            {createButtonText}\n          </Button>\n        </Link>\n      );\n    } else if (createProps.items) {\n      createLink = (\n        <div className=\"co-m-primary-action\">\n          <Dropdown\n            buttonClassName=\"pf-m-primary\"\n            id=\"item-create\"\n            dataTest=\"item-create\"\n            menuClassName={classNames({ 'pf-m-align-right-on-md': title })}\n            title={createButtonText}\n            noSelection\n            items={createProps.items}\n            onChange={runOrNavigate}\n          />\n        </div>\n      );\n    } else {\n      createLink = (\n        <div className=\"co-m-primary-action\">\n          <Button variant=\"primary\" id=\"yaml-create\" data-test=\"item-create\" {...createProps}>\n            {createButtonText}\n          </Button>\n        </div>\n      );\n    }\n    if (!_.isEmpty(createAccessReview)) {\n      createLink = (\n        <RequireCreatePermission\n          model={createAccessReview.model}\n          namespace={createAccessReview.namespace}\n        >\n          {createLink}\n        </RequireCreatePermission>\n      );\n    }\n  }\n\n  return (\n    <>\n      {/* Badge rendered from PageHeading only when title is present */}\n      <PageHeading\n        title={title}\n        badge={title ? badge : null}\n        className={classNames({ 'co-m-nav-title--row': createLink })}\n      >\n        {createLink && (\n          <div className={classNames({ 'co-m-pane__createLink--no-title': !title })}>\n            {createLink}\n          </div>\n        )}\n        {!title && badge && <div>{badge}</div>}\n      </PageHeading>\n      {helpText && <p className=\"co-m-pane__help-text co-help-text\">{helpText}</p>}\n      <div className=\"co-m-pane__body co-m-pane__body--no-top-margin\">\n        {inject(props.children, {\n          resources,\n          expand,\n          reduxIDs,\n          applyFilter,\n        })}\n      </div>\n    </>\n  );\n};\nFireMan.displayName = 'FireMan';\n\nexport type Flatten<\n  F extends FirehoseResultObject = { [key: string]: K8sResourceCommon | K8sResourceCommon[] },\n  R = any\n> = (resources: FirehoseResourcesResult<F>) => R;\n\nexport type ListPageProps<L = any, C = any> = PageCommonProps<L, C> & {\n  kind: string;\n  helpText?: React.ReactNode;\n  selector?: Selector;\n  fieldSelector?: string;\n  createHandler?: () => void;\n  name?: string;\n  filters?: any;\n  limit?: number;\n  nameFilter?: string;\n  skipAccessReview?: boolean;\n  data?: any;\n};\n\nexport const ListPage = withFallback<ListPageProps>((props) => {\n  const {\n    autoFocus,\n    canCreate,\n    createButtonText,\n    createHandler,\n    customData,\n    fieldSelector,\n    filterLabel,\n    labelFilterPlaceholder,\n    nameFilterPlaceholder,\n    filters,\n    helpText,\n    kind,\n    limit,\n    ListComponent,\n    mock,\n    name,\n    nameFilter,\n    namespace,\n    selector,\n    showTitle = true,\n    skipAccessReview,\n    textFilter,\n    badge,\n    hideLabelFilter,\n    hideNameLabelFilters,\n    hideColumnManagement,\n    columnLayout,\n    data,\n    flatten = (_resources) => _.get(_resources, kind)?.data,\n  } = props;\n  const { t } = useTranslation();\n  const params = useParams();\n  let { createProps } = props;\n  const ko = kindObj(kind);\n  const { label, labelKey, labelPlural, labelPluralKey, namespaced, plural } = ko;\n  const title = props.title || t(labelPluralKey) || labelPlural;\n  const usedNamespace = !namespace && namespaced ? params.ns : namespace;\n\n  let href = usedNamespace\n    ? `/k8s/ns/${usedNamespace || 'default'}/${plural}/~new`\n    : `/k8s/cluster/${plural}/~new`;\n  if (ko.crd) {\n    try {\n      const ref = referenceForModel(ko);\n      href = usedNamespace\n        ? `/k8s/ns/${usedNamespace || 'default'}/${ref}/~new`\n        : `/k8s/cluster/${ref}/~new`;\n    } catch (unused) {\n      /**/\n    }\n  }\n\n  createProps = createProps || (createHandler ? { onClick: createHandler } : { to: href });\n  const createAccessReview = skipAccessReview ? null : { model: ko, namespace: usedNamespace };\n  const resources = [\n    {\n      fieldSelector,\n      filters,\n      kind,\n      limit,\n      name,\n      namespaced,\n      selector,\n      prop: kind,\n    },\n  ];\n\n  // Don't show row filters if props.filters were passed. The content is already filtered and the row filters will have incorrect counts.\n  const rowFilters = _.isEmpty(filters) ? props.rowFilters : undefined;\n\n  if (!namespaced && usedNamespace) {\n    return <ErrorPage404 />;\n  }\n\n  return (\n    <MultiListPage\n      autoFocus={autoFocus}\n      canCreate={canCreate}\n      createAccessReview={createAccessReview}\n      createButtonText={\n        createButtonText || t('public~Create {{label}}', { label: t(labelKey) || label })\n      }\n      createProps={createProps}\n      customData={customData}\n      filterLabel={filterLabel || t('public~by name')}\n      nameFilterPlaceholder={nameFilterPlaceholder}\n      labelFilterPlaceholder={labelFilterPlaceholder}\n      flatten={flatten}\n      helpText={helpText}\n      label={t(labelPluralKey) || labelPlural}\n      ListComponent={ListComponent}\n      mock={mock}\n      namespace={usedNamespace}\n      resources={resources}\n      rowFilters={rowFilters}\n      showTitle={showTitle}\n      textFilter={textFilter}\n      title={title}\n      badge={badge}\n      hideLabelFilter={hideLabelFilter}\n      hideNameLabelFilters={hideNameLabelFilters}\n      hideColumnManagement={hideColumnManagement}\n      columnLayout={columnLayout}\n      nameFilter={nameFilter}\n      data={data}\n    />\n  );\n}, ErrorBoundaryFallbackPage);\n\nListPage.displayName = 'ListPage';\n\ntype PageCommonProps<L = any, C = any> = {\n  canCreate?: boolean;\n  createButtonText?: string;\n  createProps?: CreateProps;\n  flatten?: Flatten;\n  title?: string;\n  showTitle?: boolean;\n  filterLabel?: string;\n  textFilter?: string;\n  rowFilters?: RowFilter[];\n  ListComponent: React.ComponentType<L>;\n  namespace?: string;\n  customData?: C;\n  badge?: React.ReactNode;\n  hideNameLabelFilters?: boolean;\n  hideLabelFilter?: boolean;\n  columnLayout?: ColumnLayout;\n  hideColumnManagement?: boolean;\n  labelFilterPlaceholder?: string;\n  nameFilterPlaceholder?: string;\n  autoFocus?: boolean;\n  mock?: boolean;\n  data?: any;\n};\n\nexport type MultiListPageProps<L = any, C = any> = PageCommonProps<L, C> & {\n  createAccessReview?: {\n    model: K8sKind;\n    namespace?: string;\n  };\n  label?: string;\n  hideTextFilter?: boolean;\n  helpText?: React.ReactNode;\n  resources: (Omit<FirehoseResource, 'prop'> & { prop?: FirehoseResource['prop'] })[];\n  staticFilters?: { key: string; value: string }[];\n  nameFilter?: string;\n};\n\nexport const MultiListPage: React.FC<MultiListPageProps> = (props) => {\n  const {\n    autoFocus,\n    canCreate,\n    createAccessReview,\n    createButtonText,\n    createProps,\n    filterLabel,\n    nameFilterPlaceholder,\n    labelFilterPlaceholder,\n    flatten,\n    helpText,\n    label,\n    ListComponent,\n    mock,\n    namespace,\n    rowFilters,\n    showTitle = true,\n    staticFilters,\n    textFilter,\n    title,\n    customData,\n    badge,\n    hideLabelFilter,\n    hideNameLabelFilters,\n    hideColumnManagement,\n    columnLayout,\n    nameFilter,\n    data,\n  } = props;\n  const { t } = useTranslation();\n  const resources = _.map(props.resources, (r) => ({\n    ...r,\n    isList: r.isList !== undefined ? r.isList : true,\n    namespace: r.namespaced ? namespace : r.namespace,\n    prop: r.kind,\n  }));\n  return (\n    <FireMan\n      autoFocus={autoFocus}\n      canCreate={canCreate}\n      createAccessReview={createAccessReview}\n      createButtonText={createButtonText || t('public~Create')}\n      createProps={createProps}\n      filterLabel={filterLabel || t('public~by name')}\n      helpText={helpText}\n      resources={mock ? [] : resources}\n      textFilter={textFilter}\n      title={showTitle ? title : undefined}\n      badge={badge}\n    >\n      <ListPropProvider data={data}>\n        <ListPageWrapper\n          flatten={flatten}\n          kinds={_.map(resources, 'kind')}\n          label={label}\n          ListComponent={ListComponent}\n          textFilter={textFilter}\n          rowFilters={rowFilters}\n          staticFilters={staticFilters}\n          customData={customData}\n          hideLabelFilter={hideLabelFilter}\n          hideNameLabelFilters={hideNameLabelFilters}\n          hideColumnManagement={hideColumnManagement}\n          columnLayout={columnLayout}\n          nameFilterPlaceholder={nameFilterPlaceholder}\n          labelFilterPlaceholder={labelFilterPlaceholder}\n          nameFilter={nameFilter}\n          namespace={namespace}\n          resources={data}\n          data={data}\n        />\n      </ListPropProvider>\n    </FireMan>\n  );\n};\n\nMultiListPage.displayName = 'MultiListPage';\n","import i18next from 'i18next';\nimport { Condition, TaskRunStatus } from '../../../types';\nimport { CombinedErrorDetails } from './log-snippet-types';\n\nconst joinConditions = (conditions: Condition[]) =>\n  conditions.map((condition) => condition.message).join('\\n') ||\n  i18next.t('pipelines-plugin~Unknown failure condition');\n\nexport const taskRunSnippetMessage = (\n  taskName: string,\n  taskRunStatus: TaskRunStatus,\n  containerName: string,\n): CombinedErrorDetails => {\n  if (!taskRunStatus?.podName || !containerName) {\n    // Not enough to go to the logs, print all the conditions messages together\n    return {\n      staticMessage: joinConditions(taskRunStatus.conditions),\n      title: i18next.t('pipelines-plugin~Failure on task {{taskName}} - check logs for details.', {\n        taskName,\n      }),\n    };\n  }\n  // We don't know enough but have enough to locate the logs\n  return {\n    containerName,\n    podName: taskRunStatus.podName,\n    title: i18next.t('pipelines-plugin~Failure on task {{taskName}} - check logs for details.', {\n      taskName,\n    }),\n  };\n};\n","export enum CTALabel {\n  Add = 'Add',\n  Install = 'Install',\n  Update = 'Update',\n}\n\nexport const TEKTONHUB = 'Tektonhub';\nexport const ARTIFACTHUB = 'ArtifactHub';\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { LoadingInline, resourcePathFromModel } from '@console/internal/components/utils';\nimport { DASH } from '@console/shared';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\nimport { TaskStatus } from '../../../utils/pipeline-augment';\nimport { PipelineBars, PipelineBarsForTaskRunsStatus } from './PipelineBars';\n\nexport interface LinkedPipelineRunTaskStatusProps {\n  pipelineRun: PipelineRunKind;\n  taskRuns: TaskRunKind[];\n  taskRunsLoaded?: boolean;\n  taskRunStatusObj?: TaskStatus;\n}\n\n/**\n * Will attempt to render a link to the log file associated with the pipelineRun if it has the data.\n * If it does not, it'll just render the pipeline status.\n */\nconst LinkedPipelineRunTaskStatus: React.FC<LinkedPipelineRunTaskStatusProps> = ({\n  pipelineRun,\n  taskRuns,\n  taskRunsLoaded,\n  taskRunStatusObj,\n}) => {\n  const { t } = useTranslation();\n  const pipelineStatus =\n    taskRunStatusObj && Object.values(taskRunStatusObj)?.every((value) => value === 0) ? (\n      <>{DASH}</>\n    ) : taskRunStatusObj ? (\n      <PipelineBarsForTaskRunsStatus taskRunStatusObj={taskRunStatusObj} />\n    ) : taskRunsLoaded && taskRuns?.length > 0 ? (\n      <PipelineBars\n        key={pipelineRun.metadata?.name}\n        pipelinerun={pipelineRun}\n        taskRuns={taskRuns}\n      />\n    ) : taskRunsLoaded && taskRuns?.length === 0 && !taskRunStatusObj ? (\n      <>{DASH}</>\n    ) : (\n      <LoadingInline />\n    );\n\n  if (pipelineRun.metadata?.name && pipelineRun.metadata?.namespace) {\n    return (\n      <Link\n        to={`${resourcePathFromModel(\n          PipelineRunModel,\n          pipelineRun.metadata.name,\n          pipelineRun.metadata.namespace,\n        )}/logs`}\n        role=\"button\"\n        aria-label={t('pipelines-plugin~View logs')}\n      >\n        {pipelineStatus}\n      </Link>\n    );\n  }\n\n  return pipelineStatus;\n};\n\nexport default LinkedPipelineRunTaskStatus;\n","import * as React from 'react';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../types';\nimport { getPipelineFromPipelineRun } from '../../../utils/pipeline-augment';\n\nexport const usePipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const [pipeline, setPipeline] = React.useState<PipelineKind>(null);\n  React.useEffect(() => {\n    const emptyPipeline: PipelineKind = { spec: { tasks: [] } };\n    const pipelineFromPipelineRun = getPipelineFromPipelineRun(pipelineRun);\n    if (pipelineFromPipelineRun) {\n      setPipeline(pipelineFromPipelineRun);\n    } else if (pipelineRun.spec.pipelineRef?.name) {\n      const pipelineName = pipelineRun.spec.pipelineRef.name;\n      k8sGet(PipelineModel, pipelineName, pipelineRun.metadata.namespace)\n        .then((newPipeline: PipelineKind) => {\n          setPipeline(newPipeline);\n        })\n        .catch(() => setPipeline(emptyPipeline));\n    } else {\n      setPipeline(emptyPipeline);\n    }\n  }, [pipelineRun]);\n  return pipeline;\n};\n","import * as React from 'react';\nimport { Status } from '@console/shared';\n\ntype PipelineResourceStatusProps = {\n  status: string;\n  children?: React.ReactNode;\n  title?: string;\n};\nconst PipelineResourceStatus: React.FC<PipelineResourceStatusProps> = ({\n  status,\n  children,\n  title,\n}) => (\n  <Status status={status} title={title}>\n    {status === 'Failed' && React.Children.toArray(children).length > 0 && children}\n  </Status>\n);\n\nexport default PipelineResourceStatus;\n","import { saveAs } from 'file-saver';\nimport i18next from 'i18next';\nimport { coFetchText } from '@console/internal/co-fetch';\nimport { errorModal } from '@console/internal/components/modals';\nimport {\n  LOG_SOURCE_TERMINATED,\n  LOG_SOURCE_WAITING,\n  LineBuffer,\n} from '@console/internal/components/utils';\nimport { PodModel } from '@console/internal/models';\nimport {\n  PodKind,\n  ContainerSpec,\n  ContainerStatus,\n  resourceURL,\n  k8sGet,\n} from '@console/internal/module/k8s';\nimport { TaskRunKind } from '../../../types';\nimport { containerToLogSourceStatus } from '../../../utils/pipeline-utils';\nimport { getTaskRunLog } from '../utils/tekton-results';\n\nconst getSortedContainerStatus = (\n  containers: ContainerSpec[],\n  containerStatuses: ContainerStatus[],\n): ContainerStatus[] => {\n  const containerNames = containers.map((c) => c.name);\n  const sortedContainerStatus = [];\n  containerStatuses.forEach((cs) => {\n    const containerIndex = containerNames.indexOf(cs.name);\n    sortedContainerStatus[containerIndex] = cs;\n  });\n  return sortedContainerStatus;\n};\n\nexport const getRenderContainers = (\n  pod: PodKind,\n): { containers: ContainerSpec[]; stillFetching: boolean } => {\n  const containers: ContainerSpec[] = pod?.spec?.containers ?? [];\n  const containerStatuses: ContainerStatus[] = pod?.status?.containerStatuses ?? [];\n\n  const sortedContainerStatuses = getSortedContainerStatus(containers, containerStatuses);\n\n  const firstRunningCont = sortedContainerStatuses.findIndex(\n    (container) => containerToLogSourceStatus(container) !== LOG_SOURCE_TERMINATED,\n  );\n  return {\n    containers: containers.slice(\n      0,\n      firstRunningCont === -1 ? containers.length : firstRunningCont + 1,\n    ),\n    stillFetching: firstRunningCont !== -1,\n  };\n};\n\nconst getOrderedStepsFromPod = (name: string, ns: string): Promise<ContainerStatus[]> => {\n  return k8sGet(PodModel, name, ns)\n    .then((pod: PodKind) => {\n      return getSortedContainerStatus(\n        pod.spec.containers ?? [],\n        pod.status?.containerStatuses ?? [],\n      );\n    })\n    .catch((err) => {\n      errorModal({ error: err.message || i18next.t('pipelines-plugin~Error downloading logs.') });\n      return [];\n    });\n};\n\ntype StepsWatchUrl = {\n  [key: string]: {\n    name: string;\n    steps: { [step: string]: WatchURLStatus };\n    taskRunPath: string;\n  };\n};\n\ntype WatchURLStatus = {\n  status: string;\n  url: string;\n};\n\nexport const getDownloadAllLogsCallback = (\n  sortedTaskRunNames: string[],\n  taskRuns: TaskRunKind[],\n  namespace: string,\n  pipelineRunName: string,\n): (() => Promise<Error>) => {\n  const getWatchUrls = async (): Promise<StepsWatchUrl> => {\n    const stepsList: ContainerStatus[][] = await Promise.all(\n      sortedTaskRunNames.map((currTask) => {\n        const { status } = taskRuns.find((t) => t.metadata.name === currTask) ?? {};\n        return getOrderedStepsFromPod(status?.podName, namespace);\n      }),\n    );\n    return sortedTaskRunNames.reduce((acc, currTask, i) => {\n      const taskRun = taskRuns.find((t) => t.metadata.name === currTask);\n      const pipelineTaskName = taskRun?.spec.taskRef?.name ?? taskRun?.metadata.name;\n      const { status } = taskRun;\n      const podName = status?.podName;\n      const steps = stepsList[i];\n      const allStepUrls = steps.reduce((stepUrls, currentStep) => {\n        const { name } = currentStep;\n        const currentStatus = containerToLogSourceStatus(currentStep);\n        if (currentStatus === LOG_SOURCE_WAITING) return stepUrls;\n        const urlOpts = {\n          ns: namespace,\n          name: podName,\n          path: 'log',\n          queryParams: {\n            container: name,\n            follow: 'true',\n          },\n        };\n        return {\n          ...stepUrls,\n          [name]: {\n            status: currentStatus,\n            url: resourceURL(PodModel, urlOpts),\n          } as WatchURLStatus,\n        };\n      }, {});\n      acc[currTask] = {\n        name: pipelineTaskName,\n        steps: { ...allStepUrls },\n        taskRunPath: taskRun.metadata?.annotations?.['results.tekton.dev/record'],\n      };\n      return acc;\n    }, {});\n  };\n\n  const fetchLogs = async (tasksPromise: Promise<StepsWatchUrl>) => {\n    const tasks = await tasksPromise;\n    let allLogs = '';\n    for (const currTask of sortedTaskRunNames) {\n      const task = tasks[currTask];\n      const steps = Object.keys(task.steps);\n      allLogs += `${task.name}\\n\\n`;\n      if (steps.length > 0) {\n        for (const step of steps) {\n          const { url, status } = task.steps[step];\n          const getContentPromise = coFetchText(url).then((logs) => {\n            return `${step.toUpperCase()}\\n\\n${logs}\\n\\n`;\n          });\n          allLogs +=\n            status === LOG_SOURCE_TERMINATED\n              ? // If we are done, we want this log content\n                // eslint-disable-next-line no-await-in-loop\n                await getContentPromise\n              : // If we are not done, let's not wait indefinitely\n                // eslint-disable-next-line no-await-in-loop\n                await Promise.race([\n                  getContentPromise,\n                  new Promise<string>((resolve) => {\n                    setTimeout(() => resolve(''), 1000);\n                  }),\n                ]);\n        }\n      } else {\n        // eslint-disable-next-line no-await-in-loop\n        allLogs += await getTaskRunLog(task.taskRunPath).then(\n          (log) => `${tasks[currTask].name.toUpperCase()}\\n\\n${log}\\n\\n`,\n        );\n      }\n    }\n    const buffer = new LineBuffer(null);\n    buffer.ingest(allLogs);\n    const blob = buffer.getBlob({\n      type: 'text/plain;charset=utf-8',\n    });\n    saveAs(blob, `${pipelineRunName}.log`);\n    return null;\n  };\n  return (): Promise<Error> => {\n    return fetchLogs(getWatchUrls());\n  };\n};\n","import { RootState } from '../redux';\n\nexport enum ActionType {\n  OpenOLS = 'openOLS',\n  CloseOLS = 'closeOLS',\n}\n\ntype CodeBlock = {\n  id: string;\n  value: string;\n};\n\n/* Note: Using Reducer and Selector from OLS plugin */\nexport const getOLSCodeBlock = ({ plugins }: RootState): CodeBlock =>\n  plugins?.ols?.get('codeBlock');\n","import { k8sKill, k8sList, k8sPatch } from '@console/internal/module/k8s';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind } from '../../../../types';\nimport { EventListenerKind, EventListenerKindTrigger } from '../../resource-types';\nimport { RemoveTriggerFormValues } from './types';\n\nexport const removeTrigger = async (values: RemoveTriggerFormValues, pipeline: PipelineKind) => {\n  const ns = pipeline.metadata.namespace;\n  const selectedTriggerTemplate = values.selectedTrigger;\n\n  // Remove the selected TriggerTemplate\n  await k8sKill(TriggerTemplateModel, {\n    metadata: { name: selectedTriggerTemplate, namespace: ns },\n  });\n\n  const triggerMatchesTriggerTemplate = ({ template }: EventListenerKindTrigger) => {\n    return template?.ref === selectedTriggerTemplate || template?.name === selectedTriggerTemplate;\n  };\n\n  // Get all the event listeners so we can update their references\n  const eventListeners: EventListenerKind[] = await k8sList(EventListenerModel, { ns });\n  const matchingEventListeners = eventListeners.filter(({ spec: { triggers } }) =>\n    triggers.find(triggerMatchesTriggerTemplate),\n  );\n\n  const singleTriggers = ({ spec: { triggers } }) => triggers.length === 1;\n\n  // Delete all EventListeners that only had the one trigger\n  const deletableEventListeners: EventListenerKind[] = matchingEventListeners.filter(\n    singleTriggers,\n  );\n  await Promise.all(\n    deletableEventListeners.map((eventListener) => k8sKill(EventListenerModel, eventListener)),\n  );\n\n  // Update all EventListeners that had more than one trigger\n  const updatableEventListeners: EventListenerKind[] = matchingEventListeners.filter(\n    (eventListener) => !singleTriggers(eventListener),\n  );\n  await Promise.all(\n    updatableEventListeners.map((eventListener) =>\n      k8sPatch(EventListenerModel, eventListener, [\n        {\n          op: 'replace',\n          path: '/spec/triggers',\n          value: eventListener.spec.triggers.filter(triggerMatchesTriggerTemplate),\n        },\n      ]),\n    ),\n  );\n\n  return Promise.resolve();\n};\n","import * as React from 'react';\nimport { Icon, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { global_warning_color_100 as warningColor } from '@patternfly/react-tokens/dist/js/global_warning_color_100';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { PipelineKind } from '../../../../types';\nimport TriggerTemplateSelector from './TriggerTemplateSelector';\n\ntype RemoveTriggerFormProps = {\n  pipeline: PipelineKind;\n};\n\nconst RemoveTriggerForm: React.FC<RemoveTriggerFormProps> = (props) => {\n  const { t } = useTranslation();\n  const { pipeline } = props;\n  const pipelineName = pipeline.metadata.name;\n\n  return (\n    <Split className=\"odc-modal-content\" hasGutter>\n      <SplitItem>\n        <Icon size=\"md\">\n          <ExclamationTriangleIcon color={warningColor.value} />\n        </Icon>\n      </SplitItem>\n      <SplitItem isFilled>\n        <p className=\"co-break-word\">\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Select the trigger to remove from pipeline <b>{{ pipelineName }}</b>.\n          </Trans>\n        </p>\n        <TriggerTemplateSelector\n          name=\"selectedTrigger\"\n          placeholder={t('pipelines-plugin~Select TriggerTemplate')}\n          pipeline={pipeline}\n        />\n      </SplitItem>\n    </Split>\n  );\n};\n\nexport default RemoveTriggerForm;\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { DropdownField } from '@console/shared/src';\nimport { PipelineKind } from '../../../../types';\nimport { RouteTemplate, usePipelineTriggerTemplateNames } from '../../utils/triggers';\n\nimport './TriggerTemplateSelector.scss';\n\ntype TriggerTemplateSelectorProps = {\n  name: string;\n  pipeline: PipelineKind;\n  placeholder: string;\n};\n\nconst TriggerTemplateSelector: React.FC<TriggerTemplateSelectorProps> = (props) => {\n  const { t } = useTranslation();\n  const { name, pipeline, placeholder } = props;\n  const {\n    metadata: { name: pipelineName, namespace },\n  } = pipeline;\n\n  const [field] = useField(name);\n  const selection = field.value;\n\n  const templateNames: RouteTemplate[] =\n    usePipelineTriggerTemplateNames(pipelineName, namespace) || [];\n  const items = templateNames.reduce(\n    (acc, { triggerTemplateName }) => ({ ...acc, [triggerTemplateName]: triggerTemplateName }),\n    {},\n  );\n\n  return (\n    <div className=\"odc-trigger-template-selector\">\n      <DropdownField\n        fullWidth\n        disabled={templateNames.length === 0}\n        items={items}\n        name={name}\n        title={placeholder}\n      />\n      {selection ? (\n        <div className=\"co-break-word odc-trigger-template-selector__confirmationMessage\">\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Are you sure you want to remove <b>{{ selection }}</b> from <b>{{ pipelineName }}</b>?\n          </Trans>\n        </div>\n      ) : (\n        <div className=\"odc-trigger-template-selector__pfModalHack\" />\n      )}\n    </div>\n  );\n};\n\nexport default TriggerTemplateSelector;\n","import i18next from 'i18next';\nimport * as yup from 'yup';\n\nexport const removeTriggerSchema = () =>\n  yup.object().shape({\n    selectedTrigger: yup.string().required(i18next.t('pipelines-plugin~Required')),\n  });\n","import * as React from 'react';\nimport { FormikProps } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport PipelineParameterSection from '../common/PipelineParameterSection';\nimport PipelineResourceSection from '../common/PipelineResourceSection';\nimport PipelineSecretSection from '../common/PipelineSecretSection';\nimport PipelineWorkspacesSection from '../common/PipelineWorkspacesSection';\nimport { StartPipelineFormValues } from './types';\n\nconst StartPipelineForm: React.FC<FormikProps<StartPipelineFormValues>> = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <PipelineParameterSection />\n      <PipelineResourceSection />\n      <PipelineWorkspacesSection />\n      <FormSection title={t('pipelines-plugin~Advanced options')} fullWidth>\n        <PipelineSecretSection />\n      </FormSection>\n    </>\n  );\n};\n\nexport default StartPipelineForm;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { CursorPosition, insertIntoValue } from './autoCompleteUtils';\n\ntype ElementType = HTMLInputElement | HTMLTextAreaElement;\ntype AutoCompleteHook = {\n  contentRefCallback: (contentNode: ElementType) => void;\n  focusTrapProps: {\n    active: boolean;\n    focusTrapOptions: {\n      clickOutsideDeactivates: boolean;\n      onDeactivate: () => void;\n      fallbackFocus: ElementType;\n    };\n  };\n  insertAutoComplete: (newValue: string) => void;\n  menuWidth: number;\n  options: string[];\n  popperProps: {\n    open: boolean;\n    onRequestClose: () => void;\n    reference: () => ElementType;\n  };\n};\n\ntype ShouldOpenCallback = (event) => boolean;\ntype MenuKeyWatcherHook = {\n  isOpen: boolean;\n  shouldOpen: ShouldOpenCallback;\n  closeMenu: () => void;\n};\n\ntype SetAutoCompleteCallback = (newValue: string) => void;\n\ntype SetFilterOptions = (filterValue: string) => void;\ntype FilterOptionsHook = [string[], SetFilterOptions];\n\nconst PARAM_REFERENCE = '$(';\nconst PARAM_REFERENCE_CHARS = PARAM_REFERENCE.split('');\n\n/**\n * Tracks open state + manages keystrokes to open.\n */\nconst useOpenMenuKeyWatcher = (): MenuKeyWatcherHook => {\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n\n  const shouldOpen = React.useCallback<ShouldOpenCallback>(\n    (event) => {\n      const { key, code, ctrlKey } = event;\n\n      if (code === 'Space' && ctrlKey) {\n        // Hotkey to open\n        setOpen(true);\n        return true;\n      }\n\n      if (!PARAM_REFERENCE_CHARS.includes(key) || isOpen) {\n        // Ignore event, does not apply to opening\n        return false;\n      }\n\n      const cursorPos = event.target.selectionStart;\n      // Go back the character we added and then one more to get the previous character\n      const lastCharacter = event.target.value[cursorPos - 2];\n\n      if (lastCharacter === PARAM_REFERENCE_CHARS[0] && key === PARAM_REFERENCE_CHARS[1]) {\n        // Manual open\n        setOpen(true);\n        return true;\n      }\n\n      return false;\n    },\n    [isOpen],\n  );\n\n  return { isOpen, shouldOpen, closeMenu: React.useCallback(() => setOpen(false), []) };\n};\n\n/**\n * Filters options that are provided based on a setFilter.\n */\nconst useFilterOptions = (options: string[]): FilterOptionsHook => {\n  type FilterMap = { [singleValue: string]: string };\n\n  const [filteredOptions, setFilteredOptions] = React.useState<string[]>(options);\n  const filterMappings = React.useRef<FilterMap>({});\n\n  React.useEffect(() => {\n    filterMappings.current = options.reduce((acc: FilterMap, option: string, idx: number) => {\n      const optionPartMap = option.split('.').reduce((optionAcc, optionPart: string) => {\n        return {\n          ...optionAcc,\n          // startsWith value + unique identifier to allow multiple overlapping parts\n          [`${optionPart}|${idx}`]: option,\n        };\n      }, {});\n\n      return {\n        ...acc,\n        ...optionPartMap,\n        [option]: option,\n      };\n    }, {});\n  }, [options]);\n\n  const setFilter: SetFilterOptions = React.useCallback(\n    (newFilterValue: string) => {\n      if (!newFilterValue) {\n        setFilteredOptions(options);\n        return;\n      }\n\n      const newOptions: string[] = _.uniq(\n        Object.keys(filterMappings.current)\n          .filter((value: string) => value.toLowerCase().startsWith(newFilterValue.toLowerCase()))\n          .map((value: string) => filterMappings.current[value]),\n      );\n      setFilteredOptions(newOptions);\n    },\n    [options],\n  );\n\n  return [filteredOptions, setFilter];\n};\n\n/**\n * Listens to the node in various ways to prefer functions of AutoComplete.\n */\nconst useNodeListener = (\n  cursorPosition: React.MutableRefObject<CursorPosition>,\n  menuOptions: MenuKeyWatcherHook,\n  filterOptions: FilterOptionsHook,\n  setFocusingOptions: (isFocusing: boolean) => void,\n  closeCleanup: () => void,\n): [React.MutableRefObject<ElementType>, (node: ElementType) => void] => {\n  const [node, setNode] = React.useState<ElementType>(null);\n  const nodeRef = React.useRef<ElementType>(null);\n  nodeRef.current = node;\n\n  const { isOpen, shouldOpen } = menuOptions;\n  const [, setFilter] = filterOptions;\n\n  const onKeyCallback = React.useCallback(\n    (e) => {\n      const applyFilterAtCursor = () => {\n        const filterValue = nodeRef.current.value.substring(\n          cursorPosition.current[0],\n          cursorPosition.current[1],\n        );\n        setFilter(filterValue);\n      };\n\n      if (isOpen) {\n        cursorPosition.current = [cursorPosition.current[0], nodeRef.current.selectionEnd];\n\n        if (cursorPosition.current[1] < cursorPosition.current[0]) {\n          // User moved before the start of the autoComplete trigger, close\n          closeCleanup();\n          return;\n        }\n\n        applyFilterAtCursor();\n      } else {\n        cursorPosition.current = [nodeRef.current.selectionStart, nodeRef.current.selectionEnd];\n        const isOpening = shouldOpen(e);\n\n        if (isOpening) {\n          // In the case they are highlighting text, invoke auto complete immediately on the text\n          applyFilterAtCursor();\n        }\n      }\n    },\n    [isOpen, setFilter, shouldOpen, closeCleanup, cursorPosition],\n  );\n\n  const focusDropdownCallback = React.useCallback(\n    (e) => {\n      if (!isOpen) return;\n\n      if (e.code === 'Tab' || e.code === 'ArrowDown') {\n        e.stopPropagation();\n        e.preventDefault();\n        setFocusingOptions(true);\n      }\n    },\n    [isOpen, setFocusingOptions],\n  );\n\n  React.useEffect(() => {\n    if (node) {\n      node.addEventListener('keydown', focusDropdownCallback);\n      node.addEventListener('keyup', onKeyCallback);\n    }\n\n    return () => {\n      if (node) {\n        node.removeEventListener('keydown', focusDropdownCallback);\n        node.removeEventListener('keyup', onKeyCallback);\n      }\n    };\n  }, [focusDropdownCallback, onKeyCallback, node]);\n\n  return [nodeRef, (contentNode) => setNode(contentNode)];\n};\n\n/**\n * Manages auto complete state.\n */\nconst useAutoComplete = (\n  autoCompleteValues: string[],\n  onAutoComplete: SetAutoCompleteCallback,\n): AutoCompleteHook => {\n  const cursorPosition = React.useRef<CursorPosition>([0, 0]);\n  const [focusingOptions, setFocusingOptions] = React.useState<boolean>(false);\n  const menuOptions = useOpenMenuKeyWatcher();\n  const filterOptions = useFilterOptions(autoCompleteValues);\n\n  const { isOpen, closeMenu } = menuOptions;\n  const [options, setFilter] = filterOptions;\n\n  const closeCleanup = React.useCallback(() => {\n    closeMenu();\n    setFilter('');\n    setFocusingOptions(false);\n    cursorPosition.current = [0, 0];\n  }, [closeMenu, setFilter]);\n\n  const [nodeRef, setNodeRef] = useNodeListener(\n    cursorPosition,\n    menuOptions,\n    filterOptions,\n    setFocusingOptions,\n    closeCleanup,\n  );\n\n  const insertAutoComplete = React.useCallback(\n    (newValue: string) => {\n      // Look for the PARAM_REFERENCE prefix to see if we need to add it\n      const leftCapturePoint = cursorPosition.current[0] - PARAM_REFERENCE.length;\n      const prefix =\n        leftCapturePoint >= 0\n          ? nodeRef.current.value.substr(leftCapturePoint, PARAM_REFERENCE.length)\n          : null;\n      const hasPrefix = prefix === PARAM_REFERENCE;\n\n      // Update the value + the node\n      const insertValue = `${hasPrefix ? '' : PARAM_REFERENCE}${newValue})`;\n      onAutoComplete(insertIntoValue(nodeRef.current.value, cursorPosition.current, insertValue));\n\n      // Make sure the cursor remains at the end of the inserted text so they can continue typing a prefix (if desired)\n      const cursorEndPoint: number = cursorPosition.current[0] + insertValue.length;\n      setTimeout(() => {\n        nodeRef.current.setSelectionRange(cursorEndPoint, cursorEndPoint);\n      }, 0);\n\n      closeCleanup();\n    },\n    [nodeRef, closeCleanup, onAutoComplete],\n  );\n\n  return {\n    contentRefCallback: setNodeRef,\n    focusTrapProps: {\n      active: focusingOptions,\n      focusTrapOptions: {\n        clickOutsideDeactivates: true,\n        onDeactivate: closeCleanup,\n        fallbackFocus: nodeRef.current,\n      },\n    },\n    insertAutoComplete,\n    menuWidth: nodeRef.current?.getBoundingClientRect().width || 300,\n    options,\n    popperProps: {\n      open: isOpen,\n      onRequestClose: closeCleanup,\n      reference: () => nodeRef.current,\n    },\n  };\n};\n\nexport default useAutoComplete;\n","import * as React from 'react';\nimport { FormGroup } from '@patternfly/react-core';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport { DropdownFieldProps, useFormikValidationFix } from '@console/shared';\nimport PipelineResourceParam from '../../pipeline-resource/PipelineResourceParam';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\nimport PipelineResourceDropdown from './PipelineResourceDropdown';\nimport { PipelineModalFormResource } from './types';\n\ntype PipelineResourceDropdownFieldProps = DropdownFieldProps & {\n  filterType?: string;\n};\nconst PipelineResourceDropdownField: React.FC<PipelineResourceDropdownFieldProps> = (props) => {\n  const { filterType, name, label } = props;\n\n  const [field] = useField<PipelineModalFormResource>(name);\n  const { values } = useFormikContext<FormikValues>();\n  const { namespace } = values;\n  const {\n    value: { selection },\n  } = field;\n  const creating = selection === CREATE_PIPELINE_RESOURCE;\n\n  useFormikValidationFix(field.value);\n\n  return (\n    <>\n      <FormGroup fieldId={name} label={label} isRequired>\n        <PipelineResourceDropdown\n          {...props}\n          autoSelect={selection === ''}\n          filterType={filterType}\n          namespace={namespace}\n          name={`${name}.selection`}\n        />\n      </FormGroup>\n\n      {creating && <PipelineResourceParam name={`${name}.data`} type={filterType} />}\n    </>\n  );\n};\n\nexport default PipelineResourceDropdownField;\n","import * as React from 'react';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { PipelineResourceType } from '../const';\nimport PipelineClusterOptions from './PipelineClusterOptions';\nimport PipelineGitOptions from './PipelineGitOptions';\nimport PipelineImageOptions from './PipelineImageOptions';\nimport PipelineStorageOptions from './PipelineStorageOptions';\n\nexport interface PipelineResourceParamProps {\n  name: string;\n  type: string;\n}\n\nconst PipelineResourceParam: React.FC<PipelineResourceParamProps> = (props) => {\n  const { name, type } = props;\n\n  const renderTypeFields = () => {\n    switch (type) {\n      case PipelineResourceType.git:\n        return <PipelineGitOptions prefixName={name} />;\n      case PipelineResourceType.image:\n        return <PipelineImageOptions prefixName={name} />;\n      case PipelineResourceType.cluster:\n        return <PipelineClusterOptions prefixName={name} />;\n      case PipelineResourceType.storage:\n        return <PipelineStorageOptions prefixName={name} />;\n      default:\n        return null;\n    }\n  };\n\n  return <FormSection fullWidth>{renderTypeFields()}</FormSection>;\n};\n\nexport default PipelineResourceParam;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, DroppableFileInputField } from '@console/shared';\n\ntype PipelineClusterOptionsProps = { prefixName: string };\n\nconst PipelineClusterOptions: React.FC<PipelineClusterOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.name`}\n        label={t('pipelines-plugin~Name')}\n        helpText={t('pipelines-plugin~Name of the cluster.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.url`}\n        label={t('pipelines-plugin~URL')}\n        helpText={t('pipelines-plugin~Host URL of the control plane node.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.username`}\n        label={t('pipelines-plugin~Username')}\n        helpText={t('pipelines-plugin~The user with access to the cluster.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.password}\n        name={`${prefixName}.params.password`}\n        label={t('pipelines-plugin~Password')}\n        helpText={t('pipelines-plugin~Please provide password.')}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.insecure`}\n        label={t('pipelines-plugin~Insecure')}\n        helpText={t(\n          'pipelines-plugin~Indicate server should be accessed without verifying the TLS certificate.',\n        )}\n      />\n      <DroppableFileInputField\n        name={`${prefixName}.secrets.cadata`}\n        label={t('pipelines-plugin~Cadata')}\n        helpText={t(\n          'pipelines-plugin~The PEM format certificate. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n        )}\n        required\n      />\n      <DroppableFileInputField\n        name={`${prefixName}.secrets.token`}\n        label={t('pipelines-plugin~Token')}\n        helpText={t(\n          'pipelines-plugin~Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n        )}\n        required\n      />\n    </>\n  );\n};\n\nexport default PipelineClusterOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineGitOptionsProps = { prefixName: string };\n\nconst PipelineGitOptions: React.FC<PipelineGitOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.url`}\n        label={t('pipelines-plugin~URL')}\n        helpText={t('pipelines-plugin~Please provide Git URL.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.revision`}\n        label={t('pipelines-plugin~Revision')}\n        helpText={t('pipelines-plugin~Please provide revisions. i.e master')}\n      />\n    </>\n  );\n};\n\nexport default PipelineGitOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineImageOptionsProps = { prefixName: string };\n\nconst PipelineImageOptions: React.FC<PipelineImageOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <InputField\n      type={TextInputTypes.text}\n      name={`${prefixName}.params.url`}\n      label={t('pipelines-plugin~URL')}\n      helpText={t('pipelines-plugin~Please provide Image URL.')}\n      required\n    />\n  );\n};\n\nexport default PipelineImageOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineStorageOptionsProps = { prefixName: string };\n\nconst PipelineStorageOptions: React.FC<PipelineStorageOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.type`}\n        label={t('pipelines-plugin~Type')}\n        helpText={t('pipelines-plugin~Represents the type of blob storage i.e gcs')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.location`}\n        label={t('pipelines-plugin~Location')}\n        helpText={t(\n          'pipelines-plugin~Represents the location of the blob storage i.e gs://some-private-bucket',\n        )}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.dir`}\n        label={t('pipelines-plugin~Directory')}\n        helpText={t('pipelines-plugin~Represents whether the blob storage is a directory or not')}\n      />\n    </>\n  );\n};\n\nexport default PipelineStorageOptions;\n","import * as React from 'react';\nimport { FormikValues, useField, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { FormSelectField, FormSelectFieldOption } from '@console/shared';\nimport { PipelineResourceModel } from '../../../../models';\nimport { PipelineResourceKind } from '../../../../types';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\n\nimport './PipelineResourceDropdown.scss';\n\ntype PipelineResourceDropdownProps = {\n  autoSelect?: boolean;\n  filterType: string;\n  name: string;\n  namespace: string;\n};\n\nconst PipelineResourceDropdown: React.FC<PipelineResourceDropdownProps> = (props) => {\n  const { t } = useTranslation();\n  const { autoSelect, filterType, name, namespace } = props;\n\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [, { touched }] = useField(name);\n\n  const [resources, loaded, error] = useK8sWatchResource<PipelineResourceKind[]>({\n    isList: true,\n    namespace,\n    kind: referenceForModel(PipelineResourceModel),\n  });\n\n  const availableResources: PipelineResourceKind[] = resources.filter(\n    (resource) => resource.spec.type === filterType,\n  );\n\n  const canAutoSelect = autoSelect && !touched && loaded && !error;\n  React.useEffect(() => {\n    if (canAutoSelect) {\n      if (availableResources.length === 0) {\n        setFieldValue(name, CREATE_PIPELINE_RESOURCE);\n      } else {\n        setFieldValue(name, availableResources[0].metadata.name);\n      }\n      setFieldTouched(name);\n    }\n  }, [canAutoSelect, name, availableResources, setFieldTouched, setFieldValue]);\n\n  const options: FormSelectFieldOption<string>[] = [\n    {\n      value: '',\n      label: t('pipelines-plugin~Select Pipeline resource'),\n      isPlaceholder: true,\n      isDisabled: true,\n    },\n    {\n      label: t('pipelines-plugin~Create Pipeline resource'),\n      value: CREATE_PIPELINE_RESOURCE,\n    },\n    ...availableResources.map(\n      (resource): FormSelectFieldOption => {\n        const resourceName = resource.metadata.name;\n        const url = _.find(resource.spec.params, ['name', 'url'])?.value || '';\n        const label = url.trim().length > 0 ? `${url} (${resourceName})` : resourceName;\n\n        return { label, value: resourceName };\n      },\n    ),\n  ];\n\n  if (!loaded) {\n    return <LoadingInline />;\n  }\n\n  return (\n    <FormSelectField\n      name={name}\n      className=\"odc-pipeline-resource-dropdown\"\n      options={options}\n      isDisabled={loaded && availableResources.length === 0}\n    />\n  );\n};\n\nexport default PipelineResourceDropdown;\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport {\n  associateServiceAccountToSecret,\n  getSecretAnnotations,\n} from '../../../../utils/pipeline-utils';\nimport { SecretAnnotationId } from '../../const';\nimport SecretForm from './SecretForm';\nimport SecretsList from './SecretsList';\nimport { CommonPipelineModalFormikValues } from './types';\nimport { advancedSectionValidationSchema } from './validation-utils';\n\nimport './PipelineSecretSection.scss';\n\nconst initialValues = {\n  secretName: '',\n  annotations: { key: SecretAnnotationId.Image, value: '' },\n  type: SecretType.dockerconfigjson,\n  formData: {},\n};\n\nconst PipelineSecretSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [secretOpenField] = useField<boolean>('secretOpen');\n  const {\n    setFieldValue,\n    values: { namespace },\n  } = useFormikContext<CommonPipelineModalFormikValues>();\n\n  const handleSubmit = (values, actions) => {\n    const newSecret = {\n      apiVersion: SecretModel.apiVersion,\n      kind: SecretModel.kind,\n      metadata: {\n        name: values.secretName,\n        namespace,\n        annotations: getSecretAnnotations(values.annotations),\n      },\n      type: values.type,\n      stringData: values.formData,\n    };\n    return k8sCreate(SecretModel, newSecret)\n      .then((resp) => {\n        setFieldValue(secretOpenField.name, false);\n        associateServiceAccountToSecret(\n          resp,\n          namespace,\n          values.annotations.key === SecretAnnotationId.Image,\n        );\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  const handleReset = (values, actions) => {\n    actions.resetForm({ values: initialValues, status: {} });\n    setFieldValue(secretOpenField.name, false);\n  };\n\n  return (\n    <ExpandCollapse\n      textExpanded={t('pipelines-plugin~Hide credential options')}\n      textCollapsed={t('pipelines-plugin~Show credential options')}\n    >\n      <div className=\"odc-pipeline-secret-section\">\n        <p>\n          {t(\n            'pipelines-plugin~The following secrets are available for all pipelines in this namespace to authenticate to the specified Git server or Image registry:',\n          )}\n        </p>\n        <div className=\"odc-pipeline-secret-section__secrets\">\n          <SecretsList namespace={namespace} />\n          {secretOpenField.value ? (\n            <div className=\"odc-pipeline-secret-section__secret-form\">\n              <Formik\n                initialValues={initialValues}\n                validationSchema={advancedSectionValidationSchema()}\n                onSubmit={handleSubmit}\n                onReset={handleReset}\n              >\n                {(formikProps) => <SecretForm {...formikProps} />}\n              </Formik>\n            </div>\n          ) : (\n            <Button\n              variant=\"link\"\n              onClick={() => {\n                setFieldValue(secretOpenField.name, true);\n              }}\n              className=\"odc-pipeline-secret-section__secret-action\"\n              icon={<PlusCircleIcon />}\n            >\n              {t('pipelines-plugin~Add Secret')}\n            </Button>\n          )}\n        </div>\n      </div>\n    </ExpandCollapse>\n  );\n};\n\nexport default PipelineSecretSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  SecretType,\n  BasicAuthSubform,\n  SSHAuthSubform,\n  CreateConfigSubform,\n} from '@console/internal/components/secrets/create-secret';\nimport { ButtonBar } from '@console/internal/components/utils';\nimport { DropdownField, InputField, ActionGroupWithIcons } from '@console/shared';\nimport { SecretAnnotationId } from '../../const';\nimport './SecretForm.scss';\n\nconst renderSecretForm = (\n  type: SecretType,\n  stringData: {\n    [key: string]: any;\n  },\n  onDataChanged: (value: string) => void,\n) => {\n  switch (type) {\n    case SecretType.basicAuth:\n      return (\n        <BasicAuthSubform onChange={onDataChanged} stringData={stringData[SecretType.basicAuth]} />\n      );\n    case SecretType.sshAuth:\n      return (\n        <SSHAuthSubform onChange={onDataChanged} stringData={stringData[SecretType.sshAuth]} />\n      );\n    case SecretType.dockerconfigjson:\n      return (\n        <CreateConfigSubform\n          onChange={onDataChanged}\n          stringData={stringData[SecretType.dockerconfigjson]}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\ninterface SecretFormValues {\n  secretName: string;\n  type: SecretType;\n  annotations: {\n    key: SecretAnnotationId;\n    value: string; // url\n  };\n  formData: any;\n}\n\nconst SecretForm: React.FC<FormikProps<SecretFormValues>> = ({\n  values,\n  setFieldValue,\n  setFieldTouched,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n}) => {\n  const { t } = useTranslation();\n  const [stringData, setStringData] = React.useState({\n    [SecretType.basicAuth]: {},\n    [SecretType.sshAuth]: {},\n    [SecretType.dockerconfigjson]: {},\n  });\n\n  const secretTypes = React.useMemo<Record<string, string>>(\n    () => ({\n      [SecretAnnotationId.Git]: t('pipelines-plugin~Git Server'),\n      [SecretAnnotationId.Image]: t('pipelines-plugin~Image Registry'),\n    }),\n    [t],\n  );\n\n  const authTypes = React.useMemo<Record<string, string>>(() => {\n    switch (values.annotations.key) {\n      case SecretAnnotationId.Git:\n        return {\n          [SecretType.basicAuth]: t('pipelines-plugin~Basic Authentication'),\n          [SecretType.sshAuth]: t('pipelines-plugin~SSH Key'),\n        };\n      case SecretAnnotationId.Image:\n        return {\n          [SecretType.basicAuth]: t('pipelines-plugin~Basic Authentication'),\n          [SecretType.dockerconfigjson]: t('pipelines-plugin~Image Registry Credentials'),\n        };\n      default:\n        return {};\n    }\n  }, [values.annotations.key, t]);\n\n  const clearServerURL = React.useCallback(() => {\n    setFieldValue('annotations', {\n      key: values.annotations.key,\n      value: '', // clear url\n    });\n    setFieldTouched('annotations', false);\n  }, [setFieldTouched, setFieldValue, values.annotations.key]);\n\n  React.useEffect(() => {\n    const availableAuthTypes = Object.keys(authTypes);\n    if (!availableAuthTypes.includes(values.type)) {\n      setFieldValue('type', SecretType.basicAuth);\n      clearServerURL();\n    }\n  }, [authTypes, values.type, setFieldValue, clearServerURL]);\n\n  // Uses a memo instead of const outside of the function so that we can add i18n right here\n  const helpText = React.useMemo(\n    () => ({\n      [SecretType.dockerconfigjson]: t(\n        'pipelines-plugin~The base server url (e.g. https://quay.io/)',\n      ),\n      [SecretType.basicAuth]: t('pipelines-plugin~The base server url (e.g. https://github.com)'),\n      [SecretType.sshAuth]: t(\n        'pipelines-plugin~Server hostname without schema or path (e.g. github.com)',\n      ),\n    }),\n    [t],\n  );\n\n  const setValues = (type: SecretType, data) => {\n    if (type === SecretType.dockerconfigjson) {\n      setFieldValue('formData', _.mapValues({ '.dockerconfigjson': data[type] }, JSON.stringify));\n    } else {\n      setFieldValue('formData', data[type]);\n    }\n    if (values.type !== type) {\n      clearServerURL();\n    }\n  };\n\n  const onDataChanged = (value: string) => {\n    setStringData((prevState) => {\n      setValues(values.type, { ...prevState, [values.type]: value });\n      return { ...prevState, [values.type]: value };\n    });\n  };\n\n  return (\n    <div className=\"odc-secret-form\">\n      <h1 className=\"co-section-heading-tertiary odc-secret-form__title\">\n        {t('pipelines-plugin~Create Secret')}\n      </h1>\n      <div className=\"form-group\">\n        <InputField\n          type={TextInputTypes.text}\n          name=\"secretName\"\n          label={t('pipelines-plugin~Secret name')}\n          helpText={t('pipelines-plugin~Unique name of the new secret.')}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <DropdownField\n          name=\"annotations.key\"\n          label={t('pipelines-plugin~Access to')}\n          helpText={t('pipelines-plugin~Designate provider to be authenticated.')}\n          items={secretTypes}\n          fullWidth\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <DropdownField\n          name=\"type\"\n          label={t('pipelines-plugin~Authentication type')}\n          items={authTypes}\n          title={authTypes[values.type]}\n          onChange={(type: SecretType) => setValues(type, stringData)}\n          fullWidth\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <InputField\n          name=\"annotations.value\"\n          label={t('pipelines-plugin~Server URL')}\n          helpText={helpText[values.type]}\n          type={TextInputTypes.text}\n          required\n        />\n      </div>\n      {renderSecretForm(values.type, stringData, onDataChanged)}\n      <ButtonBar errorMessage={status?.submitError} inProgress={isSubmitting}>\n        <ActionGroupWithIcons onSubmit={handleSubmit} onClose={handleReset} />\n      </ButtonBar>\n    </div>\n  );\n};\n\nexport default SecretForm;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport {\n  ResourceLink,\n  Firehose,\n  FirehoseResult,\n  FirehoseResource,\n} from '@console/internal/components/utils';\nimport { SecretModel, ServiceAccountModel } from '@console/internal/models';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { SecondaryStatus } from '@console/shared';\nimport { ServiceAccountType } from '../../../../utils/pipeline-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport './SecretsList.scss';\n\ntype SecretsProps = {\n  secrets?: FirehoseResult<SecretKind[]>;\n  serviceaccounts?: FirehoseResult<ServiceAccountType>;\n};\n\ntype SecretsListProps = {\n  namespace: string;\n};\n\nconst secretTypes = [SecretType.dockerconfigjson, SecretType.basicAuth, SecretType.sshAuth];\n\nconst Secrets: React.FC<SecretsProps> = ({ secrets, serviceaccounts }) => {\n  const { t } = useTranslation();\n  const serviceAccountSecrets = _.map(serviceaccounts.data.secrets, 'name');\n  const filterData = _.filter(\n    secrets.data,\n    (secret) =>\n      _.includes(secretTypes, secret.type) &&\n      _.includes(serviceAccountSecrets, secret.metadata.name),\n  );\n  const sortedFilterData = _.sortBy(filterData, (data) => data.metadata.name);\n\n  return (\n    <div className=\"odc-secrets-list\">\n      {sortedFilterData.map((secret) => {\n        return (\n          <ResourceLink\n            key={secret.metadata.uid}\n            kind={SecretModel.kind}\n            name={secret.metadata.name}\n            namespace={secret.metadata.namespace}\n            linkTo={false}\n          />\n        );\n      })}\n      {_.isEmpty(sortedFilterData) && (\n        <SecondaryStatus status={t('pipelines-plugin~No secrets found')} />\n      )}\n    </div>\n  );\n};\n\nconst SecretsList: React.FC<SecretsListProps> = ({ namespace }) => {\n  const resources: FirehoseResource[] = [\n    {\n      isList: true,\n      namespace,\n      kind: SecretModel.kind,\n      prop: SecretModel.plural,\n    },\n    {\n      isList: false,\n      namespace,\n      kind: ServiceAccountModel.kind,\n      prop: ServiceAccountModel.plural,\n      name: PIPELINE_SERVICE_ACCOUNT,\n    },\n  ];\n\n  return (\n    <Firehose resources={resources}>\n      <Secrets />\n    </Firehose>\n  );\n};\n\nexport default SecretsList;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { RedExclamationCircleIcon, WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ResourceDropdown, getFieldId, useFormikValidationFix } from '@console/shared';\nimport MultipleKeySelector from './MultipleKeySelector';\n\ninterface MultipleResourceKeySelectorProps {\n  label: string;\n  resourceModel: K8sKind;\n  required?: boolean;\n  resourceNameField: string;\n  resourceKeysField: string;\n  addString?: string;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst MultipleResourceKeySelector: React.FC<StateProps & MultipleResourceKeySelectorProps> = ({\n  label,\n  namespace,\n  resourceModel,\n  required,\n  resourceNameField,\n  resourceKeysField,\n  addString,\n}) => {\n  const { t } = useTranslation();\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [field, { touched, error }] = useField(resourceNameField);\n  const isValid = !(touched && error);\n  const fieldId = getFieldId(resourceNameField, 'res-dropdown');\n  const [keys, setKeys] = React.useState({});\n\n  useFormikValidationFix(field.value);\n\n  const resource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: resourceModel.kind,\n      isList: true,\n      namespace,\n      optional: true,\n    }),\n    [namespace, resourceModel.kind],\n  );\n\n  const [resources, loaded, loadError] = useK8sWatchResource(resource);\n\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n\n  const generateKeys = (resourceName: string) => {\n    const selectedResource: K8sResourceKind = _.find(resources, (res) => {\n      return _.get(res, 'metadata.name') === resourceName;\n    });\n    const keyMap = selectedResource?.data ?? {};\n    const itemKeys = Object.keys(keyMap).reduce((acc, key) => ({ ...acc, [key]: key }), {});\n    setKeys(itemKeys);\n  };\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={label}\n      className=\"odc-multiple-key-selector\"\n      isRequired={required}\n    >\n      <ResourceDropdown\n        resources={[\n          { kind: resourceModel.kind, loaded, loadError, data: resources as K8sResourceKind[] },\n        ]}\n        loaded={loaded}\n        loadError={loadError}\n        dataSelector={['metadata', 'name']}\n        selectedKey={field.value}\n        placeholder={t('pipelines-plugin~Select a {{label}}', { label: t(resourceModel.labelKey) })}\n        autocompleteFilter={autocompleteFilter}\n        dropDownClassName={cx({ 'dropdown--full-width': true })}\n        onChange={(value: string) => {\n          setFieldValue(resourceKeysField, undefined);\n          setFieldValue(resourceNameField, value);\n          setFieldTouched(resourceNameField, true);\n          generateKeys(value);\n        }}\n        showBadge\n      />\n      {field.value && !_.isEmpty(keys) && (\n        <MultipleKeySelector name={resourceKeysField} keys={keys} addString={addString} />\n      )}\n\n      {!isValid && (\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n              {error}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      )}\n    </FormGroup>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, MultipleResourceKeySelectorProps>(mapStateToProps)(\n  MultipleResourceKeySelector,\n);\n","import * as React from 'react';\nimport { TextInputTypes, Button, FormGroup, Tooltip, Flex, FlexItem } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { FieldArray, useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DropdownField, InputField, getFieldId, useFormikValidationFix } from '@console/shared';\nimport './MultipleKeySelector.scss';\n\ninterface MultipleKeySelectorProps {\n  name: string;\n  keys: { [key: string]: string };\n  addString?: string;\n  tooltip?: string;\n}\n\nconst MultipleKeySelector: React.FC<MultipleKeySelectorProps> = ({\n  name,\n  keys,\n  addString,\n  tooltip,\n}) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<FormikValues>();\n  const items = _.get(values, name, []);\n  useFormikValidationFix(items);\n  return (\n    <FieldArray\n      name={name}\n      key=\"multiple-key-selector\"\n      render={({ push, remove }) => {\n        return (\n          <FormGroup\n            fieldId={getFieldId(name, 'multiple-key-selector')}\n            label={t('pipelines-plugin~Items')}\n            className=\"odc-multiple-key-selector\"\n          >\n            {items.length > 0 &&\n              items.map((item, index) => {\n                const fieldKey = `${name}.${index}.${item.key}`;\n                return (\n                  <div className=\"form-group odc-multiple-key-selector__item\" key={fieldKey}>\n                    <Flex direction={{ default: 'column', lg: 'row' }}>\n                      <FlexItem grow={{ default: 'grow' }}>\n                        <DropdownField\n                          name={`${name}.${index}.key`}\n                          title={t('pipelines-plugin~Select a key')}\n                          items={keys}\n                          fullWidth\n                        />\n                      </FlexItem>\n                      <FlexItem grow={{ default: 'grow' }}>\n                        <InputField\n                          name={`${name}.${index}.path`}\n                          type={TextInputTypes.text}\n                          placeholder={t('pipelines-plugin~Enter a path')}\n                        />\n                      </FlexItem>\n                    </Flex>\n                    <div className=\"odc-multiple-key-selector__deleteButton\">\n                      <Tooltip content={tooltip || t('pipelines-plugin~Remove')}>\n                        <MinusCircleIcon aria-hidden=\"true\" onClick={() => remove(index)} />\n                      </Tooltip>\n                    </div>\n                  </div>\n                );\n              })}\n            <Button\n              variant=\"link\"\n              onClick={() => push({ key: '', path: '' })}\n              icon={<PlusCircleIcon />}\n              isInline\n            >\n              {addString || t('pipelines-plugin~Add items')}\n            </Button>\n          </FormGroup>\n        );\n      }}\n    />\n  );\n};\n\nexport default MultipleKeySelector;\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ResourceDropdownField } from '@console/shared';\nimport './PVCDropdown.scss';\n\ninterface PVCDropdownProps {\n  name: string;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst PVCDropdown: React.FC<PVCDropdownProps & StateProps> = ({ name, namespace }) => {\n  const { t } = useTranslation();\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n  const resources = [\n    {\n      isList: true,\n      kind: PersistentVolumeClaimModel.kind,\n      namespace,\n      prop: PersistentVolumeClaimModel.id,\n      optional: true,\n    },\n  ];\n  return (\n    <ResourceDropdownField\n      name={name}\n      className=\"odc-pvc-dropdown\"\n      resources={resources}\n      dataSelector={['metadata', 'name']}\n      placeholder={t('pipelines-plugin~Select a PVC')}\n      autocompleteFilter={autocompleteFilter}\n      fullWidth\n      showBadge\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, PVCDropdownProps>(mapStateToProps)(PVCDropdown);\n","import * as React from 'react';\nimport { FormGroup, Alert } from '@patternfly/react-core';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { AccessModeSelector } from '@console/app/src/components/access-modes/access-mode';\nimport { RadioInput } from '@console/internal/components//radio';\nimport {\n  getVolumeModeRadios,\n  initialAccessModes,\n  dropdownUnits,\n  getAccessModeForProvisioner,\n} from '@console/internal/components/storage/shared';\nimport { RequestSizeInput, ExpandCollapse } from '@console/internal/components/utils';\nimport { StorageClassDropdown } from '@console/internal/components/utils/storage-class-dropdown';\nimport { useFormikValidationFix } from '@console/shared/src/hooks';\nimport { cephStorageProvisioners } from '@console/shared/src/utils';\n\nimport './VolumeClaimTemplateForm.scss';\n\ninterface VolumeClaimTemplateFormProps {\n  name: string;\n  initialSizeValue?: string;\n  initialSizeUnit?: string;\n  initialVolumeMode?: string;\n}\n\ninterface RequestSize {\n  value: string;\n  unit: string;\n}\n\nconst VolumeClaimTemplateForm: React.FC<VolumeClaimTemplateFormProps> = ({\n  name,\n  initialSizeValue = '1',\n  initialSizeUnit = 'Gi',\n  initialVolumeMode = 'Filesystem',\n}) => {\n  const { t } = useTranslation();\n  const [field] = useField(name);\n  const initAccessModeHelp = t('pipelines-plugin~Permissions to the mounted drive.');\n  const [accessModeHelp, setAccessModeHelp] = React.useState(initAccessModeHelp);\n  const { setFieldValue, setFieldTouched, errors } = useFormikContext<FormikValues>();\n  const [allowedAccessModes, setAllowedAccessModes] = React.useState<string[]>(initialAccessModes);\n  const [volumeMode, setVolumeMode] = React.useState(initialVolumeMode);\n  const [accessMode, setAccessMode] = React.useState('ReadWriteOnce');\n  const [requestSizeError, setRequestSizeError] = React.useState(null);\n  const [requestSizeValue, setRequestSizeValue] = React.useState(initialSizeValue);\n  const [requestSizeUnit, setRequestSizeUnit] = React.useState(initialSizeUnit);\n  const [storageProvisioner, setStorageProvisioner] = React.useState('');\n  const [storageClass, setStorageClass] = React.useState('');\n  useFormikValidationFix(field.value);\n\n  const handleVolumeMode: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    setVolumeMode(event.currentTarget.value);\n  };\n\n  const handleStorageClass = (updatedStorageClass): void => {\n    const provisioner: string = updatedStorageClass?.provisioner || '';\n    // if the provisioner is unknown or no storage class selected, user should be able to set any access mode\n    const modes = getAccessModeForProvisioner(provisioner);\n    // setting message to display for various modes when a storage class of a know provisioner is selected\n    const displayMessage = modes\n      ? t('pipelines-plugin~Access mode is set by storage class and cannot be changed')\n      : t('pipelines-plugin~Permissions to the mounted drive');\n    setAccessMode('ReadWriteOnce');\n    setAccessModeHelp(displayMessage);\n    // setting accessMode to default with the change to Storage Class selection\n    setAllowedAccessModes(modes);\n    setStorageClass(updatedStorageClass?.metadata?.name);\n    setStorageProvisioner(provisioner);\n    if (storageProvisioner.includes(cephStorageProvisioners[1])) {\n      setVolumeMode('Filesystem');\n    }\n  };\n\n  const handleRequestSizeChange = (size: RequestSize): void => {\n    const { value, unit } = size;\n    setRequestSizeValue(value);\n    setRequestSizeUnit(unit);\n  };\n\n  React.useEffect(() => {\n    setRequestSizeError(null);\n    const volumeClaimTemplate = {\n      spec: {\n        accessModes: [accessMode],\n        storageClassName: storageClass,\n        volumeMode,\n        resources: {\n          requests: { storage: `${requestSizeValue}${requestSizeUnit}` },\n        },\n      },\n    };\n    if (!requestSizeValue || parseInt(requestSizeValue, 10) < 1) {\n      volumeClaimTemplate.spec.resources.requests.storage = null;\n      setRequestSizeError(t('pipelines-plugin~Size must be an integer greater than 0.'));\n    }\n\n    setFieldValue(name, volumeClaimTemplate);\n    setFieldTouched(name);\n  }, [\n    volumeMode,\n    accessMode,\n    requestSizeValue,\n    requestSizeUnit,\n    storageClass,\n    name,\n    setFieldTouched,\n    setFieldValue,\n    t,\n  ]);\n\n  const helpText = !requestSizeError\n    ? t(\n        'pipelines-plugin~This will create a PersistentVolumeClaim with a size of {{requestSizeValue}} {{requestSizeUnit}}.',\n        { requestSizeValue, requestSizeUnit },\n      )\n    : t('pipelines-plugin~This will create a PersistentVolumeClaim.');\n\n  return (\n    <FormGroup fieldId={name}>\n      {errors[name] && <Alert isInline variant=\"danger\" title={t('pipelines-plugin~Required')} />}\n      <p className=\"help-block\">{helpText}</p>\n      <ExpandCollapse\n        textExpanded={t('pipelines-plugin~Hide VolumeClaimTemplate options')}\n        textCollapsed={t('pipelines-plugin~Show VolumeClaimTemplate options')}\n      >\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <StorageClassDropdown\n            onChange={handleStorageClass}\n            id=\"storageclass-dropdown\"\n            data-test=\"storageclass-dropdown\"\n            describedBy=\"storageclass-dropdown-help\"\n            required={false}\n            name=\"storageClass\"\n          />\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <AccessModeSelector\n            onChange={setAccessMode}\n            provisioner={storageProvisioner}\n            loaded\n            availableAccessModes={allowedAccessModes}\n            description={accessModeHelp}\n            ignoreReadOnly\n          />\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <label className=\"control-label co-required\" htmlFor=\"request-size-input\">\n            {t('pipelines-plugin~Size')}\n          </label>\n          <RequestSizeInput\n            name=\"requestSize\"\n            required\n            onChange={handleRequestSizeChange}\n            defaultRequestSizeUnit={requestSizeUnit}\n            defaultRequestSizeValue={requestSizeValue}\n            dropdownUnits={dropdownUnits}\n            describedBy=\"request-size-help\"\n            inputID=\"request-size-input\"\n            data-test-id=\"pvc-size-input\"\n          />\n          {requestSizeError ? (\n            <p className=\"pf-v5-c-form__helper-text pf-m-error\">{requestSizeError}</p>\n          ) : (\n            <p className=\"help-block\">{t('pipelines-plugin~Desired storage capacity')}</p>\n          )}\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <label className=\"control-label\" htmlFor=\"volume-mode\">\n            {t('pipelines-plugin~Volume Mode')}\n          </label>\n          <FormGroup fieldId=\"volumeMode\" data-test-id=\"volumeModeRadio\">\n            {getVolumeModeRadios().map((radio) => (\n              <RadioInput\n                {...radio}\n                key={radio.value}\n                onChange={handleVolumeMode}\n                inline\n                checked={radio.value === volumeMode}\n                name={`${name}.volumeMode`}\n              />\n            ))}\n          </FormGroup>\n        </div>\n      </ExpandCollapse>\n    </FormGroup>\n  );\n};\n\nexport default VolumeClaimTemplateForm;\n","import * as React from 'react';\nimport { FormikProps } from 'formik';\nimport { useAddTriggerParams } from '../../../shared/common/auto-complete/autoCompleteValueParsers';\nimport PipelineParameterSection from '../common/PipelineParameterSection';\nimport PipelineResourceSection from '../common/PipelineResourceSection';\nimport PipelineWorkspacesSection from '../common/PipelineWorkspacesSection';\nimport TriggerBindingSection from './TriggerBindingSection';\nimport { AddTriggerFormValues } from './types';\n\nconst AddTriggerForm: React.FC<FormikProps<AddTriggerFormValues>> = () => {\n  const autoCompleteValues: string[] = useAddTriggerParams();\n\n  return (\n    <>\n      <TriggerBindingSection />\n      <PipelineParameterSection autoCompleteValues={autoCompleteValues} />\n      <PipelineResourceSection />\n      <PipelineWorkspacesSection />\n    </>\n  );\n};\n\nexport default AddTriggerForm;\n","import * as React from 'react';\nimport { Badge, ExpandableSection, FormHelperText } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { TriggerBindingKind, TriggerBindingParam } from '../../resource-types';\nimport { usePipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport TriggerBindingSelector from './TriggerBindingSelector';\nimport { AddTriggerFormValues } from './types';\n\nimport './TriggerBindingSection.scss';\n\nconst TriggerBindingSection: React.FC = () => {\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<AddTriggerFormValues>();\n  const [bindingVars, setBindingVars] = React.useState<TriggerBindingParam[]>(null);\n\n  // Starting with Pipeline Operator 1.1 (Tekton Triggers 0.6) we should use a new param name.\n  const pipelineOperatorVersion = usePipelineOperatorVersion(values.namespace);\n  const paramPrefix =\n    pipelineOperatorVersion?.major === 0 ||\n    (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n      ? 'params.'\n      : 'tt.params.';\n\n  const updateTriggerBindingVariables = React.useCallback(\n    (selectedTriggerBinding: TriggerBindingKind) => {\n      setBindingVars(selectedTriggerBinding.spec.params);\n      setFieldValue('triggerBinding.resource', selectedTriggerBinding);\n    },\n    [setFieldValue],\n  );\n\n  return (\n    <div className=\"odc-trigger-binding-section\">\n      <FormSection title={t('pipelines-plugin~Webhook')} fullWidth>\n        <TriggerBindingSelector\n          description={t(\n            'pipelines-plugin~Select your Git provider type to be associated with the Trigger.',\n          )}\n          label={t('pipelines-plugin~Git provider type')}\n          onChange={updateTriggerBindingVariables}\n        />\n        {bindingVars && (\n          <ExpandableSection\n            toggleTextExpanded={t('pipelines-plugin~Hide variables')}\n            toggleTextCollapsed={t('pipelines-plugin~Show variables')}\n          >\n            <div className=\"odc-trigger-binding-section__variable-container\">\n              <p className=\"odc-trigger-binding-section__variable-descriptor\">\n                {t(\n                  'pipelines-plugin~The following variables can be used in the Parameters or when created new Resources.',\n                )}\n              </p>\n              {bindingVars.map(({ name }) => (\n                <Badge key={name} className=\"odc-trigger-binding-section__variable-badge\" isRead>\n                  {name}\n                </Badge>\n              ))}\n            </div>\n            <FormHelperText className=\"odc-trigger-binding-section__variable-help-text\">\n              {t('pipelines-plugin~Use this format when you reference variables in this form: ')}\n              <code className=\"co-code\">{`$(${paramPrefix}parameter)`}</code>\n            </FormHelperText>\n          </ExpandableSection>\n        )}\n      </FormSection>\n    </div>\n  );\n};\n\nexport default TriggerBindingSection;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport { referenceForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ResourceDropdownField } from '@console/shared';\nimport { ClusterTriggerBindingModel, TriggerBindingModel } from '../../../../models';\nimport { TriggerBindingKind } from '../../resource-types';\nimport { AddTriggerFormValues } from './types';\n\ntype TriggerBindingSelectorProps = {\n  description?: string;\n  label?: string;\n  onChange: (selectedTriggerBinding: TriggerBindingKind) => void;\n};\n\nconst KEY_DIVIDER = '~';\n\nconst TriggerBindingSelector: React.FC<TriggerBindingSelectorProps> = (props) => {\n  const { t } = useTranslation();\n  const { description, label = t(TriggerBindingModel.labelKey), onChange } = props;\n  const { values } = useFormikContext<AddTriggerFormValues>();\n  const autoCompleteFilter = (strText: string, item: React.ReactElement): boolean =>\n    fuzzy(strText, item?.props?.name);\n  const onTriggerChange = (key: string, value: string, selectedResource: TriggerBindingKind) => {\n    if (selectedResource) {\n      onChange && onChange(selectedResource);\n    }\n  };\n\n  return (\n    <ResourceDropdownField\n      name=\"triggerBinding.name\"\n      resources={[\n        {\n          isList: true,\n          namespace: values.namespace,\n          kind: referenceForModel(TriggerBindingModel),\n          prop: 'triggerBindingData',\n          optional: true,\n        },\n        {\n          isList: true,\n          kind: referenceForModel(ClusterTriggerBindingModel),\n          prop: 'clusterTriggerBindingData',\n          optional: true,\n        },\n      ]}\n      autocompleteFilter={autoCompleteFilter}\n      dataSelector={['metadata', 'name']}\n      customResourceKey={(key: string, resource: K8sResourceKind) => {\n        const { kind } = resource;\n        const order = kind === ClusterTriggerBindingModel.kind ? 2 : 1;\n        return `${order}${KEY_DIVIDER}${key}`;\n      }}\n      fullWidth\n      helpText={description}\n      label={label}\n      placeholder={t('pipelines-plugin~Select {{label}}', { label })}\n      title={t('pipelines-plugin~Select {{label}}', { label })}\n      showBadge\n      onChange={onTriggerChange}\n    />\n  );\n};\n\nexport default TriggerBindingSelector;\n","export const TRIGGER_BINDING_EMPTY = '#empty-trigger-binding#';\n","import * as React from 'react';\nimport { SortByDirection } from '@patternfly/react-table';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { Table } from '@console/internal/components/factory';\nimport { useUserSettings } from '@console/shared/src';\nimport { PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY } from '../../../const';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport { usePipelineOperatorVersion } from '../../pipelines/utils/pipeline-operator';\nimport { getPipelineRunVulnerabilities } from '../hooks/usePipelineRunVulnerabilities';\nimport PipelineRunHeader from './PipelineRunHeader';\nimport PipelineRunRow from './PipelineRunRow';\n\nimport './PipelineRunList.scss';\n\ntype PipelineRunListProps = {\n  namespace: string;\n  loaded?: boolean;\n  data?: PipelineRunKind[];\n  customData?: any;\n};\n\nexport const PipelineRunList: React.FC<PipelineRunListProps> = (props) => {\n  const { t } = useTranslation();\n  const { namespace, loaded, data, customData } = props;\n  const operatorVersion = usePipelineOperatorVersion(namespace);\n  const activePerspective = useActivePerspective()[0];\n  const [, setPreferredTab, preferredTabLoaded] = useUserSettings<string>(\n    PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY,\n    'pipelines',\n  );\n  React.useEffect(() => {\n    if (preferredTabLoaded && activePerspective === 'dev') {\n      setPreferredTab('pipeline-runs');\n    }\n  }, [activePerspective, preferredTabLoaded, setPreferredTab]);\n\n  const onRowsRendered = ({ stopIndex }) => {\n    if (loaded && stopIndex === data.length - 1) {\n      customData?.nextPage?.();\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~PipelineRuns')}</title>\n      </Helmet>\n      <Table\n        {...props}\n        aria-label={t(PipelineRunModel.labelPluralKey)}\n        defaultSortField=\"status.startTime\"\n        defaultSortOrder={SortByDirection.desc}\n        Header={PipelineRunHeader}\n        Row={PipelineRunRow}\n        customSorts={{\n          vulnerabilities: (obj: PipelineRunKind) => {\n            const scanResults = getPipelineRunVulnerabilities(obj);\n            if (!scanResults?.vulnerabilities) {\n              return -1;\n            }\n            // Expect no more than 999 of any one severity\n            return (\n              (scanResults.vulnerabilities.critical ?? 0) * 1000000000 +\n              (scanResults.vulnerabilities.high ?? 0) * 1000000 +\n              (scanResults.vulnerabilities.medium ?? 0) * 1000 +\n              (scanResults.vulnerabilities.low ?? 0)\n            );\n          },\n        }}\n        customData={{ operatorVersion }}\n        onRowsRendered={onRowsRendered}\n        virtualize\n      />\n    </>\n  );\n};\n\nexport default PipelineRunList;\n","import * as React from 'react';\nimport { PipelineRunKind } from '../../../types';\n\nconst SCAN_OUTPUT_SUFFIX = 'SCAN_OUTPUT';\n\nexport type ScanResults = {\n  vulnerabilities?: {\n    critical: number;\n    high: number;\n    medium: number;\n    low: number;\n  };\n};\n\nexport const getPipelineRunVulnerabilities = (pipelineRun: PipelineRunKind): ScanResults => {\n  const results = pipelineRun.status?.results || pipelineRun.status?.pipelineResults;\n  return results?.reduce((acc, result) => {\n    if (result.name?.endsWith(SCAN_OUTPUT_SUFFIX)) {\n      if (!acc.vulnerabilities) {\n        acc.vulnerabilities = { critical: 0, high: 0, medium: 0, low: 0 };\n      }\n      try {\n        const taskVulnerabilities = JSON.parse(result.value);\n        if (taskVulnerabilities.vulnerabilities) {\n          acc.vulnerabilities.critical += taskVulnerabilities.vulnerabilities.critical || 0;\n          acc.vulnerabilities.high += taskVulnerabilities.vulnerabilities.high || 0;\n          acc.vulnerabilities.medium += taskVulnerabilities.vulnerabilities.medium || 0;\n          acc.vulnerabilities.low += taskVulnerabilities.vulnerabilities.low || 0;\n        }\n      } catch (e) {\n        // ignore\n      }\n    }\n    return acc;\n  }, {} as ScanResults);\n};\n\nexport const usePipelineRunVulnerabilities = (pipelineRun: PipelineRunKind): ScanResults =>\n  React.useMemo(() => {\n    if (!pipelineRun) {\n      return null;\n    }\n\n    return getPipelineRunVulnerabilities(pipelineRun);\n  }, [pipelineRun]);\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = {\n  name: '',\n  namespace: '',\n  vulnerabilities: 'pf-m-hidden pf-m-visible-on-md',\n  status: 'pf-m-hidden pf-m-visible-on-sm',\n  taskStatus: 'pf-m-hidden pf-m-visible-on-lg',\n  started: 'pf-m-hidden pf-m-visible-on-lg',\n  duration: 'pf-m-hidden pf-m-visible-on-xl',\n  actions: Kebab.columnClass,\n};\n","module.exports = __webpack_public_path__ + \"assets/packages/pipelines-plugin/src/images/signed-badge.svg\";","import * as React from 'react';\nimport classNames from 'classnames';\nimport './HorizontalStackedBars.scss';\n\nexport type StackedValue = {\n  color: string;\n  name: string;\n  size: number;\n};\n\nexport type HorizontalStackedBarsProps = {\n  barGap?: number;\n  height?: number | string;\n  inline?: boolean;\n  values: StackedValue[];\n  width?: number | string;\n};\n\nconst HorizontalStackedBars: React.FC<HorizontalStackedBarsProps> = ({\n  barGap,\n  height,\n  inline,\n  values,\n  width,\n}) => {\n  return (\n    <div\n      className={classNames('odc-horizontal-stacked-bars', { 'is-inline': inline })}\n      style={{ height, width, ['--bar-gap' as any]: barGap && `${barGap}px` }}\n    >\n      <div className=\"odc-horizontal-stacked-bars__bars\">\n        {values.map(({ color, name, size }) => (\n          <div\n            key={name}\n            className=\"odc-horizontal-stacked-bars__data-bar\"\n            style={{\n              background: color,\n              flexGrow: size,\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HorizontalStackedBars;\n","import { PipelineKind, PipelineRunKind, TaskRunKind } from '../../../types';\nimport { getTaskStatus, TaskStatus } from '../../../utils/pipeline-augment';\nimport { usePipelineFromPipelineRun } from './usePipelineFromPipelineRun';\n\nexport const useTaskStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const pipeline: PipelineKind = usePipelineFromPipelineRun(pipelineRun);\n  return getTaskStatus(pipelineRun, pipeline, taskRuns);\n};\n","import * as React from 'react';\nimport { ComputedStatus } from '../../../types';\nimport { TaskStatus, getRunStatusColor } from '../../../utils/pipeline-augment';\nimport './TaskStatusTooltip.scss';\n\ninterface TaskStatusToolTipProps {\n  taskStatus: TaskStatus;\n}\n\nconst TaskStatusToolTip: React.FC<TaskStatusToolTipProps> = ({ taskStatus }) => {\n  return (\n    <div className=\"odc-task-status-tooltip\">\n      {Object.keys(ComputedStatus).map((status) => {\n        const { message, pftoken } = getRunStatusColor(status);\n        return taskStatus[status] ? (\n          <React.Fragment key={status}>\n            <div\n              className=\"odc-task-status-tooltip__legend\"\n              style={{ background: pftoken.value }}\n            />\n            <div>\n              {status === ComputedStatus.PipelineNotStarted ||\n              status === ComputedStatus.FailedToStart\n                ? message\n                : `${taskStatus[status]} ${message}`}\n            </div>\n          </React.Fragment>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport default TaskStatusToolTip;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { coFetchText } from '@console/internal/co-fetch';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { PodModel } from '@console/internal/models';\nimport { resourceURL } from '@console/internal/module/k8s';\n\ntype LogSnippetFromPodProps = {\n  children: (logSnippet: string) => React.ReactNode;\n  containerName: string;\n  namespace: string;\n  podName: string;\n  title: string;\n};\n\nconst LogSnippetFromPod: React.FC<LogSnippetFromPodProps> = ({\n  children,\n  containerName,\n  namespace,\n  podName,\n  title,\n}) => {\n  const { t } = useTranslation();\n  const [logSnippet, setLogSnippet] = React.useState<string>(null);\n  const [logError, setLogError] = React.useState<string>(null);\n\n  React.useEffect(() => {\n    const urlOpts = {\n      ns: namespace,\n      name: podName,\n      path: 'log',\n      queryParams: {\n        container: containerName,\n        tailLines: '5',\n      },\n    };\n    const watchURL = resourceURL(PodModel, urlOpts);\n    coFetchText(watchURL)\n      .then((logContent: string) => {\n        setLogSnippet(logContent);\n      })\n      .catch((error) => {\n        setLogError(error?.message || t('pipelines-plugin~Unknown error retrieving logs'));\n      });\n  }, [containerName, namespace, podName, t]);\n\n  if (logError) {\n    return (\n      <Alert isInline title={title} variant=\"danger\">\n        {logError}\n      </Alert>\n    );\n  }\n\n  if (!logSnippet) {\n    return <LoadingInline />;\n  }\n\n  return <>{children(logSnippet)}</>;\n};\n\nexport default LogSnippetFromPod;\n","import * as React from 'react';\nimport {\n  CriticalRiskIcon,\n  AngleDoubleDownIcon,\n  AngleDoubleUpIcon,\n  EqualsIcon,\n} from '@patternfly/react-icons/dist/js/icons';\nimport { global_palette_blue_300 as blueColor } from '@patternfly/react-tokens/dist/js/global_palette_blue_300';\nimport { global_palette_gold_400 as goldColor } from '@patternfly/react-tokens/dist/js/global_palette_gold_400';\nimport { global_palette_orange_300 as orangeColor } from '@patternfly/react-tokens/dist/js/global_palette_orange_300';\nimport { global_palette_red_200 as redColor } from '@patternfly/react-tokens/dist/js/global_palette_red_200';\nimport i18n from 'i18next';\nimport { PipelineRunKind } from '../../../types';\nimport { usePipelineRunVulnerabilities } from '../hooks/usePipelineRunVulnerabilities';\n\nimport './PipelineRunVulnerabilities.scss';\n\nexport const CriticalIcon = () => <CriticalRiskIcon title=\"Critical\" color={redColor.value} />;\nexport const HighIcon = () => <AngleDoubleUpIcon title=\"High\" color={orangeColor.value} />;\nexport const MediumIcon = () => <EqualsIcon title=\"Medium\" color={goldColor.value} />;\nexport const LowIcon = () => <AngleDoubleDownIcon title=\"Low\" color={blueColor.value} />;\n\ntype PipelineRunVulnerabilitiesProps = {\n  pipelineRun: PipelineRunKind;\n  condensed?: boolean;\n};\n\nconst PipelineRunVulnerabilities: React.FC<PipelineRunVulnerabilitiesProps> = ({\n  pipelineRun,\n  condensed,\n}) => {\n  const scanResults = usePipelineRunVulnerabilities(pipelineRun);\n\n  return scanResults?.vulnerabilities ? (\n    <div\n      className=\"opp-vulnerabilities\"\n      data-test={`${pipelineRun?.metadata?.name}-vulnerabilities`}\n    >\n      <div className=\"opp-vulnerabilities__severity\">\n        <span className=\"opp-vulnerabilities__severity-status\">\n          <CriticalIcon />\n          {!condensed ? i18n.t('pipelines-plugin~Critical') : null}\n        </span>\n        <span className=\"opp-vulnerabilities__severity-count\">\n          {scanResults.vulnerabilities.critical}\n        </span>\n      </div>\n      <div className=\"opp-vulnerabilities__severity\">\n        <span className=\"opp-vulnerabilities__severity-status\">\n          <HighIcon />\n          {!condensed ? i18n.t('pipelines-plugin~High') : null}\n        </span>\n        <span className=\"opp-vulnerabilities__severity-count\">\n          {scanResults.vulnerabilities.high}\n        </span>\n      </div>\n      <div className=\"opp-vulnerabilities__severity\">\n        <span className=\"opp-vulnerabilities__severity-status\">\n          <MediumIcon />\n          {!condensed ? i18n.t('pipelines-plugin~Medium') : null}\n        </span>\n        <span className=\"opp-vulnerabilities__severity-count\">\n          {scanResults.vulnerabilities.medium}\n        </span>\n      </div>\n      <div className=\"opp-vulnerabilities__severity\">\n        <span className=\"opp-vulnerabilities__severity-status\">\n          <LowIcon />\n          {!condensed ? i18n.t('pipelines-plugin~Low') : null}\n        </span>\n        <span className=\"opp-vulnerabilities__severity-count\">\n          {scanResults.vulnerabilities.low}\n        </span>\n      </div>\n    </div>\n  ) : (\n    <div>-</div>\n  );\n};\n\nexport default PipelineRunVulnerabilities;\n","import * as React from 'react';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { CompressIcon, DownloadIcon, ExpandIcon } from '@patternfly/react-icons/dist/js/icons';\nimport classNames from 'classnames';\nimport { saveAs } from 'file-saver';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PodKind, WatchK8sResource } from '@console/internal/module/k8s';\nimport { useFullscreen } from '@console/shared';\nimport { TaskRunKind } from '../../../types';\nimport { MultiStreamLogs } from './MultiStreamLogs';\nimport { TektonTaskRunLog } from './TektonTaskRunLog';\n\ntype LogsWrapperComponentProps = {\n  taskName?: string;\n  downloadAllLabel?: string;\n  onDownloadAll?: () => Promise<Error>;\n  taskRun?: TaskRunKind;\n  resource?: WatchK8sResource;\n};\n\nconst LogsWrapperComponent: React.FC<LogsWrapperComponentProps> = ({\n  resource,\n  taskRun,\n  taskName,\n  onDownloadAll,\n  downloadAllLabel = 'Download all',\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const resourceRef = React.useRef(null);\n  const [obj, loaded, error] = useK8sWatchResource<PodKind>(resource);\n  const [isFullscreen, fullscreenRef, fullscreenToggle] = useFullscreen<HTMLDivElement>();\n  const [downloadAllStatus, setDownloadAllStatus] = React.useState(false);\n  const currentLogGetterRef = React.useRef<() => string>();\n\n  if (loaded && !error && resource.name === obj.metadata.name) {\n    resourceRef.current = obj;\n  } else if (error) {\n    resourceRef.current = null;\n  }\n\n  const downloadLogs = () => {\n    if (!currentLogGetterRef.current) return;\n    const logString = currentLogGetterRef.current();\n    const blob = new Blob([logString], {\n      type: 'text/plain;charset=utf-8',\n    });\n    saveAs(blob, `${taskName}.log`);\n  };\n  const setLogGetter = React.useCallback((getter) => (currentLogGetterRef.current = getter), []);\n\n  const startDownloadAll = () => {\n    setDownloadAllStatus(true);\n    onDownloadAll()\n      .then(() => {\n        setDownloadAllStatus(false);\n      })\n      .catch((err: Error) => {\n        setDownloadAllStatus(false);\n        // eslint-disable-next-line no-console\n        console.warn(err.message || 'Error downloading logs.');\n      });\n  };\n\n  return (\n    <div ref={fullscreenRef} className=\"odc-multi-stream-logs\">\n      <Flex\n        className={(classNames as any)({\n          'odc-multi-stream-logs--fullscreen': isFullscreen,\n        })}\n      >\n        <FlexItem className=\"odc-multi-stream-logs__button\" align={{ default: 'alignRight' }}>\n          <Button variant=\"link\" onClick={downloadLogs} isInline>\n            <DownloadIcon className=\"odc-multi-stream-logs__icon\" />\n            {t('pipelines-plugin~Download')}\n          </Button>\n        </FlexItem>\n        <FlexItem className=\"odc-multi-stream-logs__divider\">|</FlexItem>\n        {onDownloadAll && (\n          <>\n            <FlexItem className=\"odc-multi-stream-logs__button\">\n              <Button\n                variant=\"link\"\n                onClick={startDownloadAll}\n                isDisabled={downloadAllStatus}\n                isInline\n              >\n                <DownloadIcon className=\"odc-multi-stream-logs__icon\" />\n                {downloadAllLabel || t('pipelines-plugin~Download all')}\n                {downloadAllStatus && <LoadingInline />}\n              </Button>\n            </FlexItem>\n            <FlexItem className=\"odc-multi-stream-logs__divider\">|</FlexItem>\n          </>\n        )}\n        {fullscreenToggle && (\n          <FlexItem className=\"odc-multi-stream-logs__button\">\n            <Button variant=\"link\" onClick={fullscreenToggle} isInline>\n              {isFullscreen ? (\n                <>\n                  <CompressIcon className=\"odc-multi-stream-logs__icon\" />\n                  {t('pipelines-plugin~Collapse')}\n                </>\n              ) : (\n                <>\n                  <ExpandIcon className=\"odc-multi-stream-logs__icon\" />\n                  {t('pipelines-plugin~Expand')}\n                </>\n              )}\n            </Button>\n          </FlexItem>\n        )}\n      </Flex>\n      {!error ? (\n        <MultiStreamLogs\n          {...props}\n          taskName={taskName}\n          resource={resourceRef.current}\n          setCurrentLogsGetter={setLogGetter}\n        />\n      ) : (\n        <TektonTaskRunLog taskRun={taskRun} setCurrentLogsGetter={setLogGetter} />\n      )}\n    </div>\n  );\n};\n\nexport default LogsWrapperComponent;\n","import * as React from 'react';\nimport { LoadingInline, LOG_SOURCE_WAITING } from '@console/internal/components/utils';\nimport { ContainerStatus, PodKind, ContainerSpec } from '@console/internal/module/k8s';\nimport { useScrollDirection, ScrollDirection } from '@console/shared';\nimport { containerToLogSourceStatus } from '../../../utils/pipeline-utils';\nimport Logs from './Logs';\nimport { getRenderContainers } from './logs-utils';\n\nimport './MultiStreamLogs.scss';\n\ntype MultiStreamLogsProps = {\n  resource: PodKind;\n  taskName?: string;\n  setCurrentLogsGetter?: (getter: () => string) => void;\n};\n\nexport const MultiStreamLogs: React.FC<MultiStreamLogsProps> = ({\n  resource,\n  taskName,\n  setCurrentLogsGetter,\n}) => {\n  const scrollPane = React.useRef<HTMLDivElement>();\n  const completedRef = React.useRef<boolean[]>([]);\n  const [renderToCount, setRenderToCount] = React.useState(0);\n  const [scrollDirection, handleScrollCallback] = useScrollDirection();\n  const { containers, stillFetching } = getRenderContainers(resource);\n  const dataRef = React.useRef<ContainerSpec[]>(null);\n  dataRef.current = containers;\n\n  React.useEffect(() => {\n    setCurrentLogsGetter(() => {\n      return scrollPane.current?.innerText;\n    });\n  }, [setCurrentLogsGetter]);\n\n  const handleComplete = React.useCallback((containerName) => {\n    const index = dataRef.current.findIndex(({ name }) => name === containerName);\n    completedRef.current[index] = true;\n    const newRenderTo = dataRef.current.findIndex((c, i) => completedRef.current[i] !== true);\n    if (newRenderTo === -1) {\n      setRenderToCount(dataRef.current.length);\n    } else {\n      setRenderToCount(newRenderTo);\n    }\n  }, []);\n\n  const autoScroll =\n    scrollDirection == null || scrollDirection !== ScrollDirection.scrolledToBottom;\n\n  const containerStatus: ContainerStatus[] = resource?.status?.containerStatuses ?? [];\n  return (\n    <>\n      <div className=\"odc-multi-stream-logs__taskName\" data-test-id=\"logs-taskName\">\n        {taskName}\n        {stillFetching && (\n          <span className=\"odc-multi-stream-logs__taskName__loading-indicator\">\n            <LoadingInline />\n          </span>\n        )}\n      </div>\n      <div\n        className=\"odc-multi-stream-logs__container\"\n        onScroll={handleScrollCallback}\n        data-test-id=\"logs-task-container\"\n      >\n        <div className=\"odc-multi-stream-logs__container__logs\" ref={scrollPane}>\n          {containers.map((container, idx) => {\n            const statusIndex = containerStatus.findIndex((c) => c.name === container.name);\n            const resourceStatus = containerToLogSourceStatus(containerStatus[statusIndex]);\n            return (\n              resourceStatus !== LOG_SOURCE_WAITING && (\n                <Logs\n                  key={`${taskName}-${container.name}`}\n                  resource={resource}\n                  container={container}\n                  resourceStatus={resourceStatus}\n                  onComplete={handleComplete}\n                  render={renderToCount >= idx}\n                  autoScroll={autoScroll}\n                />\n              )\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { Base64 } from 'js-base64';\nimport { throttle } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { coFetchText } from '@console/internal/co-fetch';\nimport { LOG_SOURCE_TERMINATED } from '@console/internal/components/utils';\nimport { resourceURL, modelFor, PodKind, ContainerSpec } from '@console/internal/module/k8s';\nimport { WSFactory } from '@console/internal/module/ws-factory';\nimport './Logs.scss';\n\ntype LogsProps = {\n  resource: PodKind;\n  resourceStatus: string;\n  container: ContainerSpec;\n  render: boolean;\n  autoScroll?: boolean;\n  onComplete: (containerName: string) => void;\n};\n\nconst Logs: React.FC<LogsProps> = ({\n  resource,\n  resourceStatus,\n  container,\n  onComplete,\n  render,\n  autoScroll = true,\n}) => {\n  const { t } = useTranslation();\n  const { name } = container;\n  const { kind, metadata = {} } = resource;\n  const { name: resName, namespace: resNamespace } = metadata;\n  const scrollToRef = React.useRef<HTMLDivElement>(null);\n  const contentRef = React.useRef<HTMLDivElement>(null);\n  const [error, setError] = React.useState<boolean>(false);\n  const resourceStatusRef = React.useRef<string>(resourceStatus);\n  const onCompleteRef = React.useRef<(name) => void>();\n  const blockContentRef = React.useRef<string>('');\n  onCompleteRef.current = onComplete;\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const addContentAndScroll = React.useCallback(\n    throttle(() => {\n      if (contentRef.current) {\n        contentRef.current.innerText += blockContentRef.current;\n      }\n      if (scrollToRef.current) {\n        scrollToRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' });\n      }\n      blockContentRef.current = '';\n    }, 1000),\n    [],\n  );\n\n  const appendMessage = React.useRef<(blockContent) => void>();\n\n  appendMessage.current = React.useCallback(\n    (blockContent: string) => {\n      blockContentRef.current += blockContent;\n      if (scrollToRef.current && blockContent && render && autoScroll) {\n        addContentAndScroll();\n      }\n    },\n    [autoScroll, render, addContentAndScroll],\n  );\n\n  if (resourceStatusRef.current !== resourceStatus) {\n    resourceStatusRef.current = resourceStatus;\n  }\n\n  React.useEffect(() => {\n    let loaded: boolean = false;\n    let ws: WSFactory;\n    const urlOpts = {\n      ns: resNamespace,\n      name: resName,\n      path: 'log',\n      queryParams: {\n        container: name,\n        follow: 'true',\n      },\n    };\n    const watchURL = resourceURL(modelFor(kind), urlOpts);\n    if (resourceStatusRef.current === LOG_SOURCE_TERMINATED) {\n      coFetchText(watchURL)\n        .then((res) => {\n          if (loaded) return;\n          appendMessage.current(res);\n          onCompleteRef.current(name);\n        })\n        .catch(() => {\n          if (loaded) return;\n          setError(true);\n          onCompleteRef.current(name);\n        });\n    } else {\n      const wsOpts = {\n        host: 'auto',\n        path: watchURL,\n        subprotocols: ['base64.binary.k8s.io'],\n      };\n      ws = new WSFactory(watchURL, wsOpts);\n      ws.onmessage((msg) => {\n        if (loaded) return;\n        const message = Base64.decode(msg);\n        appendMessage.current(message);\n      })\n        .onclose(() => {\n          onCompleteRef.current(name);\n        })\n        .onerror(() => {\n          if (loaded) return;\n          setError(true);\n          onCompleteRef.current(name);\n        });\n    }\n    return () => {\n      loaded = true;\n      ws && ws.destroy();\n    };\n  }, [kind, name, resName, resNamespace]);\n\n  React.useEffect(() => {\n    if (scrollToRef.current && render && autoScroll) {\n      addContentAndScroll();\n    }\n  }, [autoScroll, render, addContentAndScroll]);\n\n  return (\n    <div className=\"odc-logs\" style={{ display: render ? '' : 'none' }}>\n      <p className=\"odc-logs__name\">{name}</p>\n      {error && (\n        <Alert\n          variant=\"danger\"\n          isInline\n          title={t('pipelines-plugin~An error occurred while retrieving the requested logs.')}\n        />\n      )}\n      <div>\n        <div className=\"odc-logs__content\" ref={contentRef} />\n        <div ref={scrollToRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default Logs;\n","import * as React from 'react';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { TaskRunKind } from '../../../types';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport { useTRTaskRunLog } from '../hooks/useTektonResults';\n\nimport './Logs.scss';\nimport './MultiStreamLogs.scss';\n\ntype TektonTaskRunLogProps = {\n  taskRun?: TaskRunKind;\n  setCurrentLogsGetter: (getter: () => string) => void;\n};\n\nexport const TektonTaskRunLog: React.FC<TektonTaskRunLogProps> = ({\n  taskRun,\n  setCurrentLogsGetter,\n}) => {\n  const scrollPane = React.useRef<HTMLDivElement>();\n  const taskName = taskRun?.metadata?.labels?.[TektonResourceLabel.pipelineTask] || '-';\n  const [trResults, trLoaded, trError] = useTRTaskRunLog(\n    taskRun.metadata.namespace,\n    taskRun.metadata.name,\n    taskRun.metadata?.annotations?.['results.tekton.dev/record'],\n  );\n\n  React.useEffect(() => {\n    setCurrentLogsGetter(() => scrollPane.current?.innerText);\n  }, [setCurrentLogsGetter]);\n\n  React.useEffect(() => {\n    if (!trError && trLoaded && scrollPane.current && trResults) {\n      scrollPane.current.scrollTop = scrollPane.current.scrollHeight;\n    }\n  }, [trError, trLoaded, trResults]);\n\n  const errorMessage =\n    (trError as HttpError)?.code === 404\n      ? `Logs are no longer accessible for ${taskName} task`\n      : null;\n  return (\n    <>\n      <div className=\"odc-multi-stream-logs__taskName\" data-test-id=\"logs-taskName\">\n        {taskName}\n        {!trLoaded && (\n          <span\n            className=\"odc-multi-stream-logs__taskName__loading-indicator\"\n            data-test-id=\"loading-indicator\"\n          >\n            <LoadingInline />\n          </span>\n        )}\n      </div>\n      <div\n        className=\"odc-multi-stream-logs__container\"\n        data-test-id=\"tr-logs-task-container\"\n        ref={scrollPane}\n      >\n        <div className=\"odc-multi-stream-logs__container__logs\" data-testid=\"tr-logs-container\">\n          {errorMessage && (\n            <div className=\"odc-pipeline-run-logs__logtext\" data-testid=\"tr-logs-error-message\">\n              {errorMessage}\n            </div>\n          )}\n          {!errorMessage && trLoaded ? (\n            <div className=\"odc-logs\" data-testid=\"tr-logs-container\">\n              <p className=\"odc-logs__name\">{taskName}</p>\n              <div>\n                <div className=\"odc-logs__content\" data-testid=\"tr-logs-content\">\n                  {trResults}\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { getURLSearchParams } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport {\n  COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n  COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n  TableColumnsType,\n  useUserSettingsCompatibility,\n} from '@console/shared';\nimport { TaskRunModel } from '../../../models';\nimport { usePipelineTechPreviewBadge } from '../../../utils/hooks';\nimport { ListPage } from '../../ListPage';\nimport { useTaskRuns } from '../../pipelineruns/hooks/useTaskRuns';\nimport { runFilters as taskRunFilters } from '../../pipelines/detail-page-tabs/PipelineRuns';\nimport TaskRunsHeader from './TaskRunsHeader';\nimport TaskRunsList from './TaskRunsList';\n\ninterface TaskRunsListPageProps {\n  hideBadge?: boolean;\n  showPipelineColumn?: boolean;\n}\n\nconst TaskRunsListPage: React.FC<\n  Omit<\n    React.ComponentProps<typeof ListPage>,\n    'canCreate' | 'kind' | 'ListComponent' | 'rowFilters'\n  > &\n    TaskRunsListPageProps\n> = ({ hideBadge, showPipelineColumn = true, namespace, ...props }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const searchParams = getURLSearchParams();\n  const kind = searchParams?.kind;\n  const ns = namespace || params?.ns;\n  const badge = usePipelineTechPreviewBadge(ns);\n  const trForPlr = props.selector && props.selector?.matchLabels?.['tekton.dev/pipelineRun'];\n  const [taskRuns, taskRunsLoaded, taskRunsLoadError, getNextPage] = useTaskRuns(ns, trForPlr);\n\n  const taskRunsResource = {\n    [referenceForModel(TaskRunModel)]: {\n      data: taskRuns,\n      kind: referenceForModel(TaskRunModel),\n      loadError: taskRunsLoadError,\n      loaded: taskRunsLoaded,\n    },\n  };\n  const customData = React.useMemo(\n    () => ({\n      showPipelineColumn,\n      nextPage: getNextPage,\n    }),\n    [showPipelineColumn, getNextPage],\n  );\n  const columnManagementID = referenceForModel(TaskRunModel);\n  const [tableColumns, , userSettingsLoaded] = useUserSettingsCompatibility<TableColumnsType>(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~TaskRuns')}</title>\n      </Helmet>\n      {userSettingsLoaded && (\n        <ListPage\n          {...props}\n          customData={customData}\n          canCreate={kind?.includes(referenceForModel(TaskRunModel)) ?? false}\n          kind={referenceForModel(TaskRunModel)}\n          ListComponent={TaskRunsList}\n          rowFilters={taskRunFilters(t)}\n          badge={hideBadge ? null : badge}\n          namespace={ns}\n          columnLayout={{\n            columns: TaskRunsHeader()().map((column) =>\n              _.pick(column, ['title', 'additional', 'id']),\n            ),\n            id: columnManagementID,\n            selectedColumns:\n              tableColumns?.[columnManagementID]?.length > 0\n                ? new Set(tableColumns[columnManagementID])\n                : null,\n            type: t('pipelines-plugin~TaskRun'),\n          }}\n          data={taskRunsResource}\n        />\n      )}\n    </>\n  );\n};\nexport default TaskRunsListPage;\n","import { sortable } from '@patternfly/react-table';\nimport i18next from 'i18next';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport { tableColumnClasses } from './taskruns-table';\n\nconst TaskRunsHeader = (showPipelineColumn: boolean = true) => () => {\n  return [\n    {\n      title: i18next.t('pipelines-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n      id: 'name',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Pipeline'),\n      sortField: `metadata.labels[\"${TektonResourceLabel.pipeline}\"]`,\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n      id: 'pipeline',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Task'),\n      sortField: `metadata.labels[\"${TektonResourceLabel.pipelineTask}\"]`,\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n      id: 'task',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Pod'),\n      sortField: 'status.podName',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n      id: 'pod',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Status'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n      id: 'status',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Started'),\n      sortField: 'status.startTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n      id: 'started',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Duration'),\n      sortField: 'status.completionTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[7] },\n      id: 'duration',\n      additional: true,\n    },\n    {\n      title: '',\n      id: '',\n      props: { className: tableColumnClasses[8] },\n    },\n  ].filter((item) => !(item.id === 'pipeline' && !showPipelineColumn));\n};\n\nexport default TaskRunsHeader;\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  '', // pipeline\n  'pf-m-hidden pf-m-visible-on-sm', // task\n  'pf-m-hidden pf-m-visible-on-sm', // pod\n  'pf-m-hidden pf-m-visible-on-sm', // status\n  'pf-m-hidden pf-m-visible-on-sm', // started\n  'pf-m-hidden pf-m-visible-on-sm', // duration\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { Button, Divider } from '@patternfly/react-core';\nimport { MagicIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useDispatch } from 'react-redux';\nimport { action } from 'typesafe-actions';\nimport { ActionType } from '@console/internal/reducers/ols';\nimport { useOLSConfig } from '../../hooks/ols-hook';\nimport { isMac, ShortcutCommand } from '../shortcuts/Shortcut';\nimport ShortcutsLink from './ShortcutsLink';\n\nimport './CodeEditorToolbar.scss';\n\ninterface CodeEditorToolbarProps {\n  showShortcuts?: boolean;\n  toolbarLinks?: React.ReactNodeArray;\n}\n\nconst CodeEditorToolbar: React.FC<CodeEditorToolbarProps> = ({ showShortcuts, toolbarLinks }) => {\n  const { t } = useTranslation();\n  const openOLS = () => action(ActionType.OpenOLS);\n  const showLightspeedButton = useOLSConfig();\n  const dispatch = useDispatch();\n  if (!showShortcuts && !toolbarLinks?.length) return null;\n  return (\n    <div className=\"co-toolbar__group co-toolbar__group--right\">\n      <div className=\"ocs-yaml-editor-toolbar pf-v5-u-pb-sm pf-v5-l-flex\">\n        {showLightspeedButton && (\n          <div className=\"ocs-yaml-editor-toolbar__link pf-v5-l-flex\">\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => {\n                dispatch(openOLS());\n              }}\n              icon={<MagicIcon />}\n            >\n              {t('console-shared~Ask OpenShift Lightspeed')}\n            </Button>\n            <Divider\n              orientation={{\n                default: 'vertical',\n              }}\n            />\n          </div>\n        )}\n        <div className=\"ocs-yaml-editor-toolbar__link\">\n          <div>\n            <span className=\"ocs-yaml-editor-shortcut__command\">\n              <ShortcutCommand>{isMac ? '⌥ Opt' : 'Alt'}</ShortcutCommand>\n              <ShortcutCommand>F1</ShortcutCommand>\n            </span>\n            <span className=\"ocs-yaml-editor-shortcut__text\">\n              {t('console-shared~Accessibility help')}\n            </span>\n          </div>\n        </div>\n        {showShortcuts && (\n          <div className=\"ocs-yaml-editor-toolbar__link pf-v5-l-flex\">\n            <Divider\n              orientation={{\n                default: 'vertical',\n              }}\n            />\n            <ShortcutsLink />\n          </div>\n        )}\n        {toolbarLinks &&\n          toolbarLinks.map((link, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <div key={`${index}`} className=\"ocs-yaml-editor-toolbar__link pf-v5-l-flex\">\n              {(showShortcuts || index > 0) && link ? (\n                <Divider\n                  orientation={{\n                    default: 'vertical',\n                  }}\n                />\n              ) : null}\n              <div className=\"ocs-yaml-editor-toolbar__link\">{link}</div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default CodeEditorToolbar;\n","import { K8sKind, K8sResourceKind } from '@console/dynamic-plugin-sdk/src';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\n\nconst OLSConfigModel: K8sKind = {\n  apiGroup: 'ols.openshift.io',\n  apiVersion: 'v1alpha1',\n  label: 'OLSConfig',\n  // t('console-shared~OLSConfig')\n  labelKey: 'console-shared~OLSConfig',\n  // t('console-shared~OLSConfigs')\n  labelPluralKey: 'console-shared~OLSConfigs',\n  plural: 'olsconfigs',\n  abbr: 'OLSC',\n  namespaced: false,\n  kind: 'OLSConfig',\n  id: 'olsconfig',\n  labelPlural: 'OLSConfigs',\n  crd: true,\n};\n\nconst OLSCONFIG_INSTANCE = 'cluster';\n\nexport const useOLSConfig = (): boolean => {\n  const [, loaded, err] = useK8sGet<K8sResourceKind>(OLSConfigModel, OLSCONFIG_INSTANCE);\n  return loaded && !err;\n};\n","import * as React from 'react';\nimport { Popover, Button } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '../shortcuts';\nimport { isMac } from '../shortcuts/Shortcut';\n\ninterface ShortcutsLinkProps {\n  onHideShortcuts?: () => {};\n}\n\nconst ShortcutsLink: React.FC<ShortcutsLinkProps> = ({ onHideShortcuts }) => {\n  const { t } = useTranslation();\n  return (\n    <Popover\n      aria-label={t('console-shared~Shortcuts')}\n      bodyContent={\n        <ShortcutTable>\n          <Shortcut alt keyName=\"F1\">\n            {t('console-shared~Accessibility help')}\n          </Shortcut>\n          <Shortcut keyName=\"F1\">{t('console-shared~View all editor shortcuts')}</Shortcut>\n          <Shortcut ctrl keyName=\"space\">\n            {t('console-shared~Activate auto complete')}\n          </Shortcut>\n          <Shortcut ctrl shift={isMac} keyName=\"m\">\n            {t(\n              'console-shared~Toggle Tab action between insert Tab character and move focus out of editor',\n            )}\n          </Shortcut>\n          <Shortcut ctrlCmd shift keyName=\"o\">\n            {t('console-shared~View document outline')}\n          </Shortcut>\n          <Shortcut hover>{t('console-shared~View property descriptions')}</Shortcut>\n          <Shortcut ctrlCmd keyName=\"s\">\n            {t('console-shared~Save')}\n          </Shortcut>\n        </ShortcutTable>\n      }\n      maxWidth=\"25rem\"\n      distance={18}\n      onHide={onHideShortcuts}\n    >\n      <Button type=\"button\" variant=\"link\" isInline>\n        <QuestionCircleIcon className=\"co-icon-space-r co-p-has-sidebar__sidebar-link-icon\" />\n        {t('console-shared~View shortcuts')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport default ShortcutsLink;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport MonacoEditor, { ChangeHandler, MonacoEditorProps } from 'react-monaco-editor';\nimport { ThemeContext } from '@console/internal/components/ThemeProvider';\nimport { RedExclamationCircleIcon, useDebounceCallback } from '@console/shared/src';\nimport '@console/shared/src/components/editor/theme';\n\ntype EditorFieldProps = {\n  name: string;\n  label?: React.ReactNode;\n  helpText?: React.ReactNode;\n  required?: boolean;\n  isDisabled?: boolean;\n} & MonacoEditorProps;\n\nconst EditorField: React.FC<EditorFieldProps> = ({\n  name,\n  label,\n  helpText,\n  required,\n  isDisabled,\n  onChange,\n  ...otherProps\n}) => {\n  const theme = React.useContext(ThemeContext);\n  const { getFieldMeta, setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const { error, value } = getFieldMeta<string>(name);\n\n  const debouncedOnChange = useDebounceCallback<ChangeHandler>((newValue, event) => {\n    if (onChange) {\n      onChange(newValue, event);\n    }\n    setFieldValue(name, newValue, false);\n    setFieldTouched(name, true);\n  }, 100);\n\n  return (\n    <FormGroup fieldId=\"\" label={label} isRequired={required}>\n      <MonacoEditor\n        {...otherProps}\n        value={value}\n        onChange={debouncedOnChange}\n        theme={theme === 'light' ? 'console-light' : 'console-dark'}\n      />\n\n      <FormHelperText>\n        <HelperText>\n          {error ? (\n            <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />} />\n          ) : (\n            <HelperTextItem>{helpText}</HelperTextItem>\n          )}\n        </HelperText>\n      </FormHelperText>\n    </FormGroup>\n  );\n};\n\nexport default EditorField;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TektonWorkspace } from '../../../types';\n\nexport interface WorkspaceDefinitionListProps {\n  workspaces: TektonWorkspace[];\n}\n\nconst WorkspaceDefinitionList: React.FC<WorkspaceDefinitionListProps> = ({ workspaces }) => {\n  const { t } = useTranslation();\n\n  if (!workspaces || workspaces.length === 0) return null;\n\n  return (\n    <dl data-test-id=\"workspace-definition-section\">\n      <dt>{t('pipelines-plugin~Workspaces')}</dt>\n      <dd>\n        {workspaces.map((workspace) => (\n          <div\n            key={workspace.name}\n            data-test-id={`workspace-definition${workspace.optional ? '-optional' : ''}`}\n          >\n            {workspace.optional\n              ? `${workspace.name} (${t('pipelines-plugin~optional')})`\n              : `${workspace.name}`}\n          </div>\n        ))}\n      </dd>\n    </dl>\n  );\n};\n\nexport default WorkspaceDefinitionList;\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport PipelineResourceRef from '../../shared/common/PipelineResourceRef';\n\nimport './DynamicResourceLinkList.scss';\n\nexport type ResourceModelLink = {\n  resourceKind: string;\n  name: string;\n  qualifier?: string;\n  disableLink?: boolean;\n};\n\ntype DynamicResourceLinkListProps = {\n  links: ResourceModelLink[];\n  namespace: string;\n  title?: string;\n  removeSpaceBelow?: boolean;\n};\n\nconst DynamicResourceLinkList: React.FC<DynamicResourceLinkListProps> = ({\n  links = [],\n  namespace,\n  title,\n  removeSpaceBelow,\n}) => {\n  if (links.length === 0) {\n    return null;\n  }\n  return (\n    <div\n      className={classNames('odc-dynamic-resource-link-list', {\n        'odc-dynamic-resource-link-list--addSpaceBelow': !removeSpaceBelow,\n      })}\n    >\n      <dl>\n        {title && <dt>{title}</dt>}\n        <dd>\n          {links.map(({ name, resourceKind, qualifier = '', disableLink = false }) => {\n            let linkName = qualifier;\n            if (qualifier?.length > 0 && name !== qualifier) {\n              linkName += ` (${name})`;\n            }\n            return (\n              <div key={`${resourceKind}/${linkName}`}>\n                <PipelineResourceRef\n                  resourceKind={resourceKind}\n                  resourceName={name}\n                  displayName={linkName}\n                  namespace={namespace}\n                  disableLink={disableLink}\n                />\n              </div>\n            );\n          })}\n        </dd>\n      </dl>\n    </div>\n  );\n};\n\nexport default DynamicResourceLinkList;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { MultiColumnField, InputField } from '@console/shared';\n\ntype PipelineParametersProps = {\n  addLabel?: string;\n  nameLabel: string;\n  nameFieldName: string;\n  descriptionLabel: string;\n  descriptionFieldName: string;\n  valueLabel: string;\n  valueFieldName: string;\n  emptyMessage: string;\n  fieldName: string;\n  emptyValues: { [name: string]: string };\n  isReadOnly?: boolean;\n};\n\nconst PipelineParameters: React.FC<PipelineParametersProps> = ({\n  addLabel,\n  nameLabel,\n  nameFieldName,\n  descriptionLabel,\n  descriptionFieldName,\n  valueLabel,\n  valueFieldName,\n  emptyMessage,\n  fieldName,\n  emptyValues,\n  isReadOnly = false,\n}) => {\n  return (\n    <div className=\"co-m-pane__form\">\n      <MultiColumnField\n        data-test=\"pipeline-parameters\"\n        name={fieldName}\n        addLabel={addLabel}\n        headers={[\n          {\n            name: nameLabel,\n            required: true,\n          },\n          descriptionLabel,\n          valueLabel,\n        ]}\n        emptyValues={emptyValues}\n        emptyMessage={emptyMessage}\n        isReadOnly={isReadOnly}\n      >\n        <InputField\n          data-test={nameFieldName}\n          name={nameFieldName}\n          type={TextInputTypes.text}\n          placeholder={nameLabel}\n          isDisabled={isReadOnly}\n          aria-label={nameLabel}\n        />\n        <InputField\n          data-test={descriptionFieldName}\n          name={descriptionFieldName}\n          type={TextInputTypes.text}\n          placeholder={descriptionLabel}\n          isDisabled={isReadOnly}\n          aria-label={descriptionLabel}\n        />\n        <InputField\n          data-test={valueFieldName}\n          name={valueFieldName}\n          type={TextInputTypes.text}\n          placeholder={valueLabel}\n          isDisabled={isReadOnly}\n          aria-label={valueLabel}\n        />\n      </MultiColumnField>\n    </div>\n  );\n};\n\nexport default PipelineParameters;\n","import * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { DASH } from '@console/shared';\nimport { ComputedStatus, PipelineRunKind } from '../../../types';\nimport PipelineResourceStatus from './PipelineResourceStatus';\nimport PipelineRunStatusPopoverContent from './PipelineRunStatusPopoverContent';\nimport './PipelineRunStatusContent.scss';\n\ntype PipelineRunStatusProps = {\n  status: string;\n  pipelineRun: PipelineRunKind;\n  title?: string;\n};\nconst PipelineRunStatusContent: React.FC<PipelineRunStatusProps> = ({\n  status,\n  pipelineRun,\n  title,\n}) => {\n  const [isPopoverOpen, setIsPopoverOpen] = React.useState(false);\n\n  const PopoverContent = () => {\n    return <>{isPopoverOpen && <PipelineRunStatusPopoverContent pipelineRun={pipelineRun} />}</>;\n  };\n  return (\n    <>\n      {pipelineRun ? (\n        status === ComputedStatus.Failed ? (\n          <Popover\n            bodyContent={PopoverContent}\n            isVisible={isPopoverOpen}\n            shouldClose={() => setIsPopoverOpen(false)}\n            shouldOpen={() => setIsPopoverOpen(true)}\n            position={PopoverPosition.auto}\n          >\n            <Button variant=\"plain\" className=\"odc-status-column-text\">\n              <PipelineResourceStatus status={status} title={title} />\n            </Button>\n          </Popover>\n        ) : (\n          <PipelineResourceStatus status={status} title={title} />\n        )\n      ) : (\n        <>{DASH}</>\n      )}\n    </>\n  );\n};\n\nexport default PipelineRunStatusContent;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport { consoleProxyFetchJSON } from '@console/shared/src/utils/proxy';\nimport { ARTIFACTHUB_API_BASE_URL } from '../../../const';\nimport { TaskModel, TaskModelV1Beta1 } from '../../../models';\nimport { TektonTaskAnnotation } from '../../pipelines/const';\nimport { ARTIFACTHUB } from '../../quicksearch/const';\nimport { ApiResult } from '../hooks/useApiResponse';\n\nexport type ArtifactHubRepository = {\n  name: string;\n  kind: number;\n  url: string;\n  display_name: string;\n  repository_id: string;\n  organization_name: string;\n  organization_display_name: string;\n};\n\nexport type ArtifactHubVersion = {\n  version: string;\n  contains_security_update: boolean;\n  prerelease: boolean;\n  ts: number;\n};\n\nexport type ArtifactHubTask = {\n  package_id: string;\n  name: string;\n  description: string;\n  version: string;\n  display_name: string;\n  repository: ArtifactHubRepository;\n};\n\nexport type ArtifactHubTaskDetails = {\n  package_id: string;\n  name: string;\n  description: string;\n  display_name: string;\n  keywords: string[];\n  platforms: string[];\n  version: ArtifactHubVersion[];\n  available_versions: [];\n  content_url: string;\n  repository: ArtifactHubRepository;\n};\n\nconst ARTIFACRHUB_TASKS_SEARCH_URL = `${ARTIFACTHUB_API_BASE_URL}/packages/search?offset=0&limit=60&facets=false&kind=7&deprecated=false&sort=relevance`;\n\nexport const getArtifactHubTaskDetails = async (\n  item: CatalogItem,\n  v?: string,\n): Promise<ArtifactHubTaskDetails> => {\n  const API_BASE_URL = `${ARTIFACTHUB_API_BASE_URL}/packages/tekton-task`;\n  const { name, data } = item;\n  const {\n    task: {\n      version,\n      repository: { name: repoName },\n    },\n  } = data;\n  const url = `${API_BASE_URL}/${repoName}/${name}/${v || version}`;\n  return consoleProxyFetchJSON({ url, method: 'GET' });\n};\n\nexport const useGetArtifactHubTasks = (hasPermission: boolean): ApiResult<ArtifactHubTask[]> => {\n  const [resultData, setResult] = React.useState<ArtifactHubTask[]>([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadedError, setLoadedError] = React.useState<string>();\n\n  React.useEffect(() => {\n    let mounted = true;\n    if (hasPermission) {\n      consoleProxyFetchJSON<{ packages: ArtifactHubTask[] }>({\n        url: ARTIFACRHUB_TASKS_SEARCH_URL,\n        method: 'GET',\n      })\n        .then(({ packages }) => {\n          if (mounted) {\n            setLoaded(true);\n            setResult(packages);\n          }\n        })\n        .catch((err) => {\n          if (mounted) {\n            setLoaded(true);\n            setLoadedError(err?.message);\n          }\n        });\n    } else {\n      setLoaded(true);\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [hasPermission]);\n  return [resultData, loaded, loadedError];\n};\n\nexport const createArtifactHubTask = (url: string, namespace: string, version: string) => {\n  return consoleProxyFetchJSON({ url, method: 'GET' })\n    .then((task: K8sResourceKind) => {\n      task.metadata.namespace = namespace;\n      task.metadata.annotations = {\n        ...task.metadata.annotations,\n        [TektonTaskAnnotation.installedFrom]: ARTIFACTHUB,\n        [TektonTaskAnnotation.semVersion]: version,\n      };\n      return k8sCreate(task.apiVersion === 'tekton.dev/v1' ? TaskModel : TaskModelV1Beta1, task);\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.warn('Error while importing ArtifactHub Task:', err);\n      throw err;\n    });\n};\n\nexport const updateArtifactHubTask = async (\n  url: string,\n  taskData: CatalogItem,\n  namespace: string,\n  name: string,\n  version: string,\n) => {\n  return consoleProxyFetchJSON({ url, method: 'GET' })\n    .then((task: K8sResourceKind) => {\n      task.metadata.namespace = namespace;\n      task.metadata.annotations = {\n        ...task.metadata.annotations,\n        [TektonTaskAnnotation.semVersion]: version,\n      };\n      task.metadata = _.merge({}, taskData.data.metadata, task.metadata);\n      return k8sUpdate(\n        task.apiVersion === 'tekton.dev/v1' ? TaskModel : TaskModelV1Beta1,\n        task,\n        namespace,\n        name,\n      );\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.warn('Error while updating ArtifactHub Task:', err);\n      throw err;\n    });\n};\n","import { coFetch } from '@console/internal/co-fetch';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonHubModel } from '../../../models';\nimport { TektonHub } from '../../../types/hub';\nimport useApiResponse, { ApiResult } from '../hooks/useApiResponse';\n\nexport type TektonHubItem = {\n  id: number;\n  name: string;\n};\nexport type TektonHubCategory = TektonHubItem;\n\nexport type TektonHubTag = TektonHubItem;\n\nexport type TektonHubPlatform = TektonHubItem;\n\nexport type TektonHubCatalog = TektonHubItem & {\n  type: string;\n};\n\nexport type TektonHubTaskVersion = {\n  id: number;\n  version: string;\n  hubURLPath: string;\n  rawURL: string;\n  webURL: string;\n  platforms: TektonHubPlatform[];\n};\n\nexport type TektonHubLatestVersion = TektonHubTaskVersion & {\n  displayName: string;\n  description: string;\n  minPipelinesVersion: string;\n  updatedAt: string;\n};\n\nexport type TektonHubTask = {\n  id: number;\n  name: string;\n  categories: TektonHubCategory[];\n  catalog: TektonHubCatalog;\n  platforms: TektonHubPlatform[];\n  kind: string;\n  latestVersion: TektonHubLatestVersion;\n  tags: TektonHubTag[];\n  rating: number;\n};\nexport const TEKTON_HUB_API_VERSION = 'v1';\nexport const TEKTON_HUB_API_ENDPOINT = 'https://api.hub.tekton.dev';\nexport const TEKTON_HUB_ENDPOINT = `https://hub.tekton.dev`;\nexport const TEKTON_HUB_INTEGRATION_KEY = 'enable-devconsole-integration';\n\nexport const getHubUIPath = (path: string = '', baseURL: string = TEKTON_HUB_ENDPOINT): string => {\n  if (!path) {\n    return null;\n  }\n  return `${baseURL}/${path}`;\n};\n\nexport const getApiResponse = async (url: string) => (await coFetch(url)).json();\n\nexport const useInclusterTektonHubURLs = () => {\n  const [hub, loaded] = useK8sGet<TektonHub>(TektonHubModel, 'hub');\n  // check in-cluster hub exists, if yes use incluster hub instance api url and ui url\n  return {\n    loaded,\n    apiURL: hub?.status?.apiUrl || TEKTON_HUB_API_ENDPOINT,\n    uiURL: hub?.status?.uiUrl || TEKTON_HUB_ENDPOINT,\n  };\n};\n\nexport const useTektonHubResources = (\n  baseURL,\n  hasPermission: boolean,\n): ApiResult<TektonHubTask[]> => {\n  return useApiResponse<TektonHubTask>(\n    `${baseURL}/${TEKTON_HUB_API_VERSION}/resources`,\n    hasPermission,\n  );\n};\n\nexport const getTektonHubTaskVersions = async (\n  resourceId: string,\n  baseURL?: string,\n): Promise<TektonHubTaskVersion[]> => {\n  const API_BASE_URL = baseURL || TEKTON_HUB_API_ENDPOINT;\n  const response = await getApiResponse(\n    `${API_BASE_URL}/${TEKTON_HUB_API_VERSION}/resource/${resourceId}/versions`,\n  );\n  return response?.data?.versions ?? [];\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { ListPage } from '../ListPage';\nimport { runFilters } from '../pipelines/detail-page-tabs/PipelineRuns';\nimport { useGetPipelineRuns } from './hooks/useTektonResults';\nimport PipelineRunsList from './list-page/PipelineRunList';\n\ninterface PipelineRunsResourceListProps {\n  hideBadge?: boolean;\n  canCreate?: boolean;\n}\n\nconst PipelineRunsResourceList: React.FC<\n  Omit<React.ComponentProps<typeof ListPage>, 'kind' | 'ListComponent' | 'rowFilters'> &\n    PipelineRunsResourceListProps\n> = (props) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const ns = props.namespace || params?.ns;\n  const badge = usePipelineTechPreviewBadge(ns);\n  const [pipelineRuns, pipelineRunsLoaded, pipelineRunsLoadError, getNextPage] = useGetPipelineRuns(\n    ns,\n  );\n  const resources = {\n    [referenceForModel(PipelineRunModel)]: {\n      data: pipelineRuns,\n      kind: referenceForModel(PipelineRunModel),\n      loadError: pipelineRunsLoadError,\n      loaded: pipelineRunsLoaded,\n    },\n  };\n  return (\n    <ListPage\n      {...props}\n      canCreate={props.canCreate ?? true}\n      kind={referenceForModel(PipelineRunModel)}\n      ListComponent={PipelineRunsList}\n      rowFilters={runFilters(t)}\n      badge={props.hideBadge ? null : badge}\n      customData={{ nextPage: getNextPage }}\n      data={resources}\n    />\n  );\n};\n\nexport default PipelineRunsResourceList;\n","import * as React from 'react';\nimport { CombinedErrorDetails } from '../logs/log-snippet-types';\nimport LogSnippetBlock from '../logs/LogSnippetBlock';\n\nimport './StatusPopoverContent.scss';\n\ntype StatusPopoverContentProps = {\n  link?: React.ReactNode;\n  namespace: string;\n  logDetails: CombinedErrorDetails;\n};\nconst StatusPopoverContent: React.FC<StatusPopoverContentProps> = ({\n  namespace,\n  logDetails,\n  link = null,\n}) => {\n  return (\n    <div className=\"odc-statuspopover-content\">\n      <LogSnippetBlock logDetails={logDetails} namespace={namespace}>\n        {(logSnippet: string) => (\n          <>\n            <pre className=\"co-pre\">{logSnippet}</pre>\n            {link}\n          </>\n        )}\n      </LogSnippetBlock>\n    </div>\n  );\n};\n\nexport default StatusPopoverContent;\n","import i18next from 'i18next';\nimport { Condition, PLRTaskRunStep, TaskRunKind } from '../../../types';\nimport { taskRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { CombinedErrorDetails } from '../../pipelineruns/logs/log-snippet-types';\nimport { taskRunSnippetMessage } from '../../pipelineruns/logs/log-snippet-utils';\n\nexport const getTRLogSnippet = (taskRun: TaskRunKind): CombinedErrorDetails => {\n  if (!taskRun?.status) {\n    // Lack information to pull from the Pipeline Run\n    return null;\n  }\n  if (taskRunFilterReducer(taskRun) !== 'Failed') {\n    // Not in a failed state, no need to get the log snippet\n    return null;\n  }\n\n  const succeededCondition = taskRun.status.conditions?.find(\n    (condition: Condition) => condition.type === 'Succeeded',\n  );\n\n  if (succeededCondition?.status !== 'False') {\n    // Not in error / lack information\n    return null;\n  }\n  const isKnownReason = (reason: string): boolean => {\n    // known reasons https://tekton.dev/vault/pipelines-v0.21.0/taskruns/#monitoring-execution-status\n    return ['TaskRunCancelled', 'TaskRunTimeout'].includes(reason);\n  };\n\n  if (isKnownReason(succeededCondition?.reason)) {\n    // No specific task run failure information, just print task run status\n    return {\n      staticMessage:\n        succeededCondition.message || i18next.t('pipelines-plugin~Unknown failure condition'),\n      title: i18next.t('pipelines-plugin~Failure on task {{taskName}} - check logs for details.', {\n        taskName: taskRun.metadata.name,\n      }),\n    };\n  }\n\n  const containerName = taskRun.status.steps?.find(\n    (step: PLRTaskRunStep) => step.terminated?.exitCode !== 0,\n  )?.container;\n\n  return taskRunSnippetMessage(taskRun.metadata.name, taskRun.status, containerName);\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useUserSettings } from '@console/shared/src';\nimport { PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY } from '../../../const';\nimport { RepositoryModel } from '../../../models';\nimport RepositoryList from './ReppositoryList';\n\nconst RepositoriesList: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { t } = useTranslation();\n  const activePerspective = useActivePerspective()[0];\n  const [, setPreferredTab, preferredTabLoaded] = useUserSettings<string>(\n    PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY,\n    'pipelines',\n  );\n\n  React.useEffect(() => {\n    if (preferredTabLoaded && activePerspective === 'dev') {\n      setPreferredTab('repositories');\n    }\n  }, [activePerspective, preferredTabLoaded, setPreferredTab]);\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~Pipeline Repositories')}</title>\n      </Helmet>\n      <ListPage\n        {...props}\n        createProps={{\n          to: `/k8s/ns/${props.namespace || 'default'}/${referenceForModel(\n            RepositoryModel,\n          )}/~new/form`,\n        }}\n        canCreate={props.canCreate ?? true}\n        kind={referenceForModel(RepositoryModel)}\n        ListComponent={RepositoryList}\n      />\n    </>\n  );\n};\n\nexport default RepositoriesList;\n","export { default as PipelineDetails } from './pipeline-details/PipelineDetails';\nexport { default as PipelineParametersForm } from './PipelineParametersForm';\nexport { default as PipelineResources } from './PipelineResources';\nexport { default as PipelineResourcesForm } from './PipelineResourcesForm';\nexport { default as PipelineWorkspaces } from './PipelineWorkspaces';\nexport { default as PipelineRuns } from './PipelineRuns';\nexport { default as PipelineForm } from './PipelineForm';\nexport * from './pipelineForm-validation-utils';\nexport * from './utils';\n","import * as React from 'react';\nimport cx from 'classnames';\nimport { ResourceIcon, ResourceLink } from '@console/internal/components/utils';\nimport { K8sKind, referenceForModel } from '@console/internal/module/k8s';\nimport * as models from '../../../models';\n\nimport './PipelineResourceRef.scss';\n\nconst MODEL_KINDS = Object.values(models).reduce(\n  (acc, model: K8sKind) => ({ ...acc, [model.kind]: model }),\n  {},\n);\n\ntype PipelineResourceRefProps = {\n  resourceKind: string;\n  resourceName: string;\n  disableLink?: boolean;\n  displayName?: string;\n  largeIcon?: boolean;\n  namespace?: string;\n};\n\nconst PipelineResourceRef: React.FC<PipelineResourceRefProps> = ({\n  disableLink,\n  displayName,\n  largeIcon,\n  namespace,\n  resourceKind,\n  resourceName,\n}) => {\n  const model: K8sKind | undefined = MODEL_KINDS[resourceKind];\n  let kind = resourceKind;\n  if (model) {\n    kind = referenceForModel(model);\n  }\n\n  const classNames = cx('opp-pipeline-resource-ref', {\n    'co-m-resource-icon--lg': largeIcon,\n    'opp-pipeline-resource-ref--pipeline-color': !model,\n  });\n\n  if (disableLink || !model) {\n    return (\n      <>\n        <ResourceIcon className={classNames} kind={kind} />\n        {displayName || resourceName}\n      </>\n    );\n  }\n\n  return (\n    <ResourceLink\n      className={classNames}\n      kind={kind}\n      name={resourceName}\n      displayName={displayName || resourceName}\n      title={resourceName}\n      namespace={namespace}\n    />\n  );\n};\n\nexport default PipelineResourceRef;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport {\n  MultiColumnField,\n  InputField,\n  FormSelectField,\n  FormSelectFieldOption,\n} from '@console/shared';\nimport { PipelineResourceType } from '../const';\n\ntype PipelineResourcesParam = {\n  addLabel?: string;\n  fieldName: string;\n  isReadOnly?: boolean;\n};\n\nconst PipelineResources: React.FC<PipelineResourcesParam> = (props) => {\n  const { t } = useTranslation();\n  const {\n    addLabel = t('pipelines-plugin~Add Pipeline resource'),\n    fieldName,\n    isReadOnly = false,\n  } = props;\n  const emptyMessage = t('pipelines-plugin~No resources are associated with this pipeline.');\n  const pipelineResourceTypeSelections: FormSelectFieldOption<PipelineResourceType | ''>[] = [\n    {\n      value: '',\n      label: t('pipelines-plugin~Select resource type'),\n      isDisabled: true,\n      isPlaceholder: true,\n    },\n    { value: PipelineResourceType.git, label: 'Git' },\n    { value: PipelineResourceType.image, label: 'Image' },\n    { value: PipelineResourceType.cluster, label: 'Cluster' },\n    { value: PipelineResourceType.storage, label: 'Storage' },\n  ];\n\n  const nameLabel = t('pipelines-plugin~Name');\n  const resourceTypeLabel = t('pipelines-plugin~Resource type');\n\n  return (\n    <div className=\"co-m-pane__form\">\n      <MultiColumnField\n        data-test=\"pipeline-resources\"\n        name={fieldName}\n        addLabel={addLabel}\n        headers={[\n          { name: nameLabel, required: true },\n          { name: resourceTypeLabel, required: true },\n        ]}\n        emptyValues={{ name: '', type: '' }}\n        emptyMessage={emptyMessage}\n        isReadOnly={isReadOnly}\n      >\n        <InputField\n          name=\"name\"\n          type={TextInputTypes.text}\n          placeholder={nameLabel}\n          isReadOnly={isReadOnly}\n          aria-label={nameLabel}\n        />\n        <FormSelectField\n          name=\"type\"\n          options={pipelineResourceTypeSelections}\n          isDisabled={isReadOnly}\n          aria-label={resourceTypeLabel}\n        />\n      </MultiColumnField>\n    </div>\n  );\n};\n\nexport default PipelineResources;\n","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\nimport * as _ from 'lodash';\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector } from 'react-redux';\nimport { inject, processReduxId } from '@console/internal/components/utils';\n\nconst worstError = (errors) => {\n  let worst = errors && errors[0];\n  for (const e of errors) {\n    if (e.status === 403) {\n      return e;\n    }\n    if (e.status === 401) {\n      worst = e;\n    }\n    if (e.status > worst.status) {\n      worst = e;\n    }\n  }\n  return worst;\n};\n\nconst ListPropProvider = (props) => {\n  const k8sData: ImmutableMap<string, any> = useSelector(({ k8s }) => k8s);\n  const reduxes = props.resources.map(({ prop, isList, filters, optional, kind }) => {\n    return {\n      reduxID: props.reduxIDs[0],\n      prop,\n      isList,\n      filters,\n      optional,\n      kind,\n    };\n  });\n  const resources: any = {};\n  reduxes.forEach((redux) => {\n    resources[redux.prop] = processReduxId({ k8s: k8sData }, redux);\n  });\n  const required = _.filter(resources, (r) => !r.optional);\n  const loaded = _.every(resources, (resource) =>\n    resource.optional ? resource.loaded || !_.isEmpty(resource.loadError) : resource.loaded,\n  );\n  const loadError = worstError(_.map(required, 'loadError').filter(Boolean));\n\n  const k8sResults = Object.assign({}, resources, {\n    filters: Object.assign({}, ..._.map(resources, 'filters')),\n    loaded,\n    loadError,\n    reduxIDs: _.map(reduxes, 'reduxID'),\n    resources,\n  });\n  return (\n    <>\n      {inject(props.children, {\n        ...props,\n        ...props?.data,\n        ...k8sResults,\n      })}\n    </>\n  );\n};\n\nexport default ListPropProvider;\n","import { sortable } from '@patternfly/react-table';\nimport i18n from 'i18next';\nimport { tableColumnClasses } from './pipelinerun-table';\n\nconst PipelineRunHeader = () => {\n  return [\n    {\n      title: i18n.t('pipelines-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.name },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.namespace },\n      id: 'namespace',\n    },\n    {\n      title: i18n.t('pipelines-plugin~Vulnerabilities'),\n      sortFunc: 'vulnerabilities',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.vulnerabilities },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Status'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.status },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Task status'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.taskStatus },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Started'),\n      sortField: 'status.startTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.started },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Duration'),\n      sortField: 'status.completionTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.duration },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses.actions },\n    },\n  ];\n};\n\nexport default PipelineRunHeader;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ArchiveIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport { SemVer } from 'semver';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { Timestamp, ResourceLink } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../const';\nimport SignedPipelinerunIcon from '../../../images/signed-badge.svg';\nimport { PipelineRunModel } from '../../../models';\nimport { ComputedStatus, PipelineRunKind, TaskRunKind } from '../../../types';\nimport { getPipelineRunKebabActions } from '../../../utils/pipeline-actions';\nimport { TaskStatus } from '../../../utils/pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  pipelineRunTitleFilterReducer,\n} from '../../../utils/pipeline-filter-reducer';\nimport { getPipelineRunStatus, pipelineRunDuration } from '../../../utils/pipeline-utils';\nimport { chainsSignedAnnotation } from '../../pipelines/const';\nimport { useTaskRuns } from '../hooks/useTaskRuns';\nimport LinkedPipelineRunTaskStatus from '../status/LinkedPipelineRunTaskStatus';\nimport PipelineRunStatusContent from '../status/PipelineRunStatusContent';\nimport PipelineRunVulnerabilities from '../status/PipelineRunVulnerabilities';\nimport { ResourceKebabWithUserLabel } from '../triggered-by';\nimport { tableColumnClasses } from './pipelinerun-table';\n\nconst pipelinerunReference = referenceForModel(PipelineRunModel);\n\ntype PLRStatusProps = {\n  obj: PipelineRunKind;\n};\n\ntype PipelineRunRowWithoutTaskRunsProps = {\n  obj: PipelineRunKind;\n  operatorVersion: SemVer;\n  taskRunStatusObj: TaskStatus;\n};\n\ntype PipelineRunRowWithTaskRunsProps = {\n  obj: PipelineRunKind;\n  operatorVersion: SemVer;\n};\n\nconst TASKRUNSFORPLRCACHE: { [key: string]: TaskRunKind[] } = {};\nconst InFlightStoreForTaskRunsForPLR: { [key: string]: boolean } = {};\n\nconst PLRStatus: React.FC<PLRStatusProps> = React.memo(({ obj }) => {\n  return (\n    <PipelineRunStatusContent\n      status={pipelineRunFilterReducer(obj)}\n      title={pipelineRunTitleFilterReducer(obj)}\n      pipelineRun={obj}\n    />\n  );\n});\n\nconst PipelineRunRowTable = ({\n  obj,\n  PLRTaskRuns,\n  taskRunsLoaded,\n  taskRunStatusObj,\n  operatorVersion,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <TableData className={tableColumnClasses.name}>\n        <ResourceLink\n          kind={pipelinerunReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          data-test-id={obj.metadata.name}\n          nameSuffix={\n            <>\n              {obj?.metadata?.annotations?.[chainsSignedAnnotation] === 'true' ? (\n                <Tooltip content={t('pipelines-plugin~Signed')}>\n                  <div className=\"opp-pipeline-run-list__signed-indicator\">\n                    <img src={SignedPipelinerunIcon} alt={t('pipelines-plugin~Signed')} />\n                  </div>\n                </Tooltip>\n              ) : null}\n              {obj?.metadata?.annotations?.[DELETED_RESOURCE_IN_K8S_ANNOTATION] === 'true' ||\n              obj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION] === 'true' ? (\n                <Tooltip content={t('pipelines-plugin~Archived in Tekton results')}>\n                  <div className=\"opp-pipeline-run-list__results-indicator\">\n                    <ArchiveIcon />\n                  </div>\n                </Tooltip>\n              ) : null}\n            </>\n          }\n        />\n      </TableData>\n      <TableData className={tableColumnClasses.namespace} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses.vulnerabilities}>\n        <PipelineRunVulnerabilities pipelineRun={obj} condensed />\n      </TableData>\n      <TableData className={tableColumnClasses.status}>\n        <PLRStatus obj={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses.taskStatus}>\n        <LinkedPipelineRunTaskStatus\n          pipelineRun={obj}\n          taskRuns={PLRTaskRuns}\n          taskRunsLoaded={taskRunsLoaded}\n          taskRunStatusObj={taskRunStatusObj}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses.started}>\n        <Timestamp timestamp={obj.status && obj.status.startTime} />\n      </TableData>\n      <TableData className={tableColumnClasses.duration}>{pipelineRunDuration(obj)}</TableData>\n      <TableData className={tableColumnClasses.actions}>\n        <ResourceKebabWithUserLabel\n          actions={getPipelineRunKebabActions(\n            operatorVersion,\n            PLRTaskRuns,\n            undefined,\n            taskRunStatusObj,\n          )}\n          kind={pipelinerunReference}\n          resource={obj}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst PipelineRunRowWithoutTaskRuns: React.FC<PipelineRunRowWithoutTaskRunsProps> = React.memo(\n  ({ obj, operatorVersion, taskRunStatusObj }) => {\n    return (\n      <PipelineRunRowTable\n        obj={obj}\n        PLRTaskRuns={[]}\n        taskRunsLoaded\n        operatorVersion={operatorVersion}\n        taskRunStatusObj={taskRunStatusObj}\n      />\n    );\n  },\n);\n\nconst PipelineRunRowWithTaskRunsFetch: React.FC<PipelineRunRowWithTaskRunsProps> = React.memo(\n  ({ obj, operatorVersion }) => {\n    const cacheKey = `${obj.metadata.namespace}-${obj.metadata.name}`;\n    const [PLRTaskRuns, taskRunsLoaded] = useTaskRuns(\n      obj.metadata.namespace,\n      obj.metadata.name,\n      undefined,\n      `${obj.metadata.namespace}-${obj.metadata.name}`,\n    );\n    InFlightStoreForTaskRunsForPLR[cacheKey] = false;\n    if (taskRunsLoaded) {\n      TASKRUNSFORPLRCACHE[cacheKey] = PLRTaskRuns;\n    }\n    return (\n      <PipelineRunRowTable\n        obj={obj}\n        PLRTaskRuns={PLRTaskRuns}\n        taskRunsLoaded={taskRunsLoaded}\n        operatorVersion={operatorVersion}\n        taskRunStatusObj={undefined}\n      />\n    );\n  },\n);\n\nconst PipelineRunRowWithTaskRuns: React.FC<PipelineRunRowWithTaskRunsProps> = React.memo(\n  ({ obj, operatorVersion }) => {\n    let PLRTaskRuns: TaskRunKind[];\n    let taskRunsLoaded: boolean;\n    const cacheKey = `${obj.metadata.namespace}-${obj.metadata.name}`;\n    const result = TASKRUNSFORPLRCACHE[cacheKey];\n    if (result) {\n      PLRTaskRuns = result;\n      taskRunsLoaded = true;\n    } else if (InFlightStoreForTaskRunsForPLR[cacheKey]) {\n      PLRTaskRuns = [];\n      taskRunsLoaded = true;\n      InFlightStoreForTaskRunsForPLR[cacheKey] = true;\n    } else {\n      return <PipelineRunRowWithTaskRunsFetch obj={obj} operatorVersion={operatorVersion} />;\n    }\n    return (\n      <PipelineRunRowTable\n        obj={obj}\n        PLRTaskRuns={PLRTaskRuns}\n        taskRunsLoaded={taskRunsLoaded}\n        operatorVersion={operatorVersion}\n        taskRunStatusObj={undefined}\n      />\n    );\n  },\n);\n\nconst PipelineRunRow: React.FC<RowFunctionArgs<PipelineRunKind>> = ({ obj, customData }) => {\n  const { operatorVersion } = customData;\n  const plrStatus = pipelineRunStatus(obj);\n  if (plrStatus === ComputedStatus.Cancelled && (obj?.status?.childReferences ?? []).length > 0) {\n    return <PipelineRunRowWithTaskRuns obj={obj} operatorVersion={operatorVersion} />;\n  }\n  const taskRunStatusObj = getPipelineRunStatus(obj);\n  return (\n    <PipelineRunRowWithoutTaskRuns\n      obj={obj}\n      operatorVersion={operatorVersion}\n      taskRunStatusObj={taskRunStatusObj}\n    />\n  );\n};\n\nexport default PipelineRunRow;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ComputedStatus, PipelineRunKind, TaskRunKind } from '../../../types';\nimport { TaskStatus, getRunStatusColor } from '../../../utils/pipeline-augment';\nimport HorizontalStackedBars from '../../charts/HorizontalStackedBars';\nimport { useTaskStatus } from '../hooks/useTaskStatus';\nimport TaskStatusToolTip from './TaskStatusTooltip';\n\nexport interface PipelineBarProps {\n  pipelinerun: PipelineRunKind;\n  taskRuns: TaskRunKind[];\n}\n\nexport interface PipelineBarsForTaskRunsStatus {\n  taskRunStatusObj: TaskStatus;\n}\n\nexport const PipelineBars: React.FC<PipelineBarProps> = ({ pipelinerun, taskRuns }) => {\n  const taskStatus = useTaskStatus(pipelinerun, taskRuns);\n  return (\n    <Tooltip content={<TaskStatusToolTip taskStatus={taskStatus} />}>\n      <HorizontalStackedBars\n        height=\"1em\"\n        inline\n        values={Object.keys(ComputedStatus).map((status) => ({\n          color: getRunStatusColor(ComputedStatus[status]).pftoken.value,\n          name: status,\n          size: taskStatus[ComputedStatus[status]],\n        }))}\n      />\n    </Tooltip>\n  );\n};\n\nexport const PipelineBarsForTaskRunsStatus: React.FC<PipelineBarsForTaskRunsStatus> = ({\n  taskRunStatusObj,\n}) => (\n  <Tooltip content={<TaskStatusToolTip taskStatus={taskRunStatusObj} />}>\n    <HorizontalStackedBars\n      height=\"1em\"\n      inline\n      values={Object.keys(ComputedStatus).map((status) => ({\n        color: getRunStatusColor(ComputedStatus[status]).pftoken.value,\n        name: status,\n        size: taskRunStatusObj[ComputedStatus[status]],\n      }))}\n    />\n  </Tooltip>\n);\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { LoadingInline, resourcePathFromModel } from '@console/internal/components/utils';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport { useTaskRuns } from '../hooks/useTaskRuns';\nimport LogSnippetBlock from '../logs/LogSnippetBlock';\nimport { getPLRLogSnippet } from '../logs/pipelineRunLogSnippet';\nimport './StatusPopoverContent.scss';\n\ntype StatusPopoverContentProps = {\n  pipelineRun: PipelineRunKind;\n};\nconst PipelineRunStatusPopoverContent: React.FC<StatusPopoverContentProps> = ({ pipelineRun }) => {\n  const { t } = useTranslation();\n  const [PLRTaskRuns, taskRunsLoaded] = useTaskRuns(\n    pipelineRun.metadata.namespace,\n    pipelineRun.metadata.name,\n  );\n\n  if (!taskRunsLoaded) {\n    return (\n      <div style={{ minHeight: '300px' }}>\n        <LoadingInline />\n      </div>\n    );\n  }\n\n  const logDetails = getPLRLogSnippet(pipelineRun, PLRTaskRuns);\n\n  return (\n    <div className=\"odc-statuspopover-content\" style={{ minHeight: '300px' }}>\n      <LogSnippetBlock logDetails={logDetails} namespace={pipelineRun.metadata.namespace}>\n        {(logSnippet: string) => (\n          <>\n            <pre className=\"co-pre\">{logSnippet}</pre>\n            <Link\n              to={`${resourcePathFromModel(\n                PipelineRunModel,\n                pipelineRun.metadata.name,\n                pipelineRun.metadata.namespace,\n              )}/logs`}\n            >\n              {t('pipelines-plugin~View logs')}\n            </Link>\n          </>\n        )}\n      </LogSnippetBlock>\n    </div>\n  );\n};\n\nexport default PipelineRunStatusPopoverContent;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FireMan, FireManProps } from '@console/internal/components/factory';\nimport { Firehose } from '@console/internal/components/utils';\nimport { referenceForModel, Selector } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { filters } from './list-page/PipelineAugmentRuns';\nimport PipelineAugmentRunsWrapper from './list-page/PipelineAugmentRunsWrapper';\n\ntype PipelinesResourceListProps = {\n  namespace: string;\n  showTitle?: boolean;\n  selector?: Selector;\n  name?: string;\n  nameFilter?: string;\n  hideNameLabelFilters?: boolean;\n  badge: FireManProps['badge'];\n  title: FireManProps['title'];\n};\n\nconst PipelinesResourceList: React.FC<PipelinesResourceListProps> = (props) => {\n  const { t } = useTranslation();\n  const { namespace, showTitle = true, selector, name, nameFilter } = props;\n  const badge = usePipelineTechPreviewBadge(namespace);\n  const resources = [\n    {\n      isList: true,\n      kind: referenceForModel(PipelineModel),\n      namespace,\n      prop: PipelineModel.id,\n      filters: { ...filters(t), ...(nameFilter && { name: nameFilter }) },\n      selector,\n      name,\n    },\n  ];\n\n  return (\n    <FireMan\n      {...props}\n      canCreate\n      createButtonText={t('pipelines-plugin~Create Pipeline')}\n      createProps={{\n        to: namespace\n          ? `/k8s/ns/${namespace}/${referenceForModel(PipelineModel)}/~new/builder`\n          : `/k8s/cluster/${referenceForModel(PipelineModel)}/~new`,\n      }}\n      createAccessReview={{ model: PipelineModel, namespace }}\n      filterLabel={t('pipelines-plugin~by name')}\n      textFilter=\"name\"\n      resources={resources}\n      title={showTitle ? t('pipelines-plugin~Pipelines') : null}\n      badge={badge}\n    >\n      <Firehose resources={resources}>\n        <PipelineAugmentRunsWrapper\n          namespace={namespace}\n          hideNameLabelFilters={props.hideNameLabelFilters}\n        />\n      </Firehose>\n    </FireMan>\n  );\n};\n\nexport default PipelinesResourceList;\n","import * as React from 'react';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { RowFilter } from '@console/internal/components/filter-toolbar';\nimport { inject } from '@console/internal/components/utils';\nimport { FirehoseResult } from '@console/internal/module/k8s';\nimport { PipelineRunKind } from '../../../types';\nimport { augmentRunsToData, PropPipelineData } from '../../../utils/pipeline-augment';\nimport {\n  pipelineFilterReducer,\n  pipelineStatusFilter,\n} from '../../../utils/pipeline-filter-reducer';\nimport { ListFilterId, ListFilterLabels } from '../../../utils/pipeline-utils';\n\nexport const filters = (t: TFunction): RowFilter[] => {\n  return [\n    {\n      filterGroupName: t('pipelines-plugin~Status'),\n      type: 'pipeline-status',\n      reducer: pipelineFilterReducer,\n      items: [\n        { id: ListFilterId.Succeeded, title: ListFilterLabels[ListFilterId.Succeeded] },\n        { id: ListFilterId.Running, title: ListFilterLabels[ListFilterId.Running] },\n        { id: ListFilterId.Failed, title: ListFilterLabels[ListFilterId.Failed] },\n        { id: ListFilterId.Cancelled, title: ListFilterLabels[ListFilterId.Cancelled] },\n        { id: ListFilterId.Other, title: ListFilterLabels[ListFilterId.Other] },\n      ],\n      filter: pipelineStatusFilter,\n    },\n  ];\n};\n\nexport type PipelineAugmentRunsProps = {\n  data?: PropPipelineData[];\n  pipeline?: FirehoseResult<PropPipelineData[]>;\n  pipelinerun?: FirehoseResult<PipelineRunKind[]>;\n  reduxIDs?: string[];\n  applyFilter?: () => void;\n  filters?: Record<string, any>[];\n};\n// Firehose injects a lot of props and some of those are considered the KeyedRuns\nconst PipelineAugmentRuns: React.FC<PipelineAugmentRunsProps> = ({ ...props }) => {\n  const allFilters = {\n    ...props.filters,\n    ...(_.get(props.pipeline, 'filters.name') && { name: _.get(props.pipeline, 'filters.name') }),\n  };\n  const resourceData =\n    props.pipeline?.data && props.pipelinerun?.data\n      ? augmentRunsToData(props.pipeline.data, props.pipelinerun.data)\n      : null;\n\n  const children = inject(props.children, {\n    ...props,\n    filters: allFilters,\n    resources: { pipeline: { data: resourceData } },\n  });\n  return <>{children}</>;\n};\n\nexport default PipelineAugmentRuns;\n","import * as React from 'react';\nimport { Formik, FormikBag } from 'formik';\nimport { safeLoad } from 'js-yaml';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { history } from '@console/internal/components/utils';\nimport { k8sCreate, k8sUpdate, referenceForModel } from '@console/internal/module/k8s';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { PipelineKind } from '../../../types';\nimport { returnValidPipelineModel } from '../../../utils/pipeline-utils';\nimport { initialPipelineFormData } from './const';\nimport { sanitizeToYaml } from './form-switcher-validation';\nimport PipelineBuilderForm from './PipelineBuilderForm';\nimport { PipelineBuilderFormYamlValues, PipelineBuilderFormikValues } from './types';\nimport { convertBuilderFormToPipeline, convertPipelineToBuilderForm } from './utils';\nimport { validationSchema } from './validation-utils';\n\nimport './PipelineBuilderPage.scss';\n\ntype PipelineBuilderPageProps = {\n  existingPipeline?: PipelineKind;\n};\n\nconst PipelineBuilderPage: React.FC<PipelineBuilderPageProps> = (props) => {\n  const { t } = useTranslation();\n  const { ns } = useParams();\n  const { existingPipeline } = props;\n\n  const initialValues: PipelineBuilderFormYamlValues = {\n    editorType: EditorType.Form,\n    yamlData: sanitizeToYaml(initialPipelineFormData, ns, existingPipeline),\n    formData: {\n      ...initialPipelineFormData,\n      ...(convertPipelineToBuilderForm(existingPipeline) || {}),\n    },\n    taskResources: {\n      clusterTasks: [],\n      namespacedTasks: [],\n      tasksLoaded: false,\n    },\n  };\n\n  const handleSubmit = (\n    values: PipelineBuilderFormikValues,\n    actions: FormikBag<any, PipelineBuilderFormYamlValues>,\n  ) => {\n    let pipeline: PipelineKind;\n    if (values.editorType === EditorType.YAML) {\n      try {\n        pipeline = safeLoad(values.yamlData);\n        if (!pipeline.metadata?.namespace) {\n          pipeline.metadata.namespace = ns;\n        }\n      } catch (err) {\n        actions.setStatus({ submitError: `Invalid YAML - ${err}` });\n        return null;\n      }\n    } else {\n      pipeline = convertBuilderFormToPipeline(values.formData, ns, existingPipeline);\n    }\n\n    let resourceCall: Promise<any>;\n    const pipelineModel = returnValidPipelineModel(pipeline);\n    if (existingPipeline) {\n      resourceCall = k8sUpdate(pipelineModel, pipeline, ns, existingPipeline.metadata.name);\n    } else {\n      resourceCall = k8sCreate(pipelineModel, pipeline);\n    }\n\n    return resourceCall\n      .then(() => {\n        history.push(`/k8s/ns/${ns}/${referenceForModel(pipelineModel)}/${pipeline.metadata.name}`);\n      })\n      .catch((e) => {\n        actions.setStatus({ submitError: e.message });\n      });\n  };\n\n  return (\n    <div className=\"odc-pipeline-builder-page\">\n      <Helmet>\n        <title>{t('pipelines-plugin~Pipeline builder')}</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        onReset={history.goBack}\n        validationSchema={validationSchema()}\n      >\n        {(formikProps) => (\n          <PipelineBuilderForm\n            {...formikProps}\n            namespace={ns}\n            existingPipeline={existingPipeline}\n          />\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default PipelineBuilderPage;\n","import i18n from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport {\n  PipelineTaskResource,\n  PipelineTask,\n  PipelineTaskParam,\n  PipelineTaskWorkspace,\n  TektonResource,\n  TektonWorkspace,\n  ResourceTarget,\n  TektonResourceGroup,\n  WhenExpression,\n} from '../../../types';\nimport { paramIsRequired } from '../../../utils/common';\nimport { PipelineResourceType } from '../const';\nimport { getTaskParameters, getTaskResources } from '../resource-utils';\nimport { getTaskErrorString, TaskErrorType } from './const';\nimport { PipelineBuilderFormValues, PipelineBuilderFormYamlValues, TaskType } from './types';\nimport { findTaskFromFormikData } from './utils';\n\n/**\n * Checks to see if the params without a default have a value\n */\nconst areRequiredParamsAdded = (\n  formValues: PipelineBuilderFormYamlValues,\n  pipelineTask: PipelineTask,\n  params: PipelineTaskParam[] = [],\n): boolean => {\n  const task = findTaskFromFormikData(formValues, pipelineTask);\n  if (!task) {\n    // No task, means we don't know if the param is nullable, so pass the test\n    return true;\n  }\n\n  const requiredTaskParams = getTaskParameters(task).filter(paramIsRequired);\n  if (requiredTaskParams.length === 0) {\n    // No required params, no issue\n    return true;\n  }\n\n  return !requiredTaskParams.some((requiredParam) => {\n    const matchingParam = params.find(({ name }) => name === requiredParam.name);\n    return !matchingParam || !matchingParam.value;\n  });\n};\n\nconst areRequiredWhenExpressionsAdded = (when: WhenExpression[] = []) => {\n  if (when.length === 0) {\n    return true;\n  }\n  const invalidValues = (values: string[]) =>\n    (values || []).length === 0 || values.some((v) => v?.length === 0);\n  return !when?.some(\n    (w) => w?.input?.length === 0 || w?.operator?.length === 0 || invalidValues(w?.values),\n  );\n};\n\n/**\n * Finds the resource tied to the resourceName.\n */\nconst findResource = (\n  formValues: PipelineBuilderFormYamlValues,\n  path: string,\n  resourceName: string,\n  taskType: TaskType,\n): TektonResource | false => {\n  // Since we do not have easy access to the taskRef, walk the path back ot the root\n  // eg. path === formData.tasks[0].resources.inputs[0].resource\n  const pathParts = path.split('.');\n  const tasksReferenceIdx = pathParts.findIndex((pathPart) => pathPart.startsWith(taskType));\n  const taskPath = pathParts.slice(0, tasksReferenceIdx + 1);\n  const pipelineTask: PipelineTask = _.get(formValues, `${taskPath.join('.')}`);\n\n  // Find the task based on the ref\n  const task = findTaskFromFormikData(formValues, pipelineTask);\n  if (!task) {\n    // No task, can't find resources\n    return false;\n  }\n\n  const target = path.match(/(inputs|outputs)/)?.[0] as ResourceTarget;\n  if (!target) {\n    // Shouldn't happen, but bail out if it does\n    return false;\n  }\n  const resources = getTaskResources(task);\n  return resources[target]?.find(({ name }) => name === resourceName);\n};\n\n/**\n * Checks to see if the resourceValue is the same type of the resourceName's type\n */\nconst isResourceTheCorrectType = (\n  formValues: PipelineBuilderFormYamlValues,\n  path: string,\n  resourceValue: string,\n  resourceName: string,\n  taskType: TaskType,\n): boolean => {\n  const resource = findResource(formValues, path, resourceName, taskType);\n  if (resource === false) {\n    // Failed to find the resource, nothing we can do here\n    return true;\n  }\n  const formResource = formValues.formData.resources.find(({ name }) => name === resourceValue);\n\n  return resource.type === formResource?.type;\n};\n\n/**\n * Checks if there are more resources available of the resourceName's type\n */\nconst hasResourcesOfTheSameType = (\n  formValues: PipelineBuilderFormYamlValues,\n  path: string,\n  resourceName: string,\n  taskType: TaskType,\n): boolean => {\n  const resource = findResource(formValues, path, resourceName, taskType);\n  if (resource === false) {\n    // Failed to find the resource, nothing we can do here\n    return true;\n  }\n\n  return formValues.formData.resources.some(({ type }) => resource.type === type);\n};\n\n/**\n * Check to see if this task has all the resources (both input + output) that the stand-alone TaskKind requests.\n */\nconst hasRequiredResources = (\n  formValues: PipelineBuilderFormYamlValues,\n  pipelineTask: PipelineTask,\n  taskResources: PipelineTaskResource[],\n): boolean => {\n  const task = findTaskFromFormikData(formValues, pipelineTask);\n  if (!task) {\n    // No matching task, can't verify if resources are needed\n    return true;\n  }\n\n  const resources = getTaskResources(task);\n  const requiredResources = [...(resources.inputs || []), ...(resources.outputs || [])].filter(\n    (resource) => !resource.optional,\n  );\n  const noResources = !taskResources || taskResources.length === 0;\n  const needResources = requiredResources.length > 0;\n  if (noResources) {\n    // If we have no resource, we are done; if we need resources we fail\n    return !needResources;\n  }\n  const resourcesNames = taskResources.map(({ name }) => name);\n  return !requiredResources.some(({ name }) => !resourcesNames.includes(name));\n};\n\n/**\n * Finds the workspace tied to the workspaceName.\n */\nconst findWorkspace = (\n  formValues: PipelineBuilderFormYamlValues,\n  path: string,\n  workspaceName: string,\n): TektonWorkspace | false => {\n  // Search the taskPath which is parent of the given path.\n  // If an path like formData.finallyTasks[0].workspaces[0].workspace is given\n  // it returns the path formData.finallyTasks[0]\n  const taskPath = path.split('.').slice(0, 2).join('.');\n  const pipelineTask: PipelineTask = _.get(formValues, taskPath);\n\n  // Find the task based on the ref\n  const task = findTaskFromFormikData(formValues, pipelineTask);\n  if (!task) {\n    // No task, can't find resources\n    return false;\n  }\n  return task.spec.workspaces?.find(({ name }) => name === workspaceName);\n};\n\n/**\n * Check to see if this task has all the workspaces the stand-alone TaskKind requests.\n */\nconst hasRequiredWorkspaces = (\n  formValues: PipelineBuilderFormYamlValues,\n  pipelineTask: PipelineTask,\n  taskWorkspaces: PipelineTaskWorkspace[],\n) => {\n  const task = findTaskFromFormikData(formValues, pipelineTask);\n  if (!task) {\n    // No matching task, can't verify if workspaces are needed\n    return true;\n  }\n\n  const requiredWorkspaces = task.spec.workspaces?.filter(({ optional }) => !optional) || [];\n  const noWorkspaces = !taskWorkspaces || taskWorkspaces.length === 0;\n  const needWorkspaces = requiredWorkspaces?.length > 0;\n  if (noWorkspaces) {\n    // If we have no workspaces, we are done; if we need workspaces we fail\n    return !needWorkspaces;\n  }\n  const workspaceNames = taskWorkspaces.map(({ name }) => name);\n  return !requiredWorkspaces.some(({ name }) => !workspaceNames.includes(name));\n};\n\n/**\n * Checks to make sure all runAfter values are task/listTask names.\n */\nexport const runAfterMatches = (\n  formData: PipelineBuilderFormValues,\n  runAfter: string[],\n  thisTaskName: string,\n): boolean => {\n  if (!runAfter || runAfter.length === 0) {\n    // No failure case if we don't have a run after\n    return true;\n  }\n  if (runAfter.includes(thisTaskName)) {\n    // Fails if it includes itself (can't run after yourself)\n    return false;\n  }\n\n  const { tasks, listTasks } = formData;\n  const taskNames = tasks.map((t) => t.name).concat(listTasks.map((t) => t.name));\n  return !runAfter.some((name) => !taskNames.includes(name));\n};\n\n/**\n * Validates a runAfter to have valid values.\n *\n * Note: Expects to be in an object of { name: string(), runAfter: thisFunction(...), ... }\n */\nconst validRunAfter = (formData: PipelineBuilderFormValues) => {\n  return yup\n    .array()\n    .of(yup.string())\n    .test('tasks-matches-runAfters', i18n.t('pipelines-plugin~Invalid runAfter'), function (\n      runAfter: string[],\n    ) {\n      return runAfterMatches(formData, runAfter, this.parent.name);\n    });\n};\n\n/**\n * Validates task resources are defined correctly.\n */\nconst resourceDefinition = (formValues: PipelineBuilderFormYamlValues, taskType: TaskType) => {\n  const {\n    formData: { resources },\n  } = formValues;\n\n  return yup.array().of(\n    yup.object({\n      name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n      resource: yup\n        .string()\n        .test(\n          'are-resources-available',\n          i18n.t('pipelines-plugin~No resources available. Add pipeline resources.'),\n          function () {\n            const resource = findResource(formValues, this.path, this.parent.name, taskType);\n            return !resource || resource.optional || resources?.length > 0;\n          },\n        )\n        .test(\n          'is-resources-of-type-available',\n          i18n.t('pipelines-plugin~No resources available. Add pipeline resources.'),\n          function () {\n            const resource = findResource(formValues, this.path, this.parent.name, taskType);\n            return (\n              !resource ||\n              resource.optional ||\n              hasResourcesOfTheSameType(formValues, this.path, this.parent.name, taskType)\n            );\n          },\n        )\n        .test('is-resource-is-required', i18n.t('pipelines-plugin~Required'), function (\n          resourceValue?: string,\n        ) {\n          const resource = findResource(formValues, this.path, this.parent.name, taskType);\n          return !resource || resource.optional || resourceValue;\n        })\n        .test(\n          'is-resource-link-broken',\n          i18n.t('pipelines-plugin~Resource name has changed; reselect.'),\n          (resourceValue?: string) =>\n            !resourceValue || !!resources.find(({ name }) => name === resourceValue),\n        )\n        .test(\n          'is-resource-type-valid',\n          i18n.t('pipelines-plugin~Resource type has changed; reselect.'),\n          function (resourceValue?: string) {\n            if (!resourceValue) {\n              return true;\n            }\n            return isResourceTheCorrectType(\n              formValues,\n              this.path,\n              resourceValue,\n              this.parent.name,\n              taskType,\n            );\n          },\n        ),\n    }),\n  );\n};\n\n/**\n * Validates Tasks or Finally Tasks for valid structure\n */\nconst taskValidation = (formValues: PipelineBuilderFormYamlValues, taskType: TaskType) => {\n  const {\n    formData: { workspaces },\n  } = formValues;\n\n  return yup.array().of(\n    yup\n      .object({\n        // `name` is properly validated in TaskSidebarName\n        name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n        taskRef: yup\n          .object({\n            name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n            kind: yup.string(),\n          })\n          .default(undefined),\n        taskSpec: yup.object(),\n        runAfter: validRunAfter(formValues.formData),\n        params: yup\n          .array()\n          .of(\n            yup.object({\n              name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n              value: yup.lazy((value) => {\n                if (Array.isArray(value)) {\n                  return yup.array().of(yup.string().required(i18n.t('pipelines-plugin~Required')));\n                }\n                return yup.string();\n              }),\n            }),\n          )\n          .test(\n            'is-param-optional',\n            getTaskErrorString(TaskErrorType.MISSING_REQUIRED_PARAMS),\n            function (params?: PipelineTaskParam[]) {\n              return areRequiredParamsAdded(formValues, this.parent, params);\n            },\n          ),\n        resources: yup\n          .object({\n            inputs: resourceDefinition(formValues, taskType),\n            outputs: resourceDefinition(formValues, taskType),\n          })\n          .test(\n            'is-resources-required',\n            getTaskErrorString(TaskErrorType.MISSING_RESOURCES),\n            function (resourceValue?: TektonResourceGroup<PipelineTaskResource>) {\n              return hasRequiredResources(formValues, this.parent, [\n                ...(resourceValue?.inputs || []),\n                ...(resourceValue?.outputs || []),\n              ]);\n            },\n          ),\n        when: yup\n          .array()\n          .of(\n            yup.object({\n              input: yup.string().required(i18n.t('pipelines-plugin~Required')),\n              operator: yup.string().required(i18n.t('pipelines-plugin~Required')),\n              values: yup.array().of(yup.string().required(i18n.t('pipelines-plugin~Required'))),\n            }),\n          )\n          .test(\n            'is-when-expression-required',\n            getTaskErrorString(TaskErrorType.MISSING_REQUIRED_WHEN_EXPRESSIONS),\n            function (when?: WhenExpression[]) {\n              return areRequiredWhenExpressionsAdded(when);\n            },\n          ),\n\n        workspaces: yup\n          .array()\n          .of(\n            yup.object({\n              name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n              workspace: yup\n                .string()\n                .test('is-workspace-is-required', i18n.t('pipelines-plugin~Required'), function (\n                  workspaceValue?: string,\n                ) {\n                  const workspace = findWorkspace(formValues, this.path, this.parent.name);\n                  return !workspace || workspace.optional || workspaceValue;\n                })\n                .test(\n                  'are-workspaces-available',\n                  i18n.t('pipelines-plugin~No workspaces available. Add pipeline workspaces.'),\n                  () => workspaces?.length > 0,\n                )\n                .test(\n                  'is-workspace-link-broken',\n                  i18n.t('pipelines-plugin~Workspace name has changed; reselect.'),\n                  (workspaceValue?: string) =>\n                    !workspaceValue || !!workspaces.find(({ name }) => name === workspaceValue),\n                ),\n            }),\n          )\n          .test(\n            'is-workspaces-required',\n            getTaskErrorString(TaskErrorType.MISSING_WORKSPACES),\n            function (workspaceList?: PipelineTaskWorkspace[]) {\n              return hasRequiredWorkspaces(formValues, this.parent, workspaceList);\n            },\n          ),\n      })\n      .test(\n        'taskRef-or-taskSpec',\n        i18n.t('pipelines-plugin~TaskSpec or TaskRef must be provided.'),\n        function (task: PipelineTask) {\n          return !!task.taskRef || !!task.taskSpec;\n        },\n      ),\n  );\n};\n\n/**\n * Validates the Form side of the Form/YAML switcher\n */\nconst pipelineBuilderFormSchema = (formValues: PipelineBuilderFormYamlValues) => {\n  return yup.object({\n    name: nameValidationSchema((tKey) => i18n.t(tKey)).required(\n      i18n.t('pipelines-plugin~Required'),\n    ),\n    params: yup.array().of(\n      yup.object({\n        name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n        description: yup.string(),\n        default: yup.string(), // TODO: should include string[]\n        // TODO: should have type (string | string[])\n      }),\n    ),\n    resources: yup.array().of(\n      yup.object({\n        name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n        type: yup\n          .string()\n          .oneOf(Object.values(PipelineResourceType))\n          .required(i18n.t('pipelines-plugin~Required')),\n        // TODO: should include optional flag\n      }),\n    ),\n    workspaces: yup.array().of(\n      yup.object({\n        name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n        // TODO: should include optional flag\n      }),\n    ),\n    tasks: taskValidation(formValues, 'tasks')\n      .min(1, i18n.t('pipelines-plugin~Must define at least one task.'))\n      .required(i18n.t('pipelines-plugin~Required')),\n    finallyTasks: taskValidation(formValues, 'finallyTasks'),\n    listTasks: yup.array().of(\n      yup.object({\n        name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n        runAfter: validRunAfter(formValues.formData),\n      }),\n    ),\n    finallyListTasks: yup.array().of(\n      yup.object({\n        name: yup.string().required(i18n.t('pipelines-plugin~Required')),\n      }),\n    ),\n  });\n};\n\nexport const validationSchema = () =>\n  yup.mixed().test({\n    test(formValues: PipelineBuilderFormYamlValues) {\n      const formYamlDefinition = yup.object({\n        editorType: yup.string().oneOf(Object.values(EditorType)),\n        yamlData: yup.string(),\n        formData: yup.mixed().when('editorType', {\n          is: EditorType.Form,\n          then: pipelineBuilderFormSchema(formValues),\n        }),\n      });\n\n      return formYamlDefinition.validate(formValues, { abortEarly: false });\n    },\n  });\n","import * as React from 'react';\nimport { useFormikContext, FormikTouched } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { ClusterTaskModel, TaskModel } from '../../../models';\nimport { PipelineTask, TaskKind } from '../../../types';\nimport { AddNodeDirection } from '../pipeline-topology/const';\nimport {\n  PipelineBuilderTaskNodeModel,\n  PipelineMixedNodeModel,\n  PipelineTaskListNodeModel,\n  PipelineTaskLoadingNodeModel,\n} from '../pipeline-topology/types';\nimport {\n  createBuilderFinallyNode,\n  createInvalidTaskListNode,\n  createLoadingNode,\n  createTaskListNode,\n  getFinallyTaskHeight,\n  getFinallyTaskWidth,\n  getLastRegularTasks,\n  handleParallelToParallelNodes,\n  tasksToBuilderNodes,\n} from '../pipeline-topology/utils';\nimport { UpdateOperationType } from './const';\nimport {\n  PipelineBuilderFormikValues,\n  PipelineBuilderTaskResources,\n  PipelineBuilderTaskGroup,\n  SelectTaskCallback,\n  UpdateOperationAddData,\n  UpdateOperationConvertToFinallyTaskData,\n  UpdateOperationConvertToTaskData,\n  UpdateOperationFixInvalidTaskListData,\n  UpdateTasksCallback,\n  TaskSearchCallback,\n  BuilderTasksErrorGroup,\n  TaskErrors,\n  UpdateOperationConvertToLoadingTaskData,\n} from './types';\nimport { findTask, getTopLevelErrorMessage } from './utils';\n\nexport const useFormikFetchAndSaveTasks = (\n  namespace: string,\n  validateForm: () => void,\n  IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER: boolean,\n) => {\n  const { t } = useTranslation();\n  const { setFieldValue, setStatus } = useFormikContext<PipelineBuilderFormikValues>();\n\n  const resourcesToWatch = {\n    namespacedTasks: {\n      kind: referenceForModel(TaskModel),\n      isList: true,\n      namespace,\n    },\n    ...(!IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER && {\n      clusterTasks: {\n        kind: referenceForModel(ClusterTaskModel),\n        isList: true,\n        namespaced: false,\n      },\n    }),\n  };\n  const {\n    namespacedTasks,\n    clusterTasks: watchedClusterTasks = { loaded: true, data: [], loadError: null },\n  } = useK8sWatchResources<{\n    namespacedTasks: TaskKind[];\n    clusterTasks?: TaskKind[];\n  }>(resourcesToWatch);\n\n  const namespacedTaskData = namespacedTasks.loaded ? namespacedTasks.data : null;\n  const clusterTaskData = IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER\n    ? null\n    : watchedClusterTasks.loaded\n    ? watchedClusterTasks.data\n    : null;\n  React.useEffect(() => {\n    if (namespacedTaskData) {\n      setFieldValue('taskResources.namespacedTasks', namespacedTaskData, false);\n    }\n    if (!IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER && clusterTaskData) {\n      setFieldValue('taskResources.clusterTasks', clusterTaskData, false);\n    }\n    const tasksLoaded =\n      !!namespacedTaskData && (IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER || !!clusterTaskData);\n    setFieldValue('taskResources.tasksLoaded', tasksLoaded, false);\n    if (tasksLoaded) {\n      // Wait for Formik to fully understand the set values (thread end) and then validate again\n      setTimeout(() => validateForm(), 0);\n    }\n  }, [\n    setFieldValue,\n    namespacedTaskData,\n    clusterTaskData,\n    validateForm,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  ]);\n\n  const error =\n    namespacedTasks.loadError ||\n    (!IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER && watchedClusterTasks.loadError);\n  React.useEffect(() => {\n    if (!error) return;\n\n    setStatus({\n      taskLoadingError: t('pipelines-plugin~Failed to load Tasks. {{error}}', { error }),\n    });\n  }, [t, setStatus, error]);\n};\n\nconst useConnectFinally = (\n  namespace,\n  nodes,\n  taskGroup: PipelineBuilderTaskGroup,\n  onTaskSelection: SelectTaskCallback,\n  onUpdateTasks: UpdateTasksCallback,\n  onTaskSearch: TaskSearchCallback,\n  taskResources: PipelineBuilderTaskResources,\n  tasksInError: TaskErrors,\n): PipelineMixedNodeModel => {\n  const { clusterTasks, namespacedTasks } = taskResources;\n  const taskGroupRef = React.useRef(taskGroup);\n  taskGroupRef.current = taskGroup;\n  const addNewFinallyListNode = () => {\n    const data: UpdateOperationConvertToFinallyTaskData = {\n      listTaskName: `finally-list-${getRandomChars(6)}`,\n    };\n    onUpdateTasks(taskGroupRef.current, { type: UpdateOperationType.ADD_FINALLY_LIST_TASK, data });\n  };\n\n  const onNewInstallingTask = (\n    resource: TaskKind,\n    name: string,\n    isFinallyTask: boolean,\n    runAfter?: string[],\n  ) => {\n    const data: UpdateOperationConvertToLoadingTaskData = {\n      resource,\n      name,\n      runAfter,\n      isFinallyTask,\n    };\n    onUpdateTasks(taskGroupRef.current, { type: UpdateOperationType.ADD_LOADING_TASK, data });\n  };\n\n  const convertListToFinallyTask = (resource: TaskKind, name: string) => {\n    const data: UpdateOperationConvertToTaskData = { resource, name };\n    onUpdateTasks(taskGroupRef.current, {\n      type: UpdateOperationType.CONVERT_LIST_TO_FINALLY_TASK,\n      data,\n    });\n  };\n  const convertInvalidListToFinallyTask = (resource: TaskKind, name: string) => {\n    const data: UpdateOperationFixInvalidTaskListData = {\n      existingName: name,\n      resource,\n      runAfter: [],\n    };\n\n    onUpdateTasks(taskGroupRef.current, {\n      type: UpdateOperationType.FIX_INVALID_FINALLY_LIST_TASK,\n      data,\n    });\n  };\n\n  const finallyLoadingTasks = taskGroup.loadingTasks.filter((lt) => lt.isFinallyTask);\n  const finallyValidTasks = taskGroup.finallyTasks.filter(\n    (task) => !!findTask(taskResources, task),\n  );\n  const finallyInvalidTasks = taskGroup.finallyTasks.filter(\n    (task) => !findTask(taskResources, task),\n  );\n\n  const allTasksLength =\n    taskGroup.finallyTasks.length + taskGroup.finallyListTasks.length + finallyLoadingTasks.length;\n  const finallyNodeName = `finally-node-${taskGroup.finallyTasks.length}-${taskGroup.finallyListTasks.length}`;\n  const regularRunAfters = getLastRegularTasks(nodes);\n\n  const getInvalidFinallyListTaskData = (task) => ({\n    ...task,\n    convertList: (resource: TaskKind) =>\n      resource.kind\n        ? convertInvalidListToFinallyTask(resource, task.name)\n        : onNewInstallingTask(resource, task.name, true, regularRunAfters),\n    onRemoveTask: () => {\n      onUpdateTasks(taskGroupRef.current, {\n        type: UpdateOperationType.REMOVE_TASK,\n        data: { taskName: task.name },\n      });\n    },\n  });\n\n  const getFinallyListTaskData = (task) => ({\n    ...task,\n    convertList: (resource: TaskKind) =>\n      resource.kind\n        ? convertListToFinallyTask(resource, task.name)\n        : onNewInstallingTask(resource, task.name, true, regularRunAfters),\n    onRemoveTask: () => {\n      onUpdateTasks(taskGroupRef.current, {\n        type: UpdateOperationType.DELETE_LIST_TASK,\n        data: { listTaskName: task.name },\n      });\n    },\n  });\n\n  return createBuilderFinallyNode(\n    getFinallyTaskHeight(allTasksLength, false),\n    getFinallyTaskWidth(allTasksLength),\n  )(finallyNodeName, {\n    isFinallyTask: true,\n    namespace,\n    namespaceTaskList: namespacedTasks,\n    clusterTaskList: clusterTasks,\n    task: {\n      isFinallyTask: true,\n      name: finallyNodeName,\n      runAfter: regularRunAfters,\n      addNewFinallyListNode,\n      onTaskSearch,\n      finallyTasks: finallyValidTasks.map((ft, idx) => ({\n        ...ft,\n        onTaskSelection: () => onTaskSelection(ft, findTask(taskResources, ft), true),\n        error: getTopLevelErrorMessage(tasksInError)(idx),\n        selected: taskGroup.highlightedIds.includes(ft.name),\n        disableTooltip: true,\n      })),\n      finallyLoadingTasks,\n      finallyInvalidListTasks: finallyInvalidTasks.map((ivlt) =>\n        getInvalidFinallyListTaskData(ivlt),\n      ),\n      finallyListTasks: taskGroup.finallyListTasks.map((flt) => getFinallyListTaskData(flt)),\n    },\n  });\n};\n\nexport const useNodes = (\n  onTaskSelection: SelectTaskCallback,\n  onUpdateTasks: UpdateTasksCallback,\n  onTaskSearch: TaskSearchCallback,\n  taskGroup: PipelineBuilderTaskGroup,\n  taskResources: PipelineBuilderTaskResources,\n  tasksInError: BuilderTasksErrorGroup,\n): PipelineMixedNodeModel[] => {\n  const { clusterTasks, namespacedTasks } = taskResources;\n\n  const taskGroupRef = React.useRef(taskGroup);\n  taskGroupRef.current = taskGroup;\n\n  const onNewListNode = (task: PipelineTask, direction: AddNodeDirection) => {\n    const data: UpdateOperationAddData = { direction, relatedTask: task };\n    onUpdateTasks(taskGroupRef.current, { type: UpdateOperationType.ADD_LIST_TASK, data });\n  };\n  const onNewTask = (resource: TaskKind, name: string, runAfter?: string[]) => {\n    const data: UpdateOperationConvertToTaskData = { resource, name, runAfter };\n    onUpdateTasks(taskGroupRef.current, { type: UpdateOperationType.CONVERT_LIST_TO_TASK, data });\n  };\n\n  const onNewInstallingTask = (resource: TaskKind, name: string, runAfter?: string[]) => {\n    const data: UpdateOperationConvertToLoadingTaskData = {\n      resource,\n      name,\n      runAfter,\n      isFinallyTask: false,\n    };\n    onUpdateTasks(taskGroupRef.current, { type: UpdateOperationType.ADD_LOADING_TASK, data });\n  };\n\n  const newListNode = (\n    name: string,\n    runAfter?: string[],\n    firstTask?: boolean,\n  ): PipelineTaskListNodeModel =>\n    createTaskListNode(name, {\n      namespaceTaskList: namespacedTasks,\n      clusterTaskList: clusterTasks,\n      onNewTask: (resource: TaskKind) => {\n        resource.kind\n          ? onNewTask(resource, name, runAfter)\n          : onNewInstallingTask(resource, name, runAfter);\n      },\n      onTaskSearch,\n      onRemoveTask: firstTask\n        ? null\n        : () => {\n            onUpdateTasks(taskGroupRef.current, {\n              type: UpdateOperationType.DELETE_LIST_TASK,\n              data: { listTaskName: name },\n            });\n          },\n      task: {\n        name,\n        runAfter: runAfter || [],\n      },\n    });\n  const soloTask = (name = 'initial-node') => newListNode(name, undefined, true);\n  const newInvalidListNode = (name: string, runAfter?: string[]): PipelineTaskListNodeModel =>\n    createInvalidTaskListNode(name, {\n      namespaceTaskList: namespacedTasks,\n      clusterTaskList: clusterTasks,\n      onNewTask: (resource: TaskKind) => {\n        const data: UpdateOperationFixInvalidTaskListData = {\n          existingName: name,\n          resource,\n          runAfter,\n        };\n        resource.kind\n          ? onUpdateTasks(taskGroupRef.current, {\n              type: UpdateOperationType.FIX_INVALID_LIST_TASK,\n              data,\n            })\n          : onNewInstallingTask(resource, name, runAfter);\n      },\n      onTaskSearch,\n      onRemoveTask: () => {\n        onUpdateTasks(taskGroupRef.current, {\n          type: UpdateOperationType.REMOVE_TASK,\n          data: { taskName: name },\n        });\n      },\n      task: {\n        name,\n        runAfter: runAfter || [],\n      },\n    });\n  const newLoadingNode = (name: string, runAfter?: string[]): PipelineTaskLoadingNodeModel =>\n    createLoadingNode(name, {\n      isFinallyTask: false,\n      task: {\n        name,\n        runAfter: runAfter || [],\n      },\n    });\n\n  const invalidTaskList = taskGroup.tasks.filter((task) => !findTask(taskResources, task));\n  const validTaskList = taskGroup.tasks.filter((task) => !!findTask(taskResources, task));\n\n  const invalidTaskListNodes: PipelineTaskListNodeModel[] = invalidTaskList.map((task) =>\n    newInvalidListNode(task.name, task.runAfter),\n  );\n  const loadingTasks = taskGroup.loadingTasks.filter((lt) => !lt.isFinallyTask);\n  const loadingNodes: PipelineTaskListNodeModel[] = loadingTasks.map((task) =>\n    newLoadingNode(task.name, task.runAfter),\n  );\n  const taskNodes: PipelineBuilderTaskNodeModel[] =\n    validTaskList.length > 0\n      ? tasksToBuilderNodes(\n          validTaskList,\n          onNewListNode,\n          (task) => onTaskSelection(task, findTask(taskResources, task), false),\n          getTopLevelErrorMessage(tasksInError.tasks),\n          taskGroup.highlightedIds,\n        )\n      : [];\n  const taskListNodes: PipelineTaskListNodeModel[] =\n    taskGroup.tasks.length === 0 && taskGroup.listTasks.length <= 1 && loadingTasks.length === 0\n      ? [soloTask(taskGroup.listTasks[0]?.name)]\n      : taskGroup.listTasks.map((listTask) => newListNode(listTask.name, listTask.runAfter));\n\n  const nodes: PipelineMixedNodeModel[] = handleParallelToParallelNodes([\n    ...taskNodes,\n    ...taskListNodes,\n    ...invalidTaskListNodes,\n    ...loadingNodes,\n  ]);\n\n  const finallyNode = useConnectFinally(\n    'namespace', // why is this needed?\n    nodes,\n    taskGroup,\n    onTaskSelection,\n    onUpdateTasks,\n    onTaskSearch,\n    taskResources,\n    tasksInError.finally,\n  );\n\n  return [...nodes, finallyNode];\n};\n\nconst touchTaskWorkspaces = (task: PipelineTask): FormikTouched<PipelineTask> => ({\n  workspaces: task.workspaces?.map(() => ({ workspace: true })),\n});\n\nconst touchTaskResources = (task: PipelineTask): FormikTouched<PipelineTask> => ({\n  resources: {\n    inputs: task.resources?.inputs?.map(() => ({ resource: true })),\n    outputs: task.resources?.outputs?.map(() => ({ resource: true })),\n  },\n});\n\nexport const useExplicitPipelineTaskTouch = () => {\n  const { setTouched, touched, values } = useFormikContext<PipelineBuilderFormikValues>();\n  const workspacesTouched = !!touched.formData?.workspaces;\n  const resourcesTouched = !!touched.formData?.resources;\n\n  React.useEffect(() => {\n    if (workspacesTouched) {\n      setTouched({\n        formData: {\n          tasks: values.formData?.tasks?.map(touchTaskWorkspaces),\n          finallyTasks: values.formData?.finallyTasks?.map(touchTaskWorkspaces),\n        },\n      });\n    }\n    if (resourcesTouched) {\n      setTouched({\n        formData: {\n          tasks: values.formData?.tasks?.map(touchTaskResources),\n          finallyTasks: values.formData?.finallyTasks?.map(touchTaskResources),\n        },\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [workspacesTouched, resourcesTouched]);\n};\n\nexport const useLoadingTaskCleanup = (\n  onUpdateTasks: UpdateTasksCallback,\n  taskGroup: PipelineBuilderTaskGroup,\n) => {\n  const { values } = useFormikContext<PipelineBuilderFormikValues>();\n\n  React.useEffect(() => {\n    const { loadingTasks } = values.formData;\n    loadingTasks.forEach((task) => {\n      const installedTask = values.taskResources.namespacedTasks.find(\n        (nt) => nt.metadata.name === task?.taskRef.name,\n      );\n      if (installedTask) {\n        const data: UpdateOperationConvertToTaskData = {\n          resource: installedTask,\n          name: task.name,\n          runAfter: task.runAfter,\n        };\n        const updateOperationType = task.isFinallyTask\n          ? UpdateOperationType.CONVERT_LOADING_TASK_TO_FINALLY_TASK\n          : UpdateOperationType.CONVERT_LOADING_TASK_TO_TASK;\n        onUpdateTasks(taskGroup, {\n          type: updateOperationType,\n          data,\n        });\n      }\n    });\n  }, [values, onUpdateTasks, taskGroup]);\n};\n\nexport const useCleanupOnFailure = (\n  failedTasks: string[],\n  onUpdateTasks: UpdateTasksCallback,\n  taskGroup: PipelineBuilderTaskGroup,\n) => {\n  const { values } = useFormikContext<PipelineBuilderFormikValues>();\n  React.useEffect(() => {\n    const { loadingTasks } = values.formData;\n    loadingTasks.forEach((task) => {\n      if (failedTasks.includes(task?.taskRef.name)) {\n        const data: UpdateOperationConvertToTaskData = {\n          resource: task.resource,\n          name: task.name,\n          runAfter: task.runAfter,\n        };\n        const updateOperationType = task.isFinallyTask\n          ? UpdateOperationType.CONVERT_LOADING_TASK_TO_FINALLY_TASK\n          : UpdateOperationType.CONVERT_LOADING_TASK_TO_TASK;\n        onUpdateTasks(taskGroup, {\n          type: updateOperationType,\n          data,\n        });\n      }\n    });\n  }, [values, onUpdateTasks, taskGroup, failedTasks]);\n};\n","import i18n from 'i18next';\nimport { safeLoad } from 'js-yaml';\nimport * as _ from 'lodash';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk';\nimport { coFetch } from '@console/internal/co-fetch';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport { ClusterTaskModel, TaskModel } from '../../models';\nimport { returnValidTaskModel } from '../../utils/pipeline-utils';\nimport { TektonTaskAnnotation, TaskProviders } from '../pipelines/const';\nimport { ARTIFACTHUB, CTALabel, TEKTONHUB } from './const';\n\nexport const isSelectedVersionInstalled = (item: CatalogItem, selectedVersion: string): boolean => {\n  return item.attributes?.installed === selectedVersion;\n};\n\nexport const isTaskVersionInstalled = (item: CatalogItem): boolean => !!item.attributes?.installed;\n\nexport const isOneVersionInstalled = (item: CatalogItem): boolean => {\n  return !!(\n    item.attributes?.installed &&\n    item.attributes?.versions?.some(\n      (v) => v.version?.toString() === item.attributes?.installed?.toString(),\n    )\n  );\n};\n\nexport const isTektonHubTaskWithoutVersions = (item: CatalogItem): boolean => {\n  return item.provider === TaskProviders.tektonHub && item?.attributes?.versions?.length === 0;\n};\n\nexport const isArtifactHubTask = (item: CatalogItem): boolean => {\n  return item.data.source === ARTIFACTHUB && item.provider === TaskProviders.artifactHub;\n};\n\nexport const isSelectedVersionUpgradable = (\n  item: CatalogItem,\n  selectedVersion: string,\n): boolean => {\n  return !isSelectedVersionInstalled(item, selectedVersion) && isOneVersionInstalled(item);\n};\n\nexport const getTaskCtaType = (item: CatalogItem, selectedVersion: string) => {\n  return isSelectedVersionInstalled(item, selectedVersion)\n    ? CTALabel.Add\n    : isSelectedVersionUpgradable(item, selectedVersion)\n    ? CTALabel.Update\n    : CTALabel.Install;\n};\n\nexport const getCtaButtonText = (item: CatalogItem, selectedVersion: string): string => {\n  const ctaType = getTaskCtaType(item, selectedVersion);\n  switch (ctaType) {\n    case CTALabel.Add:\n      return i18n.t('pipelines-plugin~Add');\n    case CTALabel.Install:\n      return i18n.t('pipelines-plugin~Install and add');\n    case CTALabel.Update:\n      return i18n.t('pipelines-plugin~Update and add');\n    default:\n      throw new Error(`Unknown button type, ${ctaType}`);\n  }\n};\n\nexport const isInstalledNamespaceTask = (item: CatalogItem) => {\n  return (\n    item.data.kind === TaskModel.kind &&\n    item.data.metadata?.annotations?.[TektonTaskAnnotation.installedFrom] === TEKTONHUB\n  );\n};\n\nexport const isExternalTask = (item: CatalogItem) => {\n  return !item.data.hasOwnProperty('apiVersion');\n};\n\nexport const isTaskSearchable = (items: CatalogItem[], item: CatalogItem) => {\n  const hasExternalTasks = items.some(isExternalTask);\n  return !hasExternalTasks || !isInstalledNamespaceTask(item);\n};\nexport const getInstalledFromAnnotation = () => {\n  return { [TektonTaskAnnotation.installedFrom]: TEKTONHUB };\n};\n\nexport const getSelectedVersionUrl = (item: CatalogItem, version: string): string | null => {\n  if (!item?.attributes?.versions) {\n    return null;\n  }\n  return isArtifactHubTask(item)\n    ? item.attributes.selectedVersionContentUrl\n    : item.attributes.versions.find((v) => v.version === version)?.rawURL;\n};\n\nexport const findInstalledTask = (items: CatalogItem[], item: CatalogItem): CatalogItem => {\n  return items.find(\n    (i) =>\n      i.uid !== item.uid &&\n      i.name === item.name &&\n      item.data.kind !== ClusterTaskModel.kind &&\n      i.data.kind === TaskModel.kind &&\n      (i.data.metadata?.annotations?.[TektonTaskAnnotation.installedFrom] === TEKTONHUB ||\n        i.data.metadata?.annotations?.[TektonTaskAnnotation.installedFrom] === ARTIFACTHUB),\n  );\n};\n\nexport const updateTask = async (\n  url: string,\n  taskData: CatalogItem,\n  namespace: string,\n  name: string,\n) => {\n  return coFetch(url)\n    .then(async (res) => {\n      const yaml = await res.text();\n      const task = safeLoad(yaml);\n      task.metadata.namespace = namespace;\n      task.metadata.annotations = {\n        ...task.metadata.annotations,\n        ...getInstalledFromAnnotation(),\n      };\n      task.metadata = _.merge({}, taskData.data.metadata, task.metadata);\n      const taskModel = returnValidTaskModel(task);\n      return k8sUpdate(taskModel, task, namespace, name);\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.warn('Error:', err);\n      throw err;\n    });\n};\n\nexport const createTask = (url: string, namespace: string) => {\n  return coFetch(url)\n    .then(async (res) => {\n      const yaml = await res.text();\n      const task = safeLoad(yaml);\n      task.metadata.namespace = namespace;\n      task.metadata.annotations = {\n        ...task.metadata.annotations,\n        [TektonTaskAnnotation.installedFrom]: TEKTONHUB,\n      };\n      const taskModel = returnValidTaskModel(task);\n      return k8sCreate(taskModel, task);\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.warn('Error:', err);\n      throw err;\n    });\n};\n","import * as React from 'react';\nimport { coFetch } from '@console/internal/co-fetch';\n\nexport type ApiResult<R extends any[]> = [R, boolean, string];\nexport type UseApiResponse = <R extends any = any>(\n  url: string,\n  hasPermission: boolean,\n) => ApiResult<R[]>;\n\nconst useApiResponse: UseApiResponse = (url: string, hasPermission: boolean) => {\n  const [resultData, setResult] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadedError, setLoadedError] = React.useState<string>();\n\n  React.useEffect(() => {\n    let mounted = true;\n    if (hasPermission) {\n      coFetch(url)\n        .then(async (res) => {\n          const json = await res.json();\n          if (mounted) {\n            setLoaded(true);\n            setResult(json.data);\n          }\n        })\n        .catch((err) => {\n          if (mounted) {\n            setLoaded(true);\n            setLoadedError(err?.message);\n          }\n        });\n    } else {\n      setLoaded(true);\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [url, hasPermission]);\n\n  return [resultData, loaded, loadedError];\n};\n\nexport default useApiResponse;\n","export { default as PipelineRunDetailsPage } from './PipelineRunDetailsPage';\nexport { default as PipelineRunsResourceList } from './PipelineRunsResourceList';\nexport { default as PipelineRunsK8sResourceList } from './PipelineRunsK8sResourceList';\nexport { default as PipelineRunsPage } from './PipelineRunsPage';\nexport { default as TaskRuns } from './detail-page-tabs/TaskRuns';\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { GitProvider } from '@console/git-service/src';\nimport { detectGitType } from './repository-form-utils';\nimport { RepositoryKind } from './types';\n\nexport const getLatestRepositoryPLRName = (repository: RepositoryKind) => {\n  const runNames = repository.pipelinerun_status\n    ?.sort((a, b) => {\n      if (a.completionTime) {\n        return b?.completionTime && new Date(a.completionTime) > new Date(b.completionTime)\n          ? 1\n          : -1;\n      }\n      return b?.completionTime || new Date(a?.startTime) > new Date(b.startTime) ? 1 : -1;\n    })\n    .map((plrStatus) => plrStatus.pipelineRunName);\n  return runNames?.length > 0 ? runNames[runNames.length - 1] : '';\n};\n\nexport const getGitProviderIcon = (url: string) => {\n  const gitType = detectGitType(url);\n\n  switch (gitType) {\n    case GitProvider.GITHUB: {\n      return <GithubIcon title={url} />;\n    }\n    case GitProvider.GITLAB: {\n      return <GitlabIcon title={url} />;\n    }\n    case GitProvider.BITBUCKET: {\n      return <BitbucketIcon title={url} />;\n    }\n    default: {\n      return <GitAltIcon title={url} />;\n    }\n  }\n};\n\nexport const getLabelValue = (branchName: string): string => {\n  if (branchName?.startsWith('refs/heads/') || branchName?.startsWith('refs-heads-')) {\n    return 'pipelines-plugin~Branch';\n  }\n\n  if (branchName?.startsWith('refs/tags/') || branchName?.startsWith('refs-tags-')) {\n    return 'pipelines-plugin~Tag';\n  }\n  return 'pipelines-plugin~Branch';\n};\n\nexport const sanitizeBranchName = (branchName: string): string => {\n  if (branchName?.startsWith('refs/heads/')) {\n    return branchName.replace('refs/heads/', '');\n  }\n\n  if (branchName?.startsWith('refs-heads-')) {\n    return branchName.replace('refs-heads-', '');\n  }\n\n  if (branchName?.startsWith('refs/tags/')) {\n    return branchName.replace('refs/tags/', '');\n  }\n\n  if (branchName?.startsWith('refs-tags-')) {\n    return branchName.replace('refs-tags-', '');\n  }\n  return branchName;\n};\n","import * as React from 'react';\nimport { PipelineRunWorkspace } from '../../../types';\nimport EmptyDirectoriesSection from './EmptyDirectoriesSection';\nimport VolumeClaimTemplateSection from './VolumeClaimTemplateSection';\nimport WorkspaceResourcesSection from './WorkspaceResourcesSection';\n\nexport interface WorkspaceResourceLinkListProps {\n  workspaces: PipelineRunWorkspace[];\n  namespace: string;\n  ownerResourceName: string;\n  ownerResourceKind?: string;\n}\n\nconst WorkspaceResourceLinkList: React.FC<WorkspaceResourceLinkListProps> = ({\n  workspaces,\n  namespace,\n  ownerResourceName,\n  ownerResourceKind,\n}) => {\n  if (!workspaces || workspaces.length === 0) return null;\n\n  return (\n    <>\n      <WorkspaceResourcesSection namespace={namespace} workspaces={workspaces} />\n      <VolumeClaimTemplateSection\n        namespace={namespace}\n        ownerResourceName={ownerResourceName}\n        ownerResourceKind={ownerResourceKind}\n      />\n      <EmptyDirectoriesSection workspaces={workspaces} />\n    </>\n  );\n};\n\nexport default WorkspaceResourceLinkList;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineRunWorkspace } from '../../../types';\n\ntype EmptyDirectoriesSectionProps = {\n  workspaces: PipelineRunWorkspace[];\n};\n\nconst EmptyDirectoriesSection: React.FC<EmptyDirectoriesSectionProps> = ({ workspaces }) => {\n  const { t } = useTranslation();\n\n  if (!workspaces || workspaces.length === 0) return null;\n\n  const emptyDirectoryWorkspaces = workspaces.filter((workspace) => !!workspace.emptyDir);\n  if (emptyDirectoryWorkspaces.length === 0) return null;\n\n  return (\n    <dl data-test-id=\"empty-directories-section\">\n      <dt>{t('pipelines-plugin~Empty Directories')}</dt>\n      <dd>\n        {emptyDirectoryWorkspaces.map((workspace) => (\n          <div key={workspace.name} data-test-id=\"empty-directory-workspace\">\n            {t(`pipelines-plugin~Empty Directory ({{workspaceName}})`, {\n              workspaceName: workspace.name,\n            })}\n          </div>\n        ))}\n      </dd>\n    </dl>\n  );\n};\n\nexport default EmptyDirectoriesSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport { PersistentVolumeClaimKind } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../models';\nimport { getMatchedPVCs } from '../../../utils/pipeline-utils';\n\nexport interface VolumeClaimTemplatesSectionProps {\n  namespace: string;\n  ownerResourceName: string;\n  ownerResourceKind?: string;\n}\n\nconst VolumeClaimTemplatesSection: React.FC<VolumeClaimTemplatesSectionProps> = ({\n  namespace,\n  ownerResourceName,\n  ownerResourceKind = PipelineRunModel.kind,\n}) => {\n  const [pvcResources, loaded, loadError] = useK8sWatchResource<PersistentVolumeClaimKind[]>({\n    kind: PersistentVolumeClaimModel.kind,\n    isList: true,\n    namespace,\n  });\n\n  const { t } = useTranslation();\n\n  if (!ownerResourceName || !loaded || loadError || pvcResources?.length === 0) return null;\n\n  const matchedPVCs = getMatchedPVCs(pvcResources, ownerResourceName, ownerResourceKind);\n\n  if (!matchedPVCs || matchedPVCs.length === 0) return null;\n\n  return (\n    <dl data-test-id=\"volumeClaimTemplate-resources-section\">\n      <dt>{t('pipelines-plugin~VolumeClaimTemplate Resources')}</dt>\n      <dd>\n        {matchedPVCs.map((pvcResource) => {\n          return (\n            <ResourceLink\n              name={pvcResource.metadata.name}\n              key={pvcResource.metadata.name}\n              namespace={pvcResource.metadata.namespace}\n              kind={PersistentVolumeClaimModel.kind}\n            />\n          );\n        })}\n      </dd>\n    </dl>\n  );\n};\n\nexport default VolumeClaimTemplatesSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { ConfigMapModel, PersistentVolumeClaimModel, SecretModel } from '@console/internal/models';\nimport {\n  PipelineRunWorkspace,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from '../../../types';\n\ntype WorkspaceResourcesSectionProps = {\n  namespace: string;\n  workspaces: PipelineRunWorkspace[];\n};\n\nconst WorkspaceResourcesSection: React.FC<WorkspaceResourcesSectionProps> = ({\n  namespace,\n  workspaces,\n}) => {\n  const { t } = useTranslation();\n\n  if (!namespace || !workspaces || workspaces.length === 0) return null;\n\n  const workspacesRenders = workspaces\n    .map((workspace) => {\n      if (workspace.persistentVolumeClaim) {\n        const persistentVolumeClaim = workspace.persistentVolumeClaim as VolumeTypePVC;\n        const displayName = `${persistentVolumeClaim.claimName} (${workspace.name})`;\n        return (\n          <ResourceLink\n            key={workspace.name}\n            name={persistentVolumeClaim.claimName}\n            namespace={namespace}\n            kind={PersistentVolumeClaimModel.kind}\n            displayName={displayName}\n          />\n        );\n      }\n      if (workspace.configMap) {\n        const configMap = workspace.configMap as VolumeTypeConfigMaps;\n        const displayName = `${configMap.name} (${workspace.name})`;\n        return (\n          <ResourceLink\n            key={workspace.name}\n            name={configMap.name}\n            namespace={namespace}\n            kind={ConfigMapModel.kind}\n            displayName={displayName}\n          />\n        );\n      }\n      if (workspace.secret) {\n        const secret = workspace.secret as VolumeTypeSecret;\n        const displayName = `${secret.secretName} (${workspace.name})`;\n        return (\n          <ResourceLink\n            key={workspace.name}\n            name={secret.secretName}\n            kind={SecretModel.kind}\n            namespace={namespace}\n            displayName={displayName}\n          />\n        );\n      }\n      return null;\n    })\n    .filter((v) => !!v);\n\n  if (workspacesRenders.length === 0) return null;\n\n  return (\n    <dl data-test-id=\"workspace-resources-section\">\n      <dt>{t('pipelines-plugin~Workspace Resources')}</dt>\n      <dd>{workspacesRenders}</dd>\n    </dl>\n  );\n};\n\nexport default WorkspaceResourcesSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CombinedErrorDetails } from './log-snippet-types';\nimport LogSnippetBlock from './LogSnippetBlock';\n\ntype RunDetailErrorLogProps = {\n  logDetails: CombinedErrorDetails;\n  namespace: string;\n};\n\nconst RunDetailsErrorLog: React.FC<RunDetailErrorLogProps> = ({ logDetails, namespace }) => {\n  const { t } = useTranslation();\n  if (!logDetails) {\n    return null;\n  }\n\n  return (\n    <>\n      <dl>\n        <dt>{t('pipelines-plugin~Message')}</dt>\n        <dd>{logDetails.title}</dd>\n      </dl>\n      <dl>\n        <dt>{t('pipelines-plugin~Log snippet')}</dt>\n        <dd>\n          <LogSnippetBlock logDetails={logDetails} namespace={namespace}>\n            {(logSnippet: string) => <pre className=\"co-pre\">{logSnippet}</pre>}\n          </LogSnippetBlock>\n        </dd>\n      </dl>\n    </>\n  );\n};\n\nexport default RunDetailsErrorLog;\n","import * as React from 'react';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { PodModel } from '@console/internal/models';\nimport {\n  EventInvolvedObject,\n  K8sResourceKind,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { PipelineRunModel, TaskRunModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\nimport { TektonResourceLabel } from '../../pipelines/const';\n\nexport type EventFilter = (eventObj: EventInvolvedObject) => boolean;\ntype ResourcesType = { [key: string]: K8sResourceKind[] };\n/**\n * Returns the pod resource for watchK8sResource\n * @param namespace\n * @param labels metadata lables to query\n */\nexport const getPodsByLabels = (namespace: string, labels: { [label: string]: string }) => {\n  return {\n    kind: PodModel.kind,\n    selector: {\n      matchLabels: labels,\n    },\n    namespace,\n    isList: true,\n    optional: true,\n  };\n};\n/**\n * Get associated taskruns and pods for a given namespace.\n * @param namespace\n */\nexport const usePipelineRunRelatedResources = (\n  namespace: string,\n  pipelineRunName: string,\n): WatchK8sResults<ResourcesType> => {\n  const plrRelatedResources: WatchK8sResources<ResourcesType> = React.useMemo(() => {\n    return {\n      taskruns: {\n        kind: referenceForModel(TaskRunModel),\n        namespace,\n        selector: {\n          matchLabels: { [TektonResourceLabel.pipelinerun]: pipelineRunName },\n        },\n        isList: true,\n        optional: true,\n      },\n      pods: getPodsByLabels(namespace, { [TektonResourceLabel.pipelinerun]: pipelineRunName }),\n    };\n  }, [namespace, pipelineRunName]);\n  return useK8sWatchResources<ResourcesType>(plrRelatedResources);\n};\n/**\n * Returns the pods associated with the taskRuns\n * @param namespace\n * @param taskRunName\n */\nexport const useTaskRunRelatedResources = (\n  namespace: string,\n  taskRunName: string,\n): WatchK8sResults<ResourcesType> => {\n  const tsrRelatedResources: WatchK8sResources<ResourcesType> = React.useMemo(() => {\n    return {\n      pods: getPodsByLabels(namespace, { [TektonResourceLabel.taskrun]: taskRunName }),\n    };\n  }, [namespace, taskRunName]);\n  return useK8sWatchResources<ResourcesType>(tsrRelatedResources);\n};\n\nconst isTaskRunMatched = (taskruns): EventFilter => (taskRun: EventInvolvedObject): boolean =>\n  taskRun.kind === TaskRunModel.kind && taskruns.data.find((t) => t.metadata.uid === taskRun.uid);\n\nconst isPodMatched = (pods): EventFilter => (pod: EventInvolvedObject): boolean =>\n  pod.kind === PodModel.kind && pods.data.find((p) => p.metadata.uid === pod.uid);\n\n/**\n * Custom hook to return the list of event filters to find the pipelinerun related resources.\n * @param namespace\n * @param pipelineRun\n */\nexport const usePipelineRunFilters = (\n  namespace: string,\n  pipelineRun: PipelineRunKind,\n): EventFilter[] => {\n  const { taskruns, pods } = usePipelineRunRelatedResources(namespace, pipelineRun.metadata.name);\n  const isPipelineRunMatched: EventFilter = (plr: EventInvolvedObject): boolean => {\n    return plr.kind === PipelineRunModel.kind && plr.uid === pipelineRun.metadata.uid;\n  };\n  return [isPipelineRunMatched, isTaskRunMatched(taskruns), isPodMatched(pods)];\n};\n\n/**\n * Custom hook to return the list of event filters to find the taskrun related resources.\n * @param namespace\n * @param taskRun\n */\nexport const useTaskRunFilters = (namespace: string, taskRun: TaskRunKind): EventFilter[] => {\n  const { pods } = useTaskRunRelatedResources(namespace, taskRun.metadata.name);\n\n  const isTaskRun: EventFilter = (tRun: EventInvolvedObject): boolean => {\n    return tRun.kind === TaskRunModel.kind && tRun.uid === taskRun.metadata.uid;\n  };\n  return [isTaskRun, isPodMatched(pods)];\n};\n","import * as React from 'react';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { ColumnLayout } from '@console/dynamic-plugin-sdk';\nimport { Table } from '@console/internal/components/factory';\nimport { useActiveColumns } from '@console/internal/components/factory/Table/active-columns-hook';\nimport { TaskRunModel } from '../../../models';\nimport { TaskRunKind } from '../../../types';\nimport TaskRunsHeader from './TaskRunsHeader';\nimport TaskRunsRow from './TaskRunsRow';\n\ninterface TaskRunsListProps {\n  customData?: { [key: string]: any };\n  columnLayout: ColumnLayout;\n  loaded?: boolean;\n  data?: TaskRunKind[];\n}\n\nconst TaskRunsList: React.FC<TaskRunsListProps> = (props) => {\n  const { t } = useTranslation();\n  const {\n    columnLayout: { columns, id },\n    customData,\n    data,\n    loaded,\n  } = props;\n  const [activeColumns, userSettingsLoaded] = useActiveColumns({\n    columns,\n    columnManagementID: id,\n  });\n  const selectedColumns = React.useMemo(() => new Set(activeColumns.map((col) => col.id)), [\n    activeColumns,\n  ]);\n  const newCustomData = { ...customData, selectedColumns };\n  const onRowsRendered = ({ stopIndex }) => {\n    if (loaded && stopIndex === data.length - 1) {\n      customData?.nextPage?.();\n    }\n  };\n  return (\n    userSettingsLoaded && (\n      <Table\n        {...props}\n        aria-label={t(TaskRunModel.labelPluralKey)}\n        defaultSortField=\"status.startTime\"\n        defaultSortOrder={SortByDirection.desc}\n        Header={TaskRunsHeader(props.customData?.showPipelineColumn)}\n        Row={TaskRunsRow}\n        virtualize\n        activeColumns={selectedColumns}\n        customData={newCustomData}\n        onRowsRendered={onRowsRendered}\n      />\n    )\n  );\n};\n\nexport default TaskRunsList;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ArchiveIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../const';\nimport { TaskRunModel, PipelineModel } from '../../../models';\nimport { TaskRunKind } from '../../../types';\nimport { getTaskRunKebabActions } from '../../../utils/pipeline-actions';\nimport { getModelReferenceFromTaskKind } from '../../../utils/pipeline-augment';\nimport { taskRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { pipelineRunDuration } from '../../../utils/pipeline-utils';\nimport { ResourceKebab } from '../../pipelineruns/triggered-by/ResourceKebab';\nimport { TektonResourceLabel } from '../../pipelines/const';\nimport TaskRunStatus from '../status/TaskRunStatus';\nimport { tableColumnClasses } from './taskruns-table';\n\nimport './TaskRunsRow.scss';\n\nconst taskRunsReference = referenceForModel(TaskRunModel);\nconst pipelineReference = referenceForModel(PipelineModel);\n\nconst TaskRunsRow: React.FC<RowFunctionArgs<TaskRunKind>> = ({ obj, customData }) => {\n  const { t } = useTranslation();\n  const { selectedColumns } = customData;\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={taskRunsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n          data-test-id={obj.metadata.name}\n          nameSuffix={\n            <>\n              {obj?.metadata?.annotations?.[DELETED_RESOURCE_IN_K8S_ANNOTATION] === 'true' ||\n              obj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION] === 'true' ? (\n                <Tooltip content={t('pipelines-plugin~Archived in Tekton results')}>\n                  <div className=\"opp-task-run-list__results-indicator\">\n                    <ArchiveIcon />\n                  </div>\n                </Tooltip>\n              ) : null}\n            </>\n          }\n        />\n      </TableData>\n      {selectedColumns?.has('namespace') && (\n        <TableData className={tableColumnClasses[1]} columnID=\"namespace\">\n          <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n        </TableData>\n      )}\n      {customData?.showPipelineColumn && selectedColumns?.has('pipeline') && (\n        <TableData className={tableColumnClasses[2]}>\n          {obj.metadata.labels[TektonResourceLabel.pipeline] ? (\n            <ResourceLink\n              kind={pipelineReference}\n              name={obj.metadata.labels[TektonResourceLabel.pipeline]}\n              namespace={obj.metadata.namespace}\n            />\n          ) : (\n            '-'\n          )}\n        </TableData>\n      )}\n      {selectedColumns?.has('task') && (\n        <TableData className={tableColumnClasses[3]}>\n          {obj.spec.taskRef?.name ? (\n            <ResourceLink\n              kind={getModelReferenceFromTaskKind(obj.spec.taskRef?.kind)}\n              displayName={obj.metadata.labels[TektonResourceLabel.pipelineTask]}\n              name={obj.spec.taskRef.name}\n              namespace={obj.metadata.namespace}\n            />\n          ) : (\n            '-'\n          )}\n        </TableData>\n      )}\n      {selectedColumns?.has('pod') && (\n        <TableData className={tableColumnClasses[4]}>\n          {obj.status?.podName ? (\n            <ResourceLink kind=\"Pod\" name={obj.status.podName} namespace={obj.metadata.namespace} />\n          ) : (\n            '-'\n          )}\n        </TableData>\n      )}\n      {selectedColumns?.has('status') && (\n        <TableData className={tableColumnClasses[5]}>\n          <TaskRunStatus status={taskRunFilterReducer(obj)} taskRun={obj} />\n        </TableData>\n      )}\n      {selectedColumns?.has('started') && (\n        <TableData className={tableColumnClasses[6]}>\n          <Timestamp timestamp={obj?.status?.startTime} />\n        </TableData>\n      )}\n      {selectedColumns?.has('duration') && (\n        <TableData className={tableColumnClasses[7]}>{pipelineRunDuration(obj)}</TableData>\n      )}\n      <TableData className={tableColumnClasses[8]}>\n        <ResourceKebab actions={getTaskRunKebabActions()} kind={taskRunsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport default TaskRunsRow;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { TaskRunModel } from '../../../models';\nimport { TaskRunKind } from '../../../types';\nimport { taskRunFilterTitleReducer } from '../../../utils/pipeline-filter-reducer';\nimport PipelineResourceStatus from '../../pipelineruns/status/PipelineResourceStatus';\nimport StatusPopoverContent from '../../pipelineruns/status/StatusPopoverContent';\nimport { getTRLogSnippet } from '../logs/taskRunLogSnippet';\n\ntype TaskRunStatusProps = {\n  status: string;\n  taskRun: TaskRunKind;\n};\nconst TaskRunStatus: React.FC<TaskRunStatusProps> = ({ status, taskRun }) => {\n  const { t } = useTranslation();\n  return (\n    <PipelineResourceStatus status={status} title={taskRunFilterTitleReducer(taskRun)}>\n      <StatusPopoverContent\n        logDetails={getTRLogSnippet(taskRun)}\n        namespace={taskRun.metadata.namespace}\n        link={\n          <Link\n            to={`${resourcePathFromModel(\n              TaskRunModel,\n              taskRun.metadata.name,\n              taskRun.metadata.namespace,\n            )}/logs`}\n          >\n            {t('pipelines-plugin~View logs')}\n          </Link>\n        }\n      />\n    </PipelineResourceStatus>\n  );\n};\n\nexport default TaskRunStatus;\n","export { default as PipelineDetailsPage } from './PipelineDetailsPage';\nexport { default as PipelinesPage } from './PipelinesPage';\nexport { default as EventListenerPage } from './EventListenerPage';\nexport { default as TriggerTemplatePage } from './TriggerTemplatePage';\nexport { default as TriggerBindingPage } from './TriggerBindingPage';\nexport { default as ClusterTriggerBindingPage } from './ClusterTriggerBindingPage';\nexport { default as PipelinesResourceList } from './PipelinesResourceList';\nexport { default as PipelineResourceDetailsPage } from './detail-page-tabs/PipelineResourceDetailsPage';\nexport { default as PipelineConditionDetailsPage } from './detail-page-tabs/PipelineConditionDetailsPage';\nexport { default as PipelineBuilderPage } from './pipeline-builder/PipelineBuilderPage';\nexport { default as PipelineBuilderEditPage } from './pipeline-builder/PipelineBuilderEditPage';\nexport { default as PipelineTabbedPage } from './PipelineTabbedPage';\nexport { default as PipelineParameters } from './PipelineParameters';\nexport { default as PipelineMetrics } from './pipeline-metrics/PipelineMetrics';\n","import * as React from 'react';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { DetailsPage, DetailsPageProps } from '@console/internal/components/factory';\nimport { KebabAction, navFactory, LoadingBox } from '@console/internal/components/utils';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { PipelineModel } from '../../models';\nimport { PipelineKind } from '../../types';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { getPipelineKebabActions } from '../../utils/pipeline-actions';\nimport { useMenuActionsWithUserAnnotation } from '../pipelineruns/triggered-by';\nimport {\n  PipelineDetails,\n  PipelineForm,\n  PipelineParametersForm,\n  PipelineRuns,\n  parametersValidationSchema,\n} from './detail-page-tabs';\nimport { PipelineDetailsTabProps } from './detail-page-tabs/types';\nimport { useDevPipelinesBreadcrumbsFor, useLatestPipelineRun } from './hooks';\nimport { usePipelineMetricsLevel } from './utils/pipeline-operator';\nimport { usePipelineTriggerTemplateNames } from './utils/triggers';\n\nconst PipelineDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const { name, namespace, kindObj } = props;\n  const templateNames = usePipelineTriggerTemplateNames(name, namespace) || [];\n  const breadcrumbsFor = useDevPipelinesBreadcrumbsFor(kindObj);\n  const [, pipelineLoaded, pipelineError] = useK8sGet<PipelineKind>(PipelineModel, name, namespace);\n  const latestPipelineRun = useLatestPipelineRun(name, namespace);\n  const badge = usePipelineTechPreviewBadge(namespace);\n  const { hasUpdatePermission, queryPrefix, metricsLevel } = usePipelineMetricsLevel(namespace);\n\n  const augmentedMenuActions: KebabAction[] = useMenuActionsWithUserAnnotation(\n    getPipelineKebabActions(latestPipelineRun, templateNames.length > 0),\n  );\n  if (pipelineLoaded && pipelineError?.response?.status === 404) {\n    return <ErrorPage404 />;\n  }\n  return pipelineLoaded ? (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      menuActions={augmentedMenuActions}\n      customData={{ templateNames, queryPrefix, metricsLevel, hasUpdatePermission }}\n      breadcrumbsFor={() => breadcrumbsFor}\n      pages={[\n        navFactory.details(PipelineDetails),\n        navFactory.editYaml(),\n        {\n          href: 'Runs',\n          // t('pipelines-plugin~PipelineRuns')\n          nameKey: 'pipelines-plugin~PipelineRuns',\n          component: PipelineRuns,\n        },\n        {\n          href: 'parameters',\n          // t('pipelines-plugin~Parameters')\n          nameKey: 'pipelines-plugin~Parameters',\n          component: (pageProps: PipelineDetailsTabProps) => (\n            <PipelineForm\n              PipelineFormComponent={PipelineParametersForm}\n              formName=\"parameters\"\n              validationSchema={parametersValidationSchema()}\n              obj={pageProps.obj}\n              {...pageProps}\n            />\n          ),\n        },\n      ]}\n    />\n  ) : (\n    <LoadingBox />\n  );\n};\n\nexport default PipelineDetailsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionHeading, ResourceSummary } from '@console/internal/components/utils';\nimport { TriggerTemplateModel } from '../../../../models';\nimport WorkspaceDefinitionList from '../../../shared/workspaces/WorkspaceDefinitionList';\nimport DynamicResourceLinkList from '../../resource-overview/DynamicResourceLinkList';\nimport TriggerTemplateResourceLink from '../../resource-overview/TriggerTemplateResourceLink';\nimport { PipelineDetailsTabProps } from '../types';\nimport { getPipelineTaskLinks } from '../utils';\nimport PipelineVisualization from './PipelineVisualization';\n\nconst PipelineDetails: React.FC<PipelineDetailsTabProps> = ({ obj: pipeline, customData }) => {\n  const { t } = useTranslation();\n  const { taskLinks, finallyTaskLinks } = getPipelineTaskLinks(pipeline);\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('pipelines-plugin~Pipeline details')} />\n        <PipelineVisualization pipeline={pipeline} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={pipeline} />\n          </div>\n          <div className=\"col-sm-6\">\n            <TriggerTemplateResourceLink\n              namespace={pipeline.metadata.namespace}\n              model={TriggerTemplateModel}\n              links={customData.templateNames}\n            />\n            <DynamicResourceLinkList\n              namespace={pipeline.metadata.namespace}\n              links={taskLinks}\n              title={t('pipelines-plugin~Tasks')}\n            />\n            <DynamicResourceLinkList\n              namespace={pipeline.metadata.namespace}\n              links={finallyTaskLinks}\n              title={t('pipelines-plugin~Finally tasks')}\n            />\n            <WorkspaceDefinitionList workspaces={pipeline.spec.workspaces} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PipelineDetails;\n","import * as React from 'react';\nimport { Form } from '@patternfly/react-core';\nimport { FormikProps, FormikValues, getIn } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { FormFooter } from '@console/shared';\nimport PipelineParameters from '../PipelineParameters';\n\ntype PipelineParametersFormProps = FormikProps<FormikValues> & {\n  namespace: string;\n};\n\nconst PipelineParametersForm: React.FC<PipelineParametersFormProps> = ({\n  namespace,\n  handleSubmit,\n  handleReset,\n  isSubmitting,\n  status,\n  errors,\n  dirty,\n}) => {\n  const pipelineParameterAccess = useAccessReview({\n    group: 'tekton.dev',\n    resource: 'pipelines',\n    namespace,\n    verb: 'update',\n  });\n  const { t } = useTranslation();\n  const disableSubmit = !dirty || !_.isEmpty(_.compact(getIn(errors, 'parameters')));\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"co-m-pane__body\">\n        <PipelineParameters\n          fieldName=\"parameters\"\n          isReadOnly={!pipelineParameterAccess}\n          addLabel={t('pipelines-plugin~Add Pipeline parameter')}\n          nameLabel={t('pipelines-plugin~Name')}\n          nameFieldName=\"name\"\n          descriptionLabel={t('pipelines-plugin~Description')}\n          descriptionFieldName=\"description\"\n          valueLabel={t('pipelines-plugin~Default value')}\n          valueFieldName=\"default\"\n          emptyMessage={t('pipelines-plugin~No parameters are associated with this Pipeline.')}\n          emptyValues={{ name: '', description: '', default: '' }}\n        />\n      </div>\n      {pipelineParameterAccess && (\n        <FormFooter\n          handleReset={handleReset}\n          isSubmitting={isSubmitting}\n          errorMessage={status && status.submitError}\n          successMessage={status && !dirty && status.success}\n          disableSubmit={disableSubmit}\n          showAlert={!disableSubmit}\n          submitLabel={t('pipelines-plugin~Save')}\n          resetLabel={t('pipelines-plugin~Reload')}\n          sticky\n        />\n      )}\n    </Form>\n  );\n};\n\nexport default PipelineParametersForm;\n","import * as React from 'react';\nimport { Form } from '@patternfly/react-core';\nimport { FormikProps, FormikValues, getIn } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { FormFooter } from '@console/shared';\nimport PipelineResources from './PipelineResources';\n\ntype PipelineResourcesFormProps = FormikProps<FormikValues> & {\n  namespace: string;\n};\n\nconst PipelineResourcesForm: React.FC<PipelineResourcesFormProps> = ({\n  namespace,\n  handleSubmit,\n  handleReset,\n  isSubmitting,\n  status,\n  errors,\n  dirty,\n}) => {\n  const pipelineResourceAccess = useAccessReview({\n    group: 'tekton.dev',\n    resource: 'pipelines',\n    namespace,\n    verb: 'update',\n  });\n  const { t } = useTranslation();\n  const disableSubmit = !dirty || !_.isEmpty(_.compact(getIn(errors, 'resources')));\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"co-m-pane__body\">\n        <PipelineResources fieldName=\"resources\" isReadOnly={!pipelineResourceAccess} />\n      </div>\n      {pipelineResourceAccess && (\n        <FormFooter\n          handleReset={handleReset}\n          isSubmitting={isSubmitting}\n          errorMessage={status && status.submitError}\n          successMessage={status && !dirty && status.success}\n          disableSubmit={disableSubmit}\n          showAlert={!disableSubmit}\n          submitLabel={t('pipelines-plugin~Save')}\n          resetLabel={t('pipelines-plugin~Reload')}\n          sticky\n        />\n      )}\n    </Form>\n  );\n};\n\nexport default PipelineResourcesForm;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MultiColumnField } from '@console/shared';\nimport OptionalableWorkspace from './OptionalableWorkspace';\n\ntype PipelineWorkspacesParam = {\n  addLabel?: string;\n  fieldName: string;\n  isReadOnly?: boolean;\n};\n\nconst PipelineWorkspaces: React.FC<PipelineWorkspacesParam> = (props) => {\n  const { t } = useTranslation();\n  const {\n    addLabel = t('pipelines-plugin~Add Pipeline workspace'),\n    fieldName,\n    isReadOnly = false,\n  } = props;\n  const emptyMessage = t('pipelines-plugin~No workspaces are associated with this pipeline.');\n  return (\n    <div className=\"co-m-pane__form\">\n      <MultiColumnField\n        data-test=\"pipeline-workspaces\"\n        name={fieldName}\n        addLabel={addLabel}\n        headers={[{ name: t('pipelines-plugin~Name'), required: true }]}\n        emptyValues={{ name: '', optional: false }}\n        emptyMessage={emptyMessage}\n        isReadOnly={isReadOnly}\n        complexFields={[true]}\n      >\n        <OptionalableWorkspace />\n      </MultiColumnField>\n    </div>\n  );\n};\n\nexport default PipelineWorkspaces;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { k8sUpdate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport { sanitizePipelineParams } from './utils';\n\nexport interface PipelineFormProps {\n  PipelineFormComponent: React.ComponentType<any>;\n  formName: string;\n  validationSchema: any;\n  obj: K8sResourceKind;\n}\n\nconst PipelineForm: React.FC<PipelineFormProps> = ({\n  PipelineFormComponent,\n  formName,\n  validationSchema,\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const initialValues = {\n    parameters: _.get(obj.spec, 'params', []),\n  };\n\n  const handleSubmit = (values, actions) => {\n    return k8sUpdate(\n      PipelineModel,\n      {\n        ...obj,\n        spec: {\n          ...obj.spec,\n          params: sanitizePipelineParams(values.parameters),\n        },\n      },\n      obj.metadata.namespace,\n      obj.metadata.name,\n    )\n      .then((newObj) => {\n        actions.resetForm({\n          values: {\n            parameters: _.get(newObj.spec, 'params', []),\n          },\n          status: {\n            success: t('pipelines-plugin~Successfully updated the pipeline {{formName}}.', {\n              formName,\n            }),\n          },\n        });\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  const handleReset = (values, actions) => {\n    actions.resetForm({ status: {} });\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        onReset={handleReset}\n        validationSchema={validationSchema}\n      >\n        {(formikProps) => (\n          <PipelineFormComponent namespace={obj.metadata.namespace} {...formikProps} />\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default PipelineForm;\n","import i18next from 'i18next';\nimport * as yup from 'yup';\n\nexport const resourcesValidationSchema = () =>\n  yup.object().shape({\n    resources: yup.array().of(\n      yup.object().shape({\n        name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      }),\n    ),\n  });\n\nexport const parametersValidationSchema = () =>\n  yup.object().shape({\n    parameters: yup.array().of(\n      yup.object().shape({\n        name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        description: yup.string(),\n        default: yup.string(),\n      }),\n    ),\n  });\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport CreateProjectListPage, {\n  CreateAProjectButton,\n} from '@console/dev-console/src/components/projects/CreateProjectListPage';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport PipelinesResourceList from './PipelinesResourceList';\n\nexport const PipelinesPage: React.FC = (props) => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const badge = usePipelineTechPreviewBadge(namespace);\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~Pipelines')}</title>\n      </Helmet>\n      {namespace ? (\n        <div>\n          <PipelinesResourceList\n            {...props}\n            badge={badge}\n            namespace={namespace}\n            title={t('pipelines-plugin~Pipelines')}\n          />\n        </div>\n      ) : (\n        <CreateProjectListPage title={t('pipelines-plugin~Pipelines')} badge={badge}>\n          {(openProjectModal) => (\n            <Trans t={t} ns=\"pipelines-plugin\">\n              Select a Project to view the list of Pipelines\n              <CreateAProjectButton openProjectModal={openProjectModal} />.\n            </Trans>\n          )}\n        </CreateProjectListPage>\n      )}\n    </>\n  );\n};\n\nexport default withStartGuide(PipelinesPage);\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { ListPageWrapper } from '@console/internal/components/factory';\nimport { EmptyBox, LoadingBox } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useUserSettings } from '@console/shared/src';\nimport { PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY } from '../../../const';\nimport { PipelineRunModel } from '../../../models';\nimport { useGetPipelineRuns } from '../../pipelineruns/hooks/useTektonResults';\nimport PipelineAugmentRuns, { filters } from './PipelineAugmentRuns';\nimport PipelineList from './PipelineList';\n\ninterface PipelineAugmentRunsWrapperProps {\n  namespace: string;\n  pipeline?: any;\n  reduxIDs?: string[];\n  hideNameLabelFilters?: boolean;\n}\n\nconst PipelineAugmentRunsWrapper: React.FC<PipelineAugmentRunsWrapperProps> = (props) => {\n  const { t } = useTranslation();\n  const activePerspective = useActivePerspective()[0];\n  const [, setPreferredTab, preferredTabLoaded] = useUserSettings<string>(\n    PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY,\n    'pipelines',\n  );\n  const [pipelineRuns, pipelineRunsLoaded, pipelineRunsLoadError] = useGetPipelineRuns(\n    props.namespace,\n  );\n  const resources = {\n    data: pipelineRuns,\n    kind: referenceForModel(PipelineRunModel),\n    loadError: pipelineRunsLoadError,\n    loaded: pipelineRunsLoaded,\n  };\n  React.useEffect(() => {\n    if (preferredTabLoaded && activePerspective === 'dev') {\n      setPreferredTab('pipelines');\n    }\n  }, [activePerspective, preferredTabLoaded, setPreferredTab]);\n  const pipelineData = _.get(props.pipeline, 'data', []);\n\n  if (!props.pipeline.loaded) {\n    return <LoadingBox />;\n  }\n\n  if (pipelineData.length === 0) {\n    return <EmptyBox label={t('pipelines-plugin~Pipelines')} />;\n  }\n  return (\n    <PipelineAugmentRuns {...props} pipelinerun={resources}>\n      <ListPageWrapper\n        {...props}\n        flatten={(_resources) => _.get(_resources, ['pipeline', 'data'], {})}\n        kinds={['Pipeline']}\n        ListComponent={PipelineList}\n        rowFilters={filters(t)}\n        hideNameLabelFilters={props.hideNameLabelFilters}\n      />\n    </PipelineAugmentRuns>\n  );\n};\n\nexport default PipelineAugmentRunsWrapper;\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  'pf-v5-u-w-16-on-xl pf-v5-u-w-25-on-lg pf-v5-u-w-33-on-xs', // name\n  'pf-v5-u-w-8-on-xl pf-v5-u-w-16-on-xs', // namespace\n  'pf-v5-u-w-16-on-xl pf-v5-u-w-25-on-lg pf-v5-u-w-33-on-xs', // last run\n  'pf-m-hidden pf-m-visible-on-lg', // task status\n  'pf-m-hidden pf-m-visible-on-xl', // last run status\n  'pf-m-hidden pf-m-visible-on-xl', // last run time\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { DetailsPage, DetailsPageProps } from '@console/internal/components/factory';\nimport { Kebab, navFactory } from '@console/internal/components/utils';\nimport { useTriggersTechPreviewBadge } from '../../utils/hooks';\nimport EventListenerDetails from './detail-page-tabs/EventListenerDetails';\nimport { useTriggersBreadcrumbsFor } from './hooks';\n\nconst EventListenerPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const breadcrumbsFor = useTriggersBreadcrumbsFor(kindObj);\n  const badge = useTriggersTechPreviewBadge(props.namespace);\n\n  return (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      breadcrumbsFor={() => breadcrumbsFor}\n      menuActions={Kebab.factory.common}\n      pages={[navFactory.details(EventListenerDetails), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport default EventListenerPage;\n","import * as React from 'react';\nimport { DetailsPage, DetailsPageProps } from '@console/internal/components/factory';\nimport { Kebab, navFactory } from '@console/internal/components/utils';\nimport { useTriggersTechPreviewBadge } from '../../utils/hooks';\nimport TriggerTemplateDetails from './detail-page-tabs/TriggerTemplateDetails';\nimport { useTriggersBreadcrumbsFor } from './hooks';\n\nconst TriggerTemplatePage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const breadcrumbsFor = useTriggersBreadcrumbsFor(kindObj);\n  const badge = useTriggersTechPreviewBadge(props.namespace);\n\n  return (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      breadcrumbsFor={() => breadcrumbsFor}\n      menuActions={Kebab.factory.common}\n      pages={[navFactory.details(TriggerTemplateDetails), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport default TriggerTemplatePage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { K8sKind } from '@console/internal/module/k8s';\nimport DynamicResourceLinkList from './DynamicResourceLinkList';\n\ntype ResourceLinkListProps = {\n  namespace: string;\n  model: K8sKind;\n  links: string[];\n};\nconst ResourceLinkList: React.FC<ResourceLinkListProps> = ({ links, model, namespace }) => {\n  const { t } = useTranslation();\n  return (\n    <DynamicResourceLinkList\n      links={links.map((name) => ({ resourceKind: model.kind, name }))}\n      namespace={namespace}\n      title={t(model.labelPluralKey)}\n    />\n  );\n};\n\nexport default ResourceLinkList;\n","import * as React from 'react';\nimport { DetailsPage, DetailsPageProps } from '@console/internal/components/factory';\nimport { Kebab, navFactory } from '@console/internal/components/utils';\nimport { useTriggersTechPreviewBadge } from '../../utils/hooks';\nimport TriggerBindingDetails from './detail-page-tabs/TriggerBindingDetails';\nimport { useTriggersBreadcrumbsFor } from './hooks';\n\nconst TriggerBindingPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const breadcrumbsFor = useTriggersBreadcrumbsFor(kindObj);\n  const badge = useTriggersTechPreviewBadge(props.namespace);\n\n  return (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      breadcrumbsFor={() => breadcrumbsFor}\n      menuActions={Kebab.factory.common}\n      pages={[navFactory.details(TriggerBindingDetails), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport default TriggerBindingPage;\n","import * as React from 'react';\nimport { DetailsForKind } from '@console/internal/components/default-resource';\nimport { DetailsPageProps, DetailsPage } from '@console/internal/components/factory';\nimport { navFactory, Kebab } from '@console/internal/components/utils';\nimport { useTriggersTechPreviewBadge } from '../../utils/hooks';\nimport { useTriggersBreadcrumbsFor } from './hooks';\n\nconst ClusterTriggerBindingPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const breadcrumbsFor = useTriggersBreadcrumbsFor(kindObj);\n  const badge = useTriggersTechPreviewBadge(props.namespace);\n\n  return (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      menuActions={Kebab.factory.common}\n      breadcrumbsFor={() => breadcrumbsFor}\n      pages={[navFactory.details(DetailsForKind), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport default ClusterTriggerBindingPage;\n","import * as React from 'react';\nimport { DetailsForKind } from '@console/internal/components/default-resource';\nimport { DetailsPageProps, DetailsPage } from '@console/internal/components/factory';\nimport { navFactory, Kebab } from '@console/internal/components/utils';\nimport { usePipelineTechPreviewBadge } from '../../../utils/hooks';\nimport { usePipelinesBreadcrumbsFor } from '../hooks';\n\nconst PipelineResourceDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const breadcrumbsFor = usePipelinesBreadcrumbsFor(kindObj);\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n\n  return (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      menuActions={Kebab.factory.common}\n      breadcrumbsFor={() => breadcrumbsFor}\n      pages={[navFactory.details(DetailsForKind), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport default PipelineResourceDetailsPage;\n","import * as React from 'react';\nimport { DetailsForKind } from '@console/internal/components/default-resource';\nimport { DetailsPageProps, DetailsPage } from '@console/internal/components/factory';\nimport { navFactory, Kebab } from '@console/internal/components/utils';\nimport { usePipelineTechPreviewBadge } from '../../../utils/hooks';\nimport { usePipelinesBreadcrumbsFor } from '../hooks';\n\nconst PipelineConditionDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const breadcrumbsFor = usePipelinesBreadcrumbsFor(kindObj);\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n\n  return (\n    <DetailsPage\n      {...props}\n      badge={badge}\n      menuActions={Kebab.factory.common}\n      breadcrumbsFor={() => breadcrumbsFor}\n      pages={[navFactory.details(DetailsForKind), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport default PipelineConditionDetailsPage;\n","import * as _ from 'lodash';\nimport { ValidationError } from 'yup';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { PipelineKind } from '../../../types';\nimport { initialPipelineFormData } from './const';\nimport { pipelineBuilderYAMLSchema } from './switch-to-form-validation-utils';\nimport { PipelineBuilderFormValues, PipelineBuilderTaskBase } from './types';\nimport { convertBuilderFormToPipeline } from './utils';\nimport { runAfterMatches } from './validation-utils';\n\nexport const getFormData = (\n  formData: PipelineBuilderFormValues,\n  yamlPipeline: PipelineKind,\n): PipelineBuilderFormValues => {\n  const { listTasks, finallyListTasks, loadingTasks } = formData;\n  const sanitizedListTasks: PipelineBuilderTaskBase[] = listTasks.map((listTask) => {\n    const { name, runAfter: listRunAfter } = listTask;\n    return {\n      ...listTask,\n      runAfter: listRunAfter\n        ? listRunAfter.filter((r) => runAfterMatches(formData, [r], name))\n        : [],\n    };\n  });\n  const { finally: finallyTasks, ...specProps } = yamlPipeline.spec;\n  const pipelineSpecProperties = _.omit(specProps, [\n    'listTasks',\n    'finallyListTasks',\n    'loadingTasks',\n  ]);\n  return {\n    ...pipelineSpecProperties, // support & keep unknown values as well as whatever they may have changed that we use\n    name: yamlPipeline.metadata?.name,\n    finallyTasks,\n    listTasks: sanitizedListTasks,\n    finallyListTasks,\n    loadingTasks,\n  } as PipelineBuilderFormValues;\n};\n\nexport const validateFormData = (\n  newFormData: PipelineBuilderFormValues,\n  yamlPipeline: PipelineKind,\n) =>\n  pipelineBuilderYAMLSchema(newFormData).validate(yamlPipeline, {\n    abortEarly: false,\n    strict: true,\n  });\n\nexport const safeOmit = (object: PipelineKind, path: string): PipelineKind => {\n  // Check if it's a `path.to.array[#]`\n  const match = path.match(/(.*)\\[(\\d+)\\]$/);\n  if (match) {\n    const [, pathToArray, index] = match;\n    if (pathToArray && index) {\n      return _.update(object, pathToArray, (array) => {\n        array.splice(index, 1);\n        return array;\n      });\n    }\n  }\n  return _.omit(object, path);\n};\n\nexport const getValidatedFormAndYaml = (\n  formData: PipelineBuilderFormValues,\n  error: ValidationError,\n  yamlPipeline: PipelineKind,\n): [PipelineBuilderFormValues, PipelineKind] => {\n  const paths: string[] = error?.inner?.map((err) => err.path).filter((path) => !!path) || [];\n  const validatedYamlData: PipelineKind = paths.reduce((acc, currPath) => {\n    const pathComponents = currPath.split('.');\n    const lastPathItem: string = pathComponents[pathComponents.length - 1];\n    switch (lastPathItem) {\n      case 'name': {\n        const namePath = pathComponents.slice(0, pathComponents.length - 1).join('.');\n        return safeOmit(acc, namePath);\n      }\n      default:\n        return safeOmit(acc, currPath);\n    }\n  }, yamlPipeline);\n  const validatedFormData: PipelineBuilderFormValues = getFormData(formData, validatedYamlData);\n  return [validatedFormData, validatedYamlData];\n};\n\nconst MAX_ERROR_FIXING_PATHS = 1;\nexport const handleSanitizeToFormError = async (\n  formData: PipelineBuilderFormValues,\n  error: ValidationError,\n  yamlPipeline: PipelineKind,\n  counter = 0,\n): Promise<PipelineBuilderFormValues> => {\n  if (counter > MAX_ERROR_FIXING_PATHS) {\n    // Still invalid and we have reached our cap of retries, return nothing as we don't have a valid object\n    return undefined;\n  }\n\n  const [validatedFormData, validatedYamlData] = getValidatedFormAndYaml(\n    formData,\n    error,\n    yamlPipeline,\n  );\n\n  let errObj;\n  try {\n    await validateFormData(validatedFormData, validatedYamlData);\n    errObj = undefined;\n  } catch (err) {\n    errObj = err;\n  }\n\n  if (!errObj) {\n    return _.merge({}, initialPipelineFormData, validatedFormData);\n  }\n\n  return handleSanitizeToFormError(\n    validatedFormData,\n    errObj,\n    validatedYamlData,\n    errObj ? counter + 1 : counter,\n  );\n};\n\nexport const sanitizeToForm = async (\n  formData: PipelineBuilderFormValues,\n  yamlPipeline: PipelineKind,\n): Promise<PipelineBuilderFormValues | (() => PipelineBuilderFormValues)> => {\n  const newFormData: PipelineBuilderFormValues = getFormData(formData, yamlPipeline);\n  try {\n    await validateFormData(newFormData, yamlPipeline);\n  } catch (error) {\n    const safeReturn =\n      (await handleSanitizeToFormError(newFormData, error, yamlPipeline)) || formData;\n    return () => safeReturn;\n  }\n  return _.merge({}, initialPipelineFormData, newFormData);\n};\n\nexport const sanitizeToYaml = (\n  formData: PipelineBuilderFormValues,\n  namespace: string,\n  existingPipeline?: PipelineKind,\n) =>\n  safeJSToYAML(convertBuilderFormToPipeline(formData, namespace, existingPipeline), 'yamlData', {\n    skipInvalid: true,\n  });\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, Link } from 'react-router-dom-v5-compat';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { k8sGet, referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind } from '../../../types';\nimport PipelineBuilderPage from './PipelineBuilderPage';\n\nimport './PipelineBuilderEditPage.scss';\n\nconst PipelineBuilderEditPage: React.FC = (props) => {\n  const { t } = useTranslation();\n  const [editPipeline, setEditPipeline] = React.useState<PipelineKind>(null);\n  const [error, setError] = React.useState<string>(null);\n  const { pipelineName, ns } = useParams();\n\n  React.useEffect(() => {\n    k8sGet(PipelineModel, pipelineName, ns)\n      .then((res: PipelineKind) => {\n        setEditPipeline(res);\n      })\n      .catch(() => {\n        setError(t('pipelines-plugin~Unable to load Pipeline'));\n      });\n  }, [pipelineName, ns, t]);\n\n  if (error) {\n    // TODO: confirm verbiage with UX\n    return (\n      <div className=\"odc-pipeline-builder-edit-page\">\n        <Alert variant=\"danger\" isInline title={error}>\n          {t('pipelines-plugin~Navigate back to the')}{' '}\n          <Link to={`/k8s/ns/${ns}/${referenceForModel(PipelineModel)}`}>\n            {t('pipelines-plugin~Pipelines page')}\n          </Link>\n          .\n        </Alert>\n      </div>\n    );\n  }\n\n  if (!editPipeline) {\n    return <LoadingBox />;\n  }\n\n  return <PipelineBuilderPage {...props} existingPipeline={editPipeline} />;\n};\n\nexport default PipelineBuilderEditPage;\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport CreateProjectListPage, {\n  CreateAProjectButton,\n} from '@console/dev-console/src/components/projects/CreateProjectListPage';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport { Page } from '@console/internal/components/utils';\nimport {\n  MenuAction,\n  MenuActions,\n  MultiTabListPage,\n  useFlag,\n  useUserSettings,\n} from '@console/shared';\nimport {\n  FLAG_OPENSHIFT_PIPELINE_AS_CODE,\n  PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY,\n} from '../../const';\nimport { PipelineModel, PipelineRunModel, RepositoryModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { PipelineRunsResourceList } from '../pipelineruns';\nimport RepositoriesList from '../repository/list-page/RepositoriesList';\nimport PipelinesList from './list-page/PipelinesList';\n\nexport const PageContents: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const navigate = useNavigate();\n  const badge = usePipelineTechPreviewBadge(namespace);\n  const isRepositoryEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE_AS_CODE);\n  const [preferredTab, , preferredTabLoaded] = useUserSettings<string>(\n    PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY,\n    'pipelines',\n  );\n\n  React.useEffect(() => {\n    if (preferredTabLoaded && namespace) {\n      if (isRepositoryEnabled && preferredTab === 'repositories') {\n        navigate(`/dev-pipelines/ns/${namespace}/repositories`, { replace: true });\n      }\n      if (preferredTab === 'pipeline-runs') {\n        navigate(`/dev-pipelines/ns/${namespace}/pipeline-runs`, { replace: true });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRepositoryEnabled, namespace, preferredTab, preferredTabLoaded]);\n\n  const [showTitle, hideBadge, canCreate] = [false, true, false];\n  const menuActions: MenuActions = {\n    pipeline: {\n      model: PipelineModel,\n      onSelection: (key: string, action: MenuAction, url: string) => `${url}/builder`,\n    },\n    pipelineRun: { model: PipelineRunModel },\n    repository: {\n      model: RepositoryModel,\n      onSelection: (_key: string, _action: MenuAction, url: string) => `${url}/form`,\n    },\n  };\n  const pages: Page[] = [\n    {\n      href: '',\n      // t(PipelineModel.labelPluralKey)\n      nameKey: PipelineModel.labelPluralKey,\n      component: PipelinesList,\n    },\n    {\n      href: 'pipeline-runs',\n      // t(PipelineRunModel.labelPluralKey)\n      nameKey: PipelineRunModel.labelPluralKey,\n      component: PipelineRunsResourceList,\n      pageData: { showTitle, hideBadge, canCreate },\n    },\n    ...(isRepositoryEnabled\n      ? [\n          {\n            href: 'repositories',\n            // t(RepositoryModel.labelPluralKey)\n            nameKey: RepositoryModel.labelPluralKey,\n            component: RepositoriesList,\n            pageData: { showTitle, hideBadge, canCreate },\n          },\n        ]\n      : []),\n  ];\n\n  return namespace ? (\n    <MultiTabListPage\n      pages={pages}\n      title={t('pipelines-plugin~Pipelines')}\n      badge={badge}\n      menuActions={menuActions}\n      telemetryPrefix=\"Pipelines\"\n    />\n  ) : (\n    <CreateProjectListPage title={t('pipelines-plugin~Pipelines')}>\n      {(openProjectModal) => (\n        <Trans t={t} ns=\"pipelines-plugin\">\n          Select a Project to view its details\n          <CreateAProjectButton openProjectModal={openProjectModal} />.\n        </Trans>\n      )}\n    </CreateProjectListPage>\n  );\n};\n\nconst PageContentsWithStartGuide = withStartGuide(PageContents);\n\nconst PipelineTabbedPage: React.FC = (props) => {\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} hideApplications>\n      <PageContentsWithStartGuide {...props} />\n    </NamespacedPage>\n  );\n};\n\nexport default PipelineTabbedPage;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ArchiveIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, DetailsPageProps } from '@console/internal/components/factory';\nimport { KebabAction, navFactory, viewYamlComponent } from '@console/internal/components/utils';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../const';\nimport SignedPipelinerunIcon from '../../images/signed-badge.svg';\nimport { PipelineRunKind } from '../../types';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { getPipelineRunKebabActions } from '../../utils/pipeline-actions';\nimport { pipelineRunStatus } from '../../utils/pipeline-filter-reducer';\nimport { chainsSignedAnnotation } from '../pipelines/const';\nimport { useDevPipelinesBreadcrumbsFor } from '../pipelines/hooks';\nimport { usePipelineOperatorVersion } from '../pipelines/utils/pipeline-operator';\nimport { PipelineRunDetails } from './detail-page-tabs/PipelineRunDetails';\nimport { PipelineRunLogsWithActiveTask } from './detail-page-tabs/PipelineRunLogs';\nimport PipelineRunEvents from './events/PipelineRunEvents';\nimport { usePipelineRun } from './hooks/usePipelineRuns';\nimport { useTaskRuns } from './hooks/useTaskRuns';\nimport PipelineRunParametersForm from './PipelineRunParametersForm';\nimport { useMenuActionsWithUserAnnotation } from './triggered-by';\n\nimport './PipelineRunDetailsPage.scss';\n\nconst PipelineRunDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj, namespace, name } = props;\n  const { t } = useTranslation();\n  const operatorVersion = usePipelineOperatorVersion(namespace);\n  const [taskRuns] = useTaskRuns(namespace, name);\n  const menuActions: KebabAction[] = useMenuActionsWithUserAnnotation(\n    getPipelineRunKebabActions(operatorVersion, taskRuns, true),\n  );\n  const breadcrumbsFor = useDevPipelinesBreadcrumbsFor(kindObj);\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n  const resourceTitleFunc = (obj: PipelineRunKind): string | JSX.Element => {\n    return (\n      <div className=\"pipelinerun-details-page\">\n        {obj?.metadata?.name}{' '}\n        {obj?.metadata?.annotations?.[chainsSignedAnnotation] === 'true' && (\n          <Tooltip content={t('pipelines-plugin~Signed')}>\n            <img src={SignedPipelinerunIcon} alt={t('pipelines-plugin~Signed')} />\n          </Tooltip>\n        )}\n        {(obj?.metadata?.annotations?.[DELETED_RESOURCE_IN_K8S_ANNOTATION] === 'true' ||\n          obj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION] === 'true') && (\n          <Tooltip content={t('pipelines-plugin~Archived in Tekton results')}>\n            <ArchiveIcon className=\"pipelinerun-details-page__results-indicator\" />\n          </Tooltip>\n        )}\n      </div>\n    );\n  };\n\n  const [pipelineRun, loaded, error] = usePipelineRun(namespace, name);\n\n  return (\n    <DetailsPage\n      {...props}\n      obj={{\n        data: pipelineRun,\n        loaded,\n        loadError: error,\n      }}\n      badge={badge}\n      menuActions={menuActions}\n      getResourceStatus={pipelineRunStatus}\n      breadcrumbsFor={() => breadcrumbsFor}\n      titleFunc={resourceTitleFunc}\n      pages={[\n        navFactory.details(PipelineRunDetails),\n        navFactory.editYaml(viewYamlComponent),\n        {\n          href: 'parameters',\n          // t('pipelines-plugin~Parameters')\n          nameKey: 'pipelines-plugin~Parameters',\n          component: (pageProps) => (\n            <PipelineRunParametersForm obj={pageProps.obj} {...pageProps} />\n          ),\n        },\n        {\n          href: 'logs',\n          // t('pipelines-plugin~Logs')\n          nameKey: 'pipelines-plugin~Logs',\n          component: PipelineRunLogsWithActiveTask,\n        },\n        navFactory.events(PipelineRunEvents),\n      ]}\n    />\n  );\n};\n\nexport default PipelineRunDetailsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { runFilters } from '../pipelines/detail-page-tabs/PipelineRuns';\nimport PipelineRunsList from './list-page/PipelineRunList';\n\ninterface PipelineRunsResourceListProps {\n  hideBadge?: boolean;\n  canCreate?: boolean;\n}\n\nconst PipelineRunsK8sResourceList: React.FC<\n  Omit<React.ComponentProps<typeof ListPage>, 'kind' | 'ListComponent' | 'rowFilters'> &\n    PipelineRunsResourceListProps\n> = (props) => {\n  const { t } = useTranslation();\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n  return (\n    <ListPage\n      {...props}\n      canCreate={props.canCreate ?? true}\n      kind={referenceForModel(PipelineRunModel)}\n      ListComponent={PipelineRunsList}\n      rowFilters={runFilters(t)}\n      badge={props.hideBadge ? null : badge}\n    />\n  );\n};\n\nexport default PipelineRunsK8sResourceList;\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport CreateProjectListPage, {\n  CreateAProjectButton,\n} from '@console/dev-console/src/components/projects/CreateProjectListPage';\nimport { PipelineRunModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport PipelineRunsResourceList from './PipelineRunsResourceList';\n\nconst PipelineRunsPage: React.FC = (props) => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const badge = usePipelineTechPreviewBadge(namespace);\n  const { labelPlural: pipelineRunLabel } = PipelineRunModel;\n  return namespace ? (\n    <div>\n      <PipelineRunsResourceList {...props} namespace={namespace} />\n    </div>\n  ) : (\n    <CreateProjectListPage title={pipelineRunLabel} badge={badge}>\n      {(openProjectModal) => (\n        <Trans t={t} ns=\"pipelines-plugin\" values={{ pipelineRunLabel }}>\n          Select a Project to view the list of {{ pipelineRunLabel }}\n          <CreateAProjectButton openProjectModal={openProjectModal} />.\n        </Trans>\n      )}\n    </CreateProjectListPage>\n  );\n};\n\nexport default PipelineRunsPage;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { TaskRunKind } from '../../../types';\nimport TaskRunsListPage from '../../taskruns/list-page/TaskRunsListPage';\n\ninterface TaskRunsProps {\n  obj: TaskRunKind;\n}\n\nconst TaskRuns: React.FC<TaskRunsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~TaskRuns')}</title>\n      </Helmet>\n      <TaskRunsListPage\n        showTitle={false}\n        selector={{ matchLabels: { 'tekton.dev/pipelineRun': obj.metadata.name } }}\n        showPipelineColumn={false}\n        namespace={obj.metadata.namespace}\n        hideBadge\n      />\n    </>\n  );\n};\n\nexport default TaskRuns;\n","import { sortable } from '@patternfly/react-table';\nimport i18next from 'i18next';\nimport { Kebab } from '@console/internal/components/utils';\n\nexport const repositoriesTableColumnClasses = [\n  'pf-v5-u-w-16-on-xl pf-v5-u-w-25-on-lg pf-v5-u-w-33-on-xs', // name\n  'pf-v5-u-w-12-on-xl pf-v5-u-w-20-on-lg pf-v5-u-w-30-on-xs', // namespace\n  'pf-v5-u-w-12-on-xl pf-v5-u-w-20-on-lg pf-v5-u-w-30-on-xs', // Event type\n  'pf-v5-u-w-12-on-xl pf-v5-u-w-20-on-lg pf-v5-u-w-30-on-xs', // Last run\n  'pf-v5-u-w-16-on-xl pf-v5-u-w-25-on-lg pf-v5-u-w-33-on-xs', // Task status\n  'pf-m-hidden pf-m-visible-on-xl', // last run status\n  'pf-m-hidden pf-v5-u-w-12-on-xl pf-v5-u-w-20-on-lg pf-v5-u-w-33-on-xs pf-m-visible-on-xl', // Last run time\n  'pf-m-hidden pf-m-visible-on-xl', // Last run duration\n  Kebab.columnClass,\n];\n\nconst RepositoryHeader = () => {\n  return [\n    {\n      title: i18next.t('pipelines-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: repositoriesTableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: repositoriesTableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('pipelines-plugin~Event type'),\n      sortField: 'spec.event_type',\n      transforms: [sortable],\n      props: { className: repositoriesTableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Last run'),\n      transforms: [sortable],\n      props: { className: repositoriesTableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Task status'),\n      transforms: [sortable],\n      props: { className: repositoriesTableColumnClasses[4] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Last run status'),\n      transforms: [sortable],\n      props: { className: repositoriesTableColumnClasses[5] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Last run time'),\n      transforms: [sortable],\n      props: { className: repositoriesTableColumnClasses[6] },\n    },\n    {\n      title: i18next.t('pipelines-plugin~Last run duration'),\n      transforms: [sortable],\n      props: { className: repositoriesTableColumnClasses[7] },\n    },\n    {\n      title: '',\n      props: { className: repositoriesTableColumnClasses[8] },\n    },\n  ];\n};\n\nexport default RepositoryHeader;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { LoadingInline, resourcePathFromModel } from '@console/internal/components/utils';\nimport { DASH } from '@console/shared';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind, TaskRunKind } from '../../../types';\nimport { getPLRLogSnippet } from '../logs/pipelineRunLogSnippet';\nimport PipelineResourceStatus from './PipelineResourceStatus';\nimport StatusPopoverContent from './StatusPopoverContent';\n\ntype PipelineRunStatusProps = {\n  status: string;\n  pipelineRun: PipelineRunKind;\n  title?: string;\n  taskRuns: TaskRunKind[];\n  taskRunsLoaded?: boolean;\n};\nconst PipelineRunStatus: React.FC<PipelineRunStatusProps> = ({\n  status,\n  pipelineRun,\n  title,\n  taskRuns,\n  taskRunsLoaded,\n}) => {\n  const { t } = useTranslation();\n  return pipelineRun ? (\n    taskRunsLoaded ? (\n      <PipelineResourceStatus status={status} title={title}>\n        <StatusPopoverContent\n          logDetails={getPLRLogSnippet(pipelineRun, taskRuns)}\n          namespace={pipelineRun.metadata.namespace}\n          link={\n            <Link\n              to={`${resourcePathFromModel(\n                PipelineRunModel,\n                pipelineRun.metadata.name,\n                pipelineRun.metadata.namespace,\n              )}/logs`}\n            >\n              {t('pipelines-plugin~View logs')}\n            </Link>\n          }\n        />\n      </PipelineResourceStatus>\n    ) : (\n      <LoadingInline />\n    )\n  ) : (\n    <>{DASH}</>\n  );\n};\n\nexport default PipelineRunStatus;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { Firehose } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport { filters } from './PipelineAugmentRuns';\nimport PipelineAugmentRunsWrapper from './PipelineAugmentRunsWrapper';\n\nconst PipelinesList: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const resources = [\n    {\n      isList: true,\n      kind: referenceForModel(PipelineModel),\n      namespace,\n      prop: PipelineModel.id,\n      filters: { ...filters(t) },\n    },\n  ];\n  return (\n    <>\n      <Helmet>\n        <title>{t('pipelines-plugin~Pipelines')}</title>\n      </Helmet>\n      <div className=\"co-m-pane__body\">\n        <Firehose resources={resources}>\n          <PipelineAugmentRunsWrapper namespace={namespace} />\n        </Firehose>\n      </div>\n    </>\n  );\n};\n\nexport default PipelinesList;\n","import * as React from 'react';\nimport { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport {\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineMetricsLevel } from '../const';\nimport { PipelineDetailsTabProps } from '../detail-page-tabs/types';\nimport { useLatestPipelineRun } from '../hooks';\nimport { usePipelineMetricsLevel } from '../utils/pipeline-operator';\nimport { GraphData } from './pipeline-metrics-utils';\nimport PipelineMetricsEmptyState from './PipelineMetricsEmptyState';\nimport PipelineMetricsQuickstart from './PipelineMetricsQuickstart';\nimport PipelineMetricsRefreshDropdown from './PipelineMetricsRefreshDropdown';\nimport PipelineMetricsTimeRangeDropdown from './PipelineMetricsTimeRangeDropdown';\nimport PipelineMetricsUnsupported from './PipelineMetricsUnsupported';\nimport PipelineRunCount from './PipelineRunCount';\nimport PipelineRunDurationGraph from './PipelineRunDurationGraph';\nimport PipelineRunTaskRunGraph from './PipelineRunTaskRunGraph';\nimport PipelineSuccessRatioDonut from './PipelineSuccessRatioDonut';\n\nimport './PipelineMetrics.scss';\n\nconst PipelineMetrics: React.FC<PipelineDetailsTabProps> = ({ obj }) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const { queryPrefix, metricsLevel, hasUpdatePermission } = usePipelineMetricsLevel(namespace);\n  const latestPipelineRun = useLatestPipelineRun(name, namespace);\n  const [timespan, setTimespan] = React.useState(parsePrometheusDuration('1w'));\n  const [interval, setInterval] = React.useState(parsePrometheusDuration('30s'));\n  const [loadedGraphs, setLoadedGraphs] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n  const totalGraphs = metricsLevel === PipelineMetricsLevel.PIPELINE_TASK_LEVEL ? 2 : 4;\n\n  const graphOnLoad = React.useCallback(\n    (graphData: GraphData) => {\n      if (!loadedGraphs.find((g) => g.chartName === graphData.chartName) && graphData.hasData) {\n        setLoadedGraphs([...loadedGraphs, graphData]);\n      }\n    },\n    [loadedGraphs],\n  );\n  React.useEffect(() => {\n    if (!loaded && loadedGraphs.length === totalGraphs) {\n      setLoaded(true);\n    }\n  }, [loaded, loadedGraphs, totalGraphs]);\n\n  if (!latestPipelineRun) {\n    return <PipelineMetricsEmptyState />;\n  }\n\n  if (metricsLevel === PipelineMetricsLevel.UNSUPPORTED_LEVEL) {\n    return (\n      <PipelineMetricsUnsupported\n        updatePermission={hasUpdatePermission}\n        metricsLevel={metricsLevel}\n      />\n    );\n  }\n\n  return (\n    <Stack hasGutter key={metricsLevel} className=\"pipeline-metrics\">\n      <StackItem className=\"pipeline-metrics-dashboard__toolbar\">\n        {hasUpdatePermission && metricsLevel === PipelineMetricsLevel.PIPELINE_TASK_LEVEL && (\n          <Grid hasGutter style={{ marginBottom: 'var(--pf-v5-global--spacer--lg)' }}>\n            <GridItem xl2={12} xl={12} lg={12}>\n              <PipelineMetricsQuickstart />\n            </GridItem>\n          </Grid>\n        )}\n        <Flex>\n          <FlexItem>\n            <PipelineMetricsTimeRangeDropdown timespan={timespan} setTimespan={setTimespan} />\n          </FlexItem>\n          <FlexItem>\n            <PipelineMetricsRefreshDropdown interval={interval} setInterval={setInterval} />\n          </FlexItem>\n        </Flex>\n      </StackItem>\n      <StackItem isFilled className=\"co-m-pane__body pipeline-metrics-dashboard__body\">\n        <Grid\n          sm={1}\n          md={1}\n          lg={1}\n          xl={1}\n          xl2={2}\n          hasGutter\n          className=\"pipeline-metrics-dashboard__body-content\"\n        >\n          <GridItem xl2={7} xl={12} lg={12} md={12} sm={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('pipelines-plugin~Pipeline Success Ratio')}</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <PipelineSuccessRatioDonut\n                  interval={interval}\n                  timespan={timespan}\n                  pipeline={obj}\n                  loaded={loaded}\n                  onLoad={graphOnLoad}\n                  queryPrefix={queryPrefix}\n                  metricsLevel={metricsLevel}\n                />\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem xl2={5} xl={12} lg={12} md={12} sm={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('pipelines-plugin~Number of PipelineRuns')}</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <PipelineRunCount\n                  interval={interval}\n                  timespan={timespan}\n                  pipeline={obj}\n                  loaded={loaded}\n                  onLoad={graphOnLoad}\n                  queryPrefix={queryPrefix}\n                  metricsLevel={metricsLevel}\n                />\n              </CardBody>\n            </Card>\n          </GridItem>\n\n          {metricsLevel === PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL && (\n            <>\n              <GridItem xl2={7} xl={12} lg={12} md={12} sm={12}>\n                <Card>\n                  <CardHeader>\n                    <CardTitle>{t('pipelines-plugin~PipelineRun Duration')}</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    <PipelineRunDurationGraph\n                      interval={interval}\n                      pipeline={obj}\n                      timespan={timespan}\n                      loaded={loaded}\n                      onLoad={graphOnLoad}\n                      queryPrefix={queryPrefix}\n                      metricsLevel={metricsLevel}\n                    />\n                  </CardBody>\n                </Card>\n              </GridItem>\n              <GridItem xl2={5} xl={12} lg={12} md={12} sm={12}>\n                <Card>\n                  <CardHeader>\n                    <CardTitle>{t('pipelines-plugin~TaskRun Duration')}</CardTitle>\n                  </CardHeader>\n                  <CardBody className=\"pipeline-metrics__pipelinerun-taskrun-card-body\">\n                    <PipelineRunTaskRunGraph\n                      interval={interval}\n                      timespan={timespan}\n                      pipeline={obj}\n                      loaded={loaded}\n                      onLoad={graphOnLoad}\n                      queryPrefix={queryPrefix}\n                      metricsLevel={metricsLevel}\n                    />\n                  </CardBody>\n                </Card>\n              </GridItem>\n            </>\n          )}\n        </Grid>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default PipelineMetrics;\n","import * as React from 'react';\nimport { Alert, AlertVariant } from '@patternfly/react-core';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link, useLocation } from 'react-router-dom-v5-compat';\nimport QuickStartsLoader from '@console/app/src/components/quick-starts/loader/QuickStartsLoader';\nimport { isModifiedEvent } from '@console/shared/src';\nimport { useQuickStartContext } from '@console/shared/src/hooks/useQuickStartContext';\nimport { PipelineMetricsLevel } from '../const';\n\ntype PipelineMetricsQuickstartInfoProps = {\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\n  to: { pathname: string; search: string };\n};\n\ntype PipelineMetricsQuickstartProps = {\n  metricsLevel?: string;\n};\n\nexport const PipelineMetricsQuickstartInfo: React.FC<PipelineMetricsQuickstartInfoProps> = ({\n  onClick,\n  to,\n}) => (\n  <Trans ns=\"pipelines-plugin\">\n    Administrators can try{' '}\n    <Link to={to} onClick={onClick}>\n      this quick start\n    </Link>{' '}\n    to configure their metrics level to pipelinerun and taskrun. The pipelinerun and taskrun metrics\n    level collects large volume of metrics over time in unbounded cardinality which may lead to\n    metrics unreliability.\n  </Trans>\n);\n\nconst PipelineMetricsQuickstart: React.FC<PipelineMetricsQuickstartProps> = ({ metricsLevel }) => {\n  const { t } = useTranslation();\n  const PIPELINE_METRICS_CONFIGURATION_QUICKSTART = 'configure-pipeline-metrics';\n  const { pathname, search } = useLocation();\n  const { setActiveQuickStart } = useQuickStartContext();\n  const queryParams = new URLSearchParams(search);\n  queryParams.set('quickstart', PIPELINE_METRICS_CONFIGURATION_QUICKSTART);\n\n  const to = {\n    pathname,\n    search: `?${queryParams.toString()}`,\n  };\n\n  return (\n    <QuickStartsLoader>\n      {(quickStarts, loaded) => {\n        const handleOnClick = (event: React.MouseEvent<HTMLElement>) => {\n          if (isModifiedEvent(event)) {\n            return;\n          }\n          setActiveQuickStart(PIPELINE_METRICS_CONFIGURATION_QUICKSTART);\n        };\n\n        const isPipelineMetricsQSAvailable =\n          loaded &&\n          quickStarts?.length > 0 &&\n          !!quickStarts.find(\n            (qs) => qs.metadata.name === PIPELINE_METRICS_CONFIGURATION_QUICKSTART,\n          );\n\n        return (\n          <>\n            {isPipelineMetricsQSAvailable && (\n              <Alert\n                variant={\n                  metricsLevel === PipelineMetricsLevel.UNSUPPORTED_LEVEL\n                    ? AlertVariant.warning\n                    : AlertVariant.info\n                }\n                isInline\n                title={\n                  metricsLevel === PipelineMetricsLevel.UNSUPPORTED_LEVEL\n                    ? t('pipelines-plugin~Pipeline metrics configuration is unsupported.')\n                    : t(\n                        'pipelines-plugin~Pipeline metrics configuration defaults to pipeline and task level.',\n                      )\n                }\n              >\n                <PipelineMetricsQuickstartInfo\n                  data-test-id=\"pipeline-metrics-quickstart-link\"\n                  to={to}\n                  onClick={handleOnClick}\n                />\n              </Alert>\n            )}\n          </>\n        );\n      }}\n    </QuickStartsLoader>\n  );\n};\n\nexport default PipelineMetricsQuickstart;\n","import * as React from 'react';\nimport { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport {\n  Chart,\n  ChartAxis,\n  ChartBar,\n  ChartGroup,\n  ChartLine,\n  ChartLineProps,\n  ChartProps,\n  ChartScatter,\n  ChartThemeColor,\n  ChartVoronoiContainer,\n} from '@patternfly/react-charts';\nimport * as _ from 'lodash';\nimport { DomainPropType, DomainTuple } from 'victory-core';\nimport { DEFAULT_CHART_HEIGHT } from '../../const';\nimport { formatDate, formatValue, getXaxisValues } from '../pipeline-metrics-utils';\n\ntype TimeSeriesChart = {\n  timespan: number;\n  bar?: boolean;\n  yTickFormatter?: (v: number) => string;\n};\n\ntype DomainType = { x?: DomainTuple; y?: DomainTuple };\n\nexport const TimeSeriesChart: React.FC<TimeSeriesChart & ChartProps & ChartLineProps> = ({\n  data = null,\n  timespan,\n  bar = true,\n  width,\n  themeColor,\n  ariaDesc,\n  ariaTitle,\n  domain,\n  yTickFormatter,\n  containerComponent,\n}) => {\n  const startTimespan = timespan - parsePrometheusDuration('1d');\n  const endDate = new Date(Date.now()).setHours(0, 0, 0, 0);\n  const startDate = new Date(Date.now() - startTimespan).setHours(0, 0, 0, 0);\n  const { x: domainX, y: domainY } = (domain as DomainType) || {};\n  const domainValue: DomainPropType = {\n    x: domainX || [startDate, endDate],\n    y: domainY || undefined,\n  };\n  let yTickFormat = formatValue;\n  const tickValues = getXaxisValues(timespan);\n  const gData: { [x: string]: any }[] = data.filter((values) => !!values);\n\n  if (!domainY) {\n    let minY: number = _.minBy(gData, 'y')?.y ?? 0;\n    let maxY: number = _.maxBy(gData, 'y')?.y ?? 0;\n    if (minY === 0 && maxY === 0) {\n      minY = -1;\n      maxY = 1;\n    } else if (minY > 0 && maxY > 0) {\n      minY = 0;\n    } else if (minY < 0 && maxY < 0) {\n      maxY = 0;\n    }\n    domainValue.y = [minY, maxY];\n    if (Math.abs(maxY - minY) < 0.005) {\n      yTickFormat = (v: number) => (v === 0 ? '0' : v.toExponential(1));\n    }\n  }\n\n  const xTickFormat = (d) => formatDate(d);\n  let xAxisStyle: any = {\n    tickLabels: { fill: 'var(--pf-v5-global--Color--100)' },\n  };\n  if (tickValues.length > 7 || width < 225) {\n    xAxisStyle = {\n      tickLabels: {\n        fill: 'var(--pf-v5-global--Color--100)',\n        angle: 320,\n        fontSize: 10,\n        textAnchor: 'end',\n        verticalAnchor: 'end',\n      },\n    };\n  }\n  const OVERLAP = 20;\n  const chart = (\n    <Chart\n      ariaDesc={ariaDesc}\n      ariaTitle={ariaTitle}\n      containerComponent={\n        containerComponent || (\n          <ChartVoronoiContainer\n            labels={({ datum }) =>\n              datum.name.includes('scatter-') ? `${formatDate(datum.x)}: ${datum.y}` : null\n            }\n            constrainToVisibleArea\n          />\n        )\n      }\n      domain={domainValue}\n      domainPadding={{ x: 10, y: 10 }}\n      scale={{ x: 'time', y: 'linear' }}\n      legendPosition=\"bottom\"\n      height={DEFAULT_CHART_HEIGHT}\n      padding={{\n        bottom: 50,\n        left: 50,\n        right: 20,\n        top: 30 + OVERLAP,\n      }}\n      themeColor={themeColor || ChartThemeColor.blue}\n      width={width}\n    >\n      <ChartAxis style={xAxisStyle} tickValues={tickValues} tickFormat={xTickFormat} />\n      <ChartAxis\n        dependentAxis\n        showGrid\n        tickFormat={yTickFormatter || yTickFormat}\n        style={{\n          tickLabels: { fill: 'var(--pf-v5-global--Color--100)' },\n        }}\n      />\n      <ChartGroup>\n        {!bar &&\n          Object.values(gData).map((d, index) => (\n            <ChartScatter\n              groupComponent={<g />}\n              key={`scatter-${index}`} // eslint-disable-line react/no-array-index-key\n              name={`scatter-${index}`}\n              data={[d]}\n            />\n          ))}\n      </ChartGroup>\n      <ChartGroup>\n        {bar ? (\n          <ChartBar alignment=\"middle\" key=\"bar\" data={gData} />\n        ) : (\n          gData.map((line, index) => (\n            <ChartLine\n              groupComponent={<g />}\n              key={`line-${index}`} // eslint-disable-line react/no-array-index-key\n              name={`line-${index}`}\n              data={[line]}\n            />\n          ))\n        )}\n      </ChartGroup>\n    </Chart>\n  );\n\n  return <div style={{ marginTop: OVERLAP * -1 }}>{chart}</div>;\n};\n","import * as React from 'react';\nimport {\n  Chart,\n  ChartThemeColor,\n  ChartAxis,\n  ChartGroup,\n  ChartLine,\n  ChartLineProps,\n  ChartProps,\n  ChartTooltip,\n  ChartScatter,\n} from '@patternfly/react-charts';\nimport * as _ from 'lodash';\nimport { DEFAULT_CHART_HEIGHT } from '../../const';\n\nimport './lineChart.scss';\n\ntype LineChartProps = {\n  tickValues?: string[];\n  hiddenSeries?: Set<number>;\n  yTickFormatter?: (v: number) => string;\n} & Omit<ChartLineProps, 'events'> &\n  ChartProps;\n\nexport const LineChart: React.FC<LineChartProps> = ({\n  data = [],\n  width,\n  height,\n  containerComponent,\n  ariaDesc,\n  ariaTitle,\n  themeColor,\n  hiddenSeries,\n  yTickFormatter,\n  legendComponent,\n  events,\n  tickValues,\n}) => {\n  const domain = { x: undefined, y: undefined };\n  const yTickFormat = yTickFormatter || null;\n  const filteredData = _.filter(data, (values) => !!values);\n  const findMin = (series) => _.minBy(series, 'y') as any;\n  const findMax = (series) => _.maxBy(series, 'y') as any;\n  let minY: number = findMin(filteredData.map(findMin))?.y ?? 0;\n  let maxY: number = findMax(filteredData.map(findMax))?.y ?? 0;\n  if (minY === 0 && maxY === 0) {\n    minY = -1;\n    maxY = 1;\n  } else if (minY > 0 && maxY > 0) {\n    minY = 0;\n  } else if (minY < 0 && maxY < 0) {\n    maxY = 0;\n  }\n\n  domain.y = [minY, maxY];\n\n  const xAxisStyle = {\n    tickLabels: {\n      angle: 320,\n      fontSize: 10,\n      textAnchor: 'end',\n      verticalAnchor: 'end',\n      fill: 'var(--pf-v5-global--Color--100)',\n    },\n  };\n\n  const OVERLAP = 50;\n  const chart = (\n    <Chart\n      ariaDesc={ariaDesc}\n      ariaTitle={ariaTitle}\n      containerComponent={containerComponent}\n      height={height || DEFAULT_CHART_HEIGHT}\n      domain={domain}\n      events={events}\n      domainPadding={{ x: 10, y: 10 }}\n      padding={{\n        bottom: 80,\n        left: 50,\n        right: 20,\n        top: 30 + OVERLAP,\n      }}\n      themeColor={themeColor || ChartThemeColor.multiUnordered}\n      width={width}\n    >\n      <ChartAxis style={xAxisStyle} labelComponent={<ChartTooltip />} tickValues={tickValues} />\n      <ChartAxis\n        dependentAxis\n        showGrid\n        tickCount={4}\n        tickFormat={yTickFormat}\n        style={{\n          tickLabels: { fill: 'var(--pf-v5-global--Color--100)' },\n        }}\n      />\n      <ChartGroup>\n        {Object.values(filteredData).map((prun, index) => (\n          <ChartScatter\n            groupComponent={<g />}\n            key={`scatter-${index}`} // eslint-disable-line react/no-array-index-key\n            name={`scatter-${index}`}\n            data={\n              !hiddenSeries || (hiddenSeries && !hiddenSeries.has(index)) ? prun : [{ y: null }]\n            }\n          />\n        ))}\n      </ChartGroup>\n      <ChartGroup>\n        {Object.values(filteredData).map((prun, index) => (\n          <ChartLine\n            groupComponent={<g />}\n            key={`line-${index}`} // eslint-disable-line react/no-array-index-key\n            name={`line-${index}`}\n            data={\n              !hiddenSeries || (hiddenSeries && !hiddenSeries.has(index)) ? prun : [{ y: null }]\n            }\n          />\n        ))}\n      </ChartGroup>\n      {legendComponent}\n    </Chart>\n  );\n\n  return <div style={{ marginTop: OVERLAP * -1 }}>{chart}</div>;\n};\n","export { default as ConditionListPage } from './ConditionListPage';\n","import * as React from 'react';\nimport { DefaultList } from '@console/internal/components/default-resource';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ConditionModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\n\ninterface ConditionListPageProps {\n  hideBadge?: boolean;\n  canCreate?: boolean;\n}\n\nconst ConditionListPage: React.FC<\n  Omit<React.ComponentProps<typeof ListPage>, 'canCreate' | 'kind' | 'ListComponent'> &\n    ConditionListPageProps\n> = ({ hideBadge, ...props }) => {\n  const badge = usePipelineTechPreviewBadge(props.namespace);\n  return (\n    <ListPage\n      {...props}\n      canCreate={props.canCreate ?? true}\n      kind={referenceForModel(ConditionModel)}\n      ListComponent={DefaultList}\n      badge={hideBadge ? null : badge}\n    />\n  );\n};\nexport default ConditionListPage;\n","export { default as PipelinesListsPage } from './PipelinesListsPage';\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { DefaultPage } from '@console/internal/components/default-resource';\nimport { Page } from '@console/internal/components/utils';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { SecretModel } from '@console/internal/models';\nimport { referenceForModel, SecretKind } from '@console/internal/module/k8s';\nimport {\n  MenuAction,\n  MenuActions,\n  MultiTabListPage,\n  SecondaryButtonAction,\n  useFlag,\n} from '@console/shared';\nimport { FLAG_OPENSHIFT_PIPELINE_AS_CODE, FLAG_OPENSHIFT_PIPELINE_CONDITION } from '../../const';\nimport { PipelineModel, ConditionModel, PipelineRunModel, RepositoryModel } from '../../models';\nimport { usePipelineTechPreviewBadge } from '../../utils/hooks';\nimport { PAC_SECRET_NAME } from '../pac/const';\nimport PipelineRunsResourceList from '../pipelineruns/PipelineRunsResourceList';\nimport { PIPELINE_NAMESPACE } from '../pipelines/const';\nimport PipelinesList from '../pipelines/list-page/PipelinesList';\nimport RepositoriesList from '../repository/list-page/RepositoriesList';\n\nconst PipelinesListPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const isRepositoryEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE_AS_CODE);\n  const isConditionsEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE_CONDITION);\n  const badge = usePipelineTechPreviewBadge(namespace);\n  const [hasCreateAccess, hasCreateAccessLoading] = useAccessReview({\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'create',\n    resource: 'secrets',\n  });\n  const [pacSecretData, pacSecretDataLoaded, pacSecretDataError] = useK8sGet<SecretKind>(\n    SecretModel,\n    PAC_SECRET_NAME,\n    PIPELINE_NAMESPACE,\n  );\n  const [showTitle, hideBadge, canCreate] = [false, true, false];\n  const menuActions: MenuActions = {\n    pipeline: {\n      model: PipelineModel,\n      onSelection: (key: string, action: MenuAction, url: string) => `${url}/builder`,\n    },\n    pipelineRun: { model: PipelineRunModel },\n    ...(isConditionsEnabled ? { condition: { model: ConditionModel } } : {}),\n    ...(isRepositoryEnabled\n      ? {\n          repository: {\n            model: RepositoryModel,\n            onSelection: (_key: string, _action: MenuAction, url: string) => `${url}/form`,\n          },\n        }\n      : {}),\n  };\n  const pages: Page[] = [\n    {\n      href: '',\n      // t(PipelineModel.labelPluralKey)\n      nameKey: PipelineModel.labelPluralKey,\n      component: PipelinesList,\n    },\n    {\n      href: 'pipeline-runs',\n      // t(PipelineRunModel.labelPluralKey)\n      nameKey: PipelineRunModel.labelPluralKey,\n      component: PipelineRunsResourceList,\n      pageData: { showTitle, hideBadge, canCreate },\n    },\n    ...(isConditionsEnabled\n      ? [\n          {\n            href: 'conditions',\n            // t(ConditionModel.labelPluralKey)\n            nameKey: ConditionModel.labelPluralKey,\n            component: DefaultPage,\n            pageData: {\n              kind: referenceForModel(ConditionModel),\n              canCreate,\n              namespace,\n              showTitle,\n            },\n          },\n        ]\n      : []),\n    ...(isRepositoryEnabled\n      ? [\n          {\n            href: 'repositories',\n            // t(RepositoryModel.labelPluralKey)\n            nameKey: RepositoryModel.labelPluralKey,\n            component: RepositoriesList,\n            pageData: { showTitle, hideBadge, canCreate },\n          },\n        ]\n      : []),\n  ];\n\n  const secondaryButtonAction: SecondaryButtonAction = {\n    href: `/pac/ns/${PIPELINE_NAMESPACE}`,\n    label:\n      pacSecretDataLoaded && !pacSecretDataError && pacSecretData\n        ? t('pipelines-plugin~View GitHub App')\n        : t('pipelines-plugin~Setup GitHub App'),\n  };\n\n  const showSecondaryAction = pacSecretDataLoaded && hasCreateAccess && !hasCreateAccessLoading;\n\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} hideApplications>\n      <MultiTabListPage\n        pages={pages}\n        title={t('pipelines-plugin~Pipelines')}\n        badge={badge}\n        menuActions={menuActions}\n        secondaryButtonAction={showSecondaryAction ? secondaryButtonAction : undefined}\n        telemetryPrefix=\"Pipelines\"\n      />\n    </NamespacedPage>\n  );\n};\n\nexport default PipelinesListPage;\n","export { default as RepositoryDetailsPage } from './RepositoryDetailsPage';\nexport { default as RepositoryFormPage } from './RepositoryFormPage';\nexport { default as RepositoriesList } from './list-page/RepositoriesList';\n","import * as React from 'react';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { DetailsPageProps, DetailsPage } from '@console/internal/components/factory';\nimport { navFactory, Kebab } from '@console/internal/components/utils';\nimport { useTabbedTableBreadcrumbsFor } from '@console/shared';\nimport { pipelinesTab } from '../../utils/pipeline-utils';\nimport RepositoryDetails from './RepositoryDetails';\nimport RepositoryPipelineRunListPage from './RepositoryPipelineRunListPage';\n\nconst RepositoryDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const { kindObj } = props;\n  const params = useParams();\n  const location = useLocation();\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const breadcrumbs = useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    isAdminPerspective ? 'pipelines' : 'dev-pipelines',\n    pipelinesTab(kindObj),\n    undefined,\n    true,\n  );\n\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => breadcrumbs}\n      title={props.name}\n      menuActions={Kebab.factory.common}\n      pages={[\n        navFactory.details(RepositoryDetails),\n        navFactory.editYaml(),\n        {\n          href: 'Runs',\n          // t('pipelines-plugin~PipelineRuns')\n          nameKey: 'pipelines-plugin~PipelineRuns',\n          component: RepositoryPipelineRunListPage,\n        },\n      ]}\n    />\n  );\n};\n\nexport default RepositoryDetailsPage;\n","import { sortable } from '@patternfly/react-table';\nimport i18n from 'i18next';\nimport { Kebab } from '@console/internal/components/utils';\nimport {\n  RepoAnnotationFields,\n  RepositoryAnnotations,\n  RepositoryFields,\n  RepositoryLabels,\n} from './consts';\n\nexport const tableColumnClasses = [\n  'pf-v5-u-w-16-on-lg pf-v5-u-w-25-on-md',\n  'pf-m-u-w-16-on-md pf-m-u-w-8-on-lg',\n  'pf-v5-u-w-16-on-md',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg pf-v5-u-w-25-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  'pf-m-hidden pf-m-visible-on-xl pf-m-u-8-on-xl',\n  Kebab.columnClass,\n];\n\nconst RepositoryPipelineRunHeader = () => {\n  return [\n    {\n      title: i18n.t('pipelines-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Commit id'),\n      sortField: `metadata.labels.${RepositoryLabels[RepositoryFields.SHA]}`,\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n      id: 'namespace',\n    },\n    {\n      title: i18n.t('pipelines-plugin~Vulnerabilities'),\n      sortFunc: 'vulnerabilities',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Status'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Task status'),\n      sortField: 'status.conditions[0].reason',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Started'),\n      sortField: 'status.startTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Duration'),\n      sortField: 'status.completionTime',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: i18n.t('pipelines-plugin~Branch/Tag'),\n      sortField: `metadata.annotations.${RepositoryAnnotations[RepoAnnotationFields.BRANCH]}`,\n      transforms: [sortable],\n      props: { className: tableColumnClasses[7] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[8] },\n    },\n  ];\n};\n\nexport default RepositoryPipelineRunHeader;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { history } from '@console/internal/components/utils';\nimport { defaultRepositoryFormValues } from './consts';\nimport { usePacInfo } from './hooks/pac-hook';\nimport {\n  createRemoteWebhook,\n  createRepositoryResources,\n  repositoryValidationSchema,\n} from './repository-form-utils';\nimport { RepositoryForm } from './RepositoryForm';\nimport { RepositoryFormValues } from './types';\n\nconst RepositoryFormPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [pac, loaded] = usePacInfo();\n\n  const { ns } = useParams();\n\n  const handleSubmit = (values: RepositoryFormValues, actions): void => {\n    createRepositoryResources(values, ns)\n      .then(async () => {\n        const isWebHookAttached = await createRemoteWebhook(values, pac, loaded);\n        if (isWebHookAttached) {\n          actions.setFieldValue('webhook.autoAttach', true);\n        }\n\n        actions.setFieldValue('showOverviewPage', true);\n        actions.setStatus({\n          submitError: '',\n        });\n      })\n      .catch((e) => {\n        actions.setStatus({ submitError: e.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={defaultRepositoryFormValues}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validationSchema={repositoryValidationSchema(t)}\n    >\n      {(formikProps) => <RepositoryForm {...formikProps} />}\n    </Formik>\n  );\n};\n\nexport default RepositoryFormPage;\n","import * as React from 'react';\nimport { Navigate, useLocation, useParams } from 'react-router-dom-v5-compat';\n\nconst createLogURL = (pathname: string, taskName: string): string => {\n  const basePath = pathname.replace(/\\/$/, '');\n  const detailsURL = basePath.split('/logs/');\n  return `${detailsURL[0]}/logs?taskName=${taskName}`;\n};\n\nexport const LogURLRedirect: React.FC = () => {\n  const location = useLocation();\n  const { taskName } = useParams();\n  return <Navigate to={createLogURL(location.pathname, taskName)} replace />;\n};\n","import * as React from 'react';\nimport { ClipboardCopy, ClipboardCopyVariant } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { K8sKind, referenceForModel } from '@console/internal/module/k8s';\nimport { RouteTemplate } from '../utils/triggers';\nimport './TriggerTemplateResourceLink.scss';\n\ntype TriggerTemplateResourceLinkProps = {\n  namespace: string;\n  model: K8sKind;\n  links: RouteTemplate[];\n};\nconst TriggerTemplateResourceLink: React.FC<TriggerTemplateResourceLinkProps> = ({\n  links = [],\n  namespace,\n  model,\n}) => {\n  const { t } = useTranslation();\n  const title = t(model.labelPluralKey);\n  const kind = referenceForModel(model);\n\n  if (links.length === 0) {\n    return null;\n  }\n  return (\n    <div className=\"odc-trigger-template-list\">\n      <dl>\n        <dt>{title}</dt>\n        {links.map(({ routeURL, triggerTemplateName }) => {\n          return (\n            <dd key={triggerTemplateName}>\n              <ResourceLink\n                kind={kind}\n                name={triggerTemplateName}\n                namespace={namespace}\n                title={triggerTemplateName}\n                inline\n              />\n              {routeURL && (\n                <div>\n                  <ClipboardCopy variant={ClipboardCopyVariant.inlineCompact}>\n                    {routeURL}\n                  </ClipboardCopy>\n                </div>\n              )}\n            </dd>\n          );\n        })}\n      </dl>\n    </div>\n  );\n};\n\nexport default TriggerTemplateResourceLink;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxField, InputField } from '@console/shared';\n\ntype OptionalableWorkspace = {\n  namePrefix?: string;\n  isReadOnly?: boolean;\n};\n\nconst OptionalableWorkspace: React.FC<OptionalableWorkspace> = ({ namePrefix, isReadOnly }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <InputField\n        data-test=\"name\"\n        name={`${namePrefix}.name`}\n        type={TextInputTypes.text}\n        placeholder={t('pipelines-plugin~Name')}\n        isReadOnly={isReadOnly}\n        aria-label={t('pipelines-plugin~Name')}\n      />\n      <div style={{ marginBottom: 'var(--pf-v5-global--spacer--xs)' }} />\n      <CheckboxField\n        name={`${namePrefix}.optional`}\n        label={t('pipelines-plugin~Optional workspace')}\n      />\n    </>\n  );\n};\n\nexport default OptionalableWorkspace;\n"],"sourceRoot":""}