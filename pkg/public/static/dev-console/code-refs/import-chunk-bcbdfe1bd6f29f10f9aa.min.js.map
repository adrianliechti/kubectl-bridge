{"version":3,"sources":["webpack:///./public/components/resource-quota.jsx","webpack:///./public/components/namespace.jsx","webpack:///./packages/console-shared/src/components/dashboard/inventory-card/utils.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/image-stream.tsx","webpack:///./packages/console-app/src/components/file-upload/file-upload-context.ts","webpack:///./public/components/import-yaml.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard-context.tsx","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./public/components/dashboard/with-dashboard-resources.tsx","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/dev-console/src/utils/imagestream-utils.ts","webpack:///./packages/console-app/src/components/resource-quota/utils.ts","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/dev-console/src/components/health-checks/create-health-checks-probe-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utils.ts","webpack:///./packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/health-item.tsx","webpack:///./packages/console-shared/src/promql/project-dashboard.ts","webpack:///./packages/console-shared/src/promql/cluster-dashboard.ts","webpack:///./packages/console-app/src/components/resource-quota/ResourceQuotaCharts.tsx","webpack:///./packages/console-app/src/components/resource-quota/AppliedClusterResourceQuotaCharts.tsx","webpack:///./public/components/graphs/donut.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/QuotaSummary.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./public/components/image-stream-timeline.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/context.ts","webpack:///./packages/shipwright-plugin/src/types.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-utils.ts","webpack:///./packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/status-card.tsx","webpack:///./packages/dev-console/src/components/projects/CreateProjectListPage.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","webpack:///./public/components/graphs/gauge.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamContext.ts","webpack:///./packages/dev-console/src/components/import/import-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils.ts","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.tsx","webpack:///./public/components/overview/index.tsx","webpack:///./public/components/dashboard/project-dashboard/details-card.tsx","webpack:///./public/components/dashboard/project-dashboard/status-card.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-card.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/inventory-card.tsx","webpack:///./public/components/dashboard/project-dashboard/activity-card.tsx","webpack:///./public/components/dashboard/project-dashboard/launcher-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherItem.tsx","webpack:///./public/components/dashboard/project-dashboard/resource-quota-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem.tsx","webpack:///./packages/console-app/src/components/resource-quota/ClusterResourceQuotaCharts.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem.tsx","webpack:///./packages/shipwright-plugin/src/utils.ts","webpack:///./packages/knative-plugin/src/utils/create-knative-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./packages/dev-console/src/types/samples.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/dev-console/src/utils/shared-submit-utils.ts","webpack:///./packages/dev-console/src/utils/samples.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/dev-console/src/components/edit-application/edit-application-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/dev-console/src/components/import/CreateSecretModal.tsx","webpack:///./packages/dev-console/src/components/import/upload-jar-validation-utils.ts","webpack:///./packages/dev-console/src/components/import/app/AppSection.tsx","webpack:///./packages/shipwright-plugin/src/components/buildrun-status/BuildRunStatus.tsx","webpack:///./packages/dev-console/src/models/samples.ts","webpack:///./packages/dev-console/src/components/import/deployImage-validation-utils.ts","webpack:///./packages/topology/src/components/dropdowns/ApplicationSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/hooks/pac-hook.ts","webpack:///./packages/dev-console/src/components/import/advanced/AdvancedSection.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStream.tsx","webpack:///./packages/console-app/src/components/file-upload/file-upload-utils.ts","webpack:///./packages/dev-console/src/components/user-preferences/usePreferredRoutingOptions.tsx","webpack:///./packages/dev-console/src/components/health-checks/HealthChecks.tsx","webpack:///./packages/dev-console/src/components/health-checks/HealthCheckProbe.tsx","webpack:///./packages/dev-console/src/components/health-checks/ProbeForm.tsx","webpack:///./packages/dev-console/src/components/health-checks/RequestTypeForms.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ResourceLimitSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ScalingSection.tsx","webpack:///./packages/dev-console/src/components/import/builder/BuilderImageTagSelector.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamDropdown.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamNsDropdown.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamTagDropdown.tsx","webpack:///./packages/dev-console/src/components/import/advanced/DeploymentConfigSection.tsx","webpack:///./packages/dev-console/src/components/import/route/SecureRoute.tsx","webpack:///./packages/dev-console/src/utils/shipwright-build-hook.tsx","webpack:///./packages/dev-console/src/components/QueryFocusApplication.tsx","webpack:///./packages/dev-console/src/components/import/advanced/LabelSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/RouteSection.tsx","webpack:///./packages/dev-console/src/components/import/route/AdvancedRouteOptions.tsx","webpack:///./packages/dev-console/src/components/import/serverless/ServerlessRouteSection.tsx","webpack:///./packages/dev-console/src/components/import/route/CreateRoute.tsx","webpack:///./packages/dev-console/src/components/import/route/PortInputField.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ServerlessScalingSection.tsx","webpack:///./packages/dev-console/src/components/import/builder/builderImageHooks.ts","webpack:///./packages/shipwright-plugin/src/api.ts","webpack:///./packages/dev-console/src/components/import/section/IconSection.tsx","webpack:///./packages/dev-console/src/components/import/form-initial-values.ts","webpack:///./packages/dev-console/src/utils/safe-k8s-hook.tsx","webpack:///./packages/dev-console/src/components/import/builder/BuilderImageEnvironments.tsx","webpack:///./packages/dev-console/src/components/import/builder/ImageStreamInfo.tsx","webpack:///./packages/dev-console/src/components/import/deployImage-submit-utils.ts","webpack:///./packages/dev-console/src/components/import/image-search/ImageSearchSection.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageSearch.tsx","webpack:///./packages/dev-console/src/components/import/icon/IconDropdown.tsx","webpack:///./packages/dev-console/src/components/import/serverless/useUpdateKnScalingDefaultValues.ts","webpack:///./packages/dev-console/src/components/import/serverless/useGetAutoscalerConfig.ts","webpack:///./packages/dev-console/src/components/import/jar/useUploadJarFormToast.ts","webpack:///./packages/dev-console/src/components/import/upload-jar-submit-utils.ts","webpack:///./packages/dev-console/src/components/import/jar/section/JarSection.tsx","webpack:///./packages/dev-console/src/components/import/section/deploy-section/DeploySection.tsx","webpack:///./packages/dev-console/src/components/import/ImportPage.tsx","webpack:///./packages/dev-console/src/components/import/SamplesCatalog.tsx","webpack:///./packages/dev-console/src/components/import/ImportSamplePage.tsx","webpack:///./packages/dev-console/src/components/import/DeployImagePage.tsx","webpack:///./packages/dev-console/src/components/import/section/ResourceSection.tsx","webpack:///./packages/dev-console/src/components/import/section/useResourceType.ts","webpack:///./packages/dev-console/src/components/import/jar/UploadJarPage.tsx","webpack:///./packages/dev-console/src/components/import/index.ts","webpack:///./packages/dev-console/src/components/import/ImportForm.tsx","webpack:///./packages/dev-console/src/components/import/section/useDefaultBuildOption.ts","webpack:///./packages/dev-console/src/components/import/toast/ImportToastContent.tsx","webpack:///./packages/dev-console/src/components/import/toast/WebhookToastContent.tsx","webpack:///./packages/dev-console/src/components/import/ImportSampleForm.tsx","webpack:///./packages/dev-console/src/components/import/DeployImage.tsx","webpack:///./packages/dev-console/src/components/import/DeployImageForm.tsx","webpack:///./packages/dev-console/src/components/import/jar/UploadJar.tsx","webpack:///./packages/dev-console/src/components/import/jar/UploadJarForm.tsx"],"names":["common","factory","resourceQuotaMenuActions","getExtensionsActionsForKind","clusterResourceQuotaMenuActions","appliedClusterResourceQuotaMenuActions","namespace","ModifyLabels","ModifyAnnotations","kind","obj","labelKey","href","metadata","name","accessReview","group","apiGroup","resource","plural","verb","Delete","isClusterQuota","quota","clusterQuotaReference","appliedClusterQuotaReference","quotaActions","customData","getQuotaResourceTypes","specHard","sort","getACRQResourceUsage","resourceType","used","status","namespaces","filter","ns","cluster","total","totalUsed","max","hard","spec","percentNamespace","percentOtherNamespaces","percent","otherNamespaces","unused","getResourceUsage","isCluster","statusPath","specPath","usedPath","tableColumnClasses","columnClass","acrqTableColumnClasses","UsageIcon","usageIcon","className","ResourceUsageRow","QuotaScopesInline","scopes","join","QuotaScopesList","t","quotaScopes","Terminating","description","NotTerminating","BestEffort","NotBestEffort","map","scope","scopeObj","key","hasComputeResources","resourceTypes","length","Details","rq","params","reference","isACRQ","text","charts","appliedClusterResourceQuota","clusterResourceQuota","resourceQuota","canListCRQ","label","path","labels","selector","matchLabels","annotations","style","display","marginBottom","type","ResourceQuotaTableRow","actions","resourcesAtQuota","Object","keys","reduce","acc","dataTest","columnID","count","timestamp","creationTimestamp","AppliedClusterResourceQuotaTableRow","ResourceQuotasList","props","Header","title","sortField","transforms","id","Row","virtualize","AppliedClusterResourceQuotasList","quotaType","flatten","resources","data","ResourceQuotasPage","OPENSHIFT","flags","mock","showTitle","namespaced","rowFilters","push","optional","filterGroupName","reducer","items","labelPluralKey","createNS","model","canCreate","createAccessReview","createButtonText","createProps","to","ListComponent","AppliedClusterResourceQuotasPage","ResourceQuotasDetailsPage","menuActions","pages","details","editYaml","AppliedClusterResourceQuotasDetailsPage","getDisplayName","getFilters","requester","ME","USER","SYSTEM","hideIfEmpty","deleteModal","labelKind","weight","tooltip","callback","undefined","phase","content","nsMenuActions","Edit","fetchNamespaceMetrics","promises","query","url","then","result","value","Number","metric","Promise","all","catch","console","error","namespaceColumnInfo","freeze","classes","displayName","memory","cpu","created","NamespacesTableHeader","sortFunc","additional","NamespacesColumnManagementID","getNamespacesSelectedColumns","Set","column","NamespacesTableRow","tableColumns","metrics","UI","getIn","bytes","cores","columns","NamespacesNotFoundMessage","Icon","NamespacesEmptyMessage","NamespacesList","dispatch","updateMetrics","setInterval","clearInterval","selectedColumns","activeColumns","columnManagementID","EmptyMsg","NoDataEmptyMsg","NamespacesPage","createNamespaceModal","createHandler","columnLayout","projectMenuActions","projectColumnManagementID","projectTableHeader","showMetrics","showActions","ProjectLink","project","setLastNamespace","URL","window","location","URLSearchParams","search","basePath","pathname","has","delete","newUrl","toString","hash","namespacedPath","onClick","e","sessionStorage","setItem","projectHeaderWithoutActions","ProjectTableRow","ProjectLinkComponent","actionsEnabled","isColumnManagementEnabled","getProjectSelectedColumns","ProjectsTable","headerWithMetrics","headerNoMetrics","ProjectNotFoundMessage","canCreateNs","CAN_CREATE_NS","canCreateProject","CAN_CREATE_PROJECT","ProjectEmptyMessage","icon","ProjectList","tableProps","canGetNS","CAN_GET_NS","screen","width","ProjectsPage","createProjectModal","filterLabel","skipAccessReview","textFilter","PullSecret","isLoading","setIsLoading","setData","setError","canViewSecrets","serviceAccount","imagePullSecrets","err","modal","pullSecret","variant","isInline","secret","linkTo","NamespaceLineCharts","humanize","byteDataType","BinaryBytes","TopPodsBarChart","ResourceUsage","NamespaceSummary","serviceMeshEnabled","canListSecrets","showLabelEditor","NamespaceDetails","perspective","consoleLinks","isList","links","hideHeading","link","uid","RolesPage","createPath","NamespacesDetailsPage","roles","ProjectsDetailsPage","nameKey","component","workloads","POD_PHASE_GROUP_MAPPING","NOT_MAPPED","ERROR","PROGRESS","WARN","PVC_STATUS_GROUP_MAPPING","PV_STATUS_GROUP_MAPPING","NODE_STATUS_GROUP_MAPPING","VS_STATUS_GROUP_MAPPING","getStatusGroups","mapping","mapper","filterType","groups","UNKNOWN","statusIDs","forEach","find","includes","getPodStatusGroups","getNodeStatusGroups","getPVCStatusGroups","pvc","getPVStatusGroups","pv","getVSStatusGroups","getAnnotationTags","specTag","split","getBuilderTags","imageStream","statusTags","getStatusTags","tags","tag","annotationTags","isBuilderTag","getBuilderTagsSortedByVersion","a","b","v1","v2","localeCompare","getMostRecentBuilderTag","isBuilder","ImageStreamTagsRow","statusTag","imageStreamStatus","latest","from","referencesTag","image","dockerRepositoryCheck","ExampleDockerCommandPopover","publicImageRepository","pushCommand","pullCommand","headerContent","minWidth","bodyContent","ImageStreamsDetails","imageRepository","imageCount","specTagByName","importErrors","importErrorCondition","conditions","condition","message","warning","alerts","i","ImageStreamHistory","imageStreamStatusTags","imageStreamTags","imageStreamName","imageStreamNamespace","history","ImageStreamsDetailsPage","ImageStreamsTableRow","ImageStreamsList","ImageStreamsTableHeader","buildPhase","build","ImageStreamsPage","FileUploadContext","fileUpload","setFileUpload","extensions","FileUploadContextProvider","Provider","useValuesFileUploadContext","fileUploadExtensions","resolved","toastContext","file","setFile","fileExtensions","properties","ext","toLowerCase","f","requiredFileExtension","handler","addToast","fileName","timeout","dismissible","ImportYamlPage","queryParams","isCodeImportRedirect","get","loader","c","DroppableEditYAML","allowMultiple","create","download","header","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","getCheDecoratorData","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","dockerconfigjson","opaque","toTypeAbstraction","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","onCancel","navigate","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","flex","flexDirection","margin","subTitle","fullWidth","children","flexLayout","extraMargin","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","when","is","deploymentValidationSchema","replicas","transform","cv","min","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","request","requestUnit","limitUnit","ensure","imageValidationSchema","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","abbr","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","associateServiceAccountToSecret","isImageSecret","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","ownerReferences","some","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","match","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","ProjectDashboardContext","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","getPodMetricStats","podData","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","isFinite","formattedValue","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","mapDispatchToProps","watchURL","stopWatchURL","watchPrometheusQuery","stopWatchPrometheusQuery","mapStateToProps","dashboards","PROMETHEUS","notificationAlerts","observe","withDashboardResources","WrappedComponent","urls","queries","watchingAlerts","watchPrometheus","queryKey","q","watchAlerts","stopWatchAlerts","watchK8sResource","k8sResources","stopWatchK8sResource","getExternalProps","nextProps","nextState","urlResultChanged","urlKey","queryResultChanged","alertsResultChanged","k8sResourcesChanged","nextExternalProps","externalProps","urlResults","prometheusResults","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","Component","element","editAccess","canEdit","imageStreamLabels","getSampleRepo","sampleRepo","getSampleRef","sampleRef","getSampleContextDir","sampleContextDir","getPorts","imageStreamImage","portSpec","parts","parseInt","protocol","toUpperCase","portsFromSpec","dockerImageMetadata","Config","ExposedPorts","ContainerConfig","makePortName","prettifyName","first","prep","letter","normalizeBuilderImages","imageStreams","builderImages","recentTag","iconClass","iconUrl","getTagDataWithDisplayName","imageTags","selectedTag","defaultName","imageTag","getSuggestedName","imageName","RegistryType","BuilderImagesNamespace","imageRegistryType","External","Internal","getImageStreamTags","getSortedTags","getProjectResource","getImageStreamResource","genericCountResources","getUsedPercentage","usedNum","hardNum","getLabelAndUsage","resourceName","useCount","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","useK8sGet","opts","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","options","getPipelineName","workspaces","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","placeholder","dataSelector","getPipelineOperatorVersion","versions","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","dataModelFactory","getAppLabels","applicationName","runtimeIcon","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageNamespace","imageTrigger","fieldPath","paused","getPodLabels","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","hasOwnProperty","sourceSecret","volumes","getTemplateLabels","dataModelContext","extensionContext","getExtension","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","constructProbeData","ContainerCommand","HTTPGET","scheme","TCPSocket","convertResourceDataToFormData","getHealthChecksData","containerIndex","ReadinessProbe","LivenessProbe","StartupProbe","getProbesData","HealthChecksProbeType","RequestType","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","dir","insecure","cadata","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","uniqueResource","ConsumerPopover","consumers","top","isOpen","setOpen","onShow","onHide","PopoverBody","enableFlip","maxWidth","getLimitIcon","LimitsBody","limitState","requestedState","available","requested","OK","currentConsumer","setCurrentConsumer","activePerspective","canAccessMonitoring","SERVER_FLAGS","prometheusBaseURL","fieldSelector","k8sResource","getResourceToWatch","consumerData","consumerLoaded","consumersLoadError","top5Data","bodyData","consumer","monitoringParams","set","dropdownItems","curr","onDropdownChange","monitoringURL","String","ListItem","OperatorRow","operatorStatus","isResolved","LoadingComponent","ResolvedComponent","operators","OperatorsPopup","operatorExtensions","dynamicOperatorSubsystems","sections","o","operatorResources","getOperatorsWithStatuses","viewAllLink","operatorRowLoader","reverse","hasGutter","OperatorHealthItem","healthStatuses","health","NOT_AVAILABLE","LOADING","operatorStatuses","importantStatuses","operatorsHealth","detailMessage","popupTitle","URLHealthItem","subsystem","modelExists","additionalResource","healthResult","healthResultError","k8sResult","healthState","healthHandler","popupBodyContent","popupComponent","hide","PrometheusHealthItem","infrastructure","queryResults","popupClassname","popupKeepOnOutsideClick","responses","ResourceHealthItem","resourcesWithNamespace","imageManifestVuln","resourcesResult","ProjectQueries","CPU_USAGE","CPU_REQUESTS","MEMORY_USAGE","MEMORY_REQUESTS","POD_COUNT","FILESYSTEM_USAGE","NETWORK_IN_UTILIZATION","NETWORK_OUT_UTILIZATION","top25Queries","PODS_BY_CPU","PODS_BY_MEMORY","PODS_BY_FILESYSTEM","PODS_BY_NETWORK_IN","PODS_BY_NETWORK_OUT","getMultilineQueries","NETWORK_UTILIZATION","desc","getUtilizationQueries","getTopConsumerQueries","OverviewQuery","PODS_BY_STORAGE","NODES_BY_CPU","NODES_BY_MEMORY","NODES_BY_STORAGE","NODES_BY_PODS","NODES_BY_NETWORK_IN","NODES_BY_NETWORK_OUT","PROJECTS_BY_CPU","PROJECTS_BY_MEMORY","PROJECTS_BY_STORAGE","PROJECTS_BY_PODS","PROJECTS_BY_NETWORK_IN","PROJECTS_BY_NETWORK_OUT","overviewQueries","MEMORY_TOTAL","MEMORY_UTILIZATION","CPU_UTILIZATION","CPU_TOTAL","STORAGE_UTILIZATION","STORAGE_TOTAL","POD_UTILIZATION","getTop25ConsumerQueries","utilization","thresholds","nsQuotas","clusterHard","clusterUsed","nsUsed","clusterUsage","nsUsage","DonutChart","ariaChartLinkLabel","ariaChartTitle","ariaDescription","usedLabel","secondaryTitle","usedLabelText","secondaryTitleText","labelText","namespaceData","datum","ariaTitle","ariaDesc","colorScale","getDefinedObj","objData","createPipelineResource","secretResp","pipelineResource","fieldName","secretKey","createSecretResource","getImageStreamTagName","ImageStreamTimelineItem","linkToTag","referenceAndSHA","dockerImageReference","simple","isTagVersionLatest","comparedTag","comparedTagPosition","orderedTagArray","orderedTag","ImageStreamTimeline","tagsArray","timeline","ClusterDashboardContext","infrastructureLoaded","infrastructureError","ComputedBuildRunStatus","ClusterBuildStrategy","ReadableClusterBuildStrategies","BUILDAH","getHealthChecksProbeConfig","probe","formTitle","formSubtitle","healthChecksDefaultValues","httpHeaders","healthChecksProbeInitialData","OperatorsSection","sortedOperatorStatuses","operatorsHealthy","RowLoading","firstColumn","operatorStatusLength","secondColumn","cvResource","DashboardAlerts","hasCVResource","CLUSTER_VERSION","cvLoaded","showClusterUpdate","StatusCard","k8sModels","k8s","subsystemExtensions","dynamicSubsystemExtensions","subsystems","filterSubsystems","popup","operatorSubsystemIndex","findIndex","healthItems","disallowedControlPlaneTopology","controlPlaneTopology","operatorSubsystems","isClickable","isSelectable","hasNoOffset","CreateAProjectButton","openProjectModal","onCreate","setActiveNamespace","createNamespaceOrProjectModal","networkPopovers","PrometheusUtilizationItem","utilizationQuery","totalQuery","TopConsumerPopover","humanizeValue","limitQuery","requestQuery","setLimitReqState","utilizationError","totalError","limitError","requestError","PrometheusMultilineUtilizationItem","TopConsumerPopovers","stats","hasError","responseError","UtilizationCardNodeFilter","machineConfigPools","onNodeSelect","selectedNodes","setIsOpen","selectOptions","order","indexA","indexOf","indexB","mcp","mcpName","hasCheckbox","isSelected","role","onSelect","onOpenChange","open","toggle","toggleRef","isRead","UtilizationCard","machineConfigPoolsLoaded","setSelectedNodes","dynamicItemExtensions","dynamicMultilineItemExtensions","utilizationQueries","multilineQueries","selectionUpdated","getUtilizationQuery","getTotalQuery","getRequestQuery","getLimitQuery","DEFAULT_THRESHOLDS","GaugeChart","invert","loading","remainderLabel","themeColor","green","ready","Gauge","QUERY","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","submitStartPipeline","processWorkspaces","pipelineRunResource","mainCards","Card","leftCards","rightCards","getNamespaceDashboardConsoleLinks","ProjectDashboard","namespaceLinks","context","hasNamespaceLinks","rc","ImageStreamContext","createProject","projectData","createOrUpdateImageStream","formData","imageStreamData","appResources","generatedImageStreamName","userLabels","NAME_LABEL","imageStreamList","imgstr","imageStreamFilterData","originalImageStream","defaultLabels","defaultAnnotations","imgStreamName","newImageStream","createWebhookSecret","createOrUpdateBuildConfig","originalBuildConfig","imageEnv","env","buildStrategy","buildStrategyData","desiredContextDir","imageEnvKeys","customEnvs","buildEnv","dockerStrategy","sourceStrategy","webhookTriggerData","excludedGitTypesForTriggers","buildConfigName","newBuildConfig","uri","imageChange","createOrUpdateDeployment","originalDeployment","ports","podLabels","templateLabels","newDeployment","createOrUpdateResources","createNewProject","canCreateRoute","webhookTrigger","option","originalRepository","Devfile","devfileProjectType","devfileResourceObjects","imageStreamResponse","buildConfigResponse","buildResource","webhookSecretResponse","deploymentResponse","deployResource","serviceModelResponse","service","routeResponse","devfileResources","createDevfileResources","pacRepository","pipelineResources","pipelineData","managedPipeline","triggerResources","detectedType","pipelineServiceAccount","managePipelineResources","originalShipwrightBuild","clusterBuildStrategy","imageStreamRepository","dockerImageRepository","shipwrightParamsObj","Docker","Source","shipwrightBuildName","newShipwrightBuild","cloneSecret","paramValues","shipwrightBuild","createOrUpdateShipwrightBuild","imageStreamURL","originalAnnotations","editAppResource","triggerAnnotations","knDeploymentResource","domainMappingResources","originalDeploymentConfig","newDeploymentConfig","imageChangeParams","automatic","containerNames","deploymentConfig","createOrUpdateDeploymentConfig","originalService","originalRoute","filterDeployedResources","handleRedirect","perspectiveExtensions","searchParamOverrides","perspectiveData","redirectURL","importRedirectURL","searchParams","urlObj","fromEntries","addSearchParamsToRelativeURL","isRouteAdvOptionsUsed","routeData","ksvcRouteData","tlsKey","isScalingAdvOptions","scalingData","ksvcData","ksvcScalingData","scKey","defaultConcurrencytarget","defaultConcurrencyutilization","autoscaleData","asKey","defaultAutoscalewindow","isResourceLimitAdvOptions","resLimits","isLimitUsed","resLimitObj","limitKey","defaultLimitUnit","defaultRequestUnit","getTelemetryImport","devfileJson","selStrategy","import","selectedStrategy","useRecommended","recommended","recommendedStrategy","recommendedBuilderImage","devFileLanguage","projectType","devFileProjectType","targetPortChanged","useRunCommand","NPM_RUN","useAdvancedOptionsGit","useAdvancedOptionsBuild","useAdvancedOptionsDeployment","useAdvancedOptionsRoute","useAdvancedOptionsHealthChecks","useAdvancedOptionsScaling","useAdvancedOptionsResourceLimits","useAdvancedOptionsLabels","getPipelineParams","gitDir","isDockerPipeline","createPipelineForImportFlow","createPipelineRunForImportFlow","isServerlessFunctionPipeline","pipelineInitialValues","VolumeClaimTemplate","secretOpen","updatePipelineForImportFlow","updatedPipeline","pipelineRuntimeOrVersionChanged","resourceVersion","badge","listComponent","listPageProps","OverviewListPageLoader","m","OverviewListPage","DetailsCard","labelsSubset","firstThreelabels","detailsLink","projectName","ClusterUtilizationContext","useConsumers","nsQuery","podQuery","nodeQuery","consumerQueries","CPUPopover","MemoryPopover","StoragePopover","PodPopover","NetworkInPopover","NetworkOutPopover","ProjectUtilizationContext","FilesystemPopover","ProjectInventoryItem","additionalResources","additionalDynamicResources","createFirehoseResource","resourceLoaded","resourceLoadError","additionalResourcesData","additionalResourcesLoaded","additionalResourcesLoadError","dynamicResources","dynamicResourcesError","dynamicResourcesLoaded","InventoryCard","itemExtensions","inventoryExtensions","RecentEvent","viewEvents","eventsResource","getEventsResource","moreLink","OngoingActivity","resourceActivityExtensions","dynamicResourceActivityExtensions","resourceActivities","allResourceActivities","isActivity","getTimestamp","resourcesLoaded","size","ActivityCard","LauncherCard","nl","consoleLink","additionalClassName","dataTestID","ResourceQuotaCard","quotas","rqLoaded","rqLoadError","groupVersionKind","clusterQuotas","acrqLoaded","acrqLoadError","noText","cq","isExpanded","setExpanded","isFilled","onToggle","_event","toggleContent","inline","truncate","getLatestBuildRunStatusforDeployment","buildRuns","buildRunsforDeployment","latestBuildRun","isBuildRunNewerThen","newBuildRun","prevBuildRun","prevCreationTime","byCreationTime","left","right","leftCreationTime","isV1Alpha1Resource","getBuildNameFromBuildRun","buildRun","buildRef","useDetermineModelVersion","modelOne","modelTwo","modelFlagOne","modelFlagTwo","flagTwo","flagOne","useBuildModel","useBuildRunModel","useBuildStrategyModel","useClusterBuildStrategyModel","kindToTabMap","useShipwrightBreadcrumbsFor","isAdminPerspective","resourceToModel","getKnativeServiceDepResource","imageStreamUrl","imageStreamTag","originalKnativeService","defaultUnknownPort","imagePolicy","formType","contTargetPort","imgPullPolicy","Always","IfNotPresent","cpuRequest","cpuRequestUnit","cpuLimit","cpuLimitUnit","memoryRequest","memoryRequestUnit","memoryLimit","memoryLimitUnit","defaultLabel","jArgsIndex","javaArgs","newKnativeDeployResource","jarFileName","containerConcurrency","imagePullPolicy","securityContext","allowPrivilegeEscalation","capabilities","drop","runAsNonRoot","seccompProfile","knativeServiceUpdated","formDomainMappingStruct","knativeSvcResource","curDomainMapping","svcName","getDomainMappingResources","selectedDomainMapping","allDomainMappingList","dmDeleteList","ksvcName","selDomainMappingNames","dmRes","dmSvc","dmDel","action","dmCreateUpdateList","curDomain","domainMappingResourceData","Update","Create","getDomainMappingRequests","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","isGitImportSource","gitImport","isContainerImportSource","containerImport","updateHealthChecksProbe","updatedResource","HealthCheckContext","viewOnly","useViewOnlyAccess","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","setTimeout","servicePort","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","isDeployImageFormData","createService","imagePorts","isi","isiPorts","existingRouteTargetPort","targetPort","newService","createRoute","routeLabels","newRoute","wildcardPolicy","createSampleLink","sample","getGitImportSample","sampleName","getContainerImportSample","hasSampleQueryParameter","groupConsoleSamplesByName","grouped","consoleSample","getBestMatch","preferredLanguage","preferredCountry","sameLanguageWithoutCountry","sameLanguageWithAnyCountry","fallbackLanguageSameCountry","fallbackLanguageNoCountry","fallbackLanguageAnyCountry","sampleLanguage","sampleCountry","useSamples","getSample","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","eventListenerName","referenceName","eventlistener","ApplicationFlowType","getFlowTypePageTitle","flowType","Dockerfile","Container","JarUpload","BuildSourceType","getBuildSourceType","getResourcesType","getFlowType","Binary","getValidationSchema","checkIfTriggerExists","trigger","getKsvcRouteData","getRouteLabels","allLabels","allRouteLabels","getRouteData","insecureEdgeTerminationPolicy","caCertificate","certificate","destinationCACertificate","getBuildData","getBuildOption","buildStrategyType","shipwrightClusterBuildStrategyType","getServerlessData","serverlessData","autoscalewindowAnnotation","getDeploymentData","deploymentData","getUserLabels","getIconInitialValues","runtimeLabel","getGitAndDockerfileInitialValues","currentImage","isUrlValidating","getGitDataFromPipeline","getGitDataFromShipwrightBuild","getGitDataFromBuildConfig","tagObj","isRecommending","couldNotRecommend","deployImageInitialValues","searchTerm","registry","allowInsecureRegistry","isSearchingForImage","getExternalImageValues","appResource","getInitialValues","appName","editAppResourceData","shipwrightBuildData","commonValues","appGroupName","pacHasError","showEditImportStrategy","getCommonInitialValues","gitDockerValues","fileUploadValues","iconValues","externalImageValues","internalImageValues","isAllowInsecureRegistry","importPolicy","getExternalImageInitialValues","getInternalImageInitialValues","getFileUploadValues","getAllNotStartedPipelines","getItem","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setPipelineNotStarted","CreateSecretModal","secretModalLauncher","fileNameRegex","fileUploadValidationSchema","getAppName","shift","noProjectsAvailable","subPath","initialApplication","getSucceededCondition","getBuildRunStatus","PENDING","RUNNING","SUCCEEDED","FAILED","failedCondition","getBuildRunStatusProps","ConsoleSampleModel","propagationPolicy","deployValidationSchema","applicationsAvailable","setApplicationsAvailable","availableApplications","projectsAvailable","touched","nameField","setFieldValue","setFieldTouched","applicationExists","setApplicationExists","applicationNameInputRef","fieldId","isValid","actionItems","actionTitle","actionKey","inputHelpText","focus","ariaLabel","menuClassName","autoSelect","onLoad","applicationList","noApplicationsAvailable","validated","trimmedApplicationName","usePacInfo","Footer","defaults","components","List","visibleItems","setVisibleItems","onVisibleItemChange","initialState","accessLoading","selectedImageStream","ImageStreamReducer","setLoading","setAccessLoading","setSelectedImageStream","formContextField","reloadCount","setValidated","hasImageStreams","setHasImageStreams","fromImageStreamTag","imageStreamTagList","isNamespaceSelected","isStreamsAvailable","isTagsAvailable","isImageStreamSelected","showCommandLineAlert","Openshift","helperTextInvalid","expansion","isReadOnly","getRequiredFileUploadExtension","ex","supportedFileTypes","lastIndexOf","getFileType","isFileSupported","PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY","usePreferredRoutingOptions","preferredRoutingOptions","setPreferredRoutingOptions","preferredRoutingOptionsLoaded","tlsTermination","insecureTraffic","probeType","temporaryProbeData","setTemporaryProbeData","showProbe","handleDeleteProbe","handleReset","handleSubmit","handleAddProbe","onClose","plain","healthCheckProbeAdded","noHealthCheckProbe","addHealthCheckProbe","renderProbe","errors","RequestTypeOptions","getRequestTypeForm","afterInput","renderPortField","HTTPRequestTypeForm","initialNameValuePairs","nameValue","setNameValue","portFieldName","handleNameValuePairs","nameValuePairs","updatedNameValuePairs","valueFrom","valueString","addString","readOnly","allowSorting","updateParentData","TCPRequestTypeForm","CommandRequestTypeForm","commands","addLabel","disableDeleteRow","hideTitle","unitName","unitOptions","setOutputAsIntegerFlag","selectedBuilderImage","selectedImageTag","showImageInfo","setFieldError","imageDisplayName","tagItems","isServerlessFunctionStrategySelected","k8sGet","imgCollection","initialValues","initialIsi","fieldPrefix","img","imgstreams","imageStreamAvailable","resourceFilter","collectImageStreams","appendItems","openshift","unmounted","isiValues","initialImageStream","initialRoute","initialImageStreamImage","searchImageTag","imageStreamImport","imgStreamLabels","success","autocompleteFilter","showHeader","knativeFuncLoaded","funcLoaded","deploymentConfigObj","secureRoute","terminationOptions","EDGE","PASSTHROUGH","REENCRYPT","insecureTrafficOptions","None","Redirect","Allow","formLabel","useShipwrightBuilds","useClusterBuildStrategy","s2i","buildah","s2iLoaded","s2iErr","buildahLoaded","buildahErr","prevData","isPreferredStrategyAvailable","importStrategy","onSetApp","originalApp","desiredApplication","APPLICATION","originalApplication","sanitizedApp","defaultPort","textExpanded","textCollapsed","domainMappingLoaded","domainMappingLoadErr","ksvc","mappedDomain","domainRes","filterDm","newDomainMap","domainsInUse","placeholderText","isCreatable","knativeService","portOptions","placeholderPort","toggleOnSelection","AutoscaleWindowUnits","h","useBuilderImageEnvironments","environmentExtensions","environments","flat","startBuild","resourceMapLabel","newBuildRunData","canRerunBuildRun","hasBuildRef","hasBuildSpec","buildSpec","rerunBuildRun","buildRefName","formik","onChanged","getBaseInitialValues","activeApplication","initial","useSafeK8s","controller","mounted","AbortController","abort","signal","defaultValue","iconSize","annotationTag","isiName","referencePolicy","mergedImageStream","createdImageStream","generation","getMetadata","volumeNumber","volumeName","mountPath","ensurePortExists","suppliedPorts","createOrUpdateDeployImageResources","rawFormData","internalImageStreamName","internalImageStreamNamespace","imgName","imgNamespace","templateAnnotations","imageRef","originalImageStreamName","newImageName","imageStreamRepo","setRegistry","showSample","activeChildren","inputRef","dirty","newImageSecret","setNewImageSecret","alertVisible","shouldHideAlert","nameTouched","applicationNameTouched","handleSearch","searchTermImage","importImage","images","componentName","useQueryParametersIfDefined","debouncedHandleSearch","handleSave","helpTextInvalid","isInContext","actionClose","src","alt","iconLabelAutocompleteFilter","autocompletePlaceholder","useUpdateKnScalingDefaultValues","knScalingConfig","initialValuesState","setInitialValuesState","previousValues","setKnScalingDefaultValue","useGetAutoscalerConfig","configmap","configmapLoaded","configmapError","_example","useUploadJarFormToast","toast","buildsResource","createdBuildConfig","ownBuilds","buildName","info","dismiss","createOrUpdateJarFile","fileValue","appResImageStream","appResBuildConfig","appResService","appResRoute","binary","filename","onBeforeUnload","returnValue","addEventListener","removeEventListener","instantiateBinaryBuild","appGroupSelectedKey","updatedJarFile","filenamePlaceholder","browseButtonText","clearButtonText","onFileInputChange","hideDefaultPreview","dropzoneProps","accept","onClearClick","DeploySection","isWidthLimited","toggleText","ImportFlows","preselectedNamespace","importType","importData","light","forApplication","contextualSource","CONTEXT_SOURCE","sampleType","labelFilter","catalogId","filteredLists","typeLabel","catalogItems","hideSidebar","isNs","imageStreamResource","imageStreamloaded","initialBaseValues","setStatus","submitError","onReset","goBack","formikProps","invalidTypes","knativeServiceAccess","canIncludeKnative","canIncludeDeploymentConfig","setResourceType","selectInputOptions","deploymentLabel","deploymentConfigLabel","getLabelFromValue","useResourceType","isKnSvcEnabled","defaultResourceType","preferredResourceType","setPreferredResourceType","preferredResourceTypeLoaded","resourceTypeLoaded","projects","imagestream","normalizedJavaImages","isData","isLoadError","ownProps","fireTelemetryEvent","postFormCallback","defaultBuildOption","resourceTypesNotValid","dockerfileHasError","strategyChanged","initialVals","resourceActions","isWebHookAttached","danger","deployedResources","redirectSearchParams","useDefaultBuildOption","isBuildV1Enabled","isShipwrightEnabled","translatedGitType","rel","isSubmitting","selectedImagetag","marginTop","submitLabel","disableSubmit","resetLabel","sticky","helpers","selectId","showAdvancedSections","toastCallback"],"mappings":"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","file":"dev-console/code-refs/import-chunk-bcbdfe1bd6f29f10f9aa.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { OutlinedCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-circle-icon';\nimport { ResourcesAlmostEmptyIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-empty-icon';\nimport { ResourcesAlmostFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-full-icon';\nimport { ResourcesFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport { UnknownIcon } from '@patternfly/react-icons/dist/esm/icons/unknown-icon';\n\nimport { useTranslation } from 'react-i18next';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport ClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/ClusterResourceQuotaCharts';\n\nimport { FLAGS, YellowExclamationTriangleIcon } from '@console/shared';\nimport { DetailsPage, MultiListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  SectionHeading,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  convertToBaseValue,\n  FieldLevelHelp,\n  useAccessReview,\n  LabelList,\n  Selector,\n  Timestamp,\n  DetailsItem,\n} from './utils';\nimport { connectToFlags } from '../reducers/connectToFlags';\nimport { flagPending } from '../reducers/features';\nimport { LoadingBox } from './utils/status-box';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport {\n  AppliedClusterResourceQuotaModel,\n  ResourceQuotaModel,\n  ClusterResourceQuotaModel,\n} from '../models';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\n\nconst { common } = Kebab.factory;\n\nconst resourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ResourceQuotaModel),\n  ...common,\n];\nconst clusterResourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  ...common,\n];\nconst appliedClusterResourceQuotaMenuActions = (namespace) => [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (kind, obj) => {\n    return {\n      // t('public~Edit AppliedClusterResourceQuota')\n      labelKey: 'public~Edit AppliedClusterResourceQuota',\n      href: `/k8s/ns/${namespace}/${referenceForModel(AppliedClusterResourceQuotaModel)}/${\n        obj.metadata.name\n      }/yaml`,\n      accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace,\n        verb: 'update',\n      },\n    };\n  },\n  Kebab.factory.Delete,\n];\n\nconst isClusterQuota = (quota) => !quota.metadata.namespace;\n\nconst clusterQuotaReference = referenceForModel(ClusterResourceQuotaModel);\nconst appliedClusterQuotaReference = referenceForModel(AppliedClusterResourceQuotaModel);\n\nconst quotaActions = (quota, customData = undefined) => {\n  if (quota.metadata.namespace) {\n    return resourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'ClusterResourceQuota') {\n    return clusterResourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'AppliedClusterResourceQuota') {\n    return appliedClusterResourceQuotaMenuActions(customData.namespace);\n  }\n};\n\nexport const getQuotaResourceTypes = (quota) => {\n  const specHard = isClusterQuota(quota)\n    ? _.get(quota, 'spec.quota.hard')\n    : _.get(quota, 'spec.hard');\n  return _.keys(specHard).sort();\n};\n\nexport const getACRQResourceUsage = (quota, resourceType, namespace) => {\n  let used;\n  if (namespace) {\n    const allNamespaceData = quota.status?.namespaces;\n    const currentNamespaceData = allNamespaceData.filter((ns) => ns.namespace === namespace);\n    used = {\n      namespace: currentNamespaceData[0]?.status?.used[resourceType],\n      cluster: quota.status?.total?.used[resourceType],\n    };\n  } else {\n    used = { namespace: 0, cluster: quota.status?.total?.used[resourceType] };\n  }\n  const totalUsed = quota.status?.total?.used[resourceType];\n  const max = quota.status?.total?.hard[resourceType] || quota.spec?.quota?.hard[resourceType];\n  const percentNamespace =\n    !max || !used.namespace\n      ? 0\n      : (convertToBaseValue(used.namespace) / convertToBaseValue(max)) * 100;\n  const percentCluster =\n    !max || !used.cluster ? 0 : (convertToBaseValue(used.cluster) / convertToBaseValue(max)) * 100;\n  const percentOtherNamespaces = percentCluster - percentNamespace;\n\n  return {\n    used,\n    totalUsed,\n    max,\n    percent: {\n      namespace: percentNamespace,\n      otherNamespaces: percentOtherNamespaces,\n      unused: 100 - (percentNamespace + percentOtherNamespaces),\n    },\n  };\n};\n\nexport const getResourceUsage = (quota, resourceType) => {\n  const isCluster = isClusterQuota(quota);\n  const statusPath = isCluster ? ['status', 'total', 'hard'] : ['status', 'hard'];\n  const specPath = isCluster ? ['spec', 'quota', 'hard'] : ['spec', 'hard'];\n  const usedPath = isCluster ? ['status', 'total', 'used'] : ['status', 'used'];\n  const max =\n    _.get(quota, [...statusPath, resourceType]) || _.get(quota, [...specPath, resourceType]);\n  const used = _.get(quota, [...usedPath, resourceType]);\n  const percent = !max || !used ? 0 : (convertToBaseValue(used) / convertToBaseValue(max)) * 100;\n\n  return {\n    used,\n    max,\n    percent,\n  };\n};\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst acrqTableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nexport const UsageIcon = ({ percent }) => {\n  let usageIcon = <UnknownIcon />;\n  if (percent === 0) {\n    usageIcon = <OutlinedCircleIcon className=\"co-resource-quota-empty\" />;\n  } else if (percent > 0 && percent < 50) {\n    usageIcon = <ResourcesAlmostEmptyIcon className=\"co-resource-quota-almost-empty\" />;\n  } else if (percent >= 50 && percent < 100) {\n    usageIcon = <ResourcesAlmostFullIcon className=\"co-resource-quota-almost-full\" />;\n  } else if (percent === 100) {\n    usageIcon = <ResourcesFullIcon className=\"co-resource-quota-full\" />;\n  } else if (percent > 100) {\n    usageIcon = <YellowExclamationTriangleIcon className=\"co-resource-quota-exceeded\" />;\n  }\n  return usageIcon;\n};\n\nexport const ResourceUsageRow = ({ quota, resourceType, namespace = undefined }) => {\n  const reference = referenceFor(quota);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  if (isACRQ) {\n    const { used, totalUsed, max, percent } = getACRQResourceUsage(quota, resourceType, namespace);\n    return (\n      <div className=\"row co-m-row\">\n        <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n        <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n          <UsageIcon percent={percent.namespace} />\n        </div>\n        <div className=\"col-sm-2 col-xs-2\">{used.namespace}</div>\n        <div className=\"col-sm-2 col-xs-2\">{totalUsed}</div>\n        <div className=\"col-sm-2 col-xs-2\">{max}</div>\n      </div>\n    );\n  }\n\n  const { used, max, percent } = getResourceUsage(quota, resourceType);\n  return (\n    <div className=\"row co-m-row\">\n      <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n      <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n        <UsageIcon percent={percent} />\n      </div>\n      <div className=\"col-sm-3 col-xs-3\">{used}</div>\n      <div className=\"col-sm-3 col-xs-3\">{max}</div>\n    </div>\n  );\n};\n\nexport const QuotaScopesInline = ({ scopes }) => {\n  return <span>({scopes.join(', ')})</span>;\n};\n\nexport const QuotaScopesList = ({ scopes }) => {\n  const { t } = useTranslation();\n  const quotaScopes = {\n    Terminating: {\n      description: t(\n        'public~Affects pods that have an active deadline. These pods usually include builds, deployers, and jobs.',\n      ),\n    },\n    NotTerminating: {\n      description: t(\n        'public~Affects pods that do not have an active deadline. These pods usually include your applications.',\n      ),\n    },\n    BestEffort: {\n      description: t(\n        'public~Affects pods that do not have resource limits set. These pods have a best effort quality of service.',\n      ),\n    },\n    NotBestEffort: {\n      description: t(\n        'public~Affects pods that have at least one resource limit set. These pods do not have a best effort quality of service.',\n      ),\n    },\n  };\n  return scopes.map((scope) => {\n    const scopeObj = _.get(quotaScopes, scope);\n    return scopeObj ? (\n      <dd key={scope}>\n        <div className=\"co-resource-quota-scope__label\">{scope}</div>\n        <div className=\"co-resource-quota-scope__description\">{scopeObj.description}</div>\n      </dd>\n    ) : (\n      <dd key={scope} className=\"co-resource-quota-scope__label\">\n        {scope}\n      </dd>\n    );\n  });\n};\n\nexport const hasComputeResources = (resourceTypes) => {\n  const chartResourceTypes = [\n    'requests.cpu',\n    'cpu',\n    'limits.cpu',\n    'requests.memory',\n    'memory',\n    'limits.memory',\n  ];\n  return _.intersection(resourceTypes, chartResourceTypes).length > 0;\n};\n\nconst Details = ({ obj: rq }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const resourceTypes = getQuotaResourceTypes(rq);\n  const scopes = rq.spec?.scopes ?? rq.spec?.quota?.scopes;\n  const reference = referenceFor(rq);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  const namespace = params?.ns;\n  let text;\n  let charts;\n  switch (reference) {\n    case appliedClusterQuotaReference:\n      text = t('public~AppliedClusterResourceQuota details');\n      charts = (\n        <AppliedClusterResourceQuotaCharts appliedClusterResourceQuota={rq} namespace={namespace} />\n      );\n      break;\n    case clusterQuotaReference:\n      text = t('public~ClusterResourceQuota details');\n      charts = <ClusterResourceQuotaCharts clusterResourceQuota={rq} />;\n      break;\n    default:\n      text = t('public~ResourceQuota details');\n      charts = <ResourceQuotaCharts resourceQuota={rq} />;\n  }\n  const canListCRQ = useAccessReview({\n    group: ClusterResourceQuotaModel.apiGroup,\n    resource: ClusterResourceQuotaModel.plural,\n    verb: 'list',\n  });\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} />\n        {charts}\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={rq}>\n              {canListCRQ && (\n                <DetailsItem\n                  label={t('public~ClusterResourceQuota')}\n                  obj={rq}\n                  path=\"rq.metadata.name\"\n                >\n                  <ResourceLink kind={clusterQuotaReference} name={rq.metadata.name} />\n                </DetailsItem>\n              )}\n              <DetailsItem\n                label={t('public~Label selector')}\n                obj={rq}\n                path=\"spec.selector.labels.matchLabels\"\n              >\n                <LabelList\n                  kind={appliedClusterQuotaReference}\n                  labels={rq.spec?.selector?.labels?.matchLabels}\n                />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Project annotations')}\n                obj={rq}\n                path=\"spec.selector.annotations\"\n              >\n                <Selector selector={rq.spec?.selector?.annotations} namespace={namespace} />\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          {scopes && (\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('public~Scopes')}</dt>\n                <QuotaScopesList scopes={scopes} />\n              </dl>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} style={{ display: 'block', marginBottom: '20px' }}>\n          <FieldLevelHelp>\n            <p>\n              {t(\n                'public~Requests are the amount of resources you expect to use. These are used when establishing if the cluster can fulfill your Request.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~Limits are a maximum amount of a resource you can consume. Applications consuming more than the Limit may be terminated.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~A cluster administrator can establish limits on both the amount you can request and your limits with a ResourceQuota.',\n              )}\n            </p>\n          </FieldLevelHelp>\n        </SectionHeading>\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          <div className=\"row co-m-table-grid__head\">\n            <div className=\"col-sm-4 col-xs-6\">{t('public~Resource type')}</div>\n            <div className=\"col-sm-2 hidden-xs\">{t('public~Capacity')}</div>\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Used')}\n            </div>\n            {isACRQ && <div className=\"col-sm-2 col-xs-2\">{t('public~Total used')}</div>}\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Max')}\n            </div>\n          </div>\n          <div className=\"co-m-table-grid__body\">\n            {resourceTypes.map((type) => (\n              <ResourceUsageRow key={type} quota={rq} resourceType={type} namespace={namespace} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  let resourcesAtQuota;\n  if (rq.kind === ResourceQuotaModel.kind) {\n    resourcesAtQuota = Object.keys(rq?.status?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.hard[resource], rq?.status?.used?.[resource]) >= 100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  } else {\n    resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n        100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  }\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceFor(rq)}\n          name={rq.metadata.name}\n          namespace={\n            referenceFor(rq) === appliedClusterQuotaReference\n              ? customData.namespace\n              : rq.metadata.namespace\n          }\n          className=\"co-resource-item__resource-name\"\n          dataTest=\"resource-quota-link\"\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        {rq.metadata.namespace ? (\n          <ResourceLink kind=\"Namespace\" name={rq.metadata.namespace} />\n        ) : (\n          t('public~None')\n        )}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={referenceFor(rq)}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst AppliedClusterResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  const resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n    (acc, resource) =>\n      getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n      100\n        ? acc + 1\n        : acc,\n    0,\n  );\n  return (\n    <>\n      <TableData className={acrqTableColumnClasses[0]}>\n        <ResourceLink\n          kind={appliedClusterQuotaReference}\n          name={rq.metadata.name}\n          namespace={customData.namespace}\n          className=\"co-resource-item__resource-name\"\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[1], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[2], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[3], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={acrqTableColumnClasses[4]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={acrqTableColumnClasses[5]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={appliedClusterQuotaReference}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nexport const ResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const ResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: tableColumnClasses[4] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[5] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[6] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ResourceQuotas')}\n      Header={ResourceQuotaTableHeader}\n      Row={ResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const AppliedClusterResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[0] },\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[1] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[2] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: acrqTableColumnClasses[3] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: acrqTableColumnClasses[5] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~AppliedClusterResourceQuotas')}\n      Header={AppliedClusterResourceQuotaTableHeader}\n      Row={AppliedClusterResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const quotaType = (quota) => {\n  if (!quota) {\n    return undefined;\n  }\n  return quota.metadata.namespace ? 'namespace' : 'cluster';\n};\n\n// Split each resource quota into one row per subject\nexport const flatten = (resources) => _.flatMap(resources, (resource) => _.compact(resource.data));\n\nexport const ResourceQuotasPage = connectToFlags(FLAGS.OPENSHIFT)(\n  ({ namespace, flags, mock, showTitle }) => {\n    const { t } = useTranslation();\n    const resources = [{ kind: 'ResourceQuota', namespaced: true }];\n    let rowFilters = null;\n\n    if (flagPending(flags[FLAGS.OPENSHIFT])) {\n      return <LoadingBox />;\n    }\n    if (flags[FLAGS.OPENSHIFT]) {\n      if (!namespace) {\n        resources.push({\n          kind: referenceForModel(ClusterResourceQuotaModel),\n          namespaced: false,\n          optional: true,\n        });\n      } else {\n        resources.push({\n          kind: referenceForModel(AppliedClusterResourceQuotaModel),\n          namespaced: true,\n          namespace,\n          optional: true,\n        });\n      }\n\n      rowFilters = [\n        {\n          filterGroupName: t('public~Role'),\n          type: 'role-kind',\n          reducer: quotaType,\n          items: [\n            {\n              id: 'cluster',\n              title: t('public~Cluster-wide {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n            {\n              id: 'namespace',\n              title: t('public~Namespace {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n          ],\n        },\n      ];\n    }\n    const createNS = namespace || 'default';\n    const accessReview = {\n      model: ResourceQuotaModel,\n      namespace: createNS,\n    };\n    return (\n      <MultiListPage\n        canCreate={true}\n        createAccessReview={accessReview}\n        createButtonText={t('public~Create ResourceQuota')}\n        createProps={{ to: `/k8s/ns/${createNS}/resourcequotas/~new` }}\n        ListComponent={ResourceQuotasList}\n        resources={resources}\n        label={t(ResourceQuotaModel.labelPluralKey)}\n        namespace={namespace}\n        flatten={flatten}\n        title={t(ResourceQuotaModel.labelPluralKey)}\n        rowFilters={rowFilters}\n        mock={mock}\n        showTitle={showTitle}\n      />\n    );\n  },\n);\n\nexport const AppliedClusterResourceQuotasPage = ({ namespace, mock, showTitle }) => {\n  const { t } = useTranslation();\n  const resources = [\n    {\n      kind: referenceForModel(AppliedClusterResourceQuotaModel),\n      namespaced: true,\n      namespace,\n      optional: true,\n    },\n  ];\n\n  return (\n    <MultiListPage\n      ListComponent={AppliedClusterResourceQuotasList}\n      resources={resources}\n      label={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      namespace={namespace}\n      flatten={flatten}\n      title={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      mock={mock}\n      showTitle={showTitle}\n    />\n  );\n};\n\nexport const ResourceQuotasDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={resourceQuotaMenuActions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasDetailsPage = (props) => {\n  const params = useParams();\n  const actions = appliedClusterResourceQuotaMenuActions(params?.ns);\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={actions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n","/* eslint-disable tsdoc/syntax */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Alert, Button, Tooltip } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Status,\n  getRequester,\n  getDescription,\n  FLAGS,\n  GreenCheckCircleIcon,\n  getName,\n  COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n  COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n  useUserSettingsCompatibility,\n  isModifiedEvent,\n  REQUESTER_FILTER,\n  useFlag,\n  usePrometheusGate,\n} from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport * as k8sActions from '@console/dynamic-plugin-sdk/src/app/k8s/actions/k8s';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport {\n  ConsoleLinkModel,\n  NamespaceModel,\n  ProjectModel,\n  SecretModel,\n  ServiceAccountModel,\n} from '../models';\nimport { coFetchJSON } from '../co-fetch';\nimport { k8sGet, referenceForModel } from '../module/k8s';\nimport * as UIActions from '../actions/ui';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  DetailsItem,\n  ExternalLink,\n  Kebab,\n  LabelList,\n  LoadingInline,\n  ConsoleEmptyState,\n  ResourceIcon,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  formatBytesAsMiB,\n  formatCores,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  navFactory,\n  useAccessReview,\n} from './utils';\nimport { deleteNamespaceModal, configureNamespacePullSecretModal } from './modals';\nimport { RoleBindingsPage } from './RBAC';\nimport { Bar, Area, PROMETHEUS_BASE_PATH } from './graphs';\nimport { flagPending } from '../reducers/features';\nimport { OpenShiftGettingStarted } from './start-guide';\nimport { OverviewListPage } from './overview';\nimport {\n  getNamespaceDashboardConsoleLinks,\n  ProjectDashboard,\n} from './dashboard/project-dashboard/project-dashboard';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\n\nimport {\n  isCurrentUser,\n  isOtherUser,\n  isSystemNamespace,\n} from '@console/shared/src/components/namespace';\nimport { useCreateNamespaceModal } from '@console/shared/src/hooks/useCreateNamespaceModal';\nimport { useCreateProjectModal } from '@console/shared/src/hooks/useCreateProjectModal';\n\nconst getDisplayName = (obj) =>\n  _.get(obj, ['metadata', 'annotations', 'openshift.io/display-name']);\n\n// KKD CHECK TO SEE THAT ITEMS CHANGE WHEN LANGUAGE CHANGES\nconst getFilters = () => [\n  {\n    filterGroupName: i18next.t('public~Requester'),\n    type: 'requester',\n    reducer: (namespace) => {\n      const name = namespace.metadata?.name;\n      const requester = namespace.metadata?.annotations?.['openshift.io/requester'];\n      if (isCurrentUser(requester)) {\n        return REQUESTER_FILTER.ME;\n      }\n      if (isOtherUser(requester, name)) {\n        return REQUESTER_FILTER.USER;\n      }\n      if (isSystemNamespace({ title: name })) {\n        return REQUESTER_FILTER.SYSTEM;\n      }\n    },\n    items: [\n      { id: REQUESTER_FILTER.ME, title: i18next.t('public~Me') },\n      { id: REQUESTER_FILTER.USER, title: i18next.t('public~User') },\n      { id: REQUESTER_FILTER.SYSTEM, title: i18next.t('public~System'), hideIfEmpty: true },\n    ],\n  },\n];\n\nexport const deleteModal = (kind, ns) => {\n  const { labelKey, labelKind, weight, accessReview } = Kebab.factory.Delete(kind, ns);\n  let callback = undefined;\n  let tooltip;\n  let label;\n\n  if (ns.metadata.name === 'default') {\n    tooltip = `${kind.label} default cannot be deleted`;\n  } else if (ns.status?.phase === 'Terminating') {\n    tooltip = `${kind.label} is already terminating`;\n  } else {\n    callback = () => deleteNamespaceModal({ kind, resource: ns });\n  }\n  if (tooltip) {\n    label = (\n      <div className=\"dropdown__disabled\">\n        <Tooltip content={tooltip}>\n          <span>{i18next.t(labelKey, labelKind)}</span>\n        </Tooltip>\n      </div>\n    );\n  }\n  return { label, labelKey, labelKind, weight, callback, accessReview };\n};\n\nconst nsMenuActions = [\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  Kebab.factory.Edit,\n  deleteModal,\n];\n\nconst fetchNamespaceMetrics = () => {\n  const metrics = [\n    {\n      key: 'memory',\n      query: 'sum by(namespace) (container_memory_working_set_bytes{container=\"\",pod!=\"\"})',\n    },\n    {\n      key: 'cpu',\n      query: 'namespace:container_cpu_usage:sum',\n    },\n  ];\n  const promises = metrics.map(({ key, query }) => {\n    const url = `${PROMETHEUS_BASE_PATH}/api/v1/query?&query=${query}`;\n    return coFetchJSON(url).then(({ data: { result } }) => {\n      return result.reduce((acc, data) => {\n        const value = Number(data.value[1]);\n        return _.set(acc, [key, data.metric.namespace], value);\n      }, {});\n    });\n  });\n  return (\n    Promise.all(promises)\n      .then((data) => _.assign({}, ...data))\n      // eslint-disable-next-line no-console\n      .catch(console.error)\n  );\n};\n\nconst namespaceColumnInfo = Object.freeze({\n  name: {\n    classes: '',\n    id: 'name',\n  },\n  displayName: {\n    classes: 'co-break-word',\n    id: 'displayName',\n  },\n  status: {\n    classes: '',\n    id: 'status',\n  },\n  requester: {\n    classes: '',\n    id: 'requester',\n  },\n  memory: {\n    classes: '',\n    id: 'memory',\n  },\n  cpu: {\n    classes: '',\n    id: 'cpu',\n  },\n  created: {\n    classes: '',\n    id: 'created',\n  },\n  description: {\n    classes: '',\n    id: 'description',\n  },\n  labels: {\n    classes: '',\n    id: 'labels',\n  },\n});\n\nconst NamespacesTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    {\n      title: i18next.t('public~Memory'),\n      id: namespaceColumnInfo.memory.id,\n      sortFunc: 'namespaceMemory',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.memory.classes },\n    },\n    {\n      title: i18next.t('public~CPU'),\n      id: namespaceColumnInfo.cpu.id,\n      sortFunc: 'namespaceCPU',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.cpu.classes },\n    },\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    { title: '', props: { className: Kebab.columnClass } },\n  ];\n};\nNamespacesTableHeader.displayName = 'NamespacesTableHeader';\n\nconst NamespacesColumnManagementID = referenceForModel(NamespaceModel);\n\nconst getNamespacesSelectedColumns = () => {\n  return new Set(\n    NamespacesTableHeader().reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst NamespacesTableRow = ({ obj: ns, customData: { tableColumns } }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(ns);\n  const requester = getRequester(ns);\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(ns);\n  const labels = ns.metadata.labels;\n  const columns = tableColumns?.length > 0 ? new Set(tableColumns) : getNamespacesSelectedColumns();\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        <ResourceLink kind=\"Namespace\" name={ns.metadata.name} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(ns) || <span className=\"text-muted\">{t('public~No display name')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.status.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={ns.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.memory.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.memory.id}\n      >\n        {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.cpu.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.cpu.id}\n      >\n        {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={ns.metadata.creationTimestamp} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.description.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.description.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.labels.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.labels.id}\n      >\n        <LabelList kind=\"Namespace\" labels={labels} />\n      </TableData>\n      <TableData className={Kebab.columnClass}>\n        <ResourceKebab actions={nsMenuActions} kind=\"Namespace\" resource={ns} />\n      </TableData>\n    </>\n  );\n};\n\nconst NamespacesNotFoundMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No Namespaces found')} Icon={SearchIcon}>\n      {t('public~No results were found for the requested Namespaces.')}\n    </ConsoleEmptyState>\n  );\n};\n\nconst NamespacesEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Namespaces')} Icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const NamespacesList = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    const updateMetrics = () =>\n      fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n    updateMetrics();\n    const id = setInterval(updateMetrics, 30 * 1000);\n    return () => clearInterval(id);\n  }, [dispatch]);\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : null;\n\n  const customData = React.useMemo(\n    () => ({\n      tableColumns: tableColumns?.[NamespacesColumnManagementID],\n    }),\n    [tableColumns],\n  );\n\n  return (\n    <Table\n      {...props}\n      activeColumns={selectedColumns}\n      columnManagementID={NamespacesColumnManagementID}\n      aria-label={t('public~Namespaces')}\n      Header={NamespacesTableHeader}\n      Row={NamespacesTableRow}\n      customData={customData}\n      virtualize\n      EmptyMsg={NamespacesEmptyMessage}\n      NoDataEmptyMsg={NamespacesNotFoundMessage}\n    />\n  );\n};\n\nexport const NamespacesPage = (props) => {\n  const { t } = useTranslation();\n  const createNamespaceModal = useCreateNamespaceModal();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : getNamespacesSelectedColumns();\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={NamespacesList}\n      canCreate={true}\n      createHandler={() => createNamespaceModal()}\n      columnLayout={{\n        columns: NamespacesTableHeader(null, t).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: NamespacesColumnManagementID,\n        selectedColumns,\n        type: t('public~Namespaces'),\n      }}\n    />\n  );\n};\n\nexport const projectMenuActions = [Kebab.factory.Edit, deleteModal];\n\nconst projectColumnManagementID = referenceForModel(ProjectModel);\n\nconst projectTableHeader = ({ showMetrics, showActions }) => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    ...(showMetrics\n      ? [\n          {\n            title: i18next.t('public~Memory'),\n            id: namespaceColumnInfo.memory.id,\n            sortFunc: 'namespaceMemory',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.memory.classes },\n          },\n          {\n            title: i18next.t('public~CPU'),\n            id: namespaceColumnInfo.cpu.id,\n            sortFunc: 'namespaceCPU',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.cpu.classes },\n          },\n        ]\n      : []),\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    ...(showActions ? [{ title: '', props: { className: Kebab.columnClass } }] : []),\n  ];\n};\n\nconst getProjectSelectedColumns = ({ showMetrics, showActions }) => {\n  return new Set(\n    projectTableHeader({ showMetrics, showActions }).reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst ProjectLink = ({ project }) => {\n  const dispatch = useDispatch();\n  const [, setLastNamespace] = useUserSettingsCompatibility(\n    LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n    LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  );\n  const url = new URL(window.location.href);\n  const params = new URLSearchParams(url.search);\n  const basePath = url.pathname;\n  if (params.has('project-name')) {\n    // clear project-name query param from the url\n    params.delete('project-name');\n  }\n  const newUrl = {\n    search: `?${params.toString()}`,\n    hash: url.hash,\n  };\n  const namespacedPath = UIActions.formatNamespaceRoute(project.metadata.name, basePath, newUrl);\n\n  const handleClick = (e) => {\n    // Don't set last namespace if its modified click (Ctrl+Click).\n    if (isModifiedEvent(e)) {\n      return;\n    }\n    setLastNamespace(project.metadata.name);\n    // update last namespace in session storage (persisted only for current browser tab). Used to remember/restore if\n    // \"All Projects\" was selected when returning to the list view (typically from details view) via breadcrumb or\n    // sidebar navigation\n    sessionStorage.setItem(LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY, project.metadata.name);\n    // clear project-name filter when active namespace is changed\n    dispatch(k8sActions.filterList(referenceForModel(ProjectModel), 'project-name', ''));\n  };\n\n  return (\n    <span className=\"co-resource-item co-resource-item--truncate\">\n      <ResourceIcon kind=\"Project\" />\n      <Link to={namespacedPath} className=\"co-resource-item__resource-name\" onClick={handleClick}>\n        {project.metadata.name}\n      </Link>\n    </span>\n  );\n};\nconst projectHeaderWithoutActions = () =>\n  projectTableHeader({ showMetrics: false, showActions: false });\n\nconst ProjectTableRow = ({ obj: project, customData = {} }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(project);\n  const requester = getRequester(project);\n  const {\n    ProjectLinkComponent,\n    actionsEnabled = true,\n    showMetrics,\n    showActions,\n    isColumnManagementEnabled = true,\n    tableColumns,\n  } = customData;\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(project);\n  const labels = project.metadata.labels;\n  const columns = isColumnManagementEnabled\n    ? tableColumns?.length > 0\n      ? new Set(tableColumns)\n      : getProjectSelectedColumns({ showMetrics, showActions })\n    : null;\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        {customData && ProjectLinkComponent ? (\n          <ProjectLinkComponent project={project} />\n        ) : (\n          <span className=\"co-resource-item\">\n            <ResourceLink kind=\"Project\" name={project.metadata.name} />\n          </span>\n        )}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(project) || (\n            <span className=\"text-muted\">{t('public~No display name')}</span>\n          )}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.status.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={project.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      {showMetrics && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.memory.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.memory.id}\n          >\n            {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.cpu.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.cpu.id}\n          >\n            {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n          </TableData>\n        </>\n      )}\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={project.metadata.creationTimestamp} />\n      </TableData>\n      {isColumnManagementEnabled && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.description.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.description.id}\n          >\n            <span className=\"co-break-word co-line-clamp\">\n              {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n            </span>\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.labels.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.labels.id}\n          >\n            <LabelList labels={labels} kind=\"Project\" />\n          </TableData>\n        </>\n      )}\n      {actionsEnabled && (\n        <TableData className={Kebab.columnClass}>\n          <ResourceKebab actions={projectMenuActions} kind=\"Project\" resource={project} />\n        </TableData>\n      )}\n    </>\n  );\n};\nProjectTableRow.displayName = 'ProjectTableRow';\n\nexport const ProjectsTable = (props) => {\n  const { t } = useTranslation();\n  const customData = React.useMemo(\n    () => ({\n      ProjectLinkComponent: ProjectLink,\n      actionsEnabled: false,\n      isColumnManagementEnabled: false,\n    }),\n    [],\n  );\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Projects')}\n      Header={projectHeaderWithoutActions}\n      Row={ProjectTableRow}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nconst headerWithMetrics = () => projectTableHeader({ showMetrics: true, showActions: true });\nconst headerNoMetrics = () => projectTableHeader({ showMetrics: false, showActions: true });\n\nconst ProjectNotFoundMessage = () => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const canCreate = canCreateNs || canCreateProject;\n  return (\n    <ConsoleEmptyState title={t('public~Welcome to OpenShift')}>\n      <OpenShiftGettingStarted canCreate={canCreate} />\n    </ConsoleEmptyState>\n  );\n};\n\nconst ProjectEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Projects')} icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const ProjectList = ({ data, ...tableProps }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const customData = React.useMemo(\n    () => ({\n      showMetrics,\n      tableColumns: tableColumns?.[projectColumnManagementID],\n    }),\n    [showMetrics, tableColumns],\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    if (showMetrics) {\n      const updateMetrics = () =>\n        fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n      updateMetrics();\n      const id = setInterval(updateMetrics, 30 * 1000);\n      return () => clearInterval(id);\n    }\n  }, [dispatch, showMetrics]);\n  const selectedColumns =\n    tableColumns?.[projectColumnManagementID]?.length > 0\n      ? new Set(tableColumns[projectColumnManagementID])\n      : null;\n\n  // Don't render the table until we know whether we can get metrics. It's\n  // not possible to change the table headers once the component is mounted.\n  if (flagPending(canGetNS)) {\n    return null;\n  }\n\n  return (\n    <Table\n      {...tableProps}\n      activeColumns={selectedColumns}\n      columnManagementID={projectColumnManagementID}\n      aria-label={t('public~Projects')}\n      data={data}\n      Header={showMetrics ? headerWithMetrics : headerNoMetrics}\n      Row={ProjectTableRow}\n      NoDataEmptyMsg={ProjectNotFoundMessage}\n      EmptyMsg={ProjectEmptyMessage}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nexport const ProjectsPage = (props) => {\n  const { t } = useTranslation();\n  const createProjectModal = useCreateProjectModal();\n  // Skip self-subject access review for projects since they use a special project request API.\n  // `FLAGS.CAN_CREATE_PROJECT` determines if the user can create projects.\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const showActions = showMetrics;\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={ProjectList}\n      canCreate={canCreateProject}\n      createHandler={() => createProjectModal()}\n      filterLabel={t('public~by name or display name')}\n      skipAccessReview\n      textFilter=\"project-name\"\n      kind=\"Project\"\n      columnLayout={{\n        columns: projectTableHeader({ showMetrics, showActions }).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: projectColumnManagementID,\n        selectedColumns:\n          tableColumns?.[projectColumnManagementID]?.length > 0\n            ? new Set(tableColumns[projectColumnManagementID])\n            : null,\n        type: t('public~Project'),\n      }}\n    />\n  );\n};\n\n/** @type {React.SFC<{namespace: K8sResourceKind}>} */\nexport const PullSecret = (props) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [error, setError] = React.useState(false);\n  const { t } = useTranslation();\n  const { namespace, canViewSecrets } = props;\n\n  React.useEffect(() => {\n    k8sGet(ServiceAccountModel, 'default', namespace.metadata.name, {})\n      .then((serviceAccount) => {\n        setIsLoading(false);\n        setData(serviceAccount.imagePullSecrets ?? []);\n        setError(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setData([]);\n        setError(true);\n        // eslint-disable-next-line no-console\n        console.error('Error getting default ServiceAccount', err);\n      });\n  }, [namespace.metadata.name]);\n\n  const modal = () => configureNamespacePullSecretModal({ namespace, pullSecret: undefined });\n\n  const secrets = () => {\n    if (error) {\n      return <Alert variant=\"danger\" isInline title={t('Error loading default pull Secrets')} />;\n    }\n    return data.length > 0 ? (\n      data.map((secret) => (\n        <div key={secret.name}>\n          <ResourceLink\n            kind=\"Secret\"\n            name={secret.name}\n            namespace={namespace.metadata.name}\n            linkTo={canViewSecrets}\n          />\n        </div>\n      ))\n    ) : (\n      <Button variant=\"link\" type=\"button\" isInline onClick={modal}>\n        {t('public~Not configured')}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <dt>{t('public~Default pull Secret', { count: data.length })}</dt>\n      <dd>{isLoading ? <LoadingInline /> : secrets()}</dd>\n    </>\n  );\n};\n\nexport const NamespaceLineCharts = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~CPU usage')}\n          humanize={humanizeCpuCores}\n          namespace={ns.metadata.name}\n          query={`namespace:container_cpu_usage:sum{namespace='${ns.metadata.name}'}`}\n        />\n      </div>\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~Memory usage')}\n          humanize={humanizeBinaryBytes}\n          byteDataType={ByteDataTypes.BinaryBytes}\n          namespace={ns.metadata.name}\n          query={`sum by(namespace) (container_memory_working_set_bytes{namespace=\"${ns.metadata.name}\",container=\"\",pod!=\"\"})`}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const TopPodsBarChart = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <Bar\n      title={t('public~Memory usage by pod (top 10)')}\n      namespace={ns.metadata.name}\n      query={`sort_desc(topk(10, sum by (pod)(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace=\"${ns.metadata.name}\"})))`}\n      humanize={humanizeBinaryBytes}\n      metric=\"pod\"\n    />\n  );\n};\n\nconst ResourceUsage = ({ ns }) => {\n  const { t } = useTranslation();\n  const isPrometheusAvailable = usePrometheusGate();\n  return isPrometheusAvailable ? (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('public~Resource usage')} />\n      <NamespaceLineCharts ns={ns} />\n      <TopPodsBarChart ns={ns} />\n    </div>\n  ) : null;\n};\n\nexport const NamespaceSummary = ({ ns }) => {\n  const { t } = useTranslation();\n  const displayName = getDisplayName(ns);\n  const description = getDescription(ns);\n  const requester = getRequester(ns);\n  const serviceMeshEnabled = ns.metadata?.labels?.['maistra.io/member-of'];\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    verb: 'patch',\n    namespace: ns.metadata.name,\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-xs-12\">\n        {/* Labels aren't editable on kind Project, only Namespace. */}\n        <ResourceSummary resource={ns} showLabelEditor={ns.kind === 'Namespace'}>\n          <dt>{t('public~Display name')}</dt>\n          <dd\n            className={classNames({\n              'text-muted': !displayName,\n            })}\n          >\n            {displayName || t('public~No display name')}\n          </dd>\n          <dt>{t('public~Description')}</dt>\n          <dd>\n            <p\n              className={classNames({\n                'text-muted': !description,\n                'co-pre-wrap': description,\n                'co-namespace-summary__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </p>\n          </dd>\n          {requester && <dt>Requester</dt>}\n          {requester && <dd>{requester}</dd>}\n        </ResourceSummary>\n      </div>\n      <div className=\"col-sm-6 col-xs-12\">\n        <dl className=\"co-m-pane__details\">\n          <DetailsItem label={t('public~Status')} obj={ns} path=\"status.phase\">\n            <Status status={ns.status?.phase} />\n          </DetailsItem>\n          <PullSecret namespace={ns} canViewSecrets={canListSecrets} />\n          <dt>{t('public~NetworkPolicies')}</dt>\n          <dd>\n            <Link to={`/k8s/ns/${ns.metadata.name}/networkpolicies`}>\n              {t('public~NetworkPolicies')}\n            </Link>\n          </dd>\n          {serviceMeshEnabled && (\n            <>\n              <dt>{t('public~Service mesh')}</dt>\n              <dd>\n                <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n              </dd>\n            </>\n          )}\n        </dl>\n      </div>\n    </div>\n  );\n};\n\nexport const NamespaceDetails = ({ obj: ns, customData }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const links = getNamespaceDashboardConsoleLinks(ns, consoleLinks);\n  return (\n    <div>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project details')}</title>\n        </Helmet>\n      )}\n      <div className=\"co-m-pane__body\">\n        {!customData?.hideHeading && (\n          <SectionHeading text={t('public~{{kind}} details', { kind: ns.kind })} />\n        )}\n        <NamespaceSummary ns={ns} />\n      </div>\n      {ns.kind === 'Namespace' && <ResourceUsage ns={ns} />}\n      {!_.isEmpty(links) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Launcher')} />\n          <ul className=\"pf-v5-c-list pf-m-plain\">\n            {_.map(_.sortBy(links, 'spec.text'), (link) => {\n              return (\n                <li key={link.metadata.uid}>\n                  <ExternalLink href={link.spec.href} text={link.spec.text} />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst RolesPage = ({ obj: { metadata } }) => {\n  return (\n    <RoleBindingsPage\n      createPath={`/k8s/ns/${metadata.name}/rolebindings/~new`}\n      namespace={metadata.name}\n      showTitle={false}\n    />\n  );\n};\n\nexport const NamespacesDetailsPage = (props) => (\n  <DetailsPage\n    {...props}\n    menuActions={nsMenuActions}\n    pages={[\n      navFactory.details(NamespaceDetails),\n      navFactory.editYaml(),\n      navFactory.roles(RolesPage),\n    ]}\n  />\n);\n\nexport const ProjectsDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={projectMenuActions}\n      pages={[\n        {\n          href: '',\n          // t('public~Overview')\n          nameKey: 'public~Overview',\n          component: ProjectDashboard,\n        },\n        {\n          href: 'details',\n          // t('public~Details')\n          nameKey: 'public~Details',\n          component: NamespaceDetails,\n        },\n        navFactory.editYaml(),\n        navFactory.workloads(OverviewListPage),\n        navFactory.roles(RolesPage),\n      ]}\n    />\n  );\n};\n","import { nodeStatus } from '@console/app/src/status/node';\nimport { volumeSnapshotStatus } from '@console/app/src/status/snapshot';\nimport { podPhaseFilterReducer } from '@console/internal/module/k8s';\nimport { StatusGroupMapper } from './InventoryItem';\nimport { InventoryStatusGroup } from './status-group';\n\nconst POD_PHASE_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Running', 'Succeeded'],\n  [InventoryStatusGroup.ERROR]: ['CrashLoopBackOff', 'Failed'],\n  [InventoryStatusGroup.PROGRESS]: ['Terminating', 'Pending'],\n  [InventoryStatusGroup.WARN]: ['Unknown'],\n};\n\nconst PVC_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Bound'],\n  [InventoryStatusGroup.ERROR]: ['Lost'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n};\n\nconst PV_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Available', 'Bound'],\n  [InventoryStatusGroup.PROGRESS]: ['Released'],\n  [InventoryStatusGroup.ERROR]: ['Failed'],\n};\n\nconst NODE_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Not Ready'],\n};\n\nconst VS_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n  [InventoryStatusGroup.ERROR]: ['Error'],\n};\n\nexport const getStatusGroups = (resources, mapping, mapper, filterType) => {\n  const groups = {\n    [InventoryStatusGroup.UNKNOWN]: {\n      statusIDs: [],\n      count: 0,\n    },\n  };\n  Object.keys(mapping).forEach((key) => {\n    groups[key] = {\n      statusIDs: [...mapping[key]],\n      count: 0,\n      filterType,\n    };\n  });\n\n  resources.forEach((resource) => {\n    const status = mapper(resource);\n    const group =\n      Object.keys(mapping).find((key) => mapping[key].includes(status)) ||\n      InventoryStatusGroup.UNKNOWN;\n    groups[group].count++;\n  });\n\n  return groups;\n};\n\nexport const getPodStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, POD_PHASE_GROUP_MAPPING, podPhaseFilterReducer, 'pod-status');\nexport const getNodeStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, NODE_STATUS_GROUP_MAPPING, nodeStatus, 'node-status');\nexport const getPVCStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PVC_STATUS_GROUP_MAPPING, (pvc) => pvc.status.phase, 'pvc-status');\nexport const getPVStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PV_STATUS_GROUP_MAPPING, (pv) => pv.status.phase, 'pv-status');\nexport const getVSStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, VS_STATUS_GROUP_MAPPING, volumeSnapshotStatus, 'snapshot-status');\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { DOC_URL_PODMAN } from './utils';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline, getImageStreamTagName } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={from.name}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">{t('public~pushed image')}</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~Unable to resolve')}\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>{t('public~Not synced yet')}</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>{t('public~Unresolved')}</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~There is no image associated with this tag')}\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const { t } = useTranslation();\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>{t('public~Image registry commands')}</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            {t(\n              'public~Create a new ImageStreamTag by pushing an image to this ImageStream with the desired tag.',\n            )}\n          </p>\n          <br />\n          <p>{t('public~Authenticate to the internal registry')}</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>{t('public~Push an image to this ImageStream')}</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>{t('public~Pull an image from this ImageStream')}</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            <Trans t={t} ns=\"public\">\n              Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong>{' '}\n              commands.{' '}\n            </Trans>\n            <ExternalLink href={DOC_URL_PODMAN} text={t('public~Learn more.')} />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        {t('public~Do you need to work with this ImageStream outside of the web console?')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const { t } = useTranslation();\n\n  const getImportErrors = (): string[] => {\n    return _.transform(imageStream.status.tags, (acc, tag: any) => {\n      const importErrorCondition = _.find(\n        tag.conditions,\n        (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n      );\n      importErrorCondition &&\n        acc.push(\n          t('public~Unable to sync image for tag {{tag}}. {{message}}', {\n            tag: `${imageStream.metadata.name}:${tag.tag}`,\n            message: importErrorCondition.message,\n          }),\n        );\n    });\n  };\n\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text={t('public~ImageStream details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={imageStream}>\n              {imageRepository && <dt>{t('public~Image repository')}</dt>}\n              {imageRepository && <dd>{imageRepository}</dd>}\n              {publicImageRepository && <dt>{t('public~Public image repository')}</dt>}\n              {publicImageRepository && <dd>{publicImageRepository}</dd>}\n              <dt>{t('public~Image count')}</dt>\n              <dd>{imageCount ? imageCount : 0}</dd>\n            </ResourceSummary>\n            <ExampleDockerCommandPopover imageStream={imageStream} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Tags')} />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">{t('public~No tags')}</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">{t('public~Name')}</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">{t('public~From')}</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">{t('public~Identifier')}</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">{t('public~Last updated')}</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  const ImageStreamsTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n  ImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ImageStreams')}\n      Header={ImageStreamsTableHeader}\n      Row={ImageStreamsTableRow}\n      virtualize\n    />\n  );\n};\n\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {...props}\n      title={t('public~ImageStreams')}\n      kind={ImageStreamsReference}\n      ListComponent={ImageStreamsList}\n      canCreate={true}\n    />\n  );\n};\n\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n","import * as React from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { FileUpload, isFileUpload, useResolvedExtensions } from '@console/dynamic-plugin-sdk';\nimport { useToast } from '@console/shared/src/components/toast';\nimport { useActiveNamespace } from '@console/shared/src/hooks/useActiveNamespace';\nimport { getRequiredFileUploadExtension } from './file-upload-utils';\n\nexport type FileUploadContextType = {\n  extensions: string[];\n  fileUpload: File;\n  setFileUpload: (file: File) => void;\n};\n\nexport const FileUploadContext = React.createContext<FileUploadContextType>({\n  fileUpload: undefined,\n  setFileUpload: () => {},\n  extensions: [],\n});\n\nexport const FileUploadContextProvider = FileUploadContext.Provider;\n\nexport const useValuesFileUploadContext = (): FileUploadContextType => {\n  const { t } = useTranslation();\n  const [fileUploadExtensions, resolved] = useResolvedExtensions<FileUpload>(isFileUpload);\n  const toastContext = useToast();\n  const [namespace] = useActiveNamespace();\n  const [file, setFile] = React.useState<File>(undefined);\n  const fileExtensions = React.useMemo(\n    () =>\n      resolved\n        ? _.flatten(fileUploadExtensions.map((e) => e.properties.fileExtensions)).map((ext) =>\n            ext.toLowerCase(),\n          )\n        : [],\n    [fileUploadExtensions, resolved],\n  );\n\n  const setFileUpload = React.useCallback(\n    (f: File): void => {\n      if (!f) {\n        setFile(undefined);\n      } else if (fileExtensions.length > 0) {\n        const requiredFileExtension = getRequiredFileUploadExtension(fileUploadExtensions, f.name);\n        if (requiredFileExtension) {\n          setFile(f);\n          requiredFileExtension.properties.handler(f, namespace);\n        } else {\n          toastContext.addToast({\n            variant: AlertVariant.warning,\n            title: t('console-app~Incompatible file type'),\n            content: t(\n              'console-app~{{fileName}} cannot be uploaded. Only {{fileExtensions}} files are supported currently. Try another file.',\n              {\n                fileName: f.name,\n                fileExtensions: fileExtensions.toString(),\n              },\n            ),\n            timeout: true,\n            dismissible: true,\n          });\n        }\n      }\n    },\n    [setFile, fileExtensions, t, namespace, toastContext, fileUploadExtensions],\n  );\n\n  return {\n    fileUpload: file,\n    setFileUpload,\n    extensions: fileExtensions,\n  };\n};\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { AsyncComponent } from './utils';\nimport { useTranslation } from 'react-i18next';\nimport { useQueryParams } from '@console/shared';\n\nexport const ImportYamlPage = () => {\n  const { t } = useTranslation();\n  const queryParams = useQueryParams();\n  const title = t('public~Import YAML');\n\n  const isCodeImportRedirect = queryParams.get('ols') === 'true';\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <AsyncComponent\n        loader={() => import('./droppable-edit-yaml').then((c) => c.DroppableEditYAML)}\n        allowMultiple\n        create={true}\n        download={false}\n        header={title}\n        isCodeImportRedirect={isCodeImportRedirect}\n      />\n    </>\n  );\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../module/k8s';\n\nexport const ProjectDashboardContext = React.createContext<ProjectDashboardContext>({});\n\n// eslint-disable-next-line no-redeclare\ntype ProjectDashboardContext = {\n  obj?: K8sResourceKind;\n  namespaceLinks?: K8sResourceKind[];\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\n\nimport { RESULTS_TYPE } from '../../reducers/dashboards';\nimport { NotificationAlerts } from '../../reducers/observe';\nimport {\n  StopWatchPrometheusAction,\n  stopWatchPrometheusQuery,\n  stopWatchURL,\n  StopWatchURLAction,\n  watchPrometheusQuery,\n  WatchPrometheusQueryAction,\n  watchURL,\n  WatchURLAction,\n  getQueryKey,\n} from '../../actions/dashboards';\nimport { RootState } from '../../redux';\nimport { Firehose, FirehoseResource, FirehoseResult } from '../utils';\nimport { K8sResourceKind, AppliedClusterResourceQuotaKind } from '../../module/k8s';\nimport { PrometheusResponse } from '../graphs';\nimport { Fetch, RequestMap } from '@console/dynamic-plugin-sdk/src/api/internal-types';\n\nconst mapDispatchToProps: DispatchToProps = (dispatch) => ({\n  watchURL: (url, fetch) => dispatch(watchURL(url, fetch)),\n  stopWatchURL: (url) => dispatch(stopWatchURL(url)),\n  watchPrometheusQuery: (query, namespace, timespan) =>\n    dispatch(watchPrometheusQuery(query, namespace, timespan)),\n  stopWatchPrometheusQuery: (query, timespan) =>\n    dispatch(stopWatchPrometheusQuery(query, timespan)),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  [RESULTS_TYPE.URL]: state.dashboards.get(RESULTS_TYPE.URL),\n  [RESULTS_TYPE.PROMETHEUS]: state.dashboards.get(RESULTS_TYPE.PROMETHEUS) as RequestMap<\n    PrometheusResponse\n  >,\n  notificationAlerts: state.observe.get('notificationAlerts'),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nexport const withDashboardResources = <P extends DashboardItemProps>(\n  WrappedComponent: React.ComponentType<P>,\n) =>\n  connect<StateProps, DispatchProps, Diff<P, DashboardItemProps>>(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(\n    class WithDashboardResources extends React.Component<\n      WithDashboardResourcesProps,\n      WithDashboardResourcesState\n    > {\n      private urls: Array<string> = [];\n      private queries: Array<string> = [];\n      private watchingAlerts: boolean = false;\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          k8sResources: [],\n        };\n      }\n\n      shouldComponentUpdate(\n        nextProps: WithDashboardResourcesProps,\n        nextState: WithDashboardResourcesState,\n      ) {\n        const urlResultChanged = this.urls.some(\n          (urlKey) =>\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'data']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'data']) ||\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']),\n        );\n        const queryResultChanged = this.queries.some(\n          (query) =>\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) ||\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']),\n        );\n        const alertsResultChanged =\n          this.props?.notificationAlerts?.data !== nextProps?.notificationAlerts?.data ||\n          this.props?.notificationAlerts?.loadError !== nextProps?.notificationAlerts?.loadError;\n        const k8sResourcesChanged = this.state.k8sResources !== nextState.k8sResources;\n\n        const nextExternalProps = this.getExternalProps(nextProps);\n        const externalProps = this.getExternalProps(this.props);\n\n        return (\n          urlResultChanged ||\n          queryResultChanged ||\n          k8sResourcesChanged ||\n          (this.watchingAlerts && alertsResultChanged) ||\n          Object.keys(nextExternalProps).length !== Object.keys(externalProps).length ||\n          Object.keys(nextExternalProps).some(\n            (key) => nextExternalProps[key] !== externalProps[key],\n          )\n        );\n      }\n\n      watchURL: WatchURL = (url, fetch) => {\n        this.urls.push(url);\n        this.props.watchURL(url, fetch);\n      };\n\n      watchPrometheus: WatchPrometheus = (query, namespace, timespan) => {\n        this.queries.push(getQueryKey(query, timespan));\n        this.props.watchPrometheusQuery(query, namespace, timespan);\n      };\n\n      stopWatchPrometheusQuery: StopWatchPrometheus = (query, timespan) => {\n        const queryKey = getQueryKey(query, timespan);\n        this.queries = this.queries.filter((q) => q !== queryKey);\n        this.props.stopWatchPrometheusQuery(query, timespan);\n      };\n\n      watchAlerts: WatchAlerts = () => {\n        this.watchingAlerts = true;\n      };\n\n      stopWatchAlerts: StopWatchAlerts = () => {\n        this.watchingAlerts = false;\n      };\n\n      watchK8sResource: WatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: [...state.k8sResources, { ...resource, optional: true }],\n        }));\n      };\n\n      stopWatchK8sResource: StopWatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: state.k8sResources.filter((r) => r.prop !== resource.prop),\n        }));\n      };\n\n      getExternalProps = (props) => {\n        return _.omit(\n          props,\n          'watchURL',\n          'stopWatchURL',\n          'watchPrometheusQuery',\n          'stopWatchPrometheusQuery',\n          'watchAlerts',\n          'stopWatchAlerts',\n          RESULTS_TYPE.URL,\n          RESULTS_TYPE.PROMETHEUS,\n          'notificationAlerts',\n        );\n      };\n\n      render() {\n        return (\n          <Firehose resources={this.state.k8sResources}>\n            <WrappedComponent\n              watchURL={this.watchURL}\n              stopWatchURL={this.props.stopWatchURL}\n              watchPrometheus={this.watchPrometheus}\n              stopWatchPrometheusQuery={this.stopWatchPrometheusQuery}\n              watchAlerts={this.watchAlerts}\n              stopWatchAlerts={this.stopWatchAlerts}\n              urlResults={this.props[RESULTS_TYPE.URL]}\n              prometheusResults={this.props[RESULTS_TYPE.PROMETHEUS]}\n              notificationAlerts={this.props.notificationAlerts}\n              watchK8sResource={this.watchK8sResource}\n              stopWatchK8sResource={this.stopWatchK8sResource}\n              {...this.getExternalProps(this.props)}\n            />\n          </Firehose>\n        );\n      }\n    },\n  );\n\ntype DispatchToProps = (\n  dispatch: any,\n) => {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheusQuery: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n};\n\ntype WatchURL = (url: string, fetch?: Fetch) => void;\ntype StopWatchURL = (url: string) => void;\ntype WatchPrometheus = (query: string, namespace?: string, timespan?: number) => void;\ntype StopWatchPrometheus = (query: string, timespan?: number) => void;\ntype WatchAlerts = () => void;\ntype StopWatchAlerts = () => void;\n\ntype WithDashboardResourcesState = {\n  k8sResources: FirehoseResource[];\n};\n\ntype WithDashboardResourcesProps = {\n  watchURL: WatchURLAction;\n  watchPrometheusQuery: WatchPrometheusQueryAction;\n  stopWatchURL: StopWatchURLAction;\n  stopWatchPrometheusQuery: StopWatchPrometheusAction;\n  [RESULTS_TYPE.PROMETHEUS]: RequestMap<PrometheusResponse>;\n  [RESULTS_TYPE.URL]: RequestMap<any>;\n  notificationAlerts: any;\n};\n\nexport type WatchK8sResource = (resource: FirehoseResource) => void;\nexport type StopWatchK8sResource = (resource: FirehoseResource) => void;\n\nexport type DashboardItemProps = {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheus: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n  watchAlerts: WatchAlerts;\n  stopWatchAlerts: StopWatchAlerts;\n  urlResults: RequestMap<any>;\n  prometheusResults: RequestMap<PrometheusResponse>;\n  notificationAlerts: NotificationAlerts;\n  watchK8sResource: WatchK8sResource;\n  stopWatchK8sResource: StopWatchK8sResource;\n  resources?: {\n    [key: string]:\n      | FirehoseResult\n      | FirehoseResult<K8sResourceKind>\n      | FirehoseResult<AppliedClusterResourceQuotaKind>;\n  };\n};\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as semver from 'semver';\nimport {\n  getImageStreamIcon,\n  getImageForIconClass,\n} from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  isBuilder,\n  getMostRecentBuilderTag,\n  getBuilderTagsSortedByVersion,\n} from '@console/internal/components/image-stream';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { ProjectModel, ImageStreamModel } from '@console/internal/models';\nimport { ContainerPort, K8sResourceKind, K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport interface ImageTag {\n  name: string;\n  annotations: {\n    [key: string]: string;\n  };\n  generation: number;\n  [key: string]: any;\n}\nexport interface BuilderImage {\n  obj: K8sResourceKind;\n  name: string;\n  displayName: string;\n  description: string;\n  title: string;\n  iconUrl: string;\n  tags: ImageTag[];\n  recentTag: ImageTag;\n  imageStreamNamespace: string;\n}\n\nexport interface NormalizedBuilderImages {\n  [builderImageName: string]: BuilderImage;\n}\n\nexport const imageStreamLabels = ['app.kubernetes.io/name', 'app.openshift.io/runtime'];\n\nexport const getSampleRepo = (tag) => tag?.annotations?.sampleRepo ?? '';\nexport const getSampleRef = (tag) => tag?.annotations?.sampleRef ?? '';\nexport const getSampleContextDir = (tag) => tag?.annotations?.sampleContextDir ?? '';\n\n// Transform image ports to k8s structure.\n// `{ '3306/tcp': {} }` -> `{ containerPort: 3306, protocol: 'TCP' }`\nconst portsFromSpec = (portSpec: object): ContainerPort[] => {\n  return _.reduce(\n    portSpec,\n    (result: ContainerPort[], value, key) => {\n      const parts = key.split('/');\n      if (parts.length === 1) {\n        parts.push('tcp');\n      }\n\n      const containerPort = parseInt(parts[0], 10);\n      if (_.isFinite(containerPort)) {\n        result.push({\n          containerPort,\n          protocol: parts[1].toUpperCase(),\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unrecognized image port format', key);\n      }\n\n      return result;\n    },\n    [],\n  );\n};\n\nexport const getPorts = (imageStreamImage): ContainerPort[] => {\n  const portSpec =\n    imageStreamImage?.image?.dockerImageMetadata?.Config?.ExposedPorts ||\n    imageStreamImage?.image?.dockerImageMetadata?.ContainerConfig?.ExposedPorts;\n  return portsFromSpec(portSpec);\n};\n\n// Use the same naming convention as the CLI.\nexport const makePortName = (port: ContainerPort): string =>\n  `${port.containerPort}-${port.protocol}`.toLowerCase();\n\nexport const prettifyName = (name: string) => {\n  return name.replace(/(-|^)([^-]?)/g, (first, prep, letter) => {\n    return (prep && ' ') + letter.toUpperCase();\n  });\n};\n\nexport const normalizeBuilderImages = (\n  imageStreams: K8sResourceCommon | K8sResourceCommon[],\n): NormalizedBuilderImages => {\n  const data = Array.isArray(imageStreams) ? imageStreams : [imageStreams];\n  const builderImageStreams = data.filter((imageStream) => isBuilder(imageStream));\n\n  return builderImageStreams.reduce((builderImages: NormalizedBuilderImages, imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    const recentTag = getMostRecentBuilderTag(imageStream);\n    const { name } = imageStream.metadata;\n    const displayName = imageStream?.metadata?.annotations?.['openshift.io/display-name'];\n    const description = recentTag?.annotations?.description;\n    const imageStreamNamespace = imageStream.metadata.namespace;\n    const title = displayName && displayName.length < 14 ? displayName : prettifyName(name);\n    const iconClass = getImageStreamIcon(recentTag);\n    const iconUrl = getImageForIconClass(iconClass);\n\n    builderImages[name] = {\n      obj: imageStream,\n      name,\n      displayName,\n      description,\n      title,\n      iconUrl,\n      tags,\n      recentTag,\n      imageStreamNamespace,\n    };\n    return builderImages;\n  }, {});\n};\n\nexport const getTagDataWithDisplayName = (\n  imageTags: ImageTag[],\n  selectedTag: string,\n  defaultName: string,\n): [ImageTag, string] => {\n  const imageTag = _.find(imageTags, { name: selectedTag });\n  const displayName = imageTag?.annotations?.['openshift.io/display-name'] ?? defaultName;\n\n  return [imageTag, displayName];\n};\n\nexport const getSuggestedName = (name: string): string | undefined => {\n  if (!name) {\n    return undefined;\n  }\n  const imageName: string = _.last(name.split('/'));\n  return _.first(imageName.split(/[^a-z0-9-]/));\n};\n\nexport enum RegistryType {\n  External = 'external',\n  Internal = 'internal',\n}\nexport enum BuilderImagesNamespace {\n  Openshift = 'openshift',\n}\nexport const imageRegistryType = (t: TFunction) => {\n  return {\n    External: {\n      value: RegistryType.External,\n      label: t('devconsole~Image name from external registry'),\n    },\n    Internal: {\n      value: RegistryType.Internal,\n      label: t('devconsole~Image stream tag from internal registry'),\n    },\n  };\n};\n\nexport const getSortedTags = (imageStream: K8sResourceKind) => {\n  return _.isArray(imageStream.status.tags) && imageStream.status.tags.length\n    ? imageStream.status.tags.sort(({ tag: a }, { tag: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n          return a.localeCompare(b);\n        }\n        if (!v1) {\n          return 1;\n        }\n        if (!v2) {\n          return -1;\n        }\n        return semver.rcompare(v1, v2);\n      })\n    : [];\n};\nexport const getImageStreamTags = (imageStream: K8sResourceKind) => {\n  const sortedTags = imageStream && !_.isEmpty(imageStream) ? getSortedTags(imageStream) : [];\n  return sortedTags.reduce((tags, { tag }) => {\n    tags[tag] = tag;\n    return tags;\n  }, {});\n};\n\nexport const getProjectResource = (): FirehoseResource[] => {\n  return [\n    {\n      isList: true,\n      kind: ProjectModel.kind,\n      prop: ProjectModel.id,\n    },\n  ];\n};\n\nexport const getImageStreamResource = (namespace: string): FirehoseResource[] => {\n  const resource = [];\n  if (namespace) {\n    resource.push({\n      isList: true,\n      kind: ImageStreamModel.kind,\n      prop: ImageStreamModel.id,\n      namespace,\n    });\n  }\n  return resource;\n};\n","import { convertToBaseValue, humanizePercentage } from '@console/internal/components/utils';\n\nconst genericCountResources = [\n  'configmaps',\n  'persistentvolumeclaims',\n  'pods',\n  'replicationcontrollers',\n  'resourcequotas',\n  'services',\n  'services.loadbalancers',\n  'services.nodeports',\n  'secrets',\n  'openshift.io/imagestreams',\n];\n\nexport const getUsedPercentage = (hard: string, used: string) => {\n  let usedNum = convertToBaseValue(used);\n  let hardNum = convertToBaseValue(hard);\n\n  if (!usedNum || !hardNum) {\n    // try to get the value without unit\n    usedNum = parseInt(usedNum, 10);\n    hardNum = parseInt(hardNum, 10);\n  }\n\n  return !usedNum || !hardNum ? 0 : (usedNum / hardNum) * 100;\n};\n\nexport const getLabelAndUsage = ({\n  resourceName,\n  used,\n  hard,\n}: {\n  resourceName: string;\n  used: string;\n  hard: string;\n}) => {\n  const useCount =\n    resourceName.startsWith('count/') || genericCountResources.includes(resourceName);\n\n  const percent = getUsedPercentage(hard, used);\n\n  return {\n    label: useCount ? `${used || 0} of ${hard}` : humanizePercentage(percent).string,\n    percent,\n  };\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Resources, HealthChecksFormData } from '../import/import-types';\nimport { healthChecksDefaultValues } from './health-checks-probe-utils';\nimport {\n  HealthCheckProbeData,\n  RequestType,\n  HealthChecksProbeType,\n  HealthCheckFormProbeData,\n} from './health-checks-types';\n\nexport const constructProbeData = (\n  data: HealthCheckFormProbeData,\n  resourceType?: Resources,\n): HealthCheckProbeData => {\n  const probeData = {\n    ...(data.failureThreshold && { failureThreshold: _.toInteger(data.failureThreshold) }),\n    ...(data.successThreshold && { successThreshold: _.toInteger(data.successThreshold) }),\n    ...(data.requestType === RequestType.ContainerCommand && {\n      exec: data.exec,\n    }),\n    ...(data.requestType === RequestType.HTTPGET && {\n      httpGet: {\n        ...data[data.requestType],\n        scheme: data[data.requestType]?.scheme ? data[data.requestType].scheme[0] : 'HTTP',\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.httpGet.port),\n      },\n    }),\n    ...(data.requestType === RequestType.TCPSocket && {\n      tcpSocket: {\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.tcpSocket.port),\n      },\n    }),\n    ...(data.initialDelaySeconds && {\n      initialDelaySeconds: _.toInteger(data.initialDelaySeconds),\n    }),\n    ...(data.periodSeconds && { periodSeconds: _.toInteger(data.periodSeconds) }),\n    ...(data.timeoutSeconds && { timeoutSeconds: _.toInteger(data.timeoutSeconds) }),\n  };\n  return probeData;\n};\n\nexport const getRequestType = (data: HealthCheckProbeData) => {\n  if (_.has(data, RequestType.HTTPGET)) return RequestType.HTTPGET;\n  if (_.has(data, RequestType.TCPSocket)) return RequestType.TCPSocket;\n  if (_.has(data, 'exec.command')) return RequestType.ContainerCommand;\n  return '';\n};\n\nexport const convertResourceDataToFormData = (\n  resourceData: HealthCheckProbeData,\n): HealthCheckFormProbeData => {\n  return {\n    ...resourceData,\n    requestType: getRequestType(resourceData),\n    failureThreshold: resourceData.failureThreshold?.toString() || '',\n    successThreshold: resourceData.successThreshold?.toString() || '',\n    initialDelaySeconds: resourceData.initialDelaySeconds?.toString() || '',\n    periodSeconds: resourceData.periodSeconds?.toString() || '',\n    timeoutSeconds: resourceData.timeoutSeconds?.toString() || '',\n    ...(resourceData.httpGet && {\n      httpGet: {\n        ...resourceData.httpGet,\n        port: resourceData.httpGet.port?.toString() || '',\n        scheme: resourceData.httpGet.scheme === 'HTTP' ? undefined : ['HTTPS'],\n      },\n    }),\n    ...(resourceData.tcpSocket && {\n      tcpSocket: { port: resourceData.tcpSocket.port?.toString() || '' },\n    }),\n  };\n};\n\nexport const getHealthChecksData = (\n  resource: K8sResourceKind,\n  containerIndex: number = 0,\n): HealthChecksFormData => {\n  const containers = resource?.spec?.template?.spec?.containers ?? [];\n  const readinessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.ReadinessProbe] ?? {};\n  const livenessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.LivenessProbe] ?? {};\n  const startupProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.StartupProbe] ?? {};\n\n  const healthChecks = {\n    readinessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(readinessProbe),\n      data: !_.isEmpty(readinessProbe)\n        ? {\n            ...convertResourceDataToFormData(readinessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    livenessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(livenessProbe),\n      data: !_.isEmpty(livenessProbe)\n        ? {\n            ...convertResourceDataToFormData(livenessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    startupProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(startupProbe),\n      data: !_.isEmpty(startupProbe)\n        ? {\n            ...convertResourceDataToFormData(startupProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n  };\n  return healthChecks;\n};\n\nexport const getProbesData = (healthChecks: HealthChecksFormData, resourceType?: Resources) => {\n  const { readinessProbe, livenessProbe, startupProbe } = healthChecks;\n  return {\n    ...(readinessProbe.enabled\n      ? { readinessProbe: constructProbeData(readinessProbe.data, resourceType) }\n      : {}),\n    ...(livenessProbe.enabled\n      ? { livenessProbe: constructProbeData(livenessProbe.data, resourceType) }\n      : {}),\n    ...(resourceType !== Resources.KnativeService && startupProbe?.enabled\n      ? { startupProbe: constructProbeData(startupProbe.data) }\n      : {}),\n  };\n};\n","import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n}\n\nexport interface HealthCheckFormProbeData {\n  failureThreshold: string;\n  initialDelaySeconds: string;\n  periodSeconds: string;\n  timeoutSeconds: string;\n  successThreshold: string;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string[];\n    path: string;\n    port: string;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: string;\n  };\n}\nexport interface HealthCheckFormProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckFormProbeData;\n}\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import { FirehoseResource } from '../../../utils';\n\nexport const uniqueResource = (\n  resource: FirehoseResource,\n  prefix: string | number,\n): FirehoseResource => ({\n  ...resource,\n  prop: `${prefix}-${resource.prop}`,\n});\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useActivePerspective, LIMIT_STATE, Humanize } from '@console/dynamic-plugin-sdk';\nimport { getPrometheusQueryResponse } from '@console/internal/actions/dashboards';\nimport {\n  withDashboardResources,\n  DashboardItemProps,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, referenceForModel, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getName, getNamespace, useFlag } from '../../..';\nimport { FLAGS } from '../../../constants';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status';\nimport Status from '../status-card/StatusPopup';\n\nimport './top-consumer-popover.scss';\n\nconst ConsumerPopover: React.FC<ConsumerPopoverProps> = React.memo(\n  ({\n    current,\n    title,\n    humanize,\n    consumers,\n    namespace,\n    position = PopoverPosition.top,\n    description,\n    children,\n  }) => {\n    const { t } = useTranslation();\n    const [isOpen, setOpen] = React.useState(false);\n    const onShow = React.useCallback(() => setOpen(true), []);\n    const onHide = React.useCallback(() => setOpen(false), []);\n    if (!current) {\n      return null;\n    }\n    return (\n      <Popover\n        position={position}\n        headerContent={t('console-shared~{{title}} breakdown', { title })}\n        bodyContent={\n          <PopoverBody\n            humanize={humanize}\n            consumers={consumers}\n            namespace={namespace}\n            isOpen={isOpen}\n            description={description}\n          >\n            {children}\n          </PopoverBody>\n        }\n        enableFlip\n        onShow={onShow}\n        onHide={onHide}\n        maxWidth=\"21rem\"\n      >\n        <Button variant=\"link\" isInline>\n          {current}\n        </Button>\n      </Popover>\n    );\n  },\n);\n\nexport default ConsumerPopover;\n\nconst getLimitIcon = (state: LIMIT_STATE): React.ReactNode => {\n  switch (state) {\n    case LIMIT_STATE.ERROR:\n      return <RedExclamationCircleIcon />;\n    case LIMIT_STATE.WARN:\n      return <YellowExclamationTriangleIcon />;\n    default:\n      return null;\n  }\n};\n\nconst getResourceToWatch = (model: K8sKind, namespace: string, fieldSelector: string) => ({\n  isList: true,\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  fieldSelector,\n  namespace,\n});\n\nexport const LimitsBody: React.FC<LimitsBodyProps> = ({\n  limitState,\n  requestedState,\n  total,\n  limit,\n  current,\n  available,\n  requested,\n}) => {\n  const { t } = useTranslation();\n  return (\n    ((!!limitState && limitState !== LIMIT_STATE.OK) ||\n      (!!requestedState && requestedState !== LIMIT_STATE.OK)) && (\n      <ul className=\"co-utilization-card-popover__consumer-list\">\n        <Status value={total}>{t('console-shared~Total capacity')}</Status>\n        <Status value={limit} icon={getLimitIcon(limitState)}>\n          {t('console-shared~Total limit')}\n        </Status>\n        <Status value={current}>{t('console-shared~Current utilization')}</Status>\n        <Status value={available}>{t('console-shared~Current available capacity')}</Status>\n        <Status value={requested} icon={getLimitIcon(requestedState)}>\n          {t('console-shared~Total requested')}\n        </Status>\n      </ul>\n    )\n  );\n};\n\nexport const PopoverBody = withDashboardResources<DashboardItemProps & PopoverBodyProps>(\n  React.memo(\n    ({\n      humanize,\n      consumers,\n      namespace,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      prometheusResults,\n      isOpen,\n      description,\n      children,\n    }) => {\n      const { t } = useTranslation();\n      const [currentConsumer, setCurrentConsumer] = React.useState(consumers[0]);\n      const activePerspective = useActivePerspective()[0];\n      const canAccessMonitoring =\n        useFlag(FLAGS.CAN_GET_NS) && !!window.SERVER_FLAGS.prometheusBaseURL;\n      const { query, model, metric, fieldSelector } = currentConsumer;\n      const k8sResource = React.useMemo(\n        () => (isOpen ? getResourceToWatch(model, namespace, fieldSelector) : null),\n        [fieldSelector, isOpen, model, namespace],\n      );\n      const [consumerData, consumerLoaded, consumersLoadError] = useK8sWatchResource<\n        K8sResourceCommon[]\n      >(k8sResource);\n      React.useEffect(() => {\n        if (!isOpen) {\n          return () => {};\n        }\n        watchPrometheus(query, namespace);\n        return () => {\n          stopWatchPrometheusQuery(query);\n        };\n      }, [query, stopWatchPrometheusQuery, watchPrometheus, namespace, isOpen]);\n\n      const top5Data = [];\n\n      const [data, error] = getPrometheusQueryResponse(prometheusResults, query);\n      const bodyData = getInstantVectorStats(data, metric);\n\n      if (k8sResource && consumerLoaded && !consumersLoadError) {\n        for (const d of bodyData) {\n          const consumerExists = consumerData.some(\n            (consumer) =>\n              getName(consumer) === d.metric[metric] &&\n              (model.namespaced ? getNamespace(consumer) === d.metric.namespace : true),\n          );\n          if (consumerExists) {\n            top5Data.push({ ...d, y: humanize(d.y).string });\n          }\n          if (top5Data.length === 5) {\n            break;\n          }\n        }\n      }\n\n      const monitoringParams = React.useMemo(() => {\n        const params = new URLSearchParams();\n        params.set('query0', currentConsumer.query);\n        return params;\n      }, [currentConsumer.query]);\n\n      const dropdownItems = React.useMemo(\n        () =>\n          consumers.reduce((items, curr) => {\n            items[referenceForModel(curr.model)] = t('console-shared~By {{label}}', {\n              label: curr.model.labelKey ? t(curr.model.labelKey) : curr.model.label,\n            });\n            return items;\n          }, {}),\n        [consumers, t],\n      );\n\n      const onDropdownChange = React.useCallback(\n        (key) => setCurrentConsumer(consumers.find((c) => referenceForModel(c.model) === key)),\n        [consumers],\n      );\n\n      const monitoringURL =\n        canAccessMonitoring && activePerspective === 'admin'\n          ? `/monitoring/query-browser?${monitoringParams.toString()}`\n          : `/dev-monitoring/ns/${namespace}/metrics?${monitoringParams.toString()}`;\n\n      let body: React.ReactNode;\n      if (error || consumersLoadError) {\n        body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n      } else if (!consumerLoaded || !data) {\n        body = (\n          <ul className=\"co-utilization-card-popover__consumer-list\">\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n          </ul>\n        );\n      } else {\n        body = (\n          <>\n            <ul\n              className=\"co-utilization-card-popover__consumer-list\"\n              aria-label={t('console-shared~Top consumer by {{label}}', { label: model.label })}\n            >\n              {top5Data &&\n                top5Data.map((item) => {\n                  const title = String(item.x);\n                  return (\n                    <ListItem key={title} value={item.y}>\n                      <Link\n                        className=\"co-utilization-card-popover__consumer-name\"\n                        to={resourcePathFromModel(model, title, item.metric.namespace)}\n                      >\n                        {title}\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n            </ul>\n            <Link to={monitoringURL}>{t('console-shared~View more')}</Link>\n          </>\n        );\n      }\n\n      return (\n        <div className=\"co-utilization-card-popover__body\">\n          {description && (\n            <div className=\"co-utilization-card-popover__description\">{description}</div>\n          )}\n          {children}\n          <div className=\"co-utilization-card-popover__title\">\n            {consumers.length === 1\n              ? t('console-shared~Top {{label}} consumers', {\n                  label: currentConsumer.model.label.toLowerCase(),\n                })\n              : t('console-shared~Top consumers')}\n          </div>\n          {consumers.length > 1 && (\n            <Dropdown\n              className=\"co-utilization-card-popover__dropdown\"\n              id=\"consumer-select\"\n              name=\"selectConsumerType\"\n              aria-label={t('console-shared~Select consumer type')}\n              items={dropdownItems}\n              onChange={onDropdownChange}\n              selectedKey={referenceForModel(model)}\n            />\n          )}\n          {body}\n        </div>\n      );\n    },\n  ),\n);\n\nconst ListItem: React.FC<ListItemProps> = ({ children, value }) => (\n  <li className=\"co-utilization-card-popover__consumer-item\">\n    {children}\n    <div className=\"co-utilization-card-popover__consumer-value\">{value}</div>\n  </li>\n);\n\ntype ListItemProps = {\n  value: React.ReactText;\n};\n\ntype LimitsBodyProps = {\n  limitState?: LIMIT_STATE;\n  requestedState?: LIMIT_STATE;\n  limit?: string;\n  requested?: string;\n  available?: string;\n  total?: string;\n  current: string;\n};\n\ntype PopoverProps = {\n  humanize: Humanize;\n  consumers: { model: K8sKind; query: string; metric: string; fieldSelector?: string }[];\n  namespace?: string;\n  description?: string;\n};\n\ntype PopoverBodyProps = PopoverProps & {\n  topConsumers?: DataPoint[][];\n  error?: boolean;\n  isOpen: boolean;\n};\n\nexport type ConsumerPopoverProps = PopoverProps & {\n  position?: PopoverPosition;\n  title: string;\n  current: string;\n};\n","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\nimport { useTranslation } from 'react-i18next';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport {\n  DashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem,\n  SubsystemHealth,\n  OperatorRowProps,\n  LazyLoader,\n} from '@console/plugin-sdk';\nimport {\n  ResolvedExtension,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem as DynamicDashboardsOverviewHealthResourceSubsystem,\n  WatchK8sResources,\n  WatchK8sResults,\n  ResourcesObject,\n} from '@console/dynamic-plugin-sdk';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { OperatorsSection } from '@console/shared/src/components/dashboard/status-card/OperatorStatusBody';\nimport {\n  getOperatorsHealthState,\n  getMostImportantStatuses,\n} from '@console/shared/src/components/dashboard/status-card/state-utils';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { K8sKind } from '../../../../module/k8s';\nimport { FirehoseResourcesResult, AsyncComponent, resourcePath } from '../../../utils';\nimport { useK8sWatchResources } from '../../../utils/k8s-watch-hook';\nimport { withDashboardResources, DashboardItemProps } from '../../with-dashboard-resources';\nimport { uniqueResource } from './utils';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { ClusterDashboardContext } from './context';\n\nconst OperatorRow: React.FC<\n  OperatorRowProps & {\n    LoadingComponent: () => JSX.Element;\n    Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n    key: string;\n    isResolved: boolean;\n  }\n> = ({ operatorStatus, isResolved, key, Component, LoadingComponent }) => {\n  const ResolvedComponent = Component as React.ComponentType<OperatorRowProps>;\n  return isResolved ? (\n    <ResolvedComponent key={key} operatorStatus={operatorStatus} />\n  ) : (\n    <AsyncComponent\n      key={operatorStatus.operators[0].metadata.uid}\n      operatorStatus={operatorStatus}\n      loader={Component}\n      LoadingComponent={LoadingComponent}\n    />\n  );\n};\n\nexport const OperatorsPopup: React.FC<OperatorsPopupProps> = ({\n  resources,\n  operatorExtensions,\n  dynamicOperatorSubsystems,\n}) => {\n  const { t } = useTranslation();\n  const sections = [\n    ...operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved={false}\n          />\n        </StackItem>\n      );\n    }),\n    ...dynamicOperatorSubsystems.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved\n          />\n        </StackItem>\n      );\n    }),\n  ].reverse();\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        {t(\n          'public~Operators create, configure, and manage applications by extending the Kubernetes API.',\n        )}\n      </StackItem>\n      {sections}\n    </Stack>\n  );\n};\n\nexport const OperatorHealthItem = withDashboardResources<OperatorHealthItemProps>(\n  ({\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    operatorExtensions,\n    dynamicOperatorSubsystems,\n  }) => {\n    const { t } = useTranslation();\n    React.useEffect(() => {\n      operatorExtensions.forEach((o, index) =>\n        o.resources.forEach((r) => watchK8sResource(uniqueResource(r, index))),\n      );\n      return () => {\n        operatorExtensions.forEach((o, index) =>\n          o.resources.forEach((r) => stopWatchK8sResource(uniqueResource(r, index))),\n        );\n      };\n    }, [watchK8sResource, stopWatchK8sResource, operatorExtensions]);\n\n    const healthStatuses = operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop] || {};\n        return acc;\n      }, {});\n      if (\n        Object.keys(operatorResources).some((resource) => operatorResources[resource].loadError)\n      ) {\n        return { health: HealthState.NOT_AVAILABLE };\n      }\n      if (Object.keys(operatorResources).some((resource) => !operatorResources[resource].loaded)) {\n        return { health: HealthState.LOADING };\n      }\n      const operatorStatuses = o.getOperatorsWithStatuses(operatorResources);\n      if (!operatorStatuses.length) {\n        return { health: HealthState.OK };\n      }\n      const importantStatuses = getMostImportantStatuses(operatorStatuses);\n      return {\n        health: importantStatuses[0].status.health,\n        count: importantStatuses.length,\n      };\n    });\n\n    const operatorsHealth = getOperatorsHealthState(healthStatuses, t);\n\n    return (\n      <HealthItem\n        title={t('public~Operators')}\n        state={operatorsHealth.health}\n        details={operatorsHealth.detailMessage}\n        popupTitle={t('public~Operator status')}\n      >\n        <OperatorsPopup\n          resources={resources}\n          operatorExtensions={operatorExtensions}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      </HealthItem>\n    );\n  },\n);\n\nexport const URLHealthItem = withDashboardResources<URLHealthItemProps>(\n  ({\n    watchURL,\n    stopWatchURL,\n    urlResults,\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    subsystem,\n    models,\n  }) => {\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      watchURL(\n        subsystem.url,\n        (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          ? (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          : undefined,\n      );\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        stopWatchURL(subsystem.url);\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [watchURL, stopWatchURL, watchK8sResource, stopWatchK8sResource, subsystem, modelExists]);\n\n    const healthResult = urlResults.getIn([subsystem.url, 'data']);\n    const healthResultError = urlResults.getIn([subsystem.url, 'loadError']);\n\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(healthResult, healthResultError, k8sResult);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  healthResult={healthResult}\n                  healthResultError={healthResultError}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const PrometheusHealthItem = withDashboardResources<PrometheusHealthItemProps>(\n  ({\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    subsystem,\n    models,\n  }) => {\n    const { t } = useTranslation();\n    const { infrastructure } = React.useContext(ClusterDashboardContext);\n\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      subsystem.queries.forEach((q) => watchPrometheus(q));\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        subsystem.queries.forEach((q) => stopWatchPrometheusQuery(q));\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [\n      watchK8sResource,\n      stopWatchK8sResource,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      subsystem,\n      modelExists,\n    ]);\n\n    const queryResults = React.useMemo(\n      () =>\n        subsystem.queries.map((q) => {\n          const [response, error] = getPrometheusQueryResponse(prometheusResults, q);\n          return {\n            response,\n            error,\n          };\n        }),\n      [prometheusResults, subsystem.queries],\n    );\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(queryResults, t, k8sResult, infrastructure);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupClassname={subsystem.popupClassname}\n        popupKeepOnOutsideClick={subsystem.popupKeepOnOutsideClick}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  responses={queryResults}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const ResourceHealthItem: React.FC<ResourceHealthItemProps> = ({ subsystem, namespace }) => {\n  const { t } = useTranslation();\n\n  const { title, resources, healthHandler, popupComponent, popupTitle } = subsystem;\n\n  const resourcesWithNamespace: WatchK8sResources<ResourcesObject> = React.useMemo(() => {\n    return {\n      ...resources,\n      ...(resources.imageManifestVuln && {\n        imageManifestVuln: { ...resources.imageManifestVuln, namespace },\n      }),\n    };\n  }, [resources, namespace]);\n\n  const resourcesResult: WatchK8sResults<ResourcesObject> = useK8sWatchResources(\n    resourcesWithNamespace,\n  );\n  const healthState: SubsystemHealth = healthHandler(resourcesResult, t);\n\n  return (\n    <HealthItem\n      title={title}\n      state={healthState.state}\n      details={healthState.message}\n      popupTitle={popupTitle}\n    >\n      {popupComponent && resourcesResult && (\n        <AsyncComponent loader={popupComponent} {...resourcesResult} namespace={namespace} />\n      )}\n    </HealthItem>\n  );\n};\n\ntype OperatorHealthItemProps = DashboardItemProps & {\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n\ntype URLHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthURLSubsystem<any>['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem<any>>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype PrometheusHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthPrometheusSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype ResourceHealthItemProps = {\n  subsystem:\n    | DashboardsOverviewHealthResourceSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthResourceSubsystem>['properties'];\n  namespace?: string;\n};\n\ntype OperatorsPopupProps = {\n  resources: FirehoseResourcesResult;\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum ProjectQueries {\n  CPU_USAGE = 'CPU_USAGE',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  MEMORY_USAGE = 'MEMORY_USAGE',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  POD_COUNT = 'POD_COUNT',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_FILESYSTEM = 'PODS_BY_FILESYSTEM',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  FILESYSTEM_USAGE = 'FILESYSTEM_USAGE',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n}\n\nconst queries = {\n  [ProjectQueries.CPU_USAGE]: _.template(\n    `namespace:container_cpu_usage:sum{namespace='<%= project %>'}`,\n  ),\n  [ProjectQueries.CPU_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"cpu\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_USAGE]: _.template(\n    `sum(container_memory_working_set_bytes{namespace='<%= project %>',container=\"\",pod!=\"\"}) BY (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"memory\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.POD_COUNT]: _.template(\n    `count(kube_running_pod_ready{namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.FILESYSTEM_USAGE]: _.template(\n    `sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_IN_UTILIZATION]: _.template(\n    `sum(rate(container_network_receive_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_OUT_UTILIZATION]: _.template(\n    `sum(rate(container_network_transmit_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n};\n\nconst top25Queries = {\n  [ProjectQueries.PODS_BY_CPU]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_MEMORY]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: _.template(\n    `topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n};\n\nexport const getMultilineQueries = (\n  project: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [ProjectQueries.NETWORK_UTILIZATION]: [\n    {\n      query: queries[ProjectQueries.NETWORK_IN_UTILIZATION]({ project }),\n      desc: 'in',\n    },\n    {\n      query: queries[ProjectQueries.NETWORK_OUT_UTILIZATION]({ project }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getUtilizationQueries = (project: string) => ({\n  [ProjectQueries.CPU_USAGE]: queries[ProjectQueries.CPU_USAGE]({ project }),\n  [ProjectQueries.CPU_REQUESTS]: queries[ProjectQueries.CPU_REQUESTS]({ project }),\n  [ProjectQueries.MEMORY_USAGE]: queries[ProjectQueries.MEMORY_USAGE]({ project }),\n  [ProjectQueries.MEMORY_REQUESTS]: queries[ProjectQueries.MEMORY_REQUESTS]({ project }),\n  [ProjectQueries.POD_COUNT]: queries[ProjectQueries.POD_COUNT]({ project }),\n  [ProjectQueries.FILESYSTEM_USAGE]: queries[ProjectQueries.FILESYSTEM_USAGE]({\n    project,\n  }),\n});\n\nexport const getTopConsumerQueries = (project: string) => ({\n  [ProjectQueries.PODS_BY_CPU]: top25Queries[ProjectQueries.PODS_BY_CPU]({ project }),\n  [ProjectQueries.PODS_BY_MEMORY]: top25Queries[ProjectQueries.PODS_BY_MEMORY]({ project }),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: top25Queries[ProjectQueries.PODS_BY_FILESYSTEM]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: top25Queries[ProjectQueries.PODS_BY_NETWORK_IN]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: top25Queries[ProjectQueries.PODS_BY_NETWORK_OUT]({\n    project,\n  }),\n});\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum OverviewQuery {\n  MEMORY_TOTAL = 'MEMORY_TOTAL',\n  MEMORY_UTILIZATION = 'MEMORY_UTILIZATION',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  CPU_UTILIZATION = 'CPU_UTILIZATION',\n  CPU_TOTAL = 'CPU_TOTAL',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  STORAGE_UTILIZATION = 'STORAGE_UTILIZATION',\n  STORAGE_TOTAL = 'STORAGE_TOTAL',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_STORAGE = 'PODS_BY_STORAGE',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  NODES_BY_CPU = 'NODES_BY_CPU',\n  NODES_BY_MEMORY = 'NODES_BY_MEMORY',\n  NODES_BY_STORAGE = 'NODES_BY_STORAGE',\n  NODES_BY_NETWORK_IN = 'NODES_BY_NETWORK_IN',\n  NODES_BY_NETWORK_OUT = 'NODES_BY_NETWORK_OUT',\n  NODES_BY_PODS = 'NODES_BY_PODS',\n  PROJECTS_BY_CPU = 'PROJECTS_BY_CPU',\n  PROJECTS_BY_MEMORY = 'PROJECTS_BY_MEMORY',\n  PROJECTS_BY_STORAGE = 'PROJECTS_BY_STORAGE',\n  PROJECTS_BY_NETWORK_IN = 'PROJECTS_BY_NETWORK_IN',\n  PROJECTS_BY_NETWORK_OUT = 'PROJECTS_BY_NETWORK_OUT',\n  PROJECTS_BY_PODS = 'PROJECTS_BY_PODS',\n  POD_UTILIZATION = 'POD_UTILIZATION',\n}\n\nconst top25Queries = {\n  [OverviewQuery.PODS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        avg_over_time(instance:node_cpu:rate:sum[5m])\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum by (instance) (max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"}))\n          -\n          sum by (instance) (max by (device, instance) (node_filesystem_avail_bytes{device=~\"/.*\"}))\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(avg_over_time(kubelet_running_pods[5m])) BY (node)\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_receive_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_transmit_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n\n  [OverviewQuery.PROJECTS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        count by (namespace) (\n            topk without(uid) (1, kube_running_pod_ready)\n            *\n            ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n          *\n          on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})))\n        ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n};\n\nconst overviewQueries = {\n  [OverviewQuery.MEMORY_TOTAL]: _.template(\n    `\n      sum(\n        node_memory_MemTotal_bytes\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_UTILIZATION]: _.template(\n    `\n      sum(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"memory\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          instance:node_network_transmit_bytes_excluding_lo:rate1m\n          +\n          instance:node_network_receive_bytes_excluding_lo:rate1m\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_UTILIZATION]: _.template(\n    `\n      sum(\n        1 - sum without (mode) (rate(node_cpu_seconds_total{mode=~\"idle|iowait|steal\"}[2m]))\n        *\n        on(instance) group_left() (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\",\"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_TOTAL]: _.template(\n    `\n      sum(\n        kube_node_status_capacity{resource=\"cpu\",unit=\"core\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"cpu\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n          -\n          max by (device, instance) (node_filesystem_free_bytes{device=~\"/.*\"})\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_TOTAL]: _.template(\n    `\n      sum(\n        max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.POD_UTILIZATION]: _.template(\n    `\n      count(\n        (\n          topk without(uid) (1, kube_running_pod_ready)\n          *\n          ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n        )\n        *\n        on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_IN_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_receive_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_OUT_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_transmit_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n};\n\nexport const getMultilineQueries = (\n  nodeType: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [OverviewQuery.NETWORK_UTILIZATION]: [\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_IN_UTILIZATION]({ nodeType }),\n      desc: 'in',\n    },\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_OUT_UTILIZATION]({ nodeType }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getTop25ConsumerQueries = (nodeType: string) => ({\n  [OverviewQuery.PODS_BY_CPU]: top25Queries[OverviewQuery.PODS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PODS_BY_MEMORY]: top25Queries[OverviewQuery.PODS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PODS_BY_STORAGE]: top25Queries[OverviewQuery.PODS_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PODS_BY_NETWORK_IN]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PODS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_CPU]: top25Queries[OverviewQuery.NODES_BY_CPU]({ nodeType }),\n  [OverviewQuery.NODES_BY_MEMORY]: top25Queries[OverviewQuery.NODES_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.NODES_BY_STORAGE]: top25Queries[OverviewQuery.NODES_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.NODES_BY_PODS]: top25Queries[OverviewQuery.NODES_BY_PODS]({ nodeType }),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: top25Queries[OverviewQuery.NODES_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: top25Queries[OverviewQuery.NODES_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_CPU]: top25Queries[OverviewQuery.PROJECTS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: top25Queries[OverviewQuery.PROJECTS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: top25Queries[OverviewQuery.PROJECTS_BY_STORAGE]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_PODS]: top25Queries[OverviewQuery.PROJECTS_BY_PODS]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n});\n\nexport const getUtilizationQueries = (nodeType: string) => ({\n  [OverviewQuery.CPU_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.CPU_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.CPU_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.CPU_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.MEMORY_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.MEMORY_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.MEMORY_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.MEMORY_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.STORAGE_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.STORAGE_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.STORAGE_TOTAL]({ nodeType }),\n  },\n  [OverviewQuery.POD_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.POD_UTILIZATION]({ nodeType }),\n  },\n});\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GaugeChart } from '@console/internal/components/graphs/gauge';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ResourceQuotaChartsProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n\nconst ResourceQuotaCharts = ({ resourceQuota }: ResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(resourceQuota.status?.hard ?? {}).map((resourceName) => {\n    const hard = resourceQuota.status.hard[resourceName];\n    const used = resourceQuota.status.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({ resourceName, used, hard });\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <GaugeChart\n          data={{\n            x: `${percent}%`,\n            y: percent,\n          }}\n          thresholds={[{ value: 90 }, { value: 101 }]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ResourceQuotaCharts;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getUsedPercentage, getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype AppliedClusterResourceQuotaChartsProps = {\n  appliedClusterResourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n\nconst AppliedClusterResourceQuotaCharts = ({\n  appliedClusterResourceQuota,\n  namespace,\n}: AppliedClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const nsQuotas = appliedClusterResourceQuota.status?.namespaces?.find(\n    (ns) => ns.namespace === namespace,\n  );\n\n  const charts = Object.keys(nsQuotas?.status?.hard ?? {}).map((resourceName) => {\n    const clusterHard = appliedClusterResourceQuota.status.total?.hard?.[resourceName];\n    const clusterUsed = appliedClusterResourceQuota.status.total?.used?.[resourceName];\n    const nsUsed = nsQuotas.status.used?.[resourceName];\n    const clusterUsage = getUsedPercentage(clusterHard, clusterUsed);\n    const unused = 100 - clusterUsage;\n\n    const { label, percent: nsUsage } = getLabelAndUsage({\n      resourceName,\n      used: nsUsed,\n      hard: clusterHard,\n    });\n\n    const percentOtherNamespaces = clusterUsage - nsUsage;\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Namespace',\n              y: nsUsage,\n            },\n            {\n              x: 'Other namespaces',\n              y: percentOtherNamespaces,\n            },\n            {\n              x: 'Unused',\n              y: unused,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default AppliedClusterResourceQuotaCharts;\n","/* eslint-disable camelcase */\nimport * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport {\n  chart_color_black_100,\n  chart_color_green_300,\n  chart_color_green_500,\n  chart_color_gold_400,\n  chart_color_gold_500,\n} from '@patternfly/react-tokens';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { useRefWidth } from '../utils';\nimport { DataPoint } from '.';\n\nexport const DonutChart: React.FC<DonutChartProps> = ({\n  data,\n  query = '',\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  ariaDescription,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || t('No data');\n\n  const labels = ({ datum: { x, y } }) => t('public~{{x}}: {{y}}%', { x, y });\n\n  const namespaceData = data.filter((datum) => datum.x === 'Namespace');\n\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonut\n          ariaTitle={ariaChartTitle || title}\n          ariaDesc={ariaDescription}\n          data={data}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          labels={labels}\n          width={width}\n          subTitle={secondaryTitleText}\n          colorScale={\n            namespaceData[0]?.y === 100\n              ? [\n                  chart_color_gold_400.value,\n                  chart_color_gold_500.value,\n                  chart_color_black_100.value,\n                ]\n              : [\n                  chart_color_green_300.value,\n                  chart_color_green_500.value,\n                  chart_color_black_100.value,\n                ]\n          }\n          title={labelText}\n        />\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\ntype DonutChartProps = {\n  data: DataPoint[];\n  label: string;\n  query?: string;\n  secondaryTitle?: string;\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  ariaDescription?: string;\n  usedLabel?: string;\n  className?: string;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\nimport { YellowExclamationTriangleIcon } from '../../status';\n\nimport './quota-summary.scss';\n\ntype QuotaSummaryProps = {\n  hard: { [key: string]: string };\n  used: { [key: string]: string };\n};\n\nconst QuotaSummary = ({ hard, used }: QuotaSummaryProps): JSX.Element => {\n  const { t } = useTranslation();\n  const resourcesAtQuota = Object.keys(hard || {}).reduce(\n    (acc, resource) => (getUsedPercentage(hard[resource], used?.[resource]) >= 100 ? acc + 1 : acc),\n    0,\n  );\n\n  return (\n    <div className=\"co-resource-quota__summary\">\n      {t('console-shared~{{count}} resource', { count: Object.keys(hard || {}).length })}\n      {', '}\n      {resourcesAtQuota > 0 ? (\n        <>\n          <YellowExclamationTriangleIcon />{' '}\n          {t('console-shared~{{count}} resource reached quota', { count: resourcesAtQuota })}\n        </>\n      ) : (\n        t('console-shared~none are at quota')\n      )}\n    </div>\n  );\n};\n\nexport default QuotaSummary;\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { SquareIcon } from '@patternfly/react-icons/dist/esm/icons/square-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sResourceKindReference } from '../module/k8s';\nimport { ResourceLink } from './utils/resource-link';\nimport { Timestamp } from './utils/timestamp';\nimport { EmptyBox } from './utils/status-box';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nconst ImageStreamTimelineItem: React.FC<ImageStreamTimelineItemProps> = ({\n  tag,\n  imageStreamName,\n  imageStreamNamespace,\n  linkToTag,\n}) => {\n  const referenceAndSHA = _.split(tag.dockerImageReference, '@');\n  return (\n    <>\n      <li>\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__circle-icon\">\n            <CircleIcon />\n          </span>\n          <div className=\"co-images-stream-tag-timeline__timestamp\">\n            <Timestamp timestamp={tag.created} simple={true} />\n          </div>\n        </div>\n\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__line\" />\n          <div className=\"co-images-stream-tag-timeline__info\">\n            <ResourceLink\n              kind={ImageStreamTagsReference}\n              name={getImageStreamTagName(imageStreamName, tag.tag)}\n              namespace={imageStreamNamespace}\n              title={tag.tag}\n              linkTo={linkToTag}\n            />\n            <div className=\"co-break-all\">from {referenceAndSHA[0]}</div>\n            <div className=\"co-break-all\">{referenceAndSHA[1]}</div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n\n// check is the compared tag version, is the latest version in a sorted array of all tag versions\nconst isTagVersionLatest = (\n  comparedTag: string,\n  comparedTagPosition: number,\n  orderedTagArray: TagMeta[],\n) => {\n  return (\n    comparedTagPosition ===\n    _.findIndex(orderedTagArray, (orderedTag: TagMeta) => orderedTag.tag === comparedTag)\n  );\n};\n\nexport const ImageStreamTimeline: React.FC<ImageStreamTimelineProps> = ({\n  imageStreamTags,\n  imageStreamName,\n  imageStreamNamespace,\n}) => {\n  const { t } = useTranslation();\n  if (!_.some(imageStreamTags, 'items')) {\n    return <EmptyBox label={t('public~Images')} />;\n  }\n  const tagsArray: TagMeta[] = _.flatten(\n    _.map(imageStreamTags, ({ tag, items }) => {\n      return _.map(items, ({ created, dockerImageReference }) => ({\n        tag,\n        created,\n        dockerImageReference,\n      }));\n    }),\n  );\n  const orderedTagArray = _.orderBy(tagsArray, ['created'], ['desc']);\n  const timeline = _.map(orderedTagArray, (tag: TagMeta, i: number) => {\n    return (\n      <ImageStreamTimelineItem\n        key={tag.dockerImageReference}\n        tag={tag}\n        imageStreamName={imageStreamName}\n        imageStreamNamespace={imageStreamNamespace}\n        linkToTag={isTagVersionLatest(tag.tag, i, orderedTagArray)}\n      />\n    );\n  });\n\n  return (\n    <>\n      <ul className=\"co-images-stream-tag-timeline\">\n        {timeline}\n        <div>\n          <span className=\"co-images-stream-tag-timeline__square-icon\">\n            <SquareIcon />\n          </span>\n        </div>\n      </ul>\n    </>\n  );\n};\n\ntype ImageStreamTimelineItemProps = {\n  tag: TagMeta;\n  imageStreamName: string;\n  imageStreamNamespace: string;\n  linkToTag: boolean;\n};\n\ntype TagMeta = {\n  created: string;\n  tag: string;\n  dockerImageReference: string;\n};\n\ntype ImageStreamTimelineProps = {\n  imageStreamTags: any[];\n  imageStreamName: string;\n  imageStreamNamespace: string;\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../../module/k8s';\n\nexport const ClusterDashboardContext = React.createContext<ClusterDashboardContext>({\n  infrastructureLoaded: true,\n  infrastructureError: null,\n});\n\n// eslint-disable-next-line no-redeclare\ntype ClusterDashboardContext = {\n  infrastructure?: K8sResourceKind;\n  infrastructureLoaded: boolean;\n  infrastructureError: any;\n};\n","import { IBuild as IBuildV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/Build';\nimport { IBuildRun as IBuildRunV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/ClusterBuildStrategy';\nimport { IBuild as IBuildV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/Build';\nimport { IBuildRun as IBuildRunV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/ClusterBuildStrategy';\nimport { K8sResourceCondition } from '@console/internal/module/k8s';\n\n// Add missing latestBuild to Build\nexport type Build =\n  | (IBuildV1Alpha1 & { latestBuild?: BuildRun })\n  | (IBuildV1Beta1 & { latestBuild?: BuildRun });\n\nexport type BuildSpec = IBuildV1Alpha1['spec'] & IBuildV1Beta1['spec'];\n\nexport type BuildStatus = IBuildV1Alpha1['status'] & IBuildV1Beta1['status'];\n\nexport type ClusterBuildStrategyKind = IClusterBuildStrategyV1Alpha1 | IClusterBuildStrategyV1Beta1;\n\nexport type BuildStrategyKind = IBuildStrategyV1Alpha1 | IBuildStrategyV1Beta1;\n\n// Make status.conditions compatible with @console/internal/components/conditions props\nexport type BuildRun =\n  | (IBuildRunV1Alpha1 & {\n      status?: { conditions?: K8sResourceCondition[]; latestTaskRunRef?: string };\n    })\n  | (IBuildRunV1Beta1 & {\n      status?: { conditions?: K8sResourceCondition[]; taskRunName?: string };\n    });\n\n// The enum values need to match the dynamic-plugin `Status` `status` prop.\n// A translation (title) is added in the BuildRunStatus component.\nexport enum ComputedBuildRunStatus {\n  PENDING = 'Pending',\n  RUNNING = 'Running',\n  SUCCEEDED = 'Succeeded',\n  FAILED = 'Failed',\n  UNKNOWN = 'Unknown',\n}\n\n/** WARNING: The enum values corresponds to the `metadata.name` of the ClusterBuildStrategy CRs */\nexport enum ClusterBuildStrategy {\n  BUILDAH = 'buildah',\n  S2I = 'source-to-image',\n  UNKNOWN = 'unknown',\n}\n\nexport const ReadableClusterBuildStrategies: Record<ClusterBuildStrategy, string> = {\n  // t('shipwright-plugin~Buildah')\n  [ClusterBuildStrategy.BUILDAH]: `shipwright-plugin~Buildah`,\n  // t('shipwright-plugin~Source-to-Image')\n  [ClusterBuildStrategy.S2I]: `shipwright-plugin~Source-to-Image`,\n  [ClusterBuildStrategy.UNKNOWN]: `shipwright-plugin~Unknown`,\n};\n","import { TFunction } from 'i18next';\nimport { HealthChecksProbeType, RequestType, HealthCheckFormProbe } from './health-checks-types';\n\nexport const getHealthChecksProbeConfig = (probe: string, t: TFunction) => {\n  switch (probe) {\n    case HealthChecksProbeType.ReadinessProbe: {\n      return {\n        formTitle: t('devconsole~Readiness probe'),\n        formSubtitle: t(\n          \"devconsole~A readiness probe checks if the Container is ready to handle requests. A failed readiness probe means that a Container should not receive any traffic from a proxy, even if it's running.\",\n        ),\n      };\n    }\n    case HealthChecksProbeType.LivenessProbe: {\n      return {\n        formTitle: t('devconsole~Liveness probe'),\n        formSubtitle: t(\n          'devconsole~A liveness probe checks if the Container is still running. If the liveness probe fails the Container is killed.',\n        ),\n      };\n    }\n    case HealthChecksProbeType.StartupProbe: {\n      return {\n        formTitle: t('devconsole~Startup probe'),\n        formSubtitle: t(\n          'devconsole~A startup probe checks if the application within the Container is started. If the startup probe fails the Container is killed.',\n        ),\n      };\n    }\n    default:\n      return undefined;\n  }\n};\n\nexport const healthChecksDefaultValues: HealthCheckFormProbe = {\n  showForm: false,\n  enabled: false,\n  modified: false,\n  data: {\n    failureThreshold: '3',\n    requestType: RequestType.HTTPGET,\n    httpGet: {\n      scheme: undefined,\n      path: '/',\n      port: '8080',\n      httpHeaders: [],\n    },\n    tcpSocket: {\n      port: '8080',\n    },\n    exec: { command: [''] },\n    initialDelaySeconds: '0',\n    periodSeconds: '10',\n    timeoutSeconds: '1',\n    successThreshold: '1',\n  },\n};\n\nexport const healthChecksProbeInitialData = {\n  readinessProbe: healthChecksDefaultValues,\n  livenessProbe: healthChecksDefaultValues,\n  startupProbe: healthChecksDefaultValues,\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { FirehoseResourcesResult } from '@console/internal/components/utils';\nimport { GetOperatorsWithStatuses, LazyLoader, OperatorRowProps } from '@console/plugin-sdk';\nimport { getMostImportantStatuses } from './state-utils';\nimport { HealthState } from './states';\nimport StatusItem, { StatusPopupSection } from './StatusPopup';\n\nimport './operator-body.scss';\n\nexport const OperatorsSection: React.FC<OperatorsSectionProps> = ({\n  resources,\n  getOperatorsWithStatuses,\n  title,\n  linkTo,\n  Row,\n  Component,\n  isResolved,\n}) => {\n  const { t } = useTranslation();\n  const error = _.values(resources).some((r) => r.loadError);\n  const operatorStatuses = getOperatorsWithStatuses(resources);\n  const sortedOperatorStatuses = getMostImportantStatuses(operatorStatuses).sort((a, b) =>\n    a.operators[0].metadata.name.localeCompare(b.operators[0].metadata.name),\n  );\n  const operatorsHealthy = sortedOperatorStatuses.every((o) => o.status.health === HealthState.OK);\n  const RowLoading = React.useCallback(() => <div className=\"co-status__operator-skeleton\" />, []);\n  if (!operatorStatuses.length) {\n    return null;\n  }\n\n  return (\n    <StatusPopupSection\n      firstColumn={\n        <>\n          <span>{title}</span>\n          <span className=\"text-secondary co-status__operator-detail\">\n            {' '}\n            {t('console-shared~({{operatorStatusLength}} installed)', {\n              operatorStatusLength: operatorStatuses.length,\n            })}\n          </span>\n        </>\n      }\n      secondColumn={t('console-shared~Status')}\n    >\n      {error ? (\n        <div className=\"text-secondary\">{t('console-shared~Not available')}</div>\n      ) : (\n        !operatorsHealthy &&\n        sortedOperatorStatuses.map((operatorStatus) => (\n          <Row\n            key={operatorStatus.operators[0].metadata.uid}\n            Component={Component}\n            operatorStatus={operatorStatus}\n            LoadingComponent={RowLoading}\n            isResolved={isResolved}\n          />\n        ))\n      )}\n      <StatusItem\n        value={t('console-shared~All {{status}}', {\n          status: operatorStatuses[0].status.title.toLowerCase(),\n        })}\n        icon={operatorStatuses[0].status.icon}\n      >\n        <Link to={linkTo}>{t('console-shared~View all')}</Link>\n      </StatusItem>\n    </StatusPopupSection>\n  );\n};\n\ntype OperatorsSectionProps = {\n  resources: FirehoseResourcesResult;\n  getOperatorsWithStatuses: GetOperatorsWithStatuses;\n  title: string;\n  linkTo: string;\n  Row: React.ComponentType<\n    OperatorRowProps & {\n      LoadingComponent: () => JSX.Element;\n      Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n      key: string;\n      isResolved: boolean;\n    }\n  >;\n  isResolved: boolean;\n  Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useExtensions,\n  DashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthOperator,\n} from '@console/plugin-sdk';\nimport {\n  DashboardsOverviewHealthSubsystem as DynamicDashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem as isDynamicDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem as isDynamicDashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem as isDynamicDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthURLSubsystem,\n  isResolvedDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthResourceSubsystem,\n  isResolvedDashboardsOverviewHealthOperator,\n  ResolvedExtension,\n  useResolvedExtensions,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport { Gallery, GalleryItem, Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport { BlueArrowCircleUpIcon, FLAGS, useCanClusterUpgrade } from '@console/shared';\n\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport AlertItem, {\n  StatusItem,\n} from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '../../../monitoring/utils';\nimport {\n  ClusterVersionKind,\n  referenceForModel,\n  hasAvailableUpdates,\n  K8sKind,\n  ObjectMetadata,\n} from '../../../../module/k8s';\nimport { ClusterVersionModel } from '../../../../models';\nimport { RootState } from '../../../../redux';\nimport {\n  OperatorHealthItem,\n  PrometheusHealthItem,\n  URLHealthItem,\n  ResourceHealthItem,\n} from './health-item';\nimport { useK8sWatchResource } from '../../../utils/k8s-watch-hook';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { useNotificationAlerts } from '@console/shared/src/hooks/useNotificationAlerts';\n\nconst filterSubsystems = (\n  subsystems: (\n    | DashboardsOverviewHealthSubsystem\n    | ResolvedExtension<DynamicDashboardsOverviewHealthSubsystem>\n  )[],\n  k8sModels: ImmutableMap<string, K8sKind>,\n) =>\n  subsystems.filter((s) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(s) ||\n      isDashboardsOverviewHealthPrometheusSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthURLSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthPrometheusSubsystem(s)\n    ) {\n      const subsystem = s as\n        | DashboardsOverviewHealthPrometheusSubsystem\n        | DashboardsOverviewHealthURLSubsystem\n        | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>\n        | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem>;\n      return subsystem.properties.additionalResource &&\n        !subsystem.properties.additionalResource.optional\n        ? !!k8sModels.get(subsystem.properties.additionalResource.kind)\n        : true;\n    }\n    return true;\n  });\n\nconst cvResource: WatchK8sResource = {\n  kind: referenceForModel(ClusterVersionModel),\n  namespaced: false,\n  name: 'version',\n  isList: false,\n};\n\nexport const DashboardAlerts: React.FC<DashboardAlertsProps> = ({ labelSelector }) => {\n  const { t } = useTranslation();\n  const hasCVResource = useFlag(FLAGS.CLUSTER_VERSION);\n  const [alerts, , loadError] = useNotificationAlerts(labelSelector);\n  const [cv, cvLoaded] = useK8sWatchResource<ClusterVersionKind>(\n    hasCVResource ? cvResource : ({} as WatchK8sResource),\n  );\n  const canUpgrade = useCanClusterUpgrade();\n\n  const showClusterUpdate =\n    canUpgrade && hasCVResource && cvLoaded && hasAvailableUpdates(cv) && !labelSelector;\n  return (\n    <AlertsBody error={!_.isEmpty(loadError)}>\n      {showClusterUpdate && (\n        <StatusItem\n          key=\"clusterUpdate\"\n          Icon={BlueArrowCircleUpIcon}\n          message={t('public~A cluster version update is available')}\n        >\n          <Link to=\"/settings/cluster?showVersions\">{t('public~Update cluster')}</Link>\n        </StatusItem>\n      )}\n      {alerts.map((alert) => (\n        <AlertItem key={alertURL(alert, alert.rule.id)} alert={alert} />\n      ))}\n    </AlertsBody>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  k8sModels: state.k8s.getIn(['RESOURCES', 'models']),\n});\nexport const StatusCard = connect<StatusCardProps>(mapStateToProps)(({ k8sModels }) => {\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const [dynamicSubsystemExtensions] = useResolvedExtensions<\n    DynamicDashboardsOverviewHealthSubsystem\n  >(isDynamicDashboardsOverviewHealthSubsystem);\n\n  const subsystems = React.useMemo(() => {\n    const filteredSubsystems = filterSubsystems(\n      [...subsystemExtensions, ...dynamicSubsystemExtensions],\n      k8sModels,\n    );\n    return filteredSubsystems.map((e) => {\n      if (\n        isResolvedDashboardsOverviewHealthURLSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthPrometheusSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthResourceSubsystem(e)\n      ) {\n        const popup = e.properties.popupComponent\n          ? { popupComponent: () => Promise.resolve(e.properties.popupComponent) }\n          : {};\n        return {\n          ...e,\n          properties: {\n            ...e.properties,\n            ...popup,\n          },\n        };\n      }\n      return e;\n    });\n  }, [subsystemExtensions, dynamicSubsystemExtensions, k8sModels]);\n\n  const operatorSubsystemIndex = React.useMemo(\n    () =>\n      subsystems.findIndex(\n        (e) =>\n          isDashboardsOverviewHealthOperator(e) || isResolvedDashboardsOverviewHealthOperator(e),\n      ),\n    [subsystems],\n  );\n  const { t } = useTranslation();\n  const healthItems: { title: string; Component: React.ReactNode }[] = [];\n  subsystems.forEach((subsystem) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthURLSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <URLHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthPrometheusSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthPrometheusSubsystem(subsystem)\n    ) {\n      const { disallowedControlPlaneTopology } = subsystem.properties;\n      if (\n        disallowedControlPlaneTopology?.length &&\n        disallowedControlPlaneTopology.includes(window.SERVER_FLAGS.controlPlaneTopology)\n      ) {\n        return;\n      }\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <PrometheusHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthResourceSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthResourceSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <ResourceHealthItem subsystem={subsystem.properties} />,\n      });\n    }\n  });\n\n  if (operatorSubsystemIndex !== -1) {\n    const operatorSubsystems: DashboardsOverviewHealthOperator['properties'][] = [];\n    const dynamicOperatorSubsystems: ResolvedExtension<\n      DynamicDashboardsOverviewHealthOperator\n    >['properties'][] = [];\n    subsystems.forEach((e) => {\n      if (isResolvedDashboardsOverviewHealthOperator(e)) {\n        dynamicOperatorSubsystems.push(e.properties);\n      } else if (isDashboardsOverviewHealthOperator(e)) {\n        operatorSubsystems.push(e.properties);\n      }\n    });\n    healthItems.splice(operatorSubsystemIndex, 0, {\n      title: 'Operators',\n      Component: (\n        <OperatorHealthItem\n          operatorExtensions={operatorSubsystems}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      ),\n    });\n  }\n\n  return (\n    <Card\n      data-test-id=\"status-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to=\"/monitoring/alerts\" data-test=\"status-card-view-alerts\">\n                {t('public~View alerts')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      <HealthBody>\n        <Gallery className=\"co-overview-status__health\" hasGutter>\n          {healthItems.map((item) => {\n            return (\n              <GalleryItem key={item.title} data-test={item.title}>\n                {item.Component}\n              </GalleryItem>\n            );\n          })}\n        </Gallery>\n      </HealthBody>\n      <DashboardAlerts />\n    </Card>\n  );\n});\n\ntype StatusCardProps = {\n  k8sModels: ImmutableMap<string, K8sKind>;\n};\n\ntype DashboardAlertsProps = {\n  labelSelector?: ObjectMetadata['labels'];\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FLAGS, useActiveNamespace, useFlag } from '@console/shared';\nimport { useCreateNamespaceOrProjectModal } from '@console/shared/src/hooks/useCreateNamespaceOrProjectModal';\nimport ProjectListPage, { ProjectListPageProps } from './ProjectListPage';\n\ntype LazySubTitleRender = (openProjectModal: () => void) => React.ReactNode;\nexport interface CreateProjectListPageProps extends ProjectListPageProps {\n  title: string;\n  children: LazySubTitleRender;\n  onCreate?: (project: K8sResourceKind) => void;\n}\n\ntype CreateAProjectButtonProps = {\n  openProjectModal: () => void;\n};\n\nexport const CreateAProjectButton: React.FC<CreateAProjectButtonProps> = ({ openProjectModal }) => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  if (canCreateProject) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Project\n        </Button>\n      </Trans>\n    );\n  }\n  if (canCreateNs) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Namespace\n        </Button>\n      </Trans>\n    );\n  }\n  return null;\n};\n\nconst CreateProjectListPage: React.FC<CreateProjectListPageProps> = ({\n  onCreate,\n  title,\n  children,\n  ...props\n}) => {\n  const [, setActiveNamespace] = useActiveNamespace();\n  const createNamespaceOrProjectModal = useCreateNamespaceOrProjectModal();\n  const openProjectModal = React.useCallback(() => {\n    const handleSubmit = (project: K8sResourceKind) => {\n      setActiveNamespace(project.metadata?.name);\n      onCreate && onCreate(project);\n    };\n    createNamespaceOrProjectModal({ onSubmit: handleSubmit });\n  }, [onCreate, setActiveNamespace, createNamespaceOrProjectModal]);\n  return (\n    <ProjectListPage {...props} title={title}>\n      {children(openProjectModal)}\n    </ProjectListPage>\n  );\n};\n\nexport default CreateProjectListPage;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardTitle,\n  MenuToggle,\n  MenuToggleElement,\n  Select,\n  SelectList,\n  SelectOption,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport {\n  ClusterOverviewUtilizationItem,\n  isClusterOverviewUtilizationItem,\n  ClusterOverviewMultilineUtilizationItem,\n  isClusterOverviewMultilineUtilizationItem,\n  useResolvedExtensions,\n  Humanize,\n  TopConsumerPopoverProps,\n} from '@console/dynamic-plugin-sdk';\nimport UtilizationItem, {\n  MultilineUtilizationItem,\n  QueryWithDescription,\n  LimitRequested,\n  trimSecondsXMutator,\n} from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\n\nimport { DashboardItemProps, withDashboardResources } from '../../with-dashboard-resources';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils/units';\nimport { getRangeVectorStats, getInstantVectorStats } from '../../../graphs/utils';\nimport {\n  getMultilineQueries,\n  getUtilizationQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport { MachineConfigPoolModel } from '../../../../models';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { DataPoint, PrometheusResponse } from '../../../graphs';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { MachineConfigPoolKind, referenceForModel } from '@console/internal/module/k8s';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport { useUtilizationDuration } from '@console/shared/src/hooks/useUtilizationDuration';\nimport {\n  ClusterUtilizationContext,\n  CPUPopover,\n  MemoryPopover,\n  StoragePopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  PodPopover,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const PrometheusUtilizationItem = withDashboardResources<PrometheusUtilizationItemProps>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    utilizationQuery,\n    totalQuery,\n    title,\n    TopConsumerPopover,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n    limitQuery,\n    requestQuery,\n    setLimitReqState,\n  }) => {\n    let utilization: PrometheusResponse, utilizationError: any;\n    let total: PrometheusResponse, totalError: any;\n    let max: DataPoint<number>[];\n    let limit: PrometheusResponse, limitError: any;\n    let request: PrometheusResponse, requestError: any;\n    let isLoading = false;\n    const { duration } = useUtilizationDuration();\n\n    React.useEffect(() => {\n      if (!isDisabled) {\n        watchPrometheus(utilizationQuery, namespace, duration);\n        totalQuery && watchPrometheus(totalQuery, namespace);\n        limitQuery && watchPrometheus(limitQuery, namespace, duration);\n        requestQuery && watchPrometheus(requestQuery, namespace, duration);\n        return () => {\n          stopWatchPrometheusQuery(utilizationQuery, duration);\n          totalQuery && stopWatchPrometheusQuery(totalQuery);\n          limitQuery && stopWatchPrometheusQuery(limitQuery, duration);\n          requestQuery && stopWatchPrometheusQuery(requestQuery, duration);\n        };\n      }\n    }, [\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      duration,\n      utilizationQuery,\n      totalQuery,\n      namespace,\n      isDisabled,\n      limitQuery,\n      requestQuery,\n    ]);\n\n    if (!isDisabled) {\n      [utilization, utilizationError] = getPrometheusQueryResponse(\n        prometheusResults,\n        utilizationQuery,\n        duration,\n      );\n      [total, totalError] = getPrometheusQueryResponse(prometheusResults, totalQuery);\n      [limit, limitError] = getPrometheusQueryResponse(prometheusResults, limitQuery, duration);\n      [request, requestError] = getPrometheusQueryResponse(\n        prometheusResults,\n        requestQuery,\n        duration,\n      );\n\n      max = getInstantVectorStats(total);\n      isLoading = !utilization || (totalQuery && !total) || (limitQuery && !limit);\n    }\n\n    return (\n      <UtilizationItem\n        title={title}\n        utilization={utilization}\n        limit={limit}\n        requested={request}\n        error={utilizationError || totalError || limitError || requestError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        query={[utilizationQuery, limitQuery, requestQuery]}\n        max={max && max.length ? max[0].y : null}\n        TopConsumerPopover={TopConsumerPopover}\n        setLimitReqState={setLimitReqState}\n      />\n    );\n  },\n);\n\nexport const PrometheusMultilineUtilizationItem = withDashboardResources<\n  PrometheusMultilineUtilizationItemProps\n>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    queries,\n    title,\n    TopConsumerPopovers,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n  }) => {\n    const { duration } = useUtilizationDuration();\n    React.useEffect(() => {\n      if (!isDisabled) {\n        queries.forEach((q) => watchPrometheus(q.query, namespace, duration));\n        return () => {\n          queries.forEach((q) => stopWatchPrometheusQuery(q.query, duration));\n        };\n      }\n    }, [watchPrometheus, stopWatchPrometheusQuery, duration, queries, namespace, isDisabled]);\n\n    const stats = [];\n    let hasError = false;\n    let isLoading = false;\n    if (!isDisabled) {\n      queries.forEach((query) => {\n        const [response, responseError] = getPrometheusQueryResponse(\n          prometheusResults,\n          query.query,\n          duration,\n        );\n        if (responseError) {\n          hasError = true;\n          return false;\n        }\n        if (!response) {\n          isLoading = true;\n          return false;\n        }\n        stats.push(getRangeVectorStats(response, query.desc, null, trimSecondsXMutator)?.[0] || []);\n      });\n    }\n\n    return (\n      <MultilineUtilizationItem\n        title={title}\n        data={stats}\n        error={hasError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        queries={queries}\n        TopConsumerPopovers={TopConsumerPopovers}\n      />\n    );\n  },\n);\n\nconst UtilizationCardNodeFilter: React.FC<UtilizationCardNodeFilterProps> = ({\n  machineConfigPools,\n  onNodeSelect,\n  selectedNodes,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const sortedMCPs = machineConfigPools.sort((a, b) => {\n    const order = ['worker', 'master'];\n    const indexA = order.indexOf(a.metadata.name);\n    const indexB = order.indexOf(b.metadata.name);\n    if (indexA === -1 && indexB === -1) {\n      return a.metadata.name.localeCompare(b.metadata.name);\n    }\n    if (indexA === -1) {\n      return 1;\n    }\n    if (indexB === -1) {\n      return -1;\n    }\n    return indexA - indexB;\n  });\n\n  const selectOptions = sortedMCPs.map((mcp) => {\n    const mcpName = mcp.metadata.name === 'master' ? 'control plane' : mcp.metadata.name;\n    return (\n      <SelectOption\n        hasCheckbox\n        key={mcp.metadata.name}\n        value={mcpName}\n        isSelected={selectedNodes.includes(mcp.metadata.name)}\n      >\n        {mcpName}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle ref={toggleRef} onClick={(open) => setIsOpen(open)} variant=\"plainText\">\n      {t('public~Filter by Node type')}\n      {selectedNodes.length > 0 && (\n        <Badge className=\"pf-v5-u-ml-sm\" isRead>\n          {selectedNodes.length}\n        </Badge>\n      )}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      role=\"menu\"\n      aria-label={t('public~Filter by Node type')}\n      onSelect={onNodeSelect}\n      isOpen={isOpen}\n      selected={selectedNodes}\n      onOpenChange={(open) => setIsOpen(open)}\n      toggle={toggle}\n    >\n      <SelectList>{selectOptions}</SelectList>\n    </Select>\n  );\n};\n\nexport const UtilizationCard = () => {\n  const { t } = useTranslation();\n  const [machineConfigPools, machineConfigPoolsLoaded] = useK8sWatchResource<\n    MachineConfigPoolKind[]\n  >({\n    isList: true,\n    kind: referenceForModel(MachineConfigPoolModel),\n  });\n  // TODO: add `useUserSettings` to get default selected\n  const [selectedNodes, setSelectedNodes] = React.useState<string[]>([]);\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ClusterOverviewUtilizationItem>(\n    isClusterOverviewUtilizationItem,\n  );\n  const [dynamicMultilineItemExtensions] = useResolvedExtensions<\n    ClusterOverviewMultilineUtilizationItem\n  >(isClusterOverviewMultilineUtilizationItem);\n\n  // TODO: add `useUserSettingsCompatibility` to store selectedNodes\n  const onNodeSelect = (event: React.MouseEvent, selection: string) => {\n    const selectionUpdated = selection === 'control plane' ? 'master' : selection;\n    if (selectedNodes.includes(selectionUpdated)) {\n      setSelectedNodes(selectedNodes.filter((item) => item !== selectionUpdated));\n    } else {\n      setSelectedNodes([...selectedNodes, selectionUpdated]);\n    }\n  };\n  // if no filter is applied, show all nodes using regex\n  const nodeType = _.isEmpty(selectedNodes) ? '.+' : selectedNodes.join('|');\n  const [utilizationQueries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(nodeType), getMultilineQueries(nodeType)],\n    [nodeType],\n  );\n  return (\n    machineConfigPoolsLoaded && (\n      <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n        <CardHeader\n          actions={{\n            actions: (\n              <>\n                <Split>\n                  <SplitItem>\n                    <UtilizationCardNodeFilter\n                      machineConfigPools={machineConfigPools}\n                      onNodeSelect={onNodeSelect}\n                      selectedNodes={selectedNodes}\n                    />\n                  </SplitItem>\n                  <SplitItem>\n                    <UtilizationDurationDropdown />\n                  </SplitItem>\n                </Split>\n              </>\n            ),\n            hasNoOffset: false,\n            className: undefined,\n          }}\n        >\n          <CardTitle data-test=\"utilization-card__title\">\n            {t('public~Cluster utilization')}\n          </CardTitle>\n        </CardHeader>\n        <UtilizationBody>\n          <ClusterUtilizationContext.Provider value={nodeType}>\n            <PrometheusUtilizationItem\n              title={t('public~CPU')}\n              utilizationQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].requests}\n              TopConsumerPopover={CPUPopover}\n              humanizeValue={humanizeCpuCores}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Memory')}\n              utilizationQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].requests}\n              TopConsumerPopover={MemoryPopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Filesystem')}\n              utilizationQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].total}\n              TopConsumerPopover={StoragePopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusMultilineUtilizationItem\n              title={t('public~Network transfer')}\n              queries={multilineQueries[OverviewQuery.NETWORK_UTILIZATION]}\n              humanizeValue={humanizeDecimalBytesPerSec}\n              TopConsumerPopovers={networkPopovers}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Pod count')}\n              utilizationQuery={utilizationQueries[OverviewQuery.POD_UTILIZATION].utilization}\n              TopConsumerPopover={PodPopover}\n              humanizeValue={humanizeNumber}\n            />\n            {dynamicItemExtensions.map(({ uid, properties }) => (\n              <PrometheusUtilizationItem\n                key={uid}\n                title={properties.title}\n                utilizationQuery={properties.getUtilizationQuery(selectedNodes)}\n                totalQuery={properties.getTotalQuery?.(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopover={properties.TopConsumerPopover}\n                requestQuery={properties.getRequestQuery?.(selectedNodes)}\n                limitQuery={properties.getLimitQuery?.(selectedNodes)}\n              />\n            ))}\n            {dynamicMultilineItemExtensions.map(({ uid, properties }) => (\n              <PrometheusMultilineUtilizationItem\n                key={uid}\n                title={properties.title}\n                queries={properties.getUtilizationQueries(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopovers={properties.TopConsumerPopovers}\n              />\n            ))}\n          </ClusterUtilizationContext.Provider>\n        </UtilizationBody>\n      </Card>\n    )\n  );\n};\n\ntype PrometheusCommonProps = {\n  title: string;\n  humanizeValue: Humanize;\n  byteDataType?: ByteDataTypes;\n  namespace?: string;\n  isDisabled?: boolean;\n};\n\ntype PrometheusUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    utilizationQuery: string;\n    totalQuery?: string;\n    limitQuery?: string;\n    requestQuery?: string;\n    TopConsumerPopover?: React.ComponentType<TopConsumerPopoverProps>;\n    setLimitReqState?: (state: LimitRequested) => void;\n  };\n\ntype PrometheusMultilineUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    queries: QueryWithDescription[];\n    TopConsumerPopovers?: React.ComponentType<TopConsumerPopoverProps>[];\n  };\n\ntype UtilizationCardNodeFilterProps = {\n  machineConfigPools: MachineConfigPoolKind[];\n  onNodeSelect: (event: React.MouseEvent, selection: string) => void;\n  selectedNodes: string[];\n};\n","import * as React from 'react';\nimport {\n  ChartDonutThreshold,\n  ChartDonutUtilization,\n  ChartThemeColor,\n} from '@patternfly/react-charts';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { usePrometheusPoll } from './prometheus-poll-hook';\nimport { PrometheusEndpoint } from './helpers';\nimport { useRefWidth, humanizePercentage, Humanize } from '../utils';\nimport { getInstantVectorStats } from './utils';\nimport { DataPoint } from '.';\n\nconst DEFAULT_THRESHOLDS = [{ value: 67 }, { value: 92 }];\n\nexport const GaugeChart: React.FC<GaugeChartProps> = ({\n  data,\n  error,\n  humanize = humanizePercentage,\n  invert = false,\n  loading,\n  query = '',\n  remainderLabel,\n  themeColor = ChartThemeColor.green,\n  thresholds = DEFAULT_THRESHOLDS,\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n  const ready = !error && !loading;\n\n  const status = loading ? t('Loading') : error;\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || (data ? humanize(data.y).string : undefined) || t('No data');\n\n  const labels = ({ datum: { x, y } }) =>\n    x ? `${x} ${usedLabelText}` : `${y} ${remainderLabel || t('available')}`;\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonutThreshold\n          ariaTitle={ariaChartTitle || title}\n          data={thresholds}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          width={width}\n          y=\"value\"\n        >\n          <ChartDonutUtilization\n            labels={labels}\n            data={ready ? data : { y: 0 }}\n            invert={invert}\n            padding={0}\n            subTitle={ready ? secondaryTitleText : ''}\n            themeColor={themeColor}\n            thresholds={thresholds}\n            title={status || labelText}\n          />\n        </ChartDonutThreshold>\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\nexport const Gauge: React.FC<GaugeProps> = ({\n  humanize = humanizePercentage,\n  invert,\n  namespace,\n  percent = 0,\n  query,\n  remainderLabel,\n  secondaryTitle,\n  thresholds,\n  title,\n  usedLabel,\n}) => {\n  const { t } = useTranslation();\n\n  const [response, error, loading] = usePrometheusPoll({\n    endpoint: PrometheusEndpoint.QUERY,\n    namespace,\n    query,\n  });\n\n  const [data] = response\n    ? getInstantVectorStats(response, null, humanize).map(({ label, y }) => ({ x: label, y }))\n    : [{ x: humanize(percent).string, y: percent }];\n  return (\n    <GaugeChart\n      data={data}\n      error={!!error && t('No data')}\n      invert={invert}\n      label={data.x}\n      loading={loading}\n      query={query}\n      remainderLabel={remainderLabel}\n      secondaryTitle={secondaryTitle}\n      thresholds={thresholds}\n      title={title}\n      usedLabel={usedLabel}\n    />\n  );\n};\n\ntype GaugeChartProps = {\n  data: DataPoint;\n  error?: string;\n  humanize?: Humanize;\n  invert?: boolean;\n  isLoaded?: boolean;\n  label?: string;\n  loading?: boolean;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  themeColor?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  usedLabel?: string;\n  className?: string;\n};\n\ntype GaugeProps = {\n  humanize?: Humanize;\n  invert?: boolean;\n  namespace?: string;\n  percent?: number;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  usedLabel?: string;\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, LabelSelector, referenceForModel, Selector } from '../../../module/k8s';\nimport { DetailsCard } from './details-card';\nimport { StatusCard } from './status-card';\nimport { UtilizationCard } from './utilization-card';\nimport { InventoryCard } from './inventory-card';\nimport { ActivityCard } from './activity-card';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { LauncherCard } from './launcher-card';\nimport { ResourceQuotaCard } from './resource-quota-card';\n\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }, { Card: ResourceQuotaCard }];\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst rightCards = [{ Card: ActivityCard }];\n\nexport const getNamespaceDashboardConsoleLinks = (\n  ns: K8sResourceKind,\n  consoleLinks: K8sResourceKind[],\n): K8sResourceKind[] => {\n  return _.filter(consoleLinks, (link: K8sResourceKind): boolean => {\n    if (link.spec.location !== 'NamespaceDashboard') {\n      return false;\n    }\n\n    const namespaces: string[] = _.get(link, 'spec.namespaceDashboard.namespaces');\n    const selector: Selector = _.get(link, 'spec.namespaceDashboard.namespaceSelector');\n\n    // If neither namespaces or selector was provided, show the link for all namespaces.\n    if (_.isEmpty(namespaces) && _.isEmpty(selector)) {\n      return true;\n    }\n\n    // Show the link if either namespaces or the selector matches this namespace.\n    if (_.includes(namespaces, ns.metadata.name)) {\n      return true;\n    }\n\n    return !_.isEmpty(selector) && new LabelSelector(selector).matches(ns);\n  });\n};\n\nexport const ProjectDashboard: React.FC<ProjectDashboardProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const namespaceLinks = getNamespaceDashboardConsoleLinks(obj, consoleLinks);\n  const context = {\n    obj,\n    namespaceLinks,\n  };\n\n  const hasNamespaceLinks = !!namespaceLinks.length;\n\n  const rc = React.useMemo(\n    () => (hasNamespaceLinks ? [{ Card: LauncherCard }, ...rightCards] : rightCards),\n    [hasNamespaceLinks],\n  );\n\n  return (\n    <>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project overview')}</title>\n        </Helmet>\n      )}\n      <ProjectDashboardContext.Provider value={context}>\n        <Dashboard>\n          <DashboardGrid mainCards={mainCards} leftCards={leftCards} rightCards={rc} />\n        </Dashboard>\n      </ProjectDashboardContext.Provider>\n    </>\n  );\n};\n\ntype ProjectDashboardProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ImageStreamContextProps } from '../import-types';\n\nexport const ImageStreamContext = React.createContext<ImageStreamContextProps>(undefined as any);\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { history } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  ProjectRequestModel,\n  SecretModel,\n  ServiceModel,\n  ServiceAccountModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  k8sCreate,\n  k8sGet,\n  K8sResourceKind,\n  k8sUpdate,\n  K8sVerb,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport {\n  createPipelineForImportFlow,\n  createPipelineRunForImportFlow,\n  updatePipelineForImportFlow,\n} from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '@console/pipelines-plugin/src/components/pipelines/const';\nimport { createTrigger } from '@console/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils';\nimport { setPipelineNotStarted } from '@console/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils';\nimport { createRepositoryResources } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport {\n  updateServiceAccount,\n  getSecretAnnotations,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { LimitsData } from '@console/shared/src/types';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BUILD_OUTPUT_IMAGESTREAM_URL } from '@console/shipwright-plugin/src/const';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { RUNTIME_LABEL } from '../../const';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  getTriggerAnnotation,\n  mergeData,\n  getTemplateLabels,\n  getRouteAnnotations,\n} from '../../utils/resource-label-utils';\nimport { createService, createRoute, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  GitImportFormData,\n  ProjectData,\n  GitReadableTypes,\n  Resources,\n  DevfileSuggestedResources,\n  UploadJarFormData,\n  RouteData,\n  ServerlessData,\n  DeploymentData,\n  BuildOptions,\n} from './import-types';\n\nexport const generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const createProject = (projectData: ProjectData): Promise<K8sResourceKind> => {\n  const project = {\n    metadata: {\n      name: projectData.name,\n    },\n    displayName: projectData.displayName,\n    description: projectData.description,\n  };\n\n  return k8sCreate(ProjectRequestModel, project);\n};\n\nexport const createOrUpdateImageStream = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStreamData: K8sResourceKind,\n  dryRun: boolean,\n  appResources: AppResources,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    labels: userLabels,\n    image: { tag: selectedTag },\n    labels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const repository = (formData as GitImportFormData).git?.url;\n  const ref = (formData as GitImportFormData).git?.ref;\n  const imageStreamList = appResources?.imageStream?.data?.filter(\n    (imgstr) => imgstr.metadata?.labels?.[NAME_LABEL] === (labels[NAME_LABEL] || name),\n  );\n  const imageStreamFilterData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamFilterData.length && imageStreamFilterData[0]) || {};\n  const imageStreamName = imageStreamData && imageStreamData.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...(repository && getGitAnnotations(repository, ref)),\n    ...getCommonAnnotations(),\n  };\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: {\n        ...defaultLabels,\n        ...userLabels,\n        [NAME_LABEL]: imgStreamName,\n      },\n      annotations: defaultAnnotations,\n    },\n  };\n  const imageStream = mergeData(originalImageStream, newImageStream);\n  if (verb === 'update') {\n    imageStream.metadata.name = originalImageStream.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ImageStreamModel, imageStream)\n    : k8sCreate(ImageStreamModel, newImageStream, dryRun ? dryRunOpt : {});\n};\n\nexport const createWebhookSecret = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStream: K8sResourceKind,\n  secretType: string,\n  dryRun: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    image: { tag: selectedTag },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n\n  const webhookSecret = {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: `${name}-${secretType}-webhook-secret`,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n    },\n    stringData: { WebHookSecretKey: generateSecret() },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreate(SecretModel, webhookSecret, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateShipwrightBuild = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalShipwrightBuild?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n) => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, strategy: buildStrategy, clusterBuildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamRepository = imageStream && imageStream.status?.dockerImageRepository;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  let shipwrightParamsObj = [];\n  // eslint-disable-next-line default-case\n  switch (buildStrategy) {\n    case BuildStrategyType.Docker:\n      shipwrightParamsObj = [\n        {\n          name: 'dockerfile',\n          value: dockerfilePath,\n        },\n      ];\n      break;\n    case BuildStrategyType.Source:\n      shipwrightParamsObj = [\n        {\n          name: 'builder-image',\n          value: `${imageStreamRepository}:${selectedTag}`,\n        },\n      ];\n      break;\n  }\n\n  const shipwrightBuildName =\n    verb === 'update' && !_.isEmpty(originalShipwrightBuild)\n      ? originalShipwrightBuild.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newShipwrightBuild = {\n    apiVersion: 'shipwright.io/v1beta1',\n    kind: 'Build',\n    metadata: {\n      name: generatedImageStreamName || shipwrightBuildName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: shipwrightBuildName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      source: {\n        type: 'Git',\n        git: {\n          url: repository,\n          revision: ref,\n          ...(secretName ? { cloneSecret: secretName } : {}),\n        },\n        contextDir,\n      },\n      env: [...customEnvs, ...buildEnvs],\n      strategy: {\n        name: clusterBuildStrategy,\n        kind: 'ClusterBuildStrategy',\n      },\n      paramValues: shipwrightParamsObj,\n      output: {\n        image: `${BUILD_OUTPUT_IMAGESTREAM_URL}/${namespace}/${\n          generatedImageStreamName || shipwrightBuildName\n        }:latest`,\n      },\n    },\n  };\n\n  const shipwrightBuild = mergeData(originalShipwrightBuild, newShipwrightBuild);\n  if (verb === 'update') {\n    shipwrightBuild.metadata.name = originalShipwrightBuild.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ShipwrightBuildModel, shipwrightBuild)\n    : k8sCreate(ShipwrightBuildModel, newShipwrightBuild, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, type: gitType, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, triggers, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n  let buildStrategyData;\n\n  let desiredContextDir = contextDir;\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  switch (buildStrategy) {\n    case 'Devfile':\n      buildStrategyData = originalBuildConfig?.spec?.strategy || {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      desiredContextDir = originalBuildConfig?.spec?.source?.contextDir || contextDir;\n      break;\n    case 'Docker':\n      buildStrategyData = {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      break;\n    default:\n      buildStrategyData = {\n        sourceStrategy: {\n          env: [...customEnvs, ...buildEnvs],\n          from: {\n            kind: 'ImageStreamTag',\n            name: `${imageStreamName}:${selectedTag}`,\n            namespace: imageStreamNamespace,\n          },\n        },\n      };\n      break;\n  }\n\n  const webhookTriggerData = {\n    type: GitReadableTypes[gitType],\n    [gitType]: {\n      secretReference: { name: `${name}-${gitType}-webhook-secret` },\n    },\n  };\n\n  const excludedGitTypesForTriggers = [GitProvider.UNSURE, GitProvider.GITEA];\n\n  const buildConfigName =\n    verb === 'update' && !_.isEmpty(originalBuildConfig)\n      ? originalBuildConfig.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: generatedImageStreamName || buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: buildConfigName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || buildConfigName}:latest`,\n        },\n      },\n      source: {\n        contextDir: desiredContextDir,\n        git: {\n          uri: repository,\n          ref,\n        },\n        ...(secretName ? { sourceSecret: { name: secretName } } : {}),\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n        ...(triggers.webhook && !excludedGitTypesForTriggers.includes(gitType)\n          ? [webhookTriggerData]\n          : []),\n        ...(triggers.image ? [{ type: 'ImageChange', imageChange: {} }] : []),\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n  if (verb === 'update') {\n    buildConfig.metadata.name = originalBuildConfig.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, newBuildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeployment = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const runtimeIcon = imageStream && imageStream.metadata.labels?.[RUNTIME_LABEL];\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag,\n    runtimeIcon,\n  });\n  const imageName = name;\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n  };\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const managePipelineResources = async (\n  formData: GitImportFormData,\n  pipelineData: PipelineKind,\n): Promise<K8sResourceKind[]> => {\n  const pipelineResources = [];\n  if (!formData) return Promise.resolve([]);\n  const { name, git, pipeline, project, docker, image, build, labels } = formData;\n  let managedPipeline: PipelineKind;\n  const pipelineName = pipelineData?.metadata?.name;\n\n  if (!_.isEmpty(pipelineData) && pipelineName === name) {\n    managedPipeline = await updatePipelineForImportFlow(\n      pipelineData,\n      pipeline.template,\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n  } else if (pipeline.template) {\n    managedPipeline = await createPipelineForImportFlow(\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      pipeline,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n    pipelineResources.push(managedPipeline);\n    try {\n      const triggerResources = await createTrigger(managedPipeline, git.detectedType);\n      pipelineResources.push(...triggerResources);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('Error occured while creating triggers', error);\n    }\n  }\n\n  if (git.secret) {\n    const secret = await k8sGet(SecretModel, git.secret, project.name);\n    const gitUrl = GitUrlParse(git.url);\n    secret.metadata.annotations = getSecretAnnotations(\n      {\n        key: 'git',\n        value:\n          gitUrl.protocol === 'ssh' ? gitUrl.resource : `${gitUrl.protocol}://${gitUrl.resource}`,\n      },\n      secret.metadata.annotations,\n    );\n    await k8sUpdate(SecretModel, secret, project.name);\n\n    const pipelineServiceAccount = await k8sGet(\n      ServiceAccountModel,\n      PIPELINE_SERVICE_ACCOUNT,\n      project.name,\n    );\n    if (_.find(pipelineServiceAccount.secrets, (s) => s.name === git.secret) === undefined) {\n      await updateServiceAccount(git.secret, pipelineServiceAccount, false);\n    }\n  }\n\n  if (_.has(managedPipeline?.metadata?.labels, 'app.kubernetes.io/instance')) {\n    try {\n      const pipelineRun = await createPipelineRunForImportFlow(managedPipeline);\n      pipelineResources.push(pipelineRun);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('Failed to create PipelineRun for import flow', error);\n      setPipelineNotStarted(managedPipeline.metadata.name, managedPipeline.metadata.namespace);\n    }\n  }\n  return Promise.all(pipelineResources);\n};\n\nexport const createDevfileResources = async (\n  formData: GitImportFormData,\n  dryRun: boolean,\n  appResources: AppResources,\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind[]> => {\n  const verb: K8sVerb = 'create';\n\n  const {\n    name,\n    project: { name: namespace },\n    devfile: { devfileSuggestedResources, devfileProjectType },\n  } = formData;\n\n  const devfileResourceObjects: DevfileSuggestedResources = Object.keys(\n    devfileSuggestedResources,\n  ).reduce((acc: DevfileSuggestedResources, resourceType: string) => {\n    const resource: K8sResourceKind = devfileSuggestedResources[resourceType];\n    if (!resource) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [resourceType]: {\n        ...resource,\n        metadata: {\n          ...resource.metadata,\n          annotations: {\n            ...resource.metadata?.annotations,\n            isFromDevfile: 'true',\n          },\n          name,\n          namespace,\n          labels: {\n            ...resource.metadata?.labels,\n            ...(devfileProjectType ? { [RUNTIME_LABEL]: devfileProjectType } : {}),\n          },\n        },\n      },\n    };\n  }, {} as DevfileSuggestedResources);\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    appResources,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.buildResource,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const webhookSecretResponse = await createWebhookSecret(\n    formData,\n    devfileResourceObjects.imageStream,\n    'generic',\n    dryRun,\n  );\n\n  const deploymentResponse = await createOrUpdateDeployment(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.deployResource,\n    verb,\n  );\n\n  const serviceModelResponse =\n    devfileResourceObjects.service &&\n    (await k8sCreate(\n      ServiceModel,\n      createService(formData, devfileResourceObjects.imageStream, devfileResourceObjects.service),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const routeResponse =\n    devfileResourceObjects.route &&\n    (await k8sCreate(\n      RouteModel,\n      createRoute(formData, devfileResourceObjects.imageStream, devfileResourceObjects.route),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const devfileResources = [\n    imageStreamResponse,\n    buildConfigResponse,\n    webhookSecretResponse,\n    deploymentResponse,\n  ];\n\n  serviceModelResponse && devfileResources.push(serviceModelResponse);\n  routeResponse && devfileResources.push(routeResponse);\n\n  return devfileResources;\n};\n\nexport const createOrUpdateResources = async (\n  t: TFunction,\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: {\n      strategy: buildStrategy,\n      triggers: { webhook: webhookTrigger },\n      option: buildOption,\n    },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    git: { url: repository, type: gitType, ref },\n    pipeline,\n    resources,\n  } = formData;\n  const imageStreamName = _.get(imageStream, 'metadata.name');\n  const originalRepository =\n    appResources?.buildConfig?.data?.spec?.source?.git?.uri ??\n    appResources?.pipeline?.data?.spec?.params?.find((param) => param?.name === 'GIT_REPO')\n      ?.default;\n  createNewProject && (await createProject(formData.project));\n\n  const responses: K8sResourceKind[] = [];\n  let generatedImageStreamName: string = '';\n  if (\n    resources === Resources.KnativeService &&\n    originalRepository &&\n    originalRepository !== repository\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  if (buildStrategy === BuildStrategyType.Devfile) {\n    if (verb !== 'create') {\n      throw new Error(t('devconsole~Cannot update Devfile resources'));\n    }\n    return createDevfileResources(formData, dryRun, appResources, generatedImageStreamName);\n  }\n\n  if (pipeline.type === PipelineType.PAC && formData?.pipeline?.enabled) {\n    const pacRepository = formData?.pac?.repository;\n    const labels = formData?.labels;\n    const repo = await createRepositoryResources(pacRepository, namespace, labels, dryRun);\n    responses.push(repo);\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  if (pipeline.enabled && pipeline.type !== PipelineType.PAC) {\n    if (!dryRun) {\n      const pipelineResources = await managePipelineResources(\n        formData,\n        appResources?.pipeline?.data,\n      );\n      responses.push(...pipelineResources);\n    }\n  } else if (buildOption === BuildOptions.BUILDS) {\n    responses.push(\n      await createOrUpdateBuildConfig(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.buildConfig?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    responses.push(\n      await createOrUpdateShipwrightBuild(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.shipwrightBuild?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  }\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n    if (webhookTrigger) {\n      responses.push(await createWebhookSecret(formData, imageStream, gitType, dryRun));\n    }\n  }\n\n  if (formData.resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          }\n        : {\n            ...originalAnnotations,\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    const knativeResources = await Promise.all([\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    ]);\n    return [...knativeResources, ...responses];\n  }\n\n  if (formData.resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  } else if (formData.resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  }\n\n  if (\n    !_.isEmpty(ports) ||\n    buildStrategy === BuildStrategyType.Docker ||\n    buildStrategy === BuildStrategyType.Source\n  ) {\n    const originalService = _.get(appResources, 'service.data');\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = _.get(appResources, 'route.data');\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n\nexport const filterDeployedResources = (resources: K8sResourceKind[]) =>\n  resources.filter(\n    (resource) =>\n      resource.kind === DeploymentModel.kind ||\n      resource.kind === DeploymentConfigModel.kind ||\n      (resource.kind === KnServiceModel.kind &&\n        resource.apiVersion === `${KnServiceModel.apiGroup}/${KnServiceModel.apiVersion}`),\n  );\n\nexport const addSearchParamsToRelativeURL = (\n  url: string,\n  searchParams?: URLSearchParams,\n): string => {\n  const urlObj = new URL(url, 'thismessage:/'); // ITEF RFC 2557 section 5 (e)\n\n  urlObj.search = new URLSearchParams({\n    ...Object.fromEntries(urlObj.searchParams),\n    ...(searchParams ? Object.fromEntries(searchParams) : {}),\n  }).toString();\n\n  return urlObj.toString().replace(urlObj.protocol, '');\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n  searchParamOverrides?: URLSearchParams,\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n\n  if (searchParamOverrides) {\n    history.push(addSearchParamsToRelativeURL(redirectURL, searchParamOverrides));\n  } else {\n    history.push(redirectURL);\n  }\n};\n\nexport const isRouteAdvOptionsUsed = (\n  type: string,\n  routeData: RouteData,\n  ksvcRouteData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && routeData) {\n    if (!!routeData.hostname || !!routeData.path || !routeData.secure) return true;\n    if (routeData?.tls) {\n      for (const tlsKey in routeData.tls) {\n        if (routeData.tls.hasOwnProperty(tlsKey)) {\n          if (\n            ['caCertificate', 'certificate', 'destinationCACertificate', 'key'].includes(tlsKey) &&\n            !!routeData.tls[tlsKey]\n          )\n            return true;\n          if (tlsKey === 'insecureEdgeTerminationPolicy' && routeData.tls[tlsKey] !== 'None')\n            return true;\n          if (tlsKey === 'termination' && routeData.tls[tlsKey] !== 'reencrypt') return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (ksvcRouteData.domainMapping?.length > 0) return true;\n  return false;\n};\n\nexport const isScalingAdvOptions = (\n  type: string,\n  scalingData: DeploymentData,\n  ksvcData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && scalingData?.replicas > 1) {\n    return true;\n  }\n  const ksvcScalingData = ksvcData?.scaling;\n  if (ksvcScalingData) {\n    for (const scKey in ksvcScalingData) {\n      if (ksvcScalingData.hasOwnProperty(scKey)) {\n        if (['concurrencylimit', 'maxpods', 'minpods'].includes(scKey) && !!ksvcScalingData[scKey])\n          return true;\n        if (\n          scKey === 'concurrencytarget' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencytarget\n        )\n          return true;\n        if (\n          scKey === 'concurrencyutilization' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencyutilization\n        )\n          return true;\n        if (scKey === 'autoscale' && ksvcScalingData[scKey]) {\n          const autoscaleData = ksvcScalingData[scKey];\n          for (const asKey in autoscaleData) {\n            if (autoscaleData.hasOwnProperty(asKey)) {\n              if (\n                asKey === 'autoscalewindow' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindow\n              )\n                return true;\n              if (\n                asKey === 'autoscalewindowUnit' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindowUnit\n              )\n                return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const isResourceLimitAdvOptions = (resLimits: LimitsData): boolean => {\n  const isLimitUsed = (resLimitObj) => {\n    for (const limitKey in resLimitObj) {\n      if (resLimitObj.hasOwnProperty(limitKey)) {\n        if (['limit', 'request'].includes(limitKey) && !!resLimitObj[limitKey]) return true;\n        if (limitKey === 'limitUnit' && resLimitObj[limitKey] !== resLimitObj.defaultLimitUnit)\n          return true;\n        if (limitKey === 'requestUnit' && resLimitObj[limitKey] !== resLimitObj.defaultRequestUnit)\n          return true;\n      }\n    }\n    return false;\n  };\n\n  if (isLimitUsed(resLimits.cpu) || isLimitUsed(resLimits.memory)) return true;\n  return false;\n};\n\nexport const getTelemetryImport = (values: GitImportFormData) => {\n  if (!values) return {};\n  // get devfile data if exists\n  let devfileJson;\n  if (values.devfile?.devfileContent) {\n    devfileJson = safeYAMLToJS(values.devfile.devfileContent);\n  }\n  const applicationType =\n    (!values.application?.selectedKey && values.application?.name) ||\n    values.application?.selectedKey === values.application?.name\n      ? 'default'\n      : values.application?.selectedKey === CREATE_APPLICATION_KEY && !!values.application?.name\n      ? 'custom'\n      : 'none';\n  const resourceType =\n    values.resources === Resources.Kubernetes\n      ? 'Deployment'\n      : values.resources === Resources.OpenShift\n      ? 'DeploymentConfig'\n      : values.resources === Resources.KnativeService && 'Knative Service';\n  const selStrategy = values.import?.selectedStrategy?.name;\n  const telemetryImportData = {\n    useRecommended: values.image?.recommended === values.image?.selected,\n    recommendedStrategy: values.import?.recommendedStrategy?.name,\n    recommendedBuilderImage: values.image?.recommended,\n    strategy: selStrategy,\n    builderImage: values.image?.selected,\n\n    devFileLanguage: devfileJson?.metadata?.projectType || '',\n    devFileProjectType: devfileJson?.metadata?.language || '',\n\n    application: applicationType,\n\n    resource: resourceType,\n\n    targetPortChanged: !!values.route?.unknownTargetPort,\n\n    // currently run command is being used only for Node app\n    useRunCommand: !!values.image?.imageEnv?.NPM_RUN,\n\n    useAdvancedOptionsGit: values.git.dir !== '/' || !!values.git.ref || !!values.git.secret,\n\n    useAdvancedOptionsBuild:\n      values.build?.env.length > 0 || _.some(values.build?.triggers, (key) => !key),\n    useAdvancedOptionsDeployment:\n      selStrategy !== 'Devfile' &&\n      (values.deployment?.env.length > 0 || !values.deployment?.triggers?.image),\n    useAdvancedOptionsRoute: isRouteAdvOptionsUsed(\n      values.resources,\n      values.route,\n      values.serverless,\n    ),\n    useAdvancedOptionsHealthChecks:\n      values.healthChecks?.livenessProbe?.enabled ||\n      values.healthChecks?.readinessProbe?.enabled ||\n      values.healthChecks?.startupProbe?.enabled,\n    useAdvancedOptionsScaling: isScalingAdvOptions(\n      values.resources,\n      values.deployment,\n      values.serverless,\n    ),\n    useAdvancedOptionsResourceLimits: isResourceLimitAdvOptions(values.limits),\n    useAdvancedOptionsLabels: !_.isEmpty(values.labels),\n  };\n\n  return telemetryImportData;\n};\n","import * as _ from 'lodash';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport {\n  NameValueFromPair,\n  NameValuePair,\n} from '@console/shared/src/components/formik-fields/field-types';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n  PIPELINE_STRATEGY_LABEL,\n} from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind, TektonParam, TektonWorkspace } from '../../../types';\nimport { VolumeTypes } from '../../pipelines/const';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getServerlessFunctionDefaultPersistentVolumeClaim,\n} from '../../pipelines/modals/common/utils';\nimport { submitStartPipeline } from '../../pipelines/modals/start-pipeline/submit-utils';\nimport { StartPipelineFormValues } from '../../pipelines/modals/start-pipeline/types';\nimport { createPipelineResource } from '../../pipelines/pipeline-resource/pipelineResource-utils';\nimport { PipelineData } from '../import-types';\n\nconst getImageUrl = (name: string, namespace: string) => {\n  return `image-registry.openshift-image-registry.svc:5000/${namespace}/${name}`;\n};\n\nexport const createGitResource = (url: string, namespace: string, ref: string = 'master') => {\n  const params = { url, revision: ref };\n  return createPipelineResource(params, 'git', namespace);\n};\n\nexport const createImageResource = (name: string, namespace: string) => {\n  const params = {\n    url: getImageUrl(name, namespace),\n  };\n\n  return createPipelineResource(params, 'image', namespace);\n};\n\nexport const getPipelineParams = (\n  params: TektonParam[],\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: any,\n) => {\n  return (params || []).map((param) => {\n    switch (param.name) {\n      case 'APP_NAME':\n        return { ...param, default: name };\n      case 'GIT_REPO':\n        return { ...param, default: gitUrl };\n      case 'GIT_REVISION':\n        return { ...param, default: gitRef || '' };\n      case 'PATH_CONTEXT':\n        return { ...param, default: gitDir.replace(/^\\//, '') || param.default };\n      case 'IMAGE_NAME':\n        return { ...param, default: getImageUrl(name, namespace) };\n      case 'DOCKERFILE':\n        return { ...param, default: dockerfilePath };\n      case 'VERSION':\n        return { ...param, default: tag || param.default };\n      case 'BUILD_ENVS':\n        return { ...param, default: buildEnv || param.default };\n      default:\n        return param;\n    }\n  });\n};\n\nexport const pipelineRuntimeOrVersionChanged = (\n  template: PipelineKind,\n  pipeline: PipelineKind,\n): boolean =>\n  template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_LABEL] ||\n  template.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL];\n\nexport const isDockerPipeline = (template: PipelineKind): boolean =>\n  template?.metadata?.labels?.[PIPELINE_STRATEGY_LABEL] === 'docker';\n\nexport const createPipelineForImportFlow = async (\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  pipeline: PipelineData,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n) => {\n  const template = _.cloneDeep(pipeline.template);\n\n  template.metadata = {\n    name: `${name}`,\n    namespace,\n    labels: {\n      ...template.metadata?.labels,\n      ...labels,\n      'app.kubernetes.io/instance': name,\n      'app.kubernetes.io/name': name,\n      ...(!isDockerPipeline(template) && {\n        [PIPELINE_RUNTIME_VERSION_LABEL]: tag,\n      }),\n    },\n  };\n\n  template.spec.params =\n    template.spec.params &&\n    getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n\n  return k8sCreate(PipelineModel, template, { ns: namespace });\n};\n\nexport const createPipelineRunForImportFlow = async (\n  pipeline: PipelineKind,\n): Promise<PipelineRunKind> => {\n  const isServerlessFunctionPipeline =\n    pipeline?.metadata?.labels?.['function.knative.dev'] === 'true';\n  const pipelineInitialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n      ...workspace,\n      type: VolumeTypes.VolumeClaimTemplate,\n      data: isServerlessFunctionPipeline\n        ? getServerlessFunctionDefaultPersistentVolumeClaim(pipeline?.metadata?.name)\n        : getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n    })),\n    secretOpen: false,\n  };\n  return submitStartPipeline(pipelineInitialValues, pipeline);\n};\nexport const updatePipelineForImportFlow = async (\n  pipeline: PipelineKind,\n  template: PipelineKind,\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n): Promise<PipelineKind> => {\n  let updatedPipeline = _.cloneDeep(pipeline);\n\n  if (!template) {\n    updatedPipeline.metadata.labels = _.omit(\n      { ...updatedPipeline.metadata.labels, ...labels },\n      'app.kubernetes.io/instance',\n    );\n  } else {\n    if (pipelineRuntimeOrVersionChanged(template, pipeline)) {\n      updatedPipeline = _.cloneDeep(template);\n      updatedPipeline.metadata = {\n        resourceVersion: pipeline.metadata.resourceVersion,\n        name: `${name}`,\n        namespace,\n        labels: {\n          ...template.metadata?.labels,\n          ...labels,\n          'app.kubernetes.io/instance': name,\n          'app.kubernetes.io/name': name,\n          ...(!isDockerPipeline(template) && { [PIPELINE_RUNTIME_VERSION_LABEL]: tag }),\n        },\n      };\n    }\n\n    updatedPipeline.spec.params = getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n  }\n  return k8sUpdate(PipelineModel, updatedPipeline, namespace, name);\n};\n","import * as React from 'react';\nimport { Divider } from '@patternfly/react-core';\nimport { ListPage } from '@console/internal/components/factory';\nimport { ProjectsTable } from '@console/internal/components/namespace';\nimport { PageHeading } from '@console/internal/components/utils';\nimport './ProjectListPage.scss';\n\nexport type ProjectListPageProps = {\n  title: string;\n  listComponent?: React.ComponentType<any>;\n  children?: React.ReactNode;\n  badge?: React.ReactNode;\n};\nconst ProjectListPage: React.FC<ProjectListPageProps> = ({\n  badge,\n  title,\n  children,\n  listComponent,\n  ...listPageProps\n}) => (\n  <div className=\"odc-project-list-page\">\n    <PageHeading title={title} badge={badge}>\n      {children}\n    </PageHeading>\n    <Divider className=\"co-divider\" />\n    <ListPage\n      {...listPageProps}\n      showTitle={false}\n      kind=\"Project\"\n      ListComponent={listComponent || ProjectsTable}\n      canCreate={false}\n      filterLabel=\"by name or display name\"\n      textFilter=\"project-name\"\n    />\n  </div>\n);\n\nexport default ProjectListPage;\n","import * as React from 'react';\nimport { AsyncComponent } from '../utils';\n\nexport const OverviewListPageLoader = () =>\n  import('./OverviewListPage' /* webpackChunkName: \"overview-list-page\" */).then(\n    (m) => m.OverviewListPage,\n  );\n\nexport const OverviewListPage: React.FC = (props) => {\n  return <AsyncComponent loader={OverviewListPageLoader} {...props} />;\n};\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle, Button } from '@patternfly/react-core';\nimport DetailsBody from '@console/shared/src/components/dashboard/details-card/DetailsBody';\nimport { OverviewDetailItem } from '@openshift-console/plugin-shared/src';\nimport { getName, getRequester, GreenCheckCircleIcon } from '@console/shared';\nimport { LabelList, resourcePathFromModel } from '../../utils';\nimport { ProjectModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { Link } from 'react-router-dom-v5-compat';\n\nexport const DetailsCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const keys = _.keys(obj.metadata.labels).sort();\n  const labelsSubset = _.take(keys, 3);\n  const firstThreelabels = _.pick(obj.metadata.labels, labelsSubset);\n  const description = obj.metadata.annotations?.['openshift.io/description'];\n  const detailsLink = `${resourcePathFromModel(ProjectModel, obj.metadata.name)}/details`;\n  const serviceMeshEnabled = obj.metadata?.labels?.['maistra.io/member-of'];\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"details-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={detailsLink} data-test=\"details-card-view-all\">\n                {t('public~View all')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Details')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <DetailsBody>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Name')}>\n            {getName(obj)}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Requester')}>\n            {getRequester(obj) || <span className=\"text-muted\">{t('public~No requester')}</span>}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Labels')}>\n            <div className=\"co-project-dashboard__details-labels\">\n              <LabelList kind={ProjectModel.kind} labels={firstThreelabels} />\n              {keys.length > 3 && (\n                <Button variant=\"link\">\n                  <Link to={detailsLink}>{t('public~View all')}</Link>\n                </Button>\n              )}\n            </div>\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Description')}>\n            <span\n              className={cx({\n                'text-muted': !description,\n                'co-project-dashboard-details-card__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </span>\n          </OverviewDetailItem>\n          {serviceMeshEnabled && (\n            <OverviewDetailItem isLoading={!obj} title={t('public~Service mesh')}>\n              <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n            </OverviewDetailItem>\n          )}\n        </DetailsBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle, Gallery } from '@patternfly/react-core';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport { Status } from '@console/shared';\nimport { LoadingInline } from '@console/internal/components/utils/status-box';\nimport {\n  DashboardsOverviewHealthResourceSubsystem,\n  DashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthSubsystem,\n  useExtensions,\n} from '@console/plugin-sdk';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceHealthItem } from '../dashboards-page/cluster-dashboard/health-item';\n\nimport { DashboardAlerts } from '../dashboards-page/cluster-dashboard/status-card';\n\nexport const StatusCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const filterSubsystems = (subsystems: DashboardsOverviewHealthSubsystem[]) =>\n    subsystems.filter(isDashboardsOverviewHealthResourceSubsystem);\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const subsystem: DashboardsOverviewHealthResourceSubsystem = React.useMemo(\n    () =>\n      filterSubsystems(subsystemExtensions).find(\n        (s) => s.properties.title === 'Image Vulnerabilities',\n      ),\n    [subsystemExtensions],\n  );\n  const {\n    metadata: { name: namespace },\n  } = obj;\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"status-card\" className=\"co-overview-card--gradient\">\n      <CardHeader>\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      {obj ? (\n        <>\n          <HealthBody>\n            <Gallery className=\"co-overview-status__health\" hasGutter>\n              <div className=\"co-status-card__health-item\" data-test=\"project-status\">\n                <Status status={obj.status?.phase} className=\"co-icon-and-text--lg\" />\n              </div>\n              {subsystem && (\n                <ResourceHealthItem subsystem={subsystem.properties} namespace={namespace} />\n              )}\n            </Gallery>\n          </HealthBody>\n          <DashboardAlerts labelSelector={{ namespace }} />\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport {\n  isProjectOverviewUtilizationItem,\n  ProjectOverviewUtilizationItem,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeDecimalBytesPerSec,\n  humanizeNumber,\n} from '../../utils';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  getUtilizationQueries,\n  ProjectQueries,\n  getMultilineQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport {\n  PrometheusUtilizationItem,\n  PrometheusMultilineUtilizationItem,\n} from '../dashboards-page/cluster-dashboard/utilization-card';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport {\n  CPUPopover,\n  FilesystemPopover,\n  MemoryPopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  ProjectUtilizationContext,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const UtilizationCard: React.FC = () => {\n  const { t } = useTranslation();\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = obj?.metadata?.name;\n  const [queries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(projectName), getMultilineQueries(projectName)],\n    [projectName],\n  );\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ProjectOverviewUtilizationItem>(\n    isProjectOverviewUtilizationItem,\n  );\n\n  return (\n    <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <UtilizationDurationDropdown />\n            </>\n          ),\n          hasNoOffset: false,\n          className: undefined,\n        }}\n      >\n        <CardTitle>{t('public~Utilization')}</CardTitle>\n      </CardHeader>\n      <UtilizationBody>\n        <ProjectUtilizationContext.Provider value={projectName}>\n          <PrometheusUtilizationItem\n            title={t('public~CPU')}\n            humanizeValue={humanizeCpuCores}\n            utilizationQuery={queries[ProjectQueries.CPU_USAGE]}\n            requestQuery={queries[ProjectQueries.CPU_REQUESTS]}\n            TopConsumerPopover={CPUPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Memory')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.MEMORY_USAGE]}\n            requestQuery={queries[ProjectQueries.MEMORY_REQUESTS]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={MemoryPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Filesystem')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.FILESYSTEM_USAGE]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={FilesystemPopover}\n            namespace={projectName}\n          />\n          <PrometheusMultilineUtilizationItem\n            title={t('public~Network transfer')}\n            humanizeValue={humanizeDecimalBytesPerSec}\n            queries={multilineQueries[ProjectQueries.NETWORK_UTILIZATION]}\n            TopConsumerPopovers={networkPopovers}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Pod count')}\n            humanizeValue={humanizeNumber}\n            utilizationQuery={queries[ProjectQueries.POD_COUNT]}\n            namespace={projectName}\n          />\n          {dynamicItemExtensions.map(({ uid, properties }) => (\n            <PrometheusUtilizationItem\n              key={uid}\n              title={properties.title}\n              humanizeValue={properties.humanize}\n              utilizationQuery={properties.getUtilizationQuery(projectName)}\n              requestQuery={properties.getRequestQuery?.(projectName)}\n              limitQuery={properties.getLimitQuery?.(projectName)}\n              totalQuery={properties.getTotalQuery?.(projectName)}\n              namespace={projectName}\n              TopConsumerPopover={properties.TopConsumerPopover}\n            />\n          ))}\n        </ProjectUtilizationContext.Provider>\n      </UtilizationBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport {\n  getTop25ConsumerQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport { ProjectModel, PodModel, NodeModel } from '../../../../models';\nimport {\n  humanizeCpuCores,\n  humanizeBinaryBytes,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils';\n\nexport const ClusterUtilizationContext = React.createContext('.+');\n\nconst useConsumers = (\n  nsQuery: OverviewQuery,\n  podQuery: OverviewQuery,\n  nodeQuery: OverviewQuery,\n) => {\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  return React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[nsQuery],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[podQuery],\n        model: PodModel,\n        metric: 'pod',\n      },\n      {\n        query: consumerQueries[nodeQuery],\n        model: NodeModel,\n        metric: 'instance',\n      },\n    ];\n  }, [nodeQuery, nodeType, nsQuery, podQuery]);\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_CPU,\n    OverviewQuery.PODS_BY_CPU,\n    OverviewQuery.NODES_BY_CPU,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeCpuCores}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_MEMORY,\n    OverviewQuery.PODS_BY_MEMORY,\n    OverviewQuery.NODES_BY_MEMORY,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const StoragePopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_STORAGE,\n    OverviewQuery.PODS_BY_STORAGE,\n    OverviewQuery.NODES_BY_STORAGE,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const PodPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  const consumers = React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[OverviewQuery.PROJECTS_BY_PODS],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[OverviewQuery.NODES_BY_PODS],\n        model: NodeModel,\n        metric: 'node',\n      },\n    ];\n  }, [nodeType]);\n  return (\n    <ConsumerPopover\n      title={t('public~Pod count')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeNumber}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_IN,\n    OverviewQuery.PODS_BY_NETWORK_IN,\n    OverviewQuery.NODES_BY_NETWORK_IN,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_OUT,\n    OverviewQuery.PODS_BY_NETWORK_OUT,\n    OverviewQuery.NODES_BY_NETWORK_OUT,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport {\n  ProjectQueries,\n  getTopConsumerQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport { PodModel } from '../../../models';\nimport { humanizeCpuCores, humanizeBinaryBytes, humanizeDecimalBytesPerSec } from '../../utils';\n\nexport const ProjectUtilizationContext = React.createContext('');\n\nconst useConsumers = (query: ProjectQueries) => {\n  const namespace = React.useContext(ProjectUtilizationContext);\n  const consumers = React.useMemo(\n    () => [\n      {\n        query: getTopConsumerQueries(namespace)[query],\n        model: PodModel,\n        metric: 'pod',\n      },\n    ],\n    [query, namespace],\n  );\n  return {\n    consumers,\n    namespace,\n  };\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_CPU);\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      humanize={humanizeCpuCores}\n      {...consumers}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_MEMORY);\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const FilesystemPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_FILESYSTEM);\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_IN);\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_OUT);\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport {\n  PodModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  PersistentVolumeClaimModel,\n  ServiceModel,\n  StatefulSetModel,\n  RouteModel,\n  ConfigMapModel,\n  SecretModel,\n  VolumeSnapshotModel,\n} from '../../../models';\nimport {\n  ResourceInventoryItem,\n  StatusGroupMapper,\n} from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport {\n  getPodStatusGroups,\n  getPVCStatusGroups,\n  getVSStatusGroups,\n} from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { FirehoseResult, FirehoseResource, useAccessReview } from '../../utils';\nimport { K8sKind, referenceForModel } from '../../../module/k8s';\nimport { getName } from '@console/shared';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  useExtensions,\n  ProjectDashboardInventoryItem,\n  isProjectDashboardInventoryItem,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsProjectOverviewInventoryItem as DynamicProjectDashboardInventoryItem,\n  isDashboardsProjectOverviewInventoryItem as isDynamicProjectDashboardInventoryItem,\n  K8sResourceCommon,\n  WatchK8sResources,\n  ProjectOverviewInventoryItem,\n  isProjectOverviewInventoryItem,\n} from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\n\nconst createFirehoseResource = (model: K8sKind, projectName: string): FirehoseResource => ({\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  isList: true,\n  prop: 'resource',\n  namespace: projectName,\n});\n\nconst ProjectInventoryItem = withDashboardResources(\n  ({\n    projectName,\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    model,\n    mapper,\n    additionalResources,\n    additionalDynamicResources,\n  }: ProjectInventoryItemProps) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const resource = createFirehoseResource(model, projectName);\n        watchK8sResource(resource);\n        if (additionalResources) {\n          additionalResources.forEach((r) => watchK8sResource({ ...r, namespace: projectName }));\n        }\n        return () => {\n          stopWatchK8sResource(resource);\n          if (additionalResources) {\n            additionalResources.forEach(stopWatchK8sResource);\n          }\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName, model, additionalResources]);\n\n    const resourceData = _.get(resources.resource, 'data', []) as FirehoseResult['data'];\n    const resourceLoaded = _.get(resources.resource, 'loaded');\n    const resourceLoadError = _.get(resources.resource, 'loadError');\n\n    const additionalResourcesData = additionalResources\n      ? additionalResources.reduce((acc, r) => {\n          acc[r.prop] = _.get(resources[r.prop], 'data');\n          return acc;\n        }, {})\n      : {};\n    const additionalResourcesLoaded = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .every((r) => _.get(resources[r.prop], 'loaded'))\n      : true;\n    const additionalResourcesLoadError = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .some((r) => !!_.get(resources[r.prop], 'loadError'))\n      : false;\n\n    const dynamicResources = useK8sWatchResources(additionalDynamicResources || {});\n    const dynamicResourcesError = Object.values(dynamicResources).find((r) => r.loadError)\n      ?.loadError;\n    const dynamicResourcesLoaded = Object.keys(dynamicResources).every(\n      (key) => dynamicResources[key].loaded,\n    );\n\n    return (\n      <StackItem>\n        <ResourceInventoryItem\n          kind={model}\n          isLoading={\n            !projectName || !resourceLoaded || !additionalResourcesLoaded || !dynamicResourcesLoaded\n          }\n          namespace={projectName}\n          error={!!resourceLoadError || additionalResourcesLoadError || dynamicResourcesError}\n          resources={resourceData}\n          additionalResources={additionalResourcesData}\n          mapper={mapper}\n          dataTest=\"resource-inventory-item\"\n        />\n      </StackItem>\n    );\n  },\n);\n\nexport const InventoryCard = () => {\n  const itemExtensions = useExtensions<ProjectDashboardInventoryItem>(\n    isProjectDashboardInventoryItem,\n  );\n  const [dynamicItemExtensions] = useResolvedExtensions<DynamicProjectDashboardInventoryItem>(\n    isDynamicProjectDashboardInventoryItem,\n  );\n  const [inventoryExtensions] = useResolvedExtensions<ProjectOverviewInventoryItem>(\n    isProjectOverviewInventoryItem,\n  );\n\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    namespace: projectName,\n    verb: 'list',\n  });\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"inventory-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Inventory')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Stack hasGutter>\n          <ProjectInventoryItem projectName={projectName} model={DeploymentModel} />\n          <ProjectInventoryItem projectName={projectName} model={DeploymentConfigModel} />\n          <ProjectInventoryItem projectName={projectName} model={StatefulSetModel} />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PodModel}\n            mapper={getPodStatusGroups}\n          />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PersistentVolumeClaimModel}\n            mapper={getPVCStatusGroups}\n          />\n          <ProjectInventoryItem projectName={projectName} model={ServiceModel} />\n          <ProjectInventoryItem projectName={projectName} model={RouteModel} />\n          <ProjectInventoryItem projectName={projectName} model={ConfigMapModel} />\n          {canListSecrets && <ProjectInventoryItem projectName={projectName} model={SecretModel} />}\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={VolumeSnapshotModel}\n            mapper={getVSStatusGroups}\n          />\n          {itemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalResources={item.properties.additionalResources}\n            />\n          ))}\n          {dynamicItemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalDynamicResources={item.properties.additionalResources}\n            />\n          ))}\n          {inventoryExtensions.map(({ uid, properties: { component: Component } }) => (\n            <ErrorBoundary key={uid}>\n              <StackItem>\n                <Component projectName={projectName} />\n              </StackItem>\n            </ErrorBoundary>\n          ))}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\ntype ProjectInventoryItemProps = DashboardItemProps & {\n  projectName: string;\n  model: K8sKind;\n  mapper?: StatusGroupMapper;\n  additionalResources?: FirehoseResource[];\n  additionalDynamicResources?: WatchK8sResources<{\n    [key: string]: K8sResourceCommon[];\n  }>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport ActivityBody, {\n  RecentEventsBody,\n  OngoingActivityBody,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { FirehoseResource, FirehoseResult } from '../../utils';\nimport { EventModel } from '../../../models';\nimport { EventKind, K8sKind } from '../../../module/k8s';\nimport {\n  useExtensions,\n  DashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsOverviewResourceActivity as DynamicDashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity as isDynamicDashboardsOverviewResourceActivity,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { uniqueResource } from '../dashboards-page/cluster-dashboard/utils';\nimport { RootState } from '../../../redux';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { getName } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\nconst getEventsResource = (projectName: string): FirehoseResource => ({\n  isList: true,\n  kind: EventModel.kind,\n  prop: 'events',\n  namespace: projectName,\n});\n\nconst RecentEvent = withDashboardResources<RecentEventProps>(\n  ({ watchK8sResource, stopWatchK8sResource, resources, projectName, viewEvents }) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const eventsResource = getEventsResource(projectName);\n        watchK8sResource(eventsResource);\n        return () => {\n          stopWatchK8sResource(eventsResource);\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName]);\n    return (\n      <RecentEventsBody\n        events={resources.events as FirehoseResult<EventKind[]>}\n        moreLink={viewEvents}\n      />\n    );\n  },\n);\n\nconst mapStateToProps = (state: RootState): OngoingActivityReduxProps => ({\n  models: state.k8s.getIn(['RESOURCES', 'models']) as ImmutableMap<string, K8sKind>,\n});\n\nconst OngoingActivity = connect(mapStateToProps)(\n  withDashboardResources(\n    ({\n      watchK8sResource,\n      stopWatchK8sResource,\n      resources,\n      projectName,\n      models,\n    }: DashboardItemProps & OngoingActivityProps) => {\n      const resourceActivityExtensions = useExtensions<DashboardsOverviewResourceActivity>(\n        isDashboardsOverviewResourceActivity,\n      );\n      const [dynamicResourceActivityExtensions] = useResolvedExtensions<\n        DynamicDashboardsOverviewResourceActivity\n      >(isDynamicDashboardsOverviewResourceActivity);\n\n      const resourceActivities = React.useMemo(\n        () =>\n          [...resourceActivityExtensions, ...dynamicResourceActivityExtensions].filter((e) => {\n            const model = models.get(e.properties.k8sResource.kind);\n            return model && model.namespaced;\n          }),\n        [resourceActivityExtensions, dynamicResourceActivityExtensions, models],\n      );\n\n      React.useEffect(() => {\n        if (projectName) {\n          resourceActivities.forEach((a, index) => {\n            watchK8sResource(\n              uniqueResource({ ...a.properties.k8sResource, namespace: projectName }, index),\n            );\n          });\n          return () => {\n            resourceActivities.forEach((a, index) => {\n              stopWatchK8sResource(uniqueResource(a.properties.k8sResource, index));\n            });\n          };\n        }\n      }, [watchK8sResource, stopWatchK8sResource, projectName, resourceActivities]);\n\n      const allResourceActivities = React.useMemo(\n        () =>\n          _.flatten(\n            resourceActivities.map((a, index) => {\n              const k8sResources = _.get(\n                resources,\n                [uniqueResource(a.properties.k8sResource, index).prop, 'data'],\n                [],\n              ) as FirehoseResult['data'];\n              return k8sResources\n                .filter((r) => (a.properties.isActivity ? a.properties.isActivity(r) : true))\n                .map((r) => ({\n                  resource: r,\n                  timestamp: a.properties.getTimestamp ? a.properties.getTimestamp(r) : null,\n                  loader: (a as DashboardsOverviewResourceActivity)?.properties?.loader,\n                  component: (a as ResolvedExtension<DynamicDashboardsOverviewResourceActivity>)\n                    ?.properties?.component,\n                }));\n            }),\n          ),\n        [resourceActivities, resources],\n      );\n\n      const resourcesLoaded = React.useMemo(\n        () =>\n          resourceActivities.every((a, index) =>\n            _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'loaded']),\n          ),\n        [resourceActivities, resources],\n      );\n\n      return (\n        <OngoingActivityBody\n          loaded={projectName && resourcesLoaded && models.size !== 0}\n          resourceActivities={allResourceActivities}\n        />\n      );\n    },\n  ),\n);\n\nexport const ActivityCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const viewEvents = `/k8s/ns/${projectName}/events`;\n  const { t } = useTranslation();\n  return (\n    <Card\n      data-test-id=\"activity-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={viewEvents} data-test=\"view-events-link\">\n                {t('public~View events')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Activity')}</CardTitle>\n      </CardHeader>\n      <ActivityBody className=\"co-project-dashboard__activity-body\">\n        <OngoingActivity projectName={projectName} />\n        <RecentEvent projectName={projectName} viewEvents={viewEvents} />\n      </ActivityBody>\n    </Card>\n  );\n};\n\ntype RecentEventProps = DashboardItemProps & {\n  projectName: string;\n  viewEvents: string;\n};\n\ntype OngoingActivityReduxProps = {\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype OngoingActivityProps = OngoingActivityReduxProps & {\n  projectName: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle } from '@patternfly/react-core';\nimport LauncherBody from '@console/shared/src/components/dashboard/launcher-card/LauncherBody';\nimport LauncherItem from '@console/shared/src/components/dashboard/launcher-card/LauncherItem';\nimport { ProjectDashboardContext } from './project-dashboard-context';\n\nexport const LauncherCard: React.FC = () => {\n  const { namespaceLinks } = React.useContext(ProjectDashboardContext);\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"launcher-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Launcher')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <LauncherBody>\n          {_.sortBy(namespaceLinks, 'spec.text').map((nl) => (\n            <LauncherItem key={nl.metadata.uid} consoleLink={nl} />\n          ))}\n        </LauncherBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\n\nimport './launcher-card.scss';\n\nconst LauncherBody: React.FC = ({ children }) => (\n  <div className=\"co-launcher-card__body\">{children}</div>\n);\n\nexport default LauncherBody;\n","import * as React from 'react';\nimport { ExternalLink } from '@console/internal/components/utils/link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nconst LauncherItem: React.FC<LauncherItemProps> = ({ consoleLink }) => (\n  <ExternalLink\n    additionalClassName=\"co-launcher-card__item\"\n    href={consoleLink.spec.href}\n    text={consoleLink.spec.text}\n    dataTestID=\"launcher-item\"\n  />\n);\n\nexport default LauncherItem;\n\ntype LauncherItemProps = {\n  consoleLink: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport ResourceQuotaBody from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody';\nimport ResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem';\nimport AppliedClusterResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem';\nimport { AppliedClusterResourceQuotaModel, ResourceQuotaModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceQuotaKind, AppliedClusterResourceQuotaKind } from '../../../module/k8s';\n\nexport const ResourceQuotaCard = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n\n  const [quotas, rqLoaded, rqLoadError] = useK8sWatchResource<ResourceQuotaKind[]>({\n    groupVersionKind: {\n      kind: ResourceQuotaModel.kind,\n      version: ResourceQuotaModel.apiVersion,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const [clusterQuotas, acrqLoaded, acrqLoadError] = useK8sWatchResource<\n    AppliedClusterResourceQuotaKind[]\n  >({\n    groupVersionKind: {\n      kind: AppliedClusterResourceQuotaModel.kind,\n      version: AppliedClusterResourceQuotaModel.apiVersion,\n      group: AppliedClusterResourceQuotaModel.apiGroup,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"resource-quotas-card\">\n      <CardHeader>\n        <CardTitle>{t('public~ResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody error={!!rqLoadError} isLoading={!rqLoaded}>\n          {quotas.length ? (\n            <Stack hasGutter>\n              {quotas.map((rq) => (\n                <StackItem key={rq.metadata.uid}>\n                  <ResourceQuotaItem resourceQuota={rq} />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n      <CardHeader>\n        <CardTitle>{t('public~AppliedClusterResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody\n          error={!!acrqLoadError}\n          isLoading={!acrqLoaded}\n          noText={t('public~No AppliedClusterResourceQuotas')}\n        >\n          {clusterQuotas.length ? (\n            <Stack hasGutter>\n              {clusterQuotas.map((cq) => (\n                <StackItem key={cq.metadata.uid}>\n                  <AppliedClusterResourceQuotaItem\n                    resourceQuota={cq}\n                    namespace={obj.metadata.name}\n                  />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './resource-quota-card.scss';\n\nconst ResourceQuotaBody: React.FC<ResourceQuotaBodyProps> = ({\n  error,\n  isLoading,\n  noText,\n  children,\n}) => {\n  let body: React.ReactNode;\n  const { t } = useTranslation();\n  if (error) {\n    body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n  } else if (isLoading) {\n    body = <div className=\"skeleton-quota\" />;\n  } else if (!React.Children.count(children)) {\n    body = <div className=\"text-secondary\">{noText || t('console-shared~No ResourceQuotas')}</div>;\n  }\n\n  return <>{body || children}</>;\n};\n\nexport default ResourceQuotaBody;\n\ntype ResourceQuotaBodyProps = {\n  error: boolean;\n  isLoading: boolean;\n  noText?: string;\n};\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { ResourceQuotaModel } from '@console/internal/models';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst ResourceQuotaItem: React.FC<ResourceQuotaItemProps> = ({ resourceQuota }) => {\n  const resources = Object.keys(resourceQuota.status?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n\n  const scopes = resourceQuota.spec?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: ResourceQuotaModel.kind,\n                  version: ResourceQuotaModel.apiVersion,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={resourceQuota.metadata.namespace}\n                inline\n                truncate\n                dataTest=\"resource-quota-link\"\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary hard={resourceQuota.status?.hard} used={resourceQuota.status?.used} />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <ResourceQuotaCharts resourceQuota={resourceQuota} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ResourceQuotaItem;\n\ntype ResourceQuotaItemProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { ClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ClusterResourceQuotaChartsProps = {\n  clusterResourceQuota: ClusterResourceQuotaKind;\n};\n\nconst ClusterResourceQuotaCharts = ({\n  clusterResourceQuota,\n}: ClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(clusterResourceQuota.status?.total?.hard ?? {}).map((resourceName) => {\n    const clusterHard = clusterResourceQuota.status.total.hard[resourceName];\n    const clusterUsed = clusterResourceQuota.status.total.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({\n      resourceName,\n      used: clusterUsed,\n      hard: clusterHard,\n    });\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Used',\n              y: percent,\n            },\n            {\n              x: 'Unused',\n              y: 100 - percent,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ClusterResourceQuotaCharts;\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { AppliedClusterResourceQuotaModel } from '@console/internal/models';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst AppliedClusterResourceQuotaItem: React.FC<AppliedClusterResourceQuotaItemProps> = ({\n  resourceQuota,\n  namespace,\n}) => {\n  const resources = Object.keys(resourceQuota.status?.total?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n  const scopes = resourceQuota?.spec?.quota?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen: boolean) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: AppliedClusterResourceQuotaModel.kind,\n                  version: AppliedClusterResourceQuotaModel.apiVersion,\n                  group: AppliedClusterResourceQuotaModel.apiGroup,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={namespace}\n                inline\n                truncate\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary\n            hard={resourceQuota.status?.total?.hard}\n            used={resourceQuota.status?.total?.used}\n          />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <AppliedClusterResourceQuotaCharts\n            appliedClusterResourceQuota={resourceQuota}\n            namespace={namespace}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AppliedClusterResourceQuotaItem;\n\ntype AppliedClusterResourceQuotaItemProps = {\n  resourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n","import { IBuild as IBuildV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/Build';\nimport { IBuildRun as IBuildRunV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildRun';\nimport { useLocation, useParams } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { useFlag } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { K8sResourceCondition, K8sResourceKind } from '@console/internal/module/k8s';\nimport { useTabbedTableBreadcrumbsFor } from '@console/shared';\nimport { getBuildRunStatus } from './components/buildrun-status/BuildRunStatus';\nimport { BUILDRUN_TO_RESOURCE_MAP_LABEL } from './const';\nimport {\n  BuildModel,\n  BuildModelV1Alpha1,\n  BuildRunModel,\n  BuildRunModelV1Alpha1,\n  BuildStrategyModel,\n  BuildStrategyModelV1Alpha1,\n  ClusterBuildStrategyModel,\n  ClusterBuildStrategyModelV1Alpha1,\n} from './models';\nimport { Build, BuildRun, ComputedBuildRunStatus } from './types';\n\nexport type LatestBuildRunStatus = {\n  latestBuildRun: BuildRun;\n  status: ComputedBuildRunStatus;\n};\n\nexport interface Runs {\n  data?: BuildRun[];\n}\n\nexport const getLatestRun = (runs: Runs, field: string): BuildRun => {\n  if (!runs || !runs.data || !(runs.data.length > 0) || !field) {\n    return null;\n  }\n\n  let latestRun = runs.data[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.data.length; i++) {\n      latestRun =\n        runs.data[i]?.metadata?.[field] &&\n        new Date(runs.data[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs.data[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.data.length; i++) {\n      latestRun =\n        runs.data[i]?.status?.[field] &&\n        new Date(runs.data[i].status[field]) > new Date(latestRun.status[field])\n          ? runs.data[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs.data[runs.data.length - 1];\n  }\n  return latestRun;\n};\n\nexport const getLatestBuildRunStatusforDeployment = (\n  buildRuns: BuildRun[],\n  resource: K8sResourceKind,\n): LatestBuildRunStatus => {\n  const buildRunsforDeployment = buildRuns.filter(\n    (run) =>\n      run.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] ===\n      resource.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL],\n  );\n\n  if (!buildRunsforDeployment || buildRunsforDeployment.length === 0) {\n    return { latestBuildRun: null, status: ComputedBuildRunStatus.UNKNOWN };\n  }\n\n  const latestBuildRun = getLatestRun({ data: buildRunsforDeployment }, 'creationTimestamp');\n\n  if (!latestBuildRun) {\n    return { latestBuildRun: null, status: ComputedBuildRunStatus.UNKNOWN };\n  }\n\n  const status = getBuildRunStatus(latestBuildRun);\n\n  return {\n    latestBuildRun,\n    status,\n  };\n};\n\nexport const isBuildRunNewerThen = (newBuildRun: BuildRun, prevBuildRun: BuildRun | undefined) => {\n  const prevCreationTime = new Date(prevBuildRun?.metadata?.creationTimestamp);\n  const newCreationTime = new Date(newBuildRun?.metadata?.creationTimestamp);\n  const timeDifference = newCreationTime.getTime() - prevCreationTime.getTime();\n  return timeDifference > 0;\n};\n\nexport const byCreationTime = (left: K8sResourceKind, right: K8sResourceKind): number => {\n  const leftCreationTime = new Date(left?.metadata?.creationTimestamp || Date.now());\n  const rightCreationTime = new Date(right?.metadata?.creationTimestamp || Date.now());\n  return rightCreationTime.getTime() - leftCreationTime.getTime();\n};\n\nexport const isV1Alpha1Resource = (\n  resource: Build | BuildRun,\n): resource is\n  | IBuildV1Alpha1\n  | (IBuildRunV1Alpha1 & { status?: { conditions?: K8sResourceCondition[] } }) => {\n  return resource.apiVersion === 'shipwright.io/v1alpha1';\n};\n\nexport const getBuildNameFromBuildRun = (buildRun: BuildRun) => {\n  if (isV1Alpha1Resource(buildRun)) {\n    return buildRun.spec?.buildRef?.name;\n  }\n  return buildRun.spec?.build?.name;\n};\n\n/**\n * Given two flags that determine the presence of two versions of a CRD,\n * determine which version is enabled.\n *\n * If both flags are enabled, the first model gets priority.\n *\n * @return the K8s model of the CRD that is enabled, or null if neither are enabled\n */\nconst useDetermineModelVersion = (\n  modelOne: K8sModel,\n  modelTwo: K8sModel,\n  modelFlagOne: string,\n  modelFlagTwo: string,\n) => {\n  const flagTwo = useFlag(modelFlagTwo);\n  const flagOne = useFlag(modelFlagOne);\n\n  if (!flagTwo && !flagOne) {\n    return null;\n  }\n\n  return flagOne ? modelOne : modelTwo;\n};\n\n/**\n * @returns latest `BuildModel` model if exists, otherwise v1Alpha1 if it exists, otherwise null\n */\nexport const useBuildModel = () =>\n  useDetermineModelVersion(\n    BuildModel,\n    BuildModelV1Alpha1,\n    'SHIPWRIGHT_BUILD',\n    'SHIPWRIGHT_BUILD_V1ALPHA1',\n  );\n\n/**\n * @returns latest `BuildRunModel` model if exists, otherwise v1Alpha1 if it exists, otherwise null\n */\nexport const useBuildRunModel = () =>\n  useDetermineModelVersion(\n    BuildRunModel,\n    BuildRunModelV1Alpha1,\n    'SHIPWRIGHT_BUILDRUN',\n    'SHIPWRIGHT_BUILDRUN_V1ALPHA1',\n  );\n\n/**\n * @returns latest `BuildStrategyModel` model if exists, otherwise v1Alpha1 if it exists, otherwise null\n */\nexport const useBuildStrategyModel = () =>\n  useDetermineModelVersion(\n    BuildStrategyModel,\n    BuildStrategyModelV1Alpha1,\n    'SHIPWRIGHT_BUILDSTRATEGY',\n    'SHIPWRIGHT_BUILDSTRATEGY_V1ALPHA1',\n  );\n\n/**\n * @returns latest `ClusterBuildStrategyModel` model if exists, otherwise v1Alpha1 if it exists, otherwise null\n */\nexport const useClusterBuildStrategyModel = () =>\n  useDetermineModelVersion(\n    ClusterBuildStrategyModel,\n    ClusterBuildStrategyModelV1Alpha1,\n    'SHIPWRIGHT_CLUSTERBUILDSTRATEGY',\n    'SHIPWRIGHT_CLUSTERBUILDSTRATEGY_V1ALPHA1',\n  );\n\n/** map of shipwright kinds to tab names */\nconst kindToTabMap = {\n  [BuildModel.kind]: 'builds',\n  [BuildModelV1Alpha1.kind]: 'builds',\n  [BuildRunModel.kind]: 'buildruns',\n  [BuildRunModelV1Alpha1.kind]: 'buildruns',\n  [BuildStrategyModel.kind]: 'buildstrategies',\n  [BuildStrategyModelV1Alpha1.kind]: 'buildstrategies',\n  [ClusterBuildStrategyModel.kind]: 'clusterbuildstrategies',\n  [ClusterBuildStrategyModelV1Alpha1.kind]: 'clusterbuildstrategies',\n};\n\n/** convert a resource using a shipwright model to its corresponding k8s model */\nconst resourceToModel = (obj: K8sResourceKind): K8sModel => {\n  if (obj?.apiVersion === 'shipwright.io/v1alpha1') {\n    switch (obj?.kind) {\n      case 'Build':\n        return BuildModelV1Alpha1;\n      case 'BuildRun':\n        return BuildRunModelV1Alpha1;\n      case 'BuildStrategy':\n        return BuildStrategyModelV1Alpha1;\n      case 'ClusterBuildStrategy':\n        return ClusterBuildStrategyModelV1Alpha1;\n      default:\n        return null;\n    }\n  }\n  switch (obj?.kind) {\n    case 'Build':\n      return BuildModel;\n    case 'BuildRun':\n      return BuildRunModel;\n    case 'BuildStrategy':\n      return BuildStrategyModel;\n    case 'ClusterBuildStrategy':\n      return ClusterBuildStrategyModel;\n    default:\n      return null;\n  }\n};\n\nexport const useShipwrightBreadcrumbsFor = (obj: K8sResourceKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    resourceToModel(obj),\n    location,\n    params,\n    'k8s',\n    `shipwright.io/${kindToTabMap[obj.kind]}`,\n    undefined,\n    isAdminPerspective,\n  );\n};\n","import * as _ from 'lodash';\nimport { getProbesData } from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport {\n  DeployImageFormData,\n  GitImportFormData,\n  UploadJarFormData,\n} from '@console/dev-console/src/components/import/import-types';\nimport { getAppLabels, mergeData } from '@console/dev-console/src/utils/resource-label-utils';\nimport { ImportStrategy } from '@console/git-service/src';\nimport {\n  K8sResourceKind,\n  ImagePullPolicy,\n  k8sGet,\n  k8sCreate,\n  k8sUpdate,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { NameValuePair } from 'packages/console-shared/src';\nimport { ServiceModel, DomainMappingModel } from '../models';\nimport { DomainMappingResponse, DomainMappingResponseAction } from '../types';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\nexport const getKnativeServiceDepResource = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamUrl: string,\n  imageStreamName?: string,\n  imageStreamTag?: string,\n  imageNamespace?: string,\n  annotations?: { [name: string]: string },\n  originalKnativeService?: K8sResourceKind,\n  generatedImageStreamName?: string,\n): K8sResourceKind => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    runtimeIcon,\n    serverless: { scaling },\n    limits,\n    route: { unknownTargetPort, create, defaultUnknownPort },\n    labels,\n    image: { tag: imageTag },\n    deployment: {\n      env,\n      triggers: { image: imagePolicy },\n    },\n    healthChecks,\n    resources,\n    formType,\n  } = formData;\n  const { fileUpload } = formData as UploadJarFormData;\n  const selectedStrategy = formData?.import?.selectedStrategy;\n\n  const contTargetPort = parseInt(unknownTargetPort, 10) || defaultUnknownPort;\n  const imgPullPolicy = imagePolicy ? ImagePullPolicy.Always : ImagePullPolicy.IfNotPresent;\n  const {\n    concurrencylimit,\n    concurrencytarget,\n    minpods,\n    maxpods,\n    autoscale: { autoscalewindow, autoscalewindowUnit },\n    concurrencyutilization,\n  } = scaling;\n  const {\n    cpu: {\n      request: cpuRequest,\n      requestUnit: cpuRequestUnit,\n      limit: cpuLimit,\n      limitUnit: cpuLimitUnit,\n    },\n    memory: {\n      request: memoryRequest,\n      requestUnit: memoryRequestUnit,\n      limit: memoryLimit,\n      limitUnit: memoryLimitUnit,\n    },\n  } = limits;\n  const defaultLabel = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag: imageStreamTag || imageTag,\n    namespace: imageNamespace,\n    runtimeIcon,\n  });\n  delete defaultLabel.app;\n  if (fileUpload) {\n    const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n    if (jArgsIndex !== -1) {\n      if (fileUpload.javaArgs !== '') {\n        (env[jArgsIndex] as NameValuePair).value = fileUpload.javaArgs;\n      } else {\n        env.splice(jArgsIndex, 1);\n      }\n    } else if (fileUpload.javaArgs !== '') {\n      env.push({ name: 'JAVA_ARGS', value: fileUpload.javaArgs });\n    }\n  }\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n        ...labels,\n        ...(formType === 'serverlessFunction' && { 'function.knative.dev': 'true' }),\n        ...(!create && { 'networking.knative.dev/visibility': `cluster-local` }),\n        ...(((formData as GitImportFormData).pipeline?.enabled || generatedImageStreamName) && {\n          'app.kubernetes.io/name': name,\n        }),\n        ...(selectedStrategy &&\n          selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION && {\n            'function.knative.dev': 'true',\n          }),\n      },\n      annotations: fileUpload ? { ...annotations, jarFileName: fileUpload.name } : annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: {\n            ...defaultLabel,\n            ...labels,\n            'app.kubernetes.io/name': generatedImageStreamName\n              ? formData.name\n              : labels['app.kubernetes.io/name'],\n          },\n          annotations: {\n            ...(concurrencytarget && {\n              'autoscaling.knative.dev/target': `${concurrencytarget}`,\n            }),\n            ...(minpods && { 'autoscaling.knative.dev/min-scale': `${minpods}` }),\n            ...(maxpods && { 'autoscaling.knative.dev/max-scale': `${maxpods}` }),\n            ...(autoscalewindow && {\n              'autoscaling.knative.dev/window': `${autoscalewindow}${autoscalewindowUnit}`,\n            }),\n            ...(concurrencyutilization && {\n              'autoscaling.knative.dev/target-utilization-percentage': `${concurrencyutilization}`,\n            }),\n          },\n        },\n        spec: {\n          ...(concurrencylimit && { containerConcurrency: concurrencylimit }),\n          containers: [\n            {\n              name,\n              image: `${imageStreamUrl}`,\n              ...(contTargetPort && {\n                ports: [\n                  {\n                    containerPort: contTargetPort,\n                  },\n                ],\n              }),\n              imagePullPolicy: imgPullPolicy,\n              securityContext: {\n                allowPrivilegeEscalation: false,\n                capabilities: {\n                  drop: ['ALL'],\n                },\n                runAsNonRoot: true,\n                seccompProfile: {\n                  type: 'RuntimeDefault',\n                },\n              },\n              env,\n              resources: {\n                ...((cpuLimit || memoryLimit) && {\n                  limits: {\n                    ...(cpuLimit && { cpu: `${cpuLimit}${cpuLimitUnit}` }),\n                    ...(memoryLimit && { memory: `${memoryLimit}${memoryLimitUnit}` }),\n                  },\n                }),\n                ...((cpuRequest || memoryRequest) && {\n                  requests: {\n                    ...(cpuRequest && { cpu: `${cpuRequest}${cpuRequestUnit}` }),\n                    ...(memoryRequest && { memory: `${memoryRequest}${memoryRequestUnit}` }),\n                  },\n                }),\n              },\n              ...getProbesData(healthChecks, resources),\n            },\n          ],\n        },\n      },\n    },\n  };\n  let knativeServiceUpdated = {};\n  if (!_.isEmpty(originalKnativeService)) {\n    knativeServiceUpdated = _.omit(originalKnativeService, [\n      'status',\n      'spec.template.metadata.name',\n      'spec.template.spec.containers',\n    ]);\n  }\n  const knativeDeployResource = mergeData(knativeServiceUpdated || {}, newKnativeDeployResource);\n\n  return knativeDeployResource;\n};\n\nconst getDomainMappingDeleteList = (\n  ksvcName: string,\n  allDomainMapping: K8sResourceKind[],\n  selDomainMappingNames: string[],\n): DomainMappingResponse[] => {\n  return allDomainMapping\n    .filter((dmRes) => dmRes.spec?.ref?.name === ksvcName)\n    .filter((dmSvc) => !selDomainMappingNames?.includes(dmSvc.metadata.name))\n    .map((dmDel) => ({\n      action: DomainMappingResponseAction.Delete,\n      resource: dmDel,\n    }));\n};\n\nconst formDomainMappingStruct = (\n  name: string,\n  knativeSvcResource: K8sResourceKind,\n  curDomainMapping?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    kind,\n    apiVersion,\n    metadata: { name: svcName, namespace },\n  } = knativeSvcResource;\n  return {\n    ...(curDomainMapping\n      ? { ...curDomainMapping }\n      : {\n          kind: DomainMappingModel.kind,\n          apiVersion: `${DomainMappingModel.apiGroup}/${DomainMappingModel.apiVersion}`,\n          metadata: {\n            name,\n            namespace,\n          },\n        }),\n    spec: {\n      ref: {\n        name: svcName,\n        kind,\n        apiVersion,\n      },\n    },\n  };\n};\n\nexport const getDomainMappingResources = (\n  knativeSvcResource: K8sResourceKind,\n  selectedDomainMapping: string[],\n): Promise<DomainMappingResponse[]> => {\n  const {\n    metadata: { name, namespace },\n  } = knativeSvcResource;\n  const domainMappingResources = [];\n  return k8sGet(DomainMappingModel, null, namespace)\n    .then((res) => {\n      const allDomainMappingList = res.items;\n      if (!selectedDomainMapping?.length && !allDomainMappingList?.length) {\n        return Promise.resolve([]);\n      }\n\n      // form domain mapping to be deleted\n      const dmDeleteList = getDomainMappingDeleteList(\n        name,\n        allDomainMappingList,\n        selectedDomainMapping,\n      );\n      domainMappingResources.push(...dmDeleteList);\n\n      // form domain mapping to be created or updated\n      const dmCreateUpdateList = selectedDomainMapping.map((domainName) => {\n        const curDomainMapping = allDomainMappingList.find(\n          (curDomain) => curDomain.metadata.name === domainName,\n        );\n        let domainMappingResourceData: DomainMappingResponse;\n        if (curDomainMapping) {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Update,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource, curDomainMapping),\n          };\n        } else {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Create,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource),\n          };\n        }\n        return domainMappingResourceData;\n      });\n      domainMappingResources.push(...dmCreateUpdateList);\n\n      return domainMappingResources;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to get domain mapping resources', err);\n      return domainMappingResources;\n    });\n};\n\nexport const getDomainMappingRequests = async (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  knativeSvcResource: K8sResourceKind,\n  dryRun: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const {\n    serverless: { domainMapping: selectedDomainMapping = [] },\n  } = formData;\n  const domainMappingResources = await getDomainMappingResources(knativeSvcResource, [\n    ...new Set(selectedDomainMapping.map((dm) => dm.replace(/ *\\([^)]*\\) */g, ''))),\n  ]);\n  const requests: Promise<K8sResourceKind>[] = [];\n  domainMappingResources.length &&\n    domainMappingResources.forEach(({ action, resource: dmRes }) => {\n      switch (action) {\n        case DomainMappingResponseAction.Create:\n          requests.push(k8sCreate(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Update:\n          requests.push(k8sUpdate(DomainMappingModel, dmRes, null, null, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Delete:\n          requests.push(k8sKill(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        default:\n          break;\n      }\n    });\n  return requests;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\n/**\n * ConsoleSample is an extension to customizing OpenShift web console by adding samples.\n */\nexport type ConsoleSample = K8sResourceCommon & {\n  spec: ConsoleSampleSpec;\n};\n\n/**\n * ConsoleSampleSpec is the desired sample for the web console.\n * Samples will appear with their title, descriptions and a badge in a samples catalog.\n */\nexport type ConsoleSampleSpec = {\n  /**\n   * title is the display name of the sample.\n   *\n   * It is required and must be no more than 50 characters in length.\n   */\n  title: string;\n  /**\n   * abstract is a short introduction to the sample.\n   *\n   * It is required and must be no more than 100 characters in length.\n   *\n   * The abstract is shown on the sample card tile below the title and provider\n   * and is limited to three lines of content.\n   */\n  abstract: string;\n  /**\n   * description is a long form explanation of the sample.\n   *\n   * It is required and can have a maximum length of **4096** characters.\n   *\n   * It is a README.md-like content for additional information, links, pre-conditions, and other instructions.\n   * It will be rendered as Markdown so that it can contain line breaks, links, and other simple formatting.\n   */\n  description: string;\n  /**\n   * icon is an optional base64 encoded image and shown beside the sample title.\n   *\n   * The format must follow the [data: URL format](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs)\n   * and can have a maximum size of **10 KB**.\n   *\n   * `data:[<mediatype>][;base64],<base64 encoded image>`\n   *\n   * For example:\n   *\n   * `data:image;base64,` plus the base64 encoded image.\n   *\n   * Vector images can also be used. SVG icons must start with:\n   *\n   * `data:image/svg+xml;base64,` plus the base64 encoded SVG image.\n   *\n   * All sample catalog icons will be shown on a white background (also when the dark theme is used).\n   * The web console ensures that different aspect ratios work correctly.\n   * Currently, the surface of the icon is at most 40x100px.\n   */\n  icon?: string;\n  /**\n   * type is an optional label to group multiple samples.\n   *\n   * It is optional and must be no more than 20 characters in length.\n   *\n   * Recommendation is a singular term like \"Builder Image\", \"Devfile\" or \"Serverless Function\".\n   *\n   * Currently, the type is shown a badge on the sample card tile in the top right corner.\n   */\n  type?: string;\n  /**\n   * provider is an optional label to honor who provides the sample.\n   *\n   * It is optional and must be no more than 50 characters in length.\n   *\n   * A provider can be a company like \"Red Hat\" or an organization like \"CNCF\" or \"Knative\".\n   *\n   * Currently, the provider is only shown on the sample card tile below the title with the prefix \"Provided by \"\n   */\n  provider?: string;\n  /**\n   * tags are optional string values that can be used to find samples in the samples catalog.\n   *\n   * Examples of common tags may be \"Java\", \"Quarkus\", etc.\n   *\n   * They will be displayed on the samples details page.\n   */\n  tags?: string[];\n  /**\n   * source defines where to deploy the sample service from.\n   * The sample may be sourced from an external git repository or container image.\n   */\n  source: ConsoleSampleSource;\n};\n\n/**\n * Union of the sample source types.\n * Unsupported samples types will be ignored in the web console.\n */\nexport type ConsoleSampleSource = ConsoleSampleGitImportSource | ConsoleSampleContainerImportSource;\n\n/** ConsoleSampleGitImportSource allows the user to import code from a git repository. */\nexport type ConsoleSampleGitImportSource = {\n  type: 'GitImport';\n  gitImport: {\n    /** repository contains the reference to the actual Git repository.. */\n    repository: ConsoleSampleGitImportSourceRepository;\n    /** service contains configuration for the Service resource created for this sample. */\n    service?: ConsoleSampleGitImportSourceService;\n  };\n};\n\n/** ConsoleSampleGitImportSourceRepository contains the reference to the actual Git repository. */\nexport type ConsoleSampleGitImportSourceRepository = {\n  /**\n   * url of the Git repository that contains a HTTP service.\n   * The HTTP service must be exposed on the default port (8080) unless\n   * otherwise configured with the port field.\n   *\n   * Only public repositories on GitHub, GitLab and Bitbucket are currently supported:\n   *\n   *   - https://github.com/<org>/<repository>\n   *   - https://gitlab.com/<org>/<repository>\n   *   - https://bitbucket.org/<org>/<repository>\n   *\n   * The url must have a maximum length of 256 characters.\n   */\n  url: string;\n  /**\n   * revision is the git revision at which to clone the git repository\n   * Can be used to clone a specific branch, tag or commit SHA.\n   * Must be at most 256 characters in length.\n   * When omitted the repository's default branch is used.\n   */\n  revision?: string;\n  /**\n   * contextDir is used to specify a directory within the repository to build the\n   * component.\n   * Must start with `/` and have a maximum length of 256 characters.\n   * When omitted, the default value is to build from the root of the repository.\n   */\n  contextDir?: string;\n};\n\n/**\n * ConsoleSampleGitImportSourceService allows the samples author define defaults\n * for the Service created for this sample\n */\nexport type ConsoleSampleGitImportSourceService = {\n  /**\n   * targetPort is the port that the service listens on for HTTP requests.\n   * This port will be used for Service created for this sample.\n   * Port must be in the range 1 to 65535.\n   * Default port is 8080.\n   */\n  targetPort?: number;\n};\n\n/** ConsoleSampleContainerImportSource allows the user import a container image. */\nexport type ConsoleSampleContainerImportSource = {\n  type: 'ContainerImport';\n  containerImport: {\n    /**\n     * reference to a container image that provides a HTTP service.\n     * The service must be exposed on the default port (8080) unless\n     * otherwise configured with the port field.\n     *\n     * Supported formats:\n     *   - <repository-name>/<image-name>\n     *   - docker.io/<repository-name>/<image-name>\n     *   - quay.io/<repository-name>/<image-name>\n     *   - quay.io/<repository-name>/<image-name>@sha256:<image hash>\n     *   - quay.io/<repository-name>/<image-name>:<tag>\n     */\n    image: string;\n    /** service contains configuration for the Service resource created for this sample. */\n    service?: ConsoleSampleContainerImportSourceService;\n  };\n};\n\n/**\n * ConsoleSampleContainerImportSourceService allows the samples author define defaults\n * for the Service created for this sample\n */\nexport type ConsoleSampleContainerImportSourceService = {\n  /**\n   * targetPort is the port that the service listens on for HTTP requests.\n   * This port will be used for Service created for this sample.\n   * Port must be in the range 1 to 65535.\n   * Default port is 8080.\n   */\n  targetPort?: number;\n};\n\nexport function isGitImportSource(\n  source: ConsoleSampleSource,\n): source is ConsoleSampleGitImportSource {\n  return source?.type === 'GitImport' && !!source.gitImport?.repository?.url;\n}\n\nexport function isContainerImportSource(\n  source: ConsoleSampleSource,\n): source is ConsoleSampleContainerImportSource {\n  return source?.type === 'ContainerImport' && !!source.containerImport?.image;\n}\n","import { createContext } from 'react';\nimport * as _ from 'lodash';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  ContainerSpec,\n  referenceFor,\n  modelFor,\n} from '@console/internal/module/k8s';\nimport { getResourcesType } from '../edit-application/edit-application-utils';\nimport { getProbesData } from './create-health-checks-probe-utils';\nimport { HealthChecksProbeType } from './health-checks-types';\n\nexport const updateHealthChecksProbe = (\n  values,\n  resource: K8sResourceKind,\n  container: ContainerSpec,\n): K8sResourceKind => {\n  const {\n    healthChecks: { readinessProbe, livenessProbe, startupProbe },\n    containerName,\n    healthChecks,\n  } = values;\n  const updatedResource = _.cloneDeep(resource);\n  const containerIndex = _.findIndex(updatedResource.spec.template.spec.containers, [\n    'name',\n    containerName,\n  ]);\n  updatedResource.spec.template.spec.containers[containerIndex] = {\n    ...container,\n    ...getProbesData(healthChecks, getResourcesType(resource)),\n  };\n\n  if (!readinessProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.ReadinessProbe}`,\n    );\n  }\n\n  if (!livenessProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.LivenessProbe}`,\n    );\n  }\n\n  if (!startupProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.StartupProbe}`,\n    );\n  }\n\n  return updatedResource;\n};\n\ntype HealthCheckContextType = {\n  viewOnly: boolean;\n};\n\nexport const HealthCheckContext = createContext<HealthCheckContextType>({ viewOnly: false });\n\nexport const useViewOnlyAccess = (resource: K8sResourceKind): boolean => {\n  const model = modelFor(referenceFor(resource));\n  const hasEditAccess = useAccessReview({\n    group: model.apiGroup,\n    resource: model.plural,\n    name: resource.metadata.name,\n    namespace: resource.metadata.namespace,\n    verb: 'update',\n  });\n  return !hasEditAccess;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import * as _ from 'lodash';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  GitImportFormData,\n  DeployImageFormData,\n  UploadJarFormData,\n} from '../components/import/import-types';\nimport { makePortName } from './imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  mergeData,\n} from './resource-label-utils';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\n\nconst isDeployImageFormData = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n): formData is DeployImageFormData => {\n  return 'isi' in (formData as DeployImageFormData);\n};\n\nexport const createService = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalService?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    image: { ports: imagePorts, tag: selectedTag },\n    route: { unknownTargetPort, defaultUnknownPort },\n    resources,\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(resources, name);\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    ports = [port];\n  } else if (\n    buildStrategy === BuildStrategyType.Devfile &&\n    !_.isEmpty(originalService?.spec?.ports)\n  ) {\n    ports = [\n      ...originalService.spec.ports.map((port) => ({\n        name: port.name,\n        containerPort: port.port,\n        protocol: 'TCP',\n      })),\n    ];\n  } else if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  } else if (_.isEmpty(ports)) {\n    const port = { containerPort: defaultUnknownPort, protocol: 'TCP' };\n    ports = [port];\n  }\n  if (\n    unknownTargetPort &&\n    !ports.some((port) => unknownTargetPort === port.containerPort.toString())\n  ) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    const existingRouteTargetPort = originalRoute?.spec?.port?.targetPort;\n    ports = [...ports.filter((p) => p.containerPort !== defaultUnknownPort), port];\n\n    if (existingRouteTargetPort) {\n      ports = [...ports.filter((p) => p.containerPort !== existingRouteTargetPort), port];\n    }\n  }\n\n  const newService: any = {\n    kind: 'Service',\n    apiVersion: 'v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...defaultAnnotations },\n    },\n    spec: {\n      selector: podLabels,\n      ports: _.map(ports, (port) => ({\n        port: port.containerPort,\n        targetPort: port.containerPort,\n        protocol: port.protocol,\n        // Use the same naming convention as CLI new-app.\n        name: port.name || makePortName(port),\n      })),\n    },\n  };\n\n  const service = mergeData(originalService, newService);\n\n  return service;\n};\n\nexport const createRoute = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    route: {\n      hostname,\n      unknownTargetPort,\n      defaultUnknownPort,\n      secure,\n      path,\n      tls,\n      labels: routeLabels,\n    },\n    image: { ports: imagePorts, tag: selectedTag },\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  }\n\n  let targetPort: string;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    targetPort = makePortName({\n      containerPort: _.toInteger(unknownTargetPort),\n      protocol: 'TCP',\n    });\n  } else if (buildStrategy === BuildStrategyType.Devfile) {\n    targetPort = originalRoute?.spec?.port?.targetPort;\n  } else if (unknownTargetPort) {\n    targetPort = makePortName({ containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' });\n  } else {\n    targetPort = makePortName({\n      containerPort: ports[0]?.containerPort || defaultUnknownPort,\n      protocol: 'TCP',\n    });\n  }\n\n  const newRoute: any = {\n    kind: 'Route',\n    apiVersion: 'route.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, ...routeLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      to: {\n        kind: 'Service',\n        name,\n      },\n      tls: secure ? tls : null,\n      host: hostname,\n      path,\n      // The service created by `createService` uses the same port as the container port.\n      port: {\n        // Use the port name, not the number for targetPort. The router looks\n        // at endpoints, not services, when resolving ports, so port numbers\n        // will not resolve correctly if the service port and container port\n        // numbers don't match.\n        targetPort,\n      },\n      wildcardPolicy: 'None',\n    },\n  };\n\n  const route = mergeData(originalRoute, newRoute);\n\n  return route;\n};\n","import { getGroupVersionKindForModel } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { k8sGetResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleSampleModel } from '../models/samples';\nimport {\n  ConsoleSample,\n  ConsoleSampleGitImportSourceRepository,\n  isContainerImportSource,\n  isGitImportSource,\n} from '../types/samples';\n\nconst LOCALIZATION_NAME_LABEL = 'console.openshift.io/name';\nconst LOCALIZATION_LANGUAGE_LABEL = 'console.openshift.io/lang';\nconst LOCALIZATION_COUNTRY_LABEL = 'console.openshift.io/country';\n\nexport const createSampleLink = (sample: ConsoleSample, activeNamespace: string): string | null => {\n  if (isGitImportSource(sample.spec.source)) {\n    const { gitImport } = sample.spec.source;\n    const searchParams = new URLSearchParams();\n    searchParams.set('formType', 'sample');\n    searchParams.set('sample', sample.metadata.name);\n    searchParams.set('git.repository', gitImport.repository.url);\n    if (gitImport.repository.revision) {\n      searchParams.set('git.revision', gitImport.repository.revision);\n    }\n    if (gitImport.repository.contextDir) {\n      searchParams.set('git.contextDir', gitImport.repository.contextDir);\n    }\n    return `/import/ns/${activeNamespace}?${searchParams}`;\n  }\n\n  if (isContainerImportSource(sample.spec.source)) {\n    const { containerImport } = sample.spec.source;\n    const searchParams = new URLSearchParams();\n    searchParams.set('sample', sample.metadata.name);\n    searchParams.set('image', containerImport.image);\n    return `/deploy-image/ns/${activeNamespace}?${searchParams}`;\n  }\n\n  // Unsupported source type, will be dropped.\n  return null;\n};\n\nexport const getGitImportSample = (): {\n  sampleName: string;\n  repository: ConsoleSampleGitImportSourceRepository;\n} => {\n  const searchParams = new URLSearchParams(window.location.search);\n  return {\n    sampleName: searchParams.get('sample'),\n    repository: {\n      url: searchParams.get('git.repository'),\n      revision: searchParams.get('git.revision'),\n      contextDir: searchParams.get('git.contextDir'),\n    },\n  };\n};\n\nexport const getContainerImportSample = () => {\n  const searchParams = new URLSearchParams(window.location.search);\n  return {\n    sampleName: searchParams.get('sample'),\n    image: searchParams.get('image'),\n  };\n};\n\nexport const hasSampleQueryParameter = () => {\n  return !!new URLSearchParams(window.location.search).get('sample');\n};\n\nexport const groupConsoleSamplesByName = (samples: ConsoleSample[]) => {\n  return samples.reduce<Record<string, ConsoleSample[]>>((grouped, consoleSample) => {\n    const name =\n      consoleSample.metadata.labels?.[LOCALIZATION_NAME_LABEL] || consoleSample.metadata.name;\n    if (!grouped[name]) grouped[name] = [];\n    grouped[name].push(consoleSample);\n    return grouped;\n  }, {});\n};\n\n/**\n * Returns the samples with the best localization match, for the given\n * preferred language and preferred country. It prefers a match in this order:\n *\n * 1. Sample language and country are equal to the preferred language and country.\n *    This includes sample without language (fallbacks to en) and no country.\n *\n * 2. Sample language is equal to the preferred language.\n *    1. And the sample has no country defined.  (eg, select en sample is used for en-CA and en-GB)\n *    2. Any country is defined.                 (eg, select en-CA sample is used for en-GB)\n *\n * 3. Fallback to an english sample\n *    (Sample language is en OR sample language is not defined):\n *    1. Same country  (use en-CA sample if preference is fr-CA)\n *    2. No country\n *    3. Any country   (use en-CA sample if preference is en-US)\n */\nexport const getBestMatch = (samples: ConsoleSample[], language: string): ConsoleSample | null => {\n  if (!samples || !samples.length) {\n    return null;\n  }\n  const preferredLanguage = (language || 'en').split('-')[0].toLowerCase();\n  const preferredCountry = ((language || '').split('-')[1] || '').toUpperCase();\n\n  let sameLanguageWithoutCountry: ConsoleSample = null;\n  let sameLanguageWithAnyCountry: ConsoleSample = null;\n  let fallbackLanguageSameCountry: ConsoleSample = null;\n  let fallbackLanguageNoCountry: ConsoleSample = null;\n  let fallbackLanguageAnyCountry: ConsoleSample = null;\n\n  for (const sample of samples) {\n    const sampleLanguage = (\n      sample.metadata?.labels?.[LOCALIZATION_LANGUAGE_LABEL] || 'en'\n    ).toLowerCase();\n    const sampleCountry = (\n      sample.metadata?.labels?.[LOCALIZATION_COUNTRY_LABEL] || ''\n    ).toUpperCase();\n\n    if (sampleLanguage === preferredLanguage && sampleCountry === preferredCountry) {\n      return sample;\n    }\n    if (sampleLanguage === preferredLanguage) {\n      if (!sampleCountry && !sameLanguageWithoutCountry) {\n        sameLanguageWithoutCountry = sample;\n      } else if (sampleCountry && !sameLanguageWithAnyCountry) {\n        sameLanguageWithAnyCountry = sample;\n      }\n    }\n    if (sampleLanguage === 'en') {\n      if (sampleCountry === preferredCountry && !fallbackLanguageSameCountry) {\n        fallbackLanguageSameCountry = sample;\n      } else if (!sampleCountry && !fallbackLanguageNoCountry) {\n        fallbackLanguageNoCountry = sample;\n      } else if (!fallbackLanguageAnyCountry) {\n        fallbackLanguageAnyCountry = sample;\n      }\n    }\n  }\n  return (\n    sameLanguageWithoutCountry ||\n    sameLanguageWithAnyCountry ||\n    fallbackLanguageSameCountry ||\n    fallbackLanguageNoCountry ||\n    fallbackLanguageAnyCountry\n  );\n};\n\nexport const useSamples = () => {\n  return useK8sWatchResource<ConsoleSample[]>({\n    isList: true,\n    groupVersionKind: getGroupVersionKindForModel(ConsoleSampleModel),\n  });\n};\n\nexport const getSample = (name: string): Promise<ConsoleSample> =>\n  k8sGetResource({ model: ConsoleSampleModel, name });\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { hasIcon } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentConfigModel, DeploymentModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  referenceFor,\n  referenceForModel,\n  ImagePullPolicy,\n} from '@console/internal/module/k8s';\nimport {\n  KNATIVE_AUTOSCALEWINDOW_ANNOTATION,\n  KNATIVE_CONCURRENCYTARGET_ANNOTATION,\n  KNATIVE_CONCURRENCYUTILIZATION_ANNOTATION,\n  KNATIVE_MAXSCALE_ANNOTATION,\n  KNATIVE_MINSCALE_ANNOTATION,\n  PRIVATE_KNATIVE_SERVING_LABEL,\n  ServiceModel,\n} from '@console/knative-plugin';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { isDockerPipeline } from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { defaultRepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/consts';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n} from '@console/pipelines-plugin/src/const';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { getLimitsDataFromResource } from '@console/shared/src';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport { RegistryType } from '../../utils/imagestream-utils';\nimport { getHealthChecksData } from '../health-checks/create-health-checks-probe-utils';\nimport { deployValidationSchema } from '../import/deployImage-validation-utils';\nimport {\n  Resources,\n  DeploymentData,\n  GitReadableTypes,\n  ServerlessData,\n  BuildOptions,\n  BuildData,\n} from '../import/import-types';\nimport {\n  detectGitType,\n  validationSchema as importValidationSchema,\n} from '../import/import-validation-utils';\nimport { getAutoscaleWindow } from '../import/serverless/serverless-utils';\nimport { validationSchema as jarValidationSchema } from '../import/upload-jar-validation-utils';\nimport { AppResources } from './edit-application-types';\n\nexport enum ApplicationFlowType {\n  Git = 'Import from Git',\n  Dockerfile = 'Import from Dockerfile',\n  Container = 'Deploy Image',\n  JarUpload = 'Upload JAR file',\n}\n\nexport const getFlowTypePageTitle = (flowType: ApplicationFlowType): string => {\n  switch (flowType) {\n    case ApplicationFlowType.Git:\n      // t('devconsole~Import from Git')\n      return 'devconsole~Import from Git';\n    case ApplicationFlowType.Dockerfile:\n      // t('devconsole~Import from Dockerfile')\n      return 'devconsole~Import from Dockerfile';\n    case ApplicationFlowType.Container:\n      // t('devconsole~Deploy Image')\n      return 'devconsole~Deploy Image';\n    case ApplicationFlowType.JarUpload:\n      // t('devconsole~Upload JAR file')\n      return 'devconsole~Upload JAR file';\n    default:\n      return flowType;\n  }\n};\n\nexport enum BuildSourceType {\n  Git = 'Git',\n  Binary = 'Binary',\n}\n\nconst isFromJarUpload = (type: string): boolean => type === BuildSourceType.Binary;\n\nconst getBuildSourceType = (buildConfig: K8sResourceKind): string =>\n  buildConfig?.spec?.source?.type;\n\nexport const getResourcesType = (resource: K8sResourceKind): Resources => {\n  switch (resource.kind) {\n    case DeploymentConfigModel.kind:\n      return Resources.OpenShift;\n    case DeploymentModel.kind:\n      return Resources.Kubernetes;\n    case referenceFor(resource) === referenceForModel(ServiceModel) ? ServiceModel.kind : '':\n      return Resources.KnativeService;\n    default:\n      return null;\n  }\n};\n\nexport const getFlowType = (buildStrategy: string, buildType?: string): ApplicationFlowType => {\n  switch (buildStrategy) {\n    case BuildStrategyType.Source:\n      return buildType === BuildSourceType.Binary\n        ? ApplicationFlowType.JarUpload\n        : ApplicationFlowType.Git;\n    case BuildStrategyType.Docker:\n      return ApplicationFlowType.Dockerfile;\n    default:\n      return ApplicationFlowType.Container;\n  }\n};\n\nexport const getValidationSchema = (\n  buildStrategy: string,\n  buildType?: string,\n): ((t: TFunction) => any) => {\n  switch (buildStrategy) {\n    case BuildStrategyType.Source:\n      return buildType === BuildSourceType.Binary ? jarValidationSchema : importValidationSchema;\n    case BuildStrategyType.Docker:\n      return importValidationSchema;\n    default:\n      return deployValidationSchema;\n  }\n};\n\nexport const checkIfTriggerExists = (\n  triggers: { [key: string]: any }[],\n  type: string,\n  resourceKind?: string,\n) => {\n  return !!_.find(triggers, (trigger) => {\n    if (resourceKind === DeploymentConfigModel.kind && type === 'ImageChange') {\n      return trigger.type === type && trigger.imageChangeParams?.automatic;\n    }\n    return trigger.type === type;\n  });\n};\n\nexport const getGitDataFromBuildConfig = (buildConfig: K8sResourceKind) => {\n  const url = buildConfig?.spec?.source?.git?.uri ?? '';\n  const gitData = {\n    url,\n    type: detectGitType(url),\n    ref: _.get(buildConfig, 'spec.source.git.ref', ''),\n    dir: _.get(buildConfig, 'spec.source.contextDir', ''),\n    showGitType: false,\n    secret: _.get(buildConfig, 'spec.source.sourceSecret.name', ''),\n    isUrlValidating: false,\n  };\n  return gitData;\n};\n\nconst getGitDataFromPipeline = (pipeline: PipelineKind) => {\n  const params = pipeline?.spec?.params;\n  const url = (params?.find((param) => param?.name === 'GIT_REPO')?.default ?? '') as string;\n  const ref = params?.find((param) => param?.name === 'GIT_REVISION')?.default ?? '';\n  const dir = params?.find((param) => param?.name === 'PATH_CONTEXT')?.default ?? '/';\n  return {\n    url,\n    ref,\n    dir,\n    type: detectGitType(url),\n    showGitType: false,\n    secret: '',\n    isUrlValidating: false,\n  };\n};\n\nconst getGitDataFromShipwrightBuild = (shipwrightBuild: K8sResourceKind) => {\n  const url = shipwrightBuild?.spec?.source?.git?.url ?? '';\n  const gitData = {\n    url,\n    type: detectGitType(url),\n    ref: _.get(shipwrightBuild, 'spec.source.git.revision', ''),\n    dir: _.get(shipwrightBuild, 'spec.source.contextDir', ''),\n    showGitType: false,\n    secret: _.get(shipwrightBuild, 'spec.source.git.cloneSecret', ''),\n    isUrlValidating: false,\n  };\n  return gitData;\n};\n\nexport const getKsvcRouteData = (resource: K8sResourceKind) => {\n  const { metadata, spec } = resource;\n  const containers = spec?.template?.spec?.containers ?? [];\n  const port = containers?.[0]?.ports?.[0]?.containerPort ?? '';\n  const routeData = {\n    create: metadata?.labels?.[PRIVATE_KNATIVE_SERVING_LABEL] !== 'cluster-local',\n    unknownTargetPort: _.toString(port),\n    targetPort: _.toString(port),\n    defaultUnknownPort: 8080,\n  };\n  return routeData;\n};\n\nexport const getDefaultLabels = () => {\n  return [\n    'app',\n    'app.kubernetes.io/instance',\n    'app.openshift.io/runtime',\n    'app.kubernetes.io/part-of',\n    'app.openshift.io/runtime-version',\n    'app.openshift.io/runtime-namespace',\n    'networking.knative.dev/visibility',\n  ];\n};\n\nexport const getRouteLabels = (\n  route: K8sResourceKind,\n  resource: K8sResourceKind,\n): Record<string, string> => {\n  const allLabels = _.get(resource, 'metadata.labels', {});\n  const allRouteLabels = _.get(route, 'metadata.labels', {});\n  const filteredRouteLabels = _.omit(allRouteLabels, [\n    ...getDefaultLabels(),\n    ...Object.keys(allLabels),\n  ]);\n  return filteredRouteLabels;\n};\n\nexport const getRouteData = (route: K8sResourceKind, resource: K8sResourceKind) => {\n  let routeData = {\n    disable: !_.isEmpty(route),\n    create: !_.isEmpty(route),\n    targetPort: _.get(route, 'spec.port.targetPort', ''),\n    unknownTargetPort: _.toString(route?.spec?.port?.targetPort?.split('-')?.[0]) || '',\n    defaultUnknownPort: 8080,\n    path: _.get(route, 'spec.path', ''),\n    hostname: _.get(route, 'spec.host', ''),\n    secure: _.has(route, 'spec.tls.termination'),\n    tls: {\n      termination: _.get(route, 'spec.tls.termination', null),\n      insecureEdgeTerminationPolicy: _.get(route, 'spec.tls.insecureEdgeTerminationPolicy', null),\n      caCertificate: _.get(route, 'spec.tls.caCertificate', ''),\n      certificate: _.get(route, 'spec.tls.certificate', ''),\n      destinationCACertificate: _.get(route, 'spec.tls.destinationCACertificate', ''),\n      key: _.get(route, 'spec.tls.key', ''),\n    },\n    labels: getRouteLabels(route, resource),\n  };\n  if (getResourcesType(resource) === Resources.KnativeService) {\n    routeData = {\n      ...routeData,\n      ...getKsvcRouteData(resource),\n    };\n  }\n  return routeData;\n};\n\nconst getBuildOption = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n) => {\n  if (buildConfig) {\n    return BuildOptions.BUILDS;\n  }\n  if (shipwrightBuild) {\n    return BuildOptions.SHIPWRIGHT_BUILD;\n  }\n  if (pipeline) {\n    return BuildOptions.PIPELINES;\n  }\n  return BuildOptions.DISABLED;\n};\n\nexport const getBuildData = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n  gitType: string,\n) => {\n  const buildOption = getBuildOption(buildConfig, shipwrightBuild, pipeline);\n  let buildStrategyType: BuildStrategyType | string;\n  let shipwrightClusterBuildStrategyType: ClusterBuildStrategy;\n  let buildStrategyData;\n\n  if (buildOption === BuildOptions.BUILDS) {\n    buildStrategyType = _.get(buildConfig, 'spec.strategy.type', '');\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    shipwrightClusterBuildStrategyType = _.get(shipwrightBuild, 'spec.strategy.name', '');\n    switch (shipwrightClusterBuildStrategyType) {\n      case ClusterBuildStrategy.BUILDAH:\n        buildStrategyType = BuildStrategyType.Docker;\n        break;\n      case ClusterBuildStrategy.S2I:\n        buildStrategyType = BuildStrategyType.Source;\n        break;\n      default:\n        buildStrategyType = '';\n    }\n  }\n\n  if (buildOption === BuildOptions.BUILDS) {\n    switch (buildStrategyType) {\n      case BuildStrategyType.Source:\n        buildStrategyData = _.get(buildConfig, 'spec.strategy.sourceStrategy');\n        break;\n      case BuildStrategyType.Docker:\n        buildStrategyData = _.get(buildConfig, 'spec.strategy.dockerStrategy');\n        break;\n      default:\n        buildStrategyData = { env: [] };\n    }\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    buildStrategyData = _.get(shipwrightBuild, 'spec');\n  }\n\n  const triggers = _.get(buildConfig, 'spec.triggers');\n\n  const buildData: BuildData = {\n    env: buildStrategyData?.env || [],\n    triggers: {\n      webhook: checkIfTriggerExists(triggers, GitReadableTypes[gitType]),\n      image: checkIfTriggerExists(triggers, 'ImageChange'),\n      config: checkIfTriggerExists(triggers, 'ConfigChange'),\n    },\n    strategy:\n      buildStrategyType ||\n      (isDockerPipeline(pipeline) ? BuildStrategyType.Docker : BuildStrategyType.Source),\n    source: { type: getBuildSourceType(buildConfig) },\n    option: buildOption,\n    clusterBuildStrategy: shipwrightClusterBuildStrategyType,\n  };\n  return buildData;\n};\n\nexport const getServerlessData = (resource: K8sResourceKind): ServerlessData => {\n  let serverlessData: ServerlessData = {\n    scaling: {\n      minpods: '',\n      maxpods: '',\n      concurrencytarget: '',\n      concurrencylimit: '',\n      autoscale: {\n        autoscalewindow: '',\n        autoscalewindowUnit: 's',\n        defaultAutoscalewindowUnit: 's',\n      },\n      concurrencyutilization: '',\n    },\n    domainMapping: [],\n  };\n  if (getResourcesType(resource) === Resources.KnativeService) {\n    const {\n      spec: {\n        template: { metadata, spec },\n      },\n    } = resource;\n    const annotations = metadata?.annotations;\n    const autoscalewindowAnnotation = annotations?.[KNATIVE_AUTOSCALEWINDOW_ANNOTATION] || '';\n    const { autoscalewindow, autoscalewindowUnit, defaultAutoscalewindowUnit } = getAutoscaleWindow(\n      autoscalewindowAnnotation,\n    );\n    serverlessData = {\n      scaling: {\n        minpods: annotations?.[KNATIVE_MINSCALE_ANNOTATION] || '',\n        maxpods: annotations?.[KNATIVE_MAXSCALE_ANNOTATION] || '',\n        concurrencytarget: annotations?.[KNATIVE_CONCURRENCYTARGET_ANNOTATION] || '',\n        concurrencylimit: spec?.containerConcurrency || '',\n        autoscale: {\n          autoscalewindow,\n          autoscalewindowUnit,\n          defaultAutoscalewindowUnit,\n        },\n        concurrencyutilization: annotations?.[KNATIVE_CONCURRENCYUTILIZATION_ANNOTATION] || '',\n      },\n      domainMapping: [],\n    };\n  }\n  return serverlessData;\n};\n\nexport const getDeploymentData = (resource: K8sResourceKind) => {\n  const deploymentData: DeploymentData = {\n    env: [],\n    replicas: 1,\n    triggers: { image: true, config: true },\n  };\n  const container = resource.spec?.template?.spec?.containers?.find((c) =>\n    [resource.metadata.name, resource.metadata.labels?.['app.kubernetes.io/name']].includes(c.name),\n  );\n  const env = container?.env ?? [];\n  switch (getResourcesType(resource)) {\n    case Resources.KnativeService:\n      return {\n        ...deploymentData,\n        env,\n        triggers: {\n          image: container?.imagePullPolicy === ImagePullPolicy.Always,\n        },\n      };\n    case Resources.OpenShift: {\n      const triggers = resource.spec?.triggers;\n      return {\n        env,\n        triggers: {\n          image: checkIfTriggerExists(triggers, 'ImageChange', resource.kind),\n          config: checkIfTriggerExists(triggers, 'ConfigChange'),\n        },\n        replicas: resource.spec?.replicas ?? 1,\n      };\n    }\n    case Resources.Kubernetes: {\n      const imageTrigger = JSON.parse(\n        resource.metadata?.annotations?.['image.openshift.io/triggers'] ?? '[]',\n      )?.[0];\n      return {\n        env,\n        triggers: {\n          image: imageTrigger?.paused === 'false',\n        },\n        replicas: resource.spec?.replicas ?? 1,\n      };\n    }\n    default:\n      return deploymentData;\n  }\n};\n\nexport const getUserLabels = (resource: K8sResourceKind) => {\n  const allLabels = _.get(resource, 'metadata.labels', {});\n  const userLabels = _.omit(allLabels, getDefaultLabels());\n  return userLabels;\n};\n\nexport const getCommonInitialValues = (\n  editAppResource: K8sResourceKind,\n  route: K8sResourceKind,\n  pipelineData: PipelineKind,\n  name: string,\n  namespace: string,\n) => {\n  const appGroupName = _.get(editAppResource, 'metadata.labels[\"app.kubernetes.io/part-of\"]');\n  const commonInitialValues = {\n    formType: 'edit',\n    name,\n    application: {\n      name: appGroupName || '',\n      selectedKey: appGroupName || UNASSIGNED_KEY,\n    },\n    project: {\n      name: namespace,\n    },\n    route: getRouteData(route, editAppResource),\n    resources: getResourcesType(editAppResource),\n    serverless: getServerlessData(editAppResource),\n    pipeline: {\n      enabled: !_.isEmpty(pipelineData),\n      type: PipelineType.PIPELINE,\n    },\n    pac: {\n      pacHasError: false,\n      repository: {\n        ...defaultRepositoryFormValues,\n      },\n    },\n    deployment: getDeploymentData(editAppResource),\n    labels: getUserLabels(editAppResource),\n    limits: getLimitsDataFromResource(editAppResource),\n    healthChecks: getHealthChecksData(editAppResource),\n    import: {\n      showEditImportStrategy: true,\n      selectedStrategy: {\n        name: '',\n        type: ImportStrategy.S2I,\n        priority: 0,\n        detectedFiles: [],\n      },\n    },\n  };\n  return commonInitialValues;\n};\n\nexport const getIconInitialValues = (editAppResource: K8sResourceKind) => {\n  const runtimeLabel = editAppResource?.metadata?.labels?.['app.openshift.io/runtime'];\n  const runtimeIcon = runtimeLabel && hasIcon(runtimeLabel) ? runtimeLabel : null;\n  return {\n    runtimeIcon,\n  };\n};\n\nexport const getGitAndDockerfileInitialValues = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n) => {\n  if (_.isEmpty(buildConfig) && _.isEmpty(shipwrightBuild) && _.isEmpty(pipeline)) {\n    return {};\n  }\n\n  const currentImage = _.split(buildConfig?.spec?.strategy?.sourceStrategy?.from?.name ?? '', ':');\n  const git = !_.isEmpty(buildConfig)\n    ? getGitDataFromBuildConfig(buildConfig)\n    : !_.isEmpty(shipwrightBuild)\n    ? getGitDataFromShipwrightBuild(shipwrightBuild)\n    : getGitDataFromPipeline(pipeline);\n  const initialValues = {\n    git,\n    docker: {\n      dockerfilePath:\n        buildConfig?.spec?.strategy?.dockerStrategy?.dockerfilePath ||\n        pipeline?.spec?.params?.find((param) => param?.name === 'DOCKERFILE')?.default ||\n        'Dockerfile',\n    },\n    image: {\n      selected: pipeline?.metadata?.labels?.[PIPELINE_RUNTIME_LABEL] || currentImage[0] || '',\n      recommended: '',\n      tag: pipeline?.metadata?.labels?.[PIPELINE_RUNTIME_VERSION_LABEL] || currentImage[1] || '',\n      tagObj: {},\n      ports: [],\n      isRecommending: false,\n      couldNotRecommend: false,\n    },\n    build: getBuildData(buildConfig, shipwrightBuild, pipeline, git.type),\n  };\n  return initialValues;\n};\n\nexport const deployImageInitialValues = {\n  searchTerm: '',\n  registry: 'external',\n  allowInsecureRegistry: false,\n  imageStream: {\n    image: '',\n    tag: '',\n    namespace: '',\n  },\n  isi: {\n    name: '',\n    image: {},\n    tag: '',\n    status: { metadata: {}, status: '' },\n    ports: [],\n  },\n  image: {\n    name: '',\n    image: {},\n    tag: '',\n    status: { metadata: {}, status: '' },\n    ports: [],\n  },\n  build: {\n    env: [],\n    triggers: {},\n    strategy: '',\n  },\n  isSearchingForImage: false,\n};\n\nexport const getExternalImageInitialValues = (appResources: AppResources) => {\n  const imageStreamList = appResources?.imageStream?.data;\n  if (_.isEmpty(imageStreamList)) {\n    return {};\n  }\n  const imageStream = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const imageStreamData = imageStream?.[0]?.spec?.tags?.[0];\n  const name = imageStreamData?.from?.name;\n  const isAllowInsecureRegistry = imageStreamData?.importPolicy?.insecure || false;\n  return {\n    ...deployImageInitialValues,\n    searchTerm: name,\n    registry: 'external',\n    allowInsecureRegistry: isAllowInsecureRegistry,\n    imageStream: {\n      ...deployImageInitialValues.imageStream,\n    },\n  };\n};\n\nexport const getInternalImageInitialValues = (editAppResource: K8sResourceKind) => {\n  const imageStreamNamespace = _.get(\n    editAppResource,\n    'metadata.labels[\"app.openshift.io/runtime-namespace\"]',\n    '',\n  );\n  const imageStreamName = _.get(editAppResource, 'metadata.labels[\"app.openshift.io/runtime\"]', '');\n  const imageStreamTag = _.get(\n    editAppResource,\n    'metadata.labels[\"app.openshift.io/runtime-version\"]',\n    '',\n  );\n  return {\n    ...deployImageInitialValues,\n    registry: RegistryType.Internal,\n    imageStream: {\n      image: imageStreamName,\n      tag: imageStreamTag,\n      namespace: imageStreamNamespace,\n    },\n  };\n};\n\nexport const getExternalImageValues = (appResource: K8sResourceKind) => {\n  const name = _.get(appResource, 'spec.template.spec.containers[0].image', null);\n  if (_.isEmpty(appResource) || !name) {\n    return deployImageInitialValues;\n  }\n  return {\n    ...deployImageInitialValues,\n    searchTerm: name,\n    registry: RegistryType.External,\n    imageStream: {\n      ...deployImageInitialValues.imageStream,\n    },\n  };\n};\n\nexport const getFileUploadValues = (resource: K8sResourceKind, buildConfig: K8sResourceKind) => {\n  const resourceName = resource.metadata.name;\n  const fileName = buildConfig.metadata?.annotations?.jarFileName ?? '';\n  const javaArgs: string =\n    resource.spec?.template?.spec?.containers\n      ?.find((container) => container.name === resourceName)\n      ?.env?.find((args) => args.name === 'JAVA_ARGS')?.value ?? '';\n  return {\n    fileUpload: {\n      name: fileName,\n      value: '',\n      javaArgs,\n    },\n    ...getIconInitialValues(resource),\n  };\n};\n\nexport const getInitialValues = (\n  appResources: AppResources,\n  appName: string,\n  namespace: string,\n) => {\n  const editAppResourceData = appResources.editAppResource?.data;\n  const routeData = appResources.route?.data;\n  const buildConfigData = appResources.buildConfig?.data;\n  const shipwrightBuildData = appResources.shipwrightBuild?.data;\n  const pipelineData = appResources.pipeline?.data;\n\n  const commonValues = getCommonInitialValues(\n    editAppResourceData,\n    routeData,\n    pipelineData,\n    appName,\n    namespace,\n  );\n  const gitDockerValues = getGitAndDockerfileInitialValues(\n    buildConfigData,\n    shipwrightBuildData,\n    pipelineData,\n  );\n  let fileUploadValues = {};\n  let iconValues = {};\n  let externalImageValues = {};\n  let internalImageValues = {};\n  if (_.isEmpty(gitDockerValues)) {\n    iconValues = getIconInitialValues(editAppResourceData);\n    externalImageValues = getExternalImageInitialValues(appResources);\n    internalImageValues = _.isEmpty(externalImageValues)\n      ? getInternalImageInitialValues(editAppResourceData)\n      : {};\n    if (\n      _.isEmpty(externalImageValues) &&\n      !_.get(internalImageValues, 'imageStream.tag') &&\n      !_.get(internalImageValues, 'imageStream.image')\n    ) {\n      if (editAppResourceData?.kind === ServiceModel.kind) {\n        internalImageValues = {};\n        externalImageValues = getExternalImageValues(editAppResourceData);\n      }\n    }\n  } else if (isFromJarUpload(getBuildSourceType(buildConfigData))) {\n    fileUploadValues = getFileUploadValues(editAppResourceData, buildConfigData);\n  }\n\n  return {\n    ...commonValues,\n    ...iconValues,\n    ...fileUploadValues,\n    ...gitDockerValues,\n    ...externalImageValues,\n    ...internalImageValues,\n  };\n};\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","import * as React from 'react';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport {\n  SecretFormWrapper,\n  SecretTypeAbstraction,\n} from '@console/internal/components/secrets/create-secret';\n\nexport interface CreateSecretModalProps {\n  save?: (name: string) => void;\n  namespace: string;\n  secretType: SecretTypeAbstraction;\n}\n\ntype Props = CreateSecretModalProps & ModalComponentProps;\n\nconst CreateSecretModal: React.FC<Props> = ({ close, namespace, save, secretType }) => {\n  const handleSave = (name: string) => {\n    close();\n    save(name);\n  };\n\n  return (\n    <SecretFormWrapper\n      onCancel={close}\n      onSave={handleSave}\n      fixed={{ metadata: { namespace } }}\n      secretTypeAbstraction={secretType}\n      isCreate\n      modal\n    />\n  );\n};\n\nexport const secretModalLauncher = createModalLauncher<Props>(CreateSecretModal);\n\nexport default CreateSecretModal;\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  buildValidationSchema,\n  resourcesValidationSchema,\n} from './validation-schema';\n\nexport const fileNameRegex = /\\.(jar)$/i;\n\nexport const fileUploadValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(fileNameRegex, {\n        message: t('devconsole~Must be a JAR file.'),\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.'))\n      .required(t('devconsole~Required')),\n    javaArgs: yup.string(),\n  });\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    fileUpload: fileUploadValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n  });\n\nexport const getAppName = (name: string) => {\n  if (!fileNameRegex.test(name)) {\n    return undefined;\n  }\n  return _.kebabCase(name.split('.').shift());\n};\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, TextAreaField } from '@console/shared';\nimport ApplicationSelector from '@console/topology/src/components/dropdowns/ApplicationSelector';\nimport { ProjectData } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface AppSectionProps {\n  project: ProjectData;\n  noProjectsAvailable?: boolean;\n  extraMargin?: boolean;\n  subPath?: string;\n  fullWidth?: boolean;\n}\n\nconst AppSection: React.FC<AppSectionProps> = ({\n  project,\n  noProjectsAvailable,\n  extraMargin,\n  subPath,\n  fullWidth,\n}) => {\n  const [initialApplication] = useField(\n    subPath ? `${subPath}.application.initial` : 'application.initial',\n  );\n  const [formType] = useField('formType');\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~General')} extraMargin={extraMargin} fullWidth={fullWidth}>\n      {noProjectsAvailable && (\n        <>\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-name\"\n            name={subPath ? `${subPath}.project.name` : 'project.name'}\n            label={t('devconsole~Project name')}\n            helpText={t('devconsole~A unique name for the Project.')}\n            required\n          />\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-display-name\"\n            name={subPath ? `${subPath}.project.displayName` : 'project.displayName'}\n            label={t('devconsole~Project display name')}\n          />\n          <TextAreaField\n            data-test-id=\"application-form-project-description\"\n            name={subPath ? `${subPath}.project.description` : 'project.description'}\n            label={t('devconsole~Project description')}\n          />\n        </>\n      )}\n      {!initialApplication.value && (\n        <ApplicationSelector\n          namespace={project.name}\n          noProjectsAvailable={noProjectsAvailable}\n          subPath={subPath}\n        />\n      )}\n      <InputField\n        type={TextInputTypes.text}\n        data-test-id=\"application-form-app-name\"\n        name={subPath ? `${subPath}.name` : 'name'}\n        label={t('devconsole~Name')}\n        helpText={t(\n          'devconsole~A unique name given to the component that will be used to name associated resources.',\n        )}\n        isDisabled={formType.value && formType.value === 'edit'}\n        required={!(formType.value && formType.value === 'edit')}\n      />\n    </FormSection>\n  );\n};\n\nexport default AppSection;\n","import * as React from 'react';\nimport i18next from 'i18next';\nimport Status, { StatusProps } from '@console/dynamic-plugin-sdk/src/app/components/status/Status';\nimport { BuildRun, ComputedBuildRunStatus } from '../../types';\n\nconst getSucceededCondition = (buildRun: BuildRun) =>\n  buildRun?.status?.conditions?.find((condition) => condition.type === 'Succeeded');\n\nexport const getBuildRunStatus = (buildRun: BuildRun): ComputedBuildRunStatus => {\n  const succeededCondition = getSucceededCondition(buildRun);\n  if (succeededCondition) {\n    if (succeededCondition.status === 'Unknown' && succeededCondition.reason === 'Pending') {\n      return ComputedBuildRunStatus.PENDING;\n    }\n    if (succeededCondition.status === 'Unknown' && succeededCondition.reason === 'Running') {\n      return ComputedBuildRunStatus.RUNNING;\n    }\n    if (succeededCondition.status === 'True') {\n      return ComputedBuildRunStatus.SUCCEEDED;\n    }\n    if (succeededCondition.status === 'False') {\n      return ComputedBuildRunStatus.FAILED;\n    }\n  }\n  return ComputedBuildRunStatus.UNKNOWN;\n};\n\nexport const getBuildRunStatusProps = (buildRun: BuildRun): StatusProps => {\n  const succeededCondition = getSucceededCondition(buildRun);\n  if (succeededCondition) {\n    if (succeededCondition.status === 'Unknown' && succeededCondition.reason === 'Pending') {\n      return {\n        status: ComputedBuildRunStatus.PENDING,\n        title: i18next.t('shipwright-plugin~Pending'),\n      };\n    }\n    if (succeededCondition.status === 'Unknown' && succeededCondition.reason === 'Running') {\n      return {\n        status: ComputedBuildRunStatus.RUNNING,\n        title: i18next.t('shipwright-plugin~Running'),\n      };\n    }\n    if (succeededCondition.status === 'True') {\n      return {\n        status: ComputedBuildRunStatus.SUCCEEDED,\n        title: i18next.t('shipwright-plugin~Succeeded'),\n      };\n    }\n    if (succeededCondition.status === 'False') {\n      return {\n        status: ComputedBuildRunStatus.FAILED,\n        title: i18next.t('shipwright-plugin~Failed'),\n      };\n    }\n  }\n  return {\n    status: ComputedBuildRunStatus.UNKNOWN,\n    title: i18next.t('shipwright-plugin~Unknown'),\n  };\n};\n\nconst BuildRunStatus: React.FC<{ buildRun: BuildRun }> = ({ buildRun }) => {\n  const status = getBuildRunStatus(buildRun);\n  const failedCondition = getSucceededCondition(buildRun);\n  return (\n    <Status {...getBuildRunStatusProps(buildRun)}>\n      {status === ComputedBuildRunStatus.FAILED ? (\n        <>\n          <pre data-test=\"failure-popup\">{failedCondition.reason}</pre>\n          {failedCondition.message}\n        </>\n      ) : null}\n    </Status>\n  );\n};\n\nexport default BuildRunStatus;\n","import { K8sModel } from '@console/internal/module/k8s';\n\nexport const ConsoleSampleModel: K8sModel = {\n  kind: 'ConsoleSample',\n  label: 'ConsoleSample',\n  labelPlural: 'ConsoleSamples',\n  apiGroup: 'console.openshift.io',\n  apiVersion: 'v1',\n  abbr: 'CS',\n  namespaced: false,\n  crd: true,\n  plural: 'consolesamples',\n  propagationPolicy: 'Background',\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  isiValidationSchema,\n  resourcesValidationSchema,\n} from './validation-schema';\n\nexport const deployValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    name: nameValidationSchema(t),\n    isi: isiValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n  });\n","import * as React from 'react';\nimport {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInputTypes,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  InputField,\n  RedExclamationCircleIcon,\n  getFieldId,\n  useFormikValidationFix,\n} from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../../const';\nimport { sanitizeApplicationValue } from '../../utils/application-utils';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface ApplicationSelectorProps {\n  namespace?: string;\n  noProjectsAvailable?: boolean;\n  subPath?: string;\n}\n\nconst ApplicationSelector: React.FC<ApplicationSelectorProps> = ({\n  namespace,\n  noProjectsAvailable,\n  subPath,\n}) => {\n  const { t } = useTranslation();\n  const [applicationsAvailable, setApplicationsAvailable] = React.useState(true);\n  const availableApplications = React.useRef<string[]>([]);\n  const projectsAvailable = !noProjectsAvailable;\n\n  const [selectedKey, { touched, error }] = useField(\n    subPath ? `${subPath}.application.selectedKey` : 'application.selectedKey',\n  );\n  const [nameField] = useField(subPath ? `${subPath}.application.name` : 'application.name');\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [applicationExists, setApplicationExists] = React.useState<boolean>(false);\n  const applicationNameInputRef = React.useRef<HTMLInputElement>();\n  const fieldId = getFieldId('application-name', 'dropdown');\n  const isValid = !(touched && error);\n  const errorMessage = !isValid ? error : '';\n\n  useFormikValidationFix(selectedKey.value);\n\n  const onDropdownChange = (key: string, application: string) => {\n    setFieldValue(selectedKey.name, key);\n    setFieldTouched(selectedKey.name, true);\n    setFieldValue(nameField.name, sanitizeApplicationValue(application, key));\n    setFieldTouched(nameField.name, true);\n    setApplicationExists(false);\n  };\n\n  const handleOnLoad = (applicationList: { [key: string]: string }) => {\n    const noApplicationsAvailable = _.isEmpty(applicationList);\n    setApplicationsAvailable(!noApplicationsAvailable);\n    availableApplications.current = _.keys(applicationList);\n    if (noApplicationsAvailable) {\n      setFieldValue(selectedKey.name, '');\n      setFieldValue(\n        nameField.name,\n        (selectedKey.value !== UNASSIGNED_KEY && nameField.value) ?? '',\n      );\n    }\n  };\n\n  const actionItems = [\n    {\n      actionTitle: t('topology~Create application'),\n      actionKey: CREATE_APPLICATION_KEY,\n    },\n    {\n      actionTitle: t('topology~No application group'),\n      actionKey: UNASSIGNED_KEY,\n    },\n  ];\n\n  const handleAppChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setApplicationExists(availableApplications.current.includes(event.target.value.trim()));\n  };\n\n  const handleAppBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const trimmedApplicationName = event.target.value.trim();\n    setFieldValue(nameField.name, trimmedApplicationName);\n  };\n\n  const label = t('topology~Application');\n  const inputHelpText = applicationExists\n    ? t('topology~Warning: the application grouping already exists.')\n    : t('topology~A unique name given to the application grouping to label your resources.');\n\n  React.useEffect(() => {\n    if (selectedKey.value === CREATE_APPLICATION_KEY) {\n      applicationNameInputRef.current?.focus();\n    }\n  }, [selectedKey.value]);\n\n  return (\n    <>\n      {projectsAvailable && applicationsAvailable && (\n        <FormGroup fieldId={fieldId} label={label}>\n          <ApplicationDropdown\n            id={fieldId}\n            ariaLabel={label}\n            dropDownClassName=\"dropdown--full-width\"\n            menuClassName=\"dropdown-menu--text-wrap\"\n            namespace={namespace}\n            actionItems={actionItems}\n            autoSelect\n            selectedKey={selectedKey.value}\n            onChange={onDropdownChange}\n            onLoad={handleOnLoad}\n          />\n\n          <FormHelperText>\n            <HelperText>\n              {!isValid ? (\n                <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n                  {errorMessage}\n                </HelperTextItem>\n              ) : (\n                <HelperTextItem>\n                  {t('topology~Select an Application to group this component.')}\n                </HelperTextItem>\n              )}\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n      {(!applicationsAvailable || selectedKey.value === CREATE_APPLICATION_KEY) && (\n        <InputField\n          type={TextInputTypes.text}\n          required={selectedKey.value === CREATE_APPLICATION_KEY}\n          name={nameField.name}\n          ref={applicationNameInputRef}\n          label={t('topology~Application name')}\n          data-test-id=\"application-form-app-input\"\n          helpText={inputHelpText}\n          validated={applicationExists ? ValidatedOptions.warning : ValidatedOptions.default}\n          onChange={handleAppChange}\n          onBlur={handleAppBlur}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ApplicationSelector;\n","import * as React from 'react';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { ConfigMapModel } from '@console/internal/models';\nimport { ConfigMapKind, k8sList } from '@console/internal/module/k8s';\nimport { RepositoryModel } from '@console/pipelines-plugin/src/models';\nimport { PAC_INFO } from '../../pac/const';\nimport { PIPELINE_NAMESPACE } from '../../pipelines/const';\n\nexport const usePacInfo = () =>\n  useK8sGet<ConfigMapKind>(ConfigMapModel, PAC_INFO, PIPELINE_NAMESPACE);\n\nexport const useRepositoryPresent = (repoURL: string) => {\n  const [repoAlreadyExists, setRepoAlreadyExists] = React.useState(false);\n\n  React.useEffect(() => {\n    k8sList(RepositoryModel)\n      .then((repos) => {\n        setRepoAlreadyExists(repos.some((r) => r.spec.url === repoURL));\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.warn('Error while fetching Pipeline-as-code repositories:', err);\n        setRepoAlreadyExists(false);\n      });\n  }, [repoURL]);\n\n  return repoAlreadyExists;\n};\n","import * as React from 'react';\nimport { FormikValues } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { ProgressiveList, ProgressiveListItem } from '@console/shared/src';\nimport { AppResources } from '../../edit-application/edit-application-types';\nimport HealthChecks from '../../health-checks/HealthChecks';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport DeploymentConfigSection from './DeploymentConfigSection';\nimport LabelSection from './LabelSection';\nimport ResourceLimitSection from './ResourceLimitSection';\nimport RouteSection from './RouteSection';\nimport ScalingSection from './ScalingSection';\nimport ServerlessScalingSection from './ServerlessScalingSection';\n\ntype AdvancedSectionProps = {\n  values: FormikValues;\n  appResources?: AppResources;\n};\n\nconst Footer = ({ children }) => {\n  const { t } = useTranslation();\n  return (\n    <Trans\n      t={t}\n      ns=\"devconsole\"\n      defaults=\"Click on the names to access advanced options for <0></0>.\"\n      components={[children]}\n    />\n  );\n};\n\nconst List: React.FC<AdvancedSectionProps> = ({ appResources, values }) => {\n  const { t } = useTranslation();\n\n  const [visibleItems, setVisibleItems] = React.useState([]);\n  const handleVisibleItemChange = (item: string) => {\n    setVisibleItems([...visibleItems, item]);\n  };\n\n  return (\n    <ProgressiveList\n      visibleItems={visibleItems}\n      onVisibleItemChange={handleVisibleItemChange}\n      Footer={Footer}\n    >\n      <ProgressiveListItem name={t('devconsole~Health checks')}>\n        <HealthChecks title={t('devconsole~Health checks')} resourceType={values.resources} />\n      </ProgressiveListItem>\n      {values?.formType === 'edit' ? (\n        <ProgressiveListItem name={t('devconsole~Deployment')}>\n          <DeploymentConfigSection\n            namespace={values.project.name}\n            resource={appResources?.editAppResource?.data}\n          />\n        </ProgressiveListItem>\n      ) : null}\n\n      <ProgressiveListItem name={t('devconsole~Scaling')}>\n        {values.resources === Resources.KnativeService ? (\n          <ServerlessScalingSection />\n        ) : (\n          <ScalingSection name=\"deployment.replicas\" />\n        )}\n      </ProgressiveListItem>\n      <ProgressiveListItem name={t('devconsole~Resource limits')}>\n        <ResourceLimitSection />\n      </ProgressiveListItem>\n      <ProgressiveListItem name={t('devconsole~Labels')}>\n        <LabelSection />\n      </ProgressiveListItem>\n    </ProgressiveList>\n  );\n};\n\nconst AdvancedSection: React.FC<AdvancedSectionProps> = ({ values, appResources }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~Advanced options')}>\n      <RouteSection route={values.route} resources={values.resources} />\n      <div>\n        <List appResources={appResources} values={values} />\n      </div>\n    </FormSection>\n  );\n};\n\nexport default AdvancedSection;\n","import * as React from 'react';\nimport {\n  Alert,\n  ClipboardCopy,\n  ClipboardCopyVariant,\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { RedExclamationCircleIcon } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  RegistryType,\n  BuilderImagesNamespace,\n  getImageStreamTags,\n} from '../../../utils/imagestream-utils';\nimport { ImageStreamState, ImageStreamAction, ImageStreamActions } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\nimport ImageStreamDropdown from './ImageStreamDropdown';\nimport ImageStreamNsDropdown from './ImageStreamNsDropdown';\nimport ImageStreamTagDropdown from './ImageStreamTagDropdown';\n\nimport './ImageStream.scss';\n\nexport const initialState: ImageStreamState = {\n  loading: false,\n  accessLoading: false,\n  selectedImageStream: {},\n};\n\nexport const ImageStreamReducer = (state: ImageStreamState, action: ImageStreamAction) => {\n  const { value } = action;\n  switch (action.type) {\n    case ImageStreamActions.setLoading:\n      return { ...state, loading: value };\n    case ImageStreamActions.setAccessLoading:\n      return { ...state, accessLoading: value };\n    case ImageStreamActions.setSelectedImageStream:\n      return { ...state, selectedImageStream: value };\n    default:\n      throw new Error('Invalid action was provided in imagestream reducer');\n  }\n};\n\nconst ImageStream: React.FC<{\n  disabled?: boolean;\n  label?: string;\n  required?: boolean;\n  formContextField?: string;\n  dataTest?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, label, required = false, formContextField, dataTest, reloadCount }) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<FormikValues>();\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n  const [state, dispatch] = React.useReducer(ImageStreamReducer, initialState);\n  const [hasImageStreams, setHasImageStreams] = React.useState(false);\n  const { loading, accessLoading, selectedImageStream } = state;\n  const { imageStream, project, registry, isi, fromImageStreamTag } =\n    _.get(values, formContextField) || values;\n\n  const imageStreamTagList = getImageStreamTags(selectedImageStream as K8sResourceKind);\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const isTagsAvailable =\n    imageStream.tag !== '' || (isStreamsAvailable && !_.isEmpty(imageStreamTagList));\n  const isImageStreamSelected = imageStream.image !== '';\n  const showCommandLineAlert =\n    project.name !== imageStream.namespace &&\n    imageStream.namespace !== BuilderImagesNamespace.Openshift &&\n    (registry === RegistryType.Internal || fromImageStreamTag) &&\n    isStreamsAvailable &&\n    isTagsAvailable;\n  const helperTextInvalid = validated === ValidatedOptions.error && isi.status?.message && (\n    <>\n      <ExclamationCircleIcon />\n      &nbsp;{isi.status?.message}\n    </>\n  );\n\n  return (\n    <>\n      <ImageStreamContext.Provider\n        value={{ state, dispatch, hasImageStreams, setHasImageStreams, setValidated }}\n      >\n        <FormGroup\n          fieldId=\"image-stream-dropdowns\"\n          label={label}\n          required={required}\n          data-test={dataTest}\n        >\n          <div className=\"row\">\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamNsDropdown disabled={disabled} formContextField={formContextField} />\n            </div>\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamDropdown\n                disabled={disabled}\n                formContextField={formContextField}\n                reloadCount={reloadCount}\n              />\n              <div className=\"odc-imagestream-separator\">/</div>\n            </div>\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamTagDropdown\n                disabled={disabled}\n                formContextField={formContextField}\n                reloadCount={reloadCount}\n              />\n              <div className=\"odc-imagestream-separator\">:</div>\n            </div>\n          </div>\n\n          {validated === ValidatedOptions.error && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n                  {helperTextInvalid}\n                </HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n        {isNamespaceSelected && isImageStreamSelected && !isTagsAvailable && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert variant=\"warning\" title={t('devconsole~No Image streams tags found')} isInline>\n              {t('devconsole~No tags are available in Image Stream {{image}}', {\n                image: imageStream.image,\n              })}\n            </Alert>\n          </div>\n        )}\n        {isNamespaceSelected && !loading && !isStreamsAvailable && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert variant=\"warning\" title={t('devconsole~No Image streams found')} isInline>\n              {t('devconsole~No Image streams are available in Project {{namespace}}', {\n                namespace: imageStream.namespace,\n              })}\n            </Alert>\n          </div>\n        )}\n        {isNamespaceSelected && !accessLoading && showCommandLineAlert && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert\n              variant=\"warning\"\n              isInline\n              title={t(\n                'devconsole~Service account default will need pull authority to deploy Images from {{namespace}}',\n                { namespace: imageStream.namespace },\n              )}\n            >\n              {t('devconsole~You can grant authority with the command')}{' '}\n              <ClipboardCopy\n                className=\"odc-imagestream-clipboard\"\n                variant={ClipboardCopyVariant.expansion}\n                isReadOnly\n              >{`oc policy add-role-to-user system:image-puller system:serviceaccount:${project.name}:default --namespace=${imageStream.namespace}`}</ClipboardCopy>\n            </Alert>\n          </div>\n        )}\n      </ImageStreamContext.Provider>\n    </>\n  );\n};\n\nexport default React.memo(ImageStream);\n","import { ResolvedExtension, FileUpload } from '@console/dynamic-plugin-sdk';\n\nexport const getFileType = (fileName: string): string => {\n  if (fileName.lastIndexOf('.') === -1) {\n    return null;\n  }\n  return fileName.split('.').pop();\n};\n\nexport const isFileSupported = (fileName: string, supportedFileTypes: string[]): boolean => {\n  const extension = getFileType(fileName);\n  if (!extension || extension.length === 0) {\n    return false;\n  }\n  return supportedFileTypes.includes(extension.toLowerCase());\n};\n\nexport const getRequiredFileUploadExtension = (\n  fileUploadExtensions: ResolvedExtension<FileUpload>[],\n  fileName: string,\n) =>\n  fileUploadExtensions.find((ex) => isFileSupported(fileName, ex.properties.fileExtensions)) ??\n  null;\n","import { Dispatch, SetStateAction } from 'react';\nimport { useUserSettings } from '@console/shared';\n\nexport const PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY =\n  'devconsole.import.secureRoutingOptions';\n\ntype RoutingOptions = {\n  secure: boolean;\n  tlsTermination?: string;\n  insecureTraffic?: string;\n};\n\nexport const usePreferredRoutingOptions = (): [\n  RoutingOptions,\n  Dispatch<SetStateAction<RoutingOptions>>,\n  boolean,\n] => {\n  const [\n    preferredRoutingOptions,\n    setPreferredRoutingOptions,\n    preferredRoutingOptionsLoaded,\n  ] = useUserSettings<RoutingOptions>(PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY, {\n    secure: true,\n    tlsTermination: 'edge',\n    insecureTraffic: 'Redirect',\n  });\n  return [preferredRoutingOptions, setPreferredRoutingOptions, preferredRoutingOptionsLoaded];\n};\n","import * as React from 'react';\nimport { Resources } from '../import/import-types';\nimport FormSection from '../import/section/FormSection';\nimport { HealthChecksProbeType } from './health-checks-types';\nimport HealthCheckProbe from './HealthCheckProbe';\n\ninterface HealthChecksProps {\n  title?: string;\n  resourceType: Resources;\n}\n\nconst HealthChecks: React.FC<HealthChecksProps> = ({ title, resourceType }) => (\n  <FormSection title={title}>\n    <HealthCheckProbe probeType={HealthChecksProbeType.ReadinessProbe} />\n\n    <HealthCheckProbe probeType={HealthChecksProbeType.LivenessProbe} />\n\n    {resourceType !== Resources.KnativeService && (\n      <HealthCheckProbe probeType={HealthChecksProbeType.StartupProbe} />\n    )}\n  </FormSection>\n);\n\nexport default HealthChecks;\n","import * as React from 'react';\nimport { Button, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { GreenCheckCircleIcon } from '@console/shared';\nimport { getHealthChecksProbeConfig, healthChecksDefaultValues } from './health-checks-probe-utils';\nimport { HealthCheckProbeData } from './health-checks-types';\nimport { HealthCheckContext } from './health-checks-utils';\nimport ProbeForm from './ProbeForm';\nimport './HealthCheckProbe.scss';\n\ninterface HealthCheckProbeProps {\n  probeType: string;\n}\n\nconst HealthCheckProbe: React.FC<HealthCheckProbeProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const [temporaryProbeData, setTemporaryProbeData] = React.useState<HealthCheckProbeData>();\n  const showProbe = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, true);\n    setTemporaryProbeData(healthChecks?.[probeType].data);\n  };\n\n  const handleDeleteProbe = () => {\n    setFieldValue(`healthChecks.${probeType}`, healthChecksDefaultValues);\n    if (healthChecks?.[probeType]?.modified) {\n      setFieldValue(`healthChecks.${probeType}.modified`, false);\n    } else {\n      setFieldValue(`healthChecks.${probeType}.modified`, true);\n    }\n  };\n\n  const handleReset = () => {\n    if (!healthChecks?.[probeType]?.enabled) {\n      setFieldValue(`healthChecks.${probeType}`, healthChecksDefaultValues);\n    } else {\n      setFieldValue(`healthChecks.${probeType}.showForm`, false);\n      setFieldValue(`healthChecks.${probeType}.data`, temporaryProbeData);\n    }\n    setFieldValue(`healthChecks.${probeType}.modified`, false);\n  };\n\n  const handleSubmit = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, false);\n    setFieldValue(`healthChecks.${probeType}.enabled`, true);\n    setFieldValue(`healthChecks.${probeType}.modified`, true);\n  };\n\n  const handleAddProbe = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, true);\n  };\n\n  const renderProbe = () => {\n    if (healthChecks?.[probeType]?.showForm) {\n      return <ProbeForm onSubmit={handleSubmit} onClose={handleReset} probeType={probeType} />;\n    }\n    if (healthChecks?.[probeType]?.enabled) {\n      return (\n        <>\n          <Button\n            className=\"odc-heath-check-probe__successButton\"\n            variant={ButtonVariant.plain}\n            isInline\n            onClick={showProbe}\n          >\n            <span className=\"odc-heath-check-probe__successText\">\n              <GreenCheckCircleIcon />{' '}\n              {t('devconsole~{{healthCheckProbeAdded}} added', {\n                healthCheckProbeAdded: getHealthChecksProbeConfig(probeType, t).formTitle,\n              })}\n            </span>\n          </Button>\n          {!viewOnly && (\n            <Tooltip content={t('devconsole~Remove')} position=\"right\">\n              <Button\n                className=\"pf-m-plain--align-left\"\n                variant={ButtonVariant.plain}\n                onClick={handleDeleteProbe}\n              >\n                <MinusCircleIcon />\n              </Button>\n            </Tooltip>\n          )}\n        </>\n      );\n    }\n    return viewOnly ? (\n      t('devconsole~No {{noHealthCheckProbe}}', {\n        noHealthCheckProbe: getHealthChecksProbeConfig(probeType, t).formTitle,\n      })\n    ) : (\n      <Button\n        className=\"pf-m-link--align-left\"\n        variant={ButtonVariant.link}\n        onClick={handleAddProbe}\n        icon={<PlusCircleIcon />}\n      >\n        {t('devconsole~Add {{addHealthCheckProbe}}', {\n          addHealthCheckProbe: getHealthChecksProbeConfig(probeType, t).formTitle,\n        })}\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"co-section-heading-tertiary odc-heath-check-probe__formTitle\">\n        {getHealthChecksProbeConfig(probeType, t).formTitle}\n        {healthChecks?.[probeType]?.enabled && (\n          <Button\n            className=\"pf-m-link--align-left\"\n            variant={ButtonVariant.link}\n            onClick={showProbe}\n          >\n            &nbsp;&nbsp;\n            {`${viewOnly ? t('devconsole~View') : t('devconsole~Edit')} ${t('devconsole~Probe')}`}\n          </Button>\n        )}\n      </div>\n      <div className=\"pf-v5-c-form__helper-text\">\n        {getHealthChecksProbeConfig(probeType, t).formSubtitle}\n      </div>\n      <div className=\"co-toolbar__group co-toolbar__group--left\">{renderProbe()}</div>\n    </>\n  );\n};\n\nexport default HealthCheckProbe;\n","import * as React from 'react';\nimport { TextInputTypes, InputGroupText } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { InputGroupField, InputField, DropdownField, ActionGroupWithIcons } from '@console/shared';\nimport FormSection from '../import/section/FormSection';\nimport { RequestType } from './health-checks-types';\nimport { HealthCheckContext } from './health-checks-utils';\nimport {\n  HTTPRequestTypeForm,\n  TCPRequestTypeForm,\n  CommandRequestTypeForm,\n} from './RequestTypeForms';\nimport './ProbeForm.scss';\n\nconst getRequestTypeForm = (value: string, probeType: string) => {\n  switch (value) {\n    case RequestType.HTTPGET:\n      return <HTTPRequestTypeForm probeType={probeType} />;\n    case RequestType.ContainerCommand:\n      return <CommandRequestTypeForm probeType={probeType} />;\n    case RequestType.TCPSocket:\n      return <TCPRequestTypeForm probeType={probeType} />;\n    default:\n      return null;\n  }\n};\n\ninterface ProbeFormProps {\n  onSubmit: () => void;\n  onClose: () => void;\n  probeType: string;\n}\n\nconst ProbeForm: React.FC<ProbeFormProps> = ({ onSubmit, onClose, probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n    errors,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const RequestTypeOptions = {\n    httpGet: t('devconsole~HTTP GET'),\n    command: t('devconsole~Container command'),\n    tcpSocket: t('devconsole~TCP socket'),\n  };\n  return (\n    <div className=\"odc-heath-check-probe-form\">\n      <FormSection>\n        <DropdownField\n          name={`healthChecks.${probeType}.data.requestType`}\n          label={t('devconsole~Type')}\n          items={RequestTypeOptions}\n          title={RequestType.HTTPGET}\n          disabled={viewOnly}\n          fullWidth\n        />\n        {getRequestTypeForm(healthChecks?.[probeType]?.data?.requestType, probeType)}\n        <InputField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.failureThreshold`}\n          label={t('devconsole~Failure threshold')}\n          style={{ maxWidth: '100%' }}\n          helpText={t(\n            'devconsole~How many times the probe will try starting or restarting before giving up.',\n          )}\n          isDisabled={viewOnly}\n        />\n        <InputField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.successThreshold`}\n          label={t('devconsole~Success threshold')}\n          style={{ maxWidth: '100%' }}\n          helpText={t(\n            'devconsole~How many consecutive successes for the probe to be considered successful after having failed.',\n          )}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.initialDelaySeconds`}\n          label={t('devconsole~Initial delay')}\n          helpText={t(\n            'devconsole~How long to wait after the Container starts before checking its health.',\n          )}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.periodSeconds`}\n          label={t('devconsole~Period')}\n          helpText={t('devconsole~How often to perform the probe.')}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.timeoutSeconds`}\n          label={t('devconsole~Timeout')}\n          helpText={t(\n            'devconsole~How long to wait for the probe to finish, if the time is exceeded, the probe is considered failed.',\n          )}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n      </FormSection>\n      <ActionGroupWithIcons\n        onSubmit={!viewOnly ? onSubmit : undefined}\n        onClose={onClose}\n        isDisabled={!_.isEmpty(errors?.healthChecks?.[probeType])}\n      />\n    </div>\n  );\n};\n\nexport default ProbeForm;\n","import * as React from 'react';\nimport { TextInputTypes, FormGroup } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { NameValueEditor } from '@console/internal/components/utils/name-value-editor';\nimport { InputField, CheckboxField, getFieldId, TextColumnField } from '@console/shared';\nimport { Resources } from '../import/import-types';\nimport { HealthCheckContext } from './health-checks-utils';\n\ninterface RequestTypeFormProps {\n  probeType?: string;\n}\n\nexport const renderPortField = (\n  fieldName: string,\n  resourceType: Resources,\n  viewOnly: boolean,\n  t: TFunction,\n) => {\n  if (resourceType === Resources.KnativeService) {\n    return (\n      <InputField\n        type={TextInputTypes.text}\n        name=\"knative-port\"\n        label={t('devconsole~Port')}\n        placeholder=\"0\"\n        isDisabled\n      />\n    );\n  }\n  return (\n    <InputField\n      type={TextInputTypes.text}\n      name={fieldName}\n      label={t('devconsole~Port')}\n      isDisabled={viewOnly}\n      required\n    />\n  );\n};\n\nexport const HTTPRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks, resources },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const httpHeaders = healthChecks?.[probeType]?.data?.httpGet?.httpHeaders;\n  const initialNameValuePairs = !_.isEmpty(httpHeaders)\n    ? httpHeaders.map((val) => _.values(val))\n    : [['', '']];\n  const [nameValue, setNameValue] = React.useState(initialNameValuePairs);\n  const portFieldName = `healthChecks.${probeType}.data.httpGet.port`;\n\n  const handleNameValuePairs = React.useCallback(\n    ({ nameValuePairs }) => {\n      const updatedNameValuePairs = _.compact(\n        nameValuePairs.map(([name, value]) => {\n          if (_.isObject(value)) {\n            return { name, valueFrom: value };\n          }\n          if (value.length) {\n            return { name, value };\n          }\n          return null;\n        }),\n      );\n      setNameValue(nameValuePairs);\n      setFieldValue(`healthChecks.${probeType}.data.httpGet.httpHeaders`, updatedNameValuePairs);\n    },\n    [setFieldValue, probeType],\n  );\n  return (\n    <>\n      <CheckboxField\n        name={`healthChecks.${probeType}.data.httpGet.scheme`}\n        label={t('devconsole~Use HTTPS')}\n        value=\"HTTPS\"\n        isDisabled={viewOnly}\n      />\n      <FormGroup\n        fieldId={getFieldId(`healthChecks.${probeType}.data.httpGet.httpHeaders`, 'name-value')}\n        name={`healthChecks.${probeType}.data.httpGet.httpHeaders`}\n        label={t('devconsole~HTTP Headers')}\n      >\n        <NameValueEditor\n          nameValuePairs={nameValue}\n          valueString={t('devconsole~Value')}\n          nameString={t('devconsole~Header name')}\n          addString={t('devconsole~Add header')}\n          readOnly={viewOnly}\n          allowSorting={false}\n          updateParentData={handleNameValuePairs}\n        />\n      </FormGroup>\n      <InputField\n        type={TextInputTypes.text}\n        name={`healthChecks.${probeType}.data.httpGet.path`}\n        label={t('devconsole~Path')}\n        placeholder=\"/\"\n        isDisabled={viewOnly}\n      />\n      {renderPortField(portFieldName, resources, viewOnly, t)}\n    </>\n  );\n};\n\nexport const TCPRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { resources },\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const portFieldName = `healthChecks.${probeType}.data.tcpSocket.port`;\n  return renderPortField(portFieldName, resources, viewOnly, t);\n};\n\nexport const CommandRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const commands = healthChecks?.[probeType]?.data?.exec?.command || [''];\n  return (\n    <TextColumnField\n      name={`healthChecks.${probeType}.data.exec.command`}\n      label={t('devconsole~Command')}\n      addLabel={t('devconsole~Add command')}\n      placeholder={t('devconsole~argument')}\n      helpText={t('devconsole~The command to run inside the Container.')}\n      required\n      disableDeleteRow={commands.length === 1}\n      isReadOnly={viewOnly}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { ContainerModel } from '@console/internal/models';\nimport { ResourceLimitField } from '@console/shared';\nimport { MemoryUnits, CPUUnits } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport type ResourceLimitSectionProps = {\n  hideTitle?: boolean;\n};\n\nconst ResourceLimitSection: React.FC<ResourceLimitSectionProps> = ({ hideTitle }) => {\n  const { t } = useTranslation();\n  const {\n    values: { container },\n  } = useFormikContext<FormikValues>();\n  return (\n    <FormSection\n      title={!hideTitle && t('devconsole~Resource limit')}\n      subTitle={t(\n        'devconsole~Resource limits control how much CPU and memory a container will consume on a node.',\n      )}\n      fullWidth\n    >\n      {container && (\n        <span>\n          {t('devconsole~Container')} &nbsp;\n          <ResourceIcon kind={ContainerModel.kind} /> {container}\n        </span>\n      )}\n      <div className=\"co-section-heading-tertiary\">{t('devconsole~CPU')}</div>\n      <ResourceLimitField\n        name=\"limits.cpu.request\"\n        label={t('devconsole~Request')}\n        unitName=\"limits.cpu.requestUnit\"\n        unitOptions={CPUUnits}\n        helpText={t('devconsole~The minimum amount of CPU the Container is guaranteed.')}\n      />\n\n      <ResourceLimitField\n        name=\"limits.cpu.limit\"\n        label={t('devconsole~Limit')}\n        unitName=\"limits.cpu.limitUnit\"\n        unitOptions={CPUUnits}\n        helpText={t(\n          'devconsole~The maximum amount of CPU the Container is allowed to use when running.',\n        )}\n      />\n\n      <div className=\"co-section-heading-tertiary\">{t('devconsole~Memory')}</div>\n      <ResourceLimitField\n        name=\"limits.memory.request\"\n        label={t('devconsole~Request')}\n        unitName=\"limits.memory.requestUnit\"\n        unitOptions={MemoryUnits}\n        helpText={t('devconsole~The minimum amount of Memory the Container is guaranteed.')}\n      />\n\n      <ResourceLimitField\n        name=\"limits.memory.limit\"\n        label={t('devconsole~Limit')}\n        unitName=\"limits.memory.limitUnit\"\n        unitOptions={MemoryUnits}\n        helpText={t(\n          'devconsole~The maximum amount of Memory the Container is allowed to use when running.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default ResourceLimitSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NumberSpinnerField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nconst ScalingSection: React.FC<{ name: string }> = ({ name }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection\n      title={t('devconsole~Scaling')}\n      subTitle={t('devconsole~Replicas are scaled manually based on CPU usage.')}\n      dataTest=\"scaling\"\n    >\n      <NumberSpinnerField\n        name={name}\n        label={t('devconsole~Replicas')}\n        helpText={t('devconsole~The number of instances of your Image.')}\n        setOutputAsIntegerFlag\n      />\n    </FormSection>\n  );\n};\n\nexport default ScalingSection;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { ResourceName } from '@console/internal/components/utils';\nimport { ImageStreamTagModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { DropdownField } from '@console/shared';\nimport {\n  BuilderImage,\n  getTagDataWithDisplayName,\n  getPorts,\n} from '../../../utils/imagestream-utils';\nimport { useSafeK8s } from '../../../utils/safe-k8s-hook';\nimport BuilderImageEnvironments from './BuilderImageEnvironments';\nimport ImageStreamInfo from './ImageStreamInfo';\n\nexport interface BuilderImageTagSelectorProps {\n  selectedBuilderImage: BuilderImage;\n  selectedImageTag: string;\n  showImageInfo?: boolean;\n}\n\nconst BuilderImageTagSelector: React.FC<BuilderImageTagSelectorProps> = ({\n  selectedBuilderImage,\n  selectedImageTag,\n  showImageInfo = true,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      import: { showEditImportStrategy, selectedStrategy },\n    },\n    setFieldValue,\n    setFieldError,\n  } = useFormikContext<FormikValues>();\n  const {\n    name: imageName,\n    tags: imageTags,\n    displayName: imageDisplayName,\n    imageStreamNamespace,\n  } = selectedBuilderImage;\n\n  const tagItems = {};\n  _.each(\n    imageTags,\n    ({ name }) => (tagItems[name] = <ResourceName kind=\"ImageStreamTag\" name={name} />),\n  );\n\n  const [imageTag, displayName] = getTagDataWithDisplayName(\n    imageTags,\n    selectedImageTag,\n    imageDisplayName,\n  );\n\n  const isServerlessFunctionStrategySelected =\n    selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION;\n\n  const k8sGet = useSafeK8s();\n\n  React.useEffect(() => {\n    setFieldValue('image.tagObj', imageTag);\n    k8sGet(ImageStreamTagModel, `${imageName}:${selectedImageTag}`, imageStreamNamespace)\n      .then((imageStreamTag: K8sResourceKind) => {\n        const ports = getPorts(imageStreamTag);\n        setFieldValue('image.ports', ports);\n      })\n      .catch((err) => setFieldError('image.ports', err.message));\n    // Find a way to use useSafeK8s hooks without adding it to the deps array.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedImageTag, setFieldValue, setFieldError, imageName, imageStreamNamespace, imageTag]);\n\n  return (\n    <>\n      <div\n        style={\n          !showEditImportStrategy && !isServerlessFunctionStrategySelected\n            ? { display: 'none' }\n            : {}\n        }\n      >\n        <DropdownField\n          name=\"image.tag\"\n          label={t('devconsole~Builder Image version')}\n          items={tagItems}\n          title={tagItems[selectedImageTag]}\n          fullWidth\n          required\n        />\n      </div>\n      {imageTag && showImageInfo && <ImageStreamInfo displayName={displayName} tag={imageTag} />}\n      {!isServerlessFunctionStrategySelected && (\n        <BuilderImageEnvironments\n          name=\"image.imageEnv\"\n          imageStreamName={imageName}\n          imageStreamTag={selectedImageTag}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BuilderImageTagSelector;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ResourceDropdownField } from '@console/shared';\nimport { getImageStreamResource } from '../../../utils/imagestream-utils';\nimport { ImageStreamActions } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamDropdown: React.FC<{\n  disabled?: boolean;\n  formContextField?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, formContextField, reloadCount }) => {\n  const { t } = useTranslation();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const imgCollection = {};\n\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const { imageStream, formType } = _.get(values, formContextField) || values;\n  const { isi: initialIsi } = _.get(initialValues, formContextField) || initialValues;\n  const { state, dispatch, hasImageStreams, setHasImageStreams } = React.useContext(\n    ImageStreamContext,\n  );\n  const { accessLoading, loading } = state;\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const collectImageStreams = (namespace: string, resource: K8sResourceKind): void => {\n    if (!imgCollection[namespace]) {\n      imgCollection[namespace] = {};\n    }\n    imgCollection[namespace][resource.metadata.name] = resource;\n  };\n  const getTitle = () => {\n    return loading && !isStreamsAvailable\n      ? ''\n      : !isStreamsAvailable\n      ? t('devconsole~No Image Stream')\n      : t('devconsole~Select Image Stream');\n  };\n\n  const onDropdownChange = React.useCallback(\n    (img: string) => {\n      setFieldValue(\n        `${fieldPrefix}imageStream.tag`,\n        img === imageStream.image ? imageStream.tag : '',\n      );\n      formType !== 'edit' && setFieldValue(`${fieldPrefix}isi`, initialIsi);\n      const image = _.get(imgCollection, [imageStream.namespace, img], {});\n      dispatch({ type: ImageStreamActions.setSelectedImageStream, value: image });\n    },\n    [\n      setFieldValue,\n      fieldPrefix,\n      imageStream.image,\n      imageStream.tag,\n      imageStream.namespace,\n      formType,\n      initialIsi,\n      imgCollection,\n      dispatch,\n    ],\n  );\n  const onLoad = (imgstreams) => {\n    const imageStreamAvailable = !_.isEmpty(imgstreams);\n    setHasImageStreams(imageStreamAvailable);\n    loading &&\n      isNamespaceSelected &&\n      dispatch({ type: ImageStreamActions.setLoading, value: false });\n  };\n  const resourceFilter = (resource: K8sResourceKind) => {\n    const {\n      metadata: { namespace },\n    } = resource;\n    collectImageStreams(namespace, resource);\n    return namespace === imageStream.namespace;\n  };\n\n  React.useEffect(() => {\n    imageStream.image && onDropdownChange(imageStream.image);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageStream.image, isStreamsAvailable]);\n\n  React.useEffect(() => {\n    reloadCount && imageStream.image && onDropdownChange(imageStream.image);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reloadCount, isStreamsAvailable]);\n\n  return (\n    <ResourceDropdownField\n      name={`${fieldPrefix}imageStream.image`}\n      label={t('devconsole~Image Stream')}\n      resources={getImageStreamResource(imageStream.namespace)}\n      dataSelector={['metadata', 'name']}\n      key={imageStream.namespace}\n      fullWidth\n      required\n      title={imageStream.image || getTitle()}\n      disabled={!isStreamsAvailable || disabled}\n      onChange={onDropdownChange}\n      onLoad={onLoad}\n      resourceFilter={resourceFilter}\n    />\n  );\n};\n\nexport default ImageStreamDropdown;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceDropdownField } from '@console/shared';\nimport { getProjectResource, BuilderImagesNamespace } from '../../../utils/imagestream-utils';\nimport { ImageStreamActions as Action } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamNsDropdown: React.FC<{ disabled?: boolean; formContextField?: string }> = ({\n  disabled = false,\n  formContextField,\n}) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const { imageStream } = _.get(values, formContextField) || values;\n  const { isi: initialIsi } = _.get(initialValues, formContextField) || initialValues;\n  const { dispatch } = React.useContext(ImageStreamContext);\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const onDropdownChange = React.useCallback(\n    (ns?: string) => {\n      if (ns) {\n        setFieldValue(`${fieldPrefix}imageStream.image`, '');\n        setFieldValue(`${fieldPrefix}imageStream.tag`, '');\n      }\n      setFieldValue(`${fieldPrefix}isi`, initialIsi);\n      dispatch({ type: Action.setLoading, value: true });\n    },\n    [dispatch, fieldPrefix, initialIsi, setFieldValue],\n  );\n\n  React.useEffect(() => {\n    imageStream.namespace && onDropdownChange();\n  }, [onDropdownChange, imageStream.namespace]);\n\n  return (\n    <ResourceDropdownField\n      name={`${fieldPrefix}imageStream.namespace`}\n      label={t('devconsole~Project')}\n      title={imageStream.namespace || t('devconsole~Select Project')}\n      fullWidth\n      required\n      resources={getProjectResource()}\n      dataSelector={['metadata', 'name']}\n      onChange={onDropdownChange}\n      appendItems={{ openshift: BuilderImagesNamespace.Openshift }}\n      disabled={disabled}\n    />\n  );\n};\nexport default ImageStreamNsDropdown;\n","import * as React from 'react';\nimport { ValidatedOptions } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, getIn } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImageStreamTagModel } from '@console/internal/models';\nimport { k8sGet, K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { DropdownField } from '@console/shared';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport {\n  getImageStreamTags,\n  getPorts,\n  getSuggestedName,\n  makePortName,\n  imageStreamLabels,\n} from '../../../utils/imagestream-utils';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamTagDropdown: React.FC<{\n  disabled?: boolean;\n  formContextField?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, formContextField, reloadCount }) => {\n  const { t } = useTranslation();\n  const unmounted = React.useRef(false);\n  let imageStreamTagList = {};\n  const { values, setFieldValue, initialValues, touched } = useFormikContext<FormikValues>();\n  const { name: resourceName, imageStream, application, formType, isi: isiValues } =\n    _.get(values, formContextField) || values;\n  const isiPorts = isiValues?.ports;\n  const { imageStream: initialImageStream, route: initialRoute } =\n    _.get(initialValues, formContextField) || initialValues;\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { state, hasImageStreams, setValidated } = React.useContext(ImageStreamContext);\n  const { selectedImageStream, accessLoading, loading } = state;\n  imageStreamTagList = getImageStreamTags(selectedImageStream as K8sResourceKind);\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const isTagsAvailable = isStreamsAvailable && !_.isEmpty(imageStreamTagList);\n  const isImageStreamSelected = imageStream.image !== '';\n  const initialImageStreamImage = initialImageStream?.image;\n\n  const searchImageTag = React.useCallback(\n    (selectedTag: string) => {\n      setFieldValue(`${fieldPrefix}isSearchingForImage`, true);\n      k8sGet(ImageStreamTagModel, `${imageStream.image}:${selectedTag}`, imageStream.namespace)\n        .then((imageStreamImport) => {\n          if (unmounted.current) return;\n          const {\n            image,\n            tag,\n            status,\n            metadata: { labels },\n          } = imageStreamImport;\n          formContextField && setFieldValue(`${fieldPrefix}imageStreamTag`, imageStreamImport);\n          const imgStreamLabels = _.pick(labels, imageStreamLabels);\n          const name = imageStream.image;\n          const isi = { name, image, tag, status };\n          const ports = getPorts(isi);\n          setFieldValue(`${fieldPrefix}isSearchingForImage`, false);\n          setFieldValue(`${fieldPrefix}isi.name`, name);\n          setFieldValue(\n            `${fieldPrefix}isi.image`,\n            _.merge(image, { metadata: { labels: imgStreamLabels } }),\n          );\n          setFieldValue(`${fieldPrefix}isi.tag`, selectedTag);\n          setFieldValue(`${fieldPrefix}isi.ports`, ports);\n          setFieldValue(`${fieldPrefix}image.ports`, ports);\n          formType !== 'edit' &&\n            resourceName !== name &&\n            setFieldValue(`${fieldPrefix}name`, getSuggestedName(name));\n          application &&\n            application.selectedKey !== UNASSIGNED_KEY &&\n            !application.name &&\n            setFieldValue(`${fieldPrefix}application.name`, `${getSuggestedName(name)}-app`);\n          // set default port value\n          const targetPort =\n            initialRoute &&\n            (!initialRoute.targetPort ||\n              getIn(_.get(touched, `${fieldPrefix}imageStream`), 'image')) &&\n            !getIn(_.get(touched, `${fieldPrefix}route`), 'targetPort') &&\n            _.head(ports);\n          targetPort && setFieldValue(`${fieldPrefix}route.targetPort`, makePortName(targetPort));\n          setValidated(ValidatedOptions.success);\n        })\n        .catch((error) => {\n          if (unmounted.current) return;\n          setFieldValue(`${fieldPrefix}isi`, {});\n          setFieldValue(`${fieldPrefix}isi.status`, {\n            metadata: {},\n            status: '',\n            message: error.message,\n          });\n          setFieldValue(`${fieldPrefix}isSearchingForImage`, false);\n          setValidated(ValidatedOptions.error);\n        });\n    },\n    [\n      setFieldValue,\n      fieldPrefix,\n      imageStream.image,\n      imageStream.namespace,\n      formContextField,\n      resourceName,\n      formType,\n      application,\n      initialRoute,\n      touched,\n      setValidated,\n    ],\n  );\n\n  React.useEffect(() => {\n    imageStream.tag && searchImageTag(imageStream.tag);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageStream.tag]);\n\n  React.useEffect(() => {\n    reloadCount && imageStream.tag && searchImageTag(imageStream.tag);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reloadCount]);\n\n  React.useEffect(() => {\n    if (\n      initialRoute &&\n      getIn(_.get(touched, `${fieldPrefix}imageStream`), 'image') &&\n      !getIn(_.get(touched, `${fieldPrefix}route`), 'targetPort') &&\n      !_.isEqual(initialImageStreamImage, imageStream.image)\n    ) {\n      const targetPort: ContainerPort = _.head(isiPorts);\n      targetPort && setFieldValue(`${fieldPrefix}route.targetPort`, makePortName(targetPort));\n    }\n  }, [\n    touched.route,\n    touched.imageStream,\n    imageStream.image,\n    setFieldValue,\n    isiPorts,\n    initialRoute,\n    initialImageStreamImage,\n    fieldPrefix,\n    touched,\n  ]);\n\n  React.useEffect(() => {\n    return () => {\n      unmounted.current = true;\n    };\n  }, []);\n\n  return (\n    <DropdownField\n      name={`${fieldPrefix}imageStream.tag`}\n      label={t('devconsole~Tag')}\n      items={imageStreamTagList}\n      key={imageStream.image}\n      autocompleteFilter={fuzzy}\n      title={\n        imageStream.tag ||\n        (isNamespaceSelected && isImageStreamSelected && !isTagsAvailable\n          ? t('devconsole~No tag')\n          : t('devconsole~Select tag'))\n      }\n      disabled={!isImageStreamSelected || !isTagsAvailable || disabled}\n      fullWidth\n      required\n      onChange={(tag) => {\n        tag !== '' && searchImageTag(tag);\n      }}\n    />\n  );\n};\n\nexport default ImageStreamTagDropdown;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { CheckboxField, EnvironmentField } from '@console/shared';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface DeploymentConfigSectionProps {\n  namespace: string;\n  resource?: K8sResourceKind;\n  showHeader?: boolean;\n}\n\nconst DeploymentConfigSection: React.FC<DeploymentConfigSectionProps> = ({\n  namespace,\n  resource,\n  showHeader,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      resources,\n      deployment: { env },\n      import: { selectedStrategy, knativeFuncLoaded: funcLoaded },\n    },\n  } = useFormikContext<FormikValues>();\n  const deploymentConfigObj = resource || {\n    kind: 'DeploymentConfig',\n    metadata: {\n      namespace,\n    },\n  };\n\n  return (\n    <FormSection title={showHeader && t('devconsole~Deployment')} fullWidth>\n      <CheckboxField\n        name=\"deployment.triggers.image\"\n        label={t('devconsole~Auto deploy when new Image is available')}\n      />\n      {resources === Resources.OpenShift && (\n        <CheckboxField\n          name=\"deployment.triggers.config\"\n          label={t('devconsole~Auto deploy when deployment configuration changes')}\n        />\n      )}\n      {(\n        selectedStrategy.type === ImportStrategy.SERVERLESS_FUNCTION ? funcLoaded ?? false : true\n      ) ? (\n        <EnvironmentField\n          name=\"deployment.env\"\n          label={t('devconsole~Environment variables (runtime only)')}\n          envs={env}\n          obj={deploymentConfigObj}\n        />\n      ) : (\n        <LoadingBox />\n      )}\n    </FormSection>\n  );\n};\n\nexport default DeploymentConfigSection;\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { DropdownField, DroppableFileInputField, CheckboxField } from '@console/shared';\nimport { usePreferredRoutingOptions } from '../../user-preferences/usePreferredRoutingOptions';\nimport {\n  TerminationType,\n  PassthroughInsecureTrafficType,\n  InsecureTrafficType,\n} from '../import-types';\n\nconst SecureRoute: React.FC = () => {\n  const { t } = useTranslation();\n  const [preferredRoutingOptions, , preferredRoutingOptionsLoaded] = usePreferredRoutingOptions();\n  const { secure: secureRoute, tlsTermination, insecureTraffic } =\n    preferredRoutingOptionsLoaded && preferredRoutingOptions;\n  const {\n    values: {\n      formType,\n      route: { secure, tls },\n    },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n\n  const terminationOptions = {\n    [TerminationType.EDGE]: t('devconsole~Edge'),\n    [TerminationType.PASSTHROUGH]: t('devconsole~Passthrough'),\n    [TerminationType.REENCRYPT]: t('devconsole~Re-encrypt'),\n  };\n  const insecureTrafficOptions =\n    tls.termination === TerminationType.PASSTHROUGH\n      ? {\n          [PassthroughInsecureTrafficType.None]: t('devconsole~None'),\n          [PassthroughInsecureTrafficType.Redirect]: t('devconsole~Redirect'),\n        }\n      : {\n          [InsecureTrafficType.None]: t('devconsole~None'),\n          [InsecureTrafficType.Allow]: t('devconsole~Allow'),\n          [InsecureTrafficType.Redirect]: t('devconsole~Redirect'),\n        };\n\n  React.useEffect(() => {\n    if (formType !== 'edit' && preferredRoutingOptionsLoaded) {\n      setFieldValue('route.secure', secureRoute, false);\n      setFieldValue('route.tls.termination', tlsTermination, false);\n      setFieldValue('route.tls.insecureEdgeTerminationPolicy', insecureTraffic, true);\n    }\n  }, [\n    formType,\n    insecureTraffic,\n    preferredRoutingOptionsLoaded,\n    secureRoute,\n    setFieldValue,\n    tlsTermination,\n  ]);\n  return (\n    <>\n      <CheckboxField\n        name=\"route.secure\"\n        label={t('devconsole~Secure Route')}\n        formLabel={t('devconsole~Security')}\n        helpText={t(\n          'devconsole~Routes can be secured using several TLS termination types for serving certificates.',\n        )}\n      />\n      {secure && (\n        <>\n          <DropdownField\n            name=\"route.tls.termination\"\n            label={t('devconsole~TLS termination')}\n            items={terminationOptions}\n            title={t('devconsole~Select termination type')}\n            fullWidth\n          />\n          <DropdownField\n            name=\"route.tls.insecureEdgeTerminationPolicy\"\n            label={t('devconsole~Insecure traffic')}\n            items={insecureTrafficOptions}\n            title={t('devconsole~Select insecure traffic type')}\n            helpText={t('devconsole~Policy for traffic on insecure schemes like HTTP.')}\n            fullWidth\n          />\n          {tls.termination && tls.termination !== 'passthrough' && (\n            <>\n              <h3>{t('devconsole~Certificates')}</h3>\n              <FormHelperText>\n                {t(\n                  \"devconsole~TLS certificates for edge and re-encrypt termination. If not specified, the router's default certificate is used.\",\n                )}\n              </FormHelperText>\n              <DroppableFileInputField\n                name=\"route.tls.certificate\"\n                label={t('devconsole~Certificate')}\n                helpText={t(\n                  'devconsole~The PEM format certificate. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              <DroppableFileInputField\n                name=\"route.tls.key\"\n                label={t('devconsole~Private Key')}\n                helpText={t(\n                  'devconsole~The PEM format key. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              <DroppableFileInputField\n                name=\"route.tls.caCertificate\"\n                label={t('devconsole~CA certificate')}\n                helpText={t(\n                  'devconsole~The PEM format CA certificate chain. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              {tls.termination === 'reencrypt' && (\n                <DroppableFileInputField\n                  name=\"route.tls.destinationCaCertificate\"\n                  label={t('devconsole~Destination CA Certificate')}\n                  helpText={t(\n                    'devconsole~The PEM format CA certificate chain to validate the endpoint certificate for re-encrypt termination. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                  )}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SecureRoute;\n","import * as React from 'react';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared';\nimport { ClusterBuildStrategyModel } from '@console/shipwright-plugin/src/models';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\n\n/** NOTE: ClusterBuildStrategies are needed to be installed to use Shipwright Builds */\nexport const useShipwrightBuilds = (): boolean => {\n  return useFlag('SHIPWRIGHT_BUILD');\n};\n\nexport interface AvailableBuildStrategies {\n  s2i: boolean;\n  buildah: boolean;\n}\n\nexport const useClusterBuildStrategy = (): [AvailableBuildStrategies, boolean] => {\n  const [data, setData] = React.useState<AvailableBuildStrategies>({\n    s2i: false,\n    buildah: false,\n  });\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [, s2iLoaded, s2iErr] = useK8sGet<K8sResourceKind>(\n    ClusterBuildStrategyModel,\n    ClusterBuildStrategy.S2I,\n  );\n  const [, buildahLoaded, buildahErr] = useK8sGet<K8sResourceKind>(\n    ClusterBuildStrategyModel,\n    ClusterBuildStrategy.BUILDAH,\n  );\n\n  React.useEffect(() => {\n    if (s2iLoaded && buildahLoaded) {\n      setLoaded(true);\n    }\n  }, [s2iLoaded, buildahLoaded]);\n\n  React.useEffect(() => {\n    if (loaded) {\n      if (!s2iErr) {\n        setData((prevData) => ({\n          ...prevData,\n          s2i: true,\n        }));\n      }\n      if (!buildahErr) {\n        setData((prevData) => ({\n          ...prevData,\n          buildah: true,\n        }));\n      }\n    }\n  }, [loaded, s2iErr, buildahErr]);\n\n  return [data, loaded];\n};\n\nexport const isPreferredStrategyAvailable = (\n  importStrategy: ImportStrategy,\n  clusterBuildStrategy: AvailableBuildStrategies,\n) => {\n  switch (importStrategy) {\n    case ImportStrategy.S2I:\n      return clusterBuildStrategy.s2i;\n    case ImportStrategy.DOCKERFILE:\n      return clusterBuildStrategy.buildah;\n    default:\n      return false;\n  }\n};\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { QUERY_PROPERTIES } from '../const';\n\ntype StateProps = {\n  application: string;\n};\ntype DispatchProps = {\n  onSetApp: (application: string) => void;\n};\ntype OwnProps = {\n  children: (desiredApplication?: string) => React.ReactNode;\n};\n\ntype QueryFocusApplicationProps = StateProps & DispatchProps & OwnProps;\n\nconst QueryFocusApplication: React.FC<QueryFocusApplicationProps> = ({\n  children,\n  application,\n  onSetApp,\n}) => {\n  const originalApp = React.useRef(application);\n  const desiredApplication = new URLSearchParams(window.location.search).get(\n    QUERY_PROPERTIES.APPLICATION,\n  );\n\n  React.useEffect(() => {\n    const originalApplication = originalApp.current;\n    const sanitizedApp = sanitizeApplicationValue(desiredApplication);\n    if (sanitizedApp && sanitizedApp !== originalApplication) {\n      onSetApp(sanitizedApp);\n    }\n\n    return () => {\n      if (application !== originalApplication) {\n        onSetApp(originalApplication);\n      }\n    };\n  }, [desiredApplication, onSetApp, originalApp, application]);\n\n  return <>{children(desiredApplication)}</>;\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  (state: RootState): StateProps => ({\n    application: getActiveApplication(state),\n  }),\n  {\n    onSetApp: setActiveApplication,\n  },\n)(QueryFocusApplication);\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SelectorInputField from '@console/shared/src/components/formik-fields/SelectorInputField';\nimport FormSection from '../section/FormSection';\n\nconst LabelSection: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <FormSection\n      title={t('devconsole~Labels')}\n      subTitle={t('devconsole~Each label is applied to each created resource.')}\n    >\n      <SelectorInputField name=\"labels\" placeholder=\"app.io/type=frontend\" dataTest=\"labels\" />\n    </FormSection>\n  );\n};\n\nexport default LabelSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxField } from '@console/shared';\nimport { Resources, RouteData } from '../import-types';\nimport AdvancedRouteOptions from '../route/AdvancedRouteOptions';\nimport PortInputField from '../route/PortInputField';\n\ninterface RouteSectionProps {\n  route: RouteData;\n  resources: Resources;\n}\n\nconst RouteSection: React.FC<RouteSectionProps> = ({ route, resources }) => {\n  const { t } = useTranslation();\n  const { defaultUnknownPort, disable, create } = route;\n\n  return (\n    <>\n      <PortInputField defaultPort={defaultUnknownPort} />\n      <CheckboxField\n        name=\"route.create\"\n        label={t('devconsole~Create a route')}\n        helpText={t('devconsole~Exposes your component at a public URL')}\n        isDisabled={disable}\n      />\n      <AdvancedRouteOptions canCreateRoute={create} resources={resources} />\n    </>\n  );\n};\n\nexport default RouteSection;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport SelectorInputField from '@console/shared/src/components/formik-fields/SelectorInputField';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport ServerlessRouteSection from '../serverless/ServerlessRouteSection';\nimport CreateRoute from './CreateRoute';\nimport SecureRoute from './SecureRoute';\n\ntype AdvancedRouteOptionsProps = {\n  canCreateRoute: boolean;\n  resources: Resources;\n};\n\nconst AdvancedRouteOptions: React.FC<AdvancedRouteOptionsProps> = ({\n  canCreateRoute,\n  resources,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <ExpandCollapse\n      textExpanded={t('devconsole~Hide advanced Routing options')}\n      textCollapsed={t('devconsole~Show advanced Routing options')}\n    >\n      <FormSection>\n        {canCreateRoute ? (\n          resources === Resources.KnativeService ? (\n            <ServerlessRouteSection />\n          ) : (\n            <>\n              <CreateRoute />\n              <SecureRoute />\n              <SelectorInputField\n                name=\"route.labels\"\n                label={t('devconsole~Labels')}\n                helpText={t(\n                  'devconsole~Additional labels which are only added to the Route resource.',\n                )}\n                placeholder=\"app.io/type=frontend\"\n                dataTest=\"route-labels\"\n              />\n            </>\n          )\n        ) : (\n          <Alert\n            variant=\"info\"\n            isInline\n            title={t(\n              'devconsole~Select the checkbox \"Create a route\" to edit advanced routing options',\n            )}\n          />\n        )}\n      </FormSection>\n    </ExpandCollapse>\n  );\n};\n\nexport default AdvancedRouteOptions;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { DomainMappingModel } from '@console/knative-plugin/src';\nimport { MultiTypeaheadField } from '@console/shared';\nimport { GitImportFormData, DeployImageFormData, UploadJarFormData } from '../import-types';\nimport {\n  getAllOtherDomainMappingInUse,\n  getOtherKsvcFromDomainMapping,\n  hasOtherKsvcDomainMappings,\n  removeDuplicateDomainMappings,\n} from './serverless-utils';\n\nconst ServerlessRouteSection: React.FC = () => {\n  const { t } = useTranslation();\n  const {\n    setFieldValue,\n    values: {\n      name,\n      project: { name: namespace },\n      serverless,\n    },\n  } = useFormikContext<DeployImageFormData | GitImportFormData | UploadJarFormData>();\n  const resource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: referenceForModel(DomainMappingModel),\n      isList: true,\n      namespace,\n      optional: true,\n    }),\n    [namespace],\n  );\n  const [data, domainMappingLoaded, domainMappingLoadErr] = useK8sWatchResource<K8sResourceKind[]>(\n    resource,\n  );\n  const domainMappingResources = React.useMemo(() => {\n    return domainMappingLoaded && !domainMappingLoadErr\n      ? data.map((dm) => {\n          const ksvc = getOtherKsvcFromDomainMapping(dm, name);\n          return {\n            value: ksvc ? `${dm.metadata.name} (${ksvc})` : dm.metadata.name,\n            disabled: false,\n          };\n        })\n      : [];\n  }, [domainMappingLoaded, domainMappingLoadErr, data, name]);\n\n  React.useEffect(() => {\n    if (domainMappingLoaded && !domainMappingLoadErr && data?.length) {\n      const mappedDomain = data\n        .filter((domainRes) => domainRes.spec?.ref?.name === name)\n        .map((filterDm) => filterDm.metadata.name);\n      const newDomainMap = [\n        ...(serverless.domainMapping ? serverless.domainMapping : []),\n        ...mappedDomain,\n      ];\n      setFieldValue('serverless', {\n        ...serverless,\n        domainMapping: removeDuplicateDomainMappings(newDomainMap, mappedDomain),\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, domainMappingLoaded, domainMappingLoadErr, name, setFieldValue]);\n\n  const domainsInUse = getAllOtherDomainMappingInUse(serverless.domainMapping, data, name) ?? [];\n  return (\n    <>\n      {domainMappingLoaded || domainMappingLoadErr ? (\n        <>\n          <MultiTypeaheadField\n            data-test-id=\"domain-mapping-field\"\n            name=\"serverless.domainMapping\"\n            label={t('devconsole~Domain mapping')}\n            ariaLabel={t('devconsole~Domain mapping')}\n            options={domainMappingResources}\n            placeholderText={t('devconsole~Add domain')}\n            helpText={t('devconsole~Enter custom domain to map to the Knative service')}\n            isCreatable\n          />\n          {hasOtherKsvcDomainMappings(serverless.domainMapping) && (\n            <Alert\n              data-test=\"domain-mapping-warning\"\n              variant=\"warning\"\n              isInline\n              title={t('devconsole~Domain mapping(s) will be updated')}\n            >\n              <div style={{ marginBottom: 'var(--pf-v5-global--spacer--sm)' }}>\n                {t(\n                  'devconsole~Warning: The following domain(s) will be removed from the associated service',\n                )}\n              </div>\n              {domainsInUse.length > 0 && (\n                <ul>\n                  {domainsInUse.map((dm) => {\n                    return (\n                      <li key={dm.metadata.uid}>\n                        {t(`devconsole~{{domainMapping}} from {{knativeService}}`, {\n                          domainMapping: dm.metadata.name,\n                          knativeService: dm.spec.ref.name,\n                        })}\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n            </Alert>\n          )}\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </>\n  );\n};\n\nexport default ServerlessRouteSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\nconst CreateRoute: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.hostname\"\n        label={t('devconsole~Hostname')}\n        helpText={t(\n          'devconsole~Public hostname for the route. If not specified, a hostname is generated.',\n        )}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.path\"\n        label={t('devconsole~Path')}\n        placeholder=\"/\"\n        helpText={t('devconsole~Path that the router watches to route traffic to the service.')}\n      />\n    </>\n  );\n};\n\nexport default CreateRoute;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { SingleTypeaheadField, SelectInputOption } from '@console/shared';\nimport { DeployImageFormData, GitImportFormData, UploadJarFormData } from '../import-types';\n\ninterface PortInputFieldProps {\n  defaultPort: number;\n}\n\nconst PortInputField: React.FC<PortInputFieldProps> = ({ defaultPort }) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      image: { ports },\n    },\n  } = useFormikContext<DeployImageFormData | GitImportFormData | UploadJarFormData>();\n  const portOptions: SelectInputOption[] = Array.from(\n    new Set(ports.map((port) => port.containerPort.toString())),\n  ).map((value) => ({\n    value,\n    disabled: false,\n  }));\n  const placeholderPort = ports[0]?.containerPort || defaultPort;\n\n  return (\n    <SingleTypeaheadField\n      data-test-id=\"target-port-field\"\n      name=\"route.unknownTargetPort\"\n      label={t('devconsole~Target port')}\n      ariaLabel={t('devconsole~Target port')}\n      placeholderText={placeholderPort.toString()}\n      helpText={t('devconsole~Target port for traffic.')}\n      options={portOptions}\n      toggleOnSelection\n    />\n  );\n};\n\nexport default PortInputField;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NumberSpinnerField, ResourceLimitField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nconst ServerlessScalingSection: React.FC = () => {\n  const { t } = useTranslation();\n  const AutoscaleWindowUnits = {\n    s: t('devconsole~Sec'),\n    m: t('devconsole~Min'),\n    h: t('devconsole~Hrs'),\n  };\n\n  return (\n    <FormSection\n      title={t('devconsole~Scaling')}\n      subTitle={t(\n        'devconsole~Set the autoscaler parameters around pods and concurrency limits in this section.',\n      )}\n    >\n      <NumberSpinnerField\n        name=\"serverless.scaling.minpods\"\n        label={t('devconsole~Min Pods')}\n        helpText={t(\n          'devconsole~The lower limit for the number of Pods that can be set by autoscaler. If not specified defaults to 0.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.maxpods\"\n        label={t('devconsole~Max Pods')}\n        helpText={t(\n          'devconsole~The upper limit for the number of Pods that can be set by autoscaler.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencytarget\"\n        label={t('devconsole~Concurrency target')}\n        helpText={t(\n          'devconsole~Defines how many concurrent requests are wanted per instance of the application at a given time (soft limit) and is the recommended configuration for autoscaling. If not specified, will be defaulted to the value set in the Cluster config.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencylimit\"\n        label={t('devconsole~Concurrency limit')}\n        helpText={t(\n          'devconsole~Limits the amount of concurrent requests allowed into one instance of the application at a given time (hard limit), and is configured in the revision template. If not specified, will be defaulted to the value set in the Cluster config.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencyutilization\"\n        label={t('devconsole~Concurrency utilization')}\n        helpText={t('devconsole~Percentage of concurrent requests utilization before scaling up.')}\n      />\n      <ResourceLimitField\n        name=\"serverless.scaling.autoscale.autoscalewindow\"\n        label={t('devconsole~Autoscale window')}\n        unitName=\"serverless.scaling.autoscale.autoscalewindowUnit\"\n        unitOptions={AutoscaleWindowUnits}\n        helpText={t(\n          'devconsole~Duration to look back for making auto-scaling decisions. The service is scaled to zero if no request was received in during that time.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default ServerlessScalingSection;\n","import * as React from 'react';\nimport {\n  ImageEnvironment,\n  ImportEnvironment,\n  isImportEnvironment,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\n\nexport const useBuilderImageEnvironments = (\n  imageStreamName: string,\n  imageStreamTag: string,\n): [ImageEnvironment[], boolean] => {\n  const [environmentExtensions, resolved] = useResolvedExtensions<ImportEnvironment>(\n    isImportEnvironment,\n  );\n\n  const filteredExtensions = React.useMemo(\n    () =>\n      resolved\n        ? environmentExtensions\n            .filter(\n              (e) =>\n                e.properties.imageStreamName === imageStreamName &&\n                e.properties.imageStreamTags.includes(imageStreamTag),\n            )\n            .map((e) => e.properties.environments)\n            .flat()\n        : [],\n    [environmentExtensions, imageStreamName, imageStreamTag, resolved],\n  );\n\n  return [filteredExtensions, resolved];\n};\n","import { k8sCreateResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { BUILDRUN_TO_BUILD_REFERENCE_LABEL, BUILDRUN_TO_RESOURCE_MAP_LABEL } from './const';\nimport { BuildRunModel, BuildRunModelV1Alpha1 } from './models';\nimport { Build, BuildRun } from './types';\nimport { isV1Alpha1Resource } from './utils';\n\n/** Create a new BuildRun for a given Build to start it. */\nexport const startBuild = async (build: Build): Promise<BuildRun> => {\n  const resourceMapLabel = build.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] || null;\n  let newBuildRunData: BuildRun;\n\n  if (isV1Alpha1Resource(build)) {\n    newBuildRunData = {\n      apiVersion: 'shipwright.io/v1alpha1',\n      kind: 'BuildRun',\n      metadata: {\n        namespace: build.metadata.namespace,\n        generateName: `${build.metadata.name}-`,\n        labels: {\n          [BUILDRUN_TO_BUILD_REFERENCE_LABEL]: build.metadata.name,\n          ...(resourceMapLabel ? { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } : {}),\n        },\n      },\n      spec: {\n        buildRef: {\n          name: build.metadata.name,\n        },\n      },\n    };\n  } else {\n    newBuildRunData = {\n      apiVersion: 'shipwright.io/v1beta1',\n      kind: 'BuildRun',\n      metadata: {\n        namespace: build.metadata.namespace,\n        generateName: `${build.metadata.name}-`,\n        labels: {\n          [BUILDRUN_TO_BUILD_REFERENCE_LABEL]: build.metadata.name,\n          ...(resourceMapLabel ? { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } : {}),\n        },\n      },\n      spec: {\n        build: {\n          name: build.metadata.name,\n        },\n      },\n    };\n  }\n  return k8sCreateResource({\n    model: isV1Alpha1Resource(newBuildRunData) ? BuildRunModelV1Alpha1 : BuildRunModel,\n    data: newBuildRunData,\n  });\n};\n\n/**\n * Return if re-run is supported for a specific BuildRun.\n *\n * Checks that BuildRun has a buildRef or buildSpec. Doesn't check any permissions!\n */\nexport const canRerunBuildRun = (buildRun: BuildRun): boolean => {\n  const hasBuildRef = isV1Alpha1Resource(buildRun)\n    ? !!buildRun.spec?.buildRef?.name\n    : !!buildRun.spec?.build?.name;\n  const hasBuildSpec = isV1Alpha1Resource(buildRun)\n    ? !!buildRun.spec?.buildSpec\n    : !!buildRun.spec?.build?.spec;\n\n  return hasBuildRef || hasBuildSpec;\n};\n\n/**\n * Create a new BuildRun for a given BuildRun to re-run it.\n *\n * Will fail for BuildRuns without buildRef or buildSpec. See `canRerunBuildRun`\n */\nexport const rerunBuildRun = async (buildRun: BuildRun): Promise<BuildRun> => {\n  const buildRefName = isV1Alpha1Resource(buildRun)\n    ? buildRun.spec?.buildRef?.name\n    : buildRun.spec?.build?.name;\n  const buildSpec = isV1Alpha1Resource(buildRun)\n    ? buildRun.spec?.buildSpec\n    : buildRun.spec?.build?.spec;\n  const resourceMapLabel = buildRun.metadata?.labels?.[BUILDRUN_TO_RESOURCE_MAP_LABEL] || null;\n\n  if (buildRefName) {\n    const generateName = buildRun.metadata.generateName || `${buildRefName}-`;\n    let newBuildRunData: BuildRun;\n\n    if (isV1Alpha1Resource(buildRun)) {\n      newBuildRunData = {\n        apiVersion: 'shipwright.io/v1alpha1',\n        kind: 'BuildRun',\n        metadata: {\n          namespace: buildRun.metadata.namespace,\n          generateName,\n          labels: {\n            [BUILDRUN_TO_BUILD_REFERENCE_LABEL]: buildRefName,\n            ...(resourceMapLabel ? { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } : {}),\n          },\n        },\n        spec: {\n          buildRef: {\n            name: buildRefName,\n          },\n        },\n      };\n    } else {\n      newBuildRunData = {\n        apiVersion: 'shipwright.io/v1beta1',\n        kind: 'BuildRun',\n        metadata: {\n          namespace: buildRun.metadata.namespace,\n          generateName,\n          labels: {\n            [BUILDRUN_TO_BUILD_REFERENCE_LABEL]: buildRefName,\n            ...(resourceMapLabel ? { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } : {}),\n          },\n        },\n        spec: {\n          build: {\n            name: buildRefName,\n          },\n        },\n      };\n    }\n\n    return k8sCreateResource({\n      model: isV1Alpha1Resource(newBuildRunData) ? BuildRunModelV1Alpha1 : BuildRunModel,\n      data: newBuildRunData,\n    });\n  }\n\n  if (buildSpec) {\n    const generateName = buildRun.metadata.generateName || `${buildRun.metadata.name}-`;\n    let newBuildRunData: BuildRun;\n\n    if (isV1Alpha1Resource(buildRun)) {\n      newBuildRunData = {\n        apiVersion: 'shipwright.io/v1alpha1',\n        kind: 'BuildRun',\n        metadata: {\n          namespace: buildRun.metadata.namespace,\n          generateName,\n          ...(resourceMapLabel\n            ? { labels: { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } }\n            : {}),\n        },\n        spec: {\n          buildSpec,\n        },\n      };\n    } else {\n      newBuildRunData = {\n        apiVersion: 'shipwright.io/v1beta1',\n        kind: 'BuildRun',\n        metadata: {\n          namespace: buildRun.metadata.namespace,\n          generateName,\n          ...(resourceMapLabel\n            ? { labels: { [BUILDRUN_TO_RESOURCE_MAP_LABEL]: resourceMapLabel } }\n            : {}),\n        },\n        spec: {\n          build: {\n            spec: buildSpec,\n          },\n        },\n      };\n    }\n    return k8sCreateResource({\n      model: isV1Alpha1Resource(newBuildRunData) ? BuildRunModelV1Alpha1 : BuildRunModel,\n      data: newBuildRunData,\n    });\n  }\n\n  if (isV1Alpha1Resource(buildRun)) {\n    throw new Error('Could not rerun BuildRun without buildRef.name or inline buildSpec.');\n  } else {\n    throw new Error('Could not rerun BuildRun without build.name or inline buildSpec.');\n  }\n};\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { useFormikContext, useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport IconDropdown from '../icon/IconDropdown';\nimport FormSection from './FormSection';\n\nconst IconSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [field] = useField<string>('runtimeIcon');\n  const formik = useFormikContext<{ runtimeIcon: string }>();\n\n  const onChanged = (value: string) => {\n    formik.setFieldValue('runtimeIcon', value);\n    formik.setFieldTouched('runtimeIcon');\n  };\n\n  return (\n    <FormSection>\n      <FormGroup fieldId=\"runtimeIcon\" label={t('devconsole~Runtime icon')}>\n        <IconDropdown\n          placeholder={t('devconsole~Select an icon')}\n          value={field.value}\n          onChanged={onChanged}\n        />\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t(\n                'devconsole~The icon represents your Image in Topology view. A label will also be added to the resource defining the icon.',\n              )}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n    </FormSection>\n  );\n};\n\nexport default IconSection;\n","import { sanitizeApplicationValue } from '@console/topology/src/utils';\nimport { healthChecksProbeInitialData } from '../health-checks/health-checks-probe-utils';\nimport { BaseFormData, Resources } from './import-types';\n\nexport const getBaseInitialValues = (\n  namespace: string,\n  activeApplication: string,\n): BaseFormData => {\n  return {\n    project: {\n      name: namespace || '',\n      displayName: '',\n      description: '',\n    },\n    application: {\n      initial: sanitizeApplicationValue(activeApplication),\n      name: sanitizeApplicationValue(activeApplication),\n      selectedKey: activeApplication,\n    },\n    name: '',\n    image: {\n      selected: '',\n      recommended: '',\n      tag: '',\n      tagObj: {},\n      ports: [],\n      isRecommending: false,\n      couldNotRecommend: false,\n    },\n    serverless: {\n      scaling: {\n        minpods: '',\n        maxpods: '',\n        concurrencytarget: '',\n        concurrencylimit: '',\n        defaultConcurrencytarget: '',\n        defaultConcurrencyutilization: '',\n        autoscale: {\n          autoscalewindow: '',\n          autoscalewindowUnit: '',\n          defaultAutoscalewindowUnit: 's',\n          defaultAutoscalewindow: '',\n        },\n        concurrencyutilization: '',\n      },\n      domainMapping: [],\n    },\n    route: {\n      disable: false,\n      create: true,\n      targetPort: '',\n      unknownTargetPort: '',\n      defaultUnknownPort: 8080,\n      path: '',\n      hostname: '',\n      secure: false,\n      tls: {\n        termination: null,\n        insecureEdgeTerminationPolicy: null,\n        caCertificate: '',\n        certificate: '',\n        destinationCACertificate: '',\n        key: '',\n      },\n    },\n    resources: Resources.Kubernetes,\n    build: {\n      env: [],\n      triggers: {},\n      strategy: 'Source',\n    },\n    deployment: {\n      env: [],\n      triggers: {\n        image: true,\n        config: true,\n      },\n      replicas: 1,\n    },\n    labels: {},\n    limits: {\n      cpu: {\n        request: '',\n        requestUnit: 'm',\n        defaultRequestUnit: 'm',\n        limit: '',\n        limitUnit: 'm',\n        defaultLimitUnit: 'm',\n      },\n      memory: {\n        request: '',\n        requestUnit: 'Mi',\n        defaultRequestUnit: 'Mi',\n        limit: '',\n        limitUnit: 'Mi',\n        defaultLimitUnit: 'Mi',\n      },\n    },\n    healthChecks: healthChecksProbeInitialData,\n  };\n};\n","import { useEffect, useRef } from 'react';\nimport { k8sGet, Options } from '@console/internal/module/k8s';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s/types';\n\nexport const useSafeK8s = () => {\n  const controller = useRef<AbortController>();\n  const mounted = useRef(true);\n\n  useEffect(() => {\n    controller.current = new AbortController();\n    return () => {\n      mounted.current = false;\n      controller.current.abort();\n    };\n  }, []);\n\n  return (\n    kind: K8sKind,\n    name: string,\n    ns: string,\n    opts: Options = {},\n  ): Promise<K8sResourceKind> => {\n    return new Promise((resolve, reject) => {\n      k8sGet(kind, name, ns, opts, { signal: controller.current.signal as AbortSignal })\n        .then((data) => mounted.current && resolve(data))\n        .catch((error) => mounted.current && reject(error));\n    });\n  };\n};\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { InputField } from '@console/shared';\nimport { useBuilderImageEnvironments } from './builderImageHooks';\n\ninterface BuilderImageEnvironmentsProps {\n  name: string;\n  imageStreamName: string;\n  imageStreamTag: string;\n}\n\nconst BuilderImageEnvironments: React.FC<BuilderImageEnvironmentsProps> = ({\n  name,\n  imageStreamName,\n  imageStreamTag,\n}) => {\n  const {\n    values: {\n      build: { env: buildEnvs },\n      image: { imageEnv },\n      formType,\n    },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n\n  const [environments, loaded] = useBuilderImageEnvironments(imageStreamName, imageStreamTag);\n\n  React.useEffect(() => {\n    if (formType === 'edit' && buildEnvs?.length > 0 && !imageEnv) {\n      environments.forEach((env) =>\n        buildEnvs.forEach((buildEnv) => {\n          if (buildEnv.name === env.key) {\n            setFieldValue(`${name}.${env.key}`, buildEnv.value);\n          }\n        }),\n      );\n    }\n  }, [buildEnvs, formType, imageEnv, setFieldValue, environments, name]);\n\n  if (!loaded) {\n    return null;\n  }\n  return (\n    <>\n      {environments.map((env) => (\n        <InputField\n          key={`${imageStreamName}-${env.key}`}\n          type={TextInputTypes.text}\n          name={`${name}.${env.key}`}\n          label={env.label}\n          helpText={env.description}\n          placeholder={env.defaultValue}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default BuilderImageEnvironments;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImageStreamIcon } from '@console/internal/components/catalog/catalog-item-icon';\nimport { getAnnotationTags } from '@console/internal/components/image-stream';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { getSampleRepo } from '../../../utils/imagestream-utils';\n\nexport type ImageStreamInfoProps = {\n  displayName: string;\n  tag: object;\n};\n\nconst ImageStreamInfo: React.FC<ImageStreamInfoProps> = ({ displayName, tag }) => {\n  const { t } = useTranslation();\n  const annotationTags = getAnnotationTags(tag);\n  const description = _.get(tag, 'annotations.description');\n  const sampleRepo = getSampleRepo(tag);\n\n  return (\n    <div data-test=\"imageStream-details\">\n      <div className=\"co-catalog-item-details\">\n        <ImageStreamIcon tag={tag} iconSize=\"large\" />\n        <div>\n          <h2 className=\"co-section-heading co-catalog-item-details__name\">{displayName}</h2>\n          {annotationTags && (\n            <p className=\"co-catalog-item-details__tags\">\n              {_.map(annotationTags, (annotationTag, i) => (\n                <span className=\"co-catalog-item-details__tag\" key={i}>\n                  {annotationTag}\n                </span>\n              ))}\n            </p>\n          )}\n        </div>\n      </div>\n      {description && <p className=\"co-catalog-item-details__description\">{description}</p>}\n      {sampleRepo && (\n        <p>\n          {t('devconsole~Sample repository:')} <ExternalLink href={sampleRepo} text={sampleRepo} />\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ImageStreamInfo;\n","import * as _ from 'lodash';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  ImageStreamModel,\n  ServiceModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sVerb,\n  k8sCreate,\n  k8sUpdate,\n  k8sWaitForUpdate,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { RegistryType } from '../../utils/imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  mergeData,\n  getCommonAnnotations,\n  getRouteAnnotations,\n  getTriggerAnnotation,\n} from '../../utils/resource-label-utils';\nimport { createRoute, createService, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport { DeployImageFormData, Resources } from './import-types';\n\nconst WAIT_FOR_IMAGESTREAM_UPDATE_TIMEOUT = 5000;\nconst WAIT_FOR_IMAGESTREAM_GENERATION = 2;\n\nexport const createOrUpdateImageStream = async (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalImageStream?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    allowInsecureRegistry,\n    isi: { name: isiName, tag },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const defaultLabels = getAppLabels({ name, applicationName });\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: imgStreamName },\n    },\n    spec: {\n      tags: [\n        {\n          name: tag || 'latest',\n          annotations: {\n            ...getCommonAnnotations(),\n            'openshift.io/imported-from': isiName,\n          },\n          from: {\n            kind: 'DockerImage',\n            name: `${isiName}`,\n          },\n          importPolicy: { insecure: allowInsecureRegistry },\n          referencePolicy: { type: 'Local' },\n        },\n      ],\n    },\n  };\n\n  if (verb === 'update' && !_.isEmpty(originalImageStream)) {\n    const mergedImageStream = mergeData(originalImageStream, newImageStream);\n    mergedImageStream.metadata.name = originalImageStream.metadata.name;\n    return k8sUpdate(ImageStreamModel, mergedImageStream);\n  }\n  const createdImageStream = await k8sCreate(\n    ImageStreamModel,\n    newImageStream,\n    dryRun ? dryRunOpt : {},\n  );\n  if (dryRun) {\n    return createdImageStream;\n  }\n  return k8sWaitForUpdate(\n    ImageStreamModel,\n    createdImageStream,\n    (imageStream) => imageStream.metadata.generation >= WAIT_FOR_IMAGESTREAM_GENERATION,\n    WAIT_FOR_IMAGESTREAM_UPDATE_TIMEOUT,\n  ).catch(() => createdImageStream);\n};\n\nconst getMetadata = (resource: Resources, formData: DeployImageFormData) => {\n  const {\n    application: { name: applicationName },\n    name,\n    isi: { image },\n    labels: userLabels,\n    imageStream: { image: imageStreamName, tag: selectedTag, namespace },\n    runtimeIcon,\n  } = formData;\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    runtimeIcon,\n    selectedTag,\n    namespace,\n  });\n  const labels = { ...defaultLabels, ...userLabels };\n  const podLabels = getPodLabels(resource, name);\n\n  const volumes = [];\n  const volumeMounts = [];\n  let volumeNumber = 0;\n  _.each(_.get(image, ['dockerImageMetadata', 'Config', 'Volumes']), (value, path) => {\n    volumeNumber++;\n    const volumeName = `${name}-${volumeNumber}`;\n    volumes.push({\n      name: volumeName,\n      emptyDir: {},\n    });\n    volumeMounts.push({\n      name: volumeName,\n      mountPath: path,\n    });\n  });\n\n  return { labels, podLabels, volumes, volumeMounts };\n};\n\nexport const createOrUpdateDeployment = (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    registry,\n    project: { name: namespace },\n    name,\n    isi: { image, ports, tag: imageStreamTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    imageStream: { image: imgName, namespace: imgNamespace },\n    healthChecks,\n  } = formData;\n\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(\n      name,\n      imgName || name,\n      imgNamespace || namespace,\n      imageChange,\n      imageStreamTag,\n    ),\n  };\n  const templateAnnotations = getCommonAnnotations();\n\n  const { labels, podLabels, volumes, volumeMounts } = getMetadata(Resources.Kubernetes, formData);\n\n  const imageRef =\n    registry === RegistryType.External\n      ? `${name}:${imageStreamTag}`\n      : _.get(image, 'dockerImageReference');\n\n  const newDeployment = {\n    kind: 'Deployment',\n    apiVersion: 'apps/v1',\n    metadata: {\n      name,\n      namespace,\n      labels,\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      replicas,\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      template: {\n        metadata: {\n          labels: { ...userLabels, ...podLabels },\n          annotations: templateAnnotations,\n        },\n        spec: {\n          volumes,\n          containers: [\n            {\n              name,\n              image: imageRef,\n              ports,\n              volumeMounts,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    project: { name: namespace },\n    name,\n    isi: { image, tag, ports },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    imageStream: { image: imgName, namespace: imgNamespace },\n    healthChecks,\n  } = formData;\n\n  const { labels, podLabels, volumes, volumeMounts } = getMetadata(Resources.OpenShift, formData);\n\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getRouteAnnotations(),\n  };\n  const templateAnnotations = getCommonAnnotations();\n\n  const newDeploymentConfig = {\n    kind: 'DeploymentConfig',\n    apiVersion: 'apps.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels,\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      replicas,\n      selector: podLabels,\n      template: {\n        metadata: {\n          labels: { ...userLabels, ...podLabels },\n          annotations: templateAnnotations,\n        },\n        spec: {\n          volumes,\n          containers: [\n            {\n              name,\n              image: _.get(image, ['dockerImageMetadata', 'Config', 'Image']),\n              ports,\n              volumeMounts,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${imgName || name}:${tag}`,\n              namespace: imgNamespace || namespace,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const ensurePortExists = (formData: DeployImageFormData): DeployImageFormData => {\n  const {\n    isi: { ports },\n    route: { defaultUnknownPort, unknownTargetPort },\n  } = formData;\n\n  let values = formData;\n  if (!Array.isArray(ports) || ports.length === 0) {\n    // If we lack pre-defined ports but they have specified a custom target port, use that instead\n    const containerPort = unknownTargetPort ? parseInt(unknownTargetPort, 10) : defaultUnknownPort;\n    const suppliedPorts = [{ containerPort, protocol: 'TCP' }];\n\n    values = {\n      ...values,\n      isi: {\n        ...values.isi,\n        ports: suppliedPorts,\n      },\n    };\n  }\n\n  return values;\n};\n\nexport const createOrUpdateDeployImageResources = async (\n  rawFormData: DeployImageFormData,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const formData = ensurePortExists(rawFormData);\n  const {\n    name,\n    registry,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    isi: { ports, tag: imageStreamTag, image },\n    imageStream: { image: internalImageStreamName, namespace: internalImageStreamNamespace },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n  } = formData;\n  const requests: Promise<K8sResourceKind>[] = [];\n\n  const imageStreamList = appResources?.imageStream?.data;\n  const imageStreamData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamData.length && imageStreamData[0]) || {};\n  if (formData.resources !== Resources.KnativeService) {\n    registry === RegistryType.External &&\n      (await createOrUpdateImageStream(formData, dryRun, originalImageStream, verb));\n    if (formData.resources === Resources.Kubernetes) {\n      requests.push(\n        createOrUpdateDeployment(\n          formData,\n          dryRun,\n          _.get(appResources, 'editAppResource.data'),\n          verb,\n        ),\n      );\n    } else {\n      requests.push(\n        createOrUpdateDeploymentConfig(\n          formData,\n          dryRun,\n          _.get(appResources, 'editAppResource.data'),\n          verb,\n        ),\n      );\n    }\n    if (!_.isEmpty(ports)) {\n      const originalService = appResources?.service?.data;\n      const originalRoute = appResources?.route?.data;\n      const service = createService(formData, undefined, originalService, originalRoute);\n      const request =\n        verb === 'update'\n          ? !_.isEmpty(originalService)\n            ? k8sUpdate(ServiceModel, service)\n            : null\n          : k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {});\n      requests.push(request);\n      const route = createRoute(formData, undefined, _.get(appResources, 'route.data'));\n      if (verb === 'update' && disable) {\n        requests.push(k8sUpdate(RouteModel, route));\n      } else if (canCreateRoute) {\n        requests.push(k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n      }\n    }\n  } else if (formData.resources === Resources.KnativeService) {\n    let imageStreamUrl: string = image?.dockerImageReference;\n    let generatedImageStreamName: string = '';\n    if (registry === RegistryType.External) {\n      const originalImageStreamName = originalImageStream?.spec?.tags?.[0]?.from?.name;\n      const newImageName = formData.isi.name;\n      if (\n        (originalImageStreamName && originalImageStreamName !== newImageName) ||\n        (verb === 'update' && _.isEmpty(originalImageStream))\n      ) {\n        generatedImageStreamName = `${name}-${getRandomChars()}`;\n      }\n      const imageStreamResponse = await createOrUpdateImageStream(\n        formData,\n        dryRun,\n        originalImageStream,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      );\n      const imageStreamRepo = imageStreamResponse.status.dockerImageRepository;\n      imageStreamUrl = imageStreamTag ? `${imageStreamRepo}:${imageStreamTag}` : imageStreamRepo;\n    }\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      internalImageStreamName || name,\n      internalImageStreamNamespace || namespace,\n      imageChange,\n      imageStreamTag,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          }\n        : {\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamUrl,\n      internalImageStreamName || name,\n      imageStreamTag,\n      internalImageStreamNamespace,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    requests.push(\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    );\n  }\n\n  return Promise.all(requests);\n};\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { RadioGroupField } from '@console/shared';\nimport { imageRegistryType } from '../../../utils/imagestream-utils';\nimport { hasSampleQueryParameter } from '../../../utils/samples';\nimport FormSection from '../section/FormSection';\nimport ImageSearch from './ImageSearch';\nimport ImageStream from './ImageStream';\n\nconst ImageSearchSection: React.FC<{ disabled?: boolean }> = ({ disabled = false }) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const [registry, setRegistry] = React.useState(values.registry);\n\n  const showSample = React.useRef(hasSampleQueryParameter()).current;\n\n  React.useEffect(() => {\n    if (values.registry !== registry) {\n      setRegistry(values.registry);\n      setFieldValue('searchTerm', initialValues.searchTerm);\n      setFieldValue('isi', initialValues.isi);\n      setFieldValue('imageStream', initialValues.imageStream);\n    }\n  }, [\n    initialValues.imageStream,\n    initialValues.isi,\n    initialValues.searchTerm,\n    registry,\n    setFieldValue,\n    values,\n  ]);\n\n  return (\n    <FormSection\n      title={t('devconsole~Image')}\n      subTitle={t('devconsole~Deploy an existing Image from an Image Stream or Image registry.')}\n    >\n      {!_.isEmpty(values.containers) && (\n        <div className=\"co-section-heading-tertiary\">\n          {t('devconsole~Container')}\n          <ResourceLink kind=\"Container\" name={values.containers[0].name} linkTo={false} />\n        </div>\n      )}\n      {showSample ? (\n        <ImageSearch />\n      ) : (\n        <RadioGroupField\n          name=\"registry\"\n          options={[\n            {\n              label: imageRegistryType(t).External.label,\n              value: imageRegistryType(t).External.value,\n              isDisabled:\n                (values.formType === 'edit' && values.registry === 'internal') || disabled,\n              activeChildren: <ImageSearch />,\n            },\n            {\n              label: imageRegistryType(t).Internal.label,\n              value: imageRegistryType(t).Internal.value,\n              isDisabled:\n                (values.formType === 'edit' && values.registry === 'external') || disabled,\n              activeChildren: <ImageStream disabled={disabled} />,\n            },\n          ]}\n        />\n      )}\n    </FormSection>\n  );\n};\n\nexport default ImageSearchSection;\n","import * as React from 'react';\nimport {\n  TextInputTypes,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, FormikTouched } from 'formik';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { SecretTypeAbstraction } from '@console/internal/components/secrets/create-secret';\nimport { ImageStreamImportsModel } from '@console/internal/models';\nimport { k8sCreate, ContainerPort } from '@console/internal/module/k8s';\nimport { InputField, useDebounceCallback, CheckboxField } from '@console/shared';\nimport { UNASSIGNED_KEY, CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isContainerImportSource } from '../../../types/samples';\nimport { getSuggestedName, getPorts, makePortName } from '../../../utils/imagestream-utils';\nimport { getContainerImportSample, getSample } from '../../../utils/samples';\nimport { secretModalLauncher } from '../CreateSecretModal';\nimport './ImageSearch.scss';\n\nconst useQueryParametersIfDefined = (handleSearch: (image: string) => void) => {\n  const { setFieldValue } = useFormikContext<FormikValues>();\n\n  /**\n   * Automatically prefill the container image search field into the Formik values\n   * and trigger a `ImageStreamImport` via `handleSearch`.\n   *\n   * 1. Use optional `image` query parameter to prefill the form immediately and\n   *    trigger a image search.\n   * 2. Use `sample` query parameter to lookup a ConsoleSample.\n   *    1. Lookup for the image if the image query parameter was missed.\n   *    2. Set other form attributes like the image targetPort.\n   */\n  React.useEffect(() => {\n    const { sampleName, image } = getContainerImportSample();\n    if (image) {\n      const componentName = getSuggestedName(image);\n      setFieldValue('searchTerm', image, false);\n      // handleSearch will set the same attributes, but after another API call\n      // so we fill these attributes here first\n      setFieldValue('name', componentName, false);\n      setFieldValue('application.name', `${componentName}-app`, false);\n      handleSearch(image);\n    }\n    if (sampleName) {\n      getSample(sampleName)\n        .then((sample) => {\n          if (isContainerImportSource(sample.spec.source)) {\n            const { containerImport } = sample.spec.source;\n            if (!image) {\n              const componentName = getSuggestedName(containerImport.image);\n              setFieldValue('searchTerm', containerImport.image, false);\n              // handleSearch will set the same attributes, but after another API call\n              // so we fill these attributes here first\n              setFieldValue('name', componentName, false);\n              setFieldValue('application.name', `${componentName}-app`, false);\n            }\n            if (\n              containerImport?.service?.targetPort &&\n              containerImport?.service?.targetPort !== 8080\n            ) {\n              setFieldValue(\n                'route.unknownTargetPort',\n                containerImport.service.targetPort.toString(),\n                false,\n              );\n            }\n            handleSearch(containerImport.image);\n          } else {\n            // eslint-disable-next-line no-console\n            console.error(\n              `Unsupported ConsoleSample \"${sampleName}\" source type ${sample.spec?.source?.type}`,\n            );\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(`Error while loading ConsoleSample \"${sampleName}\":`, error);\n        });\n    }\n    // Disable deps to load the samples only once when the component is loaded.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nconst ImageSearch: React.FC = () => {\n  const { t } = useTranslation();\n  const inputRef = React.useRef<HTMLInputElement>();\n  const { values, setFieldValue, dirty, initialValues, touched } = useFormikContext<FormikValues>();\n  const [newImageSecret, setNewImageSecret] = React.useState('');\n  const [alertVisible, shouldHideAlert] = React.useState(true);\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n  const namespace = values.project.name;\n  const { application = {}, name: nameTouched } = touched;\n  const { name: applicationNameTouched } = application as FormikTouched<{ name: boolean }>;\n\n  const handleSearch = React.useCallback(\n    (searchTermImage: string, isAllowInsecureRegistry = values.allowInsecureRegistry) => {\n      setFieldValue('isSearchingForImage', true);\n      setValidated(ValidatedOptions.default);\n      const importImage = {\n        kind: 'ImageStreamImport',\n        apiVersion: 'image.openshift.io/v1',\n        metadata: {\n          name: 'newapp',\n          namespace: values.project.name,\n        },\n        spec: {\n          import: false,\n          images: [\n            {\n              from: {\n                kind: 'DockerImage',\n                name: _.trim(searchTermImage),\n              },\n              importPolicy: { insecure: isAllowInsecureRegistry },\n            },\n          ],\n        },\n        status: {},\n      };\n\n      k8sCreate(ImageStreamImportsModel, importImage)\n        .then((imageStreamImport) => {\n          const status = _.get(imageStreamImport, 'status.images[0].status');\n          if (status.status === 'Success') {\n            const name = _.get(imageStreamImport, 'spec.images[0].from.name');\n            const image = _.get(imageStreamImport, 'status.images[0].image');\n            const tag = _.get(imageStreamImport, 'status.images[0].tag');\n            const isi = { name, image, tag, status };\n            const ports = getPorts(isi);\n            setFieldValue('isSearchingForImage', false);\n            setFieldValue('isi.name', name);\n            setFieldValue('isi.image', image);\n            setFieldValue('isi.tag', tag);\n            setFieldValue('isi.status', status);\n            setFieldValue('isi.ports', ports);\n            setFieldValue('image.ports', ports);\n            setFieldValue('image.tag', tag);\n            !values.name && setFieldValue('name', getSuggestedName(name));\n            !values.application.name &&\n              values.application.selectedKey !== UNASSIGNED_KEY &&\n              setFieldValue('application.name', `${getSuggestedName(name)}-app`);\n            // set default port value\n            const targetPort =\n              (!initialValues.route.targetPort || touched.searchTerm) && _.head(ports);\n            targetPort && setFieldValue('route.targetPort', makePortName(targetPort));\n            setValidated(ValidatedOptions.success);\n          } else {\n            setFieldValue('isSearchingForImage', false);\n            setFieldValue('isi', {});\n            setFieldValue('isi.status', status);\n            setFieldValue('route.targetPort', null);\n            setValidated(ValidatedOptions.error);\n          }\n        })\n        .catch((error) => {\n          setFieldValue('isi', {});\n          setFieldValue('isi.status', { metadata: {}, status: '', message: error.message });\n          setFieldValue('isSearchingForImage', false);\n          setValidated(ValidatedOptions.error);\n        });\n    },\n    [\n      setFieldValue,\n      touched,\n      values.application.name,\n      values.application.selectedKey,\n      values.name,\n      values.project.name,\n      values.allowInsecureRegistry,\n      initialValues.route.targetPort,\n    ],\n  );\n\n  useQueryParametersIfDefined(handleSearch);\n\n  const debouncedHandleSearch = useDebounceCallback(handleSearch);\n\n  const handleSave = React.useCallback(\n    (name: string) => {\n      setNewImageSecret(name);\n      values.searchTerm && handleSearch(values.searchTerm);\n    },\n    [handleSearch, values.searchTerm],\n  );\n\n  const helpText = React.useMemo(() => {\n    if (values.isSearchingForImage) {\n      return `${t('devconsole~Validating')}...`;\n    }\n    if (!values.isSearchingForImage && validated === ValidatedOptions.success) {\n      return t('devconsole~Validated');\n    }\n    if (validated === ValidatedOptions.error) {\n      return values.searchTerm === '' ? t('devconsole~Required') : values.isi.status?.message;\n    }\n    return '';\n  }, [t, validated, values.isSearchingForImage, values.searchTerm, values.isi.status?.message]);\n\n  const resetFields = () => {\n    if (values.formType === 'edit') {\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n        values.application.selectedKey === CREATE_APPLICATION_KEY &&\n        !applicationNameTouched &&\n        setFieldValue('application.name', '');\n      return;\n    }\n    !nameTouched && setFieldValue('name', '');\n    !values.application.isInContext &&\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n      !applicationNameTouched &&\n      setFieldValue('application.name', '');\n  };\n\n  React.useEffect(() => {\n    !dirty && values.searchTerm && handleSearch(values.searchTerm);\n  }, [dirty, handleSearch, values.searchTerm]);\n\n  React.useEffect(() => {\n    if (touched.searchTerm && initialValues.searchTerm !== values.searchTerm) {\n      const targetPort: ContainerPort = _.head(values.isi.ports);\n      targetPort && setFieldValue('route.targetPort', makePortName(targetPort));\n    }\n  }, [\n    touched.searchTerm,\n    setFieldValue,\n    values.isi.ports,\n    initialValues.searchTerm,\n    values.searchTerm,\n  ]);\n\n  React.useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  return (\n    <div data-test-id=\"image-search-field\">\n      <InputField\n        ref={inputRef}\n        type={TextInputTypes.text}\n        name=\"searchTerm\"\n        placeholder={t(\n          'devconsole~docker.io/openshift/hello-openshift or quay.io/<username>/<image-name>',\n        )}\n        helpText={helpText}\n        helpTextInvalid={helpText}\n        validated={validated}\n        onChange={(e: KeyboardEvent) => {\n          resetFields();\n          setFieldValue('isi', {});\n          setValidated(ValidatedOptions.default);\n          debouncedHandleSearch((e.target as HTMLInputElement).value);\n        }}\n        aria-label={t('devconsole~Image name')}\n        data-test-id=\"deploy-image-search-term\"\n        required\n      />\n      <div className=\"help-block\" id=\"image-name-help\">\n        <Trans ns=\"devconsole\" t={t}>\n          To deploy an Image from a private registry, you must{' '}\n          <Button\n            variant=\"link\"\n            isInline\n            onClick={() =>\n              secretModalLauncher({\n                namespace,\n                save: handleSave,\n                secretType: SecretTypeAbstraction.image,\n              })\n            }\n          >\n            create an Image pull secret\n          </Button>{' '}\n          with your Image registry credentials.\n        </Trans>\n      </div>\n      {newImageSecret && alertVisible && (\n        <Alert\n          isInline\n          className=\"co-alert\"\n          variant=\"success\"\n          title={t('devconsole~Secret \"{{newImageSecret}}\" was created.', { newImageSecret })}\n          actionClose={<AlertActionCloseButton onClose={() => shouldHideAlert(false)} />}\n        />\n      )}\n      <div className=\"odc-image-search__advanced-options\">\n        <CheckboxField\n          name=\"allowInsecureRegistry\"\n          label={t('devconsole~Allow Images from insecure registries')}\n          onChange={(val: boolean) => {\n            values.searchTerm && handleSearch(values.searchTerm, val);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ImageSearch;\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { getIcon, getIcons } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\n\nimport './IconDropdown.scss';\n\nexport type IconDropdownProps = {\n  placeholder: string;\n  value: string;\n  onChanged: (value: string) => void;\n};\n\ntype IconProps = {\n  label: string;\n  url: string;\n};\n\nconst Icon: React.FC<IconProps> = ({ label, url }) => (\n  <div className=\"odc-icon-dropdown__item\">\n    <img src={url} width=\"24\" height=\"24\" alt=\"\" className=\"icon\" />\n    {label}\n  </div>\n);\n\nconst iconLabelAutocompleteFilter = (text: string, item: React.ReactElement<IconProps>) =>\n  fuzzy(text, item.props.label);\n\nconst IconDropdown: React.FC<IconDropdownProps> = ({ placeholder, value, onChanged }) => {\n  const title = React.useMemo<React.ReactElement>(() => {\n    const icon = getIcon(value || 'openshift');\n    return icon ? (\n      <Icon label={icon.label} url={icon.url} />\n    ) : (\n      <span className=\"btn-dropdown__item--placeholder\">{placeholder}</span>\n    );\n  }, [placeholder, value]);\n\n  const items = React.useMemo<Record<string, React.ReactElement>>(() => {\n    const options: Record<string, React.ReactElement> = {};\n    getIcons().forEach(({ label, url }) => {\n      options[label] = <Icon label={label} url={url} />;\n    });\n    return options;\n  }, []);\n\n  return (\n    <Dropdown\n      title={title}\n      items={items}\n      autoSelect\n      autocompletePlaceholder={placeholder}\n      autocompleteFilter={iconLabelAutocompleteFilter}\n      dropDownClassName=\"dropdown--full-width odc-icon-dropdown\"\n      menuClassName=\"odc-icon-dropdown__menu\"\n      onChange={onChanged}\n      selectedKey={value || 'openshift'}\n    />\n  );\n};\n\nexport default IconDropdown;\n","import * as React from 'react';\nimport { getAutoscaleWindow } from './serverless-utils';\nimport { useGetAutoscalerConfig } from './useGetAutoscalerConfig';\n\nexport const setKnScalingDefaultValue = (initialValues, knScalingConfig) => {\n  const { autoscalewindow, autoscalewindowUnit, defaultAutoscalewindowUnit } =\n    knScalingConfig && getAutoscaleWindow(knScalingConfig['stable-window'] ?? '');\n  // TODO: we should not mutate initial values at all.\n  initialValues.serverless.scaling.concurrencytarget =\n    knScalingConfig['container-concurrency-target-default'] || '';\n  initialValues.serverless.scaling.concurrencyutilization =\n    knScalingConfig['container-concurrency-target-percentage'] || '';\n  initialValues.serverless.scaling.defaultConcurrencytarget =\n    knScalingConfig['container-concurrency-target-default'] || '';\n  initialValues.serverless.scaling.defaultConcurrencyutilization =\n    knScalingConfig['container-concurrency-target-percentage'] || '';\n  initialValues.serverless.scaling.autoscale = {\n    autoscalewindow,\n    defaultAutoscalewindow: autoscalewindow,\n    autoscalewindowUnit,\n    defaultAutoscalewindowUnit,\n  };\n  return initialValues;\n};\n\nexport const useUpdateKnScalingDefaultValues = (initialValues) => {\n  const knScalingConfig = useGetAutoscalerConfig();\n  // TODO: We should not expect that overridding the formik initialValues in a hook works fine.\n  const [initialValuesState, setInitialValuesState] = React.useState(initialValues);\n  React.useEffect(() => {\n    if (knScalingConfig) {\n      setInitialValuesState((previousValues) =>\n        setKnScalingDefaultValue(previousValues, knScalingConfig),\n      );\n    }\n  }, [knScalingConfig]);\n  return initialValuesState;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { ConfigMapModel } from '@console/internal/models';\nimport { ConfigMapKind } from '@console/internal/module/k8s';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\n\nexport const useGetAutoscalerConfig = () => {\n  const [configmap, configmapLoaded, configmapError] = useK8sGet<ConfigMapKind>(\n    ConfigMapModel,\n    'config-autoscaler',\n    'knative-serving',\n  );\n  // eslint-disable-next-line no-underscore-dangle\n  const config = configmapLoaded && !configmapError && safeYAMLToJS(configmap.data._example);\n  return config;\n};\n","import * as React from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { history, resourcePathFromModel } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { BuildConfigModel, BuildModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useActiveNamespace, useToast, getOwnedResources } from '@console/shared';\n\nexport const useUploadJarFormToast = () => {\n  const toast = useToast();\n  const { t } = useTranslation();\n  const [namespace] = useActiveNamespace();\n  const buildsResource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: BuildModel.kind,\n      namespace,\n      isList: true,\n    }),\n    [namespace],\n  );\n  const [builds] = useK8sWatchResource<K8sResourceKind[]>(buildsResource);\n\n  return React.useCallback(\n    (resp) => {\n      const createdBuildConfig = resp.find((d) => d.kind === BuildConfigModel.kind);\n      const ownBuilds = getOwnedResources(createdBuildConfig, builds);\n      const buildName = `${createdBuildConfig.metadata.name}-${ownBuilds.length + 1}`;\n      const link = `${resourcePathFromModel(BuildModel, buildName, namespace)}/logs`;\n      toast.addToast({\n        variant: AlertVariant.info,\n        title: t('devconsole~JAR file uploading'),\n        content: t(\n          'devconsole~JAR file is uploading to {{namespace}}. You can view the upload progress in the build logs. This may take a few minutes. If you exit the browser while upload is in progress it may fail.',\n          {\n            namespace,\n          },\n        ),\n        timeout: true,\n        actions: [\n          {\n            dismiss: true,\n            label: t('devconsole~View build logs'),\n            callback: () => history.push(link),\n          },\n        ],\n      });\n    },\n    [builds, namespace, t, toast],\n  );\n};\n","import * as _ from 'lodash';\nimport { coFetch } from '@console/internal/co-fetch';\nimport {\n  ServiceModel,\n  RouteModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n} from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind, k8sUpdate, K8sVerb } from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { getRandomChars, NameValuePair, getResourceLimitsData } from '@console/shared';\nimport {\n  getAppLabels,\n  getCommonAnnotations,\n  getPodLabels,\n  getRouteAnnotations,\n  getTemplateLabels,\n  getTriggerAnnotation,\n  mergeData,\n} from '../../utils/resource-label-utils';\nimport { createRoute, createService, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  createOrUpdateImageStream,\n  createProject,\n  createWebhookSecret,\n} from './import-submit-utils';\nimport { Resources, UploadJarFormData } from './import-types';\n\nexport const createOrUpdateDeployment = (\n  formData: UploadJarFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    fileUpload: { name: fileName, javaArgs },\n    labels: userLabels,\n    limits: { cpu, memory },\n    healthChecks,\n    runtimeIcon,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    runtimeIcon,\n    selectedTag,\n  });\n  const imageName = name;\n  const annotations = {\n    ...getCommonAnnotations(),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n    jarFileName: fileName,\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n  if (jArgsIndex !== -1) {\n    if (javaArgs !== '') {\n      (env[jArgsIndex] as NameValuePair).value = javaArgs;\n    } else {\n      env.splice(jArgsIndex, 1);\n    }\n  } else if (javaArgs !== '') {\n    env.push({ name: 'JAVA_ARGS', value: javaArgs });\n  }\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nconst createOrUpdateDeploymentConfig = (\n  formData: UploadJarFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    fileUpload: { javaArgs },\n    labels: userLabels,\n    limits: { cpu, memory },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n  if (jArgsIndex !== -1) {\n    if (javaArgs !== '') {\n      (env[jArgsIndex] as NameValuePair).value = javaArgs;\n    } else {\n      env.splice(jArgsIndex, 1);\n    }\n  } else if (javaArgs !== '') {\n    env.push({ name: 'JAVA_ARGS', value: javaArgs });\n  }\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...getCommonAnnotations() },\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: UploadJarFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    fileUpload: { name: jarFileName },\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { tag: selectedTag },\n    build: { env, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getCommonAnnotations(), jarFileName };\n  const buildStrategyData = {\n    sourceStrategy: {\n      env,\n      from: {\n        kind: 'ImageStreamTag',\n        name: `${imageStreamName}:${selectedTag}`,\n        namespace: imageStreamNamespace,\n      },\n    },\n  };\n\n  const buildConfigName = verb === 'update' ? originalBuildConfig?.metadata?.name : name;\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || name}:latest`,\n        },\n      },\n      source: {\n        type: 'Binary',\n        binary: {},\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, buildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const instantiateBinaryBuild = (\n  namespace: string,\n  buildConfigResponse: K8sResourceKind,\n  filename: string,\n  value: File,\n) => {\n  const onBeforeUnload = (e: BeforeUnloadEvent) => {\n    e.preventDefault();\n    // Chrome requires returnValue to be set\n    // from https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\n    e.returnValue = '';\n  };\n  window.addEventListener('beforeunload', onBeforeUnload);\n  coFetch(\n    `/api/kubernetes/apis/build.openshift.io/v1/namespaces/${namespace}/buildconfigs/${buildConfigResponse.metadata.name}/instantiatebinary?asFile=${filename}`,\n    {\n      method: 'POST',\n      body: value,\n      headers: {\n        'Content-type': value.type,\n      },\n    },\n    0,\n  )\n    .then(() => {\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to upload binary file to trigger a new Build', err);\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    });\n};\n\nexport const createOrUpdateJarFile = async (\n  formData: UploadJarFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    fileUpload: { name: fileName, value: fileValue },\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: { strategy: buildStrategy },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    resources,\n  } = formData;\n  const {\n    imageStream: appResImageStream,\n    buildConfig: appResBuildConfig,\n    editAppResource,\n    service: appResService,\n    route: appResRoute,\n  } = appResources || {};\n\n  const imageStreamName = imageStream?.metadata.name;\n\n  createNewProject && (await createProject(formData.project));\n\n  const responses = [];\n  let generatedImageStreamName: string = '';\n  const imageStreamList = appResImageStream?.data;\n  if (\n    resources === Resources.KnativeService &&\n    imageStreamList &&\n    imageStreamList.length &&\n    verb === 'update' &&\n    fileValue !== ''\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    imageStream,\n    dryRun,\n    appResBuildConfig?.data,\n    verb,\n    generatedImageStreamName,\n  );\n\n  buildConfigResponse &&\n    !dryRun &&\n    fileValue !== '' &&\n    instantiateBinaryBuild(namespace, buildConfigResponse, fileName, fileValue as File);\n\n  responses.push(buildConfigResponse);\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n  }\n\n  if (resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          }\n        : {\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      editAppResource?.data,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    responses.push(\n      ...[\n        verb === 'update'\n          ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n          : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n        ...domainMappingResources,\n      ],\n    );\n    return Promise.all(responses);\n  }\n  if (resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(formData, imageStream, dryRun, editAppResource?.data, verb),\n    );\n  } else if (resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        editAppResource?.data,\n        verb,\n      ),\n    );\n  }\n\n  if (!_.isEmpty(ports) || buildStrategy === 'Source') {\n    const originalService = appResService?.data;\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = appResRoute?.data;\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n","import * as React from 'react';\nimport { DropEvent, FileUpload, TextInputTypes } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FileUploadContext,\n  FileUploadContextType,\n} from '@console/app/src/components/file-upload/file-upload-context';\nimport { InputField } from '@console/shared/src';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport FormSection from '../../section/FormSection';\nimport { getAppName } from '../../upload-jar-validation-utils';\n\nconst JarSection: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      name,\n      fileUpload: { name: fileName, value: fileValue },\n      application: { name: appGroupName, selectedKey: appGroupSelectedKey },\n    },\n    setFieldValue,\n    setFieldTouched,\n    touched,\n  } = useFormikContext<FormikValues>();\n  const { fileUpload, setFileUpload } = React.useContext<FileUploadContextType>(FileUploadContext);\n\n  const { name: nameTouched } = touched;\n\n  const updatedJarFile = React.useCallback(\n    (_event: DropEvent, file: File): void => {\n      if (file.name) {\n        const appName = getAppName(file.name);\n        setFieldValue('fileUpload.name', file.name);\n        setFieldTouched('fileUpload.name', true);\n        file && setFieldValue('fileUpload.value', file);\n        appName && !nameTouched && !name && setFieldValue('name', appName);\n        !name && setFieldValue('name', appName);\n        appName &&\n          !appGroupName &&\n          appGroupSelectedKey !== UNASSIGNED_KEY &&\n          setFieldValue('application.name', `${appName}-app`);\n      } else {\n        setFieldValue('fileUpload.name', '');\n        setFieldValue('fileUpload.value', '');\n      }\n    },\n    [appGroupName, appGroupSelectedKey, setFieldValue, setFieldTouched, name, nameTouched],\n  );\n\n  React.useEffect(() => {\n    if (fileUpload) {\n      updatedJarFile(null, fileUpload);\n      if (fileName) {\n        setFileUpload(undefined);\n      }\n    }\n  }, [fileUpload, updatedJarFile, setFileUpload, fileName]);\n\n  const handleClear = () => {\n    setFieldValue('fileUpload.value', '');\n    setFieldValue('fileUpload.name', '');\n    setTimeout(() => {\n      setFieldTouched('fileUpload.name', true);\n    }, 0);\n  };\n\n  return (\n    <FormSection title={t('devconsole~JAR')}>\n      <FileUpload\n        id=\"upload-jar-field\"\n        name=\"fileUpload.name\"\n        value={fileValue}\n        filename={fileName}\n        label={t('devconsole~JAR file')}\n        filenamePlaceholder={t('devconsole~Drag a file here or browse to upload')}\n        browseButtonText={t('devconsole~Browse...')}\n        clearButtonText={t('devconsole~Clear')}\n        onFileInputChange={updatedJarFile}\n        hideDefaultPreview\n        dropzoneProps={{\n          accept: { 'application/java-archive': ['.jar', '.JAR'] },\n        }}\n        isRequired\n        onClearClick={handleClear}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"fileUpload.javaArgs\"\n        label={t('devconsole~Optional Java arguments')}\n        helpText={t(\n          'devconsole~Optional Java arguments are saved as JAVA_ARGS environment variable to customize your application.',\n        )}\n        data-test-id=\"upload-jar-form-java-args\"\n        placeholder={t('devconsole~JAVA_ARGS')}\n      />\n    </FormSection>\n  );\n};\n\nexport default JarSection;\n","import * as React from 'react';\nimport { ExpandableSection } from '@patternfly/react-core';\nimport { FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { AppResources } from '../../../edit-application/edit-application-types';\nimport DeploymentConfigSection from '../../advanced/DeploymentConfigSection';\nimport FormSection from '../FormSection';\nimport ResourceSection from '../ResourceSection';\n\ntype DeploySectionProps = {\n  values: FormikValues;\n  appResources?: AppResources;\n};\n\nexport const DeploySection: React.FC<DeploySectionProps> = ({ values, appResources }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~Deploy')} fullWidth>\n      <ResourceSection />\n\n      <ExpandableSection\n        isWidthLimited\n        toggleText={t('devconsole~Show advanced Deployment option')}\n      >\n        <DeploymentConfigSection\n          namespace={values.project.name}\n          resource={appResources?.editAppResource?.data}\n          showHeader={false}\n        />\n      </ExpandableSection>\n    </FormSection>\n  );\n};\n","import * as React from 'react';\nimport { TFunction } from 'i18next';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { PageHeading, Firehose, FirehoseResource } from '@console/internal/components/utils';\nimport { ImageStreamModel, ProjectModel } from '@console/internal/models';\nimport DevPreviewBadge from '@console/shared/src/components/badges/DevPreviewBadge';\nimport { QUERY_PROPERTIES } from '../../const';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport QueryFocusApplication from '../QueryFocusApplication';\nimport { ImportTypes, ImportData } from './import-types';\nimport ImportForm from './ImportForm';\n\nconst ImportFlows = (t: TFunction): { [name: string]: ImportData } => ({\n  git: {\n    type: ImportTypes.git,\n    title: t('devconsole~Import from Git'),\n    buildStrategy: 'Devfile',\n    loader: () =>\n      import('./GitImportForm' /* webpackChunkName: \"git-import-form\" */).then((m) => m.default),\n  },\n  s2i: {\n    type: ImportTypes.s2i,\n    title: t('devconsole~Create Source-to-Image application'),\n    buildStrategy: 'Source',\n    loader: () =>\n      import('./SourceToImageForm' /* webpackChunkName: \"source-to-image-form\" */).then(\n        (m) => m.default,\n      ),\n  },\n});\n\nconst ImportPage: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const imageStreamName = searchParams.get('imagestream');\n  const imageStreamNamespace = searchParams.get('imagestream-ns');\n  const preselectedNamespace = searchParams.get('preselected-ns');\n  const importType = searchParams.get('importType');\n\n  let importData: ImportData;\n  let resources: FirehoseResource[];\n  if (imageStreamName && imageStreamNamespace) {\n    importData = ImportFlows(t).s2i;\n    resources = [\n      {\n        kind: ImageStreamModel.kind,\n        prop: 'imageStreams',\n        isList: false,\n        name: imageStreamName,\n        namespace: imageStreamNamespace,\n      },\n      {\n        kind: ProjectModel.kind,\n        prop: 'projects',\n        isList: true,\n      },\n    ];\n  } else {\n    importData = ImportFlows(t).git;\n    resources = [\n      {\n        kind: ImageStreamModel.kind,\n        prop: 'imageStreams',\n        isList: true,\n        namespace: 'openshift',\n      },\n      {\n        kind: ProjectModel.kind,\n        prop: 'projects',\n        isList: true,\n      },\n    ];\n  }\n\n  return (\n    <QueryFocusApplication>\n      {(application) => (\n        <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n          <Helmet>\n            <title>{importData.title}</title>\n          </Helmet>\n          <PageHeading\n            title={importData.title}\n            badge={importType === ImportTypes.devfile ? <DevPreviewBadge /> : null}\n          />\n          <Firehose resources={resources}>\n            <ImportForm\n              forApplication={application}\n              contextualSource={searchParams.get(QUERY_PROPERTIES.CONTEXT_SOURCE)}\n              namespace={namespace || preselectedNamespace}\n              importData={importData}\n            />\n          </Firehose>\n        </NamespacedPage>\n      )}\n    </QueryFocusApplication>\n  );\n};\n\nexport default ImportPage;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk/src/extensions';\nimport { CatalogController, CatalogServiceProvider } from '@console/shared';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport CreateProjectListPage, { CreateAProjectButton } from '../projects/CreateProjectListPage';\n\nconst SampleCatalog: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const params = new URLSearchParams(window.location.search);\n  const sampleType = params.get('sampleType');\n  const labelFilter: Record<string, string> = {\n    label: 'sample-type',\n    value: sampleType,\n  };\n  return (\n    <>\n      <Helmet>\n        <title>{t('devconsole~Samples')}</title>\n      </Helmet>\n      <NamespacedPage variant={NamespacedPageVariants.light} hideApplications>\n        {namespace ? (\n          <CatalogServiceProvider namespace={namespace} catalogId=\"samples-catalog\">\n            {(service) => {\n              let filteredLists: CatalogItem[];\n              if (sampleType) {\n                filteredLists = service.items.filter((item) => {\n                  return (\n                    item?.typeLabel === labelFilter?.value ||\n                    item?.data?.metadata?.labels[labelFilter?.label] === labelFilter?.value\n                  );\n                });\n              } else {\n                filteredLists = service.items;\n              }\n              const catalogItems = { ...service, items: filteredLists };\n\n              return (\n                <CatalogController\n                  {...catalogItems}\n                  hideSidebar\n                  title={t('devconsole~Samples')}\n                  description={t(\n                    'devconsole~Get Started using applications by choosing a code sample.',\n                  )}\n                />\n              );\n            }}\n          </CatalogServiceProvider>\n        ) : (\n          <CreateProjectListPage title={t('devconsole~Samples')}>\n            {(openProjectModal) => (\n              <Trans t={t} ns=\"devconsole\">\n                Select a Project to view the list of samples\n                <CreateAProjectButton openProjectModal={openProjectModal} />.\n              </Trans>\n            )}\n          </CreateProjectListPage>\n        )}\n      </NamespacedPage>\n    </>\n  );\n};\n\nexport default SampleCatalog;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport {\n  FirehoseResource,\n  LoadingBox,\n  history,\n  PageHeading,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ImageStreamModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { defaultRepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/consts';\nimport { SAMPLE_APPLICATION_GROUP } from '../../const';\nimport {\n  normalizeBuilderImages,\n  NormalizedBuilderImages,\n  getSampleRepo,\n  getSampleRef,\n  getSampleContextDir,\n} from '../../utils/imagestream-utils';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport { getBaseInitialValues } from './form-initial-values';\nimport { createOrUpdateResources } from './import-submit-utils';\nimport { BaseFormData, BuildOptions, GitImportFormData } from './import-types';\nimport { detectGitType, validationSchema } from './import-validation-utils';\nimport ImportSampleForm from './ImportSampleForm';\n\nconst ImportSamplePage: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace, is: imageStreamName, isNs: imageStreamNamespace } = useParams();\n\n  const imageStreamResource: FirehoseResource = React.useMemo(\n    () => ({\n      kind: ImageStreamModel.kind,\n      prop: 'imageStreams',\n      isList: false,\n      name: imageStreamName,\n      namespace: imageStreamNamespace,\n    }),\n    [imageStreamName, imageStreamNamespace],\n  );\n\n  const [imageStream, imageStreamloaded] = useK8sWatchResource(imageStreamResource);\n\n  if (!imageStreamloaded) return <LoadingBox />;\n\n  const { [imageStreamName]: builderImage }: NormalizedBuilderImages = normalizeBuilderImages(\n    imageStream,\n  );\n\n  const { name: imageName, recentTag: tag } = builderImage;\n\n  const gitUrl = getSampleRepo(tag);\n  const gitRef = getSampleRef(tag);\n  const gitDir = getSampleContextDir(tag);\n  const gitType = detectGitType(gitUrl);\n\n  const initialBaseValues: BaseFormData = getBaseInitialValues(namespace, SAMPLE_APPLICATION_GROUP);\n  const initialValues: GitImportFormData = {\n    ...initialBaseValues,\n    name: `${imageName}-sample`,\n    application: {\n      initial: SAMPLE_APPLICATION_GROUP,\n      name: SAMPLE_APPLICATION_GROUP,\n      selectedKey: SAMPLE_APPLICATION_GROUP,\n    },\n    git: {\n      url: gitUrl,\n      type: gitType,\n      ref: gitRef,\n      dir: gitDir,\n      showGitType: false,\n      secret: '',\n      isUrlValidating: false,\n    },\n    docker: {\n      dockerfilePath: 'Dockerfile',\n    },\n    image: {\n      ...initialBaseValues.image,\n      selected: imageName,\n      tag: tag.name,\n      tagObj: tag,\n    },\n    pipeline: {\n      enabled: false,\n      type: PipelineType.PIPELINE,\n    },\n    pac: {\n      pacHasError: false,\n      repository: {\n        ...defaultRepositoryFormValues,\n      },\n    },\n    build: {\n      ...initialBaseValues.build,\n      triggers: {\n        webhook: true,\n        image: true,\n        config: true,\n      },\n      option: BuildOptions.BUILDS,\n    },\n    import: {\n      showEditImportStrategy: true,\n    },\n  };\n\n  const handleSubmit = (values, actions) => {\n    const resourceActions = createOrUpdateResources(\n      t,\n      values,\n      imageStream as K8sResourceKind,\n      false,\n      true,\n    ).then(() => createOrUpdateResources(t, values, imageStream as K8sResourceKind));\n\n    return resourceActions\n      .then(() => {\n        history.push(`/topology/ns/${namespace}`);\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} disabled hideApplications>\n      <Helmet>\n        <title>{t('devconsole~Create Sample application')}</title>\n      </Helmet>\n      <PageHeading title={t('devconsole~Create Sample application')} />\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        onReset={history.goBack}\n        validationSchema={validationSchema(t)}\n      >\n        {(formikProps) => <ImportSampleForm {...formikProps} builderImage={builderImage} />}\n      </Formik>\n    </NamespacedPage>\n  );\n};\n\nexport default ImportSamplePage;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { PageHeading, Firehose } from '@console/internal/components/utils';\nimport { QUERY_PROPERTIES } from '../../const';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport QueryFocusApplication from '../QueryFocusApplication';\nimport DeployImage from './DeployImage';\n\nconst DeployImagePage: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('devconsole~Deploy Image')}</title>\n      </Helmet>\n      <PageHeading title={t('devconsole~Deploy Image')} />\n      <QueryFocusApplication>\n        {(desiredApplication) => (\n          <Firehose resources={[{ kind: 'Project', prop: 'projects', isList: true }]}>\n            <DeployImage\n              forApplication={desiredApplication}\n              namespace={namespace}\n              contextualSource={params.get(QUERY_PROPERTIES.CONTEXT_SOURCE)}\n            />\n          </Firehose>\n        )}\n      </QueryFocusApplication>\n    </NamespacedPage>\n  );\n};\n\nexport default DeployImagePage;\n","import * as React from 'react';\nimport { FormikValues, useField, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { FLAG_OPENSHIFT_DEPLOYMENTCONFIG } from '@console/dev-console/src/const';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { getActiveNamespace } from '@console/internal/actions/ui';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { connectToFlags } from '@console/internal/reducers/connectToFlags';\nimport { FlagsObject } from '@console/internal/reducers/features';\nimport { FLAG_KNATIVE_SERVING_SERVICE, ServiceModel } from '@console/knative-plugin';\nimport { SingleDropdownField, SelectInputOption } from '@console/shared';\nimport { Resources, ReadableResourcesNames } from '../import-types';\nimport FormSection from './FormSection';\nimport { useResourceType } from './useResourceType';\nimport './ResourceSection.scss';\n\ntype ResourceSectionProps = {\n  flags: FlagsObject;\n};\n\nconst ResourceSection: React.FC<ResourceSectionProps> = ({ flags }) => {\n  const { t } = useTranslation();\n  const [field] = useField<Resources[]>('resourceTypesNotValid');\n  const fieldName = 'resources';\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const invalidTypes = React.useMemo(() => field.value || [], [field]);\n\n  const [resourceType] = useResourceType();\n\n  React.useEffect(() => {\n    !['edit', 'knatify', 'serverlessFunction'].includes(values.formType) &&\n      setFieldValue('resources', resourceType);\n  }, [resourceType, setFieldValue, values.formType]);\n\n  const knativeServiceAccess = useAccessReview({\n    group: ServiceModel.apiGroup,\n    resource: ServiceModel.plural,\n    namespace: getActiveNamespace(),\n    verb: 'create',\n  });\n  const canIncludeKnative =\n    !invalidTypes.includes(Resources.KnativeService) &&\n    flags[FLAG_KNATIVE_SERVING_SERVICE] &&\n    knativeServiceAccess;\n\n  const canIncludeDeploymentConfig =\n    !invalidTypes.includes(Resources.OpenShift) && flags[FLAG_OPENSHIFT_DEPLOYMENTCONFIG];\n\n  const [, setResourceType] = useResourceType();\n\n  const onChange = React.useCallback(\n    (selection: string) => {\n      const value = _.findKey(ReadableResourcesNames, (name) => t(name) === selection);\n      setResourceType(value);\n      setFieldValue(fieldName, value);\n    },\n    [setFieldValue, setResourceType, t],\n  );\n\n  const selectInputOptions = React.useMemo(() => {\n    const options: SelectInputOption[] = [];\n    if (!invalidTypes.includes(Resources.Kubernetes)) {\n      options.push({\n        label: t(ReadableResourcesNames[Resources.Kubernetes]),\n        value: Resources.Kubernetes,\n        description: t(\n          'devconsole~A {{deploymentLabel}} enables declarative updates for Pods and ReplicaSets.',\n          { deploymentLabel: DeploymentModel.label },\n        ),\n      });\n    }\n    if (canIncludeDeploymentConfig) {\n      options.push({\n        label: t(ReadableResourcesNames[Resources.OpenShift]),\n        value: Resources.OpenShift,\n        description: t(\n          'devconsole~A {{deploymentConfigLabel}} defines the template for a Pod and manages deploying new Images or configuration changes.',\n          { deploymentConfigLabel: DeploymentConfigModel.label },\n        ),\n      });\n    }\n\n    if (canIncludeKnative) {\n      options.push({\n        label: t(ReadableResourcesNames[Resources.KnativeService]),\n        value: Resources.KnativeService,\n        description: t(\n          'devconsole~A type of deployment that enables Serverless scaling to 0 when idle.',\n        ),\n      });\n    }\n    return options;\n  }, [invalidTypes, canIncludeDeploymentConfig, canIncludeKnative, t]);\n\n  if (\n    !['edit', 'knatify'].includes(values.formType) &&\n    values.import?.selectedStrategy?.type !== ImportStrategy.SERVERLESS_FUNCTION\n  ) {\n    return (\n      <FormSection>\n        <SingleDropdownField\n          name={fieldName}\n          label={t('devconsole~Resource type')}\n          options={selectInputOptions}\n          onChange={onChange}\n          getLabelFromValue={(value: string) => t(ReadableResourcesNames[value])}\n          helpText={\n            <p className=\"pf-v5-c-form__helper-text\">\n              <Trans t={t} ns=\"devconsole\">\n                Resource type to generate. The default can be set in{' '}\n                <Link to=\"/user-preferences/applications\">User Preferences</Link>.\n              </Trans>\n            </p>\n          }\n          toggleOnSelection\n        />\n      </FormSection>\n    );\n  }\n  return null;\n};\n\nexport default connectToFlags(\n  FLAG_KNATIVE_SERVING_SERVICE,\n  FLAG_OPENSHIFT_DEPLOYMENTCONFIG,\n)(ResourceSection);\n","import * as React from 'react';\nimport { FLAG_KNATIVE_SERVING_SERVICE } from '@console/knative-plugin';\nimport { useUserSettings, useFlag } from '@console/shared';\nimport {\n  LAST_RESOURCE_TYPE_STORAGE_KEY,\n  PREFERRED_RESOURCE_TYPE_USER_SETTING_KEY,\n} from '../../../const';\nimport { Resources } from '../import-types';\n\nconst LAST_USED_RESOURCE_KEY = 'latest';\n\nexport const useResourceType = (): [string, React.Dispatch<React.SetStateAction<string>>] => {\n  const isKnSvcEnabled = useFlag(FLAG_KNATIVE_SERVING_SERVICE);\n  const defaultResourceType = isKnSvcEnabled ? Resources.KnativeService : Resources.Kubernetes;\n\n  const [\n    preferredResourceType,\n    setPreferredResourceType,\n    preferredResourceTypeLoaded,\n  ] = useUserSettings<string>(PREFERRED_RESOURCE_TYPE_USER_SETTING_KEY, defaultResourceType);\n\n  const [resourceType, setResourceType, resourceTypeLoaded] = useUserSettings<string>(\n    LAST_RESOURCE_TYPE_STORAGE_KEY,\n    defaultResourceType,\n  );\n\n  React.useEffect(() => {\n    if (!isKnSvcEnabled) {\n      if (\n        preferredResourceTypeLoaded &&\n        resourceTypeLoaded &&\n        preferredResourceType === LAST_USED_RESOURCE_KEY &&\n        resourceType === Resources.KnativeService\n      ) {\n        setResourceType(Resources.Kubernetes);\n      } else if (\n        preferredResourceTypeLoaded &&\n        preferredResourceType === Resources.KnativeService\n      ) {\n        setPreferredResourceType(Resources.Kubernetes);\n        setResourceType(Resources.Kubernetes);\n      }\n    }\n  }, [\n    isKnSvcEnabled,\n    preferredResourceType,\n    preferredResourceTypeLoaded,\n    resourceType,\n    resourceTypeLoaded,\n    setPreferredResourceType,\n    setResourceType,\n  ]);\n\n  React.useEffect(() => {\n    if (preferredResourceTypeLoaded && preferredResourceType !== LAST_USED_RESOURCE_KEY) {\n      setResourceType(preferredResourceType);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [preferredResourceType, preferredResourceTypeLoaded]);\n\n  return [resourceType, setResourceType];\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { WatchK8sResults, WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { LoadingBox, PageHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ImageStreamModel, ProjectModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { IMAGESTREAM_NAMESPACE, JAVA_IMAGESTREAM_NAME, QUERY_PROPERTIES } from '../../../const';\nimport { normalizeBuilderImages, NormalizedBuilderImages } from '../../../utils/imagestream-utils';\nimport NamespacedPage, { NamespacedPageVariants } from '../../NamespacedPage';\nimport QueryFocusApplication from '../../QueryFocusApplication';\nimport UploadJar from './UploadJar';\n\ntype WatchResource = {\n  [key: string]: K8sResourceKind[] | K8sResourceKind;\n};\n\nconst UploadJarPage: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n\n  const resources: WatchK8sResults<WatchResource> = useK8sWatchResources<WatchResource>({\n    projects: {\n      kind: ProjectModel.kind,\n      isList: true,\n    },\n    imagestream: {\n      kind: ImageStreamModel.kind,\n      name: JAVA_IMAGESTREAM_NAME,\n      namespace: IMAGESTREAM_NAMESPACE,\n    },\n  });\n\n  const isResourceLoaded =\n    Object.keys(resources).length > 0 &&\n    Object.values(resources).every((value) => value.loaded || !!value.loadError);\n\n  if (!isResourceLoaded) return <LoadingBox />;\n\n  let normalizedJavaImages: NormalizedBuilderImages;\n  const { loaded: isLoaded, data: isData, loadError: isLoadError } = resources.imagestream;\n  if (isLoaded && !isLoadError) {\n    normalizedJavaImages = normalizeBuilderImages(isData);\n  }\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('devconsole~Upload JAR file')}</title>\n      </Helmet>\n      <PageHeading title={t('devconsole~Upload JAR file')}>\n        {t('devconsole~Upload a JAR file from your local desktop to OpenShift')}\n      </PageHeading>\n      <QueryFocusApplication>\n        {(desiredApplication) => (\n          <UploadJar\n            forApplication={desiredApplication}\n            namespace={namespace}\n            projects={resources.projects as WatchK8sResultsObject<K8sResourceKind[]>}\n            builderImage={normalizedJavaImages?.[JAVA_IMAGESTREAM_NAME]}\n            contextualSource={params.get(QUERY_PROPERTIES.CONTEXT_SOURCE)}\n          />\n        )}\n      </QueryFocusApplication>\n    </NamespacedPage>\n  );\n};\n\nexport default UploadJarPage;\n","export { default as ImportPage } from './ImportPage';\nexport { default as SamplesCatalog } from './SamplesCatalog';\nexport { default as ImportSamplePage } from './ImportSamplePage';\nexport { default as DeployImagePage } from './DeployImagePage';\nexport { default as UploadJarPage } from './jar/UploadJarPage';\nexport { ImportYamlPage } from '@console/internal/components/import-yaml';\n","import * as React from 'react';\nimport { ValidatedOptions, AlertVariant } from '@patternfly/react-core';\nimport { Formik, FormikProps } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider, ImportStrategy } from '@console/git-service/src';\nimport { history, AsyncComponent, StatusBox } from '@console/internal/components/utils';\nimport { RouteModel } from '@console/internal/models';\nimport { RouteKind } from '@console/internal/module/k8s';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { defaultRepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/consts';\nimport { usePacInfo } from '@console/pipelines-plugin/src/components/repository/hooks/pac-hook';\nimport { createRemoteWebhook } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport {\n  ALL_APPLICATIONS_KEY,\n  usePerspectives,\n  usePostFormSubmitAction,\n  useTelemetry,\n} from '@console/shared';\nimport { useToast } from '@console/shared/src/components/toast';\nimport { startBuild as startShipwrightBuild } from '@console/shipwright-plugin/src/api';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport {\n  Build as ShipwrightBuildKind,\n  ClusterBuildStrategy as ShipwrightClusterBuildStrategy,\n} from '@console/shipwright-plugin/src/types';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { NormalizedBuilderImages, normalizeBuilderImages } from '../../utils/imagestream-utils';\nimport { getBaseInitialValues } from './form-initial-values';\nimport {\n  createOrUpdateResources,\n  filterDeployedResources,\n  getTelemetryImport,\n  handleRedirect,\n} from './import-submit-utils';\nimport {\n  GitImportFormData,\n  FirehoseList,\n  ImportData,\n  Resources,\n  BaseFormData,\n  ImportTypes,\n  BuildOptions,\n} from './import-types';\nimport { validationSchema } from './import-validation-utils';\nimport { useDefaultBuildOption } from './section/useDefaultBuildOption';\nimport { useUpdateKnScalingDefaultValues } from './serverless/useUpdateKnScalingDefaultValues';\nimport ImportToastContent from './toast/ImportToastContent';\nimport WebhookToastContent from './toast/WebhookToastContent';\n\nexport interface ImportFormProps {\n  namespace: string;\n  importData: ImportData;\n  contextualSource?: string;\n  imageStreams?: FirehoseList;\n  projects?: {\n    loaded: boolean;\n    data: [];\n  };\n}\n\nexport interface StateProps {\n  activeApplication: string;\n}\n\nconst ImportForm: React.FC<ImportFormProps & StateProps> = ({\n  namespace,\n  imageStreams,\n  importData,\n  contextualSource,\n  activeApplication,\n  projects,\n}) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [perspective] = useActivePerspective();\n  const perspectiveExtensions = usePerspectives();\n  const postFormCallback = usePostFormSubmitAction();\n  const toastContext = useToast();\n  const [pac, loaded] = usePacInfo();\n  const defaultBuildOption = useDefaultBuildOption();\n\n  const initialBaseValues: BaseFormData = getBaseInitialValues(namespace, activeApplication);\n  const initialValues: GitImportFormData = {\n    ...initialBaseValues,\n    application: {\n      ...initialBaseValues.application,\n      selectedKey:\n        activeApplication === t('devconsole~No application group')\n          ? UNASSIGNED_KEY\n          : activeApplication,\n      isInContext: !!sanitizeApplicationValue(activeApplication),\n    },\n    resourceTypesNotValid: contextualSource ? [Resources.KnativeService] : [],\n    pipeline: {\n      enabled: false,\n      type: PipelineType.PIPELINE,\n    },\n    git: {\n      url: '',\n      type: GitProvider.INVALID,\n      ref: '',\n      dir: '/',\n      showGitType: false,\n      secret: '',\n      isUrlValidating: false,\n      validated: ValidatedOptions.default,\n    },\n    docker: {\n      dockerfilePath: '',\n      dockerfileHasError: true,\n    },\n    devfile: {\n      devfilePath: '',\n      devfileHasError: false,\n    },\n    pac: {\n      pacHasError: false,\n      repository: {\n        ...defaultRepositoryFormValues,\n      },\n    },\n    build: {\n      ...initialBaseValues.build,\n      triggers: {\n        webhook: true,\n        image: true,\n        config: true,\n      },\n      strategy: importData.buildStrategy || 'Devfile',\n      option: defaultBuildOption,\n      clusterBuildStrategy: ShipwrightClusterBuildStrategy.UNKNOWN,\n    },\n    import: {\n      loaded: false,\n      knativeFuncLoaded: false,\n      loadError: null,\n      strategies: [],\n      selectedStrategy: {\n        name: 'Builder Image',\n        type: ImportStrategy.S2I,\n        priority: 0,\n        detectedFiles: [],\n      },\n      recommendedStrategy: null,\n      showEditImportStrategy: importData.type !== ImportTypes.git,\n      strategyChanged: false,\n    },\n  };\n\n  const initialVals = useUpdateKnScalingDefaultValues(initialValues);\n  const builderImages: NormalizedBuilderImages =\n    imageStreams && imageStreams.loaded && normalizeBuilderImages(imageStreams.data);\n\n  const handleSubmit = (values: GitImportFormData, actions) => {\n    const imageStream = builderImages && builderImages[values.image.selected]?.obj;\n    const createNewProject = projects.loaded && _.isEmpty(projects.data);\n    const {\n      build: { option: buildOption },\n      project: { name: projectName },\n      pipeline: { enabled: pipelineEnabled, type: pipelineType },\n      pac: { repository },\n    } = values;\n\n    const resourceActions = createOrUpdateResources(\n      t,\n      values,\n      imageStream,\n      createNewProject,\n      true,\n    ).then(() => createOrUpdateResources(t, values, imageStream));\n\n    resourceActions\n      .then((resources) => {\n        postFormCallback(resources);\n      })\n      .catch(() => {});\n\n    return resourceActions\n      .then(async (resources) => {\n        if (pipelineEnabled && pipelineType === PipelineType.PAC) {\n          const isWebHookAttached = await createRemoteWebhook(repository, pac, loaded);\n          toastContext.addToast({\n            variant: isWebHookAttached ? AlertVariant.success : AlertVariant.danger,\n            title: isWebHookAttached\n              ? t('devconsole~Webhook attached to the Git Repository')\n              : t('devconsole~Could not attach webhook to the Git Repository'),\n            content: !isWebHookAttached ? (\n              <WebhookToastContent\n                repositoryName={repository.name}\n                git={values.git}\n                projectName={projectName}\n              />\n            ) : null,\n            timeout: true,\n            dismissible: true,\n          });\n        }\n\n        const deployedResources = filterDeployedResources(resources);\n\n        const redirectSearchParams = new URLSearchParams();\n\n        /* NOTE: This will be automated once Shipwright Triggers is GA */\n        if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n          const shipwrightBuild = resources?.find(\n            (resource) => resource.kind === ShipwrightBuildModel.kind,\n          ) as ShipwrightBuildKind;\n          try {\n            await startShipwrightBuild(shipwrightBuild);\n          } catch (err) {\n            toastContext.addToast({\n              variant: AlertVariant.danger,\n              title: t('devconsole~Build failed'),\n              content: err.message,\n              timeout: true,\n              dismissible: true,\n            });\n          }\n        }\n\n        const route = resources.find((resource) => resource.kind === RouteModel.kind) as RouteKind;\n        if (deployedResources.length > 0) {\n          toastContext.addToast({\n            variant: AlertVariant.info,\n            title:\n              deployedResources.length > 1\n                ? t('devconsole~Resources added')\n                : t('devconsole~Resource added'),\n            content: <ImportToastContent deployedResources={deployedResources} route={route} />,\n            timeout: true,\n            dismissible: true,\n          });\n\n          if (typeof deployedResources[0].metadata.uid === 'string') {\n            redirectSearchParams.set('selectId', deployedResources[0].metadata.uid);\n          }\n        }\n\n        fireTelemetryEvent('Git Import', getTelemetryImport(values));\n\n        handleRedirect(projectName, perspective, perspectiveExtensions, redirectSearchParams);\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.warn('Error while submitting import form:', err);\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  const renderForm = (formikProps: FormikProps<any>) => {\n    return (\n      <AsyncComponent\n        {...formikProps}\n        projects={projects}\n        builderImages={builderImages}\n        loader={importData.loader}\n      />\n    );\n  };\n\n  return (\n    <StatusBox\n      data={imageStreams?.data}\n      loaded={imageStreams?.loaded}\n      loadError={imageStreams?.loadError}\n    >\n      <Formik\n        initialValues={initialVals}\n        onSubmit={handleSubmit}\n        onReset={history.goBack}\n        validationSchema={validationSchema(t)}\n      >\n        {renderForm}\n      </Formik>\n    </StatusBox>\n  );\n};\n\ntype OwnProps = ImportFormProps & { forApplication?: string };\nconst mapStateToProps = (state: RootState, ownProps: OwnProps): StateProps => {\n  const activeApplication = ownProps.forApplication || getActiveApplication(state);\n  return {\n    activeApplication: activeApplication !== ALL_APPLICATIONS_KEY ? activeApplication : '',\n  };\n};\n\nexport default connect(mapStateToProps)(ImportForm);\n","import * as React from 'react';\nimport { FLAG_OPENSHIFT_BUILDCONFIG } from '@console/dev-console/src/const';\nimport { useShipwrightBuilds } from '@console/dev-console/src/utils/shipwright-build-hook';\nimport { FLAG_OPENSHIFT_PIPELINE } from '@console/pipelines-plugin/src/const';\nimport { useFlag } from '@console/shared';\nimport { BuildOptions } from '../import-types';\n\nexport const useDefaultBuildOption = (): BuildOptions => {\n  const isBuildV1Enabled = useFlag(FLAG_OPENSHIFT_BUILDCONFIG);\n  const isShipwrightEnabled = useShipwrightBuilds();\n  const isPipelineEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE);\n\n  const defaultBuildOption = React.useMemo(() => {\n    if (isShipwrightEnabled) {\n      return BuildOptions.SHIPWRIGHT_BUILD;\n    }\n    if (isBuildV1Enabled) {\n      return BuildOptions.BUILDS;\n    }\n    if (isPipelineEnabled) {\n      return BuildOptions.PIPELINES;\n    }\n    return BuildOptions.DISABLED;\n  }, [isBuildV1Enabled, isShipwrightEnabled, isPipelineEnabled]);\n\n  return defaultBuildOption;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLinkAndCopy } from '@console/internal/components/routes';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\n\ninterface ImportToastContentProps {\n  deployedResources: K8sResourceKind[];\n  route?: RouteKind;\n}\n\nconst ImportToastContent: React.FC<ImportToastContentProps> = ({\n  deployedResources = [],\n  route,\n}) => {\n  const { t } = useTranslation();\n  if (!deployedResources || deployedResources.length === 0) {\n    return null;\n  }\n  return (\n    <>\n      {deployedResources.length &&\n        t('devconsole~{{kind}} created successfully.', { kind: deployedResources[0].kind })}\n      {route && (\n        <p>\n          <RouteLinkAndCopy route={route} />\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default ImportToastContent;\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { RepositoryModel } from '@console/pipelines-plugin/src/models';\nimport { GitData, GitReadableTypes } from '../import-types';\n\ninterface WebhookToastContentProps {\n  repositoryName: string;\n  git: GitData;\n  projectName: string;\n}\n\nconst WebhookToastContent: React.FC<WebhookToastContentProps> = ({\n  repositoryName,\n  git,\n  projectName,\n}) => {\n  const { t } = useTranslation();\n  const translatedGitType = t(GitReadableTypes[git.detectedType]);\n  return (\n    <>\n      <Trans t={t} ns=\"devconsole\" values={{ translatedGitType }}>\n        Copy the <b>Webhook URL</b> from the{' '}\n        <a\n          href={resourcePathFromModel(RepositoryModel, repositoryName, projectName)}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Repository Page\n        </a>{' '}\n        and attach it to the{' '}\n        <a href={git.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {{ translatedGitType }} repository\n        </a>{' '}\n        manually.\n      </Trans>\n    </>\n  );\n};\n\nexport default WebhookToastContent;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, FormBody } from '@console/shared';\nimport { FormFooter } from '@console/shared/src/components/form-utils';\nimport { BuilderImage } from '../../utils/imagestream-utils';\nimport BuilderImageTagSelector from './builder/BuilderImageTagSelector';\nimport FormSection from './section/FormSection';\n\ntype ImportSampleFormProps = {\n  builderImage: BuilderImage;\n};\n\ntype Props = FormikProps<FormikValues> & ImportSampleFormProps;\n\nconst ImportSampleForm: React.FC<Props> = ({\n  values,\n  errors,\n  handleSubmit,\n  handleReset,\n  builderImage,\n  status,\n  isSubmitting,\n}) => {\n  const { t } = useTranslation();\n  const {\n    image: { tag: selectedImagetag },\n  } = values;\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormBody style={{ marginTop: 0 }}>\n        <FormSection>\n          <InputField\n            type={TextInputTypes.text}\n            name=\"name\"\n            label={t('devconsole~Name')}\n            helpText={t(\n              'devconsole~A unique name given to the component that will be used to name associated resources.',\n            )}\n            data-test-id=\"application-form-app-name\"\n            required\n          />\n          <BuilderImageTagSelector\n            selectedBuilderImage={builderImage}\n            selectedImageTag={selectedImagetag}\n          />\n          <InputField\n            type={TextInputTypes.text}\n            name=\"git.url\"\n            label={t('devconsole~Git repo URL')}\n            data-test-id=\"git-form-input-url\"\n            isDisabled\n          />\n        </FormSection>\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('devconsole~Create')}\n        disableSubmit={!_.isEmpty(errors) || isSubmitting}\n        resetLabel={t('devconsole~Cancel')}\n        sticky\n      />\n    </form>\n  );\n};\n\nexport default ImportSampleForm;\n","import * as React from 'react';\nimport { Formik, FormikHelpers } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { ImportStrategy } from '@console/git-service/src/types';\nimport { history } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ALL_APPLICATIONS_KEY, usePostFormSubmitAction } from '@console/shared';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { healthChecksProbeInitialData } from '../health-checks/health-checks-probe-utils';\nimport { createOrUpdateDeployImageResources } from './deployImage-submit-utils';\nimport { deployValidationSchema } from './deployImage-validation-utils';\nimport DeployImageForm from './DeployImageForm';\nimport { filterDeployedResources } from './import-submit-utils';\nimport { DeployImageFormData, FirehoseList, Resources } from './import-types';\nimport { useUpdateKnScalingDefaultValues } from './serverless/useUpdateKnScalingDefaultValues';\n\nexport interface DeployImageProps {\n  namespace: string;\n  projects?: FirehoseList;\n  contextualSource?: string;\n}\n\ninterface StateProps {\n  activeApplication: string;\n}\n\ntype Props = DeployImageProps & StateProps;\n\nconst DeployImage: React.FC<Props> = ({\n  namespace,\n  projects,\n  activeApplication,\n  contextualSource,\n}) => {\n  const postFormCallback = usePostFormSubmitAction();\n  const { t } = useTranslation();\n  const initialValues: DeployImageFormData = {\n    project: {\n      name: namespace || '',\n      displayName: '',\n      description: '',\n    },\n    application: {\n      initial: sanitizeApplicationValue(activeApplication),\n      name: sanitizeApplicationValue(activeApplication),\n      selectedKey: activeApplication,\n      isInContext: !!sanitizeApplicationValue(activeApplication),\n    },\n    name: '',\n    searchTerm: '',\n    registry: 'external',\n    allowInsecureRegistry: false,\n    imageStream: {\n      image: '',\n      tag: '',\n      namespace: namespace || '',\n    },\n    isi: {\n      name: '',\n      image: {},\n      tag: '',\n      status: { metadata: {}, status: '' },\n      ports: [],\n    },\n    image: {\n      name: '',\n      image: {},\n      tag: '',\n      status: { metadata: {}, status: '' },\n      ports: [],\n    },\n    import: {\n      selectedStrategy: {\n        name: '',\n        type: ImportStrategy.S2I,\n        priority: 0,\n        detectedFiles: [],\n      },\n    },\n    runtimeIcon: null,\n    isSearchingForImage: false,\n    serverless: {\n      scaling: {\n        minpods: '',\n        maxpods: '',\n        concurrencytarget: '',\n        concurrencylimit: '',\n        autoscale: {\n          autoscalewindow: '',\n          autoscalewindowUnit: '',\n          defaultAutoscalewindowUnit: 's',\n        },\n        concurrencyutilization: '',\n      },\n      domainMapping: [],\n    },\n    route: {\n      disable: false,\n      create: true,\n      targetPort: '',\n      unknownTargetPort: '',\n      defaultUnknownPort: 8080,\n      path: '',\n      hostname: '',\n      secure: false,\n      tls: {\n        termination: null,\n        insecureEdgeTerminationPolicy: null,\n        caCertificate: '',\n        certificate: '',\n        destinationCACertificate: '',\n        key: '',\n      },\n    },\n    resources: Resources.Kubernetes,\n    resourceTypesNotValid: contextualSource ? [Resources.KnativeService] : [],\n    build: {\n      env: [],\n      triggers: {\n        webhook: true,\n        image: true,\n        config: true,\n      },\n      strategy: 'Source',\n    },\n    deployment: {\n      env: [],\n      triggers: {\n        image: true,\n        config: true,\n      },\n      replicas: 1,\n    },\n    labels: {},\n    env: {},\n    limits: {\n      cpu: {\n        request: '',\n        requestUnit: 'm',\n        defaultRequestUnit: 'm',\n        limit: '',\n        limitUnit: 'm',\n        defaultLimitUnit: 'm',\n      },\n      memory: {\n        request: '',\n        requestUnit: 'Mi',\n        defaultRequestUnit: 'Mi',\n        limit: '',\n        limitUnit: 'Mi',\n        defaultLimitUnit: 'Mi',\n      },\n    },\n    healthChecks: healthChecksProbeInitialData,\n  };\n\n  const initialVals = useUpdateKnScalingDefaultValues(initialValues);\n\n  const handleSubmit = (\n    values: DeployImageFormData,\n    helpers: FormikHelpers<DeployImageFormData>,\n  ) => {\n    const {\n      project: { name: projectName },\n    } = values;\n\n    const resourceActions: Promise<K8sResourceKind[]> = createOrUpdateDeployImageResources(\n      values,\n      true,\n    ).then(() => {\n      const requests: Promise<K8sResourceKind[]> = createOrUpdateDeployImageResources(values);\n      return requests;\n    });\n    resourceActions\n      .then((resources) => postFormCallback(resources))\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.log('Failed to create or update image resources', err);\n      });\n\n    return resourceActions\n      .then((res) => {\n        const selectId = filterDeployedResources(res)[0]?.metadata?.uid;\n\n        history.push(`/topology/ns/${projectName}${selectId ? `?selectId=${selectId}` : ''}`);\n      })\n      .catch((err) => {\n        helpers.setStatus({ submitError: err.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialVals}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validationSchema={deployValidationSchema(t)}\n    >\n      {(formikProps) => <DeployImageForm {...formikProps} projects={projects} />}\n    </Formik>\n  );\n};\n\ninterface OwnProps extends DeployImageProps {\n  forApplication?: string;\n}\nconst mapStateToProps = (state: RootState, ownProps: OwnProps): StateProps => {\n  const activeApplication = ownProps.forApplication || getActiveApplication(state);\n\n  return {\n    activeApplication: activeApplication !== ALL_APPLICATIONS_KEY ? activeApplication : '',\n  };\n};\n\nexport default connect(mapStateToProps)(DeployImage);\n","import * as React from 'react';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { usePreventDataLossLock } from '@console/internal/components/utils';\nimport { FormFooter, FlexForm, FormBody } from '@console/shared/src/components/form-utils';\nimport { hasSampleQueryParameter } from '../../utils/samples';\nimport AdvancedSection from './advanced/AdvancedSection';\nimport AppSection from './app/AppSection';\nimport ImageSearchSection from './image-search/ImageSearchSection';\nimport { DeployImageFormProps } from './import-types';\nimport { DeploySection } from './section/deploy-section/DeploySection';\nimport IconSection from './section/IconSection';\n\nconst DeployImageForm: React.FC<FormikProps<FormikValues> & DeployImageFormProps> = ({\n  values,\n  errors,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n  dirty,\n  projects,\n}) => {\n  const { t } = useTranslation();\n  usePreventDataLossLock(isSubmitting);\n\n  const isSample = hasSampleQueryParameter();\n  const showAdvancedSections = !isSample;\n\n  return (\n    <FlexForm className=\"co-deploy-image\" data-test-id=\"deploy-image-form\" onSubmit={handleSubmit}>\n      <FormBody>\n        <ImageSearchSection />\n        <IconSection />\n        <AppSection\n          project={values.project}\n          noProjectsAvailable={projects.loaded && _.isEmpty(projects.data)}\n        />\n        {showAdvancedSections && (\n          <>\n            <DeploySection values={values} />\n            <AdvancedSection values={values} />\n          </>\n        )}\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('devconsole~Create')}\n        sticky\n        disableSubmit={!dirty || !_.isEmpty(errors) || isSubmitting}\n        resetLabel={t('devconsole~Cancel')}\n      />\n    </FlexForm>\n  );\n};\n\nexport default DeployImageForm;\n","import * as React from 'react';\nimport { Formik, FormikHelpers } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResultsObject, useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  ALL_APPLICATIONS_KEY,\n  usePerspectives,\n  usePostFormSubmitAction,\n} from '@console/shared/src';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils';\nimport { BuilderImage } from '../../../utils/imagestream-utils';\nimport { getBaseInitialValues } from '../form-initial-values';\nimport { filterDeployedResources, handleRedirect } from '../import-submit-utils';\nimport { BaseFormData, Resources, UploadJarFormData } from '../import-types';\nimport { createOrUpdateJarFile } from '../upload-jar-submit-utils';\nimport { validationSchema } from '../upload-jar-validation-utils';\nimport UploadJarForm from './UploadJarForm';\nimport { useUploadJarFormToast } from './useUploadJarFormToast';\n\ntype UploadJarProps = {\n  namespace: string;\n  projects: WatchK8sResultsObject<K8sResourceKind[]>;\n  builderImage: BuilderImage;\n  forApplication?: string;\n  contextualSource?: string;\n};\n\nconst UploadJar: React.FunctionComponent<UploadJarProps> = ({\n  namespace,\n  projects,\n  builderImage,\n  forApplication,\n  contextualSource,\n}) => {\n  const postFormCallback = usePostFormSubmitAction();\n  const toastCallback = useUploadJarFormToast();\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const perspectiveExtensions = usePerspectives();\n  const application = forApplication || '';\n  const activeApplication = application !== ALL_APPLICATIONS_KEY ? application : '';\n  const { name: imageName, recentTag: tag } = builderImage || {};\n\n  const initialBaseValues: BaseFormData = getBaseInitialValues(namespace, activeApplication);\n  const initialValues: UploadJarFormData = {\n    ...initialBaseValues,\n    application: {\n      ...initialBaseValues.application,\n      isInContext: !!sanitizeApplicationValue(activeApplication),\n    },\n    fileUpload: {\n      name: '',\n      value: '',\n      javaArgs: '',\n    },\n    resourceTypesNotValid: contextualSource ? [Resources.KnativeService] : [],\n    runtimeIcon: 'java',\n    image: {\n      ...initialBaseValues.image,\n      ...(imageName && tag?.name && { selected: imageName, tag: tag.name, tagObj: tag }),\n    },\n    import: {\n      showEditImportStrategy: true,\n    },\n  };\n\n  const handleSubmit = (values: UploadJarFormData, actions: FormikHelpers<UploadJarFormData>) => {\n    const imageStream = builderImage?.obj;\n    const createNewProject = projects.loaded && _.isEmpty(projects.data);\n    const {\n      project: { name: projectName },\n    } = values;\n\n    const resourceActions = createOrUpdateJarFile(\n      values,\n      imageStream,\n      createNewProject,\n      true,\n    ).then(() => createOrUpdateJarFile(values, imageStream));\n\n    return resourceActions\n      .then((resp) => {\n        postFormCallback(resp);\n        toastCallback(resp);\n        handleRedirect(\n          projectName,\n          perspective,\n          perspectiveExtensions,\n          new URLSearchParams({\n            selectId: filterDeployedResources(resp)[0]?.metadata?.uid,\n          }),\n        );\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validationSchema={validationSchema(t)}\n    >\n      {(formikProps) => (\n        <UploadJarForm\n          {...formikProps}\n          namespace={namespace}\n          projects={projects}\n          builderImage={builderImage}\n        />\n      )}\n    </Formik>\n  );\n};\n\nexport default UploadJar;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { usePreventDataLossLock } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FlexForm, FormBody, FormFooter } from '@console/shared/src/components/form-utils';\nimport { BuilderImage } from '../../../utils/imagestream-utils';\nimport AdvancedSection from '../advanced/AdvancedSection';\nimport AppSection from '../app/AppSection';\nimport BuilderImageTagSelector from '../builder/BuilderImageTagSelector';\nimport FormSection from '../section/FormSection';\nimport IconSection from '../section/IconSection';\nimport ResourceSection from '../section/ResourceSection';\nimport JarSection from './section/JarSection';\n\nexport type UploadJarFormProps = {\n  namespace: string;\n  projects: WatchK8sResultsObject<K8sResourceKind[]>;\n  builderImage?: BuilderImage;\n};\n\nconst UploadJarForm: React.FunctionComponent<FormikProps<FormikValues> & UploadJarFormProps> = ({\n  values,\n  errors,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n  dirty,\n  projects,\n  builderImage,\n}) => {\n  const { t } = useTranslation();\n  usePreventDataLossLock(isSubmitting);\n  const {\n    image: { tag: selectedImagetag },\n  } = values;\n\n  return (\n    <FlexForm className=\"co-deploy-image\" data-test-id=\"upload-jar-form\" onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        <JarSection />\n        <IconSection />\n        <FormSection>\n          {builderImage && selectedImagetag ? (\n            <BuilderImageTagSelector\n              selectedBuilderImage={builderImage}\n              selectedImageTag={selectedImagetag}\n              showImageInfo={false}\n            />\n          ) : (\n            <Alert\n              variant=\"warning\"\n              title={t('devconsole~Unable to detect the Builder Image.')}\n              isInline\n            >\n              {t('devconsole~No associated Builder Image is found for Java.')}\n            </Alert>\n          )}\n        </FormSection>\n        <AppSection\n          project={values.project}\n          noProjectsAvailable={projects.loaded && _.isEmpty(projects.data)}\n        />\n        <ResourceSection />\n        <AdvancedSection values={values} />\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('devconsole~Create')}\n        sticky\n        disableSubmit={!dirty || !_.isEmpty(errors) || isSubmitting}\n        resetLabel={t('devconsole~Cancel')}\n      />\n    </FlexForm>\n  );\n};\n\nexport default UploadJarForm;\n"],"sourceRoot":""}