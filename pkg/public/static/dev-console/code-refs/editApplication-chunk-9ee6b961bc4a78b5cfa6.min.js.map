{"version":3,"sources":["webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/image-stream.tsx","webpack:///./packages/console-app/src/components/file-upload/file-upload-context.ts","webpack:///./packages/dev-console/src/components/edit-application/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./packages/dev-console/src/utils/imagestream-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/const.ts","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/dev-console/src/components/health-checks/create-health-checks-probe-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./public/components/image-stream-timeline.tsx","webpack:///./packages/shipwright-plugin/src/types.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamContext.ts","webpack:///./packages/dev-console/src/components/import/import-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils.ts","webpack:///./packages/knative-plugin/src/utils/create-knative-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./packages/dev-console/src/types/samples.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/dev-console/src/utils/shared-submit-utils.ts","webpack:///./packages/dev-console/src/utils/samples.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/topology/src/components/svg/SvgResourceIcon.tsx","webpack:///./packages/dev-console/src/components/edit-application/edit-application-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/dev-console/src/components/import/CreateSecretModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualizationTask.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/draw-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/ErrorNodeDecorator.tsx","webpack:///./packages/dev-console/src/components/import/upload-jar-validation-utils.ts","webpack:///./packages/dev-console/src/components/import/app/AppSection.tsx","webpack:///./packages/dev-console/src/models/samples.ts","webpack:///./packages/dev-console/src/components/import/deployImage-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/factories.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/StatusIcon.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationSelector.tsx","webpack:///./packages/topology/src/components/svg/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/pipeline-step-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualizationStepList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/LoadingTask.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PlusNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskListNode.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/WebhookSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/hooks/pac-hook.ts","webpack:///./packages/dev-console/src/components/import/advanced/AdvancedSection.tsx","webpack:///./packages/dev-console/src/components/import/git/GitSection.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStream.tsx","webpack:///./packages/console-app/src/components/file-upload/file-upload-utils.ts","webpack:///./packages/dev-console/src/components/user-preferences/usePreferredRoutingOptions.tsx","webpack:///./packages/dev-console/src/components/health-checks/HealthChecks.tsx","webpack:///./packages/dev-console/src/components/health-checks/HealthCheckProbe.tsx","webpack:///./packages/dev-console/src/components/health-checks/ProbeForm.tsx","webpack:///./packages/dev-console/src/components/health-checks/RequestTypeForms.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ResourceLimitSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ScalingSection.tsx","webpack:///./packages/dev-console/src/components/import/git/AdvancedGitOptions.tsx","webpack:///./packages/dev-console/src/components/import/git/SourceSecretSelector.tsx","webpack:///./packages/dev-console/src/components/dropdown/SourceSecretDropdown.tsx","webpack:///./packages/dev-console/src/components/import/git/GitTypeSelector.tsx","webpack:///./packages/dev-console/src/components/import/git/SampleRepo.tsx","webpack:///./packages/dev-console/src/components/import/builder/BuilderImageTagSelector.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamDropdown.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamNsDropdown.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamTagDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineTopologyGraph.tsx","webpack:///./packages/dev-console/src/components/import/advanced/DeploymentConfigSection.tsx","webpack:///./packages/dev-console/src/components/import/route/SecureRoute.tsx","webpack:///./packages/dev-console/src/utils/shipwright-build-hook.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/BuilderFinallyNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/WhenExpressionDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/dag.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/InstallingNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/RemoveNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/BuilderNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/CustomTaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/FinallyNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/InvalidTaskListNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/LoadingNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineTaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskEdge.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineVisualizationSurface.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/ConfigTypeSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/GithubSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/PermissionsSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/LabelSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/RouteSection.tsx","webpack:///./packages/dev-console/src/components/import/route/AdvancedRouteOptions.tsx","webpack:///./packages/dev-console/src/components/import/serverless/ServerlessRouteSection.tsx","webpack:///./packages/dev-console/src/components/import/route/CreateRoute.tsx","webpack:///./packages/dev-console/src/components/import/route/PortInputField.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ServerlessScalingSection.tsx","webpack:///./packages/dev-console/src/components/import/builder/builderImageHooks.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/PipelineSection.tsx","webpack:///./packages/dev-console/src/components/import/section/IconSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/PipelineTemplate.tsx","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/PacSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/PacInfoPanel.tsx","webpack:///./packages/dev-console/src/utils/safe-k8s-hook.tsx","webpack:///./packages/dev-console/src/components/import/builder/BuilderImageEnvironments.tsx","webpack:///./packages/dev-console/src/components/import/builder/ImageStreamInfo.tsx","webpack:///./packages/dev-console/src/components/import/deployImage-submit-utils.ts","webpack:///./packages/dev-console/src/components/import/image-search/ImageSearchSection.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageSearch.tsx","webpack:///./packages/dev-console/src/components/import/icon/IconDropdown.tsx","webpack:///./packages/dev-console/src/components/import/builder/BuilderSection.tsx","webpack:///./packages/dev-console/src/components/import/section/build-section/BuildSection.tsx","webpack:///./packages/dev-console/src/components/import/jar/useUploadJarFormToast.ts","webpack:///./packages/dev-console/src/components/import/upload-jar-submit-utils.ts","webpack:///./packages/dev-console/src/components/import/builder/BuilderImageSelector.tsx","webpack:///./packages/dev-console/src/components/import/git/DockerSection.tsx","webpack:///./packages/dev-console/src/components/import/jar/section/JarSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/BuildConfigSection.tsx","webpack:///./packages/dev-console/src/components/import/section/build-section/BuildOptions.tsx","webpack:///./packages/dev-console/src/components/import/section/build-section/BuildStrategySelector.tsx","webpack:///./packages/dev-console/src/components/edit-application/EditApplicationPage.tsx","webpack:///./packages/dev-console/src/components/edit-application/EditApplicationComponent.tsx","webpack:///./packages/dev-console/src/components/edit-application/EditApplication.tsx","webpack:///./packages/dev-console/src/components/edit-application/EditApplicationForm.tsx"],"names":["getAnnotationTags","specTag","split","getBuilderTags","imageStream","statusTags","getStatusTags","spec","tags","tag","annotationTags","isBuilderTag","name","getBuilderTagsSortedByVersion","sort","a","b","v1","v2","localeCompare","getMostRecentBuilderTag","isBuilder","common","factory","menuActions","getExtensionsActionsForKind","ImageStreamTagsRow","statusTag","imageStreamStatus","latest","from","referencesTag","image","created","dockerRepositoryCheck","t","className","kind","metadata","namespace","title","linkTo","timestamp","ExampleDockerCommandPopover","publicImageRepository","pushCommand","pullCommand","headerContent","minWidth","bodyContent","value","ns","href","text","type","variant","ImageStreamsDetails","obj","imageRepository","imageCount","specTagByName","importErrors","status","acc","importErrorCondition","conditions","condition","push","message","warning","alerts","error","i","key","resource","ImageStreamHistory","imageStreamStatusTags","imageStreamTags","imageStreamName","imageStreamNamespace","displayName","pages","details","editYaml","history","ImageStreamsDetailsPage","props","tableColumnClasses","columnClass","ImageStreamsTableRow","columnID","labels","creationTimestamp","actions","ImageStreamsList","ImageStreamsTableHeader","sortField","transforms","id","Header","Row","virtualize","buildPhase","build","phase","ImageStreamsPage","ListComponent","canCreate","FileUploadContext","fileUpload","undefined","setFileUpload","extensions","FileUploadContextProvider","Provider","useValuesFileUploadContext","fileUploadExtensions","resolved","toastContext","file","setFile","fileExtensions","map","e","properties","ext","toLowerCase","f","length","requiredFileExtension","handler","addToast","content","fileName","toString","timeout","dismissible","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","DroppableFileInput","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","display","flex","flexDirection","margin","subTitle","fullWidth","children","flexLayout","extraMargin","dataTest","style","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","imageStreamLabels","getSampleRepo","sampleRepo","getSampleRef","sampleRef","getSampleContextDir","sampleContextDir","getPorts","imageStreamImage","portSpec","parts","parseInt","protocol","toUpperCase","portsFromSpec","dockerImageMetadata","Config","ExposedPorts","ContainerConfig","makePortName","prettifyName","first","prep","letter","normalizeBuilderImages","imageStreams","builderImages","recentTag","description","iconClass","iconUrl","getTagDataWithDisplayName","imageTags","selectedTag","defaultName","imageTag","getSuggestedName","imageName","RegistryType","BuilderImagesNamespace","imageRegistryType","External","Internal","getImageStreamTags","getSortedTags","getProjectResource","getImageStreamResource","NODE_SEPARATION_HORIZONTAL","DROP_SHADOW_SPACING","BUILDER_NODE_ADD_RADIUS","BUILDER_NODE_DECORATOR_RADIUS","BUILDER_NODE_ADD_PADDING","NODE_WIDTH","NODE_HEIGHT","FINALLY_NODE_PADDING","FINALLY_NODE_VERTICAL_SPACING","FINALLY_ADD_LINK_TEXT_HEIGHT","FINALLY_ADD_LINK_SIZE","WHEN_EXPRESSSION_DIAMOND_SIZE","WHEN_EXPRESSION_SPACING","DEFAULT_NODE_HEIGHT","NODE_PADDING","DEFAULT_NODE_ICON_WIDTH","DEFAULT_BADGE_WIDTH","DEFAULT_FINALLLY_GROUP_PADDING","TOOLBAR_HEIGHT","GRAPH_MIN_WIDTH","GRAPH_MAX_HEIGHT_PERCENT","NodeType","DrawDesign","PipelineLayout","AddNodeDirection","DAGRE_SHARED_PROPS","nodesep","ranksep","edgesep","ranker","rankdir","marginx","marginy","DAGRE_VIEWER_PROPS","DAGRE_VIEWER_SPACED_PROPS","DAGRE_BUILDER_PROPS","DAGRE_BUILDER_SPACED_PROPS","CustomTask","useK8sGet","opts","setData","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","options","getPipelineName","workspaces","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","placeholder","dataSelector","getPipelineOperatorVersion","versions","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","dataModelFactory","getAppLabels","applicationName","runtimeIcon","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageNamespace","imageTrigger","fieldPath","paused","getPodLabels","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","hasOwnProperty","sourceSecret","volumes","getTemplateLabels","dataModelContext","extensionContext","getExtension","current","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","constructProbeData","resourceType","ContainerCommand","HTTPGET","scheme","TCPSocket","convertResourceDataToFormData","getHealthChecksData","containerIndex","ReadinessProbe","LivenessProbe","StartupProbe","getProbesData","HealthChecksProbeType","RequestType","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","location","dir","cluster","insecure","cadata","dispatch","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","dx","dy","stdDeviation","floodColor","floodOpacity","window","navigator","userAgent","in","in2","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","getDefinedObj","objData","createPipelineResource","secretResp","resourceName","pipelineResource","fieldName","secretKey","createSecretResource","FILTER_ID","icon","circleRef","typedIconSize","typedIconRef","iconWidth","iconHeight","cx","cy","xlinkHref","topology","xmlns","viewBox","fill","role","getImageStreamTagName","ImageStreamTimelineItem","linkToTag","referenceAndSHA","dockerImageReference","simple","isTagVersionLatest","comparedTag","comparedTagPosition","orderedTagArray","orderedTag","ImageStreamTimeline","tagsArray","timeline","ComputedBuildRunStatus","ClusterBuildStrategy","ReadableClusterBuildStrategies","BUILDAH","UNKNOWN","getHealthChecksProbeConfig","probe","formTitle","formSubtitle","healthChecksDefaultValues","httpHeaders","healthChecksProbeInitialData","createGenericNode","runAfterTasks","createTaskNode","TASK_NODE","createCustomTaskNode","CUSTOM_TASK_NODE","createSpacerNode","SPACER_NODE","createTaskListNode","TASK_LIST_NODE","createInvalidTaskListNode","INVALID_TASK_LIST_NODE","createBuilderNode","BUILDER_NODE","createLoadingNode","LOADING_NODE","createBuilderFinallyNode","BUILDER_FINALLY_NODE","createPipelineTaskNode","handleParallelToParallelNodes","multipleRunBeforeMap","idx","atIndex","multiParallelToParallelList","newNodes","newRunAfterNodeMap","p2p","names","p2pData","parallelSpacerName","p2pNodeId","newRunAfters","createNode","getNodeCreator","tasksToBuilderNodes","onAddNode","onNodeSelection","getError","selectedIds","direction","getBuilderEdgesFromNodes","edgeList","getFinallyTaskHeight","allTasksLength","disableBuilder","getFinallyTaskWidth","whenExpressionSpacing","getLastRegularTasks","regularTasks","runAfters","concat","getTextWidth","font","context","document","createElement","getContext","measureText","extractDepsFromContextVariables","contextVariable","regex","deps","lastIndex","getSpacerNode","getTaskWhenStatus","Met","Unmet","getWhenStatus","getGraphDataModel","dag","addEdges","maxWidthForLevel","topologicalSort","level","vertex","depsFromContextVariables","paramValue","input","whenValue","dependancies","dependancyNames","depObj","vertices","minLevelDep","nd","badgePadding","isTaskSkipped","taskKind","whenStatus","finallyTaskList","maxFinallyNodeName","finallyNodes","fTask","FINALLY_NODE","finallyGroup","FINALLY_GROUP","spacerNodes","EDGE","graph","layout","DAGRE_VIEWER","scaleExtent","taskHasWhenExpression","nodesHasWhenExpression","getLayoutData","DAGRE_BUILDER","DAGRE_VIEWER_SPACED","DAGRE_BUILDER_SPACED","getWhenExpressionDiamondState","isPipelineRun","isFinallyTask","diamondColor","tooltipContent","getTooltipContent","statusReason","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","indexOf","submitStartPipeline","processWorkspaces","pipelineRunResource","ImageStreamContext","createProject","projectData","createOrUpdateImageStream","formData","imageStreamData","appResources","generatedImageStreamName","userLabels","NAME_LABEL","imageStreamList","imgstr","imageStreamFilterData","originalImageStream","defaultLabels","defaultAnnotations","imgStreamName","newImageStream","createWebhookSecret","createOrUpdateBuildConfig","originalBuildConfig","imageEnv","env","buildStrategy","buildStrategyData","desiredContextDir","imageEnvKeys","customEnvs","buildEnv","dockerStrategy","sourceStrategy","webhookTriggerData","excludedGitTypesForTriggers","buildConfigName","newBuildConfig","to","uri","imageChange","createOrUpdateDeployment","originalDeployment","ports","podLabels","templateLabels","newDeployment","selector","createOrUpdateResources","createNewProject","create","canCreateRoute","webhookTrigger","option","originalRepository","responses","Devfile","devfileProjectType","devfileResourceObjects","imageStreamResponse","buildConfigResponse","buildResource","webhookSecretResponse","deploymentResponse","deployResource","serviceModelResponse","service","routeResponse","devfileResources","createDevfileResources","pacRepository","pipelineResources","pipelineData","managedPipeline","triggerResources","detectedType","pipelineServiceAccount","managePipelineResources","originalShipwrightBuild","clusterBuildStrategy","imageStreamRepository","dockerImageRepository","shipwrightParamsObj","Docker","Source","shipwrightBuildName","newShipwrightBuild","cloneSecret","paramValues","shipwrightBuild","createOrUpdateShipwrightBuild","imageStreamURL","originalAnnotations","editAppResource","triggerAnnotations","knDeploymentResource","domainMappingResources","originalDeploymentConfig","newDeploymentConfig","imageChangeParams","automatic","containerNames","deploymentConfig","createOrUpdateDeploymentConfig","originalService","originalRoute","filterDeployedResources","handleRedirect","perspective","perspectiveExtensions","searchParamOverrides","perspectiveData","redirectURL","importRedirectURL","searchParams","urlObj","URL","search","URLSearchParams","fromEntries","addSearchParamsToRelativeURL","isRouteAdvOptionsUsed","routeData","ksvcRouteData","tlsKey","isScalingAdvOptions","scalingData","ksvcData","ksvcScalingData","scKey","defaultConcurrencytarget","defaultConcurrencyutilization","autoscaleData","asKey","defaultAutoscalewindow","isResourceLimitAdvOptions","resLimits","isLimitUsed","resLimitObj","limitKey","defaultLimitUnit","defaultRequestUnit","getTelemetryImport","devfileJson","selStrategy","import","selectedStrategy","useRecommended","recommended","recommendedStrategy","recommendedBuilderImage","devFileLanguage","projectType","devFileProjectType","targetPortChanged","useRunCommand","NPM_RUN","useAdvancedOptionsGit","useAdvancedOptionsBuild","useAdvancedOptionsDeployment","useAdvancedOptionsRoute","useAdvancedOptionsHealthChecks","useAdvancedOptionsScaling","useAdvancedOptionsResourceLimits","useAdvancedOptionsLabels","getPipelineParams","gitDir","isDockerPipeline","createPipelineForImportFlow","createPipelineRunForImportFlow","isServerlessFunctionPipeline","pipelineInitialValues","VolumeClaimTemplate","secretOpen","updatePipelineForImportFlow","updatedPipeline","pipelineRuntimeOrVersionChanged","resourceVersion","getKnativeServiceDepResource","imageStreamUrl","imageStreamTag","originalKnativeService","defaultUnknownPort","imagePolicy","formType","contTargetPort","imgPullPolicy","Always","IfNotPresent","cpuRequest","cpuRequestUnit","cpuLimit","cpuLimitUnit","memoryRequest","memoryRequestUnit","memoryLimit","memoryLimitUnit","defaultLabel","jArgsIndex","findIndex","javaArgs","newKnativeDeployResource","jarFileName","containerConcurrency","imagePullPolicy","securityContext","allowPrivilegeEscalation","capabilities","drop","runAsNonRoot","seccompProfile","knativeServiceUpdated","formDomainMappingStruct","knativeSvcResource","curDomainMapping","svcName","getDomainMappingResources","selectedDomainMapping","allDomainMappingList","dmDeleteList","ksvcName","selDomainMappingNames","dmRes","dmSvc","dmDel","action","Delete","dmCreateUpdateList","curDomain","domainMappingResourceData","Update","Create","getDomainMappingRequests","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","isGitImportSource","gitImport","isContainerImportSource","containerImport","updateHealthChecksProbe","updatedResource","HealthCheckContext","viewOnly","useViewOnlyAccess","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","setTimeout","servicePort","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","isDeployImageFormData","createService","imagePorts","isi","isiPorts","existingRouteTargetPort","targetPort","newService","createRoute","routeLabels","newRoute","wildcardPolicy","createSampleLink","sample","set","getGitImportSample","sampleName","getContainerImportSample","hasSampleQueryParameter","groupConsoleSamplesByName","grouped","consoleSample","getBestMatch","preferredLanguage","preferredCountry","sameLanguageWithoutCountry","sameLanguageWithAnyCountry","fallbackLanguageSameCountry","fallbackLanguageNoCountry","fallbackLanguageAnyCountry","sampleLanguage","sampleCountry","useSamples","groupVersionKind","getSample","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","eventListenerName","referenceName","eventlistener","weight","SvgResourceIcon","leftJustified","iconRef","kindAbbr","kindStr","kindColor","getKindStringAndAbbreviation","textSize","textRef","paddingX","paddingY","rx","ry","textAnchor","ApplicationFlowType","getFlowTypePageTitle","flowType","Dockerfile","Container","JarUpload","BuildSourceType","getBuildSourceType","getResourcesType","getFlowType","Binary","getValidationSchema","checkIfTriggerExists","trigger","getKsvcRouteData","getRouteLabels","allLabels","allRouteLabels","getRouteData","insecureEdgeTerminationPolicy","caCertificate","certificate","destinationCACertificate","getBuildData","getBuildOption","buildStrategyType","shipwrightClusterBuildStrategyType","getServerlessData","serverlessData","autoscalewindowAnnotation","getDeploymentData","deploymentData","getUserLabels","getIconInitialValues","runtimeLabel","getGitAndDockerfileInitialValues","currentImage","isUrlValidating","getGitDataFromPipeline","getGitDataFromShipwrightBuild","getGitDataFromBuildConfig","tagObj","isRecommending","couldNotRecommend","deployImageInitialValues","searchTerm","registry","allowInsecureRegistry","isSearchingForImage","getExternalImageValues","appResource","getInitialValues","appName","editAppResourceData","shipwrightBuildData","commonValues","appGroupName","pacHasError","showEditImportStrategy","getCommonInitialValues","gitDockerValues","fileUploadValues","iconValues","externalImageValues","internalImageValues","isAllowInsecureRegistry","importPolicy","getExternalImageInitialValues","getInternalImageInitialValues","getFileUploadValues","getAllNotStartedPipelines","sessionStorage","getItem","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setItem","setPipelineNotStarted","CreateSecretModal","close","secretModalLauncher","PipelineVisualizationTask","pipelineRunName","disableTooltip","isSkipped","taskComponent","TaskComponent","taskSpec","disableVisualizationTooltip","stepStatusList","steps","showStatusState","visualName","nameRef","pillRef","enableLogLink","hasWhenExpression","hasRunAfter","taskStatusColor","hover","hoverRef","truncatedVisualName","truncateEnd","renderVisualName","taskPill","triggerRef","disableSpin","SvgTaskStatus","enableFlip","isSpecOverview","taskName","taskNode","appendLine","enableTooltip","leftOffset","stepWidth","segments","seg","leftRight","p1","p2","topDown","bottomUp","moveTo","lineTo","quadTo","corner","CURVE_SIZE","curve","fromPoint","cornerPoint","toPoint","rightAndDown","downAndRight","rightAndUp","upAndRight","straightPath","finish","integralShapePath","firstCurve","secondCurve","cornerX","firstCorner","secondCorner","errorStr","fileNameRegex","fileUploadValidationSchema","getAppName","shift","noProjectsAvailable","subPath","initialApplication","ConsoleSampleModel","propagationPolicy","deployValidationSchema","builderComponentsFactory","dagreViewerComponentFactory","layoutFactory","linkDistance","nodeDistance","groupDistance","collideDistance","simulationSpeed","chargeStrength","allowDrag","layoutOnDrag","StatusIcon","ColoredStatusIcon","others","applicationsAvailable","setApplicationsAvailable","availableApplications","projectsAvailable","touched","nameField","setFieldValue","setFieldTouched","applicationExists","setApplicationExists","applicationNameInputRef","fieldId","isValid","actionItems","actionTitle","actionKey","inputHelpText","focus","ariaLabel","menuClassName","autoSelect","onLoad","applicationList","noApplicationsAvailable","validated","trimmedApplicationName","TerminatedReasons","getMatchingStep","statusStep","getMatchingStepDuration","matchingStep","startedAt","finishedAt","running","createStepStatus","stepRunStatus","TooltipColoredStatusIcon","sharedProps","size","PipelineVisualizationStepList","hideHeader","truncatedName","tooltip","tooltipPosition","unselectedText","onRemoveTask","onNewTask","onTaskSearch","unselectedTaskText","truncatedTaskText","renderText","stopPropagation","removeCallback","element","formContextField","fieldPrefix","controllerUrl","setControllerUrl","setWebhookSecret","ctlUrl","labelIcon","activeChildren","rel","autocompleteFilter","showBadge","isReadOnly","hoverTip","clickTip","_event","toggleText","getPermssionSectionHeading","component","small","usePacInfo","Footer","defaults","components","List","visibleItems","setVisibleItems","onVisibleItemChange","defaultSample","showSample","importType","autoFocus","inputRef","dirty","isSubmitting","formikValues","formikTouched","errors","formikErrors","formikSetFieldValue","formikSetFieldTouched","isKnativeServingAvailable","canCreateKnativeService","canCreateKnativeServiceLoading","shouldValidate","formReloadCount","defaultSampleURL","defaultSampleDir","defaultSampleRef","defaultSampleTagObj","imageStreamTagSampleRepo","nameTouched","applicationNameTouched","imageSelectorTouched","gitDirTouched","gitTypeTouched","gitUrlError","setValidated","repoStatus","setRepoStatus","handleBuilderImageRecommendation","detectedBuildTypes","recommendedBuildType","handleDevfileStrategyDetection","devfileSourceUrl","devfileContents","handleGitUrlChange","submitError","isUnsureDetectedGitType","gitRepoName","importStrategyData","importStrategies","success","ServerlessFunction","debouncedHandleGitUrlChange","fillImageStreamTagSample","resetFields","isInContext","sampleRepository","helpTextInvalid","trimmedURL","isInline","initialState","loading","accessLoading","selectedImageStream","ImageStreamReducer","setLoading","setAccessLoading","setSelectedImageStream","reloadCount","hasImageStreams","setHasImageStreams","fromImageStreamTag","imageStreamTagList","isNamespaceSelected","isStreamsAvailable","isTagsAvailable","isImageStreamSelected","showCommandLineAlert","Openshift","helperTextInvalid","expansion","getRequiredFileUploadExtension","ex","supportedFileTypes","lastIndexOf","getFileType","isFileSupported","PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY","usePreferredRoutingOptions","preferredRoutingOptions","setPreferredRoutingOptions","preferredRoutingOptionsLoaded","tlsTermination","insecureTraffic","probeType","temporaryProbeData","setTemporaryProbeData","showProbe","handleDeleteProbe","handleReset","handleSubmit","handleAddProbe","link","onClose","plain","healthCheckProbeAdded","noHealthCheckProbe","addHealthCheckProbe","renderProbe","RequestTypeOptions","getRequestTypeForm","maxWidth","afterInput","renderPortField","HTTPRequestTypeForm","initialNameValuePairs","nameValue","setNameValue","portFieldName","handleNameValuePairs","nameValuePairs","updatedNameValuePairs","valueFrom","valueString","addString","readOnly","allowSorting","updateParentData","TCPRequestTypeForm","CommandRequestTypeForm","commands","addLabel","disableDeleteRow","hideTitle","unitName","unitOptions","setOutputAsIntegerFlag","handleGitRefChange","handleGitDirChange","textExpanded","textCollapsed","handleSave","resourceFilter","handleGitTypeChange","typeValue","spaceItems","isSelected","selectedBuilderImage","selectedImageTag","showImageInfo","setFieldError","imageDisplayName","tagItems","isServerlessFunctionStrategySelected","k8sGet","imgCollection","initialValues","initialIsi","onDropdownChange","img","imgstreams","imageStreamAvailable","collectImageStreams","appendItems","openshift","unmounted","isiValues","initialImageStream","initialRoute","initialImageStreamImage","searchImageTag","imageStreamImport","imgStreamLabels","componentFactory","showControlBar","noScrollbar","showHeader","knativeFuncLoaded","funcLoaded","deploymentConfigObj","secureRoute","terminationOptions","PASSTHROUGH","REENCRYPT","insecureTrafficOptions","None","Redirect","Allow","formLabel","useShipwrightBuilds","useClusterBuildStrategy","s2i","buildah","s2iLoaded","s2iErr","buildahLoaded","buildahErr","prevData","isPreferredStrategyAvailable","importStrategy","addNewFinallyListNode","finallyTasks","finallyListTasks","finallyLoadingTasks","finallyInvalidListTasks","nodeCenter","leftPadding","verticalHeight","finallyTaskLinkX","IntegralShape","taskIndex","ft","onTaskSelection","fld","ivl","convertList","flt","cursor","nodeRef","diamondHeight","sin","cos","diamondNode","stroke","x1","y1","x2","y2","DAG","Map","fn","visited","dependancy","len","has","visit","addVertex","hasOutgoing","fromNode","toNode","reverse","before","after","addEdge","orderedNodes","stage","trashRef","showAdd","AFTER","BEFORE","PARALLEL","CustomTaskComponent","customTask","customTaskName","customRun","resourcesData","strokeWidth","onContextMenu","contextMenuOpen","rest","detailsLevel","computedTask","stepList","skippedTask","succeededStepsCount","badge","passedData","newData","hasTaskIcon","taskIconClass","taskIcon","whenDecorator","toolTip","plrName","getLabel","showContextMenu","scaleNode","high","hideDetailsAtMedium","truncateLength","classes","startPoint","getStartPoint","endPoint","getEndPoint","sourceNode","vis","setVis","maxSize","setMaxSize","setWidth","storedGraphModel","onLayoutUpdate","nodeBounds","w1","w2","maxHeight","h1","h2","maxObject","nb","maxX","maxY","horizontalMargin","verticalMargin","finallyTaskHeight","regularTaskHeight","visualization","registerLayoutFactory","registerComponentFactory","fromModel","addEventListener","getNodes","onResize","contentRect","measureRef","innerHeight","controller","controlBar","controlButtons","zoomInCallback","scaleBy","zoomOutCallback","fitToScreenCallback","fit","resetViewCallback","reset","legend","WEBHOOK","appLink","permission","defaultPort","domainMappingLoaded","domainMappingLoadErr","ksvc","mappedDomain","domainRes","filterDm","newDomainMap","domainsInUse","placeholderText","isCreatable","marginBottom","knativeService","portOptions","placeholderPort","toggleOnSelection","AutoscaleWindowUnits","m","h","useBuilderImageEnvironments","environmentExtensions","environments","flat","flags","existingPipeline","hasCreatePipelineAccess","canListPipelines","canCreatePipelines","usePipelineAccessReview","formik","onChanged","getAlertText","isDockerStrategy","MISSING_DOCKERFILE_LABEL_TEXT","noTemplateForRuntime","setNoTemplateForRuntime","isPacRepo","setIsPacRepo","isPipelineTypeChanged","setIsPipelineTypeChanged","isExpanded","setIsExpanded","pipelineTemplates","setPipelineTemplates","pipelineStorageRef","isRepositoryEnabled","isPipelineAttached","isServerlessFunctionStrategy","getPipelineNames","pl","handlePipelineTypeChange","disallowedPacGitTypes","ignore","builderPipelineLabel","dockerPipelineLabel","funcPipelineLabel","fetchedPipelines","imagePipelines","candidatePipelines","pipelineTemplate","pipelineTemplateItems","builderImageTitle","onChangePipelineType","onToggle","setGithubAppAvailable","translatedResourceName","inlineCompact","useSafeK8s","mounted","AbortController","abort","signal","defaultValue","iconSize","annotationTag","isiName","referencePolicy","mergedImageStream","createdImageStream","generation","getMetadata","volumeNumber","volumeName","mountPath","ensurePortExists","suppliedPorts","createOrUpdateDeployImageResources","rawFormData","internalImageStreamName","internalImageStreamNamespace","imgName","imgNamespace","templateAnnotations","imageRef","originalImageStreamName","newImageName","imageStreamRepo","setRegistry","newImageSecret","setNewImageSecret","alertVisible","shouldHideAlert","handleSearch","searchTermImage","importImage","images","componentName","useQueryParametersIfDefined","debouncedHandleSearch","actionClose","Icon","src","alt","iconLabelAutocompleteFilter","autocompletePlaceholder","handleBuilderImageSelection","s2iStrategy","loadingImageStream","BuildSection","selectedImage","envsLoaded","strategyType","autoSelectPipelines","checkTektonFolder","useUploadJarFormToast","toast","buildsResource","createdBuildConfig","ownBuilds","buildName","info","dismiss","callback","createOrUpdateJarFile","fileValue","appResImageStream","appResBuildConfig","appResService","appResRoute","binary","filename","onBeforeUnload","returnValue","removeEventListener","instantiateBinaryBuild","PipelineChangeAlert","alertMessage","validateForm","showPipelineWarning","setShowPipelineWarning","changedPipelineWarning","itemList","loadingItems","onSelect","handleDockerfileChange","isDockerFilePresent","dockerfileStrategy","dockerfileContent","getContainerPort","dockerfileHasError","appGroupSelectedKey","updatedJarFile","filenamePlaceholder","browseButtonText","clearButtonText","onFileInputChange","hideDefaultPreview","dropzoneProps","accept","onClearClick","BuildOption","isBuildV1Enabled","isShipwrightBuildsEnabled","strategyLoaded","selectInputOptions","getLabelFromValue","BuildStrategySelector","clusterBuildStrategyOptions","editAppResourceKind","watchedEditResource","editResData","isEditResDataLoaded","editResDataLoadError","nameLabel","isResourcesLoaded","light","appLabel","filterAssociatedResource","getAssociatedResource","resourcesObj","associatedRes","getAssociatedImageStream","uploadJarFormToastCallback","buildSourceType","imageStreamsData","setBuilderImages","allBuilderImages","imageNs","isNewFileUploaded","updateResources","setStatus","onReset","goBack","formikProps","enableReinitialize","submitLabel","disableSubmit","resetLabel","sticky"],"mappings":"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","file":"dev-console/code-refs/editApplication-chunk-9ee6b961bc4a78b5cfa6.min.js","sourcesContent":["export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { DOC_URL_PODMAN } from './utils';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline, getImageStreamTagName } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={from.name}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">{t('public~pushed image')}</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~Unable to resolve')}\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>{t('public~Not synced yet')}</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>{t('public~Unresolved')}</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~There is no image associated with this tag')}\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const { t } = useTranslation();\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>{t('public~Image registry commands')}</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            {t(\n              'public~Create a new ImageStreamTag by pushing an image to this ImageStream with the desired tag.',\n            )}\n          </p>\n          <br />\n          <p>{t('public~Authenticate to the internal registry')}</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>{t('public~Push an image to this ImageStream')}</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>{t('public~Pull an image from this ImageStream')}</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            <Trans t={t} ns=\"public\">\n              Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong>{' '}\n              commands.{' '}\n            </Trans>\n            <ExternalLink href={DOC_URL_PODMAN} text={t('public~Learn more.')} />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        {t('public~Do you need to work with this ImageStream outside of the web console?')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const { t } = useTranslation();\n\n  const getImportErrors = (): string[] => {\n    return _.transform(imageStream.status.tags, (acc, tag: any) => {\n      const importErrorCondition = _.find(\n        tag.conditions,\n        (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n      );\n      importErrorCondition &&\n        acc.push(\n          t('public~Unable to sync image for tag {{tag}}. {{message}}', {\n            tag: `${imageStream.metadata.name}:${tag.tag}`,\n            message: importErrorCondition.message,\n          }),\n        );\n    });\n  };\n\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text={t('public~ImageStream details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={imageStream}>\n              {imageRepository && <dt>{t('public~Image repository')}</dt>}\n              {imageRepository && <dd>{imageRepository}</dd>}\n              {publicImageRepository && <dt>{t('public~Public image repository')}</dt>}\n              {publicImageRepository && <dd>{publicImageRepository}</dd>}\n              <dt>{t('public~Image count')}</dt>\n              <dd>{imageCount ? imageCount : 0}</dd>\n            </ResourceSummary>\n            <ExampleDockerCommandPopover imageStream={imageStream} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Tags')} />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">{t('public~No tags')}</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">{t('public~Name')}</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">{t('public~From')}</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">{t('public~Identifier')}</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">{t('public~Last updated')}</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  const ImageStreamsTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n  ImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ImageStreams')}\n      Header={ImageStreamsTableHeader}\n      Row={ImageStreamsTableRow}\n      virtualize\n    />\n  );\n};\n\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {...props}\n      title={t('public~ImageStreams')}\n      kind={ImageStreamsReference}\n      ListComponent={ImageStreamsList}\n      canCreate={true}\n    />\n  );\n};\n\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n","import * as React from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { FileUpload, isFileUpload, useResolvedExtensions } from '@console/dynamic-plugin-sdk';\nimport { useToast } from '@console/shared/src/components/toast';\nimport { useActiveNamespace } from '@console/shared/src/hooks/useActiveNamespace';\nimport { getRequiredFileUploadExtension } from './file-upload-utils';\n\nexport type FileUploadContextType = {\n  extensions: string[];\n  fileUpload: File;\n  setFileUpload: (file: File) => void;\n};\n\nexport const FileUploadContext = React.createContext<FileUploadContextType>({\n  fileUpload: undefined,\n  setFileUpload: () => {},\n  extensions: [],\n});\n\nexport const FileUploadContextProvider = FileUploadContext.Provider;\n\nexport const useValuesFileUploadContext = (): FileUploadContextType => {\n  const { t } = useTranslation();\n  const [fileUploadExtensions, resolved] = useResolvedExtensions<FileUpload>(isFileUpload);\n  const toastContext = useToast();\n  const [namespace] = useActiveNamespace();\n  const [file, setFile] = React.useState<File>(undefined);\n  const fileExtensions = React.useMemo(\n    () =>\n      resolved\n        ? _.flatten(fileUploadExtensions.map((e) => e.properties.fileExtensions)).map((ext) =>\n            ext.toLowerCase(),\n          )\n        : [],\n    [fileUploadExtensions, resolved],\n  );\n\n  const setFileUpload = React.useCallback(\n    (f: File): void => {\n      if (!f) {\n        setFile(undefined);\n      } else if (fileExtensions.length > 0) {\n        const requiredFileExtension = getRequiredFileUploadExtension(fileUploadExtensions, f.name);\n        if (requiredFileExtension) {\n          setFile(f);\n          requiredFileExtension.properties.handler(f, namespace);\n        } else {\n          toastContext.addToast({\n            variant: AlertVariant.warning,\n            title: t('console-app~Incompatible file type'),\n            content: t(\n              'console-app~{{fileName}} cannot be uploaded. Only {{fileExtensions}} files are supported currently. Try another file.',\n              {\n                fileName: f.name,\n                fileExtensions: fileExtensions.toString(),\n              },\n            ),\n            timeout: true,\n            dismissible: true,\n          });\n        }\n      }\n    },\n    [setFile, fileExtensions, t, namespace, toastContext, fileUploadExtensions],\n  );\n\n  return {\n    fileUpload: file,\n    setFileUpload,\n    extensions: fileExtensions,\n  };\n};\n","export { default as EditApplication } from './EditApplicationPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as semver from 'semver';\nimport {\n  getImageStreamIcon,\n  getImageForIconClass,\n} from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  isBuilder,\n  getMostRecentBuilderTag,\n  getBuilderTagsSortedByVersion,\n} from '@console/internal/components/image-stream';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { ProjectModel, ImageStreamModel } from '@console/internal/models';\nimport { ContainerPort, K8sResourceKind, K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport interface ImageTag {\n  name: string;\n  annotations: {\n    [key: string]: string;\n  };\n  generation: number;\n  [key: string]: any;\n}\nexport interface BuilderImage {\n  obj: K8sResourceKind;\n  name: string;\n  displayName: string;\n  description: string;\n  title: string;\n  iconUrl: string;\n  tags: ImageTag[];\n  recentTag: ImageTag;\n  imageStreamNamespace: string;\n}\n\nexport interface NormalizedBuilderImages {\n  [builderImageName: string]: BuilderImage;\n}\n\nexport const imageStreamLabels = ['app.kubernetes.io/name', 'app.openshift.io/runtime'];\n\nexport const getSampleRepo = (tag) => tag?.annotations?.sampleRepo ?? '';\nexport const getSampleRef = (tag) => tag?.annotations?.sampleRef ?? '';\nexport const getSampleContextDir = (tag) => tag?.annotations?.sampleContextDir ?? '';\n\n// Transform image ports to k8s structure.\n// `{ '3306/tcp': {} }` -> `{ containerPort: 3306, protocol: 'TCP' }`\nconst portsFromSpec = (portSpec: object): ContainerPort[] => {\n  return _.reduce(\n    portSpec,\n    (result: ContainerPort[], value, key) => {\n      const parts = key.split('/');\n      if (parts.length === 1) {\n        parts.push('tcp');\n      }\n\n      const containerPort = parseInt(parts[0], 10);\n      if (_.isFinite(containerPort)) {\n        result.push({\n          containerPort,\n          protocol: parts[1].toUpperCase(),\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unrecognized image port format', key);\n      }\n\n      return result;\n    },\n    [],\n  );\n};\n\nexport const getPorts = (imageStreamImage): ContainerPort[] => {\n  const portSpec =\n    imageStreamImage?.image?.dockerImageMetadata?.Config?.ExposedPorts ||\n    imageStreamImage?.image?.dockerImageMetadata?.ContainerConfig?.ExposedPorts;\n  return portsFromSpec(portSpec);\n};\n\n// Use the same naming convention as the CLI.\nexport const makePortName = (port: ContainerPort): string =>\n  `${port.containerPort}-${port.protocol}`.toLowerCase();\n\nexport const prettifyName = (name: string) => {\n  return name.replace(/(-|^)([^-]?)/g, (first, prep, letter) => {\n    return (prep && ' ') + letter.toUpperCase();\n  });\n};\n\nexport const normalizeBuilderImages = (\n  imageStreams: K8sResourceCommon | K8sResourceCommon[],\n): NormalizedBuilderImages => {\n  const data = Array.isArray(imageStreams) ? imageStreams : [imageStreams];\n  const builderImageStreams = data.filter((imageStream) => isBuilder(imageStream));\n\n  return builderImageStreams.reduce((builderImages: NormalizedBuilderImages, imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    const recentTag = getMostRecentBuilderTag(imageStream);\n    const { name } = imageStream.metadata;\n    const displayName = imageStream?.metadata?.annotations?.['openshift.io/display-name'];\n    const description = recentTag?.annotations?.description;\n    const imageStreamNamespace = imageStream.metadata.namespace;\n    const title = displayName && displayName.length < 14 ? displayName : prettifyName(name);\n    const iconClass = getImageStreamIcon(recentTag);\n    const iconUrl = getImageForIconClass(iconClass);\n\n    builderImages[name] = {\n      obj: imageStream,\n      name,\n      displayName,\n      description,\n      title,\n      iconUrl,\n      tags,\n      recentTag,\n      imageStreamNamespace,\n    };\n    return builderImages;\n  }, {});\n};\n\nexport const getTagDataWithDisplayName = (\n  imageTags: ImageTag[],\n  selectedTag: string,\n  defaultName: string,\n): [ImageTag, string] => {\n  const imageTag = _.find(imageTags, { name: selectedTag });\n  const displayName = imageTag?.annotations?.['openshift.io/display-name'] ?? defaultName;\n\n  return [imageTag, displayName];\n};\n\nexport const getSuggestedName = (name: string): string | undefined => {\n  if (!name) {\n    return undefined;\n  }\n  const imageName: string = _.last(name.split('/'));\n  return _.first(imageName.split(/[^a-z0-9-]/));\n};\n\nexport enum RegistryType {\n  External = 'external',\n  Internal = 'internal',\n}\nexport enum BuilderImagesNamespace {\n  Openshift = 'openshift',\n}\nexport const imageRegistryType = (t: TFunction) => {\n  return {\n    External: {\n      value: RegistryType.External,\n      label: t('devconsole~Image name from external registry'),\n    },\n    Internal: {\n      value: RegistryType.Internal,\n      label: t('devconsole~Image stream tag from internal registry'),\n    },\n  };\n};\n\nexport const getSortedTags = (imageStream: K8sResourceKind) => {\n  return _.isArray(imageStream.status.tags) && imageStream.status.tags.length\n    ? imageStream.status.tags.sort(({ tag: a }, { tag: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n          return a.localeCompare(b);\n        }\n        if (!v1) {\n          return 1;\n        }\n        if (!v2) {\n          return -1;\n        }\n        return semver.rcompare(v1, v2);\n      })\n    : [];\n};\nexport const getImageStreamTags = (imageStream: K8sResourceKind) => {\n  const sortedTags = imageStream && !_.isEmpty(imageStream) ? getSortedTags(imageStream) : [];\n  return sortedTags.reduce((tags, { tag }) => {\n    tags[tag] = tag;\n    return tags;\n  }, {});\n};\n\nexport const getProjectResource = (): FirehoseResource[] => {\n  return [\n    {\n      isList: true,\n      kind: ProjectModel.kind,\n      prop: ProjectModel.id,\n    },\n  ];\n};\n\nexport const getImageStreamResource = (namespace: string): FirehoseResource[] => {\n  const resource = [];\n  if (namespace) {\n    resource.push({\n      isList: true,\n      kind: ImageStreamModel.kind,\n      prop: ImageStreamModel.id,\n      namespace,\n    });\n  }\n  return resource;\n};\n","import * as dagre from 'dagre';\n\nexport const NODE_SEPARATION_HORIZONTAL = 25;\nexport const NODE_SEPARATION_VERTICAL = 20;\nexport const DROP_SHADOW_SPACING = 5;\nexport const BUILDER_NODE_ADD_RADIUS = 9;\nexport const BUILDER_NODE_DECORATOR_RADIUS = 9;\nexport const BUILDER_NODE_ADD_PADDING = 4;\n\nexport const NODE_WIDTH = 120;\nexport const NODE_HEIGHT = 30;\nexport const FINALLY_NODE_PADDING = 30;\nexport const FINALLY_NODE_VERTICAL_SPACING = 20;\n\nexport const FINALLY_ADD_LINK_TEXT_HEIGHT = 10;\nexport const FINALLY_ADD_LINK_SIZE = 15;\nexport const WHEN_EXPRESSSION_DIAMOND_SIZE = 10;\nexport const WHEN_EXPRESSION_SPACING = 25;\n\nexport const DEFAULT_NODE_HEIGHT = 32;\nexport const NODE_PADDING = 12;\nexport const DEFAULT_NODE_ICON_WIDTH = 30;\nexport const DEFAULT_BADGE_WIDTH = 40;\nexport const DEFAULT_FINALLLY_GROUP_PADDING = 35;\nexport const TOOLBAR_HEIGHT = 40;\nexport const GRAPH_MIN_WIDTH = 300;\nexport const GRAPH_MAX_HEIGHT_PERCENT = 45;\n\nexport enum NodeType {\n  TASK_NODE = 'task',\n  CUSTOM_TASK_NODE = 'custom-task',\n  SPACER_NODE = 'spacer',\n  LOADING_NODE = 'loading',\n  TASK_LIST_NODE = 'task-list',\n  BUILDER_NODE = 'builder',\n  INVALID_TASK_LIST_NODE = 'invalid-task-list',\n  FINALLY_NODE = 'finally-node',\n  BUILDER_FINALLY_NODE = 'builder-finally-node',\n  FINALLY_GROUP = 'finally-group',\n  EDGE = 'edge',\n}\nexport enum DrawDesign {\n  INTEGRAL_SHAPE = 'integral-shape',\n  STRAIGHT = 'line',\n}\nexport enum PipelineLayout {\n  DAGRE_BUILDER = 'dagre-builder',\n  DAGRE_BUILDER_SPACED = 'dagre-builder-spaced',\n  DAGRE_VIEWER = 'dagre-viewer',\n  DAGRE_VIEWER_SPACED = 'dagre-viewer-spaced',\n}\n\nexport enum AddNodeDirection {\n  /**\n   * Rules today:\n   *  - the `relatedTask` is pointing at ONLY us\n   *  - we inherit all that `relatedTask` is pointing at\n   */\n  BEFORE = 'in-run-after',\n\n  /**\n   * Rules today:\n   *  - the `relatedTask` must be our ONLY runAfter\n   *  - we are added to all that is pointing at `relatedTask`\n   */\n  AFTER = 'has-run-after',\n\n  /**\n   * Rules today:\n   *  - we inherit all that `relatedTask` is pointing at\n   *  - we are added to all that is pointing at `relatedTask`\n   */\n  PARALLEL = 'shared-parallel',\n}\n\nconst DAGRE_SHARED_PROPS: dagre.GraphLabel = {\n  nodesep: NODE_SEPARATION_VERTICAL,\n  ranksep: NODE_SEPARATION_HORIZONTAL,\n  edgesep: 50,\n  ranker: 'longest-path',\n  rankdir: 'LR',\n  marginx: 20,\n  marginy: 20,\n};\nexport const DAGRE_VIEWER_PROPS: dagre.GraphLabel = {\n  ...DAGRE_SHARED_PROPS,\n};\nexport const DAGRE_VIEWER_SPACED_PROPS: dagre.GraphLabel = {\n  ...DAGRE_VIEWER_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + WHEN_EXPRESSION_SPACING,\n};\nexport const DAGRE_BUILDER_PROPS: dagre.GraphLabel = {\n  ...DAGRE_SHARED_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + BUILDER_NODE_ADD_RADIUS * 2,\n  nodesep: NODE_SEPARATION_VERTICAL + BUILDER_NODE_ADD_RADIUS,\n  marginx: DAGRE_SHARED_PROPS.marginx + BUILDER_NODE_ADD_RADIUS * 2,\n  marginy: DAGRE_SHARED_PROPS.marginy + BUILDER_NODE_ADD_RADIUS * 2,\n};\n\nexport const DAGRE_BUILDER_SPACED_PROPS: dagre.GraphLabel = {\n  ...DAGRE_BUILDER_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + WHEN_EXPRESSION_SPACING + BUILDER_NODE_ADD_RADIUS * 2,\n};\n\nexport enum CustomTask {\n  CUSTOM_TASK = 'CustomTask',\n}\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Resources, HealthChecksFormData } from '../import/import-types';\nimport { healthChecksDefaultValues } from './health-checks-probe-utils';\nimport {\n  HealthCheckProbeData,\n  RequestType,\n  HealthChecksProbeType,\n  HealthCheckFormProbeData,\n} from './health-checks-types';\n\nexport const constructProbeData = (\n  data: HealthCheckFormProbeData,\n  resourceType?: Resources,\n): HealthCheckProbeData => {\n  const probeData = {\n    ...(data.failureThreshold && { failureThreshold: _.toInteger(data.failureThreshold) }),\n    ...(data.successThreshold && { successThreshold: _.toInteger(data.successThreshold) }),\n    ...(data.requestType === RequestType.ContainerCommand && {\n      exec: data.exec,\n    }),\n    ...(data.requestType === RequestType.HTTPGET && {\n      httpGet: {\n        ...data[data.requestType],\n        scheme: data[data.requestType]?.scheme ? data[data.requestType].scheme[0] : 'HTTP',\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.httpGet.port),\n      },\n    }),\n    ...(data.requestType === RequestType.TCPSocket && {\n      tcpSocket: {\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.tcpSocket.port),\n      },\n    }),\n    ...(data.initialDelaySeconds && {\n      initialDelaySeconds: _.toInteger(data.initialDelaySeconds),\n    }),\n    ...(data.periodSeconds && { periodSeconds: _.toInteger(data.periodSeconds) }),\n    ...(data.timeoutSeconds && { timeoutSeconds: _.toInteger(data.timeoutSeconds) }),\n  };\n  return probeData;\n};\n\nexport const getRequestType = (data: HealthCheckProbeData) => {\n  if (_.has(data, RequestType.HTTPGET)) return RequestType.HTTPGET;\n  if (_.has(data, RequestType.TCPSocket)) return RequestType.TCPSocket;\n  if (_.has(data, 'exec.command')) return RequestType.ContainerCommand;\n  return '';\n};\n\nexport const convertResourceDataToFormData = (\n  resourceData: HealthCheckProbeData,\n): HealthCheckFormProbeData => {\n  return {\n    ...resourceData,\n    requestType: getRequestType(resourceData),\n    failureThreshold: resourceData.failureThreshold?.toString() || '',\n    successThreshold: resourceData.successThreshold?.toString() || '',\n    initialDelaySeconds: resourceData.initialDelaySeconds?.toString() || '',\n    periodSeconds: resourceData.periodSeconds?.toString() || '',\n    timeoutSeconds: resourceData.timeoutSeconds?.toString() || '',\n    ...(resourceData.httpGet && {\n      httpGet: {\n        ...resourceData.httpGet,\n        port: resourceData.httpGet.port?.toString() || '',\n        scheme: resourceData.httpGet.scheme === 'HTTP' ? undefined : ['HTTPS'],\n      },\n    }),\n    ...(resourceData.tcpSocket && {\n      tcpSocket: { port: resourceData.tcpSocket.port?.toString() || '' },\n    }),\n  };\n};\n\nexport const getHealthChecksData = (\n  resource: K8sResourceKind,\n  containerIndex: number = 0,\n): HealthChecksFormData => {\n  const containers = resource?.spec?.template?.spec?.containers ?? [];\n  const readinessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.ReadinessProbe] ?? {};\n  const livenessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.LivenessProbe] ?? {};\n  const startupProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.StartupProbe] ?? {};\n\n  const healthChecks = {\n    readinessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(readinessProbe),\n      data: !_.isEmpty(readinessProbe)\n        ? {\n            ...convertResourceDataToFormData(readinessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    livenessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(livenessProbe),\n      data: !_.isEmpty(livenessProbe)\n        ? {\n            ...convertResourceDataToFormData(livenessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    startupProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(startupProbe),\n      data: !_.isEmpty(startupProbe)\n        ? {\n            ...convertResourceDataToFormData(startupProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n  };\n  return healthChecks;\n};\n\nexport const getProbesData = (healthChecks: HealthChecksFormData, resourceType?: Resources) => {\n  const { readinessProbe, livenessProbe, startupProbe } = healthChecks;\n  return {\n    ...(readinessProbe.enabled\n      ? { readinessProbe: constructProbeData(readinessProbe.data, resourceType) }\n      : {}),\n    ...(livenessProbe.enabled\n      ? { livenessProbe: constructProbeData(livenessProbe.data, resourceType) }\n      : {}),\n    ...(resourceType !== Resources.KnativeService && startupProbe?.enabled\n      ? { startupProbe: constructProbeData(startupProbe.data) }\n      : {}),\n  };\n};\n","import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n}\n\nexport interface HealthCheckFormProbeData {\n  failureThreshold: string;\n  initialDelaySeconds: string;\n  periodSeconds: string;\n  timeoutSeconds: string;\n  successThreshold: string;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string[];\n    path: string;\n    port: string;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: string;\n  };\n}\nexport interface HealthCheckFormProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckFormProbeData;\n}\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { SquareIcon } from '@patternfly/react-icons/dist/esm/icons/square-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sResourceKindReference } from '../module/k8s';\nimport { ResourceLink } from './utils/resource-link';\nimport { Timestamp } from './utils/timestamp';\nimport { EmptyBox } from './utils/status-box';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nconst ImageStreamTimelineItem: React.FC<ImageStreamTimelineItemProps> = ({\n  tag,\n  imageStreamName,\n  imageStreamNamespace,\n  linkToTag,\n}) => {\n  const referenceAndSHA = _.split(tag.dockerImageReference, '@');\n  return (\n    <>\n      <li>\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__circle-icon\">\n            <CircleIcon />\n          </span>\n          <div className=\"co-images-stream-tag-timeline__timestamp\">\n            <Timestamp timestamp={tag.created} simple={true} />\n          </div>\n        </div>\n\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__line\" />\n          <div className=\"co-images-stream-tag-timeline__info\">\n            <ResourceLink\n              kind={ImageStreamTagsReference}\n              name={getImageStreamTagName(imageStreamName, tag.tag)}\n              namespace={imageStreamNamespace}\n              title={tag.tag}\n              linkTo={linkToTag}\n            />\n            <div className=\"co-break-all\">from {referenceAndSHA[0]}</div>\n            <div className=\"co-break-all\">{referenceAndSHA[1]}</div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n\n// check is the compared tag version, is the latest version in a sorted array of all tag versions\nconst isTagVersionLatest = (\n  comparedTag: string,\n  comparedTagPosition: number,\n  orderedTagArray: TagMeta[],\n) => {\n  return (\n    comparedTagPosition ===\n    _.findIndex(orderedTagArray, (orderedTag: TagMeta) => orderedTag.tag === comparedTag)\n  );\n};\n\nexport const ImageStreamTimeline: React.FC<ImageStreamTimelineProps> = ({\n  imageStreamTags,\n  imageStreamName,\n  imageStreamNamespace,\n}) => {\n  const { t } = useTranslation();\n  if (!_.some(imageStreamTags, 'items')) {\n    return <EmptyBox label={t('public~Images')} />;\n  }\n  const tagsArray: TagMeta[] = _.flatten(\n    _.map(imageStreamTags, ({ tag, items }) => {\n      return _.map(items, ({ created, dockerImageReference }) => ({\n        tag,\n        created,\n        dockerImageReference,\n      }));\n    }),\n  );\n  const orderedTagArray = _.orderBy(tagsArray, ['created'], ['desc']);\n  const timeline = _.map(orderedTagArray, (tag: TagMeta, i: number) => {\n    return (\n      <ImageStreamTimelineItem\n        key={tag.dockerImageReference}\n        tag={tag}\n        imageStreamName={imageStreamName}\n        imageStreamNamespace={imageStreamNamespace}\n        linkToTag={isTagVersionLatest(tag.tag, i, orderedTagArray)}\n      />\n    );\n  });\n\n  return (\n    <>\n      <ul className=\"co-images-stream-tag-timeline\">\n        {timeline}\n        <div>\n          <span className=\"co-images-stream-tag-timeline__square-icon\">\n            <SquareIcon />\n          </span>\n        </div>\n      </ul>\n    </>\n  );\n};\n\ntype ImageStreamTimelineItemProps = {\n  tag: TagMeta;\n  imageStreamName: string;\n  imageStreamNamespace: string;\n  linkToTag: boolean;\n};\n\ntype TagMeta = {\n  created: string;\n  tag: string;\n  dockerImageReference: string;\n};\n\ntype ImageStreamTimelineProps = {\n  imageStreamTags: any[];\n  imageStreamName: string;\n  imageStreamNamespace: string;\n};\n","import { IBuild as IBuildV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/Build';\nimport { IBuildRun as IBuildRunV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/ClusterBuildStrategy';\nimport { IBuild as IBuildV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/Build';\nimport { IBuildRun as IBuildRunV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/ClusterBuildStrategy';\nimport { K8sResourceCondition } from '@console/internal/module/k8s';\n\n// Add missing latestBuild to Build\nexport type Build =\n  | (IBuildV1Alpha1 & { latestBuild?: BuildRun })\n  | (IBuildV1Beta1 & { latestBuild?: BuildRun });\n\nexport type BuildSpec = IBuildV1Alpha1['spec'] & IBuildV1Beta1['spec'];\n\nexport type BuildStatus = IBuildV1Alpha1['status'] & IBuildV1Beta1['status'];\n\nexport type ClusterBuildStrategyKind = IClusterBuildStrategyV1Alpha1 | IClusterBuildStrategyV1Beta1;\n\nexport type BuildStrategyKind = IBuildStrategyV1Alpha1 | IBuildStrategyV1Beta1;\n\n// Make status.conditions compatible with @console/internal/components/conditions props\nexport type BuildRun =\n  | (IBuildRunV1Alpha1 & {\n      status?: { conditions?: K8sResourceCondition[]; latestTaskRunRef?: string };\n    })\n  | (IBuildRunV1Beta1 & {\n      status?: { conditions?: K8sResourceCondition[]; taskRunName?: string };\n    });\n\n// The enum values need to match the dynamic-plugin `Status` `status` prop.\n// A translation (title) is added in the BuildRunStatus component.\nexport enum ComputedBuildRunStatus {\n  PENDING = 'Pending',\n  RUNNING = 'Running',\n  SUCCEEDED = 'Succeeded',\n  FAILED = 'Failed',\n  UNKNOWN = 'Unknown',\n}\n\n/** WARNING: The enum values corresponds to the `metadata.name` of the ClusterBuildStrategy CRs */\nexport enum ClusterBuildStrategy {\n  BUILDAH = 'buildah',\n  S2I = 'source-to-image',\n  UNKNOWN = 'unknown',\n}\n\nexport const ReadableClusterBuildStrategies: Record<ClusterBuildStrategy, string> = {\n  // t('shipwright-plugin~Buildah')\n  [ClusterBuildStrategy.BUILDAH]: `shipwright-plugin~Buildah`,\n  // t('shipwright-plugin~Source-to-Image')\n  [ClusterBuildStrategy.S2I]: `shipwright-plugin~Source-to-Image`,\n  [ClusterBuildStrategy.UNKNOWN]: `shipwright-plugin~Unknown`,\n};\n","import { TFunction } from 'i18next';\nimport { HealthChecksProbeType, RequestType, HealthCheckFormProbe } from './health-checks-types';\n\nexport const getHealthChecksProbeConfig = (probe: string, t: TFunction) => {\n  switch (probe) {\n    case HealthChecksProbeType.ReadinessProbe: {\n      return {\n        formTitle: t('devconsole~Readiness probe'),\n        formSubtitle: t(\n          \"devconsole~A readiness probe checks if the Container is ready to handle requests. A failed readiness probe means that a Container should not receive any traffic from a proxy, even if it's running.\",\n        ),\n      };\n    }\n    case HealthChecksProbeType.LivenessProbe: {\n      return {\n        formTitle: t('devconsole~Liveness probe'),\n        formSubtitle: t(\n          'devconsole~A liveness probe checks if the Container is still running. If the liveness probe fails the Container is killed.',\n        ),\n      };\n    }\n    case HealthChecksProbeType.StartupProbe: {\n      return {\n        formTitle: t('devconsole~Startup probe'),\n        formSubtitle: t(\n          'devconsole~A startup probe checks if the application within the Container is started. If the startup probe fails the Container is killed.',\n        ),\n      };\n    }\n    default:\n      return undefined;\n  }\n};\n\nexport const healthChecksDefaultValues: HealthCheckFormProbe = {\n  showForm: false,\n  enabled: false,\n  modified: false,\n  data: {\n    failureThreshold: '3',\n    requestType: RequestType.HTTPGET,\n    httpGet: {\n      scheme: undefined,\n      path: '/',\n      port: '8080',\n      httpHeaders: [],\n    },\n    tcpSocket: {\n      port: '8080',\n    },\n    exec: { command: [''] },\n    initialDelaySeconds: '0',\n    periodSeconds: '10',\n    timeoutSeconds: '1',\n    successThreshold: '1',\n  },\n};\n\nexport const healthChecksProbeInitialData = {\n  readinessProbe: healthChecksDefaultValues,\n  livenessProbe: healthChecksDefaultValues,\n  startupProbe: healthChecksDefaultValues,\n};\n","import { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport {\n  getSpacerNodes,\n  getEdgesFromNodes,\n  WhenStatus,\n  RunStatus,\n  ModelKind,\n  GraphModel,\n  EdgeModel,\n} from '@patternfly/react-topology';\nimport * as dagre from 'dagre';\nimport * as _ from 'lodash';\nimport i18n from '@console/internal/i18n';\nimport {\n  ComputedStatus,\n  PipelineKind,\n  PipelineRunKind,\n  PipelineTask,\n  PipelineTaskWithStatus,\n  TaskRunKind,\n} from '../../../types';\nimport { getRunStatusColor } from '../../../utils/pipeline-augment';\nimport {\n  getPipelineTasks,\n  getFinallyTasksWithStatus,\n  appendPipelineRunStatus,\n} from '../../../utils/pipeline-utils';\nimport { CheckTaskErrorMessage } from '../pipeline-builder/types';\nimport {\n  NODE_HEIGHT,\n  NodeType,\n  NODE_WIDTH,\n  AddNodeDirection,\n  PipelineLayout,\n  DAGRE_BUILDER_PROPS,\n  DAGRE_VIEWER_PROPS,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  WHEN_EXPRESSION_SPACING,\n  DAGRE_VIEWER_SPACED_PROPS,\n  DAGRE_BUILDER_SPACED_PROPS,\n  NODE_PADDING,\n  DEFAULT_NODE_ICON_WIDTH,\n  DEFAULT_FINALLLY_GROUP_PADDING,\n  DEFAULT_NODE_HEIGHT,\n  DEFAULT_BADGE_WIDTH,\n} from './const';\nimport { DAG, Vertex } from './dag';\nimport {\n  PipelineEdgeModel,\n  NodeCreator,\n  NodeCreatorSetup,\n  SpacerNodeModelData,\n  TaskListNodeModelData,\n  TaskNodeModelData,\n  PipelineMixedNodeModel,\n  PipelineTaskNodeModel,\n  BuilderNodeModelData,\n  PipelineRunAfterNodeModelData,\n  BuilderFinallyNodeModel,\n  FinallyNodeModel,\n  PipelineFinallyNodeModel,\n  DiamondStateType,\n  LoadingNodeModel,\n} from './types';\n\nconst createGenericNode: NodeCreatorSetup = (type, width?, height?) => (name, data) => ({\n  id: name,\n  label: data?.label || name,\n  runAfterTasks: data?.runAfterTasks || [],\n  ...(data && { data }),\n  height: height ?? NODE_HEIGHT,\n  width: width ?? NODE_WIDTH,\n  type,\n});\n\n// Node variations\nexport const createTaskNode: NodeCreator<TaskNodeModelData> = createGenericNode(NodeType.TASK_NODE);\n\nexport const createCustomTaskNode: NodeCreator<TaskNodeModelData> = createGenericNode(\n  NodeType.CUSTOM_TASK_NODE,\n);\n\nexport const createSpacerNode: NodeCreator<SpacerNodeModelData> = createGenericNode(\n  NodeType.SPACER_NODE,\n  0,\n);\nexport const createTaskListNode: NodeCreator<TaskListNodeModelData> = createGenericNode(\n  NodeType.TASK_LIST_NODE,\n);\nexport const createInvalidTaskListNode: NodeCreator<TaskListNodeModelData> = createGenericNode(\n  NodeType.INVALID_TASK_LIST_NODE,\n);\nexport const createBuilderNode: NodeCreator<BuilderNodeModelData> = createGenericNode(\n  NodeType.BUILDER_NODE,\n);\n\nexport const createFinallyNode = (height): NodeCreator<FinallyNodeModel> =>\n  createGenericNode(\n    NodeType.FINALLY_NODE,\n    NODE_WIDTH + WHEN_EXPRESSION_SPACING + FINALLY_NODE_PADDING * 2,\n    height,\n  );\n\nexport const createLoadingNode: NodeCreator<LoadingNodeModel> = createGenericNode(\n  NodeType.LOADING_NODE,\n);\n\nexport const createBuilderFinallyNode = (\n  height: number,\n  width: number,\n): NodeCreator<BuilderFinallyNodeModel> =>\n  createGenericNode(NodeType.BUILDER_FINALLY_NODE, width, height);\n\nconst createPipelineTaskNode = (type: NodeType, data: PipelineRunAfterNodeModelData) =>\n  createGenericNode(type, data.width, data.height)(data.id, data);\n\nexport const getNodeCreator = (type: NodeType): NodeCreator<PipelineRunAfterNodeModelData> => {\n  switch (type) {\n    case NodeType.TASK_LIST_NODE:\n      return createTaskListNode;\n    case NodeType.BUILDER_NODE:\n      return createBuilderNode;\n    case NodeType.SPACER_NODE:\n      return createSpacerNode;\n    case NodeType.LOADING_NODE:\n      return createLoadingNode;\n    case NodeType.INVALID_TASK_LIST_NODE:\n      return createInvalidTaskListNode;\n    case NodeType.CUSTOM_TASK_NODE:\n      return createCustomTaskNode;\n    case NodeType.TASK_NODE:\n    default:\n      return createTaskNode;\n  }\n};\n\nexport const handleParallelToParallelNodes = (\n  nodes: PipelineMixedNodeModel[],\n): PipelineMixedNodeModel[] => {\n  type ParallelNodeReference = {\n    node: PipelineTaskNodeModel;\n    runAfter: string[];\n    atIndex: number;\n  };\n  type ParallelNodeMap = {\n    [id: string]: ParallelNodeReference[];\n  };\n\n  // Collect only multiple run-afters\n  const multipleRunBeforeMap: ParallelNodeMap = nodes.reduce((acc, node, idx) => {\n    const {\n      data: {\n        task: { runAfter },\n      },\n    } = node;\n    if (runAfter && runAfter.length > 1) {\n      const id: string = [...runAfter]\n        .sort((a, b) => a.localeCompare(b))\n        .reduce((str, ref) => `${str}|${ref}`);\n\n      if (!Array.isArray(acc[id])) {\n        acc[id] = [];\n      }\n      acc[id].push({\n        node,\n        runAfter,\n        atIndex: idx,\n      });\n    }\n    return acc;\n  }, {} as ParallelNodeMap);\n\n  // Trim out single occurrences\n  const multiParallelToParallelList: ParallelNodeReference[][] = Object.values(\n    multipleRunBeforeMap,\n  ).filter((data: ParallelNodeReference[]) => data.length > 1);\n\n  if (multiParallelToParallelList.length === 0) {\n    // No parallel to parallel\n    return nodes;\n  }\n\n  // Insert a spacer node between the multiple nodes on the sides of a parallel-to-parallel\n  const newNodes: PipelineMixedNodeModel[] = [];\n  const newRunAfterNodeMap: { [nodeId: string]: string[] } = {};\n  multiParallelToParallelList.forEach((p2p: ParallelNodeReference[]) => {\n    // All nodes in each array share their runAfters\n    const { runAfter } = p2p[0];\n\n    const names: string[] = p2p.map((p2pData) => p2pData.node.id);\n    const parallelSpacerName = `parallel-${names.join('-')}`;\n\n    names.forEach((p2pNodeId) => {\n      if (!Array.isArray(newRunAfterNodeMap[p2pNodeId])) {\n        newRunAfterNodeMap[p2pNodeId] = [];\n      }\n      newRunAfterNodeMap[p2pNodeId].push(parallelSpacerName);\n    });\n\n    newNodes.push(\n      createSpacerNode(parallelSpacerName, {\n        task: {\n          name: parallelSpacerName,\n          runAfter,\n        },\n      }),\n    );\n  });\n\n  // Update all impacted nodes to point at the spacer node as the spacer points at their original runAfters\n  nodes.forEach((node) => {\n    const newRunAfters: string[] | undefined = newRunAfterNodeMap[node.id];\n    if (newRunAfters && newRunAfters.length > 0) {\n      const {\n        data: { task },\n        type,\n      } = node;\n\n      const createNode: NodeCreator<PipelineRunAfterNodeModelData> = getNodeCreator(type);\n\n      // Recreate the node with the new runAfter pointing to the spacer node\n      newNodes.push(\n        createNode(node.id, {\n          ...node.data,\n          task: {\n            ...task,\n            runAfter: newRunAfters,\n          },\n        }),\n      );\n    } else {\n      // Unaffected node, just carry it over\n      newNodes.push(node);\n    }\n  });\n\n  return newNodes;\n};\n\nexport const tasksToNodes = (\n  taskList: PipelineTask[],\n  pipeline?: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n): PipelineMixedNodeModel[] => {\n  const nodeList: PipelineTaskNodeModel[] = taskList.map((task) =>\n    createTaskNode(task.name, {\n      task,\n      pipeline,\n      pipelineRun,\n    }),\n  );\n\n  return handleParallelToParallelNodes(nodeList);\n};\n\nexport const tasksToBuilderNodes = (\n  taskList: PipelineTask[],\n  onAddNode: (task: PipelineTask, direction: AddNodeDirection) => void,\n  onNodeSelection: (task: PipelineTask) => void,\n  getError: CheckTaskErrorMessage,\n  selectedIds: string[],\n): PipelineMixedNodeModel[] => {\n  return taskList.map((task, idx) => {\n    return createBuilderNode(task.name, {\n      error: getError(idx),\n      task,\n      selected: selectedIds.includes(task.name),\n      onNodeSelection: () => {\n        onNodeSelection(task);\n      },\n      onAddNode: (direction: AddNodeDirection) => {\n        onAddNode(task, direction);\n      },\n    });\n  });\n};\n\nexport const getBuilderEdgesFromNodes = (nodes: PipelineMixedNodeModel[]): PipelineEdgeModel[] =>\n  _.flatten(\n    nodes.map((node) => {\n      const {\n        data: {\n          task: { name: target, runAfter = [] },\n        },\n      } = node;\n\n      if (runAfter.length === 0) return null;\n\n      return runAfter.map((source) => ({\n        id: `${source}~to~${target}`,\n        type: 'edge',\n        source,\n        target,\n      }));\n    }),\n  ).filter((edgeList) => !!edgeList);\n\nexport const getFinallyTaskHeight = (allTasksLength: number, disableBuilder: boolean): number => {\n  return (\n    allTasksLength * NODE_HEIGHT +\n    (allTasksLength - 1) * FINALLY_NODE_VERTICAL_SPACING +\n    (!disableBuilder ? NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING : 0) +\n    FINALLY_NODE_PADDING * 2\n  );\n};\n\nexport const getFinallyTaskWidth = (allTasksLength: number): number => {\n  const whenExpressionSpacing = allTasksLength > 0 ? WHEN_EXPRESSION_SPACING : 0;\n  return NODE_WIDTH + FINALLY_NODE_PADDING * 2 + whenExpressionSpacing;\n};\n\nexport const getLastRegularTasks = (regularTasks: PipelineMixedNodeModel[]): string[] => {\n  const runAfters = _.uniq(\n    regularTasks.reduce((acc, { data: { task: { runAfter } } }) => {\n      return runAfter ? acc.concat(runAfter) : acc;\n    }, []),\n  );\n  return _.difference(\n    regularTasks.map((n) => n.id),\n    runAfters,\n  );\n};\n\nexport const connectFinallyTasksToNodes = (\n  nodes: PipelineMixedNodeModel[],\n  pipeline?: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n  taskRuns?: TaskRunKind[],\n): PipelineMixedNodeModel[] => {\n  const finallyTasks = pipelineRun\n    ? getFinallyTasksWithStatus(pipeline, pipelineRun, taskRuns)\n    : pipeline.spec?.finally ?? [];\n  if (finallyTasks.length === 0) {\n    return nodes;\n  }\n  const regularRunAfters = getLastRegularTasks(nodes);\n  const name = 'finally-node';\n  const finallyGroupNode: PipelineFinallyNodeModel = createFinallyNode(\n    getFinallyTaskHeight(finallyTasks.length, true),\n  )(name, {\n    isFinallyTask: true,\n    pipeline,\n    pipelineRun,\n    task: {\n      isFinallyTask: true,\n      name,\n      runAfter: regularRunAfters,\n      finallyTasks: finallyTasks.map((ft) => ({\n        ...ft,\n        disableTooltip: false,\n      })),\n    },\n  });\n  return [...nodes, finallyGroupNode];\n};\n\nexport const getTopologyNodesEdges = (\n  pipeline: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n  taskRuns?: TaskRunKind[],\n): { nodes: PipelineMixedNodeModel[]; edges: PipelineEdgeModel[] } => {\n  const taskList: PipelineTask[] = _.flatten(getPipelineTasks(pipeline, pipelineRun, taskRuns));\n  const taskNodes: PipelineMixedNodeModel[] = tasksToNodes(taskList, pipeline, pipelineRun);\n\n  const nodes: PipelineMixedNodeModel[] = connectFinallyTasksToNodes(\n    taskNodes,\n    pipeline,\n    pipelineRun,\n    taskRuns,\n  );\n  const edges: PipelineEdgeModel[] = getEdgesFromNodes(nodes);\n\n  return { nodes, edges };\n};\n\nexport const getTextWidth = (text: string, font: string = '0.8rem RedHatText'): number => {\n  if (!text || text.length === 0) {\n    return 0;\n  }\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (!context) {\n    return text.length;\n  }\n  context.font = font;\n  const { width } = context.measureText(text);\n  return width;\n};\n\nexport const extractDepsFromContextVariables = (contextVariable: string) => {\n  const regex = /(?:(?:\\$\\(tasks.))([a-z0-9_-]+)(?:.results+)(?:[.^\\w]+\\))/g;\n  let matches;\n  const deps = [];\n  // eslint-disable-next-line no-cond-assign\n  while ((matches = regex.exec(contextVariable)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (matches.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n    if (matches) {\n      if (!deps.includes(matches[1])) {\n        deps.push(matches[1]);\n      }\n    }\n  }\n  return deps;\n};\n\nexport const getSpacerNode = (node: PipelineMixedNodeModel): PipelineMixedNodeModel => ({\n  ...node,\n  height: 1,\n  width: 1,\n});\n\nexport const getWhenStatus = (status: RunStatus): WhenStatus => {\n  switch (status) {\n    case RunStatus.Succeeded:\n    case RunStatus.Failed:\n      return WhenStatus.Met;\n    case RunStatus.Skipped:\n    case RunStatus['In Progress']:\n    case RunStatus.Idle:\n      return WhenStatus.Unmet;\n    default:\n      return undefined;\n  }\n};\n\nexport const getTaskWhenStatus = (task: PipelineTaskWithStatus): WhenStatus => {\n  if (!task.when) {\n    return undefined;\n  }\n  return getWhenStatus(task.status?.reason);\n};\n\nexport const getGraphDataModel = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): {\n  graph: GraphModel;\n  nodes: PipelineMixedNodeModel[];\n  edges: EdgeModel[];\n} => {\n  if (!pipeline) {\n    return null;\n  }\n\n  const taskList = _.flatten(getPipelineTasks(pipeline, pipelineRun, taskRuns));\n\n  const dag = new DAG();\n  taskList?.forEach((task: PipelineTask) => {\n    dag.addEdges(task.name, task, '', task.runAfter || []);\n  });\n\n  const nodes = [];\n  const maxWidthForLevel = {};\n  dag.topologicalSort((v: Vertex) => {\n    if (!maxWidthForLevel[v.level]) {\n      maxWidthForLevel[v.level] = getTextWidth(v.name);\n    } else {\n      maxWidthForLevel[v.level] = Math.max(maxWidthForLevel[v.level], getTextWidth(v.name));\n    }\n  });\n  dag.topologicalSort((vertex: Vertex) => {\n    const runAfterTasks = [];\n    const task = vertex.data;\n    const depsFromContextVariables = [];\n    if (task.params) {\n      task.params.forEach((p) => {\n        if (Array.isArray(p.value)) {\n          p.value.forEach((paramValue) => {\n            depsFromContextVariables.push(...extractDepsFromContextVariables(paramValue));\n          });\n        } else {\n          depsFromContextVariables.push(...extractDepsFromContextVariables(p.value));\n        }\n      });\n    }\n    if (task?.when) {\n      task.when.forEach(({ input, values }) => {\n        if (values) {\n          depsFromContextVariables.push(...extractDepsFromContextVariables(input));\n          values.forEach((whenValue) => {\n            depsFromContextVariables.push(...extractDepsFromContextVariables(whenValue));\n          });\n        }\n      });\n    }\n    const dependancies = _.uniq([...vertex.dependancyNames]);\n    if (dependancies) {\n      dependancies.forEach((dep) => {\n        const depObj = dag.vertices.get(dep);\n        if (depObj.level - vertex.level <= 1 || vertex.data.runAfter?.includes(depObj.name)) {\n          runAfterTasks.push(dep);\n        }\n      });\n    }\n    if (depsFromContextVariables.length > 0) {\n      const v = depsFromContextVariables.map((d) => {\n        return dag.vertices.get(d);\n      });\n      const minLevelDep = _.minBy(v, (d) => d.level);\n      const nearestDeps = v.filter((v1) => v1.level === minLevelDep.level);\n      nearestDeps.forEach((nd) => {\n        if (vertex.dependancyNames.includes(nd.name)) {\n          if (nd.level - vertex.level <= 1 || vertex.dependancyNames.length === 0) {\n            runAfterTasks.push(nd.name);\n          }\n        }\n      });\n    }\n    const badgePadding = Object.keys(pipelineRun.spec)?.length > 0 ? DEFAULT_BADGE_WIDTH : 0;\n    const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === task.name);\n    const getNodeType = (taskKind: string) => {\n      if (!taskKind || taskKind === 'Task' || taskKind === 'ClusterTask') {\n        return NodeType.TASK_NODE;\n      }\n      return NodeType.CUSTOM_TASK_NODE;\n    };\n\n    nodes.push(\n      createPipelineTaskNode(getNodeType(task?.taskRef?.kind), {\n        id: vertex.name,\n        label: vertex.name,\n        width:\n          maxWidthForLevel[vertex.level] +\n          NODE_PADDING * 2 +\n          DEFAULT_NODE_ICON_WIDTH +\n          badgePadding,\n        runAfterTasks,\n        status: isTaskSkipped ? RunStatus.Skipped : vertex.data.status?.reason,\n        whenStatus: getTaskWhenStatus(vertex.data),\n        task: vertex.data,\n        pipeline,\n        pipelineRun,\n      }),\n    );\n  });\n\n  const finallyTaskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\n  const maxFinallyNodeName =\n    finallyTaskList.sort((a, b) => b.name.length - a.name.length)[0]?.name || '';\n  const finallyNodes = finallyTaskList.map((fTask) => {\n    const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === fTask.name);\n\n    return createPipelineTaskNode(NodeType.FINALLY_NODE, {\n      id: fTask.name,\n      label: fTask.name,\n      width:\n        getTextWidth(maxFinallyNodeName) + NODE_PADDING * 2 + DEFAULT_FINALLLY_GROUP_PADDING * 2,\n      height: DEFAULT_NODE_HEIGHT,\n      runAfterTasks: [],\n      status: isTaskSkipped ? RunStatus.Skipped : fTask.status?.reason,\n      whenStatus: getTaskWhenStatus(fTask),\n      task: fTask,\n      pipeline,\n      pipelineRun,\n    });\n  });\n\n  const finallyGroup = finallyNodes.length\n    ? [\n        {\n          id: 'finally-group-id',\n          type: NodeType.FINALLY_GROUP,\n          children: finallyNodes.map((n) => n.id),\n          group: true,\n          style: { padding: DEFAULT_FINALLLY_GROUP_PADDING },\n        },\n      ]\n    : [];\n  const spacerNodes: PipelineMixedNodeModel[] = getSpacerNodes(\n    [...nodes, ...finallyNodes],\n    NodeType.SPACER_NODE,\n    [NodeType.FINALLY_NODE],\n  ).map(getSpacerNode);\n\n  const edges: PipelineEdgeModel[] = getEdgesFromNodes(\n    [...nodes, ...spacerNodes, ...finallyNodes],\n    NodeType.SPACER_NODE,\n    NodeType.EDGE,\n    NodeType.EDGE,\n    [NodeType.FINALLY_NODE],\n    NodeType.EDGE,\n  );\n\n  return {\n    graph: {\n      id: `${pipelineRun?.metadata?.name || pipeline.metadata.name}-graph`,\n      type: ModelKind.graph,\n      layout: PipelineLayout.DAGRE_VIEWER,\n      scaleExtent: [0.5, 1],\n    },\n    nodes: [...nodes, ...spacerNodes, ...finallyNodes, ...finallyGroup],\n    edges,\n  };\n};\n\nexport const taskHasWhenExpression = (task: PipelineTask): boolean => task?.when?.length > 0;\n\nexport const nodesHasWhenExpression = (nodes: PipelineMixedNodeModel[]): boolean =>\n  nodes.some((n) => taskHasWhenExpression(n.data.task));\n\nexport const hasWhenExpression = (pipeline: PipelineKind): boolean => {\n  return [...(pipeline?.spec?.tasks || []), ...(pipeline?.spec?.finally || [])].some(\n    taskHasWhenExpression,\n  );\n};\nexport const getLayoutData = (layout: PipelineLayout): dagre.GraphLabel => {\n  switch (layout) {\n    case PipelineLayout.DAGRE_BUILDER:\n      return DAGRE_BUILDER_PROPS;\n    case PipelineLayout.DAGRE_VIEWER:\n      return DAGRE_VIEWER_PROPS;\n    case PipelineLayout.DAGRE_VIEWER_SPACED:\n      return DAGRE_VIEWER_SPACED_PROPS;\n    case PipelineLayout.DAGRE_BUILDER_SPACED:\n      return DAGRE_BUILDER_SPACED_PROPS;\n    default:\n      return null;\n  }\n};\n\nexport const getWhenExpressionDiamondState = (\n  status: ComputedStatus,\n  isPipelineRun: boolean,\n  isFinallyTask: boolean,\n): DiamondStateType => {\n  let diamondColor: string;\n  if (isPipelineRun) {\n    if (status === ComputedStatus.Failed) {\n      diamondColor = successColor.value;\n    } else {\n      diamondColor = getRunStatusColor(status).pftoken.value;\n    }\n  } else if (!isFinallyTask) {\n    diamondColor = 'var(--pf-v5-global--BackgroundColor--200)';\n  } else {\n    diamondColor = 'var(--pf-v5-global--BackgroundColor--light-100)';\n  }\n\n  let tooltipContent: string;\n  switch (status) {\n    case ComputedStatus.Succeeded:\n    case ComputedStatus.Failed:\n      tooltipContent = i18n.t('pipelines-plugin~When expression was met');\n      break;\n    case ComputedStatus.Skipped:\n      tooltipContent = i18n.t('pipelines-plugin~When expression was not met');\n      break;\n    default:\n      tooltipContent = i18n.t('pipelines-plugin~When expression');\n  }\n  return { tooltipContent, diamondColor };\n};\n\nexport const getTooltipContent = (statusReason: ComputedStatus): string => {\n  switch (statusReason) {\n    case ComputedStatus.Succeeded:\n    case ComputedStatus.Failed:\n      return i18n.t('pipelines-plugin~When expression was met');\n    case ComputedStatus.Skipped:\n      return i18n.t('pipelines-plugin~When expression was not met');\n    default:\n      return i18n.t('pipelines-plugin~When expression');\n  }\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import * as React from 'react';\nimport { ImageStreamContextProps } from '../import-types';\n\nexport const ImageStreamContext = React.createContext<ImageStreamContextProps>(undefined as any);\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { history } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  ProjectRequestModel,\n  SecretModel,\n  ServiceModel,\n  ServiceAccountModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  k8sCreate,\n  k8sGet,\n  K8sResourceKind,\n  k8sUpdate,\n  K8sVerb,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport {\n  createPipelineForImportFlow,\n  createPipelineRunForImportFlow,\n  updatePipelineForImportFlow,\n} from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '@console/pipelines-plugin/src/components/pipelines/const';\nimport { createTrigger } from '@console/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils';\nimport { setPipelineNotStarted } from '@console/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils';\nimport { createRepositoryResources } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport {\n  updateServiceAccount,\n  getSecretAnnotations,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { LimitsData } from '@console/shared/src/types';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BUILD_OUTPUT_IMAGESTREAM_URL } from '@console/shipwright-plugin/src/const';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { RUNTIME_LABEL } from '../../const';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  getTriggerAnnotation,\n  mergeData,\n  getTemplateLabels,\n  getRouteAnnotations,\n} from '../../utils/resource-label-utils';\nimport { createService, createRoute, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  GitImportFormData,\n  ProjectData,\n  GitReadableTypes,\n  Resources,\n  DevfileSuggestedResources,\n  UploadJarFormData,\n  RouteData,\n  ServerlessData,\n  DeploymentData,\n  BuildOptions,\n} from './import-types';\n\nexport const generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const createProject = (projectData: ProjectData): Promise<K8sResourceKind> => {\n  const project = {\n    metadata: {\n      name: projectData.name,\n    },\n    displayName: projectData.displayName,\n    description: projectData.description,\n  };\n\n  return k8sCreate(ProjectRequestModel, project);\n};\n\nexport const createOrUpdateImageStream = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStreamData: K8sResourceKind,\n  dryRun: boolean,\n  appResources: AppResources,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    labels: userLabels,\n    image: { tag: selectedTag },\n    labels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const repository = (formData as GitImportFormData).git?.url;\n  const ref = (formData as GitImportFormData).git?.ref;\n  const imageStreamList = appResources?.imageStream?.data?.filter(\n    (imgstr) => imgstr.metadata?.labels?.[NAME_LABEL] === (labels[NAME_LABEL] || name),\n  );\n  const imageStreamFilterData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamFilterData.length && imageStreamFilterData[0]) || {};\n  const imageStreamName = imageStreamData && imageStreamData.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...(repository && getGitAnnotations(repository, ref)),\n    ...getCommonAnnotations(),\n  };\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: {\n        ...defaultLabels,\n        ...userLabels,\n        [NAME_LABEL]: imgStreamName,\n      },\n      annotations: defaultAnnotations,\n    },\n  };\n  const imageStream = mergeData(originalImageStream, newImageStream);\n  if (verb === 'update') {\n    imageStream.metadata.name = originalImageStream.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ImageStreamModel, imageStream)\n    : k8sCreate(ImageStreamModel, newImageStream, dryRun ? dryRunOpt : {});\n};\n\nexport const createWebhookSecret = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStream: K8sResourceKind,\n  secretType: string,\n  dryRun: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    image: { tag: selectedTag },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n\n  const webhookSecret = {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: `${name}-${secretType}-webhook-secret`,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n    },\n    stringData: { WebHookSecretKey: generateSecret() },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreate(SecretModel, webhookSecret, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateShipwrightBuild = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalShipwrightBuild?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n) => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, strategy: buildStrategy, clusterBuildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamRepository = imageStream && imageStream.status?.dockerImageRepository;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  let shipwrightParamsObj = [];\n  // eslint-disable-next-line default-case\n  switch (buildStrategy) {\n    case BuildStrategyType.Docker:\n      shipwrightParamsObj = [\n        {\n          name: 'dockerfile',\n          value: dockerfilePath,\n        },\n      ];\n      break;\n    case BuildStrategyType.Source:\n      shipwrightParamsObj = [\n        {\n          name: 'builder-image',\n          value: `${imageStreamRepository}:${selectedTag}`,\n        },\n      ];\n      break;\n  }\n\n  const shipwrightBuildName =\n    verb === 'update' && !_.isEmpty(originalShipwrightBuild)\n      ? originalShipwrightBuild.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newShipwrightBuild = {\n    apiVersion: 'shipwright.io/v1beta1',\n    kind: 'Build',\n    metadata: {\n      name: generatedImageStreamName || shipwrightBuildName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: shipwrightBuildName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      source: {\n        type: 'Git',\n        git: {\n          url: repository,\n          revision: ref,\n          ...(secretName ? { cloneSecret: secretName } : {}),\n        },\n        contextDir,\n      },\n      env: [...customEnvs, ...buildEnvs],\n      strategy: {\n        name: clusterBuildStrategy,\n        kind: 'ClusterBuildStrategy',\n      },\n      paramValues: shipwrightParamsObj,\n      output: {\n        image: `${BUILD_OUTPUT_IMAGESTREAM_URL}/${namespace}/${\n          generatedImageStreamName || shipwrightBuildName\n        }:latest`,\n      },\n    },\n  };\n\n  const shipwrightBuild = mergeData(originalShipwrightBuild, newShipwrightBuild);\n  if (verb === 'update') {\n    shipwrightBuild.metadata.name = originalShipwrightBuild.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ShipwrightBuildModel, shipwrightBuild)\n    : k8sCreate(ShipwrightBuildModel, newShipwrightBuild, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, type: gitType, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, triggers, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n  let buildStrategyData;\n\n  let desiredContextDir = contextDir;\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  switch (buildStrategy) {\n    case 'Devfile':\n      buildStrategyData = originalBuildConfig?.spec?.strategy || {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      desiredContextDir = originalBuildConfig?.spec?.source?.contextDir || contextDir;\n      break;\n    case 'Docker':\n      buildStrategyData = {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      break;\n    default:\n      buildStrategyData = {\n        sourceStrategy: {\n          env: [...customEnvs, ...buildEnvs],\n          from: {\n            kind: 'ImageStreamTag',\n            name: `${imageStreamName}:${selectedTag}`,\n            namespace: imageStreamNamespace,\n          },\n        },\n      };\n      break;\n  }\n\n  const webhookTriggerData = {\n    type: GitReadableTypes[gitType],\n    [gitType]: {\n      secretReference: { name: `${name}-${gitType}-webhook-secret` },\n    },\n  };\n\n  const excludedGitTypesForTriggers = [GitProvider.UNSURE, GitProvider.GITEA];\n\n  const buildConfigName =\n    verb === 'update' && !_.isEmpty(originalBuildConfig)\n      ? originalBuildConfig.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: generatedImageStreamName || buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: buildConfigName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || buildConfigName}:latest`,\n        },\n      },\n      source: {\n        contextDir: desiredContextDir,\n        git: {\n          uri: repository,\n          ref,\n        },\n        ...(secretName ? { sourceSecret: { name: secretName } } : {}),\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n        ...(triggers.webhook && !excludedGitTypesForTriggers.includes(gitType)\n          ? [webhookTriggerData]\n          : []),\n        ...(triggers.image ? [{ type: 'ImageChange', imageChange: {} }] : []),\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n  if (verb === 'update') {\n    buildConfig.metadata.name = originalBuildConfig.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, newBuildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeployment = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const runtimeIcon = imageStream && imageStream.metadata.labels?.[RUNTIME_LABEL];\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag,\n    runtimeIcon,\n  });\n  const imageName = name;\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n  };\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const managePipelineResources = async (\n  formData: GitImportFormData,\n  pipelineData: PipelineKind,\n): Promise<K8sResourceKind[]> => {\n  const pipelineResources = [];\n  if (!formData) return Promise.resolve([]);\n  const { name, git, pipeline, project, docker, image, build, labels } = formData;\n  let managedPipeline: PipelineKind;\n  const pipelineName = pipelineData?.metadata?.name;\n\n  if (!_.isEmpty(pipelineData) && pipelineName === name) {\n    managedPipeline = await updatePipelineForImportFlow(\n      pipelineData,\n      pipeline.template,\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n  } else if (pipeline.template) {\n    managedPipeline = await createPipelineForImportFlow(\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      pipeline,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n    pipelineResources.push(managedPipeline);\n    try {\n      const triggerResources = await createTrigger(managedPipeline, git.detectedType);\n      pipelineResources.push(...triggerResources);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('Error occured while creating triggers', error);\n    }\n  }\n\n  if (git.secret) {\n    const secret = await k8sGet(SecretModel, git.secret, project.name);\n    const gitUrl = GitUrlParse(git.url);\n    secret.metadata.annotations = getSecretAnnotations(\n      {\n        key: 'git',\n        value:\n          gitUrl.protocol === 'ssh' ? gitUrl.resource : `${gitUrl.protocol}://${gitUrl.resource}`,\n      },\n      secret.metadata.annotations,\n    );\n    await k8sUpdate(SecretModel, secret, project.name);\n\n    const pipelineServiceAccount = await k8sGet(\n      ServiceAccountModel,\n      PIPELINE_SERVICE_ACCOUNT,\n      project.name,\n    );\n    if (_.find(pipelineServiceAccount.secrets, (s) => s.name === git.secret) === undefined) {\n      await updateServiceAccount(git.secret, pipelineServiceAccount, false);\n    }\n  }\n\n  if (_.has(managedPipeline?.metadata?.labels, 'app.kubernetes.io/instance')) {\n    try {\n      const pipelineRun = await createPipelineRunForImportFlow(managedPipeline);\n      pipelineResources.push(pipelineRun);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('Failed to create PipelineRun for import flow', error);\n      setPipelineNotStarted(managedPipeline.metadata.name, managedPipeline.metadata.namespace);\n    }\n  }\n  return Promise.all(pipelineResources);\n};\n\nexport const createDevfileResources = async (\n  formData: GitImportFormData,\n  dryRun: boolean,\n  appResources: AppResources,\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind[]> => {\n  const verb: K8sVerb = 'create';\n\n  const {\n    name,\n    project: { name: namespace },\n    devfile: { devfileSuggestedResources, devfileProjectType },\n  } = formData;\n\n  const devfileResourceObjects: DevfileSuggestedResources = Object.keys(\n    devfileSuggestedResources,\n  ).reduce((acc: DevfileSuggestedResources, resourceType: string) => {\n    const resource: K8sResourceKind = devfileSuggestedResources[resourceType];\n    if (!resource) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [resourceType]: {\n        ...resource,\n        metadata: {\n          ...resource.metadata,\n          annotations: {\n            ...resource.metadata?.annotations,\n            isFromDevfile: 'true',\n          },\n          name,\n          namespace,\n          labels: {\n            ...resource.metadata?.labels,\n            ...(devfileProjectType ? { [RUNTIME_LABEL]: devfileProjectType } : {}),\n          },\n        },\n      },\n    };\n  }, {} as DevfileSuggestedResources);\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    appResources,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.buildResource,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const webhookSecretResponse = await createWebhookSecret(\n    formData,\n    devfileResourceObjects.imageStream,\n    'generic',\n    dryRun,\n  );\n\n  const deploymentResponse = await createOrUpdateDeployment(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.deployResource,\n    verb,\n  );\n\n  const serviceModelResponse =\n    devfileResourceObjects.service &&\n    (await k8sCreate(\n      ServiceModel,\n      createService(formData, devfileResourceObjects.imageStream, devfileResourceObjects.service),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const routeResponse =\n    devfileResourceObjects.route &&\n    (await k8sCreate(\n      RouteModel,\n      createRoute(formData, devfileResourceObjects.imageStream, devfileResourceObjects.route),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const devfileResources = [\n    imageStreamResponse,\n    buildConfigResponse,\n    webhookSecretResponse,\n    deploymentResponse,\n  ];\n\n  serviceModelResponse && devfileResources.push(serviceModelResponse);\n  routeResponse && devfileResources.push(routeResponse);\n\n  return devfileResources;\n};\n\nexport const createOrUpdateResources = async (\n  t: TFunction,\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: {\n      strategy: buildStrategy,\n      triggers: { webhook: webhookTrigger },\n      option: buildOption,\n    },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    git: { url: repository, type: gitType, ref },\n    pipeline,\n    resources,\n  } = formData;\n  const imageStreamName = _.get(imageStream, 'metadata.name');\n  const originalRepository =\n    appResources?.buildConfig?.data?.spec?.source?.git?.uri ??\n    appResources?.pipeline?.data?.spec?.params?.find((param) => param?.name === 'GIT_REPO')\n      ?.default;\n  createNewProject && (await createProject(formData.project));\n\n  const responses: K8sResourceKind[] = [];\n  let generatedImageStreamName: string = '';\n  if (\n    resources === Resources.KnativeService &&\n    originalRepository &&\n    originalRepository !== repository\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  if (buildStrategy === BuildStrategyType.Devfile) {\n    if (verb !== 'create') {\n      throw new Error(t('devconsole~Cannot update Devfile resources'));\n    }\n    return createDevfileResources(formData, dryRun, appResources, generatedImageStreamName);\n  }\n\n  if (pipeline.type === PipelineType.PAC && formData?.pipeline?.enabled) {\n    const pacRepository = formData?.pac?.repository;\n    const labels = formData?.labels;\n    const repo = await createRepositoryResources(pacRepository, namespace, labels, dryRun);\n    responses.push(repo);\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  if (pipeline.enabled && pipeline.type !== PipelineType.PAC) {\n    if (!dryRun) {\n      const pipelineResources = await managePipelineResources(\n        formData,\n        appResources?.pipeline?.data,\n      );\n      responses.push(...pipelineResources);\n    }\n  } else if (buildOption === BuildOptions.BUILDS) {\n    responses.push(\n      await createOrUpdateBuildConfig(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.buildConfig?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    responses.push(\n      await createOrUpdateShipwrightBuild(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.shipwrightBuild?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  }\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n    if (webhookTrigger) {\n      responses.push(await createWebhookSecret(formData, imageStream, gitType, dryRun));\n    }\n  }\n\n  if (formData.resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          }\n        : {\n            ...originalAnnotations,\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    const knativeResources = await Promise.all([\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    ]);\n    return [...knativeResources, ...responses];\n  }\n\n  if (formData.resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  } else if (formData.resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  }\n\n  if (\n    !_.isEmpty(ports) ||\n    buildStrategy === BuildStrategyType.Docker ||\n    buildStrategy === BuildStrategyType.Source\n  ) {\n    const originalService = _.get(appResources, 'service.data');\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = _.get(appResources, 'route.data');\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n\nexport const filterDeployedResources = (resources: K8sResourceKind[]) =>\n  resources.filter(\n    (resource) =>\n      resource.kind === DeploymentModel.kind ||\n      resource.kind === DeploymentConfigModel.kind ||\n      (resource.kind === KnServiceModel.kind &&\n        resource.apiVersion === `${KnServiceModel.apiGroup}/${KnServiceModel.apiVersion}`),\n  );\n\nexport const addSearchParamsToRelativeURL = (\n  url: string,\n  searchParams?: URLSearchParams,\n): string => {\n  const urlObj = new URL(url, 'thismessage:/'); // ITEF RFC 2557 section 5 (e)\n\n  urlObj.search = new URLSearchParams({\n    ...Object.fromEntries(urlObj.searchParams),\n    ...(searchParams ? Object.fromEntries(searchParams) : {}),\n  }).toString();\n\n  return urlObj.toString().replace(urlObj.protocol, '');\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n  searchParamOverrides?: URLSearchParams,\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n\n  if (searchParamOverrides) {\n    history.push(addSearchParamsToRelativeURL(redirectURL, searchParamOverrides));\n  } else {\n    history.push(redirectURL);\n  }\n};\n\nexport const isRouteAdvOptionsUsed = (\n  type: string,\n  routeData: RouteData,\n  ksvcRouteData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && routeData) {\n    if (!!routeData.hostname || !!routeData.path || !routeData.secure) return true;\n    if (routeData?.tls) {\n      for (const tlsKey in routeData.tls) {\n        if (routeData.tls.hasOwnProperty(tlsKey)) {\n          if (\n            ['caCertificate', 'certificate', 'destinationCACertificate', 'key'].includes(tlsKey) &&\n            !!routeData.tls[tlsKey]\n          )\n            return true;\n          if (tlsKey === 'insecureEdgeTerminationPolicy' && routeData.tls[tlsKey] !== 'None')\n            return true;\n          if (tlsKey === 'termination' && routeData.tls[tlsKey] !== 'reencrypt') return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (ksvcRouteData.domainMapping?.length > 0) return true;\n  return false;\n};\n\nexport const isScalingAdvOptions = (\n  type: string,\n  scalingData: DeploymentData,\n  ksvcData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && scalingData?.replicas > 1) {\n    return true;\n  }\n  const ksvcScalingData = ksvcData?.scaling;\n  if (ksvcScalingData) {\n    for (const scKey in ksvcScalingData) {\n      if (ksvcScalingData.hasOwnProperty(scKey)) {\n        if (['concurrencylimit', 'maxpods', 'minpods'].includes(scKey) && !!ksvcScalingData[scKey])\n          return true;\n        if (\n          scKey === 'concurrencytarget' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencytarget\n        )\n          return true;\n        if (\n          scKey === 'concurrencyutilization' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencyutilization\n        )\n          return true;\n        if (scKey === 'autoscale' && ksvcScalingData[scKey]) {\n          const autoscaleData = ksvcScalingData[scKey];\n          for (const asKey in autoscaleData) {\n            if (autoscaleData.hasOwnProperty(asKey)) {\n              if (\n                asKey === 'autoscalewindow' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindow\n              )\n                return true;\n              if (\n                asKey === 'autoscalewindowUnit' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindowUnit\n              )\n                return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const isResourceLimitAdvOptions = (resLimits: LimitsData): boolean => {\n  const isLimitUsed = (resLimitObj) => {\n    for (const limitKey in resLimitObj) {\n      if (resLimitObj.hasOwnProperty(limitKey)) {\n        if (['limit', 'request'].includes(limitKey) && !!resLimitObj[limitKey]) return true;\n        if (limitKey === 'limitUnit' && resLimitObj[limitKey] !== resLimitObj.defaultLimitUnit)\n          return true;\n        if (limitKey === 'requestUnit' && resLimitObj[limitKey] !== resLimitObj.defaultRequestUnit)\n          return true;\n      }\n    }\n    return false;\n  };\n\n  if (isLimitUsed(resLimits.cpu) || isLimitUsed(resLimits.memory)) return true;\n  return false;\n};\n\nexport const getTelemetryImport = (values: GitImportFormData) => {\n  if (!values) return {};\n  // get devfile data if exists\n  let devfileJson;\n  if (values.devfile?.devfileContent) {\n    devfileJson = safeYAMLToJS(values.devfile.devfileContent);\n  }\n  const applicationType =\n    (!values.application?.selectedKey && values.application?.name) ||\n    values.application?.selectedKey === values.application?.name\n      ? 'default'\n      : values.application?.selectedKey === CREATE_APPLICATION_KEY && !!values.application?.name\n      ? 'custom'\n      : 'none';\n  const resourceType =\n    values.resources === Resources.Kubernetes\n      ? 'Deployment'\n      : values.resources === Resources.OpenShift\n      ? 'DeploymentConfig'\n      : values.resources === Resources.KnativeService && 'Knative Service';\n  const selStrategy = values.import?.selectedStrategy?.name;\n  const telemetryImportData = {\n    useRecommended: values.image?.recommended === values.image?.selected,\n    recommendedStrategy: values.import?.recommendedStrategy?.name,\n    recommendedBuilderImage: values.image?.recommended,\n    strategy: selStrategy,\n    builderImage: values.image?.selected,\n\n    devFileLanguage: devfileJson?.metadata?.projectType || '',\n    devFileProjectType: devfileJson?.metadata?.language || '',\n\n    application: applicationType,\n\n    resource: resourceType,\n\n    targetPortChanged: !!values.route?.unknownTargetPort,\n\n    // currently run command is being used only for Node app\n    useRunCommand: !!values.image?.imageEnv?.NPM_RUN,\n\n    useAdvancedOptionsGit: values.git.dir !== '/' || !!values.git.ref || !!values.git.secret,\n\n    useAdvancedOptionsBuild:\n      values.build?.env.length > 0 || _.some(values.build?.triggers, (key) => !key),\n    useAdvancedOptionsDeployment:\n      selStrategy !== 'Devfile' &&\n      (values.deployment?.env.length > 0 || !values.deployment?.triggers?.image),\n    useAdvancedOptionsRoute: isRouteAdvOptionsUsed(\n      values.resources,\n      values.route,\n      values.serverless,\n    ),\n    useAdvancedOptionsHealthChecks:\n      values.healthChecks?.livenessProbe?.enabled ||\n      values.healthChecks?.readinessProbe?.enabled ||\n      values.healthChecks?.startupProbe?.enabled,\n    useAdvancedOptionsScaling: isScalingAdvOptions(\n      values.resources,\n      values.deployment,\n      values.serverless,\n    ),\n    useAdvancedOptionsResourceLimits: isResourceLimitAdvOptions(values.limits),\n    useAdvancedOptionsLabels: !_.isEmpty(values.labels),\n  };\n\n  return telemetryImportData;\n};\n","import * as _ from 'lodash';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport {\n  NameValueFromPair,\n  NameValuePair,\n} from '@console/shared/src/components/formik-fields/field-types';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n  PIPELINE_STRATEGY_LABEL,\n} from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind, TektonParam, TektonWorkspace } from '../../../types';\nimport { VolumeTypes } from '../../pipelines/const';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getServerlessFunctionDefaultPersistentVolumeClaim,\n} from '../../pipelines/modals/common/utils';\nimport { submitStartPipeline } from '../../pipelines/modals/start-pipeline/submit-utils';\nimport { StartPipelineFormValues } from '../../pipelines/modals/start-pipeline/types';\nimport { createPipelineResource } from '../../pipelines/pipeline-resource/pipelineResource-utils';\nimport { PipelineData } from '../import-types';\n\nconst getImageUrl = (name: string, namespace: string) => {\n  return `image-registry.openshift-image-registry.svc:5000/${namespace}/${name}`;\n};\n\nexport const createGitResource = (url: string, namespace: string, ref: string = 'master') => {\n  const params = { url, revision: ref };\n  return createPipelineResource(params, 'git', namespace);\n};\n\nexport const createImageResource = (name: string, namespace: string) => {\n  const params = {\n    url: getImageUrl(name, namespace),\n  };\n\n  return createPipelineResource(params, 'image', namespace);\n};\n\nexport const getPipelineParams = (\n  params: TektonParam[],\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: any,\n) => {\n  return (params || []).map((param) => {\n    switch (param.name) {\n      case 'APP_NAME':\n        return { ...param, default: name };\n      case 'GIT_REPO':\n        return { ...param, default: gitUrl };\n      case 'GIT_REVISION':\n        return { ...param, default: gitRef || '' };\n      case 'PATH_CONTEXT':\n        return { ...param, default: gitDir.replace(/^\\//, '') || param.default };\n      case 'IMAGE_NAME':\n        return { ...param, default: getImageUrl(name, namespace) };\n      case 'DOCKERFILE':\n        return { ...param, default: dockerfilePath };\n      case 'VERSION':\n        return { ...param, default: tag || param.default };\n      case 'BUILD_ENVS':\n        return { ...param, default: buildEnv || param.default };\n      default:\n        return param;\n    }\n  });\n};\n\nexport const pipelineRuntimeOrVersionChanged = (\n  template: PipelineKind,\n  pipeline: PipelineKind,\n): boolean =>\n  template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_LABEL] ||\n  template.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL];\n\nexport const isDockerPipeline = (template: PipelineKind): boolean =>\n  template?.metadata?.labels?.[PIPELINE_STRATEGY_LABEL] === 'docker';\n\nexport const createPipelineForImportFlow = async (\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  pipeline: PipelineData,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n) => {\n  const template = _.cloneDeep(pipeline.template);\n\n  template.metadata = {\n    name: `${name}`,\n    namespace,\n    labels: {\n      ...template.metadata?.labels,\n      ...labels,\n      'app.kubernetes.io/instance': name,\n      'app.kubernetes.io/name': name,\n      ...(!isDockerPipeline(template) && {\n        [PIPELINE_RUNTIME_VERSION_LABEL]: tag,\n      }),\n    },\n  };\n\n  template.spec.params =\n    template.spec.params &&\n    getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n\n  return k8sCreate(PipelineModel, template, { ns: namespace });\n};\n\nexport const createPipelineRunForImportFlow = async (\n  pipeline: PipelineKind,\n): Promise<PipelineRunKind> => {\n  const isServerlessFunctionPipeline =\n    pipeline?.metadata?.labels?.['function.knative.dev'] === 'true';\n  const pipelineInitialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n      ...workspace,\n      type: VolumeTypes.VolumeClaimTemplate,\n      data: isServerlessFunctionPipeline\n        ? getServerlessFunctionDefaultPersistentVolumeClaim(pipeline?.metadata?.name)\n        : getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n    })),\n    secretOpen: false,\n  };\n  return submitStartPipeline(pipelineInitialValues, pipeline);\n};\nexport const updatePipelineForImportFlow = async (\n  pipeline: PipelineKind,\n  template: PipelineKind,\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n): Promise<PipelineKind> => {\n  let updatedPipeline = _.cloneDeep(pipeline);\n\n  if (!template) {\n    updatedPipeline.metadata.labels = _.omit(\n      { ...updatedPipeline.metadata.labels, ...labels },\n      'app.kubernetes.io/instance',\n    );\n  } else {\n    if (pipelineRuntimeOrVersionChanged(template, pipeline)) {\n      updatedPipeline = _.cloneDeep(template);\n      updatedPipeline.metadata = {\n        resourceVersion: pipeline.metadata.resourceVersion,\n        name: `${name}`,\n        namespace,\n        labels: {\n          ...template.metadata?.labels,\n          ...labels,\n          'app.kubernetes.io/instance': name,\n          'app.kubernetes.io/name': name,\n          ...(!isDockerPipeline(template) && { [PIPELINE_RUNTIME_VERSION_LABEL]: tag }),\n        },\n      };\n    }\n\n    updatedPipeline.spec.params = getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n  }\n  return k8sUpdate(PipelineModel, updatedPipeline, namespace, name);\n};\n","import * as _ from 'lodash';\nimport { getProbesData } from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport {\n  DeployImageFormData,\n  GitImportFormData,\n  UploadJarFormData,\n} from '@console/dev-console/src/components/import/import-types';\nimport { getAppLabels, mergeData } from '@console/dev-console/src/utils/resource-label-utils';\nimport { ImportStrategy } from '@console/git-service/src';\nimport {\n  K8sResourceKind,\n  ImagePullPolicy,\n  k8sGet,\n  k8sCreate,\n  k8sUpdate,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { NameValuePair } from 'packages/console-shared/src';\nimport { ServiceModel, DomainMappingModel } from '../models';\nimport { DomainMappingResponse, DomainMappingResponseAction } from '../types';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\nexport const getKnativeServiceDepResource = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamUrl: string,\n  imageStreamName?: string,\n  imageStreamTag?: string,\n  imageNamespace?: string,\n  annotations?: { [name: string]: string },\n  originalKnativeService?: K8sResourceKind,\n  generatedImageStreamName?: string,\n): K8sResourceKind => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    runtimeIcon,\n    serverless: { scaling },\n    limits,\n    route: { unknownTargetPort, create, defaultUnknownPort },\n    labels,\n    image: { tag: imageTag },\n    deployment: {\n      env,\n      triggers: { image: imagePolicy },\n    },\n    healthChecks,\n    resources,\n    formType,\n  } = formData;\n  const { fileUpload } = formData as UploadJarFormData;\n  const selectedStrategy = formData?.import?.selectedStrategy;\n\n  const contTargetPort = parseInt(unknownTargetPort, 10) || defaultUnknownPort;\n  const imgPullPolicy = imagePolicy ? ImagePullPolicy.Always : ImagePullPolicy.IfNotPresent;\n  const {\n    concurrencylimit,\n    concurrencytarget,\n    minpods,\n    maxpods,\n    autoscale: { autoscalewindow, autoscalewindowUnit },\n    concurrencyutilization,\n  } = scaling;\n  const {\n    cpu: {\n      request: cpuRequest,\n      requestUnit: cpuRequestUnit,\n      limit: cpuLimit,\n      limitUnit: cpuLimitUnit,\n    },\n    memory: {\n      request: memoryRequest,\n      requestUnit: memoryRequestUnit,\n      limit: memoryLimit,\n      limitUnit: memoryLimitUnit,\n    },\n  } = limits;\n  const defaultLabel = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag: imageStreamTag || imageTag,\n    namespace: imageNamespace,\n    runtimeIcon,\n  });\n  delete defaultLabel.app;\n  if (fileUpload) {\n    const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n    if (jArgsIndex !== -1) {\n      if (fileUpload.javaArgs !== '') {\n        (env[jArgsIndex] as NameValuePair).value = fileUpload.javaArgs;\n      } else {\n        env.splice(jArgsIndex, 1);\n      }\n    } else if (fileUpload.javaArgs !== '') {\n      env.push({ name: 'JAVA_ARGS', value: fileUpload.javaArgs });\n    }\n  }\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n        ...labels,\n        ...(formType === 'serverlessFunction' && { 'function.knative.dev': 'true' }),\n        ...(!create && { 'networking.knative.dev/visibility': `cluster-local` }),\n        ...(((formData as GitImportFormData).pipeline?.enabled || generatedImageStreamName) && {\n          'app.kubernetes.io/name': name,\n        }),\n        ...(selectedStrategy &&\n          selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION && {\n            'function.knative.dev': 'true',\n          }),\n      },\n      annotations: fileUpload ? { ...annotations, jarFileName: fileUpload.name } : annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: {\n            ...defaultLabel,\n            ...labels,\n            'app.kubernetes.io/name': generatedImageStreamName\n              ? formData.name\n              : labels['app.kubernetes.io/name'],\n          },\n          annotations: {\n            ...(concurrencytarget && {\n              'autoscaling.knative.dev/target': `${concurrencytarget}`,\n            }),\n            ...(minpods && { 'autoscaling.knative.dev/min-scale': `${minpods}` }),\n            ...(maxpods && { 'autoscaling.knative.dev/max-scale': `${maxpods}` }),\n            ...(autoscalewindow && {\n              'autoscaling.knative.dev/window': `${autoscalewindow}${autoscalewindowUnit}`,\n            }),\n            ...(concurrencyutilization && {\n              'autoscaling.knative.dev/target-utilization-percentage': `${concurrencyutilization}`,\n            }),\n          },\n        },\n        spec: {\n          ...(concurrencylimit && { containerConcurrency: concurrencylimit }),\n          containers: [\n            {\n              name,\n              image: `${imageStreamUrl}`,\n              ...(contTargetPort && {\n                ports: [\n                  {\n                    containerPort: contTargetPort,\n                  },\n                ],\n              }),\n              imagePullPolicy: imgPullPolicy,\n              securityContext: {\n                allowPrivilegeEscalation: false,\n                capabilities: {\n                  drop: ['ALL'],\n                },\n                runAsNonRoot: true,\n                seccompProfile: {\n                  type: 'RuntimeDefault',\n                },\n              },\n              env,\n              resources: {\n                ...((cpuLimit || memoryLimit) && {\n                  limits: {\n                    ...(cpuLimit && { cpu: `${cpuLimit}${cpuLimitUnit}` }),\n                    ...(memoryLimit && { memory: `${memoryLimit}${memoryLimitUnit}` }),\n                  },\n                }),\n                ...((cpuRequest || memoryRequest) && {\n                  requests: {\n                    ...(cpuRequest && { cpu: `${cpuRequest}${cpuRequestUnit}` }),\n                    ...(memoryRequest && { memory: `${memoryRequest}${memoryRequestUnit}` }),\n                  },\n                }),\n              },\n              ...getProbesData(healthChecks, resources),\n            },\n          ],\n        },\n      },\n    },\n  };\n  let knativeServiceUpdated = {};\n  if (!_.isEmpty(originalKnativeService)) {\n    knativeServiceUpdated = _.omit(originalKnativeService, [\n      'status',\n      'spec.template.metadata.name',\n      'spec.template.spec.containers',\n    ]);\n  }\n  const knativeDeployResource = mergeData(knativeServiceUpdated || {}, newKnativeDeployResource);\n\n  return knativeDeployResource;\n};\n\nconst getDomainMappingDeleteList = (\n  ksvcName: string,\n  allDomainMapping: K8sResourceKind[],\n  selDomainMappingNames: string[],\n): DomainMappingResponse[] => {\n  return allDomainMapping\n    .filter((dmRes) => dmRes.spec?.ref?.name === ksvcName)\n    .filter((dmSvc) => !selDomainMappingNames?.includes(dmSvc.metadata.name))\n    .map((dmDel) => ({\n      action: DomainMappingResponseAction.Delete,\n      resource: dmDel,\n    }));\n};\n\nconst formDomainMappingStruct = (\n  name: string,\n  knativeSvcResource: K8sResourceKind,\n  curDomainMapping?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    kind,\n    apiVersion,\n    metadata: { name: svcName, namespace },\n  } = knativeSvcResource;\n  return {\n    ...(curDomainMapping\n      ? { ...curDomainMapping }\n      : {\n          kind: DomainMappingModel.kind,\n          apiVersion: `${DomainMappingModel.apiGroup}/${DomainMappingModel.apiVersion}`,\n          metadata: {\n            name,\n            namespace,\n          },\n        }),\n    spec: {\n      ref: {\n        name: svcName,\n        kind,\n        apiVersion,\n      },\n    },\n  };\n};\n\nexport const getDomainMappingResources = (\n  knativeSvcResource: K8sResourceKind,\n  selectedDomainMapping: string[],\n): Promise<DomainMappingResponse[]> => {\n  const {\n    metadata: { name, namespace },\n  } = knativeSvcResource;\n  const domainMappingResources = [];\n  return k8sGet(DomainMappingModel, null, namespace)\n    .then((res) => {\n      const allDomainMappingList = res.items;\n      if (!selectedDomainMapping?.length && !allDomainMappingList?.length) {\n        return Promise.resolve([]);\n      }\n\n      // form domain mapping to be deleted\n      const dmDeleteList = getDomainMappingDeleteList(\n        name,\n        allDomainMappingList,\n        selectedDomainMapping,\n      );\n      domainMappingResources.push(...dmDeleteList);\n\n      // form domain mapping to be created or updated\n      const dmCreateUpdateList = selectedDomainMapping.map((domainName) => {\n        const curDomainMapping = allDomainMappingList.find(\n          (curDomain) => curDomain.metadata.name === domainName,\n        );\n        let domainMappingResourceData: DomainMappingResponse;\n        if (curDomainMapping) {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Update,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource, curDomainMapping),\n          };\n        } else {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Create,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource),\n          };\n        }\n        return domainMappingResourceData;\n      });\n      domainMappingResources.push(...dmCreateUpdateList);\n\n      return domainMappingResources;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to get domain mapping resources', err);\n      return domainMappingResources;\n    });\n};\n\nexport const getDomainMappingRequests = async (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  knativeSvcResource: K8sResourceKind,\n  dryRun: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const {\n    serverless: { domainMapping: selectedDomainMapping = [] },\n  } = formData;\n  const domainMappingResources = await getDomainMappingResources(knativeSvcResource, [\n    ...new Set(selectedDomainMapping.map((dm) => dm.replace(/ *\\([^)]*\\) */g, ''))),\n  ]);\n  const requests: Promise<K8sResourceKind>[] = [];\n  domainMappingResources.length &&\n    domainMappingResources.forEach(({ action, resource: dmRes }) => {\n      switch (action) {\n        case DomainMappingResponseAction.Create:\n          requests.push(k8sCreate(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Update:\n          requests.push(k8sUpdate(DomainMappingModel, dmRes, null, null, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Delete:\n          requests.push(k8sKill(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        default:\n          break;\n      }\n    });\n  return requests;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\n/**\n * ConsoleSample is an extension to customizing OpenShift web console by adding samples.\n */\nexport type ConsoleSample = K8sResourceCommon & {\n  spec: ConsoleSampleSpec;\n};\n\n/**\n * ConsoleSampleSpec is the desired sample for the web console.\n * Samples will appear with their title, descriptions and a badge in a samples catalog.\n */\nexport type ConsoleSampleSpec = {\n  /**\n   * title is the display name of the sample.\n   *\n   * It is required and must be no more than 50 characters in length.\n   */\n  title: string;\n  /**\n   * abstract is a short introduction to the sample.\n   *\n   * It is required and must be no more than 100 characters in length.\n   *\n   * The abstract is shown on the sample card tile below the title and provider\n   * and is limited to three lines of content.\n   */\n  abstract: string;\n  /**\n   * description is a long form explanation of the sample.\n   *\n   * It is required and can have a maximum length of **4096** characters.\n   *\n   * It is a README.md-like content for additional information, links, pre-conditions, and other instructions.\n   * It will be rendered as Markdown so that it can contain line breaks, links, and other simple formatting.\n   */\n  description: string;\n  /**\n   * icon is an optional base64 encoded image and shown beside the sample title.\n   *\n   * The format must follow the [data: URL format](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs)\n   * and can have a maximum size of **10 KB**.\n   *\n   * `data:[<mediatype>][;base64],<base64 encoded image>`\n   *\n   * For example:\n   *\n   * `data:image;base64,` plus the base64 encoded image.\n   *\n   * Vector images can also be used. SVG icons must start with:\n   *\n   * `data:image/svg+xml;base64,` plus the base64 encoded SVG image.\n   *\n   * All sample catalog icons will be shown on a white background (also when the dark theme is used).\n   * The web console ensures that different aspect ratios work correctly.\n   * Currently, the surface of the icon is at most 40x100px.\n   */\n  icon?: string;\n  /**\n   * type is an optional label to group multiple samples.\n   *\n   * It is optional and must be no more than 20 characters in length.\n   *\n   * Recommendation is a singular term like \"Builder Image\", \"Devfile\" or \"Serverless Function\".\n   *\n   * Currently, the type is shown a badge on the sample card tile in the top right corner.\n   */\n  type?: string;\n  /**\n   * provider is an optional label to honor who provides the sample.\n   *\n   * It is optional and must be no more than 50 characters in length.\n   *\n   * A provider can be a company like \"Red Hat\" or an organization like \"CNCF\" or \"Knative\".\n   *\n   * Currently, the provider is only shown on the sample card tile below the title with the prefix \"Provided by \"\n   */\n  provider?: string;\n  /**\n   * tags are optional string values that can be used to find samples in the samples catalog.\n   *\n   * Examples of common tags may be \"Java\", \"Quarkus\", etc.\n   *\n   * They will be displayed on the samples details page.\n   */\n  tags?: string[];\n  /**\n   * source defines where to deploy the sample service from.\n   * The sample may be sourced from an external git repository or container image.\n   */\n  source: ConsoleSampleSource;\n};\n\n/**\n * Union of the sample source types.\n * Unsupported samples types will be ignored in the web console.\n */\nexport type ConsoleSampleSource = ConsoleSampleGitImportSource | ConsoleSampleContainerImportSource;\n\n/** ConsoleSampleGitImportSource allows the user to import code from a git repository. */\nexport type ConsoleSampleGitImportSource = {\n  type: 'GitImport';\n  gitImport: {\n    /** repository contains the reference to the actual Git repository.. */\n    repository: ConsoleSampleGitImportSourceRepository;\n    /** service contains configuration for the Service resource created for this sample. */\n    service?: ConsoleSampleGitImportSourceService;\n  };\n};\n\n/** ConsoleSampleGitImportSourceRepository contains the reference to the actual Git repository. */\nexport type ConsoleSampleGitImportSourceRepository = {\n  /**\n   * url of the Git repository that contains a HTTP service.\n   * The HTTP service must be exposed on the default port (8080) unless\n   * otherwise configured with the port field.\n   *\n   * Only public repositories on GitHub, GitLab and Bitbucket are currently supported:\n   *\n   *   - https://github.com/<org>/<repository>\n   *   - https://gitlab.com/<org>/<repository>\n   *   - https://bitbucket.org/<org>/<repository>\n   *\n   * The url must have a maximum length of 256 characters.\n   */\n  url: string;\n  /**\n   * revision is the git revision at which to clone the git repository\n   * Can be used to clone a specific branch, tag or commit SHA.\n   * Must be at most 256 characters in length.\n   * When omitted the repository's default branch is used.\n   */\n  revision?: string;\n  /**\n   * contextDir is used to specify a directory within the repository to build the\n   * component.\n   * Must start with `/` and have a maximum length of 256 characters.\n   * When omitted, the default value is to build from the root of the repository.\n   */\n  contextDir?: string;\n};\n\n/**\n * ConsoleSampleGitImportSourceService allows the samples author define defaults\n * for the Service created for this sample\n */\nexport type ConsoleSampleGitImportSourceService = {\n  /**\n   * targetPort is the port that the service listens on for HTTP requests.\n   * This port will be used for Service created for this sample.\n   * Port must be in the range 1 to 65535.\n   * Default port is 8080.\n   */\n  targetPort?: number;\n};\n\n/** ConsoleSampleContainerImportSource allows the user import a container image. */\nexport type ConsoleSampleContainerImportSource = {\n  type: 'ContainerImport';\n  containerImport: {\n    /**\n     * reference to a container image that provides a HTTP service.\n     * The service must be exposed on the default port (8080) unless\n     * otherwise configured with the port field.\n     *\n     * Supported formats:\n     *   - <repository-name>/<image-name>\n     *   - docker.io/<repository-name>/<image-name>\n     *   - quay.io/<repository-name>/<image-name>\n     *   - quay.io/<repository-name>/<image-name>@sha256:<image hash>\n     *   - quay.io/<repository-name>/<image-name>:<tag>\n     */\n    image: string;\n    /** service contains configuration for the Service resource created for this sample. */\n    service?: ConsoleSampleContainerImportSourceService;\n  };\n};\n\n/**\n * ConsoleSampleContainerImportSourceService allows the samples author define defaults\n * for the Service created for this sample\n */\nexport type ConsoleSampleContainerImportSourceService = {\n  /**\n   * targetPort is the port that the service listens on for HTTP requests.\n   * This port will be used for Service created for this sample.\n   * Port must be in the range 1 to 65535.\n   * Default port is 8080.\n   */\n  targetPort?: number;\n};\n\nexport function isGitImportSource(\n  source: ConsoleSampleSource,\n): source is ConsoleSampleGitImportSource {\n  return source?.type === 'GitImport' && !!source.gitImport?.repository?.url;\n}\n\nexport function isContainerImportSource(\n  source: ConsoleSampleSource,\n): source is ConsoleSampleContainerImportSource {\n  return source?.type === 'ContainerImport' && !!source.containerImport?.image;\n}\n","import { createContext } from 'react';\nimport * as _ from 'lodash';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  ContainerSpec,\n  referenceFor,\n  modelFor,\n} from '@console/internal/module/k8s';\nimport { getResourcesType } from '../edit-application/edit-application-utils';\nimport { getProbesData } from './create-health-checks-probe-utils';\nimport { HealthChecksProbeType } from './health-checks-types';\n\nexport const updateHealthChecksProbe = (\n  values,\n  resource: K8sResourceKind,\n  container: ContainerSpec,\n): K8sResourceKind => {\n  const {\n    healthChecks: { readinessProbe, livenessProbe, startupProbe },\n    containerName,\n    healthChecks,\n  } = values;\n  const updatedResource = _.cloneDeep(resource);\n  const containerIndex = _.findIndex(updatedResource.spec.template.spec.containers, [\n    'name',\n    containerName,\n  ]);\n  updatedResource.spec.template.spec.containers[containerIndex] = {\n    ...container,\n    ...getProbesData(healthChecks, getResourcesType(resource)),\n  };\n\n  if (!readinessProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.ReadinessProbe}`,\n    );\n  }\n\n  if (!livenessProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.LivenessProbe}`,\n    );\n  }\n\n  if (!startupProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.StartupProbe}`,\n    );\n  }\n\n  return updatedResource;\n};\n\ntype HealthCheckContextType = {\n  viewOnly: boolean;\n};\n\nexport const HealthCheckContext = createContext<HealthCheckContextType>({ viewOnly: false });\n\nexport const useViewOnlyAccess = (resource: K8sResourceKind): boolean => {\n  const model = modelFor(referenceFor(resource));\n  const hasEditAccess = useAccessReview({\n    group: model.apiGroup,\n    resource: model.plural,\n    name: resource.metadata.name,\n    namespace: resource.metadata.namespace,\n    verb: 'update',\n  });\n  return !hasEditAccess;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import * as _ from 'lodash';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  GitImportFormData,\n  DeployImageFormData,\n  UploadJarFormData,\n} from '../components/import/import-types';\nimport { makePortName } from './imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  mergeData,\n} from './resource-label-utils';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\n\nconst isDeployImageFormData = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n): formData is DeployImageFormData => {\n  return 'isi' in (formData as DeployImageFormData);\n};\n\nexport const createService = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalService?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    image: { ports: imagePorts, tag: selectedTag },\n    route: { unknownTargetPort, defaultUnknownPort },\n    resources,\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(resources, name);\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    ports = [port];\n  } else if (\n    buildStrategy === BuildStrategyType.Devfile &&\n    !_.isEmpty(originalService?.spec?.ports)\n  ) {\n    ports = [\n      ...originalService.spec.ports.map((port) => ({\n        name: port.name,\n        containerPort: port.port,\n        protocol: 'TCP',\n      })),\n    ];\n  } else if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  } else if (_.isEmpty(ports)) {\n    const port = { containerPort: defaultUnknownPort, protocol: 'TCP' };\n    ports = [port];\n  }\n  if (\n    unknownTargetPort &&\n    !ports.some((port) => unknownTargetPort === port.containerPort.toString())\n  ) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    const existingRouteTargetPort = originalRoute?.spec?.port?.targetPort;\n    ports = [...ports.filter((p) => p.containerPort !== defaultUnknownPort), port];\n\n    if (existingRouteTargetPort) {\n      ports = [...ports.filter((p) => p.containerPort !== existingRouteTargetPort), port];\n    }\n  }\n\n  const newService: any = {\n    kind: 'Service',\n    apiVersion: 'v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...defaultAnnotations },\n    },\n    spec: {\n      selector: podLabels,\n      ports: _.map(ports, (port) => ({\n        port: port.containerPort,\n        targetPort: port.containerPort,\n        protocol: port.protocol,\n        // Use the same naming convention as CLI new-app.\n        name: port.name || makePortName(port),\n      })),\n    },\n  };\n\n  const service = mergeData(originalService, newService);\n\n  return service;\n};\n\nexport const createRoute = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    route: {\n      hostname,\n      unknownTargetPort,\n      defaultUnknownPort,\n      secure,\n      path,\n      tls,\n      labels: routeLabels,\n    },\n    image: { ports: imagePorts, tag: selectedTag },\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  }\n\n  let targetPort: string;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    targetPort = makePortName({\n      containerPort: _.toInteger(unknownTargetPort),\n      protocol: 'TCP',\n    });\n  } else if (buildStrategy === BuildStrategyType.Devfile) {\n    targetPort = originalRoute?.spec?.port?.targetPort;\n  } else if (unknownTargetPort) {\n    targetPort = makePortName({ containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' });\n  } else {\n    targetPort = makePortName({\n      containerPort: ports[0]?.containerPort || defaultUnknownPort,\n      protocol: 'TCP',\n    });\n  }\n\n  const newRoute: any = {\n    kind: 'Route',\n    apiVersion: 'route.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, ...routeLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      to: {\n        kind: 'Service',\n        name,\n      },\n      tls: secure ? tls : null,\n      host: hostname,\n      path,\n      // The service created by `createService` uses the same port as the container port.\n      port: {\n        // Use the port name, not the number for targetPort. The router looks\n        // at endpoints, not services, when resolving ports, so port numbers\n        // will not resolve correctly if the service port and container port\n        // numbers don't match.\n        targetPort,\n      },\n      wildcardPolicy: 'None',\n    },\n  };\n\n  const route = mergeData(originalRoute, newRoute);\n\n  return route;\n};\n","import { getGroupVersionKindForModel } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { k8sGetResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleSampleModel } from '../models/samples';\nimport {\n  ConsoleSample,\n  ConsoleSampleGitImportSourceRepository,\n  isContainerImportSource,\n  isGitImportSource,\n} from '../types/samples';\n\nconst LOCALIZATION_NAME_LABEL = 'console.openshift.io/name';\nconst LOCALIZATION_LANGUAGE_LABEL = 'console.openshift.io/lang';\nconst LOCALIZATION_COUNTRY_LABEL = 'console.openshift.io/country';\n\nexport const createSampleLink = (sample: ConsoleSample, activeNamespace: string): string | null => {\n  if (isGitImportSource(sample.spec.source)) {\n    const { gitImport } = sample.spec.source;\n    const searchParams = new URLSearchParams();\n    searchParams.set('formType', 'sample');\n    searchParams.set('sample', sample.metadata.name);\n    searchParams.set('git.repository', gitImport.repository.url);\n    if (gitImport.repository.revision) {\n      searchParams.set('git.revision', gitImport.repository.revision);\n    }\n    if (gitImport.repository.contextDir) {\n      searchParams.set('git.contextDir', gitImport.repository.contextDir);\n    }\n    return `/import/ns/${activeNamespace}?${searchParams}`;\n  }\n\n  if (isContainerImportSource(sample.spec.source)) {\n    const { containerImport } = sample.spec.source;\n    const searchParams = new URLSearchParams();\n    searchParams.set('sample', sample.metadata.name);\n    searchParams.set('image', containerImport.image);\n    return `/deploy-image/ns/${activeNamespace}?${searchParams}`;\n  }\n\n  // Unsupported source type, will be dropped.\n  return null;\n};\n\nexport const getGitImportSample = (): {\n  sampleName: string;\n  repository: ConsoleSampleGitImportSourceRepository;\n} => {\n  const searchParams = new URLSearchParams(window.location.search);\n  return {\n    sampleName: searchParams.get('sample'),\n    repository: {\n      url: searchParams.get('git.repository'),\n      revision: searchParams.get('git.revision'),\n      contextDir: searchParams.get('git.contextDir'),\n    },\n  };\n};\n\nexport const getContainerImportSample = () => {\n  const searchParams = new URLSearchParams(window.location.search);\n  return {\n    sampleName: searchParams.get('sample'),\n    image: searchParams.get('image'),\n  };\n};\n\nexport const hasSampleQueryParameter = () => {\n  return !!new URLSearchParams(window.location.search).get('sample');\n};\n\nexport const groupConsoleSamplesByName = (samples: ConsoleSample[]) => {\n  return samples.reduce<Record<string, ConsoleSample[]>>((grouped, consoleSample) => {\n    const name =\n      consoleSample.metadata.labels?.[LOCALIZATION_NAME_LABEL] || consoleSample.metadata.name;\n    if (!grouped[name]) grouped[name] = [];\n    grouped[name].push(consoleSample);\n    return grouped;\n  }, {});\n};\n\n/**\n * Returns the samples with the best localization match, for the given\n * preferred language and preferred country. It prefers a match in this order:\n *\n * 1. Sample language and country are equal to the preferred language and country.\n *    This includes sample without language (fallbacks to en) and no country.\n *\n * 2. Sample language is equal to the preferred language.\n *    1. And the sample has no country defined.  (eg, select en sample is used for en-CA and en-GB)\n *    2. Any country is defined.                 (eg, select en-CA sample is used for en-GB)\n *\n * 3. Fallback to an english sample\n *    (Sample language is en OR sample language is not defined):\n *    1. Same country  (use en-CA sample if preference is fr-CA)\n *    2. No country\n *    3. Any country   (use en-CA sample if preference is en-US)\n */\nexport const getBestMatch = (samples: ConsoleSample[], language: string): ConsoleSample | null => {\n  if (!samples || !samples.length) {\n    return null;\n  }\n  const preferredLanguage = (language || 'en').split('-')[0].toLowerCase();\n  const preferredCountry = ((language || '').split('-')[1] || '').toUpperCase();\n\n  let sameLanguageWithoutCountry: ConsoleSample = null;\n  let sameLanguageWithAnyCountry: ConsoleSample = null;\n  let fallbackLanguageSameCountry: ConsoleSample = null;\n  let fallbackLanguageNoCountry: ConsoleSample = null;\n  let fallbackLanguageAnyCountry: ConsoleSample = null;\n\n  for (const sample of samples) {\n    const sampleLanguage = (\n      sample.metadata?.labels?.[LOCALIZATION_LANGUAGE_LABEL] || 'en'\n    ).toLowerCase();\n    const sampleCountry = (\n      sample.metadata?.labels?.[LOCALIZATION_COUNTRY_LABEL] || ''\n    ).toUpperCase();\n\n    if (sampleLanguage === preferredLanguage && sampleCountry === preferredCountry) {\n      return sample;\n    }\n    if (sampleLanguage === preferredLanguage) {\n      if (!sampleCountry && !sameLanguageWithoutCountry) {\n        sameLanguageWithoutCountry = sample;\n      } else if (sampleCountry && !sameLanguageWithAnyCountry) {\n        sameLanguageWithAnyCountry = sample;\n      }\n    }\n    if (sampleLanguage === 'en') {\n      if (sampleCountry === preferredCountry && !fallbackLanguageSameCountry) {\n        fallbackLanguageSameCountry = sample;\n      } else if (!sampleCountry && !fallbackLanguageNoCountry) {\n        fallbackLanguageNoCountry = sample;\n      } else if (!fallbackLanguageAnyCountry) {\n        fallbackLanguageAnyCountry = sample;\n      }\n    }\n  }\n  return (\n    sameLanguageWithoutCountry ||\n    sameLanguageWithAnyCountry ||\n    fallbackLanguageSameCountry ||\n    fallbackLanguageNoCountry ||\n    fallbackLanguageAnyCountry\n  );\n};\n\nexport const useSamples = () => {\n  return useK8sWatchResource<ConsoleSample[]>({\n    isList: true,\n    groupVersionKind: getGroupVersionKindForModel(ConsoleSampleModel),\n  });\n};\n\nexport const getSample = (name: string): Promise<ConsoleSample> =>\n  k8sGetResource({ model: ConsoleSampleModel, name });\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import * as React from 'react';\nimport { useSize } from '@patternfly/react-topology';\nimport cx from 'classnames';\nimport { get } from 'lodash';\nimport { modelFor, kindToAbbr } from '@console/internal/module/k8s';\nimport './SvgResourceIcon.scss';\n\ninterface ResourceIconProps {\n  x: number;\n  y: number;\n  kind: string;\n  leftJustified?: boolean;\n}\n\nfunction getKindStringAndAbbreviation(kind: string) {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n}\n\nconst ForwardSvgResourceIcon: React.FC<ResourceIconProps> = (\n  { kind, x, y, leftJustified },\n  iconRef,\n) => {\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(kind);\n  const [textSize, textRef] = useSize([]);\n\n  let rect = null;\n  let paddingX = 0;\n  let paddingY = 0;\n  let width = 0;\n  let height = 0;\n\n  if (textSize) {\n    ({ height, width } = textSize);\n    paddingX = height / 2;\n    paddingY = height / 14;\n    height += paddingY * 2;\n    rect = (\n      <rect\n        fill={kindColor}\n        ref={iconRef}\n        x={x - (leftJustified ? 0 : paddingX + width / 2)}\n        width={textSize.width + paddingX * 2}\n        y={y - (leftJustified ? 0 : paddingY + textSize.height / 2)}\n        height={height}\n        rx={height / 2}\n        ry={height / 2}\n      />\n    );\n  }\n\n  return (\n    <g\n      className={cx('odc-resource-icon', {\n        [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n      })}\n      data-test={`icon ${kindStr.toLowerCase()}`}\n    >\n      {rect}\n      <title>{kindStr}</title>\n      <text\n        ref={textRef}\n        x={x + (leftJustified ? paddingX + width / 2 : 0)}\n        y={y + (leftJustified ? (paddingY + height) / 2 : 0)}\n        textAnchor=\"middle\"\n        dy=\"0.35em\"\n      >\n        {kindAbbr}\n      </text>\n    </g>\n  );\n};\n\nconst SvgResourceIcon = React.forwardRef(ForwardSvgResourceIcon);\nexport { SvgResourceIcon as default, getKindStringAndAbbreviation };\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { hasIcon } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentConfigModel, DeploymentModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  referenceFor,\n  referenceForModel,\n  ImagePullPolicy,\n} from '@console/internal/module/k8s';\nimport {\n  KNATIVE_AUTOSCALEWINDOW_ANNOTATION,\n  KNATIVE_CONCURRENCYTARGET_ANNOTATION,\n  KNATIVE_CONCURRENCYUTILIZATION_ANNOTATION,\n  KNATIVE_MAXSCALE_ANNOTATION,\n  KNATIVE_MINSCALE_ANNOTATION,\n  PRIVATE_KNATIVE_SERVING_LABEL,\n  ServiceModel,\n} from '@console/knative-plugin';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { isDockerPipeline } from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { defaultRepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/consts';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n} from '@console/pipelines-plugin/src/const';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { getLimitsDataFromResource } from '@console/shared/src';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport { RegistryType } from '../../utils/imagestream-utils';\nimport { getHealthChecksData } from '../health-checks/create-health-checks-probe-utils';\nimport { deployValidationSchema } from '../import/deployImage-validation-utils';\nimport {\n  Resources,\n  DeploymentData,\n  GitReadableTypes,\n  ServerlessData,\n  BuildOptions,\n  BuildData,\n} from '../import/import-types';\nimport {\n  detectGitType,\n  validationSchema as importValidationSchema,\n} from '../import/import-validation-utils';\nimport { getAutoscaleWindow } from '../import/serverless/serverless-utils';\nimport { validationSchema as jarValidationSchema } from '../import/upload-jar-validation-utils';\nimport { AppResources } from './edit-application-types';\n\nexport enum ApplicationFlowType {\n  Git = 'Import from Git',\n  Dockerfile = 'Import from Dockerfile',\n  Container = 'Deploy Image',\n  JarUpload = 'Upload JAR file',\n}\n\nexport const getFlowTypePageTitle = (flowType: ApplicationFlowType): string => {\n  switch (flowType) {\n    case ApplicationFlowType.Git:\n      // t('devconsole~Import from Git')\n      return 'devconsole~Import from Git';\n    case ApplicationFlowType.Dockerfile:\n      // t('devconsole~Import from Dockerfile')\n      return 'devconsole~Import from Dockerfile';\n    case ApplicationFlowType.Container:\n      // t('devconsole~Deploy Image')\n      return 'devconsole~Deploy Image';\n    case ApplicationFlowType.JarUpload:\n      // t('devconsole~Upload JAR file')\n      return 'devconsole~Upload JAR file';\n    default:\n      return flowType;\n  }\n};\n\nexport enum BuildSourceType {\n  Git = 'Git',\n  Binary = 'Binary',\n}\n\nconst isFromJarUpload = (type: string): boolean => type === BuildSourceType.Binary;\n\nconst getBuildSourceType = (buildConfig: K8sResourceKind): string =>\n  buildConfig?.spec?.source?.type;\n\nexport const getResourcesType = (resource: K8sResourceKind): Resources => {\n  switch (resource.kind) {\n    case DeploymentConfigModel.kind:\n      return Resources.OpenShift;\n    case DeploymentModel.kind:\n      return Resources.Kubernetes;\n    case referenceFor(resource) === referenceForModel(ServiceModel) ? ServiceModel.kind : '':\n      return Resources.KnativeService;\n    default:\n      return null;\n  }\n};\n\nexport const getFlowType = (buildStrategy: string, buildType?: string): ApplicationFlowType => {\n  switch (buildStrategy) {\n    case BuildStrategyType.Source:\n      return buildType === BuildSourceType.Binary\n        ? ApplicationFlowType.JarUpload\n        : ApplicationFlowType.Git;\n    case BuildStrategyType.Docker:\n      return ApplicationFlowType.Dockerfile;\n    default:\n      return ApplicationFlowType.Container;\n  }\n};\n\nexport const getValidationSchema = (\n  buildStrategy: string,\n  buildType?: string,\n): ((t: TFunction) => any) => {\n  switch (buildStrategy) {\n    case BuildStrategyType.Source:\n      return buildType === BuildSourceType.Binary ? jarValidationSchema : importValidationSchema;\n    case BuildStrategyType.Docker:\n      return importValidationSchema;\n    default:\n      return deployValidationSchema;\n  }\n};\n\nexport const checkIfTriggerExists = (\n  triggers: { [key: string]: any }[],\n  type: string,\n  resourceKind?: string,\n) => {\n  return !!_.find(triggers, (trigger) => {\n    if (resourceKind === DeploymentConfigModel.kind && type === 'ImageChange') {\n      return trigger.type === type && trigger.imageChangeParams?.automatic;\n    }\n    return trigger.type === type;\n  });\n};\n\nexport const getGitDataFromBuildConfig = (buildConfig: K8sResourceKind) => {\n  const url = buildConfig?.spec?.source?.git?.uri ?? '';\n  const gitData = {\n    url,\n    type: detectGitType(url),\n    ref: _.get(buildConfig, 'spec.source.git.ref', ''),\n    dir: _.get(buildConfig, 'spec.source.contextDir', ''),\n    showGitType: false,\n    secret: _.get(buildConfig, 'spec.source.sourceSecret.name', ''),\n    isUrlValidating: false,\n  };\n  return gitData;\n};\n\nconst getGitDataFromPipeline = (pipeline: PipelineKind) => {\n  const params = pipeline?.spec?.params;\n  const url = (params?.find((param) => param?.name === 'GIT_REPO')?.default ?? '') as string;\n  const ref = params?.find((param) => param?.name === 'GIT_REVISION')?.default ?? '';\n  const dir = params?.find((param) => param?.name === 'PATH_CONTEXT')?.default ?? '/';\n  return {\n    url,\n    ref,\n    dir,\n    type: detectGitType(url),\n    showGitType: false,\n    secret: '',\n    isUrlValidating: false,\n  };\n};\n\nconst getGitDataFromShipwrightBuild = (shipwrightBuild: K8sResourceKind) => {\n  const url = shipwrightBuild?.spec?.source?.git?.url ?? '';\n  const gitData = {\n    url,\n    type: detectGitType(url),\n    ref: _.get(shipwrightBuild, 'spec.source.git.revision', ''),\n    dir: _.get(shipwrightBuild, 'spec.source.contextDir', ''),\n    showGitType: false,\n    secret: _.get(shipwrightBuild, 'spec.source.git.cloneSecret', ''),\n    isUrlValidating: false,\n  };\n  return gitData;\n};\n\nexport const getKsvcRouteData = (resource: K8sResourceKind) => {\n  const { metadata, spec } = resource;\n  const containers = spec?.template?.spec?.containers ?? [];\n  const port = containers?.[0]?.ports?.[0]?.containerPort ?? '';\n  const routeData = {\n    create: metadata?.labels?.[PRIVATE_KNATIVE_SERVING_LABEL] !== 'cluster-local',\n    unknownTargetPort: _.toString(port),\n    targetPort: _.toString(port),\n    defaultUnknownPort: 8080,\n  };\n  return routeData;\n};\n\nexport const getDefaultLabels = () => {\n  return [\n    'app',\n    'app.kubernetes.io/instance',\n    'app.openshift.io/runtime',\n    'app.kubernetes.io/part-of',\n    'app.openshift.io/runtime-version',\n    'app.openshift.io/runtime-namespace',\n    'networking.knative.dev/visibility',\n  ];\n};\n\nexport const getRouteLabels = (\n  route: K8sResourceKind,\n  resource: K8sResourceKind,\n): Record<string, string> => {\n  const allLabels = _.get(resource, 'metadata.labels', {});\n  const allRouteLabels = _.get(route, 'metadata.labels', {});\n  const filteredRouteLabels = _.omit(allRouteLabels, [\n    ...getDefaultLabels(),\n    ...Object.keys(allLabels),\n  ]);\n  return filteredRouteLabels;\n};\n\nexport const getRouteData = (route: K8sResourceKind, resource: K8sResourceKind) => {\n  let routeData = {\n    disable: !_.isEmpty(route),\n    create: !_.isEmpty(route),\n    targetPort: _.get(route, 'spec.port.targetPort', ''),\n    unknownTargetPort: _.toString(route?.spec?.port?.targetPort?.split('-')?.[0]) || '',\n    defaultUnknownPort: 8080,\n    path: _.get(route, 'spec.path', ''),\n    hostname: _.get(route, 'spec.host', ''),\n    secure: _.has(route, 'spec.tls.termination'),\n    tls: {\n      termination: _.get(route, 'spec.tls.termination', null),\n      insecureEdgeTerminationPolicy: _.get(route, 'spec.tls.insecureEdgeTerminationPolicy', null),\n      caCertificate: _.get(route, 'spec.tls.caCertificate', ''),\n      certificate: _.get(route, 'spec.tls.certificate', ''),\n      destinationCACertificate: _.get(route, 'spec.tls.destinationCACertificate', ''),\n      key: _.get(route, 'spec.tls.key', ''),\n    },\n    labels: getRouteLabels(route, resource),\n  };\n  if (getResourcesType(resource) === Resources.KnativeService) {\n    routeData = {\n      ...routeData,\n      ...getKsvcRouteData(resource),\n    };\n  }\n  return routeData;\n};\n\nconst getBuildOption = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n) => {\n  if (buildConfig) {\n    return BuildOptions.BUILDS;\n  }\n  if (shipwrightBuild) {\n    return BuildOptions.SHIPWRIGHT_BUILD;\n  }\n  if (pipeline) {\n    return BuildOptions.PIPELINES;\n  }\n  return BuildOptions.DISABLED;\n};\n\nexport const getBuildData = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n  gitType: string,\n) => {\n  const buildOption = getBuildOption(buildConfig, shipwrightBuild, pipeline);\n  let buildStrategyType: BuildStrategyType | string;\n  let shipwrightClusterBuildStrategyType: ClusterBuildStrategy;\n  let buildStrategyData;\n\n  if (buildOption === BuildOptions.BUILDS) {\n    buildStrategyType = _.get(buildConfig, 'spec.strategy.type', '');\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    shipwrightClusterBuildStrategyType = _.get(shipwrightBuild, 'spec.strategy.name', '');\n    switch (shipwrightClusterBuildStrategyType) {\n      case ClusterBuildStrategy.BUILDAH:\n        buildStrategyType = BuildStrategyType.Docker;\n        break;\n      case ClusterBuildStrategy.S2I:\n        buildStrategyType = BuildStrategyType.Source;\n        break;\n      default:\n        buildStrategyType = '';\n    }\n  }\n\n  if (buildOption === BuildOptions.BUILDS) {\n    switch (buildStrategyType) {\n      case BuildStrategyType.Source:\n        buildStrategyData = _.get(buildConfig, 'spec.strategy.sourceStrategy');\n        break;\n      case BuildStrategyType.Docker:\n        buildStrategyData = _.get(buildConfig, 'spec.strategy.dockerStrategy');\n        break;\n      default:\n        buildStrategyData = { env: [] };\n    }\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    buildStrategyData = _.get(shipwrightBuild, 'spec');\n  }\n\n  const triggers = _.get(buildConfig, 'spec.triggers');\n\n  const buildData: BuildData = {\n    env: buildStrategyData?.env || [],\n    triggers: {\n      webhook: checkIfTriggerExists(triggers, GitReadableTypes[gitType]),\n      image: checkIfTriggerExists(triggers, 'ImageChange'),\n      config: checkIfTriggerExists(triggers, 'ConfigChange'),\n    },\n    strategy:\n      buildStrategyType ||\n      (isDockerPipeline(pipeline) ? BuildStrategyType.Docker : BuildStrategyType.Source),\n    source: { type: getBuildSourceType(buildConfig) },\n    option: buildOption,\n    clusterBuildStrategy: shipwrightClusterBuildStrategyType,\n  };\n  return buildData;\n};\n\nexport const getServerlessData = (resource: K8sResourceKind): ServerlessData => {\n  let serverlessData: ServerlessData = {\n    scaling: {\n      minpods: '',\n      maxpods: '',\n      concurrencytarget: '',\n      concurrencylimit: '',\n      autoscale: {\n        autoscalewindow: '',\n        autoscalewindowUnit: 's',\n        defaultAutoscalewindowUnit: 's',\n      },\n      concurrencyutilization: '',\n    },\n    domainMapping: [],\n  };\n  if (getResourcesType(resource) === Resources.KnativeService) {\n    const {\n      spec: {\n        template: { metadata, spec },\n      },\n    } = resource;\n    const annotations = metadata?.annotations;\n    const autoscalewindowAnnotation = annotations?.[KNATIVE_AUTOSCALEWINDOW_ANNOTATION] || '';\n    const { autoscalewindow, autoscalewindowUnit, defaultAutoscalewindowUnit } = getAutoscaleWindow(\n      autoscalewindowAnnotation,\n    );\n    serverlessData = {\n      scaling: {\n        minpods: annotations?.[KNATIVE_MINSCALE_ANNOTATION] || '',\n        maxpods: annotations?.[KNATIVE_MAXSCALE_ANNOTATION] || '',\n        concurrencytarget: annotations?.[KNATIVE_CONCURRENCYTARGET_ANNOTATION] || '',\n        concurrencylimit: spec?.containerConcurrency || '',\n        autoscale: {\n          autoscalewindow,\n          autoscalewindowUnit,\n          defaultAutoscalewindowUnit,\n        },\n        concurrencyutilization: annotations?.[KNATIVE_CONCURRENCYUTILIZATION_ANNOTATION] || '',\n      },\n      domainMapping: [],\n    };\n  }\n  return serverlessData;\n};\n\nexport const getDeploymentData = (resource: K8sResourceKind) => {\n  const deploymentData: DeploymentData = {\n    env: [],\n    replicas: 1,\n    triggers: { image: true, config: true },\n  };\n  const container = resource.spec?.template?.spec?.containers?.find((c) =>\n    [resource.metadata.name, resource.metadata.labels?.['app.kubernetes.io/name']].includes(c.name),\n  );\n  const env = container?.env ?? [];\n  switch (getResourcesType(resource)) {\n    case Resources.KnativeService:\n      return {\n        ...deploymentData,\n        env,\n        triggers: {\n          image: container?.imagePullPolicy === ImagePullPolicy.Always,\n        },\n      };\n    case Resources.OpenShift: {\n      const triggers = resource.spec?.triggers;\n      return {\n        env,\n        triggers: {\n          image: checkIfTriggerExists(triggers, 'ImageChange', resource.kind),\n          config: checkIfTriggerExists(triggers, 'ConfigChange'),\n        },\n        replicas: resource.spec?.replicas ?? 1,\n      };\n    }\n    case Resources.Kubernetes: {\n      const imageTrigger = JSON.parse(\n        resource.metadata?.annotations?.['image.openshift.io/triggers'] ?? '[]',\n      )?.[0];\n      return {\n        env,\n        triggers: {\n          image: imageTrigger?.paused === 'false',\n        },\n        replicas: resource.spec?.replicas ?? 1,\n      };\n    }\n    default:\n      return deploymentData;\n  }\n};\n\nexport const getUserLabels = (resource: K8sResourceKind) => {\n  const allLabels = _.get(resource, 'metadata.labels', {});\n  const userLabels = _.omit(allLabels, getDefaultLabels());\n  return userLabels;\n};\n\nexport const getCommonInitialValues = (\n  editAppResource: K8sResourceKind,\n  route: K8sResourceKind,\n  pipelineData: PipelineKind,\n  name: string,\n  namespace: string,\n) => {\n  const appGroupName = _.get(editAppResource, 'metadata.labels[\"app.kubernetes.io/part-of\"]');\n  const commonInitialValues = {\n    formType: 'edit',\n    name,\n    application: {\n      name: appGroupName || '',\n      selectedKey: appGroupName || UNASSIGNED_KEY,\n    },\n    project: {\n      name: namespace,\n    },\n    route: getRouteData(route, editAppResource),\n    resources: getResourcesType(editAppResource),\n    serverless: getServerlessData(editAppResource),\n    pipeline: {\n      enabled: !_.isEmpty(pipelineData),\n      type: PipelineType.PIPELINE,\n    },\n    pac: {\n      pacHasError: false,\n      repository: {\n        ...defaultRepositoryFormValues,\n      },\n    },\n    deployment: getDeploymentData(editAppResource),\n    labels: getUserLabels(editAppResource),\n    limits: getLimitsDataFromResource(editAppResource),\n    healthChecks: getHealthChecksData(editAppResource),\n    import: {\n      showEditImportStrategy: true,\n      selectedStrategy: {\n        name: '',\n        type: ImportStrategy.S2I,\n        priority: 0,\n        detectedFiles: [],\n      },\n    },\n  };\n  return commonInitialValues;\n};\n\nexport const getIconInitialValues = (editAppResource: K8sResourceKind) => {\n  const runtimeLabel = editAppResource?.metadata?.labels?.['app.openshift.io/runtime'];\n  const runtimeIcon = runtimeLabel && hasIcon(runtimeLabel) ? runtimeLabel : null;\n  return {\n    runtimeIcon,\n  };\n};\n\nexport const getGitAndDockerfileInitialValues = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n) => {\n  if (_.isEmpty(buildConfig) && _.isEmpty(shipwrightBuild) && _.isEmpty(pipeline)) {\n    return {};\n  }\n\n  const currentImage = _.split(buildConfig?.spec?.strategy?.sourceStrategy?.from?.name ?? '', ':');\n  const git = !_.isEmpty(buildConfig)\n    ? getGitDataFromBuildConfig(buildConfig)\n    : !_.isEmpty(shipwrightBuild)\n    ? getGitDataFromShipwrightBuild(shipwrightBuild)\n    : getGitDataFromPipeline(pipeline);\n  const initialValues = {\n    git,\n    docker: {\n      dockerfilePath:\n        buildConfig?.spec?.strategy?.dockerStrategy?.dockerfilePath ||\n        pipeline?.spec?.params?.find((param) => param?.name === 'DOCKERFILE')?.default ||\n        'Dockerfile',\n    },\n    image: {\n      selected: pipeline?.metadata?.labels?.[PIPELINE_RUNTIME_LABEL] || currentImage[0] || '',\n      recommended: '',\n      tag: pipeline?.metadata?.labels?.[PIPELINE_RUNTIME_VERSION_LABEL] || currentImage[1] || '',\n      tagObj: {},\n      ports: [],\n      isRecommending: false,\n      couldNotRecommend: false,\n    },\n    build: getBuildData(buildConfig, shipwrightBuild, pipeline, git.type),\n  };\n  return initialValues;\n};\n\nexport const deployImageInitialValues = {\n  searchTerm: '',\n  registry: 'external',\n  allowInsecureRegistry: false,\n  imageStream: {\n    image: '',\n    tag: '',\n    namespace: '',\n  },\n  isi: {\n    name: '',\n    image: {},\n    tag: '',\n    status: { metadata: {}, status: '' },\n    ports: [],\n  },\n  image: {\n    name: '',\n    image: {},\n    tag: '',\n    status: { metadata: {}, status: '' },\n    ports: [],\n  },\n  build: {\n    env: [],\n    triggers: {},\n    strategy: '',\n  },\n  isSearchingForImage: false,\n};\n\nexport const getExternalImageInitialValues = (appResources: AppResources) => {\n  const imageStreamList = appResources?.imageStream?.data;\n  if (_.isEmpty(imageStreamList)) {\n    return {};\n  }\n  const imageStream = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const imageStreamData = imageStream?.[0]?.spec?.tags?.[0];\n  const name = imageStreamData?.from?.name;\n  const isAllowInsecureRegistry = imageStreamData?.importPolicy?.insecure || false;\n  return {\n    ...deployImageInitialValues,\n    searchTerm: name,\n    registry: 'external',\n    allowInsecureRegistry: isAllowInsecureRegistry,\n    imageStream: {\n      ...deployImageInitialValues.imageStream,\n    },\n  };\n};\n\nexport const getInternalImageInitialValues = (editAppResource: K8sResourceKind) => {\n  const imageStreamNamespace = _.get(\n    editAppResource,\n    'metadata.labels[\"app.openshift.io/runtime-namespace\"]',\n    '',\n  );\n  const imageStreamName = _.get(editAppResource, 'metadata.labels[\"app.openshift.io/runtime\"]', '');\n  const imageStreamTag = _.get(\n    editAppResource,\n    'metadata.labels[\"app.openshift.io/runtime-version\"]',\n    '',\n  );\n  return {\n    ...deployImageInitialValues,\n    registry: RegistryType.Internal,\n    imageStream: {\n      image: imageStreamName,\n      tag: imageStreamTag,\n      namespace: imageStreamNamespace,\n    },\n  };\n};\n\nexport const getExternalImageValues = (appResource: K8sResourceKind) => {\n  const name = _.get(appResource, 'spec.template.spec.containers[0].image', null);\n  if (_.isEmpty(appResource) || !name) {\n    return deployImageInitialValues;\n  }\n  return {\n    ...deployImageInitialValues,\n    searchTerm: name,\n    registry: RegistryType.External,\n    imageStream: {\n      ...deployImageInitialValues.imageStream,\n    },\n  };\n};\n\nexport const getFileUploadValues = (resource: K8sResourceKind, buildConfig: K8sResourceKind) => {\n  const resourceName = resource.metadata.name;\n  const fileName = buildConfig.metadata?.annotations?.jarFileName ?? '';\n  const javaArgs: string =\n    resource.spec?.template?.spec?.containers\n      ?.find((container) => container.name === resourceName)\n      ?.env?.find((args) => args.name === 'JAVA_ARGS')?.value ?? '';\n  return {\n    fileUpload: {\n      name: fileName,\n      value: '',\n      javaArgs,\n    },\n    ...getIconInitialValues(resource),\n  };\n};\n\nexport const getInitialValues = (\n  appResources: AppResources,\n  appName: string,\n  namespace: string,\n) => {\n  const editAppResourceData = appResources.editAppResource?.data;\n  const routeData = appResources.route?.data;\n  const buildConfigData = appResources.buildConfig?.data;\n  const shipwrightBuildData = appResources.shipwrightBuild?.data;\n  const pipelineData = appResources.pipeline?.data;\n\n  const commonValues = getCommonInitialValues(\n    editAppResourceData,\n    routeData,\n    pipelineData,\n    appName,\n    namespace,\n  );\n  const gitDockerValues = getGitAndDockerfileInitialValues(\n    buildConfigData,\n    shipwrightBuildData,\n    pipelineData,\n  );\n  let fileUploadValues = {};\n  let iconValues = {};\n  let externalImageValues = {};\n  let internalImageValues = {};\n  if (_.isEmpty(gitDockerValues)) {\n    iconValues = getIconInitialValues(editAppResourceData);\n    externalImageValues = getExternalImageInitialValues(appResources);\n    internalImageValues = _.isEmpty(externalImageValues)\n      ? getInternalImageInitialValues(editAppResourceData)\n      : {};\n    if (\n      _.isEmpty(externalImageValues) &&\n      !_.get(internalImageValues, 'imageStream.tag') &&\n      !_.get(internalImageValues, 'imageStream.image')\n    ) {\n      if (editAppResourceData?.kind === ServiceModel.kind) {\n        internalImageValues = {};\n        externalImageValues = getExternalImageValues(editAppResourceData);\n      }\n    }\n  } else if (isFromJarUpload(getBuildSourceType(buildConfigData))) {\n    fileUploadValues = getFileUploadValues(editAppResourceData, buildConfigData);\n  }\n\n  return {\n    ...commonValues,\n    ...iconValues,\n    ...fileUploadValues,\n    ...gitDockerValues,\n    ...externalImageValues,\n    ...internalImageValues,\n  };\n};\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","import * as React from 'react';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport {\n  SecretFormWrapper,\n  SecretTypeAbstraction,\n} from '@console/internal/components/secrets/create-secret';\n\nexport interface CreateSecretModalProps {\n  save?: (name: string) => void;\n  namespace: string;\n  secretType: SecretTypeAbstraction;\n}\n\ntype Props = CreateSecretModalProps & ModalComponentProps;\n\nconst CreateSecretModal: React.FC<Props> = ({ close, namespace, save, secretType }) => {\n  const handleSave = (name: string) => {\n    close();\n    save(name);\n  };\n\n  return (\n    <SecretFormWrapper\n      onCancel={close}\n      onSave={handleSave}\n      fixed={{ metadata: { namespace } }}\n      secretTypeAbstraction={secretType}\n      isCreate\n      modal\n    />\n  );\n};\n\nexport const secretModalLauncher = createModalLauncher<Props>(CreateSecretModal);\n\nexport default CreateSecretModal;\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { createSvgIdUrl, useHover } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  Firehose,\n  resourcePathFromModel,\n  truncateMiddle,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { SvgDropShadowFilter } from '@console/topology/src/components/svg';\nimport { PipelineRunModel, TaskModel, ClusterTaskModel } from '../../../../models';\nimport {\n  ComputedStatus,\n  TektonTaskSpec,\n  PipelineTaskRef,\n  TaskKind,\n  WhenExpression,\n} from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER } from '../../const';\nimport { WHEN_EXPRESSSION_DIAMOND_SIZE } from '../../pipeline-topology/const';\nimport WhenExpressionDecorator from '../../pipeline-topology/WhenExpressionDecorator';\nimport { createStepStatus, StepStatus, TaskStatus } from './pipeline-step-utils';\nimport { PipelineVisualizationStepList } from './PipelineVisualizationStepList';\nimport { StatusIcon } from './StatusIcon';\n\nimport './PipelineVisualizationTask.scss';\n\ntype PipelineVisualizationTask = {\n  name?: string;\n  taskSpec?: TektonTaskSpec;\n  taskRef?: PipelineTaskRef;\n  runAfter?: string[];\n  when?: WhenExpression[];\n  status?: TaskStatus;\n};\ninterface TaskProps {\n  pipelineRunName?: string;\n  name: string;\n  loaded?: boolean;\n  task?: {\n    data: TaskKind;\n  };\n  status: TaskStatus;\n  namespace: string;\n  isPipelineRun: boolean;\n  disableVisualizationTooltip?: boolean;\n  selected?: boolean;\n  width: number;\n  height: number;\n  isFinallyTask?: boolean;\n  pipelineTask: PipelineVisualizationTask;\n}\n\ninterface PipelineVisualizationTaskProp {\n  pipelineRunName?: string;\n  namespace: string;\n  task: PipelineVisualizationTask;\n  taskRun?: string;\n  pipelineRunStatus?: string;\n  disableTooltip?: boolean;\n  selected?: boolean;\n  isSkipped?: boolean;\n  width: number;\n  height: number;\n  isFinallyTask?: boolean;\n}\n\nconst FILTER_ID = 'SvgTaskDropShadowFilterId';\n\nexport const PipelineVisualizationTask: React.FC<PipelineVisualizationTaskProp> = ({\n  pipelineRunName,\n  task,\n  namespace,\n  pipelineRunStatus,\n  disableTooltip,\n  selected,\n  isSkipped,\n  width,\n  height,\n  isFinallyTask,\n}) => {\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n  const taskStatus = task.status || {\n    duration: '',\n    reason: ComputedStatus.Idle,\n  };\n  if (\n    pipelineRunStatus === ComputedStatus.Failed ||\n    pipelineRunStatus === ComputedStatus.Cancelled\n  ) {\n    if (\n      task.status?.reason === ComputedStatus.Idle ||\n      task.status?.reason === ComputedStatus.Pending\n    ) {\n      taskStatus.reason = ComputedStatus.Cancelled;\n    }\n  }\n  if (isSkipped) {\n    taskStatus.reason = ComputedStatus.Skipped;\n  }\n\n  const taskComponent = (\n    <TaskComponent\n      pipelineRunName={pipelineRunName}\n      name={task.name || ''}\n      task={task.taskSpec && { data: { spec: task.taskSpec } }}\n      namespace={namespace}\n      status={taskStatus}\n      isPipelineRun={!!pipelineRunStatus}\n      disableVisualizationTooltip={disableTooltip}\n      selected={selected}\n      width={width}\n      height={height}\n      isFinallyTask={isFinallyTask}\n      pipelineTask={task}\n    />\n  );\n\n  if (disableTooltip || task.taskSpec) {\n    return taskComponent;\n  }\n\n  let resources;\n  if (!IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER && task.taskRef.kind === ClusterTaskModel.kind) {\n    resources = [\n      {\n        kind: referenceForModel(ClusterTaskModel),\n        name: task.taskRef.name,\n        prop: 'task',\n      },\n    ];\n  } else {\n    resources = [\n      {\n        kind: referenceForModel(TaskModel),\n        name: task.taskRef.name,\n        namespace,\n        prop: 'task',\n      },\n    ];\n  }\n  return <Firehose resources={resources}>{taskComponent}</Firehose>;\n};\nconst TaskComponent: React.FC<TaskProps> = ({\n  pipelineRunName,\n  namespace,\n  task,\n  status,\n  name,\n  isPipelineRun,\n  disableVisualizationTooltip,\n  selected,\n  width,\n  height,\n  isFinallyTask,\n  pipelineTask,\n}) => {\n  const stepList = task?.data?.spec?.steps || [];\n  const stepStatusList: StepStatus[] = stepList.map((step) => createStepStatus(step, status));\n  const showStatusState: boolean = isPipelineRun && !!status && !!status.reason;\n  const visualName = name || _.get(task, ['metadata', 'name'], '');\n  const nameRef = React.useRef();\n  const pillRef = React.useRef();\n  const path = pipelineRunName\n    ? `${resourcePathFromModel(PipelineRunModel, pipelineRunName, namespace)}/logs/${name}`\n    : undefined;\n  const enableLogLink =\n    status?.reason !== ComputedStatus.Idle &&\n    status?.reason !== ComputedStatus.Pending &&\n    status?.reason !== ComputedStatus.Cancelled &&\n    !!path;\n  const hasWhenExpression = pipelineTask?.when?.length > 0;\n  const hasRunAfter = pipelineTask?.runAfter?.length > 0;\n  const taskStatusColor = status\n    ? getRunStatusColor(status.reason).pftoken.value\n    : getRunStatusColor(ComputedStatus.Cancelled).pftoken.value;\n\n  const [hover, hoverRef] = useHover();\n  const truncatedVisualName = React.useMemo(\n    () => truncateMiddle(visualName, { length: showStatusState ? 11 : 14, truncateEnd: true }),\n    [visualName, showStatusState],\n  );\n\n  const renderVisualName = (\n    <text\n      ref={nameRef}\n      x={showStatusState ? 30 : width / 2}\n      y={height / 2 + 1}\n      className={cx('odc-pipeline-vis-task-text', {\n        'is-text-center': !isPipelineRun,\n        'is-linked': enableLogLink,\n      })}\n    >\n      {truncatedVisualName}\n    </text>\n  );\n\n  let taskPill = (\n    <g ref={hoverRef}>\n      <SvgDropShadowFilter dy={1} id={FILTER_ID} />\n      <rect\n        filter={hover ? createSvgIdUrl(FILTER_ID) : ''}\n        width={width}\n        height={height}\n        rx={15}\n        className={cx('odc-pipeline-vis-task', {\n          'is-selected': selected,\n          'is-linked': enableLogLink,\n        })}\n      />\n      {visualName !== truncatedVisualName && disableVisualizationTooltip ? (\n        <Tooltip triggerRef={nameRef} content={visualName}>\n          {renderVisualName}\n        </Tooltip>\n      ) : (\n        renderVisualName\n      )}\n\n      {showStatusState && (\n        <>\n          <svg\n            width={30}\n            height={30}\n            viewBox=\"-5 -4 20 20\"\n            style={{\n              color: taskStatusColor,\n            }}\n          >\n            <g\n              className={cx({\n                'fa-spin odc-pipeline-vis-task--icon-spin':\n                  status.reason === ComputedStatus.Running,\n                'odc-pipeline-vis-task--icon-stop': status.reason !== ComputedStatus.Running,\n              })}\n            >\n              <StatusIcon status={status.reason} disableSpin />\n            </g>\n          </svg>\n          <SvgTaskStatus steps={stepStatusList} x={30} y={23} width={width / 2 + 15} />\n        </>\n      )}\n    </g>\n  );\n\n  if (!disableVisualizationTooltip) {\n    taskPill = (\n      <>\n        <Tooltip\n          triggerRef={pillRef}\n          position=\"bottom\"\n          enableFlip={false}\n          content={\n            <PipelineVisualizationStepList\n              isSpecOverview={!isPipelineRun}\n              taskName={visualName}\n              steps={stepStatusList}\n              isFinallyTask={isFinallyTask}\n            />\n          }\n        >\n          <g ref={pillRef}>{taskPill}</g>\n        </Tooltip>\n      </>\n    );\n  }\n\n  const taskNode = (\n    <>\n      {hasWhenExpression && (\n        <WhenExpressionDecorator\n          width={WHEN_EXPRESSSION_DIAMOND_SIZE}\n          height={WHEN_EXPRESSSION_DIAMOND_SIZE}\n          appendLine={!hasRunAfter && !isFinallyTask}\n          isPipelineRun={isPipelineRun}\n          status={status.reason}\n          enableTooltip\n          leftOffset={disableVisualizationTooltip && !isFinallyTask ? 3 : 2}\n          isFinallyTask={isFinallyTask}\n        />\n      )}\n      {taskPill}\n    </>\n  );\n  return enableLogLink ? (\n    <Link to={path}>\n      <g data-test={`task ${visualName}`}>{taskNode}</g>\n    </Link>\n  ) : (\n    taskNode\n  );\n};\n\ninterface SvgTaskStatusProps {\n  steps: StepStatus[];\n  x: number;\n  y: number;\n  width: number;\n}\n\nconst SvgTaskStatus: React.FC<SvgTaskStatusProps> = ({ steps, x, y, width }) => {\n  if (steps.length === 0) {\n    return null;\n  }\n  const stepWidth = width / steps.length;\n  const gap = 2;\n  return (\n    <g>\n      {steps.map((step, index) => {\n        return (\n          <rect\n            key={step.name}\n            x={x + stepWidth * index}\n            y={y}\n            width={stepWidth - gap}\n            height={2}\n            fill={getRunStatusColor(step.status).pftoken.value}\n          />\n        );\n      })}\n    </g>\n  );\n};\n","import { Point } from '@patternfly/react-topology';\nimport { DrawDesign, NODE_SEPARATION_HORIZONTAL } from './const';\n\ntype SingleDraw = (p: Point) => string;\ntype DoubleDraw = (p1: Point, p2: Point) => string;\ntype TripleDraw = (p1: Point, p2: Point, p3: Point) => string;\ntype DetermineDirection = (p1: Point, p2: Point) => boolean;\n\nconst join = (...segments: string[]) => segments.filter((seg) => !!seg).join(' ');\n\nconst leftRight: DetermineDirection = (p1, p2) => p1.x < p2.x;\nconst topDown: DetermineDirection = (p1, p2) => p1.y < p2.y;\nconst bottomUp: DetermineDirection = (p1, p2) => p1.y > p2.y;\n\nconst point: SingleDraw = (p) => `${p.x},${p.y}`;\nconst moveTo: SingleDraw = (p) => `M ${point(p)}`;\nconst lineTo: SingleDraw = (p) => `L ${point(p)}`;\nconst quadTo: DoubleDraw = (corner, end) => `Q ${point(corner)} ${point(end)}`;\n\n// TODO: Try to simplify\n// x should not be greater than (NODE_SEPARATION_HORIZONTAL / 2)\nconst CURVE_SIZE = { x: 8, y: 10 };\nconst curve: TripleDraw = (fromPoint, cornerPoint, toPoint) => {\n  const topToBottom = topDown(fromPoint, toPoint);\n  if (topToBottom) {\n    const rightAndDown = leftRight(fromPoint, cornerPoint) && topDown(cornerPoint, toPoint);\n    const downAndRight = topDown(fromPoint, cornerPoint) && leftRight(cornerPoint, toPoint);\n    if (rightAndDown) {\n      return join(\n        lineTo(cornerPoint.clone().translate(-CURVE_SIZE.x, 0)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(0, CURVE_SIZE.y)),\n      );\n    }\n    if (downAndRight) {\n      return join(\n        lineTo(cornerPoint.clone().translate(0, -CURVE_SIZE.y)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(CURVE_SIZE.x, 0)),\n      );\n    }\n  } else {\n    const rightAndUp = leftRight(fromPoint, cornerPoint) && bottomUp(cornerPoint, toPoint);\n    const upAndRight = bottomUp(fromPoint, cornerPoint) && leftRight(cornerPoint, toPoint);\n    if (rightAndUp) {\n      return join(\n        lineTo(cornerPoint.clone().translate(-CURVE_SIZE.x, 0)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(0, -CURVE_SIZE.y)),\n      );\n    }\n    if (upAndRight) {\n      return join(\n        lineTo(cornerPoint.clone().translate(0, CURVE_SIZE.y)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(CURVE_SIZE.x, 0)),\n      );\n    }\n  }\n\n  return '';\n};\n\nexport const straightPath: DoubleDraw = (start, finish) => join(moveTo(start), lineTo(finish));\n\nexport const integralShapePath: DoubleDraw = (start, finish) => {\n  // Integral shape: ∫\n  let firstCurve: string = null;\n  let secondCurve: string = null;\n\n  if (start.y !== finish.y) {\n    const cornerX = Math.floor(start.x + NODE_SEPARATION_HORIZONTAL / 2);\n    const firstCorner = new Point(cornerX, start.y);\n    const secondCorner = new Point(cornerX, finish.y);\n\n    firstCurve = curve(start, firstCorner, secondCorner);\n    secondCurve = curve(firstCorner, secondCorner, finish);\n  }\n\n  return join(moveTo(start), firstCurve, secondCurve, lineTo(finish));\n};\n\nexport const path = (start: Point, finish: Point, drawDesign?: DrawDesign) => {\n  switch (drawDesign) {\n    case DrawDesign.INTEGRAL_SHAPE:\n      return integralShapePath(start, finish);\n    case DrawDesign.STRAIGHT:\n    default:\n      return straightPath(start, finish);\n  }\n};\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ExclamationIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-icon';\nimport { global_danger_color_100 as redColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './ErrorNodeDecorator.scss';\n\ntype ErrorNodeDecoratorProps = {\n  errorStr: string;\n  x: number;\n  y: number;\n};\n\nconst ErrorNodeDecorator: React.FC<ErrorNodeDecoratorProps> = ({ errorStr, x, y }) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={errorStr}>\n      <g ref={iconRef} className=\"odc-error-node-decorator\" transform={`translate(${x}, ${y})`}>\n        <circle cx={0} cy={0} r={BUILDER_NODE_DECORATOR_RADIUS} fill={redColor.value} />\n        <g transform=\"translate(-5, -6)\">\n          <ExclamationIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default ErrorNodeDecorator;\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  buildValidationSchema,\n  resourcesValidationSchema,\n} from './validation-schema';\n\nexport const fileNameRegex = /\\.(jar)$/i;\n\nexport const fileUploadValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(fileNameRegex, {\n        message: t('devconsole~Must be a JAR file.'),\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.'))\n      .required(t('devconsole~Required')),\n    javaArgs: yup.string(),\n  });\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    fileUpload: fileUploadValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n  });\n\nexport const getAppName = (name: string) => {\n  if (!fileNameRegex.test(name)) {\n    return undefined;\n  }\n  return _.kebabCase(name.split('.').shift());\n};\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, TextAreaField } from '@console/shared';\nimport ApplicationSelector from '@console/topology/src/components/dropdowns/ApplicationSelector';\nimport { ProjectData } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface AppSectionProps {\n  project: ProjectData;\n  noProjectsAvailable?: boolean;\n  extraMargin?: boolean;\n  subPath?: string;\n  fullWidth?: boolean;\n}\n\nconst AppSection: React.FC<AppSectionProps> = ({\n  project,\n  noProjectsAvailable,\n  extraMargin,\n  subPath,\n  fullWidth,\n}) => {\n  const [initialApplication] = useField(\n    subPath ? `${subPath}.application.initial` : 'application.initial',\n  );\n  const [formType] = useField('formType');\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~General')} extraMargin={extraMargin} fullWidth={fullWidth}>\n      {noProjectsAvailable && (\n        <>\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-name\"\n            name={subPath ? `${subPath}.project.name` : 'project.name'}\n            label={t('devconsole~Project name')}\n            helpText={t('devconsole~A unique name for the Project.')}\n            required\n          />\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-display-name\"\n            name={subPath ? `${subPath}.project.displayName` : 'project.displayName'}\n            label={t('devconsole~Project display name')}\n          />\n          <TextAreaField\n            data-test-id=\"application-form-project-description\"\n            name={subPath ? `${subPath}.project.description` : 'project.description'}\n            label={t('devconsole~Project description')}\n          />\n        </>\n      )}\n      {!initialApplication.value && (\n        <ApplicationSelector\n          namespace={project.name}\n          noProjectsAvailable={noProjectsAvailable}\n          subPath={subPath}\n        />\n      )}\n      <InputField\n        type={TextInputTypes.text}\n        data-test-id=\"application-form-app-name\"\n        name={subPath ? `${subPath}.name` : 'name'}\n        label={t('devconsole~Name')}\n        helpText={t(\n          'devconsole~A unique name given to the component that will be used to name associated resources.',\n        )}\n        isDisabled={formType.value && formType.value === 'edit'}\n        required={!(formType.value && formType.value === 'edit')}\n      />\n    </FormSection>\n  );\n};\n\nexport default AppSection;\n","import { K8sModel } from '@console/internal/module/k8s';\n\nexport const ConsoleSampleModel: K8sModel = {\n  kind: 'ConsoleSample',\n  label: 'ConsoleSample',\n  labelPlural: 'ConsoleSamples',\n  apiGroup: 'console.openshift.io',\n  apiVersion: 'v1',\n  abbr: 'CS',\n  namespaced: false,\n  crd: true,\n  plural: 'consolesamples',\n  propagationPolicy: 'Background',\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  isiValidationSchema,\n  resourcesValidationSchema,\n} from './validation-schema';\n\nexport const deployValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    name: nameValidationSchema(t),\n    isi: isiValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n  });\n","import {\n  ComponentFactory,\n  DagreLayout,\n  GraphComponent,\n  LayoutFactory,\n  ModelKind,\n  Graph,\n  TaskEdge,\n  PipelineDagreLayout,\n  withPanZoom,\n  SpacerNode,\n  DefaultTaskGroup,\n} from '@patternfly/react-topology';\nimport BuilderFinallyNode from './BuilderFinallyNode';\nimport BuilderNode from './BuilderNode';\nimport { NodeType, PipelineLayout } from './const';\nimport CustomTaskNode from './CustomTaskNode';\nimport FinallyNode from './FinallyNode';\nimport InvalidTaskListNode from './InvalidTaskListNode';\nimport LoadingNode from './LoadingNode';\nimport PipelineTaskNode from './PipelineTaskNode';\nimport BuilderTaskEdge from './TaskEdge';\nimport TaskListNode from './TaskListNode';\nimport TaskNode from './TaskNode';\nimport { getLayoutData } from './utils';\n\nexport const builderComponentsFactory: ComponentFactory = (kind: ModelKind, type: string) => {\n  switch (kind) {\n    case ModelKind.graph:\n      return GraphComponent;\n    case ModelKind.edge:\n      return BuilderTaskEdge;\n    case ModelKind.node:\n      switch (type) {\n        case NodeType.TASK_NODE:\n          return TaskNode;\n        case NodeType.SPACER_NODE:\n          return SpacerNode;\n        case NodeType.TASK_LIST_NODE:\n          return TaskListNode;\n        case NodeType.INVALID_TASK_LIST_NODE:\n          return InvalidTaskListNode;\n        case NodeType.BUILDER_NODE:\n          return BuilderNode;\n        case NodeType.FINALLY_NODE:\n          return FinallyNode;\n        case NodeType.BUILDER_FINALLY_NODE:\n          return BuilderFinallyNode;\n        case NodeType.LOADING_NODE:\n          return LoadingNode;\n        default:\n          return undefined;\n      }\n    default:\n      return undefined;\n  }\n};\n\nexport const dagreViewerComponentFactory: ComponentFactory = (kind: ModelKind, type: string) => {\n  switch (kind) {\n    case ModelKind.graph:\n      return withPanZoom()(GraphComponent);\n    case ModelKind.edge:\n      return TaskEdge;\n    case ModelKind.node:\n      switch (type) {\n        case NodeType.TASK_NODE:\n        case NodeType.FINALLY_NODE:\n          return PipelineTaskNode;\n        case NodeType.CUSTOM_TASK_NODE:\n          return CustomTaskNode;\n        case NodeType.FINALLY_GROUP:\n          return DefaultTaskGroup;\n        case NodeType.SPACER_NODE:\n          return SpacerNode;\n        default:\n          return undefined;\n      }\n    default:\n      return undefined;\n  }\n};\n\nexport const layoutFactory: LayoutFactory = (type: string, graph: Graph) => {\n  switch (type) {\n    case PipelineLayout.DAGRE_BUILDER:\n    case PipelineLayout.DAGRE_BUILDER_SPACED:\n      return new DagreLayout(graph, {\n        // Hack to get around undesirable defaults\n        // TODO: fix this, it's not ideal but it works for now\n        linkDistance: 0,\n        nodeDistance: 0,\n        groupDistance: 0,\n        collideDistance: 0,\n        simulationSpeed: 0,\n        chargeStrength: 0,\n        allowDrag: false,\n        layoutOnDrag: false,\n        ...getLayoutData(type),\n      });\n    case PipelineLayout.DAGRE_VIEWER:\n      return new PipelineDagreLayout(graph, { nodesep: 25 });\n    default:\n      return undefined;\n  }\n};\n","import * as React from 'react';\nimport { AngleDoubleRightIcon } from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { CheckCircleIcon } from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { HourglassHalfIcon } from '@patternfly/react-icons/dist/esm/icons/hourglass-half-icon';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport * as cx from 'classnames';\nimport { YellowExclamationTriangleIcon } from '@console/dynamic-plugin-sdk/src/app/components/status/icons';\nimport { ComputedStatus } from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\n\ninterface StatusIconProps {\n  status: string;\n  height?: number;\n  width?: number;\n  disableSpin?: boolean;\n}\n\nexport const StatusIcon: React.FC<StatusIconProps> = ({ status, disableSpin, ...props }) => {\n  switch (status) {\n    case ComputedStatus['In Progress']:\n    case ComputedStatus.Running:\n      return <SyncAltIcon {...props} className={cx({ 'fa-spin': !disableSpin })} />;\n\n    case ComputedStatus.Succeeded:\n      return <CheckCircleIcon {...props} />;\n\n    case ComputedStatus.Failed:\n      return <ExclamationCircleIcon {...props} />;\n\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return <HourglassHalfIcon {...props} />;\n\n    case ComputedStatus.Cancelled:\n      return <YellowExclamationTriangleIcon {...props} />;\n\n    case ComputedStatus.Skipped:\n      return <AngleDoubleRightIcon {...props} />;\n\n    default:\n      return <CircleIcon {...props} />;\n  }\n};\n\nexport const ColoredStatusIcon: React.FC<StatusIconProps> = ({ status, ...others }) => {\n  return (\n    <div\n      style={{\n        color: status\n          ? getRunStatusColor(status).pftoken.value\n          : getRunStatusColor(ComputedStatus.Cancelled).pftoken.value,\n      }}\n    >\n      <StatusIcon status={status} {...others} />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInputTypes,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  InputField,\n  RedExclamationCircleIcon,\n  getFieldId,\n  useFormikValidationFix,\n} from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../../const';\nimport { sanitizeApplicationValue } from '../../utils/application-utils';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface ApplicationSelectorProps {\n  namespace?: string;\n  noProjectsAvailable?: boolean;\n  subPath?: string;\n}\n\nconst ApplicationSelector: React.FC<ApplicationSelectorProps> = ({\n  namespace,\n  noProjectsAvailable,\n  subPath,\n}) => {\n  const { t } = useTranslation();\n  const [applicationsAvailable, setApplicationsAvailable] = React.useState(true);\n  const availableApplications = React.useRef<string[]>([]);\n  const projectsAvailable = !noProjectsAvailable;\n\n  const [selectedKey, { touched, error }] = useField(\n    subPath ? `${subPath}.application.selectedKey` : 'application.selectedKey',\n  );\n  const [nameField] = useField(subPath ? `${subPath}.application.name` : 'application.name');\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [applicationExists, setApplicationExists] = React.useState<boolean>(false);\n  const applicationNameInputRef = React.useRef<HTMLInputElement>();\n  const fieldId = getFieldId('application-name', 'dropdown');\n  const isValid = !(touched && error);\n  const errorMessage = !isValid ? error : '';\n\n  useFormikValidationFix(selectedKey.value);\n\n  const onDropdownChange = (key: string, application: string) => {\n    setFieldValue(selectedKey.name, key);\n    setFieldTouched(selectedKey.name, true);\n    setFieldValue(nameField.name, sanitizeApplicationValue(application, key));\n    setFieldTouched(nameField.name, true);\n    setApplicationExists(false);\n  };\n\n  const handleOnLoad = (applicationList: { [key: string]: string }) => {\n    const noApplicationsAvailable = _.isEmpty(applicationList);\n    setApplicationsAvailable(!noApplicationsAvailable);\n    availableApplications.current = _.keys(applicationList);\n    if (noApplicationsAvailable) {\n      setFieldValue(selectedKey.name, '');\n      setFieldValue(\n        nameField.name,\n        (selectedKey.value !== UNASSIGNED_KEY && nameField.value) ?? '',\n      );\n    }\n  };\n\n  const actionItems = [\n    {\n      actionTitle: t('topology~Create application'),\n      actionKey: CREATE_APPLICATION_KEY,\n    },\n    {\n      actionTitle: t('topology~No application group'),\n      actionKey: UNASSIGNED_KEY,\n    },\n  ];\n\n  const handleAppChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setApplicationExists(availableApplications.current.includes(event.target.value.trim()));\n  };\n\n  const handleAppBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const trimmedApplicationName = event.target.value.trim();\n    setFieldValue(nameField.name, trimmedApplicationName);\n  };\n\n  const label = t('topology~Application');\n  const inputHelpText = applicationExists\n    ? t('topology~Warning: the application grouping already exists.')\n    : t('topology~A unique name given to the application grouping to label your resources.');\n\n  React.useEffect(() => {\n    if (selectedKey.value === CREATE_APPLICATION_KEY) {\n      applicationNameInputRef.current?.focus();\n    }\n  }, [selectedKey.value]);\n\n  return (\n    <>\n      {projectsAvailable && applicationsAvailable && (\n        <FormGroup fieldId={fieldId} label={label}>\n          <ApplicationDropdown\n            id={fieldId}\n            ariaLabel={label}\n            dropDownClassName=\"dropdown--full-width\"\n            menuClassName=\"dropdown-menu--text-wrap\"\n            namespace={namespace}\n            actionItems={actionItems}\n            autoSelect\n            selectedKey={selectedKey.value}\n            onChange={onDropdownChange}\n            onLoad={handleOnLoad}\n          />\n\n          <FormHelperText>\n            <HelperText>\n              {!isValid ? (\n                <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n                  {errorMessage}\n                </HelperTextItem>\n              ) : (\n                <HelperTextItem>\n                  {t('topology~Select an Application to group this component.')}\n                </HelperTextItem>\n              )}\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n      {(!applicationsAvailable || selectedKey.value === CREATE_APPLICATION_KEY) && (\n        <InputField\n          type={TextInputTypes.text}\n          required={selectedKey.value === CREATE_APPLICATION_KEY}\n          name={nameField.name}\n          ref={applicationNameInputRef}\n          label={t('topology~Application name')}\n          data-test-id=\"application-form-app-input\"\n          helpText={inputHelpText}\n          validated={applicationExists ? ValidatedOptions.warning : ValidatedOptions.default}\n          onChange={handleAppChange}\n          onBlur={handleAppBlur}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ApplicationSelector;\n","export { default as SvgBoxedText } from './SvgBoxedText';\nexport { default as SvgCircledIcon } from './SvgCircledIcon';\nexport { default as SvgDropShadowFilter } from './SvgDropShadowFilter';\nexport { default as SvgResourceIcon, getKindStringAndAbbreviation } from './SvgResourceIcon';\n","import { ComputedStatus } from '../../../../types';\nimport { calculateDuration } from '../../../../utils/pipeline-utils';\n\nenum TerminatedReasons {\n  Completed = 'Completed',\n}\n\nexport type TaskStatusStep = {\n  name: string;\n  running?: { startedAt: string };\n  terminated?: {\n    finishedAt: string;\n    reason: TerminatedReasons;\n    startedAt: string;\n  };\n  waiting?: {};\n};\n\nexport type TaskStatus = {\n  reason: ComputedStatus;\n  duration?: string;\n  steps?: TaskStatusStep[];\n};\n\nconst getMatchingStep = (step, status: TaskStatus): TaskStatusStep => {\n  const statusSteps: TaskStatusStep[] = status.steps || [];\n  return statusSteps.find((statusStep) => {\n    // In rare occasions the status step name is prefixed with `step-`\n    // This is likely a bug but this workaround will be temporary as it's investigated separately\n    return statusStep.name === step.name || statusStep.name === `step-${step.name}`;\n  });\n};\n\nconst getMatchingStepDuration = (matchingStep?: TaskStatusStep) => {\n  if (!matchingStep) return '';\n\n  if (matchingStep.terminated) {\n    return calculateDuration(matchingStep.terminated.startedAt, matchingStep.terminated.finishedAt);\n  }\n\n  if (matchingStep.running) {\n    return calculateDuration(matchingStep.running.startedAt);\n  }\n\n  return '';\n};\n\nexport type StepStatus = {\n  duration: string | null;\n  name: string;\n  status: ComputedStatus;\n};\n\nexport const createStepStatus = (step: { name: string }, status: TaskStatus): StepStatus => {\n  let stepRunStatus: ComputedStatus = ComputedStatus.PipelineNotStarted;\n  let duration: string = null;\n\n  if (!status || !status.reason) {\n    stepRunStatus = ComputedStatus.Cancelled;\n  } else if (status.reason === ComputedStatus['In Progress']) {\n    // In progress, try to get granular statuses\n    const matchingStep: TaskStatusStep = getMatchingStep(step, status);\n\n    if (!matchingStep) {\n      stepRunStatus = ComputedStatus.Pending;\n    } else if (matchingStep.terminated) {\n      stepRunStatus =\n        matchingStep.terminated.reason === TerminatedReasons.Completed\n          ? ComputedStatus.Succeeded\n          : ComputedStatus.Failed;\n      duration = getMatchingStepDuration(matchingStep);\n    } else if (matchingStep.running) {\n      stepRunStatus = ComputedStatus['In Progress'];\n      duration = getMatchingStepDuration(matchingStep);\n    } else if (matchingStep.waiting) {\n      stepRunStatus = ComputedStatus.Pending;\n    }\n  } else {\n    // Not in progress, just use the run status reason\n    stepRunStatus = status.reason;\n\n    duration = getMatchingStepDuration(getMatchingStep(step, status)) || status.duration;\n  }\n\n  return {\n    duration,\n    name: step.name,\n    status: stepRunStatus,\n  };\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { ComputedStatus } from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\nimport { StepStatus } from './pipeline-step-utils';\nimport { StatusIcon } from './StatusIcon';\n\nimport './PipelineVisualizationStepList.scss';\n\nexport interface PipelineVisualizationStepListProps {\n  isSpecOverview: boolean;\n  taskName: string;\n  steps: StepStatus[];\n  isFinallyTask?: boolean;\n  hideHeader?: boolean;\n}\n\nconst TooltipColoredStatusIcon = ({ status }) => {\n  const size = 18;\n  const sharedProps = {\n    height: size,\n    width: size,\n  };\n\n  const icon = <StatusIcon status={status} {...sharedProps} />;\n\n  if (status === ComputedStatus.Succeeded || status === ComputedStatus.Failed) {\n    // Succeeded and Failed icons have transparent centers shapes - in tooltips, this becomes an undesired black\n    // This will simply wrap the icon and place a white backdrop\n    return (\n      <div style={{ color: getRunStatusColor(status).pftoken.value }}>\n        <svg {...sharedProps}>\n          <circle\n            className=\"odc-pipeline-visualization-step-list__icon-backdrop\"\n            cx={size / 2}\n            cy={size / 2}\n            r={size / 2 - 1}\n          />\n          {icon}\n        </svg>\n      </div>\n    );\n  }\n\n  return icon;\n};\n\nexport const PipelineVisualizationStepList: React.FC<PipelineVisualizationStepListProps> = ({\n  isSpecOverview,\n  taskName,\n  steps,\n  isFinallyTask,\n  hideHeader,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-pipeline-visualization-step-list\">\n      {!hideHeader && (\n        <div className=\"odc-pipeline-visualization-step-list__task-name\">{taskName}</div>\n      )}\n      {isFinallyTask && (\n        <div className=\"odc-pipeline-visualization-step-list__task-type\">\n          {t('pipelines-plugin~Finally task')}\n        </div>\n      )}\n      {steps.map(({ duration, name, status }) => {\n        return (\n          <div\n            className={classNames('odc-pipeline-visualization-step-list__step', {\n              'odc-pipeline-visualization-step-list__step--task-run': !isSpecOverview,\n            })}\n            key={name}\n          >\n            {!isSpecOverview ? (\n              <div className=\"odc-pipeline-visualization-step-list__icon\">\n                <TooltipColoredStatusIcon status={status} />\n              </div>\n            ) : (\n              <span className=\"odc-pipeline-visualization-step-list__bullet\">&bull;</span>\n            )}\n            <div className=\"odc-pipeline-visualization-step-list__name\">{name}</div>\n            {!isSpecOverview && (\n              <div className=\"odc-pipeline-visualization-step-list__duration\">{duration}</div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport i18next from 'i18next';\nimport { truncateMiddle } from '@console/internal/components/utils';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\nimport InstallingNodeDecorator from './InstallingNodeDecorator';\n\nimport './LoadingTask.scss';\n\ntype LoadingTaskProps = {\n  width: number;\n  height: number;\n  name: string;\n};\n\nconst LoadingTask: React.FC<LoadingTaskProps> = ({ width, height, name }) => {\n  const textRef = React.useRef();\n  const truncatedName = React.useMemo(\n    () => truncateMiddle(name, { length: 10, truncateEnd: true }),\n    [name],\n  );\n  return (\n    <g>\n      <rect width={width} height={height} rx={15} className={'opp-pipeline-vis-loading-node'} />\n      <g>\n        <InstallingNodeDecorator\n          x={0}\n          y={BUILDER_NODE_ADD_RADIUS / 4}\n          content={i18next.t('pipelines-plugin~Installing')}\n        />\n      </g>\n      <Tooltip triggerRef={textRef} content={name}>\n        <text\n          ref={textRef}\n          className=\"opp-pipeline-vis-loading-node__name\"\n          x={width / 2}\n          y={height / 2 + 1}\n        >\n          {truncatedName}\n        </text>\n      </Tooltip>\n    </g>\n  );\n};\n\nexport default LoadingTask;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { PlusIcon } from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\n\nimport './PlusNodeDecorator.scss';\n\ntype PlusNodeProps = {\n  x: number;\n  y: number;\n  tooltip: string;\n  tooltipPosition?: TooltipPosition;\n  onClick?: () => void;\n};\n\nconst PlusNodeDecorator: React.FC<PlusNodeProps> = ({\n  x,\n  y,\n  onClick,\n  tooltip,\n  tooltipPosition,\n}) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={tooltip} position={tooltipPosition}>\n      <g\n        className=\"odc-plus-node-decorator\"\n        onClick={onClick}\n        transform={`translate(${x}, ${y})`}\n        ref={iconRef}\n      >\n        <circle\n          cx={0}\n          cy={0}\n          r={BUILDER_NODE_ADD_RADIUS}\n          className=\"odc-plus-node-decorator__circle\"\n        />\n        <g transform=\"translate(-6, -6)\">\n          <PlusIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default PlusNodeDecorator;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { useHover } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { truncateMiddle } from '@console/internal/components/utils';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\nimport RemoveNodeDecorator from './RemoveNodeDecorator';\n\nconst TaskList: React.FC<any> = ({\n  width,\n  height,\n  unselectedText,\n  onRemoveTask,\n  onNewTask,\n  onTaskSearch,\n}) => {\n  const { t } = useTranslation();\n  const triggerRef = React.useRef(null);\n  const textRef = React.useRef();\n  const [hover, hoverRef] = useHover();\n\n  const unselectedTaskText = unselectedText || t('pipelines-plugin~Add task');\n\n  const truncatedTaskText = React.useMemo(\n    () =>\n      truncateMiddle(unselectedTaskText, {\n        length: 10,\n        truncateEnd: true,\n      }),\n    [unselectedTaskText],\n  );\n  const renderText = (\n    <text\n      x={width / 2}\n      y={height / 2 + 1}\n      className=\"odc-task-list-node__render-text\"\n      ref={textRef}\n    >\n      {truncatedTaskText}\n    </text>\n  );\n\n  return (\n    <>\n      <g\n        data-test=\"task-list\"\n        ref={hoverRef}\n        className=\"odc-task-list-node__trigger\"\n        onClick={(e) => {\n          e.stopPropagation();\n          onTaskSearch(onNewTask);\n        }}\n      >\n        <rect\n          ref={triggerRef}\n          className={cx('odc-task-list-node__trigger-background')}\n          width={width}\n          height={height}\n        />\n        <g>\n          <rect\n            className={\n              hover\n                ? 'odc-task-list-node__trigger-underline--hover'\n                : 'odc-task-list-node__trigger-underline'\n            }\n            y={height}\n            width={width}\n            height={hover ? 2 : 1}\n          />\n\n          {onRemoveTask && hover && (\n            <g>\n              <RemoveNodeDecorator\n                removeCallback={onRemoveTask}\n                x={120}\n                y={BUILDER_NODE_ADD_RADIUS / 4}\n                content={t('pipelines-plugin~Delete task')}\n              />\n            </g>\n          )}\n          {unselectedTaskText !== truncatedTaskText ? (\n            <Tooltip content={unselectedTaskText} triggerRef={textRef}>\n              {renderText}\n            </Tooltip>\n          ) : (\n            renderText\n          )}\n        </g>\n      </g>\n    </>\n  );\n};\nexport default TaskList;\n","import * as React from 'react';\nimport { observer, Node, NodeModel } from '@patternfly/react-topology';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport { TaskNodeModelData } from './types';\n\ntype TaskNodeProps = {\n  element: Node<NodeModel, TaskNodeModelData>;\n  disableTooltip?: boolean;\n};\n\nconst TaskNode: React.FC<TaskNodeProps> = ({ element, disableTooltip }) => {\n  const { height, width } = element.getBounds();\n  const { pipeline, pipelineRun, task, selected } = element.getData();\n  const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === task.name);\n\n  return (\n    <PipelineVisualizationTask\n      pipelineRunName={pipelineRun?.metadata?.name}\n      task={task}\n      pipelineRunStatus={pipelineRun && pipelineRunFilterReducer(pipelineRun)}\n      namespace={pipeline?.metadata?.namespace}\n      disableTooltip={disableTooltip}\n      selected={selected}\n      width={width}\n      height={height}\n      isSkipped={isTaskSkipped}\n    />\n  );\n};\n\nexport default observer(TaskNode);\n","import * as React from 'react';\nimport { observer, Node, NodeModel } from '@patternfly/react-topology';\nimport TaskList from './TaskList';\nimport { TaskListNodeModelData } from './types';\n\nimport './TaskListNode.scss';\n\ntype TaskListNodeProps = {\n  element: Node<NodeModel, TaskListNodeModelData>;\n  unselectedText?: string;\n};\n\nconst TaskListNode: React.FC<TaskListNodeProps> = ({ element, unselectedText }) => {\n  const { height = 30, width = 120 } = {};\n  const { onNewTask = () => {}, onTaskSearch = () => {}, onRemoveTask = () => {} } =\n    element.getData() || {};\n\n  return (\n    <TaskList\n      width={width}\n      height={height}\n      unselectedText={unselectedText}\n      onRemoveTask={onRemoveTask}\n      onNewTask={onNewTask}\n      onTaskSearch={onTaskSearch}\n    />\n  );\n};\n\nexport default observer(TaskListNode);\n","import * as React from 'react';\nimport {\n  Text,\n  TextInputTypes,\n  FormGroup,\n  ClipboardCopy,\n  InputGroup,\n  ExpandableSection,\n  TextVariants,\n  Button,\n  Tooltip,\n  InputGroupItem,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons/dist/esm/icons/help-icon';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { generateSecret } from '@console/dev-console/src/components/import/import-submit-utils';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { GitProvider } from '@console/git-service/src';\nimport { ExternalLink, FirehoseResource } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { ConfigMapKind } from '@console/internal/module/k8s/types';\nimport {\n  RadioGroupField,\n  InputField,\n  ResourceDropdownField,\n  useActiveNamespace,\n} from '@console/shared/src';\nimport { AccessTokenDocLinks, WebhookDocLinks } from '../consts';\nimport PermissionsSection from './PermissionsSection';\n\ntype WebhoookSectionProps = {\n  pac: ConfigMapKind;\n  formContextField?: string;\n};\n\nconst WebhookSection: React.FC<WebhoookSectionProps> = ({ pac, formContextField }) => {\n  const [namespace] = useActiveNamespace();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { gitProvider, webhook } = _.get(values, formContextField) || values;\n  const [controllerUrl, setControllerUrl] = React.useState('');\n  const [webhookSecret, setWebhookSecret] = React.useState('');\n  const { t } = useTranslation();\n\n  React.useEffect(() => {\n    const ctlUrl = pac?.data?.['controller-url'];\n    if (ctlUrl) {\n      setControllerUrl(ctlUrl);\n      setFieldValue(`${fieldPrefix}webhook.url`, ctlUrl);\n    }\n  }, [fieldPrefix, pac, setFieldValue]);\n  const autocompleteFilter = (text: string, item: any): boolean => fuzzy(text, item?.props?.name);\n  const resources: FirehoseResource[] = [\n    {\n      isList: true,\n      kind: SecretModel.kind,\n      prop: SecretModel.id,\n      namespace,\n    },\n  ];\n\n  const generateWebhookSecret = () => {\n    setWebhookSecret(generateSecret());\n  };\n\n  const getPermssionSectionHeading = (git: GitProvider) => {\n    switch (git) {\n      case GitProvider.GITHUB:\n        return t('pipelines-plugin~See GitHub events');\n      case GitProvider.GITLAB:\n        return t('pipelines-plugin~See Gitlab events');\n      case GitProvider.BITBUCKET:\n        return t('pipelines-plugin~See BitBucket events');\n      default:\n        return t('pipelines-plugin~See Git events');\n    }\n  };\n\n  const HelpText = (): React.ReactElement => {\n    let helpText: React.ReactNode;\n    switch (gitProvider) {\n      case GitProvider.GITHUB:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your GitHub Personal token. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.GITHUB]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a <b>classic</b> token with <b>repo</b> & <b>admin:repo_hook</b> scopes and\n            give your token an expiration, i.e 30d.\n          </Trans>\n        );\n        break;\n\n      case GitProvider.GITLAB:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Gitlab Personal access token. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.GITLAB]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a token with <b>api</b> scope. Select the role as <b>Maintainer/Owner</b>.\n            Give your token an expiration i.e 30d.\n          </Trans>\n        );\n        break;\n\n      case GitProvider.BITBUCKET:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Bitbucket App password. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.BITBUCKET]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a token with <b>Read and Write </b>scopes in{' '}\n            <b>Account, Workspace membership, Projects, Issues, Pull requests and Webhooks</b>.\n          </Trans>\n        );\n        break;\n\n      default:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Git Personal token. Create a token with repo, public_repo & admin:repo_hook\n            scopes and give your token an expiration, i.e 30d.\n          </Trans>\n        );\n    }\n\n    return <div data-test={`${values.gitProvider}-helptext`}>{helpText}</div>;\n  };\n\n  return (\n    <FormSection fullWidth={!fieldPrefix} extraMargin>\n      {gitProvider && gitProvider === GitProvider.BITBUCKET ? (\n        <InputField\n          label={t('pipelines-plugin~Bitbucket username')}\n          name={`${fieldPrefix}webhook.user`}\n          type={TextInputTypes.text}\n          required\n        />\n      ) : null}\n      <RadioGroupField\n        name={`${fieldPrefix}webhook.method`}\n        label={t('pipelines-plugin~Secret')}\n        labelIcon={\n          <Tooltip\n            position=\"right\"\n            content={\n              <p>\n                {t(\n                  'pipelines-plugin~The secret is required to set the Build status and to attach the webhook to the Git repository.',\n                )}\n              </p>\n            }\n          >\n            <HelpIcon />\n          </Tooltip>\n        }\n        required\n        options={[\n          {\n            value: 'token',\n            label: t('pipelines-plugin~Git access token'),\n            activeChildren: (\n              <InputField\n                name={`${fieldPrefix}webhook.token`}\n                type={TextInputTypes.text}\n                helpText={<HelpText />}\n                required\n              />\n            ),\n          },\n          {\n            value: 'secret',\n            label: t('pipelines-plugin~Git access token secret'),\n\n            activeChildren: (\n              <ResourceDropdownField\n                helpText={t(\n                  'pipelines-plugin~Secret with the Git access token for pulling pipeline and tasks from your Git repository.',\n                )}\n                name={`${fieldPrefix}webhook.secretRef`}\n                resources={resources}\n                dataSelector={['metadata', 'name']}\n                placeholder={t('pipelines-plugin~Select a secret')}\n                autocompleteFilter={autocompleteFilter}\n                fullWidth\n                showBadge\n                onChange={(k, v, res) => {\n                  if (res && res.data) {\n                    setFieldValue(`${fieldPrefix}webhook.secretObj`, res);\n                    const secret = res?.data['webhook.secret'];\n                    if (secret) {\n                      setWebhookSecret(Base64.decode(secret));\n                    }\n                  }\n                }}\n              />\n            ),\n          },\n        ]}\n      />\n      {webhook?.url && (\n        <FormGroup fieldId=\"test\" label={t('pipelines-plugin~Webhook URL')}>\n          <ClipboardCopy\n            isReadOnly\n            name={`${fieldPrefix}webhook.url`}\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n            style={{ flex: '1' }}\n          >\n            {controllerUrl}\n          </ClipboardCopy>\n\n          <FormHelperText>\n            <HelperText>\n              <HelperTextItem>\n                {t(\n                  'pipelines-plugin~We have detected a URL that can be used to configure the webhook. It will be created and attached to the Git repository.',\n                )}\n              </HelperTextItem>\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n\n      {gitProvider && gitProvider !== GitProvider.BITBUCKET ? (\n        <FormGroup\n          fieldId={'webhook-secret-clipboard'}\n          label={t('pipelines-plugin~Webhook secret')}\n        >\n          <InputGroup style={{ display: 'flex' }}>\n            <InputGroupItem>\n              <ClipboardCopy\n                name={`${fieldPrefix}webhook.secret`}\n                hoverTip=\"Copy\"\n                clickTip=\"Copied\"\n                style={{ flex: '1' }}\n                onChange={(_event, v) => {\n                  setFieldValue(`${fieldPrefix}webhook.secret`, v);\n                }}\n              >\n                {webhookSecret}\n              </ClipboardCopy>\n            </InputGroupItem>\n            <InputGroupItem>\n              <Button data-test=\"generate-secret\" variant=\"control\" onClick={generateWebhookSecret}>\n                {t('pipelines-plugin~Generate')}\n              </Button>\n            </InputGroupItem>\n          </InputGroup>\n        </FormGroup>\n      ) : null}\n\n      {gitProvider && gitProvider !== GitProvider.UNSURE ? (\n        <>\n          <ExpandableSection toggleText={getPermssionSectionHeading(gitProvider)}>\n            <FormGroup\n              label={t('pipelines-plugin~Events triggering the webhook: ')}\n              fieldId=\"repo-permissions\"\n            >\n              <Text component={TextVariants.small}>\n                <PermissionsSection formContextField={formContextField} />\n              </Text>\n            </FormGroup>\n          </ExpandableSection>\n\n          <ExternalLink\n            text={t('pipelines-plugin~Read more about setting up webhook')}\n            href={WebhookDocLinks[gitProvider]}\n          />\n        </>\n      ) : null}\n    </FormSection>\n  );\n};\n\nexport default WebhookSection;\n","import * as React from 'react';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { ConfigMapModel } from '@console/internal/models';\nimport { ConfigMapKind, k8sList } from '@console/internal/module/k8s';\nimport { RepositoryModel } from '@console/pipelines-plugin/src/models';\nimport { PAC_INFO } from '../../pac/const';\nimport { PIPELINE_NAMESPACE } from '../../pipelines/const';\n\nexport const usePacInfo = () =>\n  useK8sGet<ConfigMapKind>(ConfigMapModel, PAC_INFO, PIPELINE_NAMESPACE);\n\nexport const useRepositoryPresent = (repoURL: string) => {\n  const [repoAlreadyExists, setRepoAlreadyExists] = React.useState(false);\n\n  React.useEffect(() => {\n    k8sList(RepositoryModel)\n      .then((repos) => {\n        setRepoAlreadyExists(repos.some((r) => r.spec.url === repoURL));\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.warn('Error while fetching Pipeline-as-code repositories:', err);\n        setRepoAlreadyExists(false);\n      });\n  }, [repoURL]);\n\n  return repoAlreadyExists;\n};\n","import * as React from 'react';\nimport { FormikValues } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { ProgressiveList, ProgressiveListItem } from '@console/shared/src';\nimport { AppResources } from '../../edit-application/edit-application-types';\nimport HealthChecks from '../../health-checks/HealthChecks';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport DeploymentConfigSection from './DeploymentConfigSection';\nimport LabelSection from './LabelSection';\nimport ResourceLimitSection from './ResourceLimitSection';\nimport RouteSection from './RouteSection';\nimport ScalingSection from './ScalingSection';\nimport ServerlessScalingSection from './ServerlessScalingSection';\n\ntype AdvancedSectionProps = {\n  values: FormikValues;\n  appResources?: AppResources;\n};\n\nconst Footer = ({ children }) => {\n  const { t } = useTranslation();\n  return (\n    <Trans\n      t={t}\n      ns=\"devconsole\"\n      defaults=\"Click on the names to access advanced options for <0></0>.\"\n      components={[children]}\n    />\n  );\n};\n\nconst List: React.FC<AdvancedSectionProps> = ({ appResources, values }) => {\n  const { t } = useTranslation();\n\n  const [visibleItems, setVisibleItems] = React.useState([]);\n  const handleVisibleItemChange = (item: string) => {\n    setVisibleItems([...visibleItems, item]);\n  };\n\n  return (\n    <ProgressiveList\n      visibleItems={visibleItems}\n      onVisibleItemChange={handleVisibleItemChange}\n      Footer={Footer}\n    >\n      <ProgressiveListItem name={t('devconsole~Health checks')}>\n        <HealthChecks title={t('devconsole~Health checks')} resourceType={values.resources} />\n      </ProgressiveListItem>\n      {values?.formType === 'edit' ? (\n        <ProgressiveListItem name={t('devconsole~Deployment')}>\n          <DeploymentConfigSection\n            namespace={values.project.name}\n            resource={appResources?.editAppResource?.data}\n          />\n        </ProgressiveListItem>\n      ) : null}\n\n      <ProgressiveListItem name={t('devconsole~Scaling')}>\n        {values.resources === Resources.KnativeService ? (\n          <ServerlessScalingSection />\n        ) : (\n          <ScalingSection name=\"deployment.replicas\" />\n        )}\n      </ProgressiveListItem>\n      <ProgressiveListItem name={t('devconsole~Resource limits')}>\n        <ResourceLimitSection />\n      </ProgressiveListItem>\n      <ProgressiveListItem name={t('devconsole~Labels')}>\n        <LabelSection />\n      </ProgressiveListItem>\n    </ProgressiveList>\n  );\n};\n\nconst AdvancedSection: React.FC<AdvancedSectionProps> = ({ values, appResources }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~Advanced options')}>\n      <RouteSection route={values.route} resources={values.resources} />\n      <div>\n        <List appResources={appResources} values={values} />\n      </div>\n    </FormSection>\n  );\n};\n\nexport default AdvancedSection;\n","import * as React from 'react';\nimport { Alert, TextInputTypes, ValidatedOptions } from '@patternfly/react-core';\nimport { useFormikContext, FormikErrors, FormikTouched } from 'formik';\nimport { isEmpty } from 'lodash';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview } from '@console/dynamic-plugin-sdk/src';\nimport { RepoStatus, ImportStrategy, getGitService, GitProvider } from '@console/git-service';\nimport { DetectedBuildType } from '@console/git-service/src/utils/build-tool-type-detector';\nimport { detectImportStrategies } from '@console/git-service/src/utils/import-strategy-detector';\nimport { getActiveNamespace } from '@console/internal/actions/ui';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport {\n  FLAG_KNATIVE_SERVING_SERVICE,\n  ServerlessBuildStrategyType,\n  ServiceModel as ksvcModel,\n} from '@console/knative-plugin';\nimport { InputField, useFormikValidationFix, useDebounceCallback, useFlag } from '@console/shared';\nimport { UNASSIGNED_KEY, CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isGitImportSource } from '../../../types/samples';\nimport {\n  getSampleRepo,\n  getSampleRef,\n  getSampleContextDir,\n  NormalizedBuilderImages,\n} from '../../../utils/imagestream-utils';\nimport { getSample, getGitImportSample } from '../../../utils/samples';\nimport { GitData, DetectedStrategyFormData } from '../import-types';\nimport { detectGitRepoName, detectGitType } from '../import-validation-utils';\nimport FormSection from '../section/FormSection';\nimport AdvancedGitOptions from './AdvancedGitOptions';\nimport GitTypeSelector from './GitTypeSelector';\nimport SampleRepo from './SampleRepo';\n\nexport type GitSectionFormData = {\n  formType: string;\n  name: string;\n  application: {\n    selected: string;\n    selectedKey: string;\n    name: string;\n    isInContext: any;\n  };\n  image: {\n    selected: any;\n    selectedKey: string;\n    tagObj: string;\n    recommended: string;\n    couldNotRecommend: boolean;\n  };\n  git: GitData;\n  devfile?: {\n    devfilePath: string;\n    devfileSourceUrl: string;\n    devfileContent?: string;\n  };\n  docker?: {\n    dockerfilePath: string;\n  };\n  build: {\n    strategy: BuildStrategyType;\n  };\n  project: {\n    name: string;\n  };\n  import?: {\n    recommendedStrategy?: DetectedStrategyFormData;\n  };\n};\n\nexport interface GitSectionProps {\n  title?: React.ReactNode;\n  formContextField?: string;\n  builderImages?: NormalizedBuilderImages;\n  defaultSample?: { url: string; ref?: string; dir?: string };\n  showSample?: boolean;\n  formType?: string;\n  importType?: string;\n  imageStreamName?: string;\n  autoFocus?: boolean;\n}\n\nconst GitSection: React.FC<GitSectionProps> = ({\n  title,\n  formContextField,\n  builderImages,\n  defaultSample,\n  showSample = !!defaultSample,\n  formType,\n  importType,\n  imageStreamName,\n  autoFocus = true,\n}) => {\n  const { t } = useTranslation();\n  const inputRef = React.useRef<HTMLInputElement>();\n\n  const {\n    dirty,\n    isSubmitting,\n    values: formikValues,\n    touched: formikTouched,\n    errors: formikErrors,\n    status,\n    setFieldValue: formikSetFieldValue,\n    setFieldTouched: formikSetFieldTouched,\n  } = useFormikContext<GitSectionFormData>();\n\n  const isKnativeServingAvailable = useFlag(FLAG_KNATIVE_SERVING_SERVICE);\n  const [canCreateKnativeService, canCreateKnativeServiceLoading] = useAccessReview({\n    group: ksvcModel.apiGroup,\n    resource: ksvcModel.plural,\n    namespace: getActiveNamespace(),\n    verb: 'create',\n  });\n\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const setFieldValue = React.useCallback(\n    (key: string, value: string | boolean | object, shouldValidate?: boolean) => {\n      formikSetFieldValue(`${fieldPrefix}${key}` as any, value, shouldValidate);\n    },\n    [fieldPrefix, formikSetFieldValue],\n  );\n  const setFieldTouched = React.useCallback(\n    (key: string, touched: boolean, shouldValidate?: boolean) => {\n      formikSetFieldTouched(`${fieldPrefix}${key}` as any, touched, shouldValidate);\n    },\n    [fieldPrefix, formikSetFieldTouched],\n  );\n\n  const values: GitSectionFormData = formContextField\n    ? _.get(formikValues, formContextField)\n    : formikValues;\n  const touched: FormikTouched<GitSectionFormData> = formContextField\n    ? _.get(formikTouched, formContextField, {})\n    : formikTouched;\n  const errors: FormikErrors<GitSectionFormData> = formContextField\n    ? _.get(formikErrors, formContextField, {})\n    : formikErrors;\n  const formReloadCount: number = _.get(formikValues, 'formReloadCount');\n\n  const { url: defaultSampleURL, dir: defaultSampleDir, ref: defaultSampleRef } =\n    defaultSample || {};\n  const defaultSampleTagObj = React.useMemo(\n    () =>\n      defaultSampleURL\n        ? {\n            annotations: {\n              sampleRepo: defaultSampleURL,\n              sampleContextDir: defaultSampleDir ?? './',\n              sampleRef: defaultSampleRef ?? '',\n            },\n          }\n        : null,\n    [defaultSampleURL, defaultSampleDir, defaultSampleRef],\n  );\n  const imageStreamTag = isEmpty(values.image.tagObj) ? defaultSampleTagObj : values.image.tagObj;\n  const imageStreamTagSampleRepo = showSample && getSampleRepo(imageStreamTag);\n  const {\n    name: nameTouched,\n    application: { name: applicationNameTouched } = {},\n    image: { selected: imageSelectorTouched } = {},\n    git: { dir: gitDirTouched, type: gitTypeTouched } = {},\n  } = touched;\n  const { git: { url: gitUrlError } = {} } = errors;\n\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n  const [repoStatus, setRepoStatus] = React.useState<RepoStatus>();\n\n  const handleBuilderImageRecommendation = React.useCallback(\n    async (detectedBuildTypes: DetectedBuildType[]) => {\n      setFieldValue('image.isRecommending', false);\n      if (gitUrlError) {\n        setFieldValue('image.recommended', '');\n        setFieldValue('image.couldNotRecommend', true);\n        return;\n      }\n      const recommendedBuildType =\n        builderImages &&\n        detectedBuildTypes?.find(\n          ({ type: recommended }) => recommended && builderImages.hasOwnProperty(recommended),\n        );\n      if (recommendedBuildType && recommendedBuildType.type) {\n        setFieldValue('image.couldNotRecommend', false);\n        setFieldValue('image.recommended', recommendedBuildType.type);\n      } else {\n        setFieldValue('image.couldNotRecommend', true);\n        setFieldValue('image.recommended', '');\n      }\n    },\n    [builderImages, gitUrlError, setFieldValue],\n  );\n\n  const handleDevfileStrategyDetection = React.useCallback(\n    async (devfilePath: string, gitType: GitProvider) => {\n      if (gitUrlError) {\n        setFieldValue('devfile.devfileContent', null);\n        setFieldValue('devfile.devfileHasError', true);\n        return;\n      }\n      if (importType !== 'devfile' && !values.devfile?.devfileSourceUrl) {\n        setFieldValue('devfile.devfilePath', devfilePath);\n        setFieldValue('docker.dockerfilePath', 'Dockerfile');\n        const gitService = getGitService(\n          values.git.url,\n          gitType,\n          values.git.ref,\n          values.git.dir,\n          values.git.secretResource,\n          devfilePath,\n        );\n        const devfileContents = gitService && (await gitService.getDevfileContent());\n        if (!devfileContents) {\n          setFieldValue('devfile.devfileContent', null);\n          setFieldValue('devfile.devfileHasError', true);\n        } else {\n          setFieldValue('devfile.devfileContent', devfileContents);\n          setFieldValue('devfile.devfileHasError', false);\n        }\n      }\n    },\n    [\n      gitUrlError,\n      importType,\n      setFieldValue,\n      values.devfile,\n      values.git.dir,\n      values.git.ref,\n      values.git.secretResource,\n      values.git.url,\n    ],\n  );\n\n  const handleGitUrlChange = React.useCallback(\n    async (url: string, ref: string, dir: string) => {\n      if (isKnativeServingAvailable && canCreateKnativeServiceLoading) return;\n      if (isSubmitting || status?.submitError) return;\n      setValidated(ValidatedOptions.default);\n      setFieldValue('git.validated', ValidatedOptions.default);\n      setFieldValue('git.isUrlValidating', true);\n      if (gitUrlError) {\n        // Reset git type field when url is not valid or empty so that when new url valid is added, we run git type detection again.\n        // Don't do anything else if URL is not valid.\n        setFieldValue('git.showGitType', false);\n        setFieldTouched('git.type', false);\n        setFieldValue('git.isUrlValidating', false);\n        return;\n      }\n      const detectedGitType = detectGitType(url);\n      const isUnsureDetectedGitType = detectedGitType === GitProvider.UNSURE;\n      const gitRepoName = formType !== 'sample' && detectGitRepoName(url);\n\n      // Updated detectedType only\n      if (detectedGitType !== values.git.detectedType) {\n        setFieldValue('git.detectedType', detectedGitType);\n      }\n      if (isUnsureDetectedGitType && !values.git.showGitType) {\n        setFieldValue('git.showGitType', true);\n      }\n\n      if (!isUnsureDetectedGitType && values.git.showGitType) {\n        setFieldValue('git.showGitType', false);\n      }\n\n      const gitType =\n        isUnsureDetectedGitType && values.git.showGitType ? values.git.type : detectedGitType;\n\n      if (gitType !== values.git.type) {\n        setFieldTouched('git.type', false, false);\n        setFieldValue('git.type', gitType);\n      }\n\n      const gitService = getGitService(\n        url,\n        gitType,\n        ref,\n        dir,\n        values.git.secretResource,\n        values.devfile?.devfilePath,\n        values.docker?.dockerfilePath,\n      );\n\n      const importStrategyData = await detectImportStrategies(\n        url,\n        gitService,\n        isKnativeServingAvailable && canCreateKnativeService,\n      );\n\n      const {\n        loaded,\n        loadError,\n        repositoryStatus,\n        strategies: importStrategies,\n      } = importStrategyData;\n\n      setRepoStatus(repositoryStatus);\n\n      if (repositoryStatus !== RepoStatus.Reachable) {\n        setValidated(ValidatedOptions.warning);\n        setFieldValue('git.validated', ValidatedOptions.warning);\n        setFieldValue('git.isUrlValidating', false);\n        setFieldValue('import', {\n          loaded: false,\n          loadError: null,\n          strategies: [],\n          selectedStrategy: {\n            name: 'Builder Image',\n            type: ImportStrategy.S2I,\n            priority: 0,\n            detectedFiles: [],\n          },\n          recommendedStrategy: null,\n          showEditImportStrategy: true,\n        });\n        setFieldValue('build.strategy', BuildStrategyType.Source);\n        return;\n      }\n\n      gitRepoName && !nameTouched && !values.name && setFieldValue('name', gitRepoName);\n      gitRepoName &&\n        values.formType !== 'edit' &&\n        !values.application.name &&\n        values.application.selectedKey !== UNASSIGNED_KEY &&\n        setFieldValue('application.name', `${gitRepoName}-app`);\n\n      if (importType === 'devfile' || imageStreamName || values.formType === 'edit') {\n        setValidated(ValidatedOptions.success);\n        setFieldValue('git.validated', ValidatedOptions.success);\n        setFieldValue('git.isUrlValidating', false);\n        importType === 'devfile' && setFieldValue('build.strategy', BuildStrategyType.Devfile);\n        importType === 'devfile' &&\n          !values.devfile?.devfileContent &&\n          setFieldValue('import.recommendedStrategy', importStrategies[0]);\n        values.formType === 'edit' &&\n          values.build.strategy === BuildStrategyType.Source &&\n          handleBuilderImageRecommendation(\n            importStrategies?.find((s) => s.type === ImportStrategy.S2I)?.detectedCustomData,\n          );\n        return;\n      }\n\n      setFieldValue('import.loaded', loaded);\n      setFieldValue('import.loadError', loadError);\n      setFieldValue('import.strategies', importStrategies);\n      if (importStrategies.length > 0) {\n        setFieldValue('import.showEditImportStrategy', false);\n        setFieldValue('import.selectedStrategy', importStrategies[0]);\n        setFieldValue('import.recommendedStrategy', importStrategies[0]);\n      } else {\n        setFieldValue('import.selectedStrategy', {\n          name: 'Devfile',\n          type: ImportStrategy.DEVFILE,\n          priority: 2,\n          detectedFiles: [],\n        });\n        setFieldValue('import.recommendedStrategy', null);\n        setFieldValue('import.showEditImportStrategy', true);\n      }\n      setFieldValue('import.strategyChanged', false);\n\n      if (importStrategies.length > 0) {\n        switch (importStrategies[0].type) {\n          case ImportStrategy.S2I: {\n            setFieldValue('build.strategy', BuildStrategyType.Source);\n            if (builderImages) {\n              setFieldValue('image.isRecommending', true);\n              handleBuilderImageRecommendation(importStrategies[0].detectedCustomData);\n            }\n            break;\n          }\n          case ImportStrategy.DEVFILE: {\n            setFieldValue('build.strategy', BuildStrategyType.Devfile);\n            handleDevfileStrategyDetection(importStrategies[0].detectedFiles[0], gitType);\n            break;\n          }\n          case ImportStrategy.DOCKERFILE: {\n            setFieldValue('build.strategy', BuildStrategyType.Docker);\n            setFieldValue('docker.dockerfilePath', importStrategies[0].detectedFiles[0]);\n            setFieldValue('docker.dockerfileHasError', false);\n            break;\n          }\n          case ImportStrategy.SERVERLESS_FUNCTION: {\n            setFieldValue('build.strategy', ServerlessBuildStrategyType.ServerlessFunction);\n            break;\n          }\n          default:\n        }\n      }\n\n      setValidated(ValidatedOptions.success);\n      setFieldValue('git.validated', ValidatedOptions.success);\n      setFieldValue('git.isUrlValidating', false);\n    },\n    [\n      isSubmitting,\n      status,\n      setFieldValue,\n      gitUrlError,\n      formType,\n      values.git.detectedType,\n      values.git.showGitType,\n      values.git.type,\n      values.git.secretResource,\n      values.devfile,\n      values.docker,\n      values.name,\n      values.formType,\n      values.application.name,\n      values.application.selectedKey,\n      values.build.strategy,\n      isKnativeServingAvailable,\n      canCreateKnativeService,\n      canCreateKnativeServiceLoading,\n      nameTouched,\n      importType,\n      imageStreamName,\n      setFieldTouched,\n      handleBuilderImageRecommendation,\n      builderImages,\n      handleDevfileStrategyDetection,\n    ],\n  );\n\n  const debouncedHandleGitUrlChange = useDebounceCallback(handleGitUrlChange);\n\n  const fillImageStreamTagSample = React.useCallback(() => {\n    if (isKnativeServingAvailable && canCreateKnativeServiceLoading) return;\n    const url = imageStreamTagSampleRepo;\n    const ref = getSampleRef(imageStreamTag);\n    const dir = getSampleContextDir(imageStreamTag);\n    setFieldValue('git.url', imageStreamTagSampleRepo, false);\n    setFieldValue('git.ref', ref, false);\n    setFieldValue('git.dir', dir, false);\n    setFieldTouched('git.url', true, true);\n    debouncedHandleGitUrlChange(url, ref, dir);\n  }, [\n    debouncedHandleGitUrlChange,\n    imageStreamTagSampleRepo,\n    setFieldTouched,\n    setFieldValue,\n    imageStreamTag,\n    isKnativeServingAvailable,\n    canCreateKnativeServiceLoading,\n  ]);\n\n  React.useEffect(() => {\n    (!dirty || gitDirTouched || gitTypeTouched || formReloadCount || values.git.secretResource) &&\n      values.git.url &&\n      debouncedHandleGitUrlChange(values.git.url, values.git.ref, values.git.dir);\n  }, [\n    dirty,\n    isSubmitting,\n    gitDirTouched,\n    formReloadCount,\n    debouncedHandleGitUrlChange,\n    values.git.url,\n    values.git.ref,\n    values.git.dir,\n    values.git.type,\n    values.git.secretResource,\n    gitTypeTouched,\n  ]);\n\n  const helpText = React.useMemo(() => {\n    if (values.git.isUrlValidating) {\n      return `${t('devconsole~Validating')}...`;\n    }\n    if (validated === ValidatedOptions.success) {\n      return t('devconsole~Validated');\n    }\n    if (validated === ValidatedOptions.warning) {\n      switch (repoStatus) {\n        case RepoStatus.RateLimitExceeded: {\n          return t('devconsole~Rate limit exceeded');\n        }\n        case RepoStatus.GitTypeNotDetected: {\n          return t(\n            'devconsole~URL is valid but a git type could not be identified. Please select a git type from the options below',\n          );\n        }\n        case RepoStatus.PrivateRepo: {\n          return t(\n            'devconsole~If this is a private repository, enter a source Secret in advanced Git options',\n          );\n        }\n        case RepoStatus.ResourceNotFound: {\n          return t('devconsole~Requested repository does not exist');\n        }\n        case RepoStatus.InvalidGitTypeSelected: {\n          return t(\n            'devconsole~The selected git type might not be valid or the repository is private. Please try selecting another git type or enter a source Secret in advanced Git options',\n          );\n        }\n        /* Special case for Gitea as it throws 404 for all kinds of negatives */\n        case RepoStatus.GiteaRepoUnreachable: {\n          return t(\n            'devconsole~The Gitea repository is unreachable. The repository might be private or does not exist',\n          );\n        }\n        default: {\n          return t('devconsole~URL is valid but cannot be reached');\n        }\n      }\n    }\n    return t('devconsole~Repository URL to build and deploy your code from');\n  }, [t, values.git.isUrlValidating, validated, repoStatus]);\n\n  const resetFields = React.useCallback(() => {\n    if (!imageSelectorTouched) {\n      setFieldValue('image.selected', '');\n      setFieldValue('image.tag', '');\n    }\n    values.image.recommended && setFieldValue('image.recommended', '');\n    values.image.couldNotRecommend && setFieldValue('image.couldNotRecommend', false);\n    if (values.formType === 'edit') {\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n        values.application.selectedKey === CREATE_APPLICATION_KEY &&\n        !applicationNameTouched &&\n        setFieldValue('application.name', '');\n      return;\n    }\n    !nameTouched && setFieldValue('name', '');\n    !values.application.isInContext &&\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n      !applicationNameTouched &&\n      setFieldValue('application.name', '');\n  }, [\n    setFieldValue,\n    values.formType,\n    values.image.recommended,\n    values.image.couldNotRecommend,\n    values.application.selectedKey,\n    values.application.isInContext,\n    applicationNameTouched,\n    imageSelectorTouched,\n    nameTouched,\n  ]);\n\n  useFormikValidationFix(values.git.url);\n\n  /**\n   * Automatically focus the git repository field and prefill it with different\n   * sample types.\n   *\n   * 1. ConsoleSample\n   * 2. ImageStream samples\n   */\n  React.useEffect(() => {\n    // Skip handling until Knative Service status is unknown!\n    if (canCreateKnativeServiceLoading) return;\n\n    if (autoFocus) {\n      inputRef.current?.focus();\n    }\n\n    const { sampleName, repository: sampleRepository } = getGitImportSample();\n    if (sampleRepository?.url) {\n      const name = detectGitRepoName(sampleRepository.url);\n      setFieldValue('name', name, false);\n      setFieldValue('application.name', `${name}-app`, false);\n      setFieldValue('git.url', sampleRepository.url, false);\n      if (sampleRepository.revision) {\n        setFieldValue('git.ref', sampleRepository.revision, false);\n      }\n      if (sampleRepository.contextDir) {\n        setFieldValue('git.dir', sampleRepository.contextDir, false);\n      }\n      setFieldTouched('git.url', true, true);\n      debouncedHandleGitUrlChange(\n        sampleRepository.url,\n        sampleRepository.revision,\n        sampleRepository.contextDir,\n      );\n    }\n    if (sampleName) {\n      getSample(sampleName)\n        .then((sample) => {\n          if (isGitImportSource(sample.spec.source)) {\n            const { gitImport } = sample.spec.source;\n            if (!sampleRepository?.url) {\n              const name = detectGitRepoName(sampleRepository.url);\n              setFieldValue('name', name, false);\n              setFieldValue('application.name', `${name}-app`, false);\n              setFieldValue('git.url', gitImport.repository.url, false);\n              if (sampleRepository.revision) {\n                setFieldValue('git.ref', sampleRepository.revision, false);\n              }\n              if (sampleRepository.contextDir) {\n                setFieldValue('git.dir', sampleRepository.contextDir, false);\n              }\n              setFieldTouched('git.url', true, true);\n              debouncedHandleGitUrlChange(\n                gitImport.repository.url,\n                gitImport.repository.revision,\n                gitImport.repository.contextDir,\n              );\n            }\n            if (gitImport?.service?.targetPort && gitImport?.service?.targetPort !== 8080) {\n              setFieldValue(\n                'route.unknownTargetPort',\n                gitImport.service.targetPort.toString(),\n                false,\n              );\n            }\n            // handleSearch(containerImport.image);\n          } else {\n            // eslint-disable-next-line no-console\n            console.error(\n              `Unsupported ConsoleSample \"${sampleName}\" source type ${sample.spec?.source?.type}`,\n            );\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(`Error while loading ConsoleSample \"${sampleName}\":`, error);\n        });\n    } else if (formType === 'sample' && imageStreamTagSampleRepo) {\n      fillImageStreamTagSample();\n    }\n\n    // Disable deps to load the samples only once when the component is loaded.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [canCreateKnativeServiceLoading]);\n\n  return (\n    <FormSection title={title ?? t('devconsole~Git')}>\n      <InputField\n        ref={inputRef}\n        type={TextInputTypes.text}\n        name={`${fieldPrefix}git.url`}\n        label={t('devconsole~Git Repo URL')}\n        helpText={helpText}\n        helpTextInvalid={helpText}\n        validated={validated}\n        onBlur={(e: React.FocusEvent<HTMLInputElement>) => {\n          const trimmedURL = e.target.value.trim();\n          if (e.target.value !== trimmedURL) {\n            setFieldValue('git.url', trimmedURL);\n            debouncedHandleGitUrlChange(trimmedURL, values.git.ref, values.git.dir);\n          }\n        }}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          resetFields();\n          debouncedHandleGitUrlChange(e.target.value.trim(), values.git.ref, values.git.dir);\n        }}\n        data-test-id=\"git-form-input-url\"\n        required\n        isDisabled={formType === 'sample' && imageStreamTagSampleRepo}\n      />\n      {formType !== 'sample' && imageStreamTagSampleRepo && (\n        <SampleRepo onClick={fillImageStreamTagSample} />\n      )}\n      {values.git.showGitType && (\n        <>\n          <GitTypeSelector fieldPrefix={fieldPrefix} />\n          {values.git.type === GitProvider.UNSURE && (\n            <Alert isInline variant=\"info\" title={t('devconsole~Defaulting Git type to other')}>\n              {t('devconsole~We failed to detect the Git type.')}\n            </Alert>\n          )}\n        </>\n      )}\n      {formType !== 'sample' && <AdvancedGitOptions formContextField={formContextField} />}\n    </FormSection>\n  );\n};\n\nexport default GitSection;\n","import * as React from 'react';\nimport {\n  Alert,\n  ClipboardCopy,\n  ClipboardCopyVariant,\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { RedExclamationCircleIcon } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  RegistryType,\n  BuilderImagesNamespace,\n  getImageStreamTags,\n} from '../../../utils/imagestream-utils';\nimport { ImageStreamState, ImageStreamAction, ImageStreamActions } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\nimport ImageStreamDropdown from './ImageStreamDropdown';\nimport ImageStreamNsDropdown from './ImageStreamNsDropdown';\nimport ImageStreamTagDropdown from './ImageStreamTagDropdown';\n\nimport './ImageStream.scss';\n\nexport const initialState: ImageStreamState = {\n  loading: false,\n  accessLoading: false,\n  selectedImageStream: {},\n};\n\nexport const ImageStreamReducer = (state: ImageStreamState, action: ImageStreamAction) => {\n  const { value } = action;\n  switch (action.type) {\n    case ImageStreamActions.setLoading:\n      return { ...state, loading: value };\n    case ImageStreamActions.setAccessLoading:\n      return { ...state, accessLoading: value };\n    case ImageStreamActions.setSelectedImageStream:\n      return { ...state, selectedImageStream: value };\n    default:\n      throw new Error('Invalid action was provided in imagestream reducer');\n  }\n};\n\nconst ImageStream: React.FC<{\n  disabled?: boolean;\n  label?: string;\n  required?: boolean;\n  formContextField?: string;\n  dataTest?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, label, required = false, formContextField, dataTest, reloadCount }) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<FormikValues>();\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n  const [state, dispatch] = React.useReducer(ImageStreamReducer, initialState);\n  const [hasImageStreams, setHasImageStreams] = React.useState(false);\n  const { loading, accessLoading, selectedImageStream } = state;\n  const { imageStream, project, registry, isi, fromImageStreamTag } =\n    _.get(values, formContextField) || values;\n\n  const imageStreamTagList = getImageStreamTags(selectedImageStream as K8sResourceKind);\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const isTagsAvailable =\n    imageStream.tag !== '' || (isStreamsAvailable && !_.isEmpty(imageStreamTagList));\n  const isImageStreamSelected = imageStream.image !== '';\n  const showCommandLineAlert =\n    project.name !== imageStream.namespace &&\n    imageStream.namespace !== BuilderImagesNamespace.Openshift &&\n    (registry === RegistryType.Internal || fromImageStreamTag) &&\n    isStreamsAvailable &&\n    isTagsAvailable;\n  const helperTextInvalid = validated === ValidatedOptions.error && isi.status?.message && (\n    <>\n      <ExclamationCircleIcon />\n      &nbsp;{isi.status?.message}\n    </>\n  );\n\n  return (\n    <>\n      <ImageStreamContext.Provider\n        value={{ state, dispatch, hasImageStreams, setHasImageStreams, setValidated }}\n      >\n        <FormGroup\n          fieldId=\"image-stream-dropdowns\"\n          label={label}\n          required={required}\n          data-test={dataTest}\n        >\n          <div className=\"row\">\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamNsDropdown disabled={disabled} formContextField={formContextField} />\n            </div>\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamDropdown\n                disabled={disabled}\n                formContextField={formContextField}\n                reloadCount={reloadCount}\n              />\n              <div className=\"odc-imagestream-separator\">/</div>\n            </div>\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamTagDropdown\n                disabled={disabled}\n                formContextField={formContextField}\n                reloadCount={reloadCount}\n              />\n              <div className=\"odc-imagestream-separator\">:</div>\n            </div>\n          </div>\n\n          {validated === ValidatedOptions.error && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n                  {helperTextInvalid}\n                </HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n        {isNamespaceSelected && isImageStreamSelected && !isTagsAvailable && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert variant=\"warning\" title={t('devconsole~No Image streams tags found')} isInline>\n              {t('devconsole~No tags are available in Image Stream {{image}}', {\n                image: imageStream.image,\n              })}\n            </Alert>\n          </div>\n        )}\n        {isNamespaceSelected && !loading && !isStreamsAvailable && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert variant=\"warning\" title={t('devconsole~No Image streams found')} isInline>\n              {t('devconsole~No Image streams are available in Project {{namespace}}', {\n                namespace: imageStream.namespace,\n              })}\n            </Alert>\n          </div>\n        )}\n        {isNamespaceSelected && !accessLoading && showCommandLineAlert && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert\n              variant=\"warning\"\n              isInline\n              title={t(\n                'devconsole~Service account default will need pull authority to deploy Images from {{namespace}}',\n                { namespace: imageStream.namespace },\n              )}\n            >\n              {t('devconsole~You can grant authority with the command')}{' '}\n              <ClipboardCopy\n                className=\"odc-imagestream-clipboard\"\n                variant={ClipboardCopyVariant.expansion}\n                isReadOnly\n              >{`oc policy add-role-to-user system:image-puller system:serviceaccount:${project.name}:default --namespace=${imageStream.namespace}`}</ClipboardCopy>\n            </Alert>\n          </div>\n        )}\n      </ImageStreamContext.Provider>\n    </>\n  );\n};\n\nexport default React.memo(ImageStream);\n","import { ResolvedExtension, FileUpload } from '@console/dynamic-plugin-sdk';\n\nexport const getFileType = (fileName: string): string => {\n  if (fileName.lastIndexOf('.') === -1) {\n    return null;\n  }\n  return fileName.split('.').pop();\n};\n\nexport const isFileSupported = (fileName: string, supportedFileTypes: string[]): boolean => {\n  const extension = getFileType(fileName);\n  if (!extension || extension.length === 0) {\n    return false;\n  }\n  return supportedFileTypes.includes(extension.toLowerCase());\n};\n\nexport const getRequiredFileUploadExtension = (\n  fileUploadExtensions: ResolvedExtension<FileUpload>[],\n  fileName: string,\n) =>\n  fileUploadExtensions.find((ex) => isFileSupported(fileName, ex.properties.fileExtensions)) ??\n  null;\n","import { Dispatch, SetStateAction } from 'react';\nimport { useUserSettings } from '@console/shared';\n\nexport const PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY =\n  'devconsole.import.secureRoutingOptions';\n\ntype RoutingOptions = {\n  secure: boolean;\n  tlsTermination?: string;\n  insecureTraffic?: string;\n};\n\nexport const usePreferredRoutingOptions = (): [\n  RoutingOptions,\n  Dispatch<SetStateAction<RoutingOptions>>,\n  boolean,\n] => {\n  const [\n    preferredRoutingOptions,\n    setPreferredRoutingOptions,\n    preferredRoutingOptionsLoaded,\n  ] = useUserSettings<RoutingOptions>(PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY, {\n    secure: true,\n    tlsTermination: 'edge',\n    insecureTraffic: 'Redirect',\n  });\n  return [preferredRoutingOptions, setPreferredRoutingOptions, preferredRoutingOptionsLoaded];\n};\n","import * as React from 'react';\nimport { Resources } from '../import/import-types';\nimport FormSection from '../import/section/FormSection';\nimport { HealthChecksProbeType } from './health-checks-types';\nimport HealthCheckProbe from './HealthCheckProbe';\n\ninterface HealthChecksProps {\n  title?: string;\n  resourceType: Resources;\n}\n\nconst HealthChecks: React.FC<HealthChecksProps> = ({ title, resourceType }) => (\n  <FormSection title={title}>\n    <HealthCheckProbe probeType={HealthChecksProbeType.ReadinessProbe} />\n\n    <HealthCheckProbe probeType={HealthChecksProbeType.LivenessProbe} />\n\n    {resourceType !== Resources.KnativeService && (\n      <HealthCheckProbe probeType={HealthChecksProbeType.StartupProbe} />\n    )}\n  </FormSection>\n);\n\nexport default HealthChecks;\n","import * as React from 'react';\nimport { Button, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { GreenCheckCircleIcon } from '@console/shared';\nimport { getHealthChecksProbeConfig, healthChecksDefaultValues } from './health-checks-probe-utils';\nimport { HealthCheckProbeData } from './health-checks-types';\nimport { HealthCheckContext } from './health-checks-utils';\nimport ProbeForm from './ProbeForm';\nimport './HealthCheckProbe.scss';\n\ninterface HealthCheckProbeProps {\n  probeType: string;\n}\n\nconst HealthCheckProbe: React.FC<HealthCheckProbeProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const [temporaryProbeData, setTemporaryProbeData] = React.useState<HealthCheckProbeData>();\n  const showProbe = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, true);\n    setTemporaryProbeData(healthChecks?.[probeType].data);\n  };\n\n  const handleDeleteProbe = () => {\n    setFieldValue(`healthChecks.${probeType}`, healthChecksDefaultValues);\n    if (healthChecks?.[probeType]?.modified) {\n      setFieldValue(`healthChecks.${probeType}.modified`, false);\n    } else {\n      setFieldValue(`healthChecks.${probeType}.modified`, true);\n    }\n  };\n\n  const handleReset = () => {\n    if (!healthChecks?.[probeType]?.enabled) {\n      setFieldValue(`healthChecks.${probeType}`, healthChecksDefaultValues);\n    } else {\n      setFieldValue(`healthChecks.${probeType}.showForm`, false);\n      setFieldValue(`healthChecks.${probeType}.data`, temporaryProbeData);\n    }\n    setFieldValue(`healthChecks.${probeType}.modified`, false);\n  };\n\n  const handleSubmit = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, false);\n    setFieldValue(`healthChecks.${probeType}.enabled`, true);\n    setFieldValue(`healthChecks.${probeType}.modified`, true);\n  };\n\n  const handleAddProbe = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, true);\n  };\n\n  const renderProbe = () => {\n    if (healthChecks?.[probeType]?.showForm) {\n      return <ProbeForm onSubmit={handleSubmit} onClose={handleReset} probeType={probeType} />;\n    }\n    if (healthChecks?.[probeType]?.enabled) {\n      return (\n        <>\n          <Button\n            className=\"odc-heath-check-probe__successButton\"\n            variant={ButtonVariant.plain}\n            isInline\n            onClick={showProbe}\n          >\n            <span className=\"odc-heath-check-probe__successText\">\n              <GreenCheckCircleIcon />{' '}\n              {t('devconsole~{{healthCheckProbeAdded}} added', {\n                healthCheckProbeAdded: getHealthChecksProbeConfig(probeType, t).formTitle,\n              })}\n            </span>\n          </Button>\n          {!viewOnly && (\n            <Tooltip content={t('devconsole~Remove')} position=\"right\">\n              <Button\n                className=\"pf-m-plain--align-left\"\n                variant={ButtonVariant.plain}\n                onClick={handleDeleteProbe}\n              >\n                <MinusCircleIcon />\n              </Button>\n            </Tooltip>\n          )}\n        </>\n      );\n    }\n    return viewOnly ? (\n      t('devconsole~No {{noHealthCheckProbe}}', {\n        noHealthCheckProbe: getHealthChecksProbeConfig(probeType, t).formTitle,\n      })\n    ) : (\n      <Button\n        className=\"pf-m-link--align-left\"\n        variant={ButtonVariant.link}\n        onClick={handleAddProbe}\n        icon={<PlusCircleIcon />}\n      >\n        {t('devconsole~Add {{addHealthCheckProbe}}', {\n          addHealthCheckProbe: getHealthChecksProbeConfig(probeType, t).formTitle,\n        })}\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"co-section-heading-tertiary odc-heath-check-probe__formTitle\">\n        {getHealthChecksProbeConfig(probeType, t).formTitle}\n        {healthChecks?.[probeType]?.enabled && (\n          <Button\n            className=\"pf-m-link--align-left\"\n            variant={ButtonVariant.link}\n            onClick={showProbe}\n          >\n            &nbsp;&nbsp;\n            {`${viewOnly ? t('devconsole~View') : t('devconsole~Edit')} ${t('devconsole~Probe')}`}\n          </Button>\n        )}\n      </div>\n      <div className=\"pf-v5-c-form__helper-text\">\n        {getHealthChecksProbeConfig(probeType, t).formSubtitle}\n      </div>\n      <div className=\"co-toolbar__group co-toolbar__group--left\">{renderProbe()}</div>\n    </>\n  );\n};\n\nexport default HealthCheckProbe;\n","import * as React from 'react';\nimport { TextInputTypes, InputGroupText } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { InputGroupField, InputField, DropdownField, ActionGroupWithIcons } from '@console/shared';\nimport FormSection from '../import/section/FormSection';\nimport { RequestType } from './health-checks-types';\nimport { HealthCheckContext } from './health-checks-utils';\nimport {\n  HTTPRequestTypeForm,\n  TCPRequestTypeForm,\n  CommandRequestTypeForm,\n} from './RequestTypeForms';\nimport './ProbeForm.scss';\n\nconst getRequestTypeForm = (value: string, probeType: string) => {\n  switch (value) {\n    case RequestType.HTTPGET:\n      return <HTTPRequestTypeForm probeType={probeType} />;\n    case RequestType.ContainerCommand:\n      return <CommandRequestTypeForm probeType={probeType} />;\n    case RequestType.TCPSocket:\n      return <TCPRequestTypeForm probeType={probeType} />;\n    default:\n      return null;\n  }\n};\n\ninterface ProbeFormProps {\n  onSubmit: () => void;\n  onClose: () => void;\n  probeType: string;\n}\n\nconst ProbeForm: React.FC<ProbeFormProps> = ({ onSubmit, onClose, probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n    errors,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const RequestTypeOptions = {\n    httpGet: t('devconsole~HTTP GET'),\n    command: t('devconsole~Container command'),\n    tcpSocket: t('devconsole~TCP socket'),\n  };\n  return (\n    <div className=\"odc-heath-check-probe-form\">\n      <FormSection>\n        <DropdownField\n          name={`healthChecks.${probeType}.data.requestType`}\n          label={t('devconsole~Type')}\n          items={RequestTypeOptions}\n          title={RequestType.HTTPGET}\n          disabled={viewOnly}\n          fullWidth\n        />\n        {getRequestTypeForm(healthChecks?.[probeType]?.data?.requestType, probeType)}\n        <InputField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.failureThreshold`}\n          label={t('devconsole~Failure threshold')}\n          style={{ maxWidth: '100%' }}\n          helpText={t(\n            'devconsole~How many times the probe will try starting or restarting before giving up.',\n          )}\n          isDisabled={viewOnly}\n        />\n        <InputField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.successThreshold`}\n          label={t('devconsole~Success threshold')}\n          style={{ maxWidth: '100%' }}\n          helpText={t(\n            'devconsole~How many consecutive successes for the probe to be considered successful after having failed.',\n          )}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.initialDelaySeconds`}\n          label={t('devconsole~Initial delay')}\n          helpText={t(\n            'devconsole~How long to wait after the Container starts before checking its health.',\n          )}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.periodSeconds`}\n          label={t('devconsole~Period')}\n          helpText={t('devconsole~How often to perform the probe.')}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.timeoutSeconds`}\n          label={t('devconsole~Timeout')}\n          helpText={t(\n            'devconsole~How long to wait for the probe to finish, if the time is exceeded, the probe is considered failed.',\n          )}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n      </FormSection>\n      <ActionGroupWithIcons\n        onSubmit={!viewOnly ? onSubmit : undefined}\n        onClose={onClose}\n        isDisabled={!_.isEmpty(errors?.healthChecks?.[probeType])}\n      />\n    </div>\n  );\n};\n\nexport default ProbeForm;\n","import * as React from 'react';\nimport { TextInputTypes, FormGroup } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { NameValueEditor } from '@console/internal/components/utils/name-value-editor';\nimport { InputField, CheckboxField, getFieldId, TextColumnField } from '@console/shared';\nimport { Resources } from '../import/import-types';\nimport { HealthCheckContext } from './health-checks-utils';\n\ninterface RequestTypeFormProps {\n  probeType?: string;\n}\n\nexport const renderPortField = (\n  fieldName: string,\n  resourceType: Resources,\n  viewOnly: boolean,\n  t: TFunction,\n) => {\n  if (resourceType === Resources.KnativeService) {\n    return (\n      <InputField\n        type={TextInputTypes.text}\n        name=\"knative-port\"\n        label={t('devconsole~Port')}\n        placeholder=\"0\"\n        isDisabled\n      />\n    );\n  }\n  return (\n    <InputField\n      type={TextInputTypes.text}\n      name={fieldName}\n      label={t('devconsole~Port')}\n      isDisabled={viewOnly}\n      required\n    />\n  );\n};\n\nexport const HTTPRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks, resources },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const httpHeaders = healthChecks?.[probeType]?.data?.httpGet?.httpHeaders;\n  const initialNameValuePairs = !_.isEmpty(httpHeaders)\n    ? httpHeaders.map((val) => _.values(val))\n    : [['', '']];\n  const [nameValue, setNameValue] = React.useState(initialNameValuePairs);\n  const portFieldName = `healthChecks.${probeType}.data.httpGet.port`;\n\n  const handleNameValuePairs = React.useCallback(\n    ({ nameValuePairs }) => {\n      const updatedNameValuePairs = _.compact(\n        nameValuePairs.map(([name, value]) => {\n          if (_.isObject(value)) {\n            return { name, valueFrom: value };\n          }\n          if (value.length) {\n            return { name, value };\n          }\n          return null;\n        }),\n      );\n      setNameValue(nameValuePairs);\n      setFieldValue(`healthChecks.${probeType}.data.httpGet.httpHeaders`, updatedNameValuePairs);\n    },\n    [setFieldValue, probeType],\n  );\n  return (\n    <>\n      <CheckboxField\n        name={`healthChecks.${probeType}.data.httpGet.scheme`}\n        label={t('devconsole~Use HTTPS')}\n        value=\"HTTPS\"\n        isDisabled={viewOnly}\n      />\n      <FormGroup\n        fieldId={getFieldId(`healthChecks.${probeType}.data.httpGet.httpHeaders`, 'name-value')}\n        name={`healthChecks.${probeType}.data.httpGet.httpHeaders`}\n        label={t('devconsole~HTTP Headers')}\n      >\n        <NameValueEditor\n          nameValuePairs={nameValue}\n          valueString={t('devconsole~Value')}\n          nameString={t('devconsole~Header name')}\n          addString={t('devconsole~Add header')}\n          readOnly={viewOnly}\n          allowSorting={false}\n          updateParentData={handleNameValuePairs}\n        />\n      </FormGroup>\n      <InputField\n        type={TextInputTypes.text}\n        name={`healthChecks.${probeType}.data.httpGet.path`}\n        label={t('devconsole~Path')}\n        placeholder=\"/\"\n        isDisabled={viewOnly}\n      />\n      {renderPortField(portFieldName, resources, viewOnly, t)}\n    </>\n  );\n};\n\nexport const TCPRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { resources },\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const portFieldName = `healthChecks.${probeType}.data.tcpSocket.port`;\n  return renderPortField(portFieldName, resources, viewOnly, t);\n};\n\nexport const CommandRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const commands = healthChecks?.[probeType]?.data?.exec?.command || [''];\n  return (\n    <TextColumnField\n      name={`healthChecks.${probeType}.data.exec.command`}\n      label={t('devconsole~Command')}\n      addLabel={t('devconsole~Add command')}\n      placeholder={t('devconsole~argument')}\n      helpText={t('devconsole~The command to run inside the Container.')}\n      required\n      disableDeleteRow={commands.length === 1}\n      isReadOnly={viewOnly}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { ContainerModel } from '@console/internal/models';\nimport { ResourceLimitField } from '@console/shared';\nimport { MemoryUnits, CPUUnits } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport type ResourceLimitSectionProps = {\n  hideTitle?: boolean;\n};\n\nconst ResourceLimitSection: React.FC<ResourceLimitSectionProps> = ({ hideTitle }) => {\n  const { t } = useTranslation();\n  const {\n    values: { container },\n  } = useFormikContext<FormikValues>();\n  return (\n    <FormSection\n      title={!hideTitle && t('devconsole~Resource limit')}\n      subTitle={t(\n        'devconsole~Resource limits control how much CPU and memory a container will consume on a node.',\n      )}\n      fullWidth\n    >\n      {container && (\n        <span>\n          {t('devconsole~Container')} &nbsp;\n          <ResourceIcon kind={ContainerModel.kind} /> {container}\n        </span>\n      )}\n      <div className=\"co-section-heading-tertiary\">{t('devconsole~CPU')}</div>\n      <ResourceLimitField\n        name=\"limits.cpu.request\"\n        label={t('devconsole~Request')}\n        unitName=\"limits.cpu.requestUnit\"\n        unitOptions={CPUUnits}\n        helpText={t('devconsole~The minimum amount of CPU the Container is guaranteed.')}\n      />\n\n      <ResourceLimitField\n        name=\"limits.cpu.limit\"\n        label={t('devconsole~Limit')}\n        unitName=\"limits.cpu.limitUnit\"\n        unitOptions={CPUUnits}\n        helpText={t(\n          'devconsole~The maximum amount of CPU the Container is allowed to use when running.',\n        )}\n      />\n\n      <div className=\"co-section-heading-tertiary\">{t('devconsole~Memory')}</div>\n      <ResourceLimitField\n        name=\"limits.memory.request\"\n        label={t('devconsole~Request')}\n        unitName=\"limits.memory.requestUnit\"\n        unitOptions={MemoryUnits}\n        helpText={t('devconsole~The minimum amount of Memory the Container is guaranteed.')}\n      />\n\n      <ResourceLimitField\n        name=\"limits.memory.limit\"\n        label={t('devconsole~Limit')}\n        unitName=\"limits.memory.limitUnit\"\n        unitOptions={MemoryUnits}\n        helpText={t(\n          'devconsole~The maximum amount of Memory the Container is allowed to use when running.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default ResourceLimitSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NumberSpinnerField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nconst ScalingSection: React.FC<{ name: string }> = ({ name }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection\n      title={t('devconsole~Scaling')}\n      subTitle={t('devconsole~Replicas are scaled manually based on CPU usage.')}\n      dataTest=\"scaling\"\n    >\n      <NumberSpinnerField\n        name={name}\n        label={t('devconsole~Replicas')}\n        helpText={t('devconsole~The number of instances of your Image.')}\n        setOutputAsIntegerFlag\n      />\n    </FormSection>\n  );\n};\n\nexport default ScalingSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { InputField, useDebounceCallback } from '@console/shared';\nimport FormSection from '../section/FormSection';\nimport SourceSecretSelector from './SourceSecretSelector';\n\nconst AdvancedGitOptions: React.FC<{\n  formContextField?: string;\n}> = ({ formContextField }) => {\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n\n  const { t } = useTranslation();\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n\n  const handleGitRefChange = useDebounceCallback((e: React.SyntheticEvent) =>\n    setFieldValue(`${fieldPrefix}git.ref`, (e.target as HTMLInputElement).value),\n  );\n\n  const handleGitDirChange = useDebounceCallback((e: React.SyntheticEvent) => {\n    setFieldValue(`${fieldPrefix}git.dir`, (e.target as HTMLInputElement).value);\n    setFieldTouched(`${fieldPrefix}git.dir`);\n  });\n\n  return (\n    <ExpandCollapse\n      textExpanded={t('devconsole~Hide advanced Git options')}\n      textCollapsed={t('devconsole~Show advanced Git options')}\n      dataTest=\"advanced-git-options\"\n    >\n      <FormSection>\n        <InputField\n          type={TextInputTypes.text}\n          name={`${fieldPrefix}git.ref`}\n          label={t('devconsole~Git reference')}\n          helpText={t('devconsole~Optional branch, tag, or commit.')}\n          onChange={handleGitRefChange}\n        />\n        <InputField\n          type={TextInputTypes.text}\n          name={`${fieldPrefix}git.dir`}\n          label={t('devconsole~Context dir')}\n          helpText={t(\n            'devconsole~Optional subdirectory for the source code, used as a context directory for build.',\n          )}\n          onChange={handleGitDirChange}\n        />\n        <SourceSecretSelector formContextField={formContextField} />\n      </FormSection>\n    </ExpandCollapse>\n  );\n};\n\nexport default AdvancedGitOptions;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { SecretTypeAbstraction } from '@console/internal/components/secrets/create-secret';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { SecretModel } from '@console/internal/models';\nimport { getFieldId } from '@console/shared';\nimport SourceSecretDropdown from '../../dropdown/SourceSecretDropdown';\nimport { secretModalLauncher } from '../CreateSecretModal';\n\nconst CREATE_SOURCE_SECRET = 'create-source-secret';\nconst CLEAR_SOURCE_SECRET = 'clear-source-secret';\n\nconst SourceSecretSelector: React.FC<{\n  formContextField?: string;\n}> = ({ formContextField }) => {\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const namespace: string = _.get(values, `${fieldPrefix}project.name`);\n  const secret: string = _.get(values, `${fieldPrefix}git.secret`);\n  const [data, loaded, loadError] = useK8sWatchResource(\n    namespace && secret\n      ? {\n          kind: SecretModel.kind,\n          namespace,\n          name: secret,\n          optional: true,\n          isList: false,\n        }\n      : null,\n  );\n\n  const handleSave = (name: string) => {\n    setFieldValue(`${fieldPrefix}git.secret`, name);\n  };\n\n  const handleDropdownChange = (key: string) => {\n    if (key === CREATE_SOURCE_SECRET) {\n      setFieldValue(`${fieldPrefix}git.secret`, secret);\n      secretModalLauncher({\n        namespace,\n        save: handleSave,\n        secretType: SecretTypeAbstraction.source,\n      });\n    } else if (key === CLEAR_SOURCE_SECRET) {\n      setFieldValue(`${fieldPrefix}git.secret`, '');\n      setFieldValue(`${fieldPrefix}git.secretResource`, {});\n    } else {\n      setFieldValue(`${fieldPrefix}git.secret`, key);\n    }\n  };\n\n  React.useEffect(() => {\n    loaded &&\n      !loadError &&\n      secret &&\n      data &&\n      setFieldValue(`${fieldPrefix}git.secretResource`, data);\n  }, [loaded, loadError, secret, data, setFieldValue, fieldPrefix]);\n\n  return (\n    <>\n      <FormGroup\n        fieldId={getFieldId('source-secret', 'dropdown')}\n        label={t('devconsole~Source Secret')}\n      >\n        <SourceSecretDropdown\n          dropDownClassName=\"dropdown--full-width\"\n          menuClassName=\"dropdown-menu--text-wrap\"\n          namespace={namespace}\n          actionItems={[\n            {\n              actionTitle: t('devconsole~Create new Secret'),\n              actionKey: CREATE_SOURCE_SECRET,\n            },\n            {\n              actionTitle: t('devconsole~No Secret'),\n              actionKey: CLEAR_SOURCE_SECRET,\n            },\n          ]}\n          selectedKey={secret}\n          title={secret}\n          onChange={handleDropdownChange}\n        />\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t('devconsole~Secret with credentials for pulling your source code.')}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default SourceSecretSelector;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Firehose } from '@console/internal/components/utils/firehose';\nimport { SecretModel } from '@console/internal/models';\nimport { ResourceDropdown } from '@console/shared';\n\ninterface SourceSecretDropdownProps {\n  dropDownClassName?: string;\n  menuClassName?: string;\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  onChange?: (key: string) => void;\n  title?: React.ReactNode;\n}\n\nconst SourceSecretDropdown: React.FC<SourceSecretDropdownProps> = (props) => {\n  const { t } = useTranslation();\n  const filterData = (item) => {\n    return item.type === 'kubernetes.io/basic-auth' || item.type === 'kubernetes.io/ssh-auth';\n  };\n  const resources = [\n    {\n      isList: true,\n      namespace: props.namespace,\n      kind: SecretModel.kind,\n      prop: 'secrets',\n    },\n  ];\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('devconsole~Select Secret name')}\n        resourceFilter={filterData}\n        dataSelector={['metadata', 'name']}\n      />\n    </Firehose>\n  );\n};\n\nexport default SourceSecretDropdown;\n","import * as React from 'react';\nimport { Tile, Flex, FlexItem, FormGroup } from '@patternfly/react-core';\nimport {\n  GithubIcon,\n  GitlabIcon,\n  BitbucketIcon,\n  GitAltIcon,\n} from '@patternfly/react-icons/dist/esm/icons';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport GiteaIcon from '../GiteaIcon';\nimport { GitReadableTypes } from '../import-types';\n\nimport './GitTypeSelector.scss';\n\ntype GitTypeSelectorProps = {\n  fieldPrefix: string;\n};\n\nconst GitTypeSelector: React.FC<GitTypeSelectorProps> = ({ fieldPrefix }) => {\n  const { values, setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const { t } = useTranslation();\n\n  const handleGitTypeChange = (gitType: GitProvider) => {\n    setFieldValue(`${fieldPrefix}git.type`, gitType, false);\n    setFieldTouched(`${fieldPrefix}git.type`, true, false);\n  };\n  const typeValue = _.get(values, `${fieldPrefix}git.type`);\n\n  return (\n    <>\n      <FormGroup label={t('devconsole~Git type')} isRequired id=\"git-type\">\n        <Flex spaceItems={{ default: 'spaceItemsSm' }}>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.GITHUB]}\n              icon={<GithubIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.GITHUB)}\n              isSelected={typeValue === GitProvider.GITHUB}\n              id=\"git-type-github\"\n            />\n          </FlexItem>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.GITLAB]}\n              icon={<GitlabIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.GITLAB)}\n              isSelected={typeValue === GitProvider.GITLAB}\n              id=\"git-type-gitlab\"\n            />\n          </FlexItem>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.BITBUCKET]}\n              icon={<BitbucketIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.BITBUCKET)}\n              isSelected={typeValue === GitProvider.BITBUCKET}\n              id=\"git-type-bitbucket\"\n            />\n          </FlexItem>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.GITEA]}\n              icon={<GiteaIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.GITEA)}\n              isSelected={typeValue === GitProvider.GITEA}\n              id=\"git-type-gitea\"\n            />\n          </FlexItem>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.UNSURE]}\n              icon={<GitAltIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.UNSURE)}\n              isSelected={typeValue === GitProvider.UNSURE}\n              id=\"git-type-other\"\n            />\n          </FlexItem>\n        </Flex>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default GitTypeSelector;\n","import * as React from 'react';\nimport { FormHelperText, Button, ButtonVariant } from '@patternfly/react-core';\nimport { LevelUpAltIcon } from '@patternfly/react-icons/dist/esm/icons/level-up-alt-icon';\nimport { useTranslation } from 'react-i18next';\n\nexport interface SampleRepoProps {\n  onClick: () => void;\n}\n\nconst SampleRepo = (props) => {\n  const { t } = useTranslation();\n  return (\n    <FormHelperText>\n      <Button {...props} type=\"button\" variant={ButtonVariant.link} isInline>\n        {t('devconsole~Try sample')} <LevelUpAltIcon />\n      </Button>\n    </FormHelperText>\n  );\n};\n\nexport default SampleRepo;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { ResourceName } from '@console/internal/components/utils';\nimport { ImageStreamTagModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { DropdownField } from '@console/shared';\nimport {\n  BuilderImage,\n  getTagDataWithDisplayName,\n  getPorts,\n} from '../../../utils/imagestream-utils';\nimport { useSafeK8s } from '../../../utils/safe-k8s-hook';\nimport BuilderImageEnvironments from './BuilderImageEnvironments';\nimport ImageStreamInfo from './ImageStreamInfo';\n\nexport interface BuilderImageTagSelectorProps {\n  selectedBuilderImage: BuilderImage;\n  selectedImageTag: string;\n  showImageInfo?: boolean;\n}\n\nconst BuilderImageTagSelector: React.FC<BuilderImageTagSelectorProps> = ({\n  selectedBuilderImage,\n  selectedImageTag,\n  showImageInfo = true,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      import: { showEditImportStrategy, selectedStrategy },\n    },\n    setFieldValue,\n    setFieldError,\n  } = useFormikContext<FormikValues>();\n  const {\n    name: imageName,\n    tags: imageTags,\n    displayName: imageDisplayName,\n    imageStreamNamespace,\n  } = selectedBuilderImage;\n\n  const tagItems = {};\n  _.each(\n    imageTags,\n    ({ name }) => (tagItems[name] = <ResourceName kind=\"ImageStreamTag\" name={name} />),\n  );\n\n  const [imageTag, displayName] = getTagDataWithDisplayName(\n    imageTags,\n    selectedImageTag,\n    imageDisplayName,\n  );\n\n  const isServerlessFunctionStrategySelected =\n    selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION;\n\n  const k8sGet = useSafeK8s();\n\n  React.useEffect(() => {\n    setFieldValue('image.tagObj', imageTag);\n    k8sGet(ImageStreamTagModel, `${imageName}:${selectedImageTag}`, imageStreamNamespace)\n      .then((imageStreamTag: K8sResourceKind) => {\n        const ports = getPorts(imageStreamTag);\n        setFieldValue('image.ports', ports);\n      })\n      .catch((err) => setFieldError('image.ports', err.message));\n    // Find a way to use useSafeK8s hooks without adding it to the deps array.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedImageTag, setFieldValue, setFieldError, imageName, imageStreamNamespace, imageTag]);\n\n  return (\n    <>\n      <div\n        style={\n          !showEditImportStrategy && !isServerlessFunctionStrategySelected\n            ? { display: 'none' }\n            : {}\n        }\n      >\n        <DropdownField\n          name=\"image.tag\"\n          label={t('devconsole~Builder Image version')}\n          items={tagItems}\n          title={tagItems[selectedImageTag]}\n          fullWidth\n          required\n        />\n      </div>\n      {imageTag && showImageInfo && <ImageStreamInfo displayName={displayName} tag={imageTag} />}\n      {!isServerlessFunctionStrategySelected && (\n        <BuilderImageEnvironments\n          name=\"image.imageEnv\"\n          imageStreamName={imageName}\n          imageStreamTag={selectedImageTag}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BuilderImageTagSelector;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ResourceDropdownField } from '@console/shared';\nimport { getImageStreamResource } from '../../../utils/imagestream-utils';\nimport { ImageStreamActions } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamDropdown: React.FC<{\n  disabled?: boolean;\n  formContextField?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, formContextField, reloadCount }) => {\n  const { t } = useTranslation();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const imgCollection = {};\n\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const { imageStream, formType } = _.get(values, formContextField) || values;\n  const { isi: initialIsi } = _.get(initialValues, formContextField) || initialValues;\n  const { state, dispatch, hasImageStreams, setHasImageStreams } = React.useContext(\n    ImageStreamContext,\n  );\n  const { accessLoading, loading } = state;\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const collectImageStreams = (namespace: string, resource: K8sResourceKind): void => {\n    if (!imgCollection[namespace]) {\n      imgCollection[namespace] = {};\n    }\n    imgCollection[namespace][resource.metadata.name] = resource;\n  };\n  const getTitle = () => {\n    return loading && !isStreamsAvailable\n      ? ''\n      : !isStreamsAvailable\n      ? t('devconsole~No Image Stream')\n      : t('devconsole~Select Image Stream');\n  };\n\n  const onDropdownChange = React.useCallback(\n    (img: string) => {\n      setFieldValue(\n        `${fieldPrefix}imageStream.tag`,\n        img === imageStream.image ? imageStream.tag : '',\n      );\n      formType !== 'edit' && setFieldValue(`${fieldPrefix}isi`, initialIsi);\n      const image = _.get(imgCollection, [imageStream.namespace, img], {});\n      dispatch({ type: ImageStreamActions.setSelectedImageStream, value: image });\n    },\n    [\n      setFieldValue,\n      fieldPrefix,\n      imageStream.image,\n      imageStream.tag,\n      imageStream.namespace,\n      formType,\n      initialIsi,\n      imgCollection,\n      dispatch,\n    ],\n  );\n  const onLoad = (imgstreams) => {\n    const imageStreamAvailable = !_.isEmpty(imgstreams);\n    setHasImageStreams(imageStreamAvailable);\n    loading &&\n      isNamespaceSelected &&\n      dispatch({ type: ImageStreamActions.setLoading, value: false });\n  };\n  const resourceFilter = (resource: K8sResourceKind) => {\n    const {\n      metadata: { namespace },\n    } = resource;\n    collectImageStreams(namespace, resource);\n    return namespace === imageStream.namespace;\n  };\n\n  React.useEffect(() => {\n    imageStream.image && onDropdownChange(imageStream.image);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageStream.image, isStreamsAvailable]);\n\n  React.useEffect(() => {\n    reloadCount && imageStream.image && onDropdownChange(imageStream.image);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reloadCount, isStreamsAvailable]);\n\n  return (\n    <ResourceDropdownField\n      name={`${fieldPrefix}imageStream.image`}\n      label={t('devconsole~Image Stream')}\n      resources={getImageStreamResource(imageStream.namespace)}\n      dataSelector={['metadata', 'name']}\n      key={imageStream.namespace}\n      fullWidth\n      required\n      title={imageStream.image || getTitle()}\n      disabled={!isStreamsAvailable || disabled}\n      onChange={onDropdownChange}\n      onLoad={onLoad}\n      resourceFilter={resourceFilter}\n    />\n  );\n};\n\nexport default ImageStreamDropdown;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceDropdownField } from '@console/shared';\nimport { getProjectResource, BuilderImagesNamespace } from '../../../utils/imagestream-utils';\nimport { ImageStreamActions as Action } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamNsDropdown: React.FC<{ disabled?: boolean; formContextField?: string }> = ({\n  disabled = false,\n  formContextField,\n}) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const { imageStream } = _.get(values, formContextField) || values;\n  const { isi: initialIsi } = _.get(initialValues, formContextField) || initialValues;\n  const { dispatch } = React.useContext(ImageStreamContext);\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const onDropdownChange = React.useCallback(\n    (ns?: string) => {\n      if (ns) {\n        setFieldValue(`${fieldPrefix}imageStream.image`, '');\n        setFieldValue(`${fieldPrefix}imageStream.tag`, '');\n      }\n      setFieldValue(`${fieldPrefix}isi`, initialIsi);\n      dispatch({ type: Action.setLoading, value: true });\n    },\n    [dispatch, fieldPrefix, initialIsi, setFieldValue],\n  );\n\n  React.useEffect(() => {\n    imageStream.namespace && onDropdownChange();\n  }, [onDropdownChange, imageStream.namespace]);\n\n  return (\n    <ResourceDropdownField\n      name={`${fieldPrefix}imageStream.namespace`}\n      label={t('devconsole~Project')}\n      title={imageStream.namespace || t('devconsole~Select Project')}\n      fullWidth\n      required\n      resources={getProjectResource()}\n      dataSelector={['metadata', 'name']}\n      onChange={onDropdownChange}\n      appendItems={{ openshift: BuilderImagesNamespace.Openshift }}\n      disabled={disabled}\n    />\n  );\n};\nexport default ImageStreamNsDropdown;\n","import * as React from 'react';\nimport { ValidatedOptions } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, getIn } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImageStreamTagModel } from '@console/internal/models';\nimport { k8sGet, K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { DropdownField } from '@console/shared';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport {\n  getImageStreamTags,\n  getPorts,\n  getSuggestedName,\n  makePortName,\n  imageStreamLabels,\n} from '../../../utils/imagestream-utils';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamTagDropdown: React.FC<{\n  disabled?: boolean;\n  formContextField?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, formContextField, reloadCount }) => {\n  const { t } = useTranslation();\n  const unmounted = React.useRef(false);\n  let imageStreamTagList = {};\n  const { values, setFieldValue, initialValues, touched } = useFormikContext<FormikValues>();\n  const { name: resourceName, imageStream, application, formType, isi: isiValues } =\n    _.get(values, formContextField) || values;\n  const isiPorts = isiValues?.ports;\n  const { imageStream: initialImageStream, route: initialRoute } =\n    _.get(initialValues, formContextField) || initialValues;\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { state, hasImageStreams, setValidated } = React.useContext(ImageStreamContext);\n  const { selectedImageStream, accessLoading, loading } = state;\n  imageStreamTagList = getImageStreamTags(selectedImageStream as K8sResourceKind);\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const isTagsAvailable = isStreamsAvailable && !_.isEmpty(imageStreamTagList);\n  const isImageStreamSelected = imageStream.image !== '';\n  const initialImageStreamImage = initialImageStream?.image;\n\n  const searchImageTag = React.useCallback(\n    (selectedTag: string) => {\n      setFieldValue(`${fieldPrefix}isSearchingForImage`, true);\n      k8sGet(ImageStreamTagModel, `${imageStream.image}:${selectedTag}`, imageStream.namespace)\n        .then((imageStreamImport) => {\n          if (unmounted.current) return;\n          const {\n            image,\n            tag,\n            status,\n            metadata: { labels },\n          } = imageStreamImport;\n          formContextField && setFieldValue(`${fieldPrefix}imageStreamTag`, imageStreamImport);\n          const imgStreamLabels = _.pick(labels, imageStreamLabels);\n          const name = imageStream.image;\n          const isi = { name, image, tag, status };\n          const ports = getPorts(isi);\n          setFieldValue(`${fieldPrefix}isSearchingForImage`, false);\n          setFieldValue(`${fieldPrefix}isi.name`, name);\n          setFieldValue(\n            `${fieldPrefix}isi.image`,\n            _.merge(image, { metadata: { labels: imgStreamLabels } }),\n          );\n          setFieldValue(`${fieldPrefix}isi.tag`, selectedTag);\n          setFieldValue(`${fieldPrefix}isi.ports`, ports);\n          setFieldValue(`${fieldPrefix}image.ports`, ports);\n          formType !== 'edit' &&\n            resourceName !== name &&\n            setFieldValue(`${fieldPrefix}name`, getSuggestedName(name));\n          application &&\n            application.selectedKey !== UNASSIGNED_KEY &&\n            !application.name &&\n            setFieldValue(`${fieldPrefix}application.name`, `${getSuggestedName(name)}-app`);\n          // set default port value\n          const targetPort =\n            initialRoute &&\n            (!initialRoute.targetPort ||\n              getIn(_.get(touched, `${fieldPrefix}imageStream`), 'image')) &&\n            !getIn(_.get(touched, `${fieldPrefix}route`), 'targetPort') &&\n            _.head(ports);\n          targetPort && setFieldValue(`${fieldPrefix}route.targetPort`, makePortName(targetPort));\n          setValidated(ValidatedOptions.success);\n        })\n        .catch((error) => {\n          if (unmounted.current) return;\n          setFieldValue(`${fieldPrefix}isi`, {});\n          setFieldValue(`${fieldPrefix}isi.status`, {\n            metadata: {},\n            status: '',\n            message: error.message,\n          });\n          setFieldValue(`${fieldPrefix}isSearchingForImage`, false);\n          setValidated(ValidatedOptions.error);\n        });\n    },\n    [\n      setFieldValue,\n      fieldPrefix,\n      imageStream.image,\n      imageStream.namespace,\n      formContextField,\n      resourceName,\n      formType,\n      application,\n      initialRoute,\n      touched,\n      setValidated,\n    ],\n  );\n\n  React.useEffect(() => {\n    imageStream.tag && searchImageTag(imageStream.tag);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageStream.tag]);\n\n  React.useEffect(() => {\n    reloadCount && imageStream.tag && searchImageTag(imageStream.tag);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reloadCount]);\n\n  React.useEffect(() => {\n    if (\n      initialRoute &&\n      getIn(_.get(touched, `${fieldPrefix}imageStream`), 'image') &&\n      !getIn(_.get(touched, `${fieldPrefix}route`), 'targetPort') &&\n      !_.isEqual(initialImageStreamImage, imageStream.image)\n    ) {\n      const targetPort: ContainerPort = _.head(isiPorts);\n      targetPort && setFieldValue(`${fieldPrefix}route.targetPort`, makePortName(targetPort));\n    }\n  }, [\n    touched.route,\n    touched.imageStream,\n    imageStream.image,\n    setFieldValue,\n    isiPorts,\n    initialRoute,\n    initialImageStreamImage,\n    fieldPrefix,\n    touched,\n  ]);\n\n  React.useEffect(() => {\n    return () => {\n      unmounted.current = true;\n    };\n  }, []);\n\n  return (\n    <DropdownField\n      name={`${fieldPrefix}imageStream.tag`}\n      label={t('devconsole~Tag')}\n      items={imageStreamTagList}\n      key={imageStream.image}\n      autocompleteFilter={fuzzy}\n      title={\n        imageStream.tag ||\n        (isNamespaceSelected && isImageStreamSelected && !isTagsAvailable\n          ? t('devconsole~No tag')\n          : t('devconsole~Select tag'))\n      }\n      disabled={!isImageStreamSelected || !isTagsAvailable || disabled}\n      fullWidth\n      required\n      onChange={(tag) => {\n        tag !== '' && searchImageTag(tag);\n      }}\n    />\n  );\n};\n\nexport default ImageStreamTagDropdown;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineKind, PipelineRunKind, TaskRunKind } from '../../../../types';\nimport { dagreViewerComponentFactory } from '../../pipeline-topology/factories';\nimport PipelineTopologyGraph from '../../pipeline-topology/PipelineTopologyGraph';\nimport { getGraphDataModel } from '../../pipeline-topology/utils';\n\nimport './PipelineVisualization.scss';\n\ninterface PipelineTopologyVisualizationProps {\n  pipeline: PipelineKind;\n  pipelineRun?: PipelineRunKind;\n  taskRuns?: TaskRunKind[];\n}\n\nconst PipelineVisualization: React.FC<PipelineTopologyVisualizationProps> = ({\n  pipeline,\n  pipelineRun,\n  taskRuns,\n}) => {\n  const { t } = useTranslation();\n  let content: React.ReactElement;\n  const model = getGraphDataModel(pipeline, pipelineRun, taskRuns);\n\n  if (!model || (model.nodes.length === 0 && model.edges.length === 0)) {\n    // Nothing to render\n    content = (\n      <Alert\n        variant=\"info\"\n        isInline\n        title={t('pipelines-plugin~This Pipeline has no tasks to visualize.')}\n      />\n    );\n  } else {\n    content = (\n      <PipelineTopologyGraph\n        data-test=\"pipeline-visualization\"\n        componentFactory={dagreViewerComponentFactory}\n        model={model}\n        showControlBar\n      />\n    );\n  }\n\n  return <div className=\"odc-pipeline-visualization\">{content}</div>;\n};\n\nexport default PipelineVisualization;\n","import * as React from 'react';\nimport { ComponentFactory, Model } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport PipelineVisualizationSurface from './PipelineVisualizationSurface';\n\nimport './PipelineTopologyGraph.scss';\n\ntype PipelineTopologyGraphProps = {\n  builder?: boolean;\n  model: Model;\n  componentFactory: ComponentFactory;\n  showControlBar?: boolean;\n};\n\nconst PipelineTopologyGraph: React.FC<PipelineTopologyGraphProps> = ({\n  builder,\n  model,\n  componentFactory,\n  ...props\n}) => {\n  return (\n    <div\n      className={cx('odc-pipeline-topology-graph', { builder })}\n      data-test={props['data-test'] || 'pipeline-topology-graph'}\n    >\n      <PipelineVisualizationSurface\n        model={model}\n        componentFactory={componentFactory}\n        noScrollbar={builder}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PipelineTopologyGraph);\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { CheckboxField, EnvironmentField } from '@console/shared';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface DeploymentConfigSectionProps {\n  namespace: string;\n  resource?: K8sResourceKind;\n  showHeader?: boolean;\n}\n\nconst DeploymentConfigSection: React.FC<DeploymentConfigSectionProps> = ({\n  namespace,\n  resource,\n  showHeader,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      resources,\n      deployment: { env },\n      import: { selectedStrategy, knativeFuncLoaded: funcLoaded },\n    },\n  } = useFormikContext<FormikValues>();\n  const deploymentConfigObj = resource || {\n    kind: 'DeploymentConfig',\n    metadata: {\n      namespace,\n    },\n  };\n\n  return (\n    <FormSection title={showHeader && t('devconsole~Deployment')} fullWidth>\n      <CheckboxField\n        name=\"deployment.triggers.image\"\n        label={t('devconsole~Auto deploy when new Image is available')}\n      />\n      {resources === Resources.OpenShift && (\n        <CheckboxField\n          name=\"deployment.triggers.config\"\n          label={t('devconsole~Auto deploy when deployment configuration changes')}\n        />\n      )}\n      {(\n        selectedStrategy.type === ImportStrategy.SERVERLESS_FUNCTION ? funcLoaded ?? false : true\n      ) ? (\n        <EnvironmentField\n          name=\"deployment.env\"\n          label={t('devconsole~Environment variables (runtime only)')}\n          envs={env}\n          obj={deploymentConfigObj}\n        />\n      ) : (\n        <LoadingBox />\n      )}\n    </FormSection>\n  );\n};\n\nexport default DeploymentConfigSection;\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { DropdownField, DroppableFileInputField, CheckboxField } from '@console/shared';\nimport { usePreferredRoutingOptions } from '../../user-preferences/usePreferredRoutingOptions';\nimport {\n  TerminationType,\n  PassthroughInsecureTrafficType,\n  InsecureTrafficType,\n} from '../import-types';\n\nconst SecureRoute: React.FC = () => {\n  const { t } = useTranslation();\n  const [preferredRoutingOptions, , preferredRoutingOptionsLoaded] = usePreferredRoutingOptions();\n  const { secure: secureRoute, tlsTermination, insecureTraffic } =\n    preferredRoutingOptionsLoaded && preferredRoutingOptions;\n  const {\n    values: {\n      formType,\n      route: { secure, tls },\n    },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n\n  const terminationOptions = {\n    [TerminationType.EDGE]: t('devconsole~Edge'),\n    [TerminationType.PASSTHROUGH]: t('devconsole~Passthrough'),\n    [TerminationType.REENCRYPT]: t('devconsole~Re-encrypt'),\n  };\n  const insecureTrafficOptions =\n    tls.termination === TerminationType.PASSTHROUGH\n      ? {\n          [PassthroughInsecureTrafficType.None]: t('devconsole~None'),\n          [PassthroughInsecureTrafficType.Redirect]: t('devconsole~Redirect'),\n        }\n      : {\n          [InsecureTrafficType.None]: t('devconsole~None'),\n          [InsecureTrafficType.Allow]: t('devconsole~Allow'),\n          [InsecureTrafficType.Redirect]: t('devconsole~Redirect'),\n        };\n\n  React.useEffect(() => {\n    if (formType !== 'edit' && preferredRoutingOptionsLoaded) {\n      setFieldValue('route.secure', secureRoute, false);\n      setFieldValue('route.tls.termination', tlsTermination, false);\n      setFieldValue('route.tls.insecureEdgeTerminationPolicy', insecureTraffic, true);\n    }\n  }, [\n    formType,\n    insecureTraffic,\n    preferredRoutingOptionsLoaded,\n    secureRoute,\n    setFieldValue,\n    tlsTermination,\n  ]);\n  return (\n    <>\n      <CheckboxField\n        name=\"route.secure\"\n        label={t('devconsole~Secure Route')}\n        formLabel={t('devconsole~Security')}\n        helpText={t(\n          'devconsole~Routes can be secured using several TLS termination types for serving certificates.',\n        )}\n      />\n      {secure && (\n        <>\n          <DropdownField\n            name=\"route.tls.termination\"\n            label={t('devconsole~TLS termination')}\n            items={terminationOptions}\n            title={t('devconsole~Select termination type')}\n            fullWidth\n          />\n          <DropdownField\n            name=\"route.tls.insecureEdgeTerminationPolicy\"\n            label={t('devconsole~Insecure traffic')}\n            items={insecureTrafficOptions}\n            title={t('devconsole~Select insecure traffic type')}\n            helpText={t('devconsole~Policy for traffic on insecure schemes like HTTP.')}\n            fullWidth\n          />\n          {tls.termination && tls.termination !== 'passthrough' && (\n            <>\n              <h3>{t('devconsole~Certificates')}</h3>\n              <FormHelperText>\n                {t(\n                  \"devconsole~TLS certificates for edge and re-encrypt termination. If not specified, the router's default certificate is used.\",\n                )}\n              </FormHelperText>\n              <DroppableFileInputField\n                name=\"route.tls.certificate\"\n                label={t('devconsole~Certificate')}\n                helpText={t(\n                  'devconsole~The PEM format certificate. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              <DroppableFileInputField\n                name=\"route.tls.key\"\n                label={t('devconsole~Private Key')}\n                helpText={t(\n                  'devconsole~The PEM format key. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              <DroppableFileInputField\n                name=\"route.tls.caCertificate\"\n                label={t('devconsole~CA certificate')}\n                helpText={t(\n                  'devconsole~The PEM format CA certificate chain. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              {tls.termination === 'reencrypt' && (\n                <DroppableFileInputField\n                  name=\"route.tls.destinationCaCertificate\"\n                  label={t('devconsole~Destination CA Certificate')}\n                  helpText={t(\n                    'devconsole~The PEM format CA certificate chain to validate the endpoint certificate for re-encrypt termination. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                  )}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SecureRoute;\n","import * as React from 'react';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared';\nimport { ClusterBuildStrategyModel } from '@console/shipwright-plugin/src/models';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\n\n/** NOTE: ClusterBuildStrategies are needed to be installed to use Shipwright Builds */\nexport const useShipwrightBuilds = (): boolean => {\n  return useFlag('SHIPWRIGHT_BUILD');\n};\n\nexport interface AvailableBuildStrategies {\n  s2i: boolean;\n  buildah: boolean;\n}\n\nexport const useClusterBuildStrategy = (): [AvailableBuildStrategies, boolean] => {\n  const [data, setData] = React.useState<AvailableBuildStrategies>({\n    s2i: false,\n    buildah: false,\n  });\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [, s2iLoaded, s2iErr] = useK8sGet<K8sResourceKind>(\n    ClusterBuildStrategyModel,\n    ClusterBuildStrategy.S2I,\n  );\n  const [, buildahLoaded, buildahErr] = useK8sGet<K8sResourceKind>(\n    ClusterBuildStrategyModel,\n    ClusterBuildStrategy.BUILDAH,\n  );\n\n  React.useEffect(() => {\n    if (s2iLoaded && buildahLoaded) {\n      setLoaded(true);\n    }\n  }, [s2iLoaded, buildahLoaded]);\n\n  React.useEffect(() => {\n    if (loaded) {\n      if (!s2iErr) {\n        setData((prevData) => ({\n          ...prevData,\n          s2i: true,\n        }));\n      }\n      if (!buildahErr) {\n        setData((prevData) => ({\n          ...prevData,\n          buildah: true,\n        }));\n      }\n    }\n  }, [loaded, s2iErr, buildahErr]);\n\n  return [data, loaded];\n};\n\nexport const isPreferredStrategyAvailable = (\n  importStrategy: ImportStrategy,\n  clusterBuildStrategy: AvailableBuildStrategies,\n) => {\n  switch (importStrategy) {\n    case ImportStrategy.S2I:\n      return clusterBuildStrategy.s2i;\n    case ImportStrategy.DOCKERFILE:\n      return clusterBuildStrategy.buildah;\n    default:\n      return false;\n  }\n};\n","import * as React from 'react';\nimport { observer, Node, NodeModel, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport {\n  BUILDER_NODE_ADD_RADIUS,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  FINALLY_ADD_LINK_TEXT_HEIGHT,\n  BUILDER_NODE_DECORATOR_RADIUS,\n  FINALLY_ADD_LINK_SIZE,\n  WHEN_EXPRESSION_SPACING,\n} from './const';\nimport { integralShapePath, straightPath } from './draw-utils';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport LoadingTask from './LoadingTask';\nimport PlusNodeDecorator from './PlusNodeDecorator';\nimport TaskList from './TaskList';\nimport { BuilderFinallyNodeModel } from './types';\n\nimport './BuilderFinallyNode.scss';\n\ntype BuilderFinallyNodeProps = {\n  element: Node<NodeModel, BuilderFinallyNodeModel>;\n};\n\nconst BuilderFinallyNode: React.FC<BuilderFinallyNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const { width, height } = element.getBounds();\n  const { task, namespace } = element.getData();\n\n  const {\n    addNewFinallyListNode,\n    finallyTasks = [],\n    finallyListTasks = [],\n    finallyLoadingTasks = [],\n    finallyInvalidListTasks = [],\n    onTaskSearch = () => {},\n  } = task;\n  const allTasksLength =\n    finallyTasks.length +\n    finallyListTasks.length +\n    finallyLoadingTasks.length +\n    finallyInvalidListTasks.length;\n  const nodeCenter = NODE_HEIGHT + NODE_HEIGHT / 2;\n  const leftPadding = FINALLY_NODE_PADDING + WHEN_EXPRESSION_SPACING;\n  const verticalHeight = NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING;\n  const finallyTaskLinkX =\n    FINALLY_NODE_PADDING +\n    FINALLY_NODE_PADDING / 2 +\n    (allTasksLength === 0 ? 0 : WHEN_EXPRESSION_SPACING);\n\n  const IntegralShape = ({ taskIndex }: { taskIndex: number }) => (\n    <path\n      className=\"opp-builder-finally-node__task-connectors\"\n      d={\n        nodeCenter + taskIndex * verticalHeight === height / 2\n          ? straightPath(new Point(leftPadding, height / 2), new Point(0, height / 2))\n          : integralShapePath(\n              new Point(0, height / 2),\n              new Point(leftPadding, nodeCenter + taskIndex * verticalHeight),\n            )\n      }\n    />\n  );\n\n  return (\n    <g data-test=\"builder-finally-node\">\n      <rect className=\"opp-builder-finally-node\" width={width} height={height} rx=\"20\" ry=\"20\" />\n\n      {finallyTasks.map((ft, i) => (\n        <g key={ft.name}>\n          <IntegralShape taskIndex={i} />\n          <g\n            data-test={`finally-task-node ${ft.name}`}\n            transform={`translate(${leftPadding}, ${\n              NODE_HEIGHT * i + FINALLY_NODE_VERTICAL_SPACING * i + FINALLY_NODE_PADDING\n            })`}\n            onClick={ft.onTaskSelection}\n          >\n            <PipelineVisualizationTask\n              task={ft}\n              namespace={namespace}\n              disableTooltip\n              selected={ft.selected}\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              isFinallyTask\n            />\n            {ft.error && (\n              <ErrorNodeDecorator\n                x={BUILDER_NODE_ADD_RADIUS / 2}\n                y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n                errorStr={ft.error}\n              />\n            )}\n          </g>\n        </g>\n      ))}\n      {finallyLoadingTasks.map((fld, i) => (\n        <g key={fld.name} data-test={`finally-loading-task-list-node ${fld.name}`}>\n          <IntegralShape taskIndex={i + finallyTasks.length} />\n          <g\n            transform={`translate(${leftPadding},\n          ${\n            NODE_HEIGHT * (i + finallyTasks.length) +\n            FINALLY_NODE_VERTICAL_SPACING * (i + finallyTasks.length) +\n            FINALLY_NODE_PADDING\n          })`}\n          >\n            <LoadingTask width={NODE_WIDTH} height={NODE_HEIGHT} name={fld.name} key={fld.name} />\n          </g>\n        </g>\n      ))}\n      {finallyInvalidListTasks.map((ivl, i) => (\n        <g key={ivl.name} data-test={`finally-invalid-task-list-node ${ivl.name}`}>\n          <IntegralShape taskIndex={i + finallyTasks.length + finallyLoadingTasks.length} />\n          <g\n            transform={`translate(${leftPadding},\n              ${\n                NODE_HEIGHT * (i + finallyTasks.length + finallyLoadingTasks.length) +\n                FINALLY_NODE_VERTICAL_SPACING *\n                  (i + finallyTasks.length + finallyLoadingTasks.length) +\n                FINALLY_NODE_PADDING\n              })`}\n          >\n            <TaskList\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              onRemoveTask={ivl.onRemoveTask}\n              onNewTask={ivl.convertList}\n              onTaskSearch={onTaskSearch}\n              unselectedText={ivl.name}\n            />\n            <ErrorNodeDecorator\n              x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n              y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n              errorStr={t('pipelines-plugin~Task does not exist')}\n            />\n          </g>\n        </g>\n      ))}\n\n      {finallyListTasks.map((flt, i) => (\n        <g key={flt.name} data-test={`finally-task-list-node ${flt.name}`}>\n          <IntegralShape\n            taskIndex={\n              i + finallyTasks.length + finallyLoadingTasks.length + finallyInvalidListTasks.length\n            }\n          />\n          <g\n            transform={`translate(${leftPadding},\n              ${\n                NODE_HEIGHT *\n                  (i +\n                    finallyTasks.length +\n                    finallyLoadingTasks.length +\n                    finallyInvalidListTasks.length) +\n                FINALLY_NODE_VERTICAL_SPACING *\n                  (i +\n                    finallyTasks.length +\n                    finallyLoadingTasks.length +\n                    finallyInvalidListTasks.length) +\n                FINALLY_NODE_PADDING\n              })`}\n          >\n            <TaskList\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              onRemoveTask={flt.onRemoveTask}\n              onNewTask={flt.convertList}\n              onTaskSearch={onTaskSearch}\n            />\n          </g>\n        </g>\n      ))}\n      {\n        <g\n          transform={`translate(${finallyTaskLinkX}, ${\n            allTasksLength * NODE_HEIGHT +\n            (allTasksLength - 1) * FINALLY_NODE_VERTICAL_SPACING +\n            NODE_HEIGHT +\n            FINALLY_ADD_LINK_TEXT_HEIGHT +\n            FINALLY_NODE_PADDING\n          })`}\n          style={{ cursor: 'pointer' }}\n          onClick={addNewFinallyListNode}\n        >\n          <g>\n            <PlusNodeDecorator\n              x={0}\n              y={FINALLY_ADD_LINK_TEXT_HEIGHT - FINALLY_ADD_LINK_SIZE}\n              tooltip={t('pipelines-plugin~Add finally task')}\n            />\n            <text\n              x={FINALLY_ADD_LINK_SIZE}\n              data-test=\"add-finally-node\"\n              className=\"opp-builder-finally-node__text\"\n            >\n              {t('pipelines-plugin~Add finally task')}\n            </text>\n          </g>\n        </g>\n      }\n    </g>\n  );\n};\n\nexport default observer(BuilderFinallyNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ComputedStatus } from '../../../types';\nimport { NODE_HEIGHT } from './const';\nimport { getWhenExpressionDiamondState } from './utils';\n\nimport './WhenExpressionDecorator.scss';\n\ntype WhenExpressionDecoratorProps = {\n  width: number;\n  height: number;\n  leftOffset?: number;\n  stroke?: string;\n  status: ComputedStatus;\n  appendLine?: boolean;\n  enableTooltip?: boolean;\n  isFinallyTask: boolean;\n  isPipelineRun: boolean;\n};\n\nconst WhenExpressionDecorator: React.FC<WhenExpressionDecoratorProps> = ({\n  width,\n  height,\n  enableTooltip,\n  appendLine = false,\n  status,\n  leftOffset = 2,\n  isFinallyTask,\n  isPipelineRun,\n}) => {\n  const nodeRef = React.useRef();\n  const rotation = 45; // 45deg\n  const { tooltipContent, diamondColor } = getWhenExpressionDiamondState(\n    status,\n    isPipelineRun,\n    isFinallyTask,\n  );\n  const diamondHeight =\n    Math.round(width * Math.sin(rotation)) + Math.round(height * Math.cos(rotation));\n  const diamondNode = (\n    <g\n      transform={`translate(-${width * leftOffset}, ${NODE_HEIGHT / 2 - diamondHeight / 2})`}\n      ref={nodeRef}\n    >\n      <rect\n        data-test=\"diamond-decorator\"\n        className=\"opp-when-expression-decorator-diamond\"\n        width={width}\n        height={height}\n        fill={diamondColor}\n        stroke={isPipelineRun ? diamondColor : 'var(--pf-v5-global--BorderColor--light-100)'}\n      />\n      {appendLine && (\n        <line\n          x1={diamondHeight / 2}\n          y1={diamondHeight / 2}\n          x2={width * leftOffset}\n          y2={diamondHeight / 2}\n          stroke=\"var(--pf-v5-global--BorderColor--light-100)\"\n        />\n      )}\n    </g>\n  );\n\n  return enableTooltip ? (\n    <Tooltip\n      triggerRef={nodeRef}\n      position=\"bottom\"\n      enableFlip={false}\n      content={<div data-test=\"when-expression-tooltip\">{tooltipContent}</div>}\n    >\n      {diamondNode}\n    </Tooltip>\n  ) : (\n    diamondNode\n  );\n};\n\nexport default WhenExpressionDecorator;\n","export interface Vertex {\n  name: string;\n  level: number;\n  dependancy: {};\n  dependancyNames: string[];\n  hasOutgoing: boolean;\n  data: any;\n}\n\ntype Vertices = Map<string, Vertex>;\n\nexport class DAG {\n  names: string[];\n\n  vertices: Vertices;\n\n  constructor() {\n    this.names = [];\n    this.vertices = new Map();\n  }\n\n  private visit(\n    vertex: Vertex,\n    fn: (v: Vertex, path: string[]) => void,\n    visited?: any,\n    path?: string[],\n  ) {\n    const { name } = vertex;\n    const vertices = vertex.dependancy;\n    const names = vertex.dependancyNames;\n    const len = names.length;\n\n    if (!visited) {\n      // eslint-disable-next-line no-param-reassign\n      visited = new Map();\n    }\n    if (!path) {\n      // eslint-disable-next-line no-param-reassign\n      path = [];\n    }\n    if (visited.has(name)) {\n      return;\n    }\n    path.push(name);\n    visited.set(name, true);\n    for (let i = 0; i < len; i++) {\n      this.visit(vertices[names[i]], fn, visited, path);\n    }\n    fn(vertex, path);\n    path.pop();\n  }\n\n  private map(name: string, data: any) {\n    const vertex = this.addVertex(name);\n    vertex.data = data;\n  }\n\n  addVertex(name: string) {\n    if (!name) {\n      return null;\n    }\n    if (this.vertices.has(name)) {\n      return this.vertices.get(name);\n    }\n\n    const vertex: Vertex = {\n      name,\n      level: 0,\n      dependancy: {},\n      dependancyNames: [],\n      hasOutgoing: false,\n      data: {},\n    };\n    this.vertices.set(name, vertex);\n    this.names.push(name);\n    return vertex;\n  }\n\n  addEdge(source: string, target: string): void {\n    if (!source || !target || source === target) {\n      return;\n    }\n    const fromNode = this.addVertex(source);\n    const toNode = this.addVertex(target);\n\n    if (toNode.dependancy[source]) {\n      return;\n    }\n\n    const checkCycle = (vertex: Vertex, path: string[]) => {\n      if (vertex.name === target) {\n        throw new Error(`cycle detected: ${path.reverse().join(' --> ')} --> ${target}`);\n      } else {\n        vertex.level = path.length;\n      }\n    };\n    this.visit(fromNode, checkCycle);\n    fromNode.hasOutgoing = true;\n    toNode.dependancy[source] = fromNode;\n    toNode.dependancyNames.push(source);\n  }\n\n  addEdges(name: string, data: any, before: string | string[], after: string | string[]): void {\n    this.map(name, data);\n\n    if (before) {\n      if (typeof before === 'string') {\n        this.addEdge(name, before);\n      } else {\n        before.forEach((b) => this.addEdge(name, b));\n      }\n    }\n    if (after) {\n      if (typeof after === 'string') {\n        this.addEdge(after, name);\n      } else {\n        after.forEach((a) => this.addEdge(a, name));\n      }\n    }\n  }\n\n  topologicalSort(fn: any): void {\n    const visited = new Map();\n    const { vertices } = this;\n    const { names } = this;\n    const len = names.length;\n\n    for (let i = 0; i < len; i++) {\n      const vertex: Vertex = vertices.get(names[i]);\n      if (!vertex.hasOutgoing) {\n        this.visit(vertex, fn, visited);\n      }\n    }\n  }\n\n  printGraph() {\n    const orderedNodes = [];\n    this.topologicalSort((v, t) => {\n      v.data.stage = this.names.length - t.length;\n      orderedNodes.push(v.name);\n    });\n    // eslint-disable-next-line no-console\n    console.log(orderedNodes.join(' --> '));\n    return orderedNodes.join(' --> ');\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { InProgressIcon } from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './InstallingNodeDecorator.scss';\n\ntype InstallingNodeDecoratorProps = {\n  content: string;\n  x: number;\n  y: number;\n};\nconst InstallingNodeDecorator: React.FC<InstallingNodeDecoratorProps> = ({ content, x, y }) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={content}>\n      <g\n        ref={iconRef}\n        className=\"opp-installing-node-decorator\"\n        transform={`translate(${x}, ${y})`}\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <circle\n          cx={0}\n          cy={0}\n          r={BUILDER_NODE_DECORATOR_RADIUS}\n          className=\"opp-installing-node-decorator__circle\"\n        />\n        <g transform=\"translate(-5, -7)\">\n          <InProgressIcon className=\"fa-spin\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default InstallingNodeDecorator;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { TrashIcon } from '@patternfly/react-icons/dist/esm/icons/trash-icon';\nimport { global_palette_black_500 as greyColor } from '@patternfly/react-tokens';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './RemoveNodeDecorator.scss';\n\ntype RemoveNodeDecoratorProps = {\n  content: string;\n  x: number;\n  y: number;\n  removeCallback?: () => void;\n};\n\nconst RemoveNodeDecorator: React.FC<RemoveNodeDecoratorProps> = ({\n  content,\n  x,\n  y,\n  removeCallback = () => {},\n}) => {\n  const trashRef = React.useRef();\n  return (\n    <Tooltip triggerRef={trashRef} content={content}>\n      <g\n        ref={trashRef}\n        className=\"opp-remove-node-decorator\"\n        transform={`translate(${x}, ${y})`}\n        onClick={(e) => {\n          e.stopPropagation();\n          removeCallback();\n        }}\n        data-id=\"delete-task\"\n      >\n        <circle cx={0} cy={0} r={BUILDER_NODE_DECORATOR_RADIUS} fill={greyColor.value} />\n        <g transform=\"translate(-6, -6)\">\n          <TrashIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default RemoveNodeDecorator;\n","import * as React from 'react';\nimport { TooltipPosition } from '@patternfly/react-core';\nimport { Node, NodeModel, observer, useHover } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AddNodeDirection,\n  BUILDER_NODE_ADD_RADIUS,\n  BUILDER_NODE_DECORATOR_RADIUS,\n  BUILDER_NODE_ADD_PADDING,\n} from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport PlusNodeDecorator from './PlusNodeDecorator';\nimport TaskNode from './TaskNode';\nimport { BuilderNodeModelData } from './types';\n\ntype BuilderNodeProps = {\n  element: Node<NodeModel, BuilderNodeModelData>;\n};\n\nconst BuilderNode: React.FC<BuilderNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const [showAdd, hoverRef] = useHover();\n  const { width, height } = element.getBounds();\n  const data = element.getData();\n  const { error, onAddNode, onNodeSelection } = data;\n\n  return (\n    <g className=\"odc-builder-node\" data-test={`builder-node ${data.task.name}`} ref={hoverRef}>\n      <rect\n        x={-BUILDER_NODE_ADD_RADIUS * 2}\n        y={0}\n        width={width + BUILDER_NODE_ADD_RADIUS * 4}\n        height={height + BUILDER_NODE_ADD_RADIUS * 2}\n        fill=\"transparent\"\n      />\n      <g onClick={() => onNodeSelection(data)}>\n        <TaskNode element={element} disableTooltip />\n        {error && (\n          <ErrorNodeDecorator\n            x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n            y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n            errorStr={error}\n          />\n        )}\n      </g>\n      <g style={{ display: showAdd ? 'block' : 'none' }}>\n        <PlusNodeDecorator\n          data-test=\"add-after\"\n          x={width + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING}\n          y={height / 2}\n          tooltip={t('pipelines-plugin~Add a sequential task after this task')}\n          onClick={() => onAddNode(AddNodeDirection.AFTER)}\n        />\n        <PlusNodeDecorator\n          data-test=\"add-before\"\n          x={-BUILDER_NODE_ADD_RADIUS - BUILDER_NODE_ADD_PADDING}\n          y={height / 2}\n          tooltip={t('pipelines-plugin~Add a sequential task before this task')}\n          onClick={() => onAddNode(AddNodeDirection.BEFORE)}\n        />\n        <PlusNodeDecorator\n          data-test=\"add-parallel\"\n          x={width / 2}\n          y={height + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING}\n          tooltip={t('pipelines-plugin~Add a parallel task')}\n          tooltipPosition={TooltipPosition.bottom}\n          onClick={() => onAddNode(AddNodeDirection.PARALLEL)}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport default observer(BuilderNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/question-circle-icon';\nimport { global_palette_black_500 as customTaskColor } from '@patternfly/react-tokens/dist/js/global_palette_black_500';\nimport { observer, Node, NodeModel, useHover, createSvgIdUrl } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  K8sResourceKind,\n  WatchK8sResults,\n  getGroupVersionKindForModel,\n} from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { useK8sWatchResources } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks';\nimport { resourcePathFromModel, truncateMiddle } from '@console/internal/components/utils';\nimport { CustomRunModelV1Beta1 } from '@console/pipelines-plugin/src/models';\nimport { SvgDropShadowFilter } from '@console/topology/src/components/svg';\nimport { TaskKind, CustomRunKind } from '../../../types';\nimport { TaskNodeModelData } from './types';\n\nimport './CustomTaskNode.scss';\n\ntype CustomTaskNodeProps = {\n  element: Node<NodeModel, TaskNodeModelData>;\n  disableTooltip?: boolean;\n};\n\ntype WatchResource = {\n  [key: string]: K8sResourceKind[] | K8sResourceKind;\n};\n\ninterface CustomTaskProps {\n  pipelineRunName?: string;\n  name: string;\n  loaded?: boolean;\n  task?: {\n    data: TaskKind;\n  };\n  namespace: string;\n  disableVisualizationTooltip?: boolean;\n  width: number;\n  height: number;\n  customTask?: K8sResourceKind;\n}\n\nconst FILTER_ID = 'SvgTaskDropShadowFilterId';\n\nconst CustomTaskComponent: React.FC<CustomTaskProps> = ({\n  pipelineRunName,\n  namespace,\n  task,\n  name,\n  disableVisualizationTooltip,\n  width,\n  height,\n  customTask,\n}) => {\n  const { t } = useTranslation();\n  const showStatusState: boolean = !!pipelineRunName;\n  const visualName = name || _.get(task, ['metadata', 'name'], '');\n  const nameRef = React.useRef();\n  const pillRef = React.useRef();\n\n  const path = `${resourcePathFromModel(\n    CustomRunModelV1Beta1,\n    customTask?.metadata?.name,\n    namespace,\n  )}`;\n  const enableLogLink = !!path;\n  const [hover, hoverRef] = useHover();\n  const truncatedVisualName = React.useMemo(\n    () => truncateMiddle(visualName, { length: showStatusState ? 11 : 14, truncateEnd: true }),\n    [visualName, showStatusState],\n  );\n\n  const renderVisualName = (\n    <text\n      ref={nameRef}\n      x={showStatusState ? 30 : width / 2}\n      y={height / 2 + 1}\n      className={cx('odc-pipeline-vis-task-text', {\n        'is-text-center': !pipelineRunName,\n        'is-linked': enableLogLink,\n      })}\n    >\n      {truncatedVisualName}\n    </text>\n  );\n\n  let taskPill = (\n    <g ref={hoverRef}>\n      <SvgDropShadowFilter dy={1} id={FILTER_ID} />\n      <rect\n        filter={hover ? createSvgIdUrl(FILTER_ID) : ''}\n        width={width}\n        height={height}\n        rx={5}\n        className={cx('odc-pipeline-vis-task', {\n          'is-selected': !!pipelineRunName && hover,\n          'is-linked': !!pipelineRunName && enableLogLink,\n        })}\n        style={{\n          stroke: customTaskColor.value,\n        }}\n      />\n      {visualName !== truncatedVisualName && disableVisualizationTooltip ? (\n        <Tooltip triggerRef={nameRef} content={visualName}>\n          {renderVisualName}\n        </Tooltip>\n      ) : (\n        renderVisualName\n      )}\n\n      {showStatusState && (\n        <>\n          <svg\n            width={30}\n            height={30}\n            viewBox=\"-10 -7 30 30\"\n            style={{\n              color: customTaskColor.value,\n            }}\n          >\n            {<QuestionCircleIcon />}\n          </svg>\n        </>\n      )}\n    </g>\n  );\n\n  if (!disableVisualizationTooltip) {\n    taskPill = (\n      <Tooltip\n        triggerRef={pillRef}\n        position=\"bottom\"\n        enableFlip={false}\n        content={t('pipelines-plugin~Custom Task')}\n      >\n        <g ref={pillRef}>{taskPill}</g>\n      </Tooltip>\n    );\n  }\n  return (\n    <g className={cx('odc-pipeline-topology__task-node', { 'is-link': enableLogLink })}>\n      {enableLogLink ? <Link to={path}>{taskPill}</Link> : taskPill}\n    </g>\n  );\n};\n\nconst CustomTaskNode: React.FC<CustomTaskNodeProps> = ({ element, disableTooltip }) => {\n  const { height, width } = element.getBounds();\n\n  const { pipeline, pipelineRun, task } = element.getData();\n\n  const customTaskName = `${pipelineRun?.metadata?.name}-${task?.name}`;\n\n  const watchedResources = {\n    customRun: {\n      groupVersionKind: getGroupVersionKindForModel(CustomRunModelV1Beta1),\n      name: customTaskName,\n      namespace: pipeline?.metadata?.namespace,\n      prop: 'task',\n    },\n  };\n\n  const resourcesData: WatchK8sResults<WatchResource> = useK8sWatchResources<WatchResource>(\n    watchedResources,\n  );\n\n  const taskComponent: JSX.Element = (\n    <CustomTaskComponent\n      pipelineRunName={pipelineRun?.metadata?.name}\n      name={task.name || ''}\n      task={task.taskSpec && { data: { spec: task.taskSpec } }}\n      namespace={pipeline?.metadata?.namespace}\n      disableVisualizationTooltip={disableTooltip}\n      width={width}\n      height={height}\n      customTask={resourcesData.customRun?.data as CustomRunKind}\n    />\n  );\n  return taskComponent;\n};\n\nexport default React.memo(observer(CustomTaskNode));\n","import * as React from 'react';\nimport { observer, Node, NodeModel, Point } from '@patternfly/react-topology';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport {\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  WHEN_EXPRESSION_SPACING,\n} from './const';\nimport { integralShapePath, straightPath } from './draw-utils';\nimport { FinallyNodeModel } from './types';\n\nimport './FinallyNode.scss';\n\ntype FinallyNodeProps = {\n  element: Node<NodeModel, FinallyNodeModel>;\n};\n\nconst FinallyNode: React.FC<FinallyNodeProps> = ({ element }) => {\n  const { task, pipeline, pipelineRun } = element.getData();\n  const { width, height } = element.getBounds();\n  const nodeCenter = NODE_HEIGHT + NODE_HEIGHT / 2;\n  const leftPadding = FINALLY_NODE_PADDING + WHEN_EXPRESSION_SPACING;\n  const verticalHeight = NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING;\n\n  const { finallyTasks = [] } = task;\n  return (\n    <g transform=\"translate(0.5, 0.5)\" data-test=\"finally-node\">\n      <rect\n        className=\"opp-finally-node\"\n        strokeWidth={1}\n        width={width}\n        height={height}\n        rx=\"20\"\n        ry=\"20\"\n      />\n\n      {finallyTasks.map((ft, i) => {\n        return (\n          <g key={ft.name} data-test={`finally-task-node ${ft.name}`}>\n            <path\n              className=\"opp-finally-node__connector\"\n              d={\n                nodeCenter + i * verticalHeight === height / 2\n                  ? straightPath(new Point(leftPadding, height / 2), new Point(0, height / 2))\n                  : integralShapePath(\n                      new Point(0, height / 2),\n                      new Point(leftPadding, nodeCenter + i * verticalHeight),\n                    )\n              }\n            />\n            <g\n              transform={`translate(${leftPadding}, ${\n                NODE_HEIGHT * i + FINALLY_NODE_VERTICAL_SPACING * i + FINALLY_NODE_PADDING\n              })`}\n            >\n              <PipelineVisualizationTask\n                pipelineRunName={pipelineRun?.metadata?.name}\n                task={ft}\n                pipelineRunStatus={pipelineRun && pipelineRunFilterReducer(pipelineRun)}\n                namespace={pipeline?.metadata?.namespace}\n                selected={ft.selected}\n                width={NODE_WIDTH}\n                height={NODE_HEIGHT}\n                isFinallyTask\n                isSkipped={pipelineRun?.status?.skippedTasks?.some((t) => t.name === ft.name)}\n              />\n            </g>\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\nexport default observer(FinallyNode);\n","import * as React from 'react';\nimport { Node, NodeModel, observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport TaskListNode from './TaskListNode';\nimport { TaskListNodeModelData } from './types';\n\ntype InvalidTaskListNodeProps = {\n  element: Node<NodeModel, TaskListNodeModelData>;\n};\n\nconst InvalidTaskListNode: React.FC<InvalidTaskListNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const {\n    task: { name },\n  } = element.getData();\n\n  return (\n    <g>\n      <TaskListNode element={element} unselectedText={name} />\n      <ErrorNodeDecorator\n        x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n        y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n        errorStr={t('pipelines-plugin~Task does not exist')}\n      />\n    </g>\n  );\n};\n\nexport default observer(InvalidTaskListNode);\n","import * as React from 'react';\nimport { observer, Node } from '@patternfly/react-topology';\nimport LoadingTask from './LoadingTask';\n\nconst LoadingNode: React.FC<{ element: Node }> = ({ element }) => {\n  const { height, width } = element.getBounds();\n  const {\n    task: { name },\n  } = element.getData();\n\n  return <LoadingTask {...{ width, height, name }} />;\n};\n\nexport default observer(LoadingNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  DEFAULT_LAYER,\n  DEFAULT_WHEN_OFFSET,\n  Layer,\n  Node,\n  ScaleDetailsLevel,\n  TaskNode,\n  TOP_LAYER,\n  useDetailsLevel,\n  useHover,\n  WhenDecorator,\n  WithContextMenuProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { ClusterTaskModel, PipelineRunModel, TaskModel } from '../../../models';\nimport { ComputedStatus, TaskKind } from '../../../types';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER } from '../const';\nimport {\n  createStepStatus,\n  StepStatus,\n} from '../detail-page-tabs/pipeline-details/pipeline-step-utils';\nimport { PipelineVisualizationStepList } from '../detail-page-tabs/pipeline-details/PipelineVisualizationStepList';\nimport { NodeType } from './const';\nimport { getTooltipContent } from './utils';\n\nimport './PipelineTaskNode.scss';\n\ntype PipelineTaskNodeProps = {\n  element: Node;\n} & WithContextMenuProps &\n  WithSelectionProps;\n\nconst PipelineTaskNode: React.FunctionComponent<PipelineTaskNodeProps> = ({\n  element,\n  onContextMenu,\n  contextMenuOpen,\n  ...rest\n}) => {\n  const data = element.getData();\n  const [hover, hoverRef] = useHover();\n  const taskRef = React.useRef();\n  const detailsLevel = useDetailsLevel();\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n  const isFinallyTask = element.getType() === NodeType.FINALLY_NODE;\n  let resources;\n  if (\n    !IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER &&\n    data.task?.taskRef?.kind === ClusterTaskModel.kind\n  ) {\n    resources = {\n      kind: referenceForModel(ClusterTaskModel),\n      name: data.task.taskRef.name,\n      prop: 'task',\n    };\n  } else if (data.task?.taskRef) {\n    resources = {\n      kind: referenceForModel(TaskModel),\n      name: data.task.taskRef.name,\n      namespace: data.pipeline.metadata.namespace,\n      prop: 'task',\n    };\n  }\n  const [task] = useK8sWatchResource<TaskKind>(resources);\n\n  const computedTask = task && Object.keys(task).length ? task : data.task;\n  const stepList =\n    computedTask?.status?.steps || computedTask?.spec?.steps || computedTask?.taskSpec?.steps || [];\n\n  const pipelineRunStatus = data.pipelineRun && pipelineRunFilterReducer(data.pipelineRun);\n  const isSkipped = !!(\n    computedTask &&\n    data.pipelineRun?.status?.skippedTasks?.some(\n      (skippedTask) => skippedTask.name === data.task.name,\n      (skippedTask) => skippedTask.name === computedTask.name,\n    )\n  );\n\n  const taskStatus = data.task?.status || {\n    duration: '',\n    reason: ComputedStatus.Idle,\n  };\n  if (\n    pipelineRunStatus === ComputedStatus.Failed ||\n    pipelineRunStatus === ComputedStatus.Cancelled\n  ) {\n    if (\n      data.task?.status?.reason === ComputedStatus.Idle ||\n      data.task?.status?.reason === ComputedStatus.Pending\n    ) {\n      taskStatus.reason = ComputedStatus.Cancelled;\n    }\n  }\n  if (isSkipped) {\n    taskStatus.reason = ComputedStatus.Skipped;\n  }\n\n  const stepStatusList: StepStatus[] = stepList.map((step) => createStepStatus(step, taskStatus));\n  const { pipelineRun } = data;\n  const succeededStepsCount = stepStatusList.filter(\n    ({ status }) => status === ComputedStatus.Succeeded,\n  ).length;\n\n  const badge =\n    stepStatusList.length > 0 && data.status\n      ? `${succeededStepsCount}/${stepStatusList.length}`\n      : null;\n\n  const passedData = React.useMemo(() => {\n    const newData = { ...data };\n    Object.keys(newData).forEach((key) => {\n      if (newData[key] === undefined) {\n        delete newData[key];\n      }\n    });\n    return newData;\n  }, [data]);\n\n  const hasTaskIcon = !!(data.taskIconClass || data.taskIcon);\n  const tooltipContent = getTooltipContent(data.task?.status?.reason);\n  const whenDecorator = data.whenStatus ? (\n    <WhenDecorator\n      element={element}\n      status={data.whenStatus}\n      leftOffset={\n        hasTaskIcon\n          ? DEFAULT_WHEN_OFFSET + (element.getBounds().height - 4) * 0.75\n          : DEFAULT_WHEN_OFFSET\n      }\n      toolTip={tooltipContent}\n    />\n  ) : null;\n\n  const { name: plrName, namespace } = pipelineRun?.metadata;\n  const path = plrName\n    ? `${resourcePathFromModel(\n        PipelineRunModel,\n        plrName,\n        namespace,\n      )}/logs?taskName=${element.getLabel()}`\n    : undefined;\n\n  const enableLogLink =\n    data.status !== ComputedStatus.Idle &&\n    data.status !== ComputedStatus.Pending &&\n    data.status !== ComputedStatus.Cancelled &&\n    data.status !== ComputedStatus.Skipped &&\n    !!path;\n\n  const taskNode = (\n    <TaskNode\n      className=\"odc-pipeline-topology__task-node\"\n      element={element}\n      onContextMenu={data.showContextMenu ? onContextMenu : undefined}\n      contextMenuOpen={contextMenuOpen}\n      scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n      hideDetailsAtMedium\n      {...passedData}\n      {...rest}\n      badge={badge}\n      truncateLength={element.getData()?.label?.length}\n    >\n      {whenDecorator}\n    </TaskNode>\n  );\n\n  const classes = classNames('odc-pipeline-topology__task-node', { 'is-link': enableLogLink });\n  return (\n    <Layer\n      id={\n        detailsLevel !== ScaleDetailsLevel.high && (hover || contextMenuOpen)\n          ? TOP_LAYER\n          : DEFAULT_LAYER\n      }\n    >\n      <g data-test={`task ${element.getLabel()}`} className={classes} ref={hoverRef}>\n        <Tooltip\n          enableFlip\n          triggerRef={taskRef}\n          content={\n            <PipelineVisualizationStepList\n              isSpecOverview={!data.status}\n              taskName={element.getLabel()}\n              steps={stepStatusList}\n              isFinallyTask={isFinallyTask}\n            />\n          }\n        >\n          <g ref={taskRef}>{enableLogLink ? <Link to={path}>{taskNode}</Link> : taskNode}</g>\n        </Tooltip>\n      </g>\n    </Layer>\n  );\n};\n\nexport default React.memo(observer(PipelineTaskNode));\n","import * as React from 'react';\nimport { Edge, Point } from '@patternfly/react-topology';\nimport { integralShapePath } from './draw-utils';\n\nconst TaskEdge: React.FC<{ element: Edge }> = ({ element }) => {\n  const startPoint: Point = element.getStartPoint();\n  const endPoint: Point = element.getEndPoint();\n  const sourceNode = element.getSource();\n  const targetNode = element.getTarget();\n\n  return (\n    <path\n      d={integralShapePath(\n        startPoint.clone().translate(sourceNode.getBounds().width / 2 - 1, 0),\n        endPoint.clone().translate(-targetNode.getBounds().width / 2, 0),\n      )}\n      stroke=\"var(--pf-v5-global--BorderColor--light-100)\"\n      fill=\"none\"\n      transform=\"translate(0.5,0.5)\"\n    />\n  );\n};\n\nexport default TaskEdge;\n","import * as React from 'react';\nimport {\n  GRAPH_LAYOUT_END_EVENT,\n  Model,\n  Node,\n  Visualization,\n  VisualizationSurface,\n  VisualizationProvider,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  TopologyControlBar,\n  TopologyView,\n  Controller,\n  GRAPH_POSITION_CHANGE_EVENT,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport Measure from 'react-measure';\nimport {\n  DROP_SHADOW_SPACING,\n  NODE_HEIGHT,\n  TOOLBAR_HEIGHT,\n  GRAPH_MIN_WIDTH,\n  PipelineLayout,\n  GRAPH_MAX_HEIGHT_PERCENT,\n} from './const';\nimport { layoutFactory } from './factories';\nimport { getLayoutData } from './utils';\n\ntype PipelineVisualizationSurfaceProps = {\n  model: Model;\n  componentFactory: ComponentFactory;\n  showControlBar?: boolean;\n  noScrollbar?: boolean;\n};\n\nconst PipelineVisualizationSurface: React.FC<PipelineVisualizationSurfaceProps> = ({\n  model,\n  componentFactory,\n  showControlBar = false,\n  noScrollbar = false,\n}) => {\n  const [vis, setVis] = React.useState<Controller>(null);\n  const [maxSize, setMaxSize] = React.useState(null);\n  const [width, setWidth] = React.useState(null);\n  const storedGraphModel = React.useRef(null);\n\n  const layout: PipelineLayout = model.graph.layout as PipelineLayout;\n\n  const onLayoutUpdate = React.useCallback(\n    (nodes: Node[]) => {\n      const nodeBounds = nodes.map((node) => node.getBounds());\n      const maxWidth = Math.floor(\n        nodeBounds.map((bounds) => bounds.width).reduce((w1, w2) => Math.max(w1, w2), 0),\n      );\n      const maxHeight = Math.floor(\n        nodeBounds.map((bounds) => bounds.height).reduce((h1, h2) => Math.max(h1, h2), 0),\n      );\n      const maxObject = nodeBounds.find((nb) => nb.height === maxHeight);\n\n      const maxX = Math.floor(\n        nodeBounds.map((bounds) => bounds.x).reduce((x1, x2) => Math.max(x1, x2), 0),\n      );\n      const maxY = Math.floor(\n        nodeBounds.map((bounds) => bounds.y).reduce((y1, y2) => Math.max(y1, y2), 0),\n      );\n\n      let horizontalMargin = 0;\n      let verticalMargin = 0;\n      if (layout) {\n        horizontalMargin = getLayoutData(layout).marginx || 0;\n        verticalMargin = getLayoutData(layout).marginy || 0;\n      }\n      const finallyTaskHeight = maxObject.y + maxHeight + DROP_SHADOW_SPACING + verticalMargin * 2;\n      const regularTaskHeight = maxY + NODE_HEIGHT + DROP_SHADOW_SPACING + verticalMargin * 2;\n\n      setMaxSize({\n        height: Math.max(finallyTaskHeight, regularTaskHeight) + TOOLBAR_HEIGHT,\n        width: Math.max(\n          maxX + maxWidth + DROP_SHADOW_SPACING + horizontalMargin * 2,\n          GRAPH_MIN_WIDTH,\n        ),\n      });\n    },\n    [setMaxSize, layout],\n  );\n\n  React.useEffect(() => {\n    if (vis === null) {\n      const visualization = new Visualization();\n      visualization.registerLayoutFactory(layoutFactory);\n      visualization.registerComponentFactory(componentFactory);\n      visualization.fromModel(model);\n      visualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, () => {\n        storedGraphModel.current = visualization.getGraph().toModel();\n      });\n      visualization.addEventListener(GRAPH_LAYOUT_END_EVENT, () => {\n        onLayoutUpdate(visualization.getGraph().getNodes());\n      });\n      setVis(visualization);\n    } else {\n      const graph = storedGraphModel.current;\n      if (graph) {\n        model.graph = graph;\n      }\n      vis.fromModel(model);\n      vis.getGraph().layout();\n    }\n  }, [vis, model, onLayoutUpdate, componentFactory]);\n\n  React.useEffect(() => {\n    if (model && vis) {\n      const graph = storedGraphModel.current;\n      if (graph) {\n        model.graph = graph;\n      }\n      vis.fromModel(model);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, vis]);\n\n  if (!vis) return null;\n\n  const controlBar = (controller) => (\n    <TopologyControlBar\n      controlButtons={createTopologyControlButtons({\n        ...defaultControlButtonsOptions,\n        zoomInCallback: action(() => {\n          controller.getGraph().scaleBy(4 / 3);\n        }),\n        zoomOutCallback: action(() => {\n          controller.getGraph().scaleBy(0.75);\n        }),\n        fitToScreenCallback: action(() => {\n          controller.getGraph().fit(80);\n        }),\n        resetViewCallback: action(() => {\n          controller.getGraph().reset();\n          controller.getGraph().layout();\n        }),\n        legend: false,\n      })}\n    />\n  );\n\n  return (\n    <Measure\n      bounds\n      onResize={(contentRect) => {\n        setWidth(contentRect.bounds?.width);\n      }}\n    >\n      {({ measureRef }) => (\n        <div ref={measureRef}>\n          <div\n            style={{\n              height: noScrollbar\n                ? maxSize?.height\n                : Math.min((GRAPH_MAX_HEIGHT_PERCENT / 100) * window.innerHeight, maxSize?.height),\n              width: noScrollbar ? maxSize?.width : Math.min(maxSize?.width, width),\n            }}\n          >\n            <VisualizationProvider controller={vis}>\n              {showControlBar ? (\n                <TopologyView controlBar={controlBar(vis)}>\n                  <VisualizationSurface />\n                </TopologyView>\n              ) : (\n                <VisualizationSurface />\n              )}\n            </VisualizationProvider>\n          </div>\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nexport default PipelineVisualizationSurface;\n","import * as React from 'react';\nimport { FormGroup, Flex, FlexItem, Tile, Text } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { ConfigMapKind } from 'public/module/k8s/types';\nimport { PacConfigurationTypes } from '../consts';\nimport { RepositoryFormValues } from '../types';\nimport GithubSection from './GithubSection';\nimport WebhookSection from './WebhookSection';\n\ntype ConfigTypeSectionProps = {\n  pac: ConfigMapKind;\n  formContextField?: string;\n};\n\nconst ConfigTypeSection: React.FC<ConfigTypeSectionProps> = ({ pac, formContextField }) => {\n  const { values, setFieldValue } = useFormikContext<FormikValues & RepositoryFormValues>();\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { method } = _.get(values, formContextField) || values;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Text>\n        {t(\n          'pipelines-plugin~A GitHub App is already set up for this cluster. To use it, install the GitHub app on your personal account or GitHub organization.',\n        )}\n      </Text>\n      <br />\n      <FormSection extraMargin>\n        <FormGroup fieldId=\"method\">\n          <Flex>\n            <FlexItem span={3}>\n              <Tile\n                data-test=\"github\"\n                title={t('pipelines-plugin~Use GitHub App')}\n                onClick={() => setFieldValue(`${fieldPrefix}method`, PacConfigurationTypes.GITHUB)}\n                isSelected={method === PacConfigurationTypes.GITHUB}\n              />\n            </FlexItem>\n            <FlexItem span={3}>\n              <Tile\n                data-test=\"webhook\"\n                title={t('pipelines-plugin~Setup a webhook')}\n                onClick={() => setFieldValue(`${fieldPrefix}method`, PacConfigurationTypes.WEBHOOK)}\n                isSelected={method === PacConfigurationTypes.WEBHOOK}\n              />\n            </FlexItem>\n          </Flex>\n        </FormGroup>\n      </FormSection>\n      <FormSection fullWidth={method === PacConfigurationTypes.WEBHOOK || !fieldPrefix}>\n        {method === PacConfigurationTypes.GITHUB && <GithubSection pac={pac} />}\n        {method === PacConfigurationTypes.WEBHOOK && (\n          <WebhookSection pac={pac} formContextField={formContextField} />\n        )}\n      </FormSection>\n    </>\n  );\n};\n\nexport default ConfigTypeSection;\n","import * as React from 'react';\nimport { Text } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { ConfigMapKind } from '@console/internal/module/k8s/types';\n\ntype GithubSectionProps = {\n  pac: ConfigMapKind;\n};\n\nconst GithubSection: React.FC<GithubSectionProps> = ({ pac }) => {\n  const { t } = useTranslation();\n  const appLink = pac?.data?.['app-link'] ?? '';\n  return (\n    <Text>\n      <Trans t={t} ns=\"pipelines-plugin\">\n        Use{' '}\n        <a target=\"_blank\" href={appLink} rel=\"noopener noreferrer\">\n          {appLink}\n        </a>{' '}\n        link to install the GitHub Application to your repositories in your organisation/account.\n      </Trans>\n    </Text>\n  );\n};\n\nexport default GithubSection;\n","import * as React from 'react';\nimport { List, ListItem } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { GitProvider } from '@console/git-service';\nimport { RepositoryFormValues } from '../types';\n\ntype PermissionsSectionProps = {\n  formContextField?: string;\n};\n\nconst PermissionsSection: React.FC<PermissionsSectionProps> = ({ formContextField }) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<RepositoryFormValues>();\n  const { gitProvider } = _.get(values, formContextField) || values;\n\n  let permission;\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Commit comments')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Issue comments')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull request')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pushes')}</ListItem>\n        </List>\n      );\n      break;\n    case GitProvider.GITLAB:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Merge request Events')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Push Events')}</ListItem>\n        </List>\n      );\n      break;\n    case GitProvider.BITBUCKET:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Repository: Push')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Created')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Updated')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Comment Created')}</ListItem>\n        </List>\n      );\n      break;\n    default:\n      permission = null;\n  }\n  return permission;\n};\n\nexport default PermissionsSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SelectorInputField from '@console/shared/src/components/formik-fields/SelectorInputField';\nimport FormSection from '../section/FormSection';\n\nconst LabelSection: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <FormSection\n      title={t('devconsole~Labels')}\n      subTitle={t('devconsole~Each label is applied to each created resource.')}\n    >\n      <SelectorInputField name=\"labels\" placeholder=\"app.io/type=frontend\" dataTest=\"labels\" />\n    </FormSection>\n  );\n};\n\nexport default LabelSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxField } from '@console/shared';\nimport { Resources, RouteData } from '../import-types';\nimport AdvancedRouteOptions from '../route/AdvancedRouteOptions';\nimport PortInputField from '../route/PortInputField';\n\ninterface RouteSectionProps {\n  route: RouteData;\n  resources: Resources;\n}\n\nconst RouteSection: React.FC<RouteSectionProps> = ({ route, resources }) => {\n  const { t } = useTranslation();\n  const { defaultUnknownPort, disable, create } = route;\n\n  return (\n    <>\n      <PortInputField defaultPort={defaultUnknownPort} />\n      <CheckboxField\n        name=\"route.create\"\n        label={t('devconsole~Create a route')}\n        helpText={t('devconsole~Exposes your component at a public URL')}\n        isDisabled={disable}\n      />\n      <AdvancedRouteOptions canCreateRoute={create} resources={resources} />\n    </>\n  );\n};\n\nexport default RouteSection;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport SelectorInputField from '@console/shared/src/components/formik-fields/SelectorInputField';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport ServerlessRouteSection from '../serverless/ServerlessRouteSection';\nimport CreateRoute from './CreateRoute';\nimport SecureRoute from './SecureRoute';\n\ntype AdvancedRouteOptionsProps = {\n  canCreateRoute: boolean;\n  resources: Resources;\n};\n\nconst AdvancedRouteOptions: React.FC<AdvancedRouteOptionsProps> = ({\n  canCreateRoute,\n  resources,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <ExpandCollapse\n      textExpanded={t('devconsole~Hide advanced Routing options')}\n      textCollapsed={t('devconsole~Show advanced Routing options')}\n    >\n      <FormSection>\n        {canCreateRoute ? (\n          resources === Resources.KnativeService ? (\n            <ServerlessRouteSection />\n          ) : (\n            <>\n              <CreateRoute />\n              <SecureRoute />\n              <SelectorInputField\n                name=\"route.labels\"\n                label={t('devconsole~Labels')}\n                helpText={t(\n                  'devconsole~Additional labels which are only added to the Route resource.',\n                )}\n                placeholder=\"app.io/type=frontend\"\n                dataTest=\"route-labels\"\n              />\n            </>\n          )\n        ) : (\n          <Alert\n            variant=\"info\"\n            isInline\n            title={t(\n              'devconsole~Select the checkbox \"Create a route\" to edit advanced routing options',\n            )}\n          />\n        )}\n      </FormSection>\n    </ExpandCollapse>\n  );\n};\n\nexport default AdvancedRouteOptions;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { DomainMappingModel } from '@console/knative-plugin/src';\nimport { MultiTypeaheadField } from '@console/shared';\nimport { GitImportFormData, DeployImageFormData, UploadJarFormData } from '../import-types';\nimport {\n  getAllOtherDomainMappingInUse,\n  getOtherKsvcFromDomainMapping,\n  hasOtherKsvcDomainMappings,\n  removeDuplicateDomainMappings,\n} from './serverless-utils';\n\nconst ServerlessRouteSection: React.FC = () => {\n  const { t } = useTranslation();\n  const {\n    setFieldValue,\n    values: {\n      name,\n      project: { name: namespace },\n      serverless,\n    },\n  } = useFormikContext<DeployImageFormData | GitImportFormData | UploadJarFormData>();\n  const resource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: referenceForModel(DomainMappingModel),\n      isList: true,\n      namespace,\n      optional: true,\n    }),\n    [namespace],\n  );\n  const [data, domainMappingLoaded, domainMappingLoadErr] = useK8sWatchResource<K8sResourceKind[]>(\n    resource,\n  );\n  const domainMappingResources = React.useMemo(() => {\n    return domainMappingLoaded && !domainMappingLoadErr\n      ? data.map((dm) => {\n          const ksvc = getOtherKsvcFromDomainMapping(dm, name);\n          return {\n            value: ksvc ? `${dm.metadata.name} (${ksvc})` : dm.metadata.name,\n            disabled: false,\n          };\n        })\n      : [];\n  }, [domainMappingLoaded, domainMappingLoadErr, data, name]);\n\n  React.useEffect(() => {\n    if (domainMappingLoaded && !domainMappingLoadErr && data?.length) {\n      const mappedDomain = data\n        .filter((domainRes) => domainRes.spec?.ref?.name === name)\n        .map((filterDm) => filterDm.metadata.name);\n      const newDomainMap = [\n        ...(serverless.domainMapping ? serverless.domainMapping : []),\n        ...mappedDomain,\n      ];\n      setFieldValue('serverless', {\n        ...serverless,\n        domainMapping: removeDuplicateDomainMappings(newDomainMap, mappedDomain),\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, domainMappingLoaded, domainMappingLoadErr, name, setFieldValue]);\n\n  const domainsInUse = getAllOtherDomainMappingInUse(serverless.domainMapping, data, name) ?? [];\n  return (\n    <>\n      {domainMappingLoaded || domainMappingLoadErr ? (\n        <>\n          <MultiTypeaheadField\n            data-test-id=\"domain-mapping-field\"\n            name=\"serverless.domainMapping\"\n            label={t('devconsole~Domain mapping')}\n            ariaLabel={t('devconsole~Domain mapping')}\n            options={domainMappingResources}\n            placeholderText={t('devconsole~Add domain')}\n            helpText={t('devconsole~Enter custom domain to map to the Knative service')}\n            isCreatable\n          />\n          {hasOtherKsvcDomainMappings(serverless.domainMapping) && (\n            <Alert\n              data-test=\"domain-mapping-warning\"\n              variant=\"warning\"\n              isInline\n              title={t('devconsole~Domain mapping(s) will be updated')}\n            >\n              <div style={{ marginBottom: 'var(--pf-v5-global--spacer--sm)' }}>\n                {t(\n                  'devconsole~Warning: The following domain(s) will be removed from the associated service',\n                )}\n              </div>\n              {domainsInUse.length > 0 && (\n                <ul>\n                  {domainsInUse.map((dm) => {\n                    return (\n                      <li key={dm.metadata.uid}>\n                        {t(`devconsole~{{domainMapping}} from {{knativeService}}`, {\n                          domainMapping: dm.metadata.name,\n                          knativeService: dm.spec.ref.name,\n                        })}\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n            </Alert>\n          )}\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </>\n  );\n};\n\nexport default ServerlessRouteSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\nconst CreateRoute: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.hostname\"\n        label={t('devconsole~Hostname')}\n        helpText={t(\n          'devconsole~Public hostname for the route. If not specified, a hostname is generated.',\n        )}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.path\"\n        label={t('devconsole~Path')}\n        placeholder=\"/\"\n        helpText={t('devconsole~Path that the router watches to route traffic to the service.')}\n      />\n    </>\n  );\n};\n\nexport default CreateRoute;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { SingleTypeaheadField, SelectInputOption } from '@console/shared';\nimport { DeployImageFormData, GitImportFormData, UploadJarFormData } from '../import-types';\n\ninterface PortInputFieldProps {\n  defaultPort: number;\n}\n\nconst PortInputField: React.FC<PortInputFieldProps> = ({ defaultPort }) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      image: { ports },\n    },\n  } = useFormikContext<DeployImageFormData | GitImportFormData | UploadJarFormData>();\n  const portOptions: SelectInputOption[] = Array.from(\n    new Set(ports.map((port) => port.containerPort.toString())),\n  ).map((value) => ({\n    value,\n    disabled: false,\n  }));\n  const placeholderPort = ports[0]?.containerPort || defaultPort;\n\n  return (\n    <SingleTypeaheadField\n      data-test-id=\"target-port-field\"\n      name=\"route.unknownTargetPort\"\n      label={t('devconsole~Target port')}\n      ariaLabel={t('devconsole~Target port')}\n      placeholderText={placeholderPort.toString()}\n      helpText={t('devconsole~Target port for traffic.')}\n      options={portOptions}\n      toggleOnSelection\n    />\n  );\n};\n\nexport default PortInputField;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NumberSpinnerField, ResourceLimitField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nconst ServerlessScalingSection: React.FC = () => {\n  const { t } = useTranslation();\n  const AutoscaleWindowUnits = {\n    s: t('devconsole~Sec'),\n    m: t('devconsole~Min'),\n    h: t('devconsole~Hrs'),\n  };\n\n  return (\n    <FormSection\n      title={t('devconsole~Scaling')}\n      subTitle={t(\n        'devconsole~Set the autoscaler parameters around pods and concurrency limits in this section.',\n      )}\n    >\n      <NumberSpinnerField\n        name=\"serverless.scaling.minpods\"\n        label={t('devconsole~Min Pods')}\n        helpText={t(\n          'devconsole~The lower limit for the number of Pods that can be set by autoscaler. If not specified defaults to 0.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.maxpods\"\n        label={t('devconsole~Max Pods')}\n        helpText={t(\n          'devconsole~The upper limit for the number of Pods that can be set by autoscaler.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencytarget\"\n        label={t('devconsole~Concurrency target')}\n        helpText={t(\n          'devconsole~Defines how many concurrent requests are wanted per instance of the application at a given time (soft limit) and is the recommended configuration for autoscaling. If not specified, will be defaulted to the value set in the Cluster config.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencylimit\"\n        label={t('devconsole~Concurrency limit')}\n        helpText={t(\n          'devconsole~Limits the amount of concurrent requests allowed into one instance of the application at a given time (hard limit), and is configured in the revision template. If not specified, will be defaulted to the value set in the Cluster config.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencyutilization\"\n        label={t('devconsole~Concurrency utilization')}\n        helpText={t('devconsole~Percentage of concurrent requests utilization before scaling up.')}\n      />\n      <ResourceLimitField\n        name=\"serverless.scaling.autoscale.autoscalewindow\"\n        label={t('devconsole~Autoscale window')}\n        unitName=\"serverless.scaling.autoscale.autoscalewindowUnit\"\n        unitOptions={AutoscaleWindowUnits}\n        helpText={t(\n          'devconsole~Duration to look back for making auto-scaling decisions. The service is scaled to zero if no request was received in during that time.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default ServerlessScalingSection;\n","import * as React from 'react';\nimport {\n  ImageEnvironment,\n  ImportEnvironment,\n  isImportEnvironment,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\n\nexport const useBuilderImageEnvironments = (\n  imageStreamName: string,\n  imageStreamTag: string,\n): [ImageEnvironment[], boolean] => {\n  const [environmentExtensions, resolved] = useResolvedExtensions<ImportEnvironment>(\n    isImportEnvironment,\n  );\n\n  const filteredExtensions = React.useMemo(\n    () =>\n      resolved\n        ? environmentExtensions\n            .filter(\n              (e) =>\n                e.properties.imageStreamName === imageStreamName &&\n                e.properties.imageStreamTags.includes(imageStreamTag),\n            )\n            .map((e) => e.properties.environments)\n            .flat()\n        : [],\n    [environmentExtensions, imageStreamName, imageStreamTag, resolved],\n  );\n\n  return [filteredExtensions, resolved];\n};\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { FLAG_OPENSHIFT_BUILDCONFIG } from '@console/dev-console/src/const';\nimport { NormalizedBuilderImages } from '@console/dev-console/src/utils/imagestream-utils';\nimport { getActiveNamespace } from '@console/internal/actions/ui';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { connectToFlags } from '@console/internal/reducers/connectToFlags';\nimport { FlagsObject } from '@console/internal/reducers/features';\nimport { FLAG_OPENSHIFT_PIPELINE, CLUSTER_PIPELINE_NS } from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind } from '../../../types';\nimport PipelineTemplate from './PipelineTemplate';\n\nimport './PipelineSection.scss';\n\ntype PipelineSectionProps = {\n  flags: FlagsObject;\n  builderImages: NormalizedBuilderImages;\n  existingPipeline?: PipelineKind;\n};\n\nconst usePipelineAccessReview = (): boolean => {\n  const canListPipelines = useAccessReview({\n    group: PipelineModel.apiGroup,\n    resource: PipelineModel.plural,\n    namespace: CLUSTER_PIPELINE_NS,\n    verb: 'list',\n  });\n\n  const canCreatePipelines = useAccessReview({\n    group: PipelineModel.apiGroup,\n    resource: PipelineModel.plural,\n    namespace: getActiveNamespace(),\n    verb: 'create',\n  });\n\n  return canListPipelines && canCreatePipelines;\n};\n\nconst PipelineSection: React.FC<PipelineSectionProps> = ({\n  flags,\n  builderImages,\n  existingPipeline,\n}) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n\n  /* Set pipeline.enabled to true if the user has access to create pipelines and the Builds are not installed */\n  React.useEffect(() => {\n    if (flags[FLAG_OPENSHIFT_PIPELINE] && !flags[FLAG_OPENSHIFT_BUILDCONFIG]) {\n      setFieldValue('pipeline.enabled', true);\n    }\n  }, [setFieldValue, flags]);\n\n  const hasCreatePipelineAccess = usePipelineAccessReview();\n  if (flags[FLAG_OPENSHIFT_PIPELINE] && hasCreatePipelineAccess) {\n    return (\n      <FormSection>\n        {values.image.selected || values.build.strategy === 'Docker' ? (\n          <PipelineTemplate builderImages={builderImages} existingPipeline={existingPipeline} />\n        ) : (\n          <Alert\n            isInline\n            variant=\"info\"\n            title={t(\n              'pipelines-plugin~Select a Builder Image and resource to see if there is a pipeline template available for this runtime.',\n            )}\n          />\n        )}\n      </FormSection>\n    );\n  }\n\n  return null;\n};\n\nexport default connectToFlags<PipelineSectionProps>(\n  FLAG_OPENSHIFT_PIPELINE,\n  FLAG_OPENSHIFT_BUILDCONFIG,\n)(PipelineSection);\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { useFormikContext, useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport IconDropdown from '../icon/IconDropdown';\nimport FormSection from './FormSection';\n\nconst IconSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [field] = useField<string>('runtimeIcon');\n  const formik = useFormikContext<{ runtimeIcon: string }>();\n\n  const onChanged = (value: string) => {\n    formik.setFieldValue('runtimeIcon', value);\n    formik.setFieldTouched('runtimeIcon');\n  };\n\n  return (\n    <FormSection>\n      <FormGroup fieldId=\"runtimeIcon\" label={t('devconsole~Runtime icon')}>\n        <IconDropdown\n          placeholder={t('devconsole~Select an icon')}\n          value={field.value}\n          onChanged={onChanged}\n        />\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t(\n                'devconsole~The icon represents your Image in Topology view. A label will also be added to the resource defining the icon.',\n              )}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n    </FormSection>\n  );\n};\n\nexport default IconSection;\n","import * as React from 'react';\nimport { Alert, ExpandableSection, Tooltip } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  BuildOptions,\n  ReadableResourcesNames,\n} from '@console/dev-console/src/components/import/import-types';\nimport { NormalizedBuilderImages } from '@console/dev-console/src/utils/imagestream-utils';\nimport { GitProvider, getGitService } from '@console/git-service/src';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { k8sList } from '@console/internal/module/k8s';\nimport {\n  FLAG_OPENSHIFT_PIPELINE_AS_CODE,\n  FUNC_PIPELINE_RUNTIME_LABEL,\n} from '@console/pipelines-plugin/src/const';\nimport {\n  BlueInfoCircleIcon,\n  CheckboxField,\n  DropdownField,\n  RadioGroupField,\n  useFlag,\n} from '@console/shared';\nimport { CLUSTER_PIPELINE_NS, PIPELINE_RUNTIME_LABEL } from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind } from '../../../types';\nimport PipelineVisualization from '../../pipelines/detail-page-tabs/pipeline-details/PipelineVisualization';\nimport { PipelineType } from '../import-types';\nimport PacSection from './PacSection';\nimport './PacSection.scss';\n\nconst labelType = 'pipeline.openshift.io/type';\nconst labelDocker = 'pipeline.openshift.io/strategy';\n\nconst getAlertText = (\n  isDockerStrategy: boolean,\n  builderImage: string,\n  resourceType: string,\n): string => {\n  const MISSING_DOCKERFILE_LABEL_TEXT = i18next.t(\n    'pipelines-plugin~The pipeline template for Dockerfiles is not available at this time.',\n  );\n  if (isDockerStrategy) return MISSING_DOCKERFILE_LABEL_TEXT;\n\n  return i18next.t(\n    'pipelines-plugin~There are no pipeline templates available for {{builderImage}} and {{resourceType}} combination.',\n    { builderImage, resourceType },\n  );\n};\n\ntype PipelineTemplateProps = {\n  builderImages: NormalizedBuilderImages;\n  existingPipeline?: PipelineKind;\n};\n\nconst PipelineTemplate: React.FC<PipelineTemplateProps> = ({ builderImages, existingPipeline }) => {\n  const { t } = useTranslation();\n  const [noTemplateForRuntime, setNoTemplateForRuntime] = React.useState(false);\n  const [isPacRepo, setIsPacRepo] = React.useState(false);\n  const [isPipelineTypeChanged, setIsPipelineTypeChanged] = React.useState(false);\n  const [isExpanded, setIsExpanded] = React.useState(false);\n  const [pipelineTemplates, setPipelineTemplates] = React.useState([]);\n  const pipelineStorageRef = React.useRef<{ [image: string]: PipelineKind[] }>({});\n  const isRepositoryEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE_AS_CODE);\n\n  const {\n    values: {\n      import: { recommendedStrategy, selectedStrategy },\n      git: { url, type, ref, dir, secretResource },\n      pipeline,\n      image,\n      build: { option: buildOption, strategy },\n      resources,\n    },\n    setFieldValue,\n    setFieldTouched,\n  } = useFormikContext<FormikValues>();\n\n  const isDockerStrategy = strategy === 'Docker';\n  const isPipelineAttached = !_.isEmpty(existingPipeline);\n  const isServerlessFunctionStrategy = strategy === 'ServerlessFunction';\n\n  const getPipelineNames = (pipelines: PipelineKind[]): string =>\n    pipelines\n      .map((pl) => pl.metadata?.name)\n      .sort()\n      .join(',');\n\n  const handlePipelineTypeChange = React.useCallback(async () => {\n    const gitService = url && getGitService(url, type, ref, dir, secretResource);\n    const disallowedPacGitTypes = [GitProvider.GITEA];\n    const isPacRepository =\n      gitService &&\n      !disallowedPacGitTypes.includes(type) &&\n      isRepositoryEnabled &&\n      (await gitService.isTektonFolderPresent());\n    if (isPacRepository) {\n      setIsPacRepo(true);\n      setFieldValue('pipeline.enabled', true);\n      setFieldValue('pipeline.type', PipelineType.PAC);\n      setFieldValue('pac.repository.gitUrl', url);\n      setFieldValue('pac.pipelineType', PipelineType.PAC);\n      setFieldValue('pac.pipelineEnabled', true);\n    } else {\n      setFieldValue('pipeline.type', PipelineType.PIPELINE);\n      setFieldValue('pac.repository.gitUrl', '');\n      setFieldValue('pac.pipelineType', PipelineType.PIPELINE);\n      setFieldValue('pac.pipelineEnabled', false);\n    }\n    setIsPipelineTypeChanged(true);\n  }, [url, type, ref, dir, secretResource, isRepositoryEnabled, setFieldValue]);\n\n  React.useEffect(() => {\n    pipelineStorageRef.current = {};\n  }, [selectedStrategy]);\n\n  React.useEffect(() => {\n    setFieldValue('pac.pipelineEnabled', !!pipeline.enabled);\n    // Added setTimeout to re-validate yup validation after onchange event\n    setTimeout(() => {\n      setFieldTouched('pipeline.enabled', true);\n    }, 0);\n  }, [pipeline.enabled, setFieldValue, setFieldTouched]);\n\n  React.useEffect(() => {\n    if (buildOption === BuildOptions.PIPELINES) {\n      setFieldValue('pipeline.enabled', true);\n      setFieldValue('pac.pipelineEnabled', true);\n    }\n  }, [buildOption, setFieldValue]);\n\n  React.useEffect(() => {\n    let ignore = false;\n\n    const builderPipelineLabel = { [PIPELINE_RUNTIME_LABEL]: image.selected };\n    const dockerPipelineLabel = { [labelDocker]: 'docker' };\n    const funcPipelineLabel = { [FUNC_PIPELINE_RUNTIME_LABEL]: image.selected };\n\n    let labelSelector;\n    if (isDockerStrategy) {\n      labelSelector = dockerPipelineLabel;\n    } else if (isServerlessFunctionStrategy) {\n      labelSelector = funcPipelineLabel;\n    } else {\n      labelSelector = builderPipelineLabel;\n    }\n    const fetchPipelineTemplate = async () => {\n      let fetchedPipelines: PipelineKind[] = null;\n      if (\n        !pipelineStorageRef.current[image.selected] ||\n        !pipelineStorageRef.current[image.selected]?.length\n      ) {\n        fetchedPipelines = (await k8sList(PipelineModel, {\n          ns: CLUSTER_PIPELINE_NS,\n          labelSelector,\n        })) as PipelineKind[];\n      }\n      if (ignore) return;\n\n      if (fetchedPipelines) {\n        pipelineStorageRef.current[image.selected] = fetchedPipelines;\n      }\n\n      const imagePipelines: PipelineKind[] = pipelineStorageRef.current[image.selected] || [];\n      const resourceSpecificPipelines = imagePipelines.filter(\n        (pl) => pl.metadata?.labels?.[labelType] === resources,\n      );\n      const candidatePipelines = [\n        ...resourceSpecificPipelines,\n        ...imagePipelines.filter((pl) => !pl.metadata?.labels?.[labelType]),\n      ];\n\n      if (getPipelineNames(pipelineTemplates) !== getPipelineNames(candidatePipelines)) {\n        setPipelineTemplates(candidatePipelines);\n      }\n      const pipelineTemplate = candidatePipelines[0];\n\n      if (isPipelineAttached) {\n        setFieldValue('pipeline.template', existingPipeline);\n        setFieldValue('pipeline.templateSelected', existingPipeline.metadata.name);\n        setNoTemplateForRuntime(false);\n      } else if (\n        pipeline.templateSelected &&\n        pipelineTemplates.some((pl) => pl.metadata.name === pipeline.templateSelected)\n      ) {\n        setFieldValue(\n          'pipeline.template',\n          pipelineTemplates.find((pl) => pl.metadata.name === pipeline.templateSelected),\n        );\n        setNoTemplateForRuntime(false);\n      } else if (pipelineTemplate) {\n        setFieldValue('pipeline.template', pipelineTemplate);\n        setFieldValue('pipeline.templateSelected', pipelineTemplate.metadata.name);\n        setNoTemplateForRuntime(false);\n      } else {\n        setFieldValue('pipeline.template', null);\n        setFieldValue('pipeline.templateSelected', '');\n        setNoTemplateForRuntime(true);\n      }\n    };\n\n    fetchPipelineTemplate();\n    if (!isPipelineAttached && !isPipelineTypeChanged) {\n      handlePipelineTypeChange();\n    }\n    return () => {\n      ignore = true;\n    };\n  }, [\n    resources,\n    recommendedStrategy,\n    image.selected,\n    isDockerStrategy,\n    setFieldValue,\n    pipeline.templateSelected,\n    pipelineTemplates,\n    isPipelineAttached,\n    existingPipeline,\n    handlePipelineTypeChange,\n    isServerlessFunctionStrategy,\n    isPipelineTypeChanged,\n  ]);\n\n  const pipelineTemplateItems = React.useMemo(() => {\n    const items = {};\n    for (const img of pipelineTemplates) {\n      const { name } = img.metadata;\n      items[name] = name;\n    }\n    if (pipeline.templateSelected) {\n      items[pipeline.templateSelected] = pipeline.templateSelected;\n    }\n    return items;\n  }, [pipeline.templateSelected, pipelineTemplates]);\n\n  if (noTemplateForRuntime) {\n    const builderImageTitle =\n      builderImages?.[image.selected]?.title || t('pipelines-plugin~this Builder Image');\n    const resourceName = t(ReadableResourcesNames[resources]);\n    return (\n      <Alert\n        isInline\n        variant=\"info\"\n        title={getAlertText(isDockerStrategy, builderImageTitle, resourceName)}\n      />\n    );\n  }\n\n  const onChangePipelineType = (value: PipelineType) => {\n    setFieldValue('pac.pipelineType', value);\n    setFieldValue('pipeline.type', value);\n    // Added setTimeout to re-validate yup validation after onchange event\n    setTimeout(() => {\n      setFieldTouched('pipeline.type', true);\n    }, 0);\n  };\n\n  return pipeline.template ? (\n    <>\n      {buildOption !== BuildOptions.PIPELINES && (\n        <CheckboxField\n          label={t('pipelines-plugin~Add pipeline')}\n          name=\"pipeline.enabled\"\n          isDisabled={isPipelineAttached}\n        />\n      )}\n      {pipeline.enabled && isPacRepo && (\n        <>\n          <span className=\"pf-c-form__label-text\">{t('pipelines-plugin~Pipeline')}</span>\n          <RadioGroupField\n            className=\"odc-pipeline-section-pac__radio-intent\"\n            name={'pipeline.type'}\n            onChange={(val: string) => onChangePipelineType(val as PipelineType)}\n            options={[\n              {\n                value: PipelineType.PAC,\n                label: (\n                  <>\n                    {t('pipelines-plugin~Build, deploy and configure a Pipeline Repository')}\n                    {'  '}\n                    <Tooltip\n                      position=\"right\"\n                      content={\n                        <p>\n                          {t(\n                            'pipelines-plugin~Automatically configure a new Pipeline Repository for your Git repository. This will automatically trigger new PipelineRuns on new commits or Pull Requests based on your configuration in your source code.',\n                          )}\n                        </p>\n                      }\n                    >\n                      <BlueInfoCircleIcon />\n                    </Tooltip>\n                  </>\n                ),\n                activeChildren: <PacSection />,\n              },\n              {\n                value: PipelineType.PIPELINE,\n                label: (\n                  <>\n                    {t('pipelines-plugin~Use Pipeline from this cluster')}\n                    {'  '}\n                    <Tooltip\n                      position=\"right\"\n                      content={\n                        <p>\n                          {t(\n                            'pipelines-plugin~Use an installed Pipeline from your cluster to build and deploy your component. Pipelines are from \"openshift\" namespace that support the relevant runtime are shown below.',\n                          )}\n                        </p>\n                      }\n                    >\n                      <BlueInfoCircleIcon />\n                    </Tooltip>\n                  </>\n                ),\n                activeChildren: (\n                  <>\n                    <DropdownField\n                      name=\"pipeline.templateSelected\"\n                      title={pipelineTemplateItems[pipeline.templateSelected]}\n                      items={pipelineTemplateItems}\n                      disabled={isPipelineAttached}\n                      fullWidth\n                    />\n                    <br />\n                    <ExpandableSection\n                      toggleText={`${\n                        isExpanded ? t('pipelines-plugin~Hide') : t('pipelines-plugin~Show')\n                      } ${t('pipelines-plugin~pipeline visualization')}`}\n                      isExpanded={isExpanded}\n                      onToggle={() => setIsExpanded(!isExpanded)}\n                    >\n                      {isExpanded && <PipelineVisualization pipeline={pipeline.template} />}\n                    </ExpandableSection>\n                  </>\n                ),\n              },\n            ]}\n          />\n        </>\n      )}\n      {pipeline.enabled && !isPacRepo && (\n        <>\n          <DropdownField\n            name=\"pipeline.templateSelected\"\n            title={pipelineTemplateItems[pipeline.templateSelected]}\n            items={pipelineTemplateItems}\n            disabled={isPipelineAttached}\n            label={t('pipelines-plugin~Pipeline')}\n            fullWidth\n          />\n          <ExpandableSection\n            toggleText={`${\n              isExpanded ? t('pipelines-plugin~Hide') : t('pipelines-plugin~Show')\n            } ${t('pipelines-plugin~pipeline visualization')}`}\n            isExpanded={isExpanded}\n            onToggle={() => setIsExpanded(!isExpanded)}\n          >\n            {isExpanded && <PipelineVisualization pipeline={pipeline.template} />}\n          </ExpandableSection>\n        </>\n      )}\n    </>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PipelineTemplate;\n","import * as React from 'react';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport { ExpandCollapse, Loading } from '@console/internal/components/utils';\nimport { usePacInfo } from '@console/pipelines-plugin/src/components/repository/hooks/pac-hook';\nimport { recommendRepositoryName } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport ConfigTypeSection from '@console/pipelines-plugin/src/components/repository/sections/ConfigTypeSection';\nimport WebhookSection from '@console/pipelines-plugin/src/components/repository/sections/WebhookSection';\nimport { PacConfigurationTypes } from '../../repository/consts';\nimport InfoPanel from './PacInfoPanel';\nimport './PacSection.scss';\n\nconst PacSection: React.FC = () => {\n  const { t } = useTranslation();\n  const formContextField = 'pac.repository';\n  const [githubAppAvailable, setGithubAppAvailable] = React.useState(false);\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const {\n    git: { url, type },\n  } = values;\n  const [pac, loaded] = usePacInfo();\n\n  React.useEffect(() => {\n    if (loaded && !!pac && pac.data['app-link']) {\n      setGithubAppAvailable(true);\n      setFieldValue('pac.repository.githubAppAvailable', true);\n      setFieldValue('pac.repository.method', PacConfigurationTypes.GITHUB);\n    } else {\n      setFieldValue('pac.repository.method', PacConfigurationTypes.WEBHOOK);\n    }\n  }, [pac, loaded, setFieldValue]);\n\n  React.useEffect(() => {\n    setFieldValue('pac.repository.gitUrl', url);\n    setFieldValue('name', recommendRepositoryName(url));\n    setFieldValue('pac.repository.gitProvider', type);\n  }, [setFieldValue, url, type]);\n\n  React.useEffect(() => {\n    setFieldValue('pac.repository.name', values.name);\n  }, [setFieldValue, values.name]);\n\n  return pac ? (\n    <>\n      <ExpandCollapse\n        textCollapsed={t('pipelines-plugin~View details')}\n        textExpanded={t('pipelines-plugin~Hide details')}\n      >\n        <InfoPanel />\n      </ExpandCollapse>\n\n      {githubAppAvailable && type === GitProvider.GITHUB ? (\n        <div className=\"odc-pipeline-section-pac__config-type\">\n          <ConfigTypeSection pac={pac} formContextField={formContextField} />\n        </div>\n      ) : (\n        <WebhookSection pac={pac} formContextField={formContextField} />\n      )}\n    </>\n  ) : (\n    <Loading />\n  );\n};\n\nexport default PacSection;\n","import * as React from 'react';\nimport { ClipboardCopy, ClipboardCopyVariant } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  ReadableResourcesNames,\n  Resources,\n} from '@console/dev-console/src/components/import/import-types';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { useActiveNamespace } from '@console/shared/src/hooks/useActiveNamespace';\nimport './PacSection.scss';\n\nconst InfoPanel: React.FC = () => {\n  const { t } = useTranslation();\n  const [namespace] = useActiveNamespace();\n  const {\n    values: { name, resources },\n  } = useFormikContext<FormikValues>();\n  const translatedResourceName = ReadableResourcesNames[resources as Resources]\n    ? t(ReadableResourcesNames[resources as Resources])\n    : '';\n\n  return (\n    <FormSection>\n      <div className=\"odc-pipeline-section-pac__info-panel\">\n        <div className=\"odc-pipeline-section-pac__info-text\">\n          <Trans t={t} ns=\"pipelines-plugin\" values={{ translatedResourceName, name }}>\n            Once your Pipeline Repository is configured, in order to update your{' '}\n            {{ translatedResourceName }} <code className=\"co-code\">{{ name }}</code> automatically,\n            update the following in your <code className=\"co-code\">.tekton</code> PipelineRun:\n          </Trans>\n        </div>\n        <ul>\n          <li>\n            <strong> {translatedResourceName}: </strong>\n            <ClipboardCopy variant={ClipboardCopyVariant.inlineCompact}>{name}</ClipboardCopy>\n          </li>\n          <li className=\"odc-pipeline-section-pac__clipboard\">\n            <strong>\n              {t('pipelines-plugin~Internal image registry:')}\n              {'  '}\n            </strong>\n            <ClipboardCopy variant={ClipboardCopyVariant.inlineCompact}>\n              image-registry.openshift-image-registry.svc:5000/{namespace}/{name}\n            </ClipboardCopy>\n          </li>\n        </ul>\n      </div>\n    </FormSection>\n  );\n};\n\nexport default InfoPanel;\n","import { useEffect, useRef } from 'react';\nimport { k8sGet, Options } from '@console/internal/module/k8s';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s/types';\n\nexport const useSafeK8s = () => {\n  const controller = useRef<AbortController>();\n  const mounted = useRef(true);\n\n  useEffect(() => {\n    controller.current = new AbortController();\n    return () => {\n      mounted.current = false;\n      controller.current.abort();\n    };\n  }, []);\n\n  return (\n    kind: K8sKind,\n    name: string,\n    ns: string,\n    opts: Options = {},\n  ): Promise<K8sResourceKind> => {\n    return new Promise((resolve, reject) => {\n      k8sGet(kind, name, ns, opts, { signal: controller.current.signal as AbortSignal })\n        .then((data) => mounted.current && resolve(data))\n        .catch((error) => mounted.current && reject(error));\n    });\n  };\n};\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { InputField } from '@console/shared';\nimport { useBuilderImageEnvironments } from './builderImageHooks';\n\ninterface BuilderImageEnvironmentsProps {\n  name: string;\n  imageStreamName: string;\n  imageStreamTag: string;\n}\n\nconst BuilderImageEnvironments: React.FC<BuilderImageEnvironmentsProps> = ({\n  name,\n  imageStreamName,\n  imageStreamTag,\n}) => {\n  const {\n    values: {\n      build: { env: buildEnvs },\n      image: { imageEnv },\n      formType,\n    },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n\n  const [environments, loaded] = useBuilderImageEnvironments(imageStreamName, imageStreamTag);\n\n  React.useEffect(() => {\n    if (formType === 'edit' && buildEnvs?.length > 0 && !imageEnv) {\n      environments.forEach((env) =>\n        buildEnvs.forEach((buildEnv) => {\n          if (buildEnv.name === env.key) {\n            setFieldValue(`${name}.${env.key}`, buildEnv.value);\n          }\n        }),\n      );\n    }\n  }, [buildEnvs, formType, imageEnv, setFieldValue, environments, name]);\n\n  if (!loaded) {\n    return null;\n  }\n  return (\n    <>\n      {environments.map((env) => (\n        <InputField\n          key={`${imageStreamName}-${env.key}`}\n          type={TextInputTypes.text}\n          name={`${name}.${env.key}`}\n          label={env.label}\n          helpText={env.description}\n          placeholder={env.defaultValue}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default BuilderImageEnvironments;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImageStreamIcon } from '@console/internal/components/catalog/catalog-item-icon';\nimport { getAnnotationTags } from '@console/internal/components/image-stream';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { getSampleRepo } from '../../../utils/imagestream-utils';\n\nexport type ImageStreamInfoProps = {\n  displayName: string;\n  tag: object;\n};\n\nconst ImageStreamInfo: React.FC<ImageStreamInfoProps> = ({ displayName, tag }) => {\n  const { t } = useTranslation();\n  const annotationTags = getAnnotationTags(tag);\n  const description = _.get(tag, 'annotations.description');\n  const sampleRepo = getSampleRepo(tag);\n\n  return (\n    <div data-test=\"imageStream-details\">\n      <div className=\"co-catalog-item-details\">\n        <ImageStreamIcon tag={tag} iconSize=\"large\" />\n        <div>\n          <h2 className=\"co-section-heading co-catalog-item-details__name\">{displayName}</h2>\n          {annotationTags && (\n            <p className=\"co-catalog-item-details__tags\">\n              {_.map(annotationTags, (annotationTag, i) => (\n                <span className=\"co-catalog-item-details__tag\" key={i}>\n                  {annotationTag}\n                </span>\n              ))}\n            </p>\n          )}\n        </div>\n      </div>\n      {description && <p className=\"co-catalog-item-details__description\">{description}</p>}\n      {sampleRepo && (\n        <p>\n          {t('devconsole~Sample repository:')} <ExternalLink href={sampleRepo} text={sampleRepo} />\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ImageStreamInfo;\n","import * as _ from 'lodash';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  ImageStreamModel,\n  ServiceModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sVerb,\n  k8sCreate,\n  k8sUpdate,\n  k8sWaitForUpdate,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { RegistryType } from '../../utils/imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  mergeData,\n  getCommonAnnotations,\n  getRouteAnnotations,\n  getTriggerAnnotation,\n} from '../../utils/resource-label-utils';\nimport { createRoute, createService, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport { DeployImageFormData, Resources } from './import-types';\n\nconst WAIT_FOR_IMAGESTREAM_UPDATE_TIMEOUT = 5000;\nconst WAIT_FOR_IMAGESTREAM_GENERATION = 2;\n\nexport const createOrUpdateImageStream = async (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalImageStream?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    allowInsecureRegistry,\n    isi: { name: isiName, tag },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const defaultLabels = getAppLabels({ name, applicationName });\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: imgStreamName },\n    },\n    spec: {\n      tags: [\n        {\n          name: tag || 'latest',\n          annotations: {\n            ...getCommonAnnotations(),\n            'openshift.io/imported-from': isiName,\n          },\n          from: {\n            kind: 'DockerImage',\n            name: `${isiName}`,\n          },\n          importPolicy: { insecure: allowInsecureRegistry },\n          referencePolicy: { type: 'Local' },\n        },\n      ],\n    },\n  };\n\n  if (verb === 'update' && !_.isEmpty(originalImageStream)) {\n    const mergedImageStream = mergeData(originalImageStream, newImageStream);\n    mergedImageStream.metadata.name = originalImageStream.metadata.name;\n    return k8sUpdate(ImageStreamModel, mergedImageStream);\n  }\n  const createdImageStream = await k8sCreate(\n    ImageStreamModel,\n    newImageStream,\n    dryRun ? dryRunOpt : {},\n  );\n  if (dryRun) {\n    return createdImageStream;\n  }\n  return k8sWaitForUpdate(\n    ImageStreamModel,\n    createdImageStream,\n    (imageStream) => imageStream.metadata.generation >= WAIT_FOR_IMAGESTREAM_GENERATION,\n    WAIT_FOR_IMAGESTREAM_UPDATE_TIMEOUT,\n  ).catch(() => createdImageStream);\n};\n\nconst getMetadata = (resource: Resources, formData: DeployImageFormData) => {\n  const {\n    application: { name: applicationName },\n    name,\n    isi: { image },\n    labels: userLabels,\n    imageStream: { image: imageStreamName, tag: selectedTag, namespace },\n    runtimeIcon,\n  } = formData;\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    runtimeIcon,\n    selectedTag,\n    namespace,\n  });\n  const labels = { ...defaultLabels, ...userLabels };\n  const podLabels = getPodLabels(resource, name);\n\n  const volumes = [];\n  const volumeMounts = [];\n  let volumeNumber = 0;\n  _.each(_.get(image, ['dockerImageMetadata', 'Config', 'Volumes']), (value, path) => {\n    volumeNumber++;\n    const volumeName = `${name}-${volumeNumber}`;\n    volumes.push({\n      name: volumeName,\n      emptyDir: {},\n    });\n    volumeMounts.push({\n      name: volumeName,\n      mountPath: path,\n    });\n  });\n\n  return { labels, podLabels, volumes, volumeMounts };\n};\n\nexport const createOrUpdateDeployment = (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    registry,\n    project: { name: namespace },\n    name,\n    isi: { image, ports, tag: imageStreamTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    imageStream: { image: imgName, namespace: imgNamespace },\n    healthChecks,\n  } = formData;\n\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(\n      name,\n      imgName || name,\n      imgNamespace || namespace,\n      imageChange,\n      imageStreamTag,\n    ),\n  };\n  const templateAnnotations = getCommonAnnotations();\n\n  const { labels, podLabels, volumes, volumeMounts } = getMetadata(Resources.Kubernetes, formData);\n\n  const imageRef =\n    registry === RegistryType.External\n      ? `${name}:${imageStreamTag}`\n      : _.get(image, 'dockerImageReference');\n\n  const newDeployment = {\n    kind: 'Deployment',\n    apiVersion: 'apps/v1',\n    metadata: {\n      name,\n      namespace,\n      labels,\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      replicas,\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      template: {\n        metadata: {\n          labels: { ...userLabels, ...podLabels },\n          annotations: templateAnnotations,\n        },\n        spec: {\n          volumes,\n          containers: [\n            {\n              name,\n              image: imageRef,\n              ports,\n              volumeMounts,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    project: { name: namespace },\n    name,\n    isi: { image, tag, ports },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    imageStream: { image: imgName, namespace: imgNamespace },\n    healthChecks,\n  } = formData;\n\n  const { labels, podLabels, volumes, volumeMounts } = getMetadata(Resources.OpenShift, formData);\n\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getRouteAnnotations(),\n  };\n  const templateAnnotations = getCommonAnnotations();\n\n  const newDeploymentConfig = {\n    kind: 'DeploymentConfig',\n    apiVersion: 'apps.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels,\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      replicas,\n      selector: podLabels,\n      template: {\n        metadata: {\n          labels: { ...userLabels, ...podLabels },\n          annotations: templateAnnotations,\n        },\n        spec: {\n          volumes,\n          containers: [\n            {\n              name,\n              image: _.get(image, ['dockerImageMetadata', 'Config', 'Image']),\n              ports,\n              volumeMounts,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${imgName || name}:${tag}`,\n              namespace: imgNamespace || namespace,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const ensurePortExists = (formData: DeployImageFormData): DeployImageFormData => {\n  const {\n    isi: { ports },\n    route: { defaultUnknownPort, unknownTargetPort },\n  } = formData;\n\n  let values = formData;\n  if (!Array.isArray(ports) || ports.length === 0) {\n    // If we lack pre-defined ports but they have specified a custom target port, use that instead\n    const containerPort = unknownTargetPort ? parseInt(unknownTargetPort, 10) : defaultUnknownPort;\n    const suppliedPorts = [{ containerPort, protocol: 'TCP' }];\n\n    values = {\n      ...values,\n      isi: {\n        ...values.isi,\n        ports: suppliedPorts,\n      },\n    };\n  }\n\n  return values;\n};\n\nexport const createOrUpdateDeployImageResources = async (\n  rawFormData: DeployImageFormData,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const formData = ensurePortExists(rawFormData);\n  const {\n    name,\n    registry,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    isi: { ports, tag: imageStreamTag, image },\n    imageStream: { image: internalImageStreamName, namespace: internalImageStreamNamespace },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n  } = formData;\n  const requests: Promise<K8sResourceKind>[] = [];\n\n  const imageStreamList = appResources?.imageStream?.data;\n  const imageStreamData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamData.length && imageStreamData[0]) || {};\n  if (formData.resources !== Resources.KnativeService) {\n    registry === RegistryType.External &&\n      (await createOrUpdateImageStream(formData, dryRun, originalImageStream, verb));\n    if (formData.resources === Resources.Kubernetes) {\n      requests.push(\n        createOrUpdateDeployment(\n          formData,\n          dryRun,\n          _.get(appResources, 'editAppResource.data'),\n          verb,\n        ),\n      );\n    } else {\n      requests.push(\n        createOrUpdateDeploymentConfig(\n          formData,\n          dryRun,\n          _.get(appResources, 'editAppResource.data'),\n          verb,\n        ),\n      );\n    }\n    if (!_.isEmpty(ports)) {\n      const originalService = appResources?.service?.data;\n      const originalRoute = appResources?.route?.data;\n      const service = createService(formData, undefined, originalService, originalRoute);\n      const request =\n        verb === 'update'\n          ? !_.isEmpty(originalService)\n            ? k8sUpdate(ServiceModel, service)\n            : null\n          : k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {});\n      requests.push(request);\n      const route = createRoute(formData, undefined, _.get(appResources, 'route.data'));\n      if (verb === 'update' && disable) {\n        requests.push(k8sUpdate(RouteModel, route));\n      } else if (canCreateRoute) {\n        requests.push(k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n      }\n    }\n  } else if (formData.resources === Resources.KnativeService) {\n    let imageStreamUrl: string = image?.dockerImageReference;\n    let generatedImageStreamName: string = '';\n    if (registry === RegistryType.External) {\n      const originalImageStreamName = originalImageStream?.spec?.tags?.[0]?.from?.name;\n      const newImageName = formData.isi.name;\n      if (\n        (originalImageStreamName && originalImageStreamName !== newImageName) ||\n        (verb === 'update' && _.isEmpty(originalImageStream))\n      ) {\n        generatedImageStreamName = `${name}-${getRandomChars()}`;\n      }\n      const imageStreamResponse = await createOrUpdateImageStream(\n        formData,\n        dryRun,\n        originalImageStream,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      );\n      const imageStreamRepo = imageStreamResponse.status.dockerImageRepository;\n      imageStreamUrl = imageStreamTag ? `${imageStreamRepo}:${imageStreamTag}` : imageStreamRepo;\n    }\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      internalImageStreamName || name,\n      internalImageStreamNamespace || namespace,\n      imageChange,\n      imageStreamTag,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          }\n        : {\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamUrl,\n      internalImageStreamName || name,\n      imageStreamTag,\n      internalImageStreamNamespace,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    requests.push(\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    );\n  }\n\n  return Promise.all(requests);\n};\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { RadioGroupField } from '@console/shared';\nimport { imageRegistryType } from '../../../utils/imagestream-utils';\nimport { hasSampleQueryParameter } from '../../../utils/samples';\nimport FormSection from '../section/FormSection';\nimport ImageSearch from './ImageSearch';\nimport ImageStream from './ImageStream';\n\nconst ImageSearchSection: React.FC<{ disabled?: boolean }> = ({ disabled = false }) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const [registry, setRegistry] = React.useState(values.registry);\n\n  const showSample = React.useRef(hasSampleQueryParameter()).current;\n\n  React.useEffect(() => {\n    if (values.registry !== registry) {\n      setRegistry(values.registry);\n      setFieldValue('searchTerm', initialValues.searchTerm);\n      setFieldValue('isi', initialValues.isi);\n      setFieldValue('imageStream', initialValues.imageStream);\n    }\n  }, [\n    initialValues.imageStream,\n    initialValues.isi,\n    initialValues.searchTerm,\n    registry,\n    setFieldValue,\n    values,\n  ]);\n\n  return (\n    <FormSection\n      title={t('devconsole~Image')}\n      subTitle={t('devconsole~Deploy an existing Image from an Image Stream or Image registry.')}\n    >\n      {!_.isEmpty(values.containers) && (\n        <div className=\"co-section-heading-tertiary\">\n          {t('devconsole~Container')}\n          <ResourceLink kind=\"Container\" name={values.containers[0].name} linkTo={false} />\n        </div>\n      )}\n      {showSample ? (\n        <ImageSearch />\n      ) : (\n        <RadioGroupField\n          name=\"registry\"\n          options={[\n            {\n              label: imageRegistryType(t).External.label,\n              value: imageRegistryType(t).External.value,\n              isDisabled:\n                (values.formType === 'edit' && values.registry === 'internal') || disabled,\n              activeChildren: <ImageSearch />,\n            },\n            {\n              label: imageRegistryType(t).Internal.label,\n              value: imageRegistryType(t).Internal.value,\n              isDisabled:\n                (values.formType === 'edit' && values.registry === 'external') || disabled,\n              activeChildren: <ImageStream disabled={disabled} />,\n            },\n          ]}\n        />\n      )}\n    </FormSection>\n  );\n};\n\nexport default ImageSearchSection;\n","import * as React from 'react';\nimport {\n  TextInputTypes,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, FormikTouched } from 'formik';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { SecretTypeAbstraction } from '@console/internal/components/secrets/create-secret';\nimport { ImageStreamImportsModel } from '@console/internal/models';\nimport { k8sCreate, ContainerPort } from '@console/internal/module/k8s';\nimport { InputField, useDebounceCallback, CheckboxField } from '@console/shared';\nimport { UNASSIGNED_KEY, CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isContainerImportSource } from '../../../types/samples';\nimport { getSuggestedName, getPorts, makePortName } from '../../../utils/imagestream-utils';\nimport { getContainerImportSample, getSample } from '../../../utils/samples';\nimport { secretModalLauncher } from '../CreateSecretModal';\nimport './ImageSearch.scss';\n\nconst useQueryParametersIfDefined = (handleSearch: (image: string) => void) => {\n  const { setFieldValue } = useFormikContext<FormikValues>();\n\n  /**\n   * Automatically prefill the container image search field into the Formik values\n   * and trigger a `ImageStreamImport` via `handleSearch`.\n   *\n   * 1. Use optional `image` query parameter to prefill the form immediately and\n   *    trigger a image search.\n   * 2. Use `sample` query parameter to lookup a ConsoleSample.\n   *    1. Lookup for the image if the image query parameter was missed.\n   *    2. Set other form attributes like the image targetPort.\n   */\n  React.useEffect(() => {\n    const { sampleName, image } = getContainerImportSample();\n    if (image) {\n      const componentName = getSuggestedName(image);\n      setFieldValue('searchTerm', image, false);\n      // handleSearch will set the same attributes, but after another API call\n      // so we fill these attributes here first\n      setFieldValue('name', componentName, false);\n      setFieldValue('application.name', `${componentName}-app`, false);\n      handleSearch(image);\n    }\n    if (sampleName) {\n      getSample(sampleName)\n        .then((sample) => {\n          if (isContainerImportSource(sample.spec.source)) {\n            const { containerImport } = sample.spec.source;\n            if (!image) {\n              const componentName = getSuggestedName(containerImport.image);\n              setFieldValue('searchTerm', containerImport.image, false);\n              // handleSearch will set the same attributes, but after another API call\n              // so we fill these attributes here first\n              setFieldValue('name', componentName, false);\n              setFieldValue('application.name', `${componentName}-app`, false);\n            }\n            if (\n              containerImport?.service?.targetPort &&\n              containerImport?.service?.targetPort !== 8080\n            ) {\n              setFieldValue(\n                'route.unknownTargetPort',\n                containerImport.service.targetPort.toString(),\n                false,\n              );\n            }\n            handleSearch(containerImport.image);\n          } else {\n            // eslint-disable-next-line no-console\n            console.error(\n              `Unsupported ConsoleSample \"${sampleName}\" source type ${sample.spec?.source?.type}`,\n            );\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(`Error while loading ConsoleSample \"${sampleName}\":`, error);\n        });\n    }\n    // Disable deps to load the samples only once when the component is loaded.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nconst ImageSearch: React.FC = () => {\n  const { t } = useTranslation();\n  const inputRef = React.useRef<HTMLInputElement>();\n  const { values, setFieldValue, dirty, initialValues, touched } = useFormikContext<FormikValues>();\n  const [newImageSecret, setNewImageSecret] = React.useState('');\n  const [alertVisible, shouldHideAlert] = React.useState(true);\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n  const namespace = values.project.name;\n  const { application = {}, name: nameTouched } = touched;\n  const { name: applicationNameTouched } = application as FormikTouched<{ name: boolean }>;\n\n  const handleSearch = React.useCallback(\n    (searchTermImage: string, isAllowInsecureRegistry = values.allowInsecureRegistry) => {\n      setFieldValue('isSearchingForImage', true);\n      setValidated(ValidatedOptions.default);\n      const importImage = {\n        kind: 'ImageStreamImport',\n        apiVersion: 'image.openshift.io/v1',\n        metadata: {\n          name: 'newapp',\n          namespace: values.project.name,\n        },\n        spec: {\n          import: false,\n          images: [\n            {\n              from: {\n                kind: 'DockerImage',\n                name: _.trim(searchTermImage),\n              },\n              importPolicy: { insecure: isAllowInsecureRegistry },\n            },\n          ],\n        },\n        status: {},\n      };\n\n      k8sCreate(ImageStreamImportsModel, importImage)\n        .then((imageStreamImport) => {\n          const status = _.get(imageStreamImport, 'status.images[0].status');\n          if (status.status === 'Success') {\n            const name = _.get(imageStreamImport, 'spec.images[0].from.name');\n            const image = _.get(imageStreamImport, 'status.images[0].image');\n            const tag = _.get(imageStreamImport, 'status.images[0].tag');\n            const isi = { name, image, tag, status };\n            const ports = getPorts(isi);\n            setFieldValue('isSearchingForImage', false);\n            setFieldValue('isi.name', name);\n            setFieldValue('isi.image', image);\n            setFieldValue('isi.tag', tag);\n            setFieldValue('isi.status', status);\n            setFieldValue('isi.ports', ports);\n            setFieldValue('image.ports', ports);\n            setFieldValue('image.tag', tag);\n            !values.name && setFieldValue('name', getSuggestedName(name));\n            !values.application.name &&\n              values.application.selectedKey !== UNASSIGNED_KEY &&\n              setFieldValue('application.name', `${getSuggestedName(name)}-app`);\n            // set default port value\n            const targetPort =\n              (!initialValues.route.targetPort || touched.searchTerm) && _.head(ports);\n            targetPort && setFieldValue('route.targetPort', makePortName(targetPort));\n            setValidated(ValidatedOptions.success);\n          } else {\n            setFieldValue('isSearchingForImage', false);\n            setFieldValue('isi', {});\n            setFieldValue('isi.status', status);\n            setFieldValue('route.targetPort', null);\n            setValidated(ValidatedOptions.error);\n          }\n        })\n        .catch((error) => {\n          setFieldValue('isi', {});\n          setFieldValue('isi.status', { metadata: {}, status: '', message: error.message });\n          setFieldValue('isSearchingForImage', false);\n          setValidated(ValidatedOptions.error);\n        });\n    },\n    [\n      setFieldValue,\n      touched,\n      values.application.name,\n      values.application.selectedKey,\n      values.name,\n      values.project.name,\n      values.allowInsecureRegistry,\n      initialValues.route.targetPort,\n    ],\n  );\n\n  useQueryParametersIfDefined(handleSearch);\n\n  const debouncedHandleSearch = useDebounceCallback(handleSearch);\n\n  const handleSave = React.useCallback(\n    (name: string) => {\n      setNewImageSecret(name);\n      values.searchTerm && handleSearch(values.searchTerm);\n    },\n    [handleSearch, values.searchTerm],\n  );\n\n  const helpText = React.useMemo(() => {\n    if (values.isSearchingForImage) {\n      return `${t('devconsole~Validating')}...`;\n    }\n    if (!values.isSearchingForImage && validated === ValidatedOptions.success) {\n      return t('devconsole~Validated');\n    }\n    if (validated === ValidatedOptions.error) {\n      return values.searchTerm === '' ? t('devconsole~Required') : values.isi.status?.message;\n    }\n    return '';\n  }, [t, validated, values.isSearchingForImage, values.searchTerm, values.isi.status?.message]);\n\n  const resetFields = () => {\n    if (values.formType === 'edit') {\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n        values.application.selectedKey === CREATE_APPLICATION_KEY &&\n        !applicationNameTouched &&\n        setFieldValue('application.name', '');\n      return;\n    }\n    !nameTouched && setFieldValue('name', '');\n    !values.application.isInContext &&\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n      !applicationNameTouched &&\n      setFieldValue('application.name', '');\n  };\n\n  React.useEffect(() => {\n    !dirty && values.searchTerm && handleSearch(values.searchTerm);\n  }, [dirty, handleSearch, values.searchTerm]);\n\n  React.useEffect(() => {\n    if (touched.searchTerm && initialValues.searchTerm !== values.searchTerm) {\n      const targetPort: ContainerPort = _.head(values.isi.ports);\n      targetPort && setFieldValue('route.targetPort', makePortName(targetPort));\n    }\n  }, [\n    touched.searchTerm,\n    setFieldValue,\n    values.isi.ports,\n    initialValues.searchTerm,\n    values.searchTerm,\n  ]);\n\n  React.useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  return (\n    <div data-test-id=\"image-search-field\">\n      <InputField\n        ref={inputRef}\n        type={TextInputTypes.text}\n        name=\"searchTerm\"\n        placeholder={t(\n          'devconsole~docker.io/openshift/hello-openshift or quay.io/<username>/<image-name>',\n        )}\n        helpText={helpText}\n        helpTextInvalid={helpText}\n        validated={validated}\n        onChange={(e: KeyboardEvent) => {\n          resetFields();\n          setFieldValue('isi', {});\n          setValidated(ValidatedOptions.default);\n          debouncedHandleSearch((e.target as HTMLInputElement).value);\n        }}\n        aria-label={t('devconsole~Image name')}\n        data-test-id=\"deploy-image-search-term\"\n        required\n      />\n      <div className=\"help-block\" id=\"image-name-help\">\n        <Trans ns=\"devconsole\" t={t}>\n          To deploy an Image from a private registry, you must{' '}\n          <Button\n            variant=\"link\"\n            isInline\n            onClick={() =>\n              secretModalLauncher({\n                namespace,\n                save: handleSave,\n                secretType: SecretTypeAbstraction.image,\n              })\n            }\n          >\n            create an Image pull secret\n          </Button>{' '}\n          with your Image registry credentials.\n        </Trans>\n      </div>\n      {newImageSecret && alertVisible && (\n        <Alert\n          isInline\n          className=\"co-alert\"\n          variant=\"success\"\n          title={t('devconsole~Secret \"{{newImageSecret}}\" was created.', { newImageSecret })}\n          actionClose={<AlertActionCloseButton onClose={() => shouldHideAlert(false)} />}\n        />\n      )}\n      <div className=\"odc-image-search__advanced-options\">\n        <CheckboxField\n          name=\"allowInsecureRegistry\"\n          label={t('devconsole~Allow Images from insecure registries')}\n          onChange={(val: boolean) => {\n            values.searchTerm && handleSearch(values.searchTerm, val);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ImageSearch;\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { getIcon, getIcons } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\n\nimport './IconDropdown.scss';\n\nexport type IconDropdownProps = {\n  placeholder: string;\n  value: string;\n  onChanged: (value: string) => void;\n};\n\ntype IconProps = {\n  label: string;\n  url: string;\n};\n\nconst Icon: React.FC<IconProps> = ({ label, url }) => (\n  <div className=\"odc-icon-dropdown__item\">\n    <img src={url} width=\"24\" height=\"24\" alt=\"\" className=\"icon\" />\n    {label}\n  </div>\n);\n\nconst iconLabelAutocompleteFilter = (text: string, item: React.ReactElement<IconProps>) =>\n  fuzzy(text, item.props.label);\n\nconst IconDropdown: React.FC<IconDropdownProps> = ({ placeholder, value, onChanged }) => {\n  const title = React.useMemo<React.ReactElement>(() => {\n    const icon = getIcon(value || 'openshift');\n    return icon ? (\n      <Icon label={icon.label} url={icon.url} />\n    ) : (\n      <span className=\"btn-dropdown__item--placeholder\">{placeholder}</span>\n    );\n  }, [placeholder, value]);\n\n  const items = React.useMemo<Record<string, React.ReactElement>>(() => {\n    const options: Record<string, React.ReactElement> = {};\n    getIcons().forEach(({ label, url }) => {\n      options[label] = <Icon label={label} url={url} />;\n    });\n    return options;\n  }, []);\n\n  return (\n    <Dropdown\n      title={title}\n      items={items}\n      autoSelect\n      autocompletePlaceholder={placeholder}\n      autocompleteFilter={iconLabelAutocompleteFilter}\n      dropDownClassName=\"dropdown--full-width odc-icon-dropdown\"\n      menuClassName=\"odc-icon-dropdown__menu\"\n      onChange={onChanged}\n      selectedKey={value || 'openshift'}\n    />\n  );\n};\n\nexport default IconDropdown;\n","import * as React from 'react';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { ImportStrategy, DetectedBuildType } from '@console/git-service';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../../utils/imagestream-utils';\nimport FormSection from '../section/FormSection';\nimport BuilderImageSelector from './BuilderImageSelector';\nimport BuilderImageTagSelector from './BuilderImageTagSelector';\n\nexport interface ImageSectionProps {\n  builderImages: NormalizedBuilderImages;\n  existingPipeline?: PipelineKind;\n}\n\nconst BuilderSection: React.FC<ImageSectionProps> = ({ builderImages, existingPipeline }) => {\n  const {\n    values: {\n      image,\n      import: { showEditImportStrategy, strategies, recommendedStrategy },\n    },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n\n  const handleBuilderImageSelection = React.useCallback(\n    async (detectedBuildTypes?: DetectedBuildType[]) => {\n      setFieldValue('image.isRecommending', false);\n      const recommendedBuildType =\n        builderImages &&\n        detectedBuildTypes?.find(\n          ({ type: recommended }) => recommended && builderImages.hasOwnProperty(recommended),\n        );\n      if (recommendedBuildType && recommendedBuildType.type) {\n        setFieldValue('image.couldNotRecommend', false);\n        setFieldValue('image.recommended', recommendedBuildType.type);\n      } else {\n        setFieldValue('image.couldNotRecommend', true);\n        setFieldValue('image.recommended', '');\n      }\n    },\n    [builderImages, setFieldValue],\n  );\n\n  React.useEffect(() => {\n    if (builderImages && recommendedStrategy && recommendedStrategy.type !== ImportStrategy.S2I) {\n      const s2iStrategy = strategies.find((s) => s.type === ImportStrategy.S2I);\n      if (s2iStrategy) {\n        setFieldValue('image.isRecommending', true);\n        setFieldValue('import.selectedStrategy.detectedCustomData', s2iStrategy.detectedCustomData);\n        handleBuilderImageSelection(s2iStrategy.detectedCustomData);\n      }\n      image.selected\n        ? setFieldValue('import.strategyChanged', true)\n        : setFieldValue('import.strategyChanged', false);\n    }\n  }, [\n    builderImages,\n    handleBuilderImageSelection,\n    image.selected,\n    recommendedStrategy,\n    setFieldValue,\n    strategies,\n  ]);\n\n  if (!builderImages) {\n    return null;\n  }\n\n  return (\n    <>\n      <FormSection fullWidth style={!showEditImportStrategy ? { display: 'none' } : {}}>\n        <BuilderImageSelector\n          loadingImageStream={!builderImages}\n          builderImages={builderImages}\n          existingPipeline={existingPipeline}\n        />\n      </FormSection>\n      {builderImages[image.selected] && image.tag && (\n        <FormSection>\n          <BuilderImageTagSelector\n            selectedBuilderImage={builderImages[image.selected]}\n            selectedImageTag={image.tag}\n          />\n        </FormSection>\n      )}\n    </>\n  );\n};\n\nexport default BuilderSection;\n","import * as React from 'react';\nimport { ExpandableSection } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ImportStrategy, getGitService } from '@console/git-service/src';\nimport { getStrategyType } from '@console/internal/components/build';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { FLAG_OPENSHIFT_PIPELINE_AS_CODE } from '@console/pipelines-plugin/src/const';\nimport { EnvironmentField, useDebounceCallback, useFlag } from '@console/shared/src';\nimport {\n  isPreferredStrategyAvailable,\n  useClusterBuildStrategy,\n} from '../../../../utils/shipwright-build-hook';\nimport { AppResources } from '../../../edit-application/edit-application-types';\nimport BuildConfigSection from '../../advanced/BuildConfigSection';\nimport { useBuilderImageEnvironments } from '../../builder/builderImageHooks';\nimport { BuildOptions, GitImportFormData } from '../../import-types';\nimport FormSection from '../FormSection';\nimport { BuildOption } from './BuildOptions';\nimport { BuildStrategySelector } from './BuildStrategySelector';\n\ntype BuildSectionProps = {\n  values: FormikValues & GitImportFormData;\n  appResources?: AppResources;\n};\n\nexport const BuildSection: React.FC<BuildSectionProps> = ({ values, appResources }) => {\n  const { t } = useTranslation();\n  const {\n    project: { name: namespace },\n    build: { option: buildOption, env: buildEnv },\n    image: { selected: selectedImage, tag: selectedTag },\n    import: { selectedStrategy, knativeFuncLoaded: funcLoaded },\n  } = values;\n  const { setFieldValue } = useFormikContext<FormikValues>();\n  const isRepositoryEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE_AS_CODE);\n  const [strategy] = useClusterBuildStrategy();\n\n  const [environments, envsLoaded] = useBuilderImageEnvironments(selectedImage, selectedTag);\n\n  const envs = React.useMemo(() => {\n    if (selectedStrategy.type === ImportStrategy.SERVERLESS_FUNCTION) {\n      return buildEnv;\n    }\n\n    if (buildOption === BuildOptions.BUILDS) {\n      const strategyType = getStrategyType(appResources?.buildConfig?.data?.spec?.strategy?.type);\n      const buildConfigObj = appResources?.buildConfig?.data || {\n        metadata: {\n          namespace,\n        },\n      };\n      return (buildConfigObj.spec?.strategy?.[strategyType]?.env || []).filter(\n        (e) => !environments.some((env) => env.key === e.name),\n      );\n    }\n\n    if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n      const swBuildObj = appResources?.shipwrightBuild?.data || {\n        metadata: {\n          namespace,\n        },\n      };\n      return (swBuildObj.spec?.env || []).filter(\n        (e) => !environments.some((env) => env.key === e.name),\n      );\n    }\n\n    return [];\n  }, [\n    appResources?.buildConfig?.data,\n    appResources?.shipwrightBuild?.data,\n    buildEnv,\n    buildOption,\n    environments,\n    namespace,\n    selectedStrategy.type,\n  ]);\n\n  /* Auto-select Pipelines as Build option for PAC Repositories */\n  const autoSelectPipelines = useDebounceCallback(() => {\n    const { git, formType } = values || {};\n\n    if (formType !== 'edit' && git?.url) {\n      const gitService = getGitService(\n        git?.url,\n        git?.type,\n        git?.ref,\n        git?.dir,\n        git?.secretResource,\n      );\n      const checkTektonFolder = async () => {\n        const res = await gitService?.isTektonFolderPresent();\n        if (isRepositoryEnabled && res) {\n          setFieldValue('build.option', BuildOptions.PIPELINES);\n        }\n      };\n      gitService && checkTektonFolder();\n    }\n  }, 2000);\n\n  React.useEffect(() => {\n    autoSelectPipelines();\n  }, [values?.git?.url, isRepositoryEnabled, setFieldValue, autoSelectPipelines]);\n\n  React.useEffect(() => {\n    if (values?.formType === 'edit' && values?.pipeline?.enabled) {\n      setFieldValue('build.option', BuildOptions.PIPELINES);\n    }\n    if (values?.formType === 'edit' && values.build.option === BuildOptions.BUILDS) {\n      setFieldValue('build.option', BuildOptions.BUILDS);\n    }\n    if (values?.formType === 'edit' && values.build.option === BuildOptions.SHIPWRIGHT_BUILD) {\n      setFieldValue('build.option', BuildOptions.SHIPWRIGHT_BUILD);\n    }\n  }, [values, setFieldValue]);\n\n  React.useEffect(() => {\n    if (\n      values?.formType !== 'edit' &&\n      values.pipeline?.enabled &&\n      values.build.option !== BuildOptions.PIPELINES\n    ) {\n      setFieldValue('pipeline.enabled', false);\n      setFieldValue('pac.pipelineEnabled', false);\n    }\n  }, [setFieldValue, values.pipeline?.enabled, values.build?.option, values.formType]);\n\n  /** NOTE: Shipwright Builds are not supported with Devfile Import Strategy currently and if required ClusterBuildStrategy for the ImportType is not available */\n  React.useEffect(() => {\n    if (values?.formType !== 'edit') {\n      if (\n        values?.import?.selectedStrategy?.type === ImportStrategy.DEVFILE ||\n        !isPreferredStrategyAvailable(values?.import?.selectedStrategy?.type, strategy)\n      ) {\n        setFieldValue('build.option', BuildOptions.BUILDS);\n      } else {\n        setFieldValue('build.option', BuildOptions.SHIPWRIGHT_BUILD);\n      }\n    }\n  }, [setFieldValue, values?.import?.selectedStrategy?.type, strategy, values?.formType]);\n\n  return (\n    <FormSection title={t('devconsole~Build')}>\n      <BuildOption\n        isDisabled={values?.formType === 'edit'}\n        importStrategy={values?.import?.selectedStrategy?.type}\n      />\n\n      {values.build?.option === BuildOptions.SHIPWRIGHT_BUILD && (\n        <BuildStrategySelector\n          formType={values?.formType}\n          importStrategy={values?.import?.selectedStrategy?.type}\n        />\n      )}\n      {values.isi || values.pipeline?.enabled ? null : (\n        <ExpandableSection toggleText={t('devconsole~Show advanced Build option')}>\n          {values.build?.option === BuildOptions.BUILDS && (\n            <BuildConfigSection showHeader={false} />\n          )}\n          {(\n            selectedStrategy.type === ImportStrategy.SERVERLESS_FUNCTION\n              ? funcLoaded ?? false\n              : envsLoaded\n          ) ? (\n            <EnvironmentField\n              name=\"build.env\"\n              label={t('devconsole~Environment variables (build and runtime)')}\n              obj={{ metadata: { namespace } }}\n              envs={envs}\n            />\n          ) : (\n            <LoadingBox />\n          )}\n        </ExpandableSection>\n      )}\n    </FormSection>\n  );\n};\n","import * as React from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { history, resourcePathFromModel } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { BuildConfigModel, BuildModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useActiveNamespace, useToast, getOwnedResources } from '@console/shared';\n\nexport const useUploadJarFormToast = () => {\n  const toast = useToast();\n  const { t } = useTranslation();\n  const [namespace] = useActiveNamespace();\n  const buildsResource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: BuildModel.kind,\n      namespace,\n      isList: true,\n    }),\n    [namespace],\n  );\n  const [builds] = useK8sWatchResource<K8sResourceKind[]>(buildsResource);\n\n  return React.useCallback(\n    (resp) => {\n      const createdBuildConfig = resp.find((d) => d.kind === BuildConfigModel.kind);\n      const ownBuilds = getOwnedResources(createdBuildConfig, builds);\n      const buildName = `${createdBuildConfig.metadata.name}-${ownBuilds.length + 1}`;\n      const link = `${resourcePathFromModel(BuildModel, buildName, namespace)}/logs`;\n      toast.addToast({\n        variant: AlertVariant.info,\n        title: t('devconsole~JAR file uploading'),\n        content: t(\n          'devconsole~JAR file is uploading to {{namespace}}. You can view the upload progress in the build logs. This may take a few minutes. If you exit the browser while upload is in progress it may fail.',\n          {\n            namespace,\n          },\n        ),\n        timeout: true,\n        actions: [\n          {\n            dismiss: true,\n            label: t('devconsole~View build logs'),\n            callback: () => history.push(link),\n          },\n        ],\n      });\n    },\n    [builds, namespace, t, toast],\n  );\n};\n","import * as _ from 'lodash';\nimport { coFetch } from '@console/internal/co-fetch';\nimport {\n  ServiceModel,\n  RouteModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n} from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind, k8sUpdate, K8sVerb } from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { getRandomChars, NameValuePair, getResourceLimitsData } from '@console/shared';\nimport {\n  getAppLabels,\n  getCommonAnnotations,\n  getPodLabels,\n  getRouteAnnotations,\n  getTemplateLabels,\n  getTriggerAnnotation,\n  mergeData,\n} from '../../utils/resource-label-utils';\nimport { createRoute, createService, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  createOrUpdateImageStream,\n  createProject,\n  createWebhookSecret,\n} from './import-submit-utils';\nimport { Resources, UploadJarFormData } from './import-types';\n\nexport const createOrUpdateDeployment = (\n  formData: UploadJarFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    fileUpload: { name: fileName, javaArgs },\n    labels: userLabels,\n    limits: { cpu, memory },\n    healthChecks,\n    runtimeIcon,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    runtimeIcon,\n    selectedTag,\n  });\n  const imageName = name;\n  const annotations = {\n    ...getCommonAnnotations(),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n    jarFileName: fileName,\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n  if (jArgsIndex !== -1) {\n    if (javaArgs !== '') {\n      (env[jArgsIndex] as NameValuePair).value = javaArgs;\n    } else {\n      env.splice(jArgsIndex, 1);\n    }\n  } else if (javaArgs !== '') {\n    env.push({ name: 'JAVA_ARGS', value: javaArgs });\n  }\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nconst createOrUpdateDeploymentConfig = (\n  formData: UploadJarFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    fileUpload: { javaArgs },\n    labels: userLabels,\n    limits: { cpu, memory },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n  if (jArgsIndex !== -1) {\n    if (javaArgs !== '') {\n      (env[jArgsIndex] as NameValuePair).value = javaArgs;\n    } else {\n      env.splice(jArgsIndex, 1);\n    }\n  } else if (javaArgs !== '') {\n    env.push({ name: 'JAVA_ARGS', value: javaArgs });\n  }\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...getCommonAnnotations() },\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: UploadJarFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    fileUpload: { name: jarFileName },\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { tag: selectedTag },\n    build: { env, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getCommonAnnotations(), jarFileName };\n  const buildStrategyData = {\n    sourceStrategy: {\n      env,\n      from: {\n        kind: 'ImageStreamTag',\n        name: `${imageStreamName}:${selectedTag}`,\n        namespace: imageStreamNamespace,\n      },\n    },\n  };\n\n  const buildConfigName = verb === 'update' ? originalBuildConfig?.metadata?.name : name;\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || name}:latest`,\n        },\n      },\n      source: {\n        type: 'Binary',\n        binary: {},\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, buildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const instantiateBinaryBuild = (\n  namespace: string,\n  buildConfigResponse: K8sResourceKind,\n  filename: string,\n  value: File,\n) => {\n  const onBeforeUnload = (e: BeforeUnloadEvent) => {\n    e.preventDefault();\n    // Chrome requires returnValue to be set\n    // from https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\n    e.returnValue = '';\n  };\n  window.addEventListener('beforeunload', onBeforeUnload);\n  coFetch(\n    `/api/kubernetes/apis/build.openshift.io/v1/namespaces/${namespace}/buildconfigs/${buildConfigResponse.metadata.name}/instantiatebinary?asFile=${filename}`,\n    {\n      method: 'POST',\n      body: value,\n      headers: {\n        'Content-type': value.type,\n      },\n    },\n    0,\n  )\n    .then(() => {\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to upload binary file to trigger a new Build', err);\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    });\n};\n\nexport const createOrUpdateJarFile = async (\n  formData: UploadJarFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    fileUpload: { name: fileName, value: fileValue },\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: { strategy: buildStrategy },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    resources,\n  } = formData;\n  const {\n    imageStream: appResImageStream,\n    buildConfig: appResBuildConfig,\n    editAppResource,\n    service: appResService,\n    route: appResRoute,\n  } = appResources || {};\n\n  const imageStreamName = imageStream?.metadata.name;\n\n  createNewProject && (await createProject(formData.project));\n\n  const responses = [];\n  let generatedImageStreamName: string = '';\n  const imageStreamList = appResImageStream?.data;\n  if (\n    resources === Resources.KnativeService &&\n    imageStreamList &&\n    imageStreamList.length &&\n    verb === 'update' &&\n    fileValue !== ''\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    imageStream,\n    dryRun,\n    appResBuildConfig?.data,\n    verb,\n    generatedImageStreamName,\n  );\n\n  buildConfigResponse &&\n    !dryRun &&\n    fileValue !== '' &&\n    instantiateBinaryBuild(namespace, buildConfigResponse, fileName, fileValue as File);\n\n  responses.push(buildConfigResponse);\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n  }\n\n  if (resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          }\n        : {\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      editAppResource?.data,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    responses.push(\n      ...[\n        verb === 'update'\n          ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n          : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n        ...domainMappingResources,\n      ],\n    );\n    return Promise.all(responses);\n  }\n  if (resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(formData, imageStream, dryRun, editAppResource?.data, verb),\n    );\n  } else if (resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        editAppResource?.data,\n        verb,\n      ),\n    );\n  }\n\n  if (!_.isEmpty(ports) || buildStrategy === 'Source') {\n    const originalService = appResService?.data;\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = appResRoute?.data;\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n","import * as React from 'react';\nimport { FormGroup, Alert } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { PIPELINE_RUNTIME_LABEL } from '@console/pipelines-plugin/src/const';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { getFieldId, ItemSelectorField } from '@console/shared';\nimport { NormalizedBuilderImages } from '../../../utils/imagestream-utils';\n\nexport interface BuilderImageSelectorProps {\n  loadingImageStream: boolean;\n  builderImages: NormalizedBuilderImages;\n  existingPipeline?: PipelineKind;\n}\n\nconst PipelineChangeAlert = (alertMessage: string) => (\n  <>\n    <Alert isInline variant=\"info\" title={alertMessage} />\n    <br />\n  </>\n);\n\nconst BuilderImageSelector: React.FC<BuilderImageSelectorProps> = ({\n  loadingImageStream,\n  builderImages,\n  existingPipeline,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: { pipeline, image },\n    setFieldValue,\n    setFieldTouched,\n    validateForm,\n  } = useFormikContext<FormikValues>();\n  const { selected, recommended, isRecommending, couldNotRecommend, tag } = image;\n  const [showPipelineWarning, setShowPipelineWarning] = React.useState(false);\n\n  const isPipelineAttached = !_.isEmpty(existingPipeline);\n\n  React.useEffect(() => {\n    if (selected && !tag) {\n      setFieldValue('image.tag', builderImages?.[selected]?.recentTag?.name ?? '');\n      setFieldTouched('image.tag', true);\n    }\n  }, [selected, setFieldValue, setFieldTouched, builderImages, tag]);\n\n  const fieldId = getFieldId('image.name', 'selector');\n  const imageName = builderImages?.[selected]?.title || t('devconsole~this Builder Image');\n\n  const changedPipelineWarning = pipeline.template\n    ? pipeline.template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n        existingPipeline?.metadata?.labels[PIPELINE_RUNTIME_LABEL] &&\n      PipelineChangeAlert(\n        t(\n          'devconsole~Changing to this builder image will update your associated Pipeline and remove any customization you may have applied.',\n        ),\n      )\n    : PipelineChangeAlert(\n        t(\n          'devconsole~There are no supported pipelines available for {{builderImage}}. Changing to this builder image will disconnect your associated Pipeline.',\n          { builderImage: imageName },\n        ),\n      );\n\n  if (_.keys(builderImages).length === 1) {\n    return (\n      <ItemSelectorField\n        itemList={builderImages}\n        name=\"image.selected\"\n        loadingItems={loadingImageStream}\n        recommended={recommended}\n      />\n    );\n  }\n\n  return (\n    <FormGroup fieldId={fieldId} label={t('devconsole~Builder Image')}>\n      {isRecommending && !recommended && (\n        <>\n          <LoadingInline /> {t('devconsole~Detecting recommended Builder Images...')}\n        </>\n      )}\n      {(couldNotRecommend || (recommended && !builderImages.hasOwnProperty(recommended))) && (\n        <>\n          <Alert\n            variant=\"warning\"\n            title={t('devconsole~Unable to detect the Builder Image.')}\n            isInline\n          >\n            {t('devconsole~Select the most appropriate one from the list to continue.')}\n          </Alert>\n          <br />\n        </>\n      )}\n      {showPipelineWarning && changedPipelineWarning}\n      <ItemSelectorField\n        itemList={builderImages}\n        name=\"image.selected\"\n        loadingItems={loadingImageStream}\n        recommended={image.recommended}\n        onSelect={() => {\n          setFieldValue('image.tag', '', false);\n          setFieldTouched('image.tag', true);\n          if (isPipelineAttached) {\n            setShowPipelineWarning(true);\n          }\n          validateForm();\n        }}\n      />\n    </FormGroup>\n  );\n};\n\nexport default BuilderImageSelector;\n","import * as React from 'react';\nimport { Icon, TextInputTypes, ValidatedOptions } from '@patternfly/react-core';\nimport { CubeIcon } from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { DockerFileParser, getGitService, ImportStrategy } from '@console/git-service/src';\nimport { InputField } from '@console/shared';\nimport { GitImportFormData } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nconst DockerSection: React.FC = () => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, setFieldTouched } = useFormikContext<\n    FormikValues & GitImportFormData\n  >();\n  const {\n    import: { showEditImportStrategy, strategies, recommendedStrategy },\n    git: { url, type, ref, dir, secretResource },\n    image: { ports },\n    docker,\n    formType,\n  } = values;\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n\n  const handleDockerfileChange = React.useCallback(async () => {\n    const gitService = getGitService(\n      url,\n      type,\n      ref,\n      dir,\n      secretResource,\n      null,\n      docker.dockerfilePath,\n    );\n    const isDockerFilePresent = gitService && (await gitService.isDockerfilePresent());\n    if (docker.dockerfilePath && isDockerFilePresent) {\n      setValidated(ValidatedOptions.success);\n      setFieldValue('docker.dockerfileHasError', false);\n    } else {\n      setValidated(ValidatedOptions.error);\n      setFieldValue('docker.dockerfileHasError', true);\n    }\n  }, [dir, docker.dockerfilePath, ref, secretResource, setFieldValue, type, url]);\n\n  const helpText = React.useMemo(() => {\n    if (validated === ValidatedOptions.success) {\n      return t('devconsole~Validated');\n    }\n    if (validated === ValidatedOptions.error) {\n      return t('devconsole~Dockerfile not detected');\n    }\n    return t(\n      'devconsole~Allows the builds to use a different path to locate your Dockerfile, relative to the Context Dir field.',\n    );\n  }, [t, validated]);\n\n  React.useEffect(() => {\n    if (recommendedStrategy && recommendedStrategy.type !== ImportStrategy.DOCKERFILE) {\n      const dockerfileStrategy = strategies.find((s) => s.type === ImportStrategy.DOCKERFILE);\n      if (dockerfileStrategy) {\n        setFieldValue('import.selectedStrategy.detectedFiles', dockerfileStrategy.detectedFiles);\n        setFieldValue('docker.dockerfilePath', dockerfileStrategy.detectedFiles?.[0]);\n        handleDockerfileChange();\n        validated === ValidatedOptions.success\n          ? setFieldValue('import.strategyChanged', true)\n          : setFieldValue('import.strategyChanged', false);\n      }\n      setFieldTouched('docker.dockerfilePath', true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recommendedStrategy, setFieldValue, strategies]);\n\n  React.useEffect(() => {\n    const gitService =\n      url && getGitService(url, type, ref, dir, secretResource, null, docker.dockerfilePath);\n    gitService &&\n      gitService.getDockerfileContent().then((dockerfileContent) => {\n        if (dockerfileContent) {\n          const parser = new DockerFileParser(dockerfileContent);\n          const port = parser.getContainerPort();\n          port &&\n            setFieldValue('image.ports', [...ports, { containerPort: port, protocol: 'TCP' }]);\n        }\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [docker.dockerfilePath, url]);\n\n  return (\n    <FormSection>\n      {showEditImportStrategy && (\n        <InputField\n          type={TextInputTypes.text}\n          name=\"docker.dockerfilePath\"\n          label={t('devconsole~Dockerfile path')}\n          placeholder={t('devconsole~Enter Dockerfile path')}\n          helpText={helpText}\n          helpTextInvalid={helpText}\n          validated={validated}\n          onBlur={() => {\n            handleDockerfileChange();\n            validated === ValidatedOptions.success\n              ? setFieldValue('import.strategyChanged', true)\n              : setFieldValue('import.strategyChanged', false);\n          }}\n          required\n        />\n      )}\n      {formType !== 'edit' && !docker.dockerfileHasError && (\n        <div className=\"co-catalog-item-details\">\n          <Icon size=\"xl\">\n            <CubeIcon />\n          </Icon>\n          &nbsp;\n          <div>\n            <h2 className=\"co-section-heading co-catalog-item-details__name\">\n              {t('devconsole~Dockerfile')}\n            </h2>\n          </div>\n        </div>\n      )}\n    </FormSection>\n  );\n};\n\nexport default DockerSection;\n","import * as React from 'react';\nimport { DropEvent, FileUpload, TextInputTypes } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FileUploadContext,\n  FileUploadContextType,\n} from '@console/app/src/components/file-upload/file-upload-context';\nimport { InputField } from '@console/shared/src';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport FormSection from '../../section/FormSection';\nimport { getAppName } from '../../upload-jar-validation-utils';\n\nconst JarSection: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      name,\n      fileUpload: { name: fileName, value: fileValue },\n      application: { name: appGroupName, selectedKey: appGroupSelectedKey },\n    },\n    setFieldValue,\n    setFieldTouched,\n    touched,\n  } = useFormikContext<FormikValues>();\n  const { fileUpload, setFileUpload } = React.useContext<FileUploadContextType>(FileUploadContext);\n\n  const { name: nameTouched } = touched;\n\n  const updatedJarFile = React.useCallback(\n    (_event: DropEvent, file: File): void => {\n      if (file.name) {\n        const appName = getAppName(file.name);\n        setFieldValue('fileUpload.name', file.name);\n        setFieldTouched('fileUpload.name', true);\n        file && setFieldValue('fileUpload.value', file);\n        appName && !nameTouched && !name && setFieldValue('name', appName);\n        !name && setFieldValue('name', appName);\n        appName &&\n          !appGroupName &&\n          appGroupSelectedKey !== UNASSIGNED_KEY &&\n          setFieldValue('application.name', `${appName}-app`);\n      } else {\n        setFieldValue('fileUpload.name', '');\n        setFieldValue('fileUpload.value', '');\n      }\n    },\n    [appGroupName, appGroupSelectedKey, setFieldValue, setFieldTouched, name, nameTouched],\n  );\n\n  React.useEffect(() => {\n    if (fileUpload) {\n      updatedJarFile(null, fileUpload);\n      if (fileName) {\n        setFileUpload(undefined);\n      }\n    }\n  }, [fileUpload, updatedJarFile, setFileUpload, fileName]);\n\n  const handleClear = () => {\n    setFieldValue('fileUpload.value', '');\n    setFieldValue('fileUpload.name', '');\n    setTimeout(() => {\n      setFieldTouched('fileUpload.name', true);\n    }, 0);\n  };\n\n  return (\n    <FormSection title={t('devconsole~JAR')}>\n      <FileUpload\n        id=\"upload-jar-field\"\n        name=\"fileUpload.name\"\n        value={fileValue}\n        filename={fileName}\n        label={t('devconsole~JAR file')}\n        filenamePlaceholder={t('devconsole~Drag a file here or browse to upload')}\n        browseButtonText={t('devconsole~Browse...')}\n        clearButtonText={t('devconsole~Clear')}\n        onFileInputChange={updatedJarFile}\n        hideDefaultPreview\n        dropzoneProps={{\n          accept: { 'application/java-archive': ['.jar', '.JAR'] },\n        }}\n        isRequired\n        onClearClick={handleClear}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"fileUpload.javaArgs\"\n        label={t('devconsole~Optional Java arguments')}\n        helpText={t(\n          'devconsole~Optional Java arguments are saved as JAVA_ARGS environment variable to customize your application.',\n        )}\n        data-test-id=\"upload-jar-form-java-args\"\n        placeholder={t('devconsole~JAVA_ARGS')}\n      />\n    </FormSection>\n  );\n};\n\nexport default JarSection;\n","import * as React from 'react';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nexport interface BuildConfigSectionProps {\n  showHeader?: boolean;\n}\n\nconst BuildConfigSection: React.FC<BuildConfigSectionProps> = ({ showHeader }) => {\n  const { t } = useTranslation();\n  const {\n    values: { build },\n  } = useFormikContext<FormikValues>();\n\n  return (\n    <FormSection title={showHeader && t('devconsole~Build configuration')} extraMargin>\n      {typeof build?.triggers?.webhook === 'boolean' && (\n        <CheckboxField\n          name=\"build.triggers.webhook\"\n          label={t('devconsole~Configure a webhook build trigger')}\n        />\n      )}\n      {typeof build?.triggers?.image === 'boolean' && (\n        <CheckboxField\n          name=\"build.triggers.image\"\n          label={t('devconsole~Automatically build a new Image when the Builder Image changes')}\n        />\n      )}\n      {typeof build?.triggers?.config === 'boolean' && (\n        <CheckboxField\n          name=\"build.triggers.config\"\n          label={t('devconsole~Launch the first build when the build configuration is created')}\n        />\n      )}\n    </FormSection>\n  );\n};\n\nexport default BuildConfigSection;\n","import * as React from 'react';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { ImportStrategy } from '@console/git-service/src/types';\nimport { getActiveNamespace } from '@console/internal/actions/ui';\nimport { LoadingInline, useAccessReview } from '@console/internal/components/utils';\nimport { CLUSTER_PIPELINE_NS, FLAG_OPENSHIFT_PIPELINE } from '@console/pipelines-plugin/src/const';\nimport { PipelineModel } from '@console/pipelines-plugin/src/models';\nimport { SingleDropdownField, SelectInputOption, useFlag } from '@console/shared';\nimport { FLAG_OPENSHIFT_BUILDCONFIG } from '../../../../const';\nimport {\n  isPreferredStrategyAvailable,\n  useClusterBuildStrategy,\n  useShipwrightBuilds,\n} from '../../../../utils/shipwright-build-hook';\nimport { BuildOptions, ReadableBuildOptions } from '../../import-types';\n\ntype BuildOptionProps = {\n  isDisabled: boolean;\n  importStrategy: ImportStrategy;\n};\n\nexport const usePipelineAccessReview = (): boolean => {\n  const canListPipelines = useAccessReview({\n    group: PipelineModel.apiGroup,\n    resource: PipelineModel.plural,\n    namespace: CLUSTER_PIPELINE_NS,\n    verb: 'list',\n  });\n\n  const canCreatePipelines = useAccessReview({\n    group: PipelineModel.apiGroup,\n    resource: PipelineModel.plural,\n    namespace: getActiveNamespace(),\n    verb: 'create',\n  });\n\n  return canListPipelines && canCreatePipelines;\n};\n\nexport const BuildOption: React.FC<BuildOptionProps> = ({ isDisabled, importStrategy }) => {\n  const { t } = useTranslation();\n  const { setFieldValue } = useFormikContext<FormikValues>();\n  const isBuildV1Enabled = useFlag(FLAG_OPENSHIFT_BUILDCONFIG);\n  const isShipwrightBuildsEnabled = useShipwrightBuilds();\n  const [strategy, strategyLoaded] = useClusterBuildStrategy();\n  const isPipelineEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE);\n  const hasCreatePipelineAccess = usePipelineAccessReview();\n\n  const fieldName = 'build.option';\n\n  const selectInputOptions = React.useMemo(() => {\n    const options: SelectInputOption[] = [];\n\n    if (isShipwrightBuildsEnabled && isPreferredStrategyAvailable(importStrategy, strategy)) {\n      options.push({\n        label: t(ReadableBuildOptions[BuildOptions.SHIPWRIGHT_BUILD]),\n        value: BuildOptions.SHIPWRIGHT_BUILD,\n        description: t(\n          'devconsole~Shipwright is an extensible framework for building container images on OpenShift Container Platform cluster.',\n        ),\n      });\n    }\n\n    if (isBuildV1Enabled) {\n      options.push({\n        label: t(ReadableBuildOptions[BuildOptions.BUILDS]),\n        value: BuildOptions.BUILDS,\n        description: t(\n          'devconsole~Build configuration describes build definitions used for transforming source code into a runnable container image.',\n        ),\n      });\n    }\n\n    // OCPBUGS-32526: Pipeline builds and Devfile import are mutually exclusive\n    if (isPipelineEnabled && hasCreatePipelineAccess && importStrategy !== ImportStrategy.DEVFILE) {\n      options.push({\n        label: t(ReadableBuildOptions[BuildOptions.PIPELINES]),\n        value: BuildOptions.PIPELINES,\n        description: t(\n          'devconsole~Build using pipeline describes a process for transforming source code into a runnable container image. Pipelines support can be added using Red Hat OpenShift Pipelines Operator.',\n        ),\n      });\n    }\n\n    return options;\n  }, [\n    isBuildV1Enabled,\n    isShipwrightBuildsEnabled,\n    isPipelineEnabled,\n    hasCreatePipelineAccess,\n    strategy,\n    importStrategy,\n    t,\n  ]);\n\n  const onChange = React.useCallback(\n    (selection: string) => {\n      const value = _.findKey(ReadableBuildOptions, (name) => t(name) === selection);\n      setFieldValue(fieldName, value);\n    },\n    [setFieldValue, fieldName, t],\n  );\n\n  return strategyLoaded ? (\n    <SingleDropdownField\n      name={fieldName}\n      label={t('devconsole~Build option')}\n      options={selectInputOptions}\n      onChange={onChange}\n      isDisabled={isDisabled}\n      getLabelFromValue={(value: string) => t(ReadableBuildOptions[value])}\n      helpText={\n        <p className=\"pf-c-form__helper-text\">\n          <Trans t={t} ns=\"devconsole\">\n            Build option to use for transforming source code into a runnable container image.\n          </Trans>\n        </p>\n      }\n      toggleOnSelection\n    />\n  ) : (\n    <LoadingInline />\n  );\n};\n","import * as React from 'react';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useClusterBuildStrategy } from '@console/dev-console/src/utils/shipwright-build-hook';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { SingleDropdownField, SelectInputOption } from '@console/shared/src';\nimport {\n  ClusterBuildStrategy,\n  ReadableClusterBuildStrategies,\n} from '@console/shipwright-plugin/src/types';\n\ntype BuildStrategySelectorProps = {\n  formType: string;\n  importStrategy: ImportStrategy;\n};\n\nexport const BuildStrategySelector: React.FC<BuildStrategySelectorProps> = ({\n  formType,\n  importStrategy,\n}) => {\n  const { t } = useTranslation();\n  const [strategy, strategyLoaded] = useClusterBuildStrategy();\n  const { setFieldValue } = useFormikContext<FormikValues>();\n\n  const clusterBuildStrategyOptions = React.useMemo(() => {\n    const options: SelectInputOption[] = [];\n    if (strategy.buildah && importStrategy === ImportStrategy.DOCKERFILE) {\n      options.push({\n        label: t(ReadableClusterBuildStrategies[ClusterBuildStrategy.BUILDAH]),\n        value: ClusterBuildStrategy.BUILDAH,\n      });\n    }\n    if (strategy.s2i && importStrategy === ImportStrategy.S2I) {\n      options.push({\n        label: t(ReadableClusterBuildStrategies[ClusterBuildStrategy.S2I]),\n        value: ClusterBuildStrategy.S2I,\n      });\n    }\n    return options;\n  }, [strategy, importStrategy, t]);\n\n  React.useEffect(() => {\n    if (formType !== 'edit') {\n      if (importStrategy === ImportStrategy.S2I) {\n        setFieldValue('build.clusterBuildStrategy', ClusterBuildStrategy.S2I);\n      } else if (importStrategy === ImportStrategy.DOCKERFILE) {\n        setFieldValue('build.clusterBuildStrategy', ClusterBuildStrategy.BUILDAH);\n      }\n    }\n  }, [setFieldValue, importStrategy, formType]);\n\n  const onChange = React.useCallback(\n    (selection: string) => {\n      const value = _.findKey(ReadableClusterBuildStrategies, (name) => t(name) === selection);\n      setFieldValue('build.clusterBuildStrategy', value);\n    },\n    [setFieldValue, t],\n  );\n\n  return strategyLoaded ? (\n    <SingleDropdownField\n      data-test-id=\"cluster-build-strategy-field\"\n      name=\"build.clusterBuildStrategy\"\n      label={t('devconsole~Cluster Build Strategy')}\n      onChange={onChange}\n      isDisabled={formType === 'edit'}\n      ariaLabel={t('devconsole~Cluster Build Strategy')}\n      placeholderText={t('devconsole~Select Cluster Build Strategy')}\n      helpText={t(\n        'devconsole~Cluster Build Strategies define a shared group of steps, needed to fullfil the application build process.',\n      )}\n      getLabelFromValue={(value: string) => t(ReadableClusterBuildStrategies[value])}\n      options={clusterBuildStrategyOptions}\n      toggleOnSelection\n    />\n  ) : (\n    <LoadingInline />\n  );\n};\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { WatchK8sResults, WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { StatusBox } from '@console/internal/components/utils';\nimport {\n  useK8sWatchResource,\n  useK8sWatchResources,\n} from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin';\nimport { PipelineModel } from '@console/pipelines-plugin/src/models';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { INSTANCE_LABEL, NAME_LABEL } from '../../const';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport EditApplicationComponent from './EditApplicationComponent';\n\ntype WatchResource = {\n  [key: string]: K8sResourceKind[] | K8sResourceKind | PipelineKind[];\n};\n\nconst EditApplicationPage: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const location = useLocation();\n  const namespace = params.ns;\n  const queryParams = new URLSearchParams(location.search);\n  const editAppResourceKind = queryParams.get('kind');\n  const appName = queryParams.get('name');\n  let kind = editAppResourceKind;\n  if (kind === ServiceModel.kind) {\n    kind = referenceForModel(ServiceModel);\n  }\n\n  const watchedEditResource = React.useMemo(\n    () => ({\n      kind,\n      name: appName,\n      namespace,\n      optional: true,\n    }),\n    [kind, appName, namespace],\n  );\n\n  const [editResData, isEditResDataLoaded, editResDataLoadError] = useK8sWatchResource<\n    K8sResourceKind\n  >(watchedEditResource);\n\n  const watchedResources = React.useMemo(() => {\n    const nameLabel =\n      isEditResDataLoaded &&\n      !editResDataLoadError &&\n      (editResData?.metadata?.labels?.[NAME_LABEL] ||\n        editResData?.metadata?.labels?.[INSTANCE_LABEL] ||\n        appName);\n    return {\n      service: {\n        kind: 'Service',\n        name: appName,\n        namespace,\n        optional: true,\n      },\n      route: {\n        kind: 'Route',\n        prop: 'route',\n        name: appName,\n        namespace,\n        optional: true,\n      },\n      buildConfig: {\n        kind: 'BuildConfig',\n        isList: true,\n        namespace,\n        name: nameLabel,\n        optional: true,\n      },\n      shipwrightBuild: {\n        kind: referenceForModel(ShipwrightBuildModel),\n        isList: true,\n        namespace,\n        name: nameLabel,\n        optional: true,\n      },\n      [PipelineModel.id]: {\n        kind: referenceForModel(PipelineModel),\n        isList: true,\n        namespace,\n        name: nameLabel,\n        optional: true,\n      },\n      imageStream: {\n        kind: 'ImageStream',\n        isList: true,\n        namespace,\n        optional: true,\n      },\n      imageStreams: {\n        kind: 'ImageStream',\n        prop: 'imageStreams',\n        isList: true,\n        namespace: 'openshift',\n        optional: true,\n      },\n    };\n  }, [namespace, appName, editResData, isEditResDataLoaded, editResDataLoadError]);\n\n  const resources: WatchK8sResults<WatchResource> = useK8sWatchResources<WatchResource>(\n    watchedResources,\n  );\n\n  const isResourcesLoaded =\n    Object.keys(resources).length > 0 &&\n    Object.values(resources).every((value) => value.loaded || !!value.loadError) &&\n    (isEditResDataLoaded || !!editResDataLoadError);\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('devconsole~Edit')}</title>\n      </Helmet>\n      <StatusBox loaded={isResourcesLoaded} data={editResData}>\n        <EditApplicationComponent\n          namespace={namespace}\n          appName={appName}\n          resources={{\n            ...resources,\n            editAppResource: {\n              data: editResData,\n              loaded: isEditResDataLoaded,\n              loadError: editResDataLoadError,\n            },\n            pipeline: resources.pipeline as WatchK8sResultsObject<PipelineKind[]>,\n          }}\n        />\n      </StatusBox>\n    </NamespacedPage>\n  );\n};\n\nexport default EditApplicationPage;\n","import * as React from 'react';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { INSTANCE_LABEL, NAME_LABEL } from '../../const';\nimport EditApplication from './EditApplication';\n\ntype AppResources = {\n  editAppResource: WatchK8sResultsObject<K8sResourceKind>;\n  service?: WatchK8sResultsObject<K8sResourceKind>;\n  route?: WatchK8sResultsObject<K8sResourceKind>;\n  buildConfig?: WatchK8sResultsObject<K8sResourceKind[]>;\n  shipwrightBuild?: WatchK8sResultsObject<K8sResourceKind[]>;\n  pipeline?: WatchK8sResultsObject<PipelineKind[]>;\n  imageStream?: WatchK8sResultsObject<K8sResourceKind[]>;\n  imageStreams?: WatchK8sResultsObject<K8sResourceKind[]>;\n};\n\ntype EditApplicationComponentProps = {\n  namespace: string;\n  appName: string;\n  resources: AppResources;\n};\n\nconst EditApplicationComponent: React.FunctionComponent<EditApplicationComponentProps> = (\n  props,\n) => {\n  const { appName, resources } = props;\n  const appLabel =\n    resources.editAppResource?.data?.metadata?.labels?.[NAME_LABEL] ||\n    resources.editAppResource?.data?.metadata?.labels?.[INSTANCE_LABEL];\n\n  const filterAssociatedResource = (obj: K8sResourceKind) => {\n    return (\n      obj.metadata.name === appName ||\n      obj.metadata.name === appLabel ||\n      (appLabel && obj.metadata.labels?.[NAME_LABEL] === appLabel) ||\n      (appLabel && obj.metadata.labels?.[INSTANCE_LABEL] === appLabel)\n    );\n  };\n\n  const getAssociatedResource = (resourcesObj: WatchK8sResultsObject<K8sResourceKind[]>) => {\n    const associatedRes = resourcesObj.data?.find(filterAssociatedResource);\n    return {\n      ...resourcesObj,\n      data: associatedRes,\n    };\n  };\n\n  const getAssociatedImageStream = (resourcesObj: WatchK8sResultsObject<K8sResourceKind[]>) => {\n    const associatedRes = resourcesObj.data?.filter(filterAssociatedResource);\n    return {\n      ...resourcesObj,\n      data: associatedRes,\n    };\n  };\n\n  return (\n    <EditApplication\n      {...props}\n      resources={{\n        ...resources,\n        pipeline: getAssociatedResource(resources.pipeline) as WatchK8sResultsObject<PipelineKind>,\n        buildConfig: getAssociatedResource(resources.buildConfig),\n        shipwrightBuild: getAssociatedResource(resources.shipwrightBuild),\n        imageStream: getAssociatedImageStream(resources.imageStream),\n      }}\n    />\n  );\n};\n\nexport default EditApplicationComponent;\n","import * as React from 'react';\nimport { Formik, FormikProps } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { ImageStreamModel } from '@console/internal/models';\nimport { k8sGet, K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePerspectives } from '@console/shared/src';\nimport { NormalizedBuilderImages, normalizeBuilderImages } from '../../utils/imagestream-utils';\nimport { createOrUpdateDeployImageResources } from '../import/deployImage-submit-utils';\nimport {\n  createOrUpdateResources as createOrUpdateGitResources,\n  handleRedirect,\n} from '../import/import-submit-utils';\nimport { useUploadJarFormToast } from '../import/jar/useUploadJarFormToast';\nimport { createOrUpdateJarFile } from '../import/upload-jar-submit-utils';\nimport { EditApplicationProps } from './edit-application-types';\nimport {\n  getFlowType,\n  getInitialValues,\n  ApplicationFlowType,\n  getValidationSchema,\n} from './edit-application-utils';\nimport EditApplicationForm from './EditApplicationForm';\n\nexport interface StateProps {\n  perspective: string;\n}\n\nconst EditApplication: React.FC<EditApplicationProps> = ({\n  namespace,\n  appName,\n  resources: appResources,\n}) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const perspectiveExtensions = usePerspectives();\n  const uploadJarFormToastCallback = useUploadJarFormToast();\n  const initialValues = getInitialValues(appResources, appName, namespace);\n  const buildStrategy = _.get(initialValues, 'build.strategy', '');\n  const buildSourceType = _.get(initialValues, 'build.source.type', undefined);\n  const flowType = getFlowType(buildStrategy, buildSourceType);\n  const validationSchema = getValidationSchema(buildStrategy, buildSourceType);\n\n  const imageStreamsData = React.useMemo(\n    () =>\n      appResources.imageStreams && appResources.imageStreams.loaded\n        ? appResources.imageStreams.data\n        : [],\n    [appResources],\n  );\n\n  const [builderImages, setBuilderImages] = React.useState<NormalizedBuilderImages>(null);\n\n  const updateResources = (values) => {\n    if (values.build.strategy) {\n      const imageStream =\n        values.image.selected && builderImages ? builderImages[values.image.selected].obj : null;\n      if (flowType === ApplicationFlowType.JarUpload) {\n        const isNewFileUploaded = values.fileUpload.value !== '';\n        return createOrUpdateJarFile(\n          values,\n          imageStream,\n          false,\n          false,\n          'update',\n          appResources,\n        ).then((resp) => {\n          if (isNewFileUploaded) {\n            uploadJarFormToastCallback(resp);\n          }\n          return resp;\n        });\n      }\n      return createOrUpdateGitResources(\n        t,\n        values,\n        imageStream,\n        false,\n        false,\n        'update',\n        appResources,\n      );\n    }\n    return createOrUpdateDeployImageResources(values, false, 'update', appResources);\n  };\n\n  const handleSubmit = (values, actions) => {\n    return updateResources(values)\n      .then(() => {\n        actions.setStatus({ submitError: '' });\n        handleRedirect(namespace, perspective, perspectiveExtensions);\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  React.useEffect(() => {\n    let ignore = false;\n\n    const getBuilderImages = async () => {\n      let allBuilderImages: NormalizedBuilderImages = !_.isEmpty(imageStreamsData)\n        ? normalizeBuilderImages(imageStreamsData)\n        : {};\n      if (appResources.buildConfig.loaded && appResources.buildConfig.data) {\n        const {\n          name: imageName,\n          namespace: imageNs,\n        } = appResources.buildConfig.data?.spec?.strategy.sourceStrategy.from;\n        const selectedImage = imageName?.split(':')[0];\n        const builderImageExists = imageNs === 'openshift' && allBuilderImages?.[selectedImage];\n        if (!builderImageExists) {\n          let newImageStream: K8sResourceKind;\n          try {\n            newImageStream = await k8sGet(ImageStreamModel, selectedImage, imageNs);\n            // eslint-disable-next-line no-empty\n          } catch {}\n          if (ignore) return;\n          allBuilderImages = {\n            ...allBuilderImages,\n            ...(newImageStream ? normalizeBuilderImages(newImageStream) : {}),\n          };\n        }\n      }\n      setBuilderImages(!_.isEmpty(allBuilderImages) ? allBuilderImages : null);\n    };\n\n    if (flowType === ApplicationFlowType.Git || flowType === ApplicationFlowType.JarUpload) {\n      getBuilderImages();\n    }\n\n    return () => {\n      ignore = true;\n    };\n  }, [appResources.buildConfig.data, appResources.buildConfig.loaded, imageStreamsData, flowType]);\n\n  const renderForm = (formikProps: FormikProps<any>) => (\n    <EditApplicationForm\n      {...formikProps}\n      appResources={appResources}\n      enableReinitialize\n      flowType={flowType}\n      builderImages={builderImages}\n    />\n  );\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validationSchema={validationSchema(t)}\n    >\n      {renderForm}\n    </Formik>\n  );\n};\n\nexport default EditApplication;\n","import * as React from 'react';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { PageHeading } from '@console/internal/components/utils';\nimport PipelineSection from '@console/pipelines-plugin/src/components/import/pipeline/PipelineSection';\nimport { FormFooter, FlexForm, FormBody } from '@console/shared';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport AdvancedSection from '../import/advanced/AdvancedSection';\nimport AppSection from '../import/app/AppSection';\nimport BuilderImageTagSelector from '../import/builder/BuilderImageTagSelector';\nimport BuilderSection from '../import/builder/BuilderSection';\nimport DockerSection from '../import/git/DockerSection';\nimport GitSection from '../import/git/GitSection';\nimport ImageSearchSection from '../import/image-search/ImageSearchSection';\nimport { GitImportFormData } from '../import/import-types';\nimport JarSection from '../import/jar/section/JarSection';\nimport { BuildSection } from '../import/section/build-section/BuildSection';\nimport FormSection from '../import/section/FormSection';\nimport IconSection from '../import/section/IconSection';\nimport { AppResources } from './edit-application-types';\nimport { ApplicationFlowType, getFlowTypePageTitle } from './edit-application-utils';\n\nexport interface EditApplicationFormProps {\n  flowType: ApplicationFlowType;\n  builderImages?: NormalizedBuilderImages;\n  appResources: AppResources;\n}\n\nconst EditApplicationForm: React.FC<\n  FormikProps<FormikValues & GitImportFormData> & EditApplicationFormProps\n> = ({\n  handleSubmit,\n  handleReset,\n  values,\n  flowType,\n  builderImages,\n  dirty,\n  errors,\n  status,\n  isSubmitting,\n  appResources,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <PageHeading title={t(getFlowTypePageTitle(flowType))} />\n      <FlexForm onSubmit={handleSubmit}>\n        <FormBody flexLayout>\n          {flowType === ApplicationFlowType.Git && <GitSection builderImages={builderImages} />}\n          {flowType === ApplicationFlowType.Dockerfile && (\n            <GitSection builderImages={builderImages} />\n          )}\n          {flowType === ApplicationFlowType.Git && (\n            <BuilderSection\n              builderImages={builderImages}\n              existingPipeline={appResources?.pipeline?.data}\n            />\n          )}\n          {flowType === ApplicationFlowType.Dockerfile && <DockerSection />}\n          {flowType === ApplicationFlowType.JarUpload && <JarSection />}\n          {flowType === ApplicationFlowType.Container && <ImageSearchSection />}\n          {(flowType === ApplicationFlowType.Container ||\n            flowType === ApplicationFlowType.JarUpload) && <IconSection />}\n          {flowType === ApplicationFlowType.JarUpload && builderImages && (\n            <FormSection>\n              <BuilderImageTagSelector\n                selectedBuilderImage={builderImages[values.image.selected]}\n                selectedImageTag={values.image.tag}\n                showImageInfo={false}\n              />\n            </FormSection>\n          )}\n          <AppSection project={values.project} />\n          {flowType !== ApplicationFlowType.Container &&\n            flowType !== ApplicationFlowType.JarUpload && <BuildSection values={values} />}\n          {flowType !== ApplicationFlowType.Container &&\n            flowType !== ApplicationFlowType.JarUpload && (\n              <PipelineSection\n                builderImages={builderImages}\n                existingPipeline={appResources?.pipeline?.data}\n              />\n            )}\n          <AdvancedSection values={values} appResources={appResources} />\n        </FormBody>\n        <FormFooter\n          handleReset={handleReset}\n          errorMessage={status && status.submitError}\n          isSubmitting={isSubmitting}\n          submitLabel={t('devconsole~Save')}\n          disableSubmit={!dirty || !_.isEmpty(errors) || isSubmitting}\n          resetLabel={t('devconsole~Cancel')}\n          sticky\n        />\n      </FlexForm>\n    </>\n  );\n};\n\nexport default EditApplicationForm;\n"],"sourceRoot":""}