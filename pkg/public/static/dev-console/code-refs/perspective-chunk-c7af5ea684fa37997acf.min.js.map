{"version":3,"sources":["webpack:///./packages/dev-console/src/utils/perspective.tsx"],"names":["usePerspectiveDetection","canGetNS","state","CAN_GET_NS","icon","default","getLandingPageURL","flags","isFirstVisit","OPENSHIFT","getImportRedirectURL","namespace"],"mappings":"6FAAA,kPASO,MAAMA,EAA0B,KACrC,MACMC,EADQ,sBAAaC,GAAqB,YAAeA,IACxCC,WAIvB,MAAO,EAFoBF,EADP,YAAYA,KAMrBG,EAA6D,CAAEC,QAAS,KAExEC,EAAoF,CAC/FC,EACAC,KACKD,EAAM,IAAME,YAAcD,EAAe,OAAS,YAE5CE,EAE2BC,GAAc,gBAAgBA","file":"dev-console/code-refs/perspective-chunk-c7af5ea684fa37997acf.min.js","sourcesContent":["import { CodeIcon } from '@patternfly/react-icons/dist/esm/icons/code-icon';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { Perspective, ResolvedExtension } from '@console/dynamic-plugin-sdk';\nimport { getFlagsObject, flagPending } from '@console/internal/reducers/features';\nimport { RootState } from '@console/internal/redux';\nimport { FLAGS } from '@console/shared/src/constants/common';\n\nexport const usePerspectiveDetection = () => {\n  const flags = useSelector((state: RootState) => getFlagsObject(state));\n  const canGetNS = flags.CAN_GET_NS;\n  const loadingFlag = flagPending(canGetNS);\n  const enablePerspective = !canGetNS;\n\n  return [enablePerspective, loadingFlag] as [boolean, boolean];\n};\n\nexport const icon: ResolvedExtension<Perspective>['properties']['icon'] = { default: CodeIcon };\n\nexport const getLandingPageURL: ResolvedExtension<Perspective>['properties']['landingPageURL'] = (\n  flags,\n  isFirstVisit,\n) => (!flags[FLAGS.OPENSHIFT] || isFirstVisit ? '/add' : '/topology');\n\nexport const getImportRedirectURL: ResolvedExtension<\n  Perspective\n>['properties']['importRedirectURL'] = (namespace) => `/topology/ns/${namespace}`;\n"],"sourceRoot":""}