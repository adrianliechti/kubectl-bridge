{"version":3,"sources":["webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/image-stream.tsx","webpack:///./packages/dev-console/src/components/project-access/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./packages/dev-console/src/utils/imagestream-utils.ts","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/dev-console/src/components/health-checks/create-health-checks-probe-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./public/components/image-stream-timeline.tsx","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-utils.ts","webpack:///./packages/console-shared/src/components/cluster-configuration/useConsoleOperatorConfig.ts","webpack:///./packages/console-shared/src/components/cluster-configuration/patchConsoleOperatorConfig.ts","webpack:///./packages/console-shared/src/components/cluster-configuration/FormLayout.tsx","webpack:///./packages/console-shared/src/components/cluster-configuration/LoadError.tsx","webpack:///./packages/console-shared/src/components/cluster-configuration/SaveStatus.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./packages/dev-console/src/components/import/import-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils.ts","webpack:///./packages/knative-plugin/src/utils/create-knative-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/dev-console/src/utils/shared-submit-utils.ts","webpack:///./packages/console-shared/src/components/cluster-configuration/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/dev-console/src/components/project-access/project-access-form-utils.ts","webpack:///./packages/dev-console/src/components/project-access/project-access-form-utils-types.ts","webpack:///./packages/dev-console/src/components/project-access/ProjectAccessPage.tsx","webpack:///./packages/dev-console/src/components/project-access/hooks.ts","webpack:///./packages/dev-console/src/components/project-access/ProjectAccess.tsx","webpack:///./packages/dev-console/src/components/project-access/project-access-form-submit-utils.ts","webpack:///./packages/dev-console/src/components/project-access/project-access-form-validation-utils.ts","webpack:///./packages/dev-console/src/components/project-access/ProjectAccessForm.tsx","webpack:///./packages/dev-console/src/components/project-access/ProjectAccessRolesConfiguration.tsx"],"names":["getAnnotationTags","specTag","split","getBuilderTags","imageStream","statusTags","getStatusTags","spec","tags","tag","annotationTags","isBuilderTag","name","getBuilderTagsSortedByVersion","sort","a","b","v1","v2","localeCompare","getMostRecentBuilderTag","isBuilder","common","factory","menuActions","getExtensionsActionsForKind","ImageStreamTagsRow","statusTag","imageStreamStatus","latest","from","referencesTag","image","created","dockerRepositoryCheck","t","className","kind","metadata","namespace","title","linkTo","timestamp","ExampleDockerCommandPopover","publicImageRepository","pushCommand","pullCommand","headerContent","minWidth","bodyContent","value","ns","href","text","type","variant","ImageStreamsDetails","obj","imageRepository","imageCount","specTagByName","importErrors","status","acc","importErrorCondition","conditions","condition","push","message","warning","alerts","error","i","key","resource","ImageStreamHistory","imageStreamStatusTags","imageStreamTags","imageStreamName","imageStreamNamespace","displayName","pages","details","editYaml","history","ImageStreamsDetailsPage","props","tableColumnClasses","columnClass","ImageStreamsTableRow","columnID","labels","creationTimestamp","actions","ImageStreamsList","ImageStreamsTableHeader","sortField","transforms","id","Header","Row","virtualize","buildPhase","build","phase","ImageStreamsPage","ListComponent","canCreate","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","e","DroppableFileInput","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","imageStreamLabels","getSampleRepo","sampleRepo","getSampleRef","sampleRef","getSampleContextDir","sampleContextDir","getPorts","imageStreamImage","portSpec","parts","parseInt","protocol","toUpperCase","portsFromSpec","dockerImageMetadata","Config","ExposedPorts","ContainerConfig","makePortName","toLowerCase","prettifyName","first","prep","letter","normalizeBuilderImages","imageStreams","builderImages","recentTag","description","iconClass","iconUrl","getTagDataWithDisplayName","imageTags","selectedTag","defaultName","imageTag","getSuggestedName","imageName","RegistryType","BuilderImagesNamespace","imageRegistryType","External","Internal","getImageStreamTags","getSortedTags","getProjectResource","getImageStreamResource","useK8sGet","opts","setData","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","options","getPipelineName","workspaces","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","placeholder","dataSelector","getPipelineOperatorVersion","versions","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","getAppLabels","applicationName","runtimeIcon","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageNamespace","imageTrigger","fieldPath","paused","getPodLabels","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","hasOwnProperty","sourceSecret","volumes","getTemplateLabels","dataModelContext","extensionContext","getExtension","current","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","constructProbeData","resourceType","ContainerCommand","HTTPGET","scheme","TCPSocket","convertResourceDataToFormData","getHealthChecksData","containerIndex","ReadinessProbe","LivenessProbe","StartupProbe","getProbesData","HealthChecksProbeType","RequestType","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","location","dir","cluster","insecure","cadata","dispatch","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","getDefinedObj","objData","createPipelineResource","secretResp","resourceName","pipelineResource","fieldName","secretKey","createSecretResource","getImageStreamTagName","ImageStreamTimelineItem","linkToTag","referenceAndSHA","dockerImageReference","simple","isTagVersionLatest","comparedTag","comparedTagPosition","orderedTagArray","orderedTag","ImageStreamTimeline","tagsArray","timeline","getHealthChecksProbeConfig","probe","formTitle","formSubtitle","healthChecksDefaultValues","httpHeaders","healthChecksProbeInitialData","groupVersionKind","isHorizontal","isWidthLimited","form","modifiers","horizontal","limitWidth","isInline","SaveStatus","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","indexOf","submitStartPipeline","processWorkspaces","pipelineRunResource","createProject","projectData","createOrUpdateImageStream","formData","imageStreamData","appResources","generatedImageStreamName","userLabels","NAME_LABEL","imageStreamList","imgstr","imageStreamFilterData","originalImageStream","defaultLabels","defaultAnnotations","imgStreamName","newImageStream","createWebhookSecret","createOrUpdateBuildConfig","originalBuildConfig","imageEnv","env","buildStrategy","buildStrategyData","desiredContextDir","imageEnvKeys","customEnvs","buildEnv","dockerStrategy","sourceStrategy","webhookTriggerData","excludedGitTypesForTriggers","buildConfigName","newBuildConfig","to","uri","imageChange","createOrUpdateDeployment","originalDeployment","ports","podLabels","templateLabels","newDeployment","selector","createOrUpdateResources","createNewProject","create","canCreateRoute","webhookTrigger","option","originalRepository","responses","Devfile","devfileProjectType","devfileResourceObjects","imageStreamResponse","buildConfigResponse","buildResource","webhookSecretResponse","deploymentResponse","deployResource","serviceModelResponse","service","routeResponse","devfileResources","createDevfileResources","pacRepository","pipelineResources","pipelineData","managedPipeline","triggerResources","detectedType","pipelineServiceAccount","managePipelineResources","originalShipwrightBuild","clusterBuildStrategy","imageStreamRepository","dockerImageRepository","shipwrightParamsObj","Docker","Source","shipwrightBuildName","newShipwrightBuild","cloneSecret","paramValues","shipwrightBuild","createOrUpdateShipwrightBuild","imageStreamURL","originalAnnotations","editAppResource","triggerAnnotations","knDeploymentResource","domainMappingResources","originalDeploymentConfig","newDeploymentConfig","imageChangeParams","automatic","containerNames","deploymentConfig","createOrUpdateDeploymentConfig","originalService","originalRoute","filterDeployedResources","handleRedirect","perspective","perspectiveExtensions","searchParamOverrides","perspectiveData","redirectURL","importRedirectURL","searchParams","urlObj","URL","search","URLSearchParams","fromEntries","addSearchParamsToRelativeURL","isRouteAdvOptionsUsed","routeData","ksvcRouteData","tlsKey","isScalingAdvOptions","scalingData","ksvcData","ksvcScalingData","scKey","defaultConcurrencytarget","defaultConcurrencyutilization","autoscaleData","asKey","defaultAutoscalewindow","isResourceLimitAdvOptions","resLimits","isLimitUsed","resLimitObj","limitKey","defaultLimitUnit","defaultRequestUnit","getTelemetryImport","devfileJson","selStrategy","import","selectedStrategy","useRecommended","recommended","recommendedStrategy","recommendedBuilderImage","devFileLanguage","projectType","devFileProjectType","targetPortChanged","useRunCommand","NPM_RUN","useAdvancedOptionsGit","useAdvancedOptionsBuild","useAdvancedOptionsDeployment","useAdvancedOptionsRoute","useAdvancedOptionsHealthChecks","useAdvancedOptionsScaling","useAdvancedOptionsResourceLimits","useAdvancedOptionsLabels","getPipelineParams","gitDir","isDockerPipeline","createPipelineForImportFlow","createPipelineRunForImportFlow","isServerlessFunctionPipeline","pipelineInitialValues","VolumeClaimTemplate","secretOpen","updatePipelineForImportFlow","updatedPipeline","pipelineRuntimeOrVersionChanged","resourceVersion","getKnativeServiceDepResource","imageStreamUrl","imageStreamTag","originalKnativeService","defaultUnknownPort","imagePolicy","formType","fileUpload","contTargetPort","imgPullPolicy","Always","IfNotPresent","cpuRequest","cpuRequestUnit","cpuLimit","cpuLimitUnit","memoryRequest","memoryRequestUnit","memoryLimit","memoryLimitUnit","defaultLabel","jArgsIndex","findIndex","javaArgs","newKnativeDeployResource","jarFileName","containerConcurrency","imagePullPolicy","securityContext","allowPrivilegeEscalation","capabilities","drop","runAsNonRoot","seccompProfile","knativeServiceUpdated","formDomainMappingStruct","knativeSvcResource","curDomainMapping","svcName","getDomainMappingResources","selectedDomainMapping","allDomainMappingList","dmDeleteList","ksvcName","selDomainMappingNames","dmRes","dmSvc","dmDel","action","Delete","dmCreateUpdateList","curDomain","domainMappingResourceData","Update","Create","getDomainMappingRequests","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","setTimeout","servicePort","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","isDeployImageFormData","createService","imagePorts","isi","isiPorts","existingRouteTargetPort","targetPort","newService","createRoute","routeLabels","newRoute","wildcardPolicy","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","eventListenerName","referenceName","eventlistener","weight","getAllNotStartedPipelines","sessionStorage","getItem","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setItem","setPipelineNotStarted","defaultAccessRoles","admin","edit","view","getAvailableAccessRoles","window","SERVER_FLAGS","projectAccessClusterRoles","getUserRoleBindings","roleBindings","clusterRoleNames","roleBinding","roleRef","subjects","roleBindingName","subject","role","getFormDataFromRoleBinding","ignoreRoleBindingName","Verb","roles","showFullForm","pathname","fullFormView","useProjectAccessRoles","availableClusterRoles","watchedClusterRoles","clusterRoles","clusterRole","userRoleBindings","rbacURL","usingRBAC","initialValues","projectAccess","projectAccessForm","newRoles","removeRoles","updateRoles","updateRolesWithMultipleSubjects","removeRoleSubjectFlag","o1","o2","roleBindingRequests","Patch","Remove","resetForm","success","setStatus","submitError","onReset","formikProps","goBack","light","getRolesWithNameChange","createRoles","deleteRoles","getRolesWithSubjectChange","getRolesToUpdate","getNewRoles","initialRoles","getRemovedRoles","getUpdatedSubjects","sub","sendRoleBindingRequest","finalArray","sendK8sRequest","getRolesWithMultipleSubjects","newRole","removeRole","roleWithMultipleSubjects","newSubs","updateRole","SubjectNamespaceDropdown","arr","showDropdown","Group","ServiceAccount","User","fullWidth","handleSubmit","handleReset","isSubmitting","errors","dirty","isStaleInfo","setIsStaleInfo","disableSubmit","addLabel","emptyValues","dataTest","successMessage","showAlert","submitLabel","resetLabel","infoTitle","infoMessage","handleCancel","defaultClusterRoleNames","getDisplayName","Item","display","alignItems","readonly","fireTelemetryEvent","allClusterRoles","allClusterRolesLoaded","allClusterRolesError","sortedClusterRoles","clusterRoleA","clusterRoleB","displayNameA","displayNameB","consoleConfig","consoleConfigLoaded","consoleConfigError","selectedClusterRoles","setSelectedClusterRoles","customization","availableOptions","hideClusterRoleNames","chosenOptions","allClusterRolesByName","saveStatus","setSaveStatus","customize","availableOptionsTitle","chosenOptionsTitle","isSearchable","onListChange","_event","newEnabledOptions","newDisabledOptions","filterOption","input","toLocaleLowerCase"],"mappings":"uGAAA,snD,kCCAA,42BA0BA,MAGaA,EAAqBC,GAChC,IAAMA,EAAS,mBAAoB,IAAIC,MAAM,WAalCC,EAAkBC,IAC7B,MAAMC,EANc,CAACD,IACrB,MAAMC,EAAa,IAAMD,EAAa,eACtC,OAAO,IAAQC,EAAY,QAIRC,CAAcF,GACjC,OAAO,IAASA,EAAYG,KAAKC,KAAOC,GAbrB,CAACR,IAEpB,MAAMS,EAAiBV,EAAkBC,GACzC,OAAO,IAAWS,EAAgB,aAAe,IAAWA,EAAgB,WAU5BC,CAAaF,IAAQJ,EAAWI,EAAIG,QAIzEC,EAAiCT,GACrCD,EAAeC,GAAaU,KAAK,EAAGF,KAAMG,IAAOH,KAAMI,MAC5D,MAAMC,EAAK,SAAcF,GACnBG,EAAK,SAAcF,GACzB,OAAKC,GAAOC,EAGPD,EAGAC,EAGE,WAAgBD,EAAIC,IAFjB,EAHD,EAHAH,EAAEI,cAAcH,KAYhBI,EAA2BhB,IACtC,MAAMI,EAAOK,EAA8BT,GAC3C,OAAO,IAAOI,IAMHa,EAAajB,IAAkC,IAAUD,EAAeC,KAE/E,OAAEkB,GAAW,IAAMC,QACnBC,EAAc,IAAI,IAAMC,4BAA4B,uBAAsBH,GAE1EI,EAAyD,EAC7DtB,cACAH,UACA0B,gBAEA,MAAMC,EAAoB,IAAMxB,EAAa,UACvCyB,EAAS,IAAMF,EAAW,CAAC,QAAS,IACpCG,EAAO,IAAM7B,EAAS,QACtB8B,EAAgD,mBAAhC,IAAM9B,EAAS,aAC/B+B,EAAQ,IAAMH,EAAQ,SACtBI,EAAU,IAAMJ,EAAQ,WACxBK,EAAwB,IAAM9B,EAAa,CAC/C,WACA,cACA,8CAEI,EAAE+B,GAAM,2BACd,OACE,uBAAKC,UAAU,OACb,uBAAKA,UAAU,4CACb,gBAAC,eAAY,CACXC,KAzEiD,iBA0EjDzB,KAAM,YAAsBR,EAAYkC,SAAS1B,KAAMe,EAAUlB,KACjE8B,UAAWnC,EAAYkC,SAASC,UAChCC,MAAOb,EAAUlB,IACjBgC,SAAUT,KAGd,wBAAMI,UAAU,2CACbN,GAAQC,GACP,gBAAC,eAAY,CACXM,KAnF+C,iBAoF/CzB,KAAMkB,EAAKlB,KACX2B,UAAWnC,EAAYkC,SAASC,UAChCC,MAAOV,EAAKlB,OAGfkB,IAASC,GAAiB,gCAAGD,EAAKlB,OACjCkB,GAAQ,wBAAMM,UAAU,cAAcD,EAAE,yBAE5C,wBAAMC,UAAU,6CACZR,GAAqBM,GACrB,gCACE,gBAAC,KAA6B,M,IACvBC,EAAE,8BAGXP,IAAsBM,IAA0BJ,GAAQ,gCAAGK,EAAE,2BAE7DP,IAAsBM,GAAyBJ,GAAQ,gCAAGK,EAAE,sBAC7DP,GAAqBI,GAAS,gCAAGA,GACjCJ,IAAsBI,GACrB,gCACE,gBAAC,KAA6B,M,IACvBG,EAAE,uDAIf,uBAAKC,UAAU,gCACZH,GAAW,gBAAC,YAAS,CAACS,UAAWT,KAChCA,GAAW,OAMRU,EAA0E,EACrFvC,cACAK,UAEA,MAAMmC,EAAwB,IAAMxC,EAAa,uCAC3C,EAAE+B,GAAM,2BACd,IAAKS,EACH,OAAO,KAET,MACMC,EAAc,eAAeD,KAAyBnC,GAAO,UAC7DqC,EAAc,eAAeF,KAAyBnC,GAAO,UAEnE,OACE,gBAAC,IAAO,CACNsC,cAAe,gCAAGZ,EAAE,mCACpBC,UAAU,qCACVY,SAAS,QACTC,YACE,2BACE,yBACGd,EACC,qGAGJ,2BACA,yBAAIA,EAAE,iDACN,gBAAC,IAAe,CAACe,MAlBJ,sBAmBb,2BACA,yBAAIf,EAAE,6CACN,gBAAC,IAAe,CAACe,MAAOL,IACxB,2BACA,yBAAIV,EAAE,+CACN,gBAAC,IAAe,CAACe,MAAOJ,IACxB,2BACA,yBACE,gBAAC,QAAK,CAACX,EAAGA,EAAGgB,GAAG,U,yDACwC,wCAAwB,I,YACpE,KAEZ,gBAAC,IAAY,CAACC,KAAM,IAAgBC,KAAMlB,EAAE,2BAKlD,gBAAC,IAAM,CAACC,UAAU,sBAAsBkB,KAAK,SAASC,QAAQ,QAC5D,gBAAC,IAAkB,CAACnB,UAAU,oBAC7BD,EAAE,mFAMEqB,EAA2D,EAAGC,IAAKrD,MAC9E,MAAM,EAAE+B,GAAM,2BAkBRuB,EAAkB,IAAMtD,EAAa,gCACrCwC,EAAwB,IAAMxC,EAAa,sCAC3CuD,EAAa,IAAMvD,EAAa,sBAChCwD,EAAgB,IAAQxD,EAAYG,KAAKC,KAAM,QAC/CqD,EAnBG,IAAYzD,EAAY0D,OAAOtD,KAAM,CAACuD,EAAKtD,KAChD,MAAMuD,EAAuB,IAC3BvD,EAAIwD,WACHC,GAAiC,kBAAnBA,EAAUZ,MAAiD,UAArBY,EAAUJ,QAEjEE,GACED,EAAII,KACFhC,EAAE,2DAA4D,CAC5D1B,IAAK,GAAGL,EAAYkC,SAAS1B,QAAQH,EAAIA,MACzC2D,QAASJ,EAAqBI,aAYxC,OACE,2BACE,uBAAKhC,UAAU,oBACX,IAAUyB,IACV,gBAAC,IAAe,CACdN,QAAS,IAAac,QACtBC,OAAQ,IAAMT,EAAc,CAACU,EAAOC,IAClC,gBAAC,WAAc,CAACC,IAAKD,GAAID,MAI/B,gBAAC,IAAc,CAAClB,KAAMlB,EAAE,gCACxB,uBAAKC,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,IAAe,CAACsC,SAAUtE,GACxBsD,GAAmB,0BAAKvB,EAAE,4BAC1BuB,GAAmB,0BAAKA,GACxBd,GAAyB,0BAAKT,EAAE,mCAChCS,GAAyB,0BAAKA,GAC/B,0BAAKT,EAAE,uBACP,0BAAKwB,GAA0B,IAEjC,gBAAChB,EAA2B,CAACvC,YAAaA,OAIhD,uBAAKgC,UAAU,mBACb,gBAAC,IAAc,CAACiB,KAAMlB,EAAE,iBACvB,IAAU/B,EAAY0D,OAAOtD,MAC5B,wBAAM4B,UAAU,cAAcD,EAAE,mBAEhC,uBAAKC,UAAU,OACb,uBAAKA,UAAU,6CACb,uBAAKA,UAAU,6BACb,uBAAKA,UAAU,8BAA8BD,EAAE,gBAC/C,uBAAKC,UAAU,8BAA8BD,EAAE,gBAC/C,uBAAKC,UAAU,+BAA+BD,EAAE,sBAChD,uBAAKC,UAAU,gCAAgCD,EAAE,yBAEnD,uBAAKC,UAAU,yBACZ,IAAMhC,EAAY0D,OAAOtD,KAAOmB,GAC/B,gBAACD,EAAkB,CACjB+C,IAAK9C,EAAUlB,IACfL,YAAaA,EACbH,QAAS2D,EAAcjC,EAAUlB,KACjCkB,UAAWA,WAYzBgD,EAAwD,EAAGlB,IAAKrD,MACpE,MAAMwE,EAAwB,IAAMxE,EAAa,eACjD,OACE,gBAAC,IAAmB,CAClByE,gBAAiBD,EACjBE,gBAAiB1E,EAAYkC,SAAS1B,KACtCmE,qBAAsB3E,EAAYkC,SAASC,aAIjDoC,EAAmBK,YAAc,qBAEjC,MAAMC,EAAQ,CACZ,aAAWC,QAAQ1B,GACnB,aAAW2B,WACX,aAAWC,QAAQT,IAERU,EAAsCC,GACjD,gBAAC,IAAW,iBAAKA,EAAK,CAAEjD,KAhR8B,cAgRDb,YAAaA,EAAayD,MAAOA,KAExFI,EAAwBL,YAAc,0BAEtC,MAAMO,EAAqB,CACzB,GACA,GACA,iCACA,iCACA,IAAMC,aAGFC,EAAmE,EAAGhC,SAExE,gCACE,gBAAC,IAAS,CAACrB,UAAWmD,EAAmB,IACvC,gBAAC,eAAY,CACXlD,KAjS8C,cAkS9CzB,KAAM6C,EAAInB,SAAS1B,KACnB2B,UAAWkB,EAAInB,SAASC,aAG5B,gBAAC,IAAS,CACRH,UAAW,EAAWmD,EAAmB,GAAI,iBAC7CG,SAAS,aAET,gBAAC,eAAY,CAACrD,KAAK,YAAYzB,KAAM6C,EAAInB,SAASC,aAEpD,gBAAC,IAAS,CAACH,UAAWmD,EAAmB,IACvC,gBAAC,IAAS,CAAClD,KA7SqC,cA6SRsD,OAAQlC,EAAInB,SAASqD,UAE/D,gBAAC,IAAS,CAACvD,UAAWmD,EAAmB,IACvC,gBAAC,YAAS,CAAC7C,UAAWe,EAAInB,SAASsD,qBAErC,gBAAC,IAAS,CAACxD,UAAWmD,EAAmB,IACvC,gBAAC,IAAa,CAACM,QAASrE,EAAaa,KAnTW,cAmTkBqC,SAAUjB,MAMvEqC,EAA+BR,IAC1C,MAAM,EAAEnD,GAAM,2BACR4D,EAA0B,IACvB,CACL,CACEvD,MAAOL,EAAE,eACT6D,UAAW,gBACXC,WAAY,CAAC,KACbX,MAAO,CAAElD,UAAWmD,EAAmB,KAEzC,CACE/C,MAAOL,EAAE,oBACT6D,UAAW,qBACXC,WAAY,CAAC,KACbX,MAAO,CAAElD,UAAWmD,EAAmB,IACvCW,GAAI,aAEN,CACE1D,MAAOL,EAAE,iBACT6D,UAAW,kBACXC,WAAY,CAAC,KACbX,MAAO,CAAElD,UAAWmD,EAAmB,KAEzC,CACE/C,MAAOL,EAAE,kBACT6D,UAAW,6BACXC,WAAY,CAAC,KACbX,MAAO,CAAElD,UAAWmD,EAAmB,KAEzC,CACE/C,MAAO,GACP8C,MAAO,CAAElD,UAAWmD,EAAmB,MAM7C,OAFAQ,EAAwBf,YAAc,0BAGpC,gBAAC,IAAK,iBACAM,EAAK,cACGnD,EAAE,uBACdgE,OAAQJ,EACRK,IAAKX,EACLY,YAAU,MAKhBP,EAAiBd,YAAc,mBAExB,MAAMsB,EAAcC,GAAUA,EAAMzC,OAAO0C,MAErCC,GAAsDnB,IACjE,MAAM,EAAEnD,GAAM,2BACd,OACE,gBAAC,IAAQ,iBACHmD,EAAK,CACT9C,MAAOL,EAAE,uBACTE,KAnXkD,cAoXlDqE,cAAeZ,EACfa,WAAW,MAKjBF,GAAiBzB,YAAc,wB,kCCpZ/B,0J,kCCAA,4iC,kCCAA,2Q,kCCAA,IAAY4B,EAGAC,EAGAC,EAOAC,EAMAC,EAIAC,EAOAC,EAOAC,EASAC,EA9CZ,63BAAYR,GACV,+CADF,CAAYA,MAAc,KAG1B,SAAYC,GACV,0CADF,CAAYA,MAAmB,KAG/B,SAAYC,GACV,gDACA,yBACA,qCACA,8CACA,wCALF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,mBACA,wBACA,wBACA,4BAJF,CAAYA,MAAa,KAMzB,SAAYC,GACV,mDACA,sCAFF,CAAYA,MAAe,KAI3B,SAAYC,GACV,iCACA,uCACA,+BACA,yCAJF,CAAYA,MAAmB,KAO/B,SAAYC,GACV,YACA,gBACA,oBACA,oBAJF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,4BACA,kCACA,wBACA,kBACA,YACA,4CANF,CAAYA,MAAW,KASvB,SAAYC,GACV,YACA,iBAFF,CAAYA,MAAkB,KAM3BA,EAAmBC,IACnBD,EAAmBE,MAFf,MAKMC,EAAsB,QACtBC,EAAsB,QACtBC,EAAwC,QACxCC,EAA2B,WAC3BC,EAAiC,wCAEjCC,EAAuB,IACvBC,EAA8B,IAG9BC,EAAkB,GAGlBC,EAA0B,sCAC1BC,EAAyB,2BAEzBC,EAAqB,sBACrBC,EAAiC,YACjCC,EAAuB,SAEpC,IAAYC,GAAZ,SAAYA,GACV,sCACA,kDACA,kCACA,4CAJF,CAAYA,MAAoB,KAOzB,MAAMC,EAAyB,yBACzBC,EACX,2CACWC,EACX,4C,kCCtFF,4jBAmBO,MAAMC,EAAiB,CAC5B,cACA,oBACA,aACA,eACA,OACA,WACA,QAQWC,EAA0B,EAAGC,WACxCA,EAAMC,IAAI,KAECC,EAAuBC,I,UAClC,MAAMC,EAAiB,IAAOD,EAAc,CAAC,gBAAiB,QAC9D,MAAO,CACLE,OAA4B,QAApB,EAAAD,aAAc,EAAdA,EAAgBvI,YAAI,eAAE6C,KAC9B4F,WAAiD,QAArC,EAAoB,QAApB,EAAAF,aAAc,EAAdA,EAAgBvI,YAAI,eAAE0I,uBAAe,eAAEC,WA2B1CC,EAAa,CACxBC,EACAC,EACAN,EACAO,KAEA,IAAKF,EACH,OAAO,KAET,MAAMG,EAhCc,EAACC,EAA4BC,EAAiBH,KAClE,MAAMI,EAAU,WAAWF,EAAO9E,YAAY8E,EAAOG,SAASH,EAAO5I,OACrE,IAAK6I,EACH,OAAOC,EAET,MAAME,EAAcN,EAAa,IAAIA,EAAWO,QAAQ,MAAO,IAAQ,GACvE,OAAIL,EAAO9E,SAASoF,SAAS,UACpB,GAAGJ,UAAgBD,IAASG,IAEjCJ,EAAO9E,SAASoF,SAAS,UACpB,GAAGJ,YAAkBD,IAASG,IAEnCJ,EAAO9E,SAASoF,SAAS,SACpB,GAAGJ,gBAAsBD,IAASG,IAIvCJ,EAAO9E,SAASoF,SAAS,eAAiBL,EAAOK,SAAS,KACrD,GAAGJ,SAAeD,IAASG,IAE7BF,GAYYK,CAAc,EAAYX,GAASC,EAAWC,GACjE,OAAOP,EAAS,GAAGA,WAAgBQ,4BAAuCA,GAG/DS,EAAiC,CAC5CnB,EACAtG,K,QAIA,OAF+F,QAA7E,EAAuE,QAAvE,MAAOsG,EAAc,CAAC,gBAAiB,mBAAmBtG,WAAa,eAAEhC,YAAI,eAC3F6C,OACgB,IAMT6G,EAAiC,CAC5CC,EACAC,IAGKA,EAGED,EAAKE,OAAQC,GACX,IAAMA,EAAI,CAAC,WAAY,SALhB,gCAKwCF,GAH/CD,EAUEI,EAAe,CAAC5F,EAA2B6F,IAClDA,EAAOC,OAAS,IAAM,IAAUD,EAAO,GAAGhK,MACrC,YAAegK,EAAO,IAExB,KAGIE,EAA6BC,I,MACxC,OAAKA,EAGEA,EAAehG,WAAoC,QAAxB,EAAAgG,EAAeC,iBAAS,eAAElH,KAFnD,MAKEmH,EAAoCC,I,MAE/C,OADsC,QAApB,EAAAA,SAAoB,eAAED,gBACbH,EAA0BI,aAAI,EAAJA,EAAMC,YAGhDC,EAAmBF,GACvBA,aAAgB,IAClBA,EAAqBE,kBACtB,aAAaN,EAA0BI,aAAI,EAAJA,EAAMC,YAGtCE,EAAoC,CAC/CC,EACAd,KAEA,MAAMe,EAAWD,aAAI,EAAJA,EAAMH,UACjBpG,EAAWkG,EAAYK,GAC7B,IAAKA,IAASvG,IAAa,IAAOwG,EAASP,WACzC,OAAOQ,QAAQC,SAGjB,MAAMT,EAA+B,GAC/BU,EAA0B,GAEhCV,EAAUxG,KAAKO,GAEXuG,EAAKK,YAAc,KACrB,IAAUJ,EAASK,eAAiBC,IAClCb,EAAUxG,KAAKqH,EAAc9G,YAIjC,IAAK,MAAM+G,KAAgBd,EAAW,CACpC,MAAMe,EAAe,aAAS,aAAaD,IAC3C,IAAKC,EACH,OAAOP,QAAQC,OACb,IAAIO,MACF,IAAQxJ,EAAE,yEAA0E,CAClFE,KAAMoJ,EAAapJ,SAK3BgJ,EAAQlH,KAAK,YAA0BuH,EAAcD,EAActB,IAGrE,OAAOgB,QAAQS,IAAIP,IAGRQ,EAAmC,CAC9CC,EACAC,EACAC,EAAiC,OAE5BF,GAAWC,GAAUD,IAAWC,EAM9B,YAAyBD,EAAQC,EAAQC,GALvCb,QAAQC,OACb,IAAIO,MAAM,IAAQxJ,EAAE,iEAOb8J,EAAoCC,IAC/C,MAAMJ,EAASlB,EAAYsB,EAAKC,aAC1BJ,EAASnB,EAAYsB,EAAKE,aAEhC,OAAKN,GAAWC,EAIT,YAAyBD,EAAQC,GAH/BZ,QAAQC,W,kCChMnB,uSAKO,MAAMiB,EAAuBC,IAClC,OAAQA,GACN,KAAK,IAAsBR,OACzB,OAAO,IAAWS,UACpB,KAAK,IAAsBvK,MACzB,OAAO,IAAWwK,iBACpB,QACE,OAAO,IAAWC,SAIXC,EAAqBC,IAChC,MAAM,KAAEzC,EAAI,KAAE5G,GAASqJ,EACvB,OAAQrJ,GACN,KAAK,IAAWiJ,UAChB,KAAK,IAAWK,QACd,OAAO,IAAsBd,OAC/B,KAAK,IAAWU,iBAChB,KAAK,IAAWK,UACd,OAAO,IAAsB7K,MAC/B,QACE,OAAIkI,aAAI,EAAJA,EAAO,sBAAsC,IAAjB,IAAOA,GAC9B,IAAsB4C,QAExB,IAAsBC,UAItBC,EAAiB,KAE5B,MAAMC,EAAK,IACTC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAClBC,SAAS,IACTC,UAAU,GACf,OAAOL,IAAOA,IAAOA,IAAOA,KAGjBM,EAAuBC,IAClC,MAAMC,EAAW,IAAOD,GAAY1M,OACpC,OAAI,IAAU2M,EAAU,CAAC,UAAW,YAC3B,IAAWC,IACT,IAAUD,EAAU,CAAC,SAAU,YAAa,iBAAkB,UAChE,IAAWE,oBACT,IAAUF,EAAU,CAAC,eACvB,IAAWZ,UACT,IAAUY,EAAU,CAAC,sBACvB,IAAWjB,iBACT,IAAUiB,EAAU,CAAC,WAAY,aACnC,IAAWlB,UACT,IAAUkB,EAAU,CAAC,mBACvB,IAAWb,QAEb,IAAWH,QAGPmB,EAAqBC,IAChC,OAAQA,GACN,KAAK,IAAWhB,UACd,MAAO,aACT,KAAK,IAAWL,iBACd,MAAO,oBACT,QACE,OAAOqB,IAIAC,EAAiB,CAC5BC,EACAzB,KAEA,MAAM,EAAEnK,GAAM,2BACd,OAAQmK,GACN,KAAK,IAAsBS,QACzB,OAAkB5K,EAAX4L,EAAa,iCAAsC,gCAC5D,KAAK,IAAsB/L,MACzB,OAAkBG,EAAX4L,EAAa,kCAAuC,iCAC7D,QACE,OACI5L,EADG4L,EACD,sCACA,oCADuC,CAAEF,WAAYvB,MAKpD0B,EAAwB1B,IACnC,MAAM,EAAEnK,GAAM,2BACd,OAAQmK,GACN,KAAK,IAAsBS,QACzB,OAAO5K,EACL,mHAEJ,KAAK,IAAsB2J,OACzB,OAAO3J,EAAE,oEACX,KAAK,IAAsBH,MACzB,OAAOG,EAAE,oFACX,KAAK,IAAsB2K,QACzB,OAAO3K,EAAE,kEACX,QACE,OAAO,Q,kCCtGb,+N,wXCWO,MAAe8L,EAGpB,YAAYC,GACVC,KAAKD,UAAYA,EA+Fb,mB,yCACJ,IACE,MAAME,QAAiBD,KAAKE,kBACtBC,EAAa,YAAiBF,EAASG,OAC7C,GAAIH,EAASG,MAAMzE,SAAS,gBAAiB,CAC3C,MAAM0E,QAA2BL,KAAKM,wBACtC,GAAI,YAAeD,GACjB,OAAOF,EAAWxN,KAAK,CAACC,EAAGC,IACL,kBAAhBA,EAAE0N,UAAsC,EACxB,kBAAhB3N,EAAE2N,WAAuC,EACtC,GAIb,OAAOJ,EACP,MAAOK,GACP,MAAO,U,kCC9Hb,sDAIO,MAAMC,EAAsBtJ,GACjC,gBAAC,IAAc,eACbuJ,OAAQ,IAAM,0CAAiCC,KAAMC,GAAMA,EAAEH,qBACzDtJ,K,kCCPR,yS,8eCIO,MAAM0J,EAAgB,kCA2BhBC,EAAkBC,GACtBC,OAAOC,KAAKF,GAASG,OAAO,CAACC,EAAQ7K,KAC1C6K,EAAO7K,GAAO,CAACyK,EAAQzK,IAChB6K,GACN,IAMQC,EAA2BC,GAAuD,OAAD,6BAC5F,MAAMC,QAAqC,mBAAiBC,KAAKV,EAAeQ,GAChF,IAAKC,EAAcE,WACjB,MAAM,IAAIhE,MAAM,sDAElB,GAAI8D,EAAcE,WAAa,KAAOF,EAAcE,YAAc,IAChE,MAAM,IAAI,IACR,2BAA2BF,EAAcE,WACzCF,EAAcE,WACd,KACAF,GAGJ,OAAOA,KAGIG,EAA4BJ,GAChCD,EAAkBC,GAAcV,KAAMe,GApC1B,CAACC,IACpB,IACEC,KAAKC,MAAMF,GACX,MAAOnB,GACP,OAAO,EAET,OAAO,GA+BEsB,CAAaJ,EAASK,MAAQH,KAAKC,MAAMH,EAASK,MAAQ,mBAASL,EAASK,Q,kCC3DvF,yMAoBO,MAAMC,EAAqD7K,IAChE,MAAM,SAAEyI,EAAQ,MAAEqC,EAAK,SAAEC,GAAa/K,GAChC,EAAEnD,GAAM,2BACRmO,EAAW,wBACXC,EAAS,sBAETC,EAAiB,IAAOlL,EAAM7B,IAAK,CAAC,WAAY,SAChDgN,EAAoB,YAAoBnL,EAAMoL,uBAC9CC,EAAgB,IAAe,GAAIrL,EAAMsL,MAAOJ,EAAgB,CACpEK,WAAY,KACZ3G,KAAM,GACN7H,KAAM,SACNC,SAAU,CACR1B,KAAM,IAER0C,KAAMmN,KAGDC,GAAyB,WAAepL,EAAMoL,wBAC9C/D,EAAQmE,GAAa,WAAeH,IACpCI,EAAYC,GAAiB,YAAe,IAC5CzM,EAAO0M,GAAY,cACnBzD,EAAY0D,GAAiB,WAClC,IAAY,IAAM5L,EAAM7B,IAAK,QAAUP,GAC9BA,EAAQ,SAAOiO,OAAOjO,GAAS,MAGnCkO,EAAkBC,GAAuB,WAAe,KACxDC,EAAaC,GAAkB,YAAe,GAC/C/O,EAAQ,YAAeuL,EAAU2C,GACjCc,EAAW,YAAqBd,GAChCe,EAAS,IAAMnB,EAAS,WAAWC,EAAOpN,qBAE1CuO,EAAiBC,IACrBT,EAAc,OAAD,UAAMS,aAAW,EAAXA,EAAanE,aAChC6D,EAAoB,OAAD,UAAMM,aAAW,EAAXA,EAAaP,oBAGlCQ,EAAWC,IACfZ,EAASY,GACTb,GAAc,IAGVc,EAAiBC,IACrB,MAAMnR,EAAOmR,EAAMhG,OAAO7I,MACpB8O,EAAY,IAAYrF,GAC9BqF,EAAU1P,SAAS1B,KAAOA,EAC1BkQ,EAAUkB,IAGNC,EAAQtD,IACZA,EAAEuD,iBACF,MAAM,SAAE5P,GAAaqK,EACrBqE,GAAc,GACd,MAAM9G,EAAO,OAAH,wBACL,IAAYsD,EAAatK,GACnB,SAAOiP,OAAOjP,KAEpBkO,GAECY,EAAY,IAChB,GACArF,EACA,CACEzC,QAIF6D,EAAW,CAAEzK,KAAM,YAAoBkK,IAAgB,KAExDO,EACG,aAAU,cAAaiE,GACvB,aAAU,cAAaA,EAAW1P,EAASC,UAAWyP,EAAU1P,SAAS1B,OAC3EkO,KACCsD,IACCpB,GAAc,GACV1L,EAAM+M,QACR/M,EAAM+M,OAAOD,EAAE9P,SAAS1B,MAErB0E,EAAM8K,OACTE,EAAS,aAAgB8B,EAAG,aAAaA,MAG5CP,IACCZ,EAASY,EAAIzN,SACb4M,GAAc,MAKdsB,EAAa,K,MAGjB,OACE,gCACE,4BAAUC,UAAWxE,GACnB,uBAAK3L,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAQ,eAClDrQ,EAAE,uBAEL,2BACE,yBACEC,UAAU,uBACVkB,KAAK,OACLmP,SAAUX,EACV5O,MAAuB,QAAhB,EAAAyJ,aAAM,EAANA,EAAQrK,gBAAQ,eAAE1B,KAAI,mBACZ,mBACjBsF,GAAG,cAAa,YACN,cACVwM,UAAQ,IAEV,qBAAGtQ,UAAU,aAAa8D,GAAG,oBAC1B/D,EAAE,6CAKX,gBAAC,IAAa,CACZmK,gBAAiBhH,EAAMoL,sBACvB+B,SAAUf,EACVE,QAASA,EACTe,cAAgBC,GAAYrB,EAAeqB,GAC3CpF,WAAYA,EACZK,WAAYlB,EAAOrJ,KACnByK,SAAUA,MAMlB,OAAOqC,EACL,wBAAMhO,UAAU,sCAAsCyQ,SAAUZ,GAC9D,gBAAC,IAAU,KAAEzP,GACb,gBAAC,IAAS,KAAE8P,KACZ,gBAAC,IAAiB,CAChBQ,aAAcvO,GAAS,GACvBwM,WAAYA,EACZgC,WAAY5Q,EAAE,iBACdsP,OAAQpB,GAAYoB,KAIxB,uBAAKrP,UAAU,mBACb,gBAAC,IAAM,KACL,6BAAQI,IAEV,gBAAC,IAAW,CAACA,MAAOA,EAAOwQ,SAAUxB,IACrC,uBAAKpP,UAAU,mBACb,wBAAMA,UAAU,8CAA8CyQ,SAAUZ,GACrEK,IACD,gBAAC,IAAS,CAACQ,aAAcvO,EAAOwM,WAAYA,GAC1C,gBAAC,IAAW,CAAC3O,UAAU,gBACrB,gBAAC,IAAM,CACLkB,KAAK,SAAQ,YACH,eACV2P,WAAY3B,EACZ/N,QAAQ,UACR2C,GAAG,gBAEFZ,EAAM4N,gBAAkB/Q,EAAE,kBAE7B,gBAAC,IAAM,CAACmB,KAAK,SAASC,QAAQ,YAAY2C,GAAG,SAASiN,QAAS9C,GAAYoB,GACxEtP,EAAE,yB,kCCpLnB,geAuBYiR,EAvBZ,mBAuBA,SAAYA,GACV,sCACA,0BACA,kDAHF,CAAYA,MAAkB,KAqQvB,MAAMC,EAAmB,CAC9B,CAAC,IAAYC,QAAS,SACtB,CAAC,IAAYC,QAAS,SACtB,CAAC,IAAYC,OAAQ,QACrB,CAAC,IAAYC,WAAY,YACzB,CAAC,IAAYC,QAAS,SAGxB,IAAYC,EAOAC,EAMAC,EAOAC,GApBZ,SAAYH,GACV,YACA,oBACA,kBACA,YAJF,CAAYA,MAAW,KAOvB,SAAYC,GACV,wBACA,0BACA,2BAHF,CAAYA,MAAS,KAMrB,SAAYC,GACV,kBACA,sCACA,wBACA,sBAJF,CAAYA,MAAY,KAOxB,SAAYC,GAEV,sBACA,oBACA,kBACA,kBACA,cACA,2BAPF,CAAYA,MAAa,KAUlB,MAAMC,EAAoD,CAC/D,CAACH,EAAUI,WAAY,wBAAsBC,SAC7C,CAACL,EAAUM,YAAa,kBAAgBD,SAExC,CAACL,EAAUO,gBAAiB,oCAGjBC,EAAqD,CAChE,CAACP,EAAaQ,QAAS,yBAEvB,CAACR,EAAaS,kBAAmB,+CAEjC,CAACT,EAAaU,WAAY,mCAC1B,CAACV,EAAaW,UAAW,uBAGdC,EAA4C,CACvD,CAACb,EAAUI,WAAY,wBAAsB3R,KAC7C,CAACuR,EAAUM,YAAa,kBAAgB7R,KACxC,CAACuR,EAAUO,gBAAiB,WAU9B,IAAYO,EAMAC,EAMAC,EAYAC,EAMAC,EAKAC,GAnCZ,SAAYL,GACV,cACA,4BACA,wBAHF,CAAYA,MAAe,KAM3B,SAAYC,GACV,cACA,gBACA,sBAHF,CAAYA,MAAmB,KAM/B,SAAYC,GACV,cACA,sBAFF,CAAYA,MAA8B,KAY1C,SAAYC,GACV,iBAEA,cAHF,CAAYA,MAAQ,KAMpB,SAAYC,GACV,UACA,UAFF,CAAYA,MAAW,KAKvB,SAAYC,GACV,YACA,wBACA,oBACA,0BACA,oBACA,sBACA,4BACA,4BACA,kCACA,0BACA,oBACA,8BACA,4BACA,wBAdF,CAAYA,MAAa,M,4cC5XlB,MAAMC,EAAoE,I,IAAA,gBAC/E1I,GAAe,EACZhH,EAAK,IAFuE,qBAI/E,OAAQgH,GACN,KAAK,IAAsBR,OACzB,OAAO,gBAAC,IAAgB,iBAAKxG,IAC/B,KAAK,IAAsBtD,MACzB,OAAO,gBAAC,IAAc,iBAAKsD,IAC7B,KAAK,IAAsBwH,QACzB,OAAO,gBAAC,IAAiB,iBAAKxH,IAChC,QACE,OAAO,gBAAC,IAAiB,iBAAKA,O,kCCpBpC,wFASA,MAAM2P,UAAwC,YAI5C,YAAY3P,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACX7R,KAAM6K,KAAK7I,MAAMuI,WACjBL,WAAYW,KAAK7I,MAAMkI,YAAc,GACrC4H,SAAU,IAAW7I,WAEvB4B,KAAKkH,yBAA2BlH,KAAKkH,yBAAyBC,KAAKnH,MACnEA,KAAKuD,cAAgBvD,KAAKuD,cAAc4D,KAAKnH,MAE/C,yBAAyB7K,GACvB6K,KAAKoH,SACH,CACEjS,QAEF,IAAM6K,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAGnC,cAAcxD,GACZxD,KAAKoH,SACH,CACE/H,WAAY,OAAF,UAAOmE,IAEnB,IAAMxD,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAGnC,SACE,MAAM,EAAEhT,GAAMgM,KAAK7I,MACbkQ,EAAY,CAChB,CAAC,IAAWjJ,WAAYpK,EAAE,+BAC1B,CAAC,IAAWyK,SAAUzK,EAAE,mBAE1B,OACE,gCACGgM,KAAK7I,MAAMyI,SACV,uBAAK3L,UAAU,cACb,yBAAOA,UAAU,gBAAgBoQ,QAAQ,eACtCrQ,EAAE,+BAEL,uBAAKC,UAAU,8BACb,gBAAC,IAAQ,CACPqT,MAAOD,EACPE,kBAAkB,uBAClBxP,GAAG,qBACHyP,YAAaxH,KAAKgH,MAAMC,SACxB3C,SAAUtE,KAAKkH,6BAInB,KACHlH,KAAKgH,MAAM7R,OAAS,IAAWiJ,UAC9B,gBAAC,IAAgB,CAACkG,SAAUtE,KAAKuD,cAAelE,WAAYW,KAAKgH,MAAM3H,aAEvE,gBAAC,IAAc,CAACiF,SAAUtE,KAAKuD,cAAelE,WAAYW,KAAKgH,MAAM3H,eAOxE,MAAMoI,EAAmB,4BAAkBX,I,kCCzElD,oDAKA,MAAMY,UAAwC,YAI5C,YAAYvQ,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACXW,SAAU3H,KAAK7I,MAAMkI,WAAWsI,UAAY,GAC5CC,SAAU5H,KAAK7I,MAAMkI,WAAWuI,UAAY,IAE9C5H,KAAK6H,WAAa7H,KAAK6H,WAAWV,KAAKnH,MAEzC,WAAW4D,GACT5D,KAAKoH,SACH,CACE,CAACxD,EAAMhG,OAAOnL,MAAOmR,EAAMhG,OAAO7I,OAEpC,IAAMiL,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAInC,SACE,MAAM,EAAEhT,GAAMgM,KAAK7I,MACnB,OACE,gCACE,uBAAKlD,UAAU,cACb,yBAAOA,UAAU,gBAAgBoQ,QAAQ,YACtCrQ,EAAE,oBAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAG,WAAU,YACH,kBAAiB,mBACV,gBACjB5C,KAAK,OACL1C,KAAK,WACL6R,SAAUtE,KAAK6H,WACf9S,MAAOiL,KAAKgH,MAAMW,WAEpB,qBAAG1T,UAAU,aAAa8D,GAAG,iBAC1B/D,EAAE,uDAIT,uBAAKC,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAQ,YAClDrQ,EAAE,6BAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAG,WAAU,YACH,kBAAiB,mBACV,gBACjB5C,KAAK,WACL1C,KAAK,WACL6R,SAAUtE,KAAK6H,WACf9S,MAAOiL,KAAKgH,MAAMY,SAClBrD,UAAQ,IAEV,qBAAGtQ,UAAU,aAAa8D,GAAG,iBAC1B/D,EACC,mHAUT,MAAM8T,EAAmB,4BAAkBJ,I,kCC9ElD,8DAKO,MAAMK,EAAgD,EAAGzD,WAAUjF,iBACxE,MAAM,EAAErL,GAAM,2BAKd,OACE,gBAAC,IAAkB,CACjBsQ,SANkB0D,IACpB,MAAMjT,EAAQiT,EAASC,SAAS,MAAQD,EAAcA,EAAH,KACnD1D,EAAS,CAAE,iBAAkBvP,KAK3BmT,cAAe7I,EAAW,mBAAqB,GAC/CtH,GAAG,iBACHoQ,MAAOnU,EAAE,0BACToU,mBAAoBpU,EAClB,oFAEFqU,sBAAuBrU,EAAE,uDACzBsU,YAAY,M,kCCrBlB,4GAUO,MAAMC,EAA+C,EAC1DjE,WACAb,UACAe,gBACAnF,aACAK,aACAE,eAEA,MAAOqH,EAAUuB,GAAe,WAAe,gBACzC,EAAExU,GAAM,2BAERyU,EAAiB,UAA8B,K,MACnD,IACE,MAAMnS,EAAM,YAAkBoJ,GACxBgJ,EAA6B,QAAf,EAAArJ,EAAW/I,UAAI,QAAI,KACvC,OAAOsL,KAAKC,MAAM6G,GAClB,MAAOhF,GAEP,OADAD,EAAQ,gCAAgCC,EAAIzN,SACrC,KAER,CAACoJ,EAAYK,IAEV6D,EAAgB,cACnBoF,IACM,IAAUA,IACbnE,GAAc,GAEhB,MAAMoE,EAAaD,EAAW,KAAa,oBAAsB,aACjErE,EAAS,CACPjF,WAAY,CACV,CAACuJ,GAAahH,KAAKiH,UAAUF,IAE/B1F,iBAAkB,MAGtB,CAACuB,EAAesE,WAGZzB,EAAY,CAChB0B,YAAa/U,EAAE,qCACf,cAAeA,EAAE,qCAGnB,OACE,gCACG4L,GACC,uBAAK3L,UAAU,cACb,yBAAOA,UAAU,gBAAgBoQ,QAAQ,eACtCrQ,EAAE,+BAEL,uBAAKC,UAAU,8BACb,gBAAC,IAAQ,CACPqT,MAAOD,EACPE,kBAAkB,uBAClBxP,GAAG,qBACHyP,YAAaP,EACb3C,SAAUkE,MAKJ,gBAAbvB,EACC,gBAAC,IAAmB,CAAC3C,SAAUf,EAAelE,WAAYoJ,IAE1D,gBAAC,IAAmB,CAClBnE,SAAUf,EACVlE,WAAYoJ,EACZO,UAAWxE,O,kCC7ErB,mMAWA,MAAMyE,UAA2C,YAI/C,YAAY9R,G,MACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CAEXkC,mBAAoB,IAAUlJ,KAAK7I,MAAMkI,eAAiBW,KAAK7I,MAAMkI,WAAW,KAChF8J,mBAAoBnJ,KAAKoJ,0BACF,QAArB,EAAApJ,KAAK7I,MAAMkI,kBAAU,eAAG,OAAcW,KAAK7I,MAAMkI,YAEnDgK,cAAc,GAEhBrJ,KAAKuD,cAAgBvD,KAAKuD,cAAc4D,KAAKnH,MAE/C,sBACE,MAAO,CACLsJ,MAAO,CACLC,QAAS,GACT5B,SAAU,GACVC,SAAU,GACV4B,MAAO,GACPC,KAAM,IAERC,IAAK,OAGT,yBAAyBC,GACvB,MAAMC,EAAmB,GACzB,OAAI,IAAUD,GACL,IAASC,EAAkB5J,KAAK6J,wBAEzC,IAAOF,EAAmB,CAACG,EAAGC,KAE5B,MAAMC,EAAc,SAAOhH,OAAO,IAAM8G,EAAG,OAAQ,KAC7CG,EAAa,IAAUD,GAAe,IAAOE,MAAM,GAAI,IAAM,IAAQF,EAAa,KACxFJ,EAAiB5T,KAAK,CACpBsT,MAAO,CACLC,QAASQ,EACTpC,SAAU,IAAMmC,EAAG,WAAYG,EAAW,IAC1CrC,SAAU,IAAMkC,EAAG,WAAYG,EAAW,IAC1CT,MAAO,IAAMM,EAAG,QAAS,IACzBL,KAAM,IAAMK,EAAG,OAAQ,KAEzBJ,IAAK,IAAMI,EAAG,MAAO,WAGlBF,GAET,yBAAyBA,GACvB,MAAMO,EAAqB,GAS3B,OARA,IAAOP,EAAmB7U,IACxBoV,EAAmBpV,EAAMuU,MAAMC,SAAW,IAAOxU,EAAMuU,MAAO,CAC5D,WACA,WACA,OACA,YAGGa,EAET,qBAAqBhB,GACnB,MAAMQ,EAAoB3J,KAAKoK,yBAAyBjB,GACxDnJ,KAAK7I,MAAMmN,SACTtE,KAAKgH,MAAMkC,mBAAqB,CAAE,CAAC,KAAYS,GAAsBA,GAGzE,cAAcU,EAAcC,GAC1BtK,KAAKoH,SACFJ,IACC,MAAMmC,EAAqB,IAAInC,EAAMmC,oBAC/BoB,EAAmB,CACvBb,IAAKP,EAAmBmB,GAAYZ,IACpCJ,MAAOe,EACPZ,KAAM,SAAOzF,OAAO,GAAGqG,EAAa1C,YAAY0C,EAAazC,aAG/D,OADAuB,EAAmBmB,GAAcC,EAC1B,CACLpB,uBAGJ,IAAMnJ,KAAKwK,qBAAqBxK,KAAKgH,MAAMmC,qBAG/C,YAAYmB,GACVtK,KAAKoH,SACFJ,IACC,MAAMmC,EAAqB,IAAInC,EAAMmC,oBAErC,OADAA,EAAmBsB,OAAOH,EAAY,GAC/B,CAAEnB,uBAEX,IAAMnJ,KAAKwK,qBAAqBxK,KAAKgH,MAAMmC,qBAG/C,WACEnJ,KAAKoH,SACH,CACE+B,mBAAoB,IAASnJ,KAAKgH,MAAMmC,mBAAoBnJ,KAAK6J,wBAEnE,KACE7J,KAAKwK,qBAAqBxK,KAAKgH,MAAMmC,sBAI3C,SACE,MAAM,EAAEnV,GAAMgM,KAAK7I,MACbuT,EAAoB,IAAM1K,KAAKgH,MAAMmC,mBAAoB,CAACwB,EAAWC,KACzE,MAAM,IAAElB,EAAG,MAAEJ,GAAUqB,UAAa,IAC9B,QAAEpB,EAAO,MAAEC,EAAK,SAAE5B,EAAQ,SAAED,GAAa2B,UAAS,GACxD,OACE,uBAAKrV,UAAU,4BAA4BqC,IAAKoT,GAC7C,IAAO1J,KAAKgH,MAAMmC,oBAAsB,GACvC,uBAAKlV,UAAU,0CACb,gBAAC,IAAM,CACL+Q,QAAS,IAAMhF,KAAK6K,YAAYD,GAChCzV,KAAK,SACLC,QAAQ,OAAM,YACJ,uBAEV,gBAAC,IAAe,CAACnB,UAAU,oBAC1BD,EAAE,+BAIT,gBAAC,IAAyB,CACxB+D,GAAI6S,EACJrB,QAASA,EACTC,MAAOA,EACP5B,SAAUA,EACVD,SAAUA,EACVrD,SAAUtE,KAAKuD,mBAKvB,OACE,gCACGmH,EACD,gBAAC,IAAM,CACLzW,UAAU,+DACV+Q,QAAS,IAAMhF,KAAK8K,WACpB3V,KAAK,SACLC,QAAQ,OAAM,YACJ,0BAEV,gBAAC,IAAc,CAACnB,UAAU,oBACzBD,EAAE,6BAON,MAAM+W,EAAsB,4BAAkB9B,I,kCCrKrD,6DAIO,MAAM+B,EAAsE,EACjFjT,KACAwR,UACAC,QACA5B,WACAD,WACArD,eAEA,MAAM,EAAEtQ,GAAM,2BAERiX,EAAc,CAACxY,EAAcsC,KACjC,MAAMmW,EAAkBvD,EAASwD,OAC3BC,EAAkBxD,EAASuD,OAC3B1B,EAAO9B,GAAYC,EAAW,SAAO5D,OAAO,GAAGkH,KAAmBE,KAAqB,GAC7F9G,EAAS,OAAD,QAEJiF,UACA5B,WACAC,WACA4B,QACA,CAAC/W,GAAOsC,GACJ0U,EAAO,CAAEA,QAAS,IAExB1R,IAIEsT,EAAmB7K,GACvByK,EAAYzK,EAAE8K,cAAc7Y,KAAM+N,EAAE8K,cAAcvW,MAAMoW,QAEpDI,EAAqB/K,GACzByK,EAAYzK,EAAE8K,cAAc7Y,KAAM+N,EAAE8K,cAAcvW,OAEpD,OACE,uBAAKd,UAAU,wBAAuB,eAAc,4BAClD,uBAAKA,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAYtM,EAAH,YACnD/D,EAAE,mCAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOA,EAAH,WAAe,mBACEA,EAAH,gBAClB5C,KAAK,OACL1C,KAAK,UACL6R,SAAUiH,EACVxW,MAAOwU,EACPiC,OAAQH,EAAe,YACb,uBACV9G,UAAQ,KAGZ,qBAAGtQ,UAAU,aAAa8D,GAAOA,EAAH,iBAC3B/D,EAAE,6CAGP,uBAAKC,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAYtM,EAAH,aACnD/D,EAAE,oBAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOA,EAAH,YACJ5C,KAAK,OACL1C,KAAK,WACL6R,SAAUiH,EACVxW,MAAO4S,EACP6D,OAAQH,EAAe,YACb,wBACV9G,UAAQ,MAId,uBAAKtQ,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAYtM,EAAH,aACnD/D,EAAE,oBAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOA,EAAH,YACJ5C,KAAK,WACL1C,KAAK,WACL6R,SAAUiH,EACVxW,MAAO6S,EACP4D,OAAQH,EAAe,YACb,wBACV9G,UAAQ,MAId,uBAAKtQ,UAAU,cACb,yBAAOA,UAAU,gBAAgBoQ,QAAYtM,EAAH,UACvC/D,EAAE,iBAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOA,EAAH,SACJ5C,KAAK,OACL1C,KAAK,QACL6R,SAAUiH,EACVxW,MAAOyU,EACPgC,OAAQH,EAAe,YACb,4B,kCC9GtB,0FAMA,MAAMI,UAA2C,YAI/C,YAAYtU,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACX0E,WAAY,IAAU1L,KAAK7I,MAAMkI,YAAc,GAAKuC,KAAKiH,UAAU7I,KAAK7I,MAAMkI,YAC9EsM,YAAY,GAEd3L,KAAK6H,WAAa7H,KAAK6H,WAAWV,KAAKnH,MACvCA,KAAK4L,aAAe5L,KAAK4L,aAAazE,KAAKnH,MAE7C,WAAW4D,GACT5D,KAAK6L,YAAY,IAAUjK,KAAKC,MAAO+B,EAAMhG,OAAO7I,OAAQ6O,EAAMhG,OAAO7I,OAE3E,aAAaiT,GACXhI,KAAK6L,YAAY,IAAUjK,KAAKC,MAAOmG,GAAWA,GAEpD,YAAY8D,EAAYzM,GACtBW,KAAKoH,SACH,CACEsE,WAAYrM,EACZsM,WAAY,IAAUG,IAExB,KACE9L,KAAK7I,MAAMmN,SAASwH,GACpB9L,KAAK7I,MAAM6R,UAAUhJ,KAAKgH,MAAM2E,cAItC,SACE,MAAM,EAAE3X,GAAMgM,KAAK7I,MACnB,OACE,gCACE,gBAAC,IAAkB,CACjBmN,SAAUtE,KAAK4L,aACf1D,cAAelI,KAAKgH,MAAM0E,WAC1B3T,GAAG,gBACHoQ,MAAOnU,EAAE,6BACToU,mBAAoBpU,EAAE,2DACtBqU,sBAAuBrU,EACrB,oGAEFsU,YAAY,IAEbtI,KAAKgH,MAAM2E,YACV,uBAAK1X,UAAU,4BACZD,EAAE,0DAQR,MAAM+X,EAAsB,4BAAkBN,I,kCC9DrD,8DAMA,MAAMO,UAAyC,YAI7C,YAAY7U,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACX3H,WAAY,CAAE4M,iBAAkBjM,KAAK7I,MAAMkI,WAAW4M,kBAAoB,KAE5EjM,KAAKkM,uBAAyBlM,KAAKkM,uBAAuB/E,KAAKnH,MAC/DA,KAAKmM,sBAAwBnM,KAAKmM,sBAAsBhF,KAAKnH,MAE/D,uBAAuB4D,GACrB5D,KAAKoH,SACH,CACE/H,WAAY,CAAE4M,iBAAkBrI,EAAMhG,OAAO7I,QAE/C,IAAMiL,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAGnC,wBACEhH,KAAKoH,SACH,CACE/H,WAAY,CAAE4M,iBAAkB,gBAElC,IAAMjM,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAGnC,SACE,MAAM,EAAEhT,GAAMgM,KAAK7I,MACnB,OACE,uBAAKlD,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAQ,sBAClDrQ,EAAE,8BAEL,uBAAKC,UAAU,uBACb,yBACEA,UAAU,uBACV8D,GAAG,qBAAoB,YACb,aACV5C,KAAK,OACL1C,KAAK,mBACL6R,SAAUtE,KAAKkM,uBACfnX,MAAOiL,KAAKgH,MAAM3H,WAAW4M,iBAAgB,mBAC5B,sBACjB1H,UAAQ,IAEV,0BACEpP,KAAK,SACL6P,QAAShF,KAAKmM,sBACdlY,UAAU,+BAA8B,YAC9B,2BAETD,EAAE,qBAGP,qBAAGC,UAAU,aAAa8D,GAAG,uBAC1B/D,EAAE,6EAON,MAAMoY,EAAoB,4BAAkBJ,I,kCCtEnD,yKAYA,MAAMK,UAAyC,YAI7C,YAAYlV,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACXmC,mBAAoBnJ,KAAKsM,2BAA2BtM,KAAK7I,MAAMkI,aAEjEW,KAAKuD,cAAgBvD,KAAKuD,cAAc4D,KAAKnH,MAE/C,wBACE,MAAO,CACLsJ,MAAO,CACLhT,IAAK,GACLvB,MAAO,IAET2U,IAAK,OAGT,2BAA2B6C,GACzB,OAAI,IAAUA,GACL,CAACvM,KAAKwM,yBAER,IAAMD,EAAqB,CAACxX,EAAOuB,KACxC,MAAMmW,EAAW,WAAc,KAAM1X,GACrC,MAAO,CACL2U,IAAK,MACLJ,MAAO,CACLhT,MACAvB,MAAO0X,EAAW,SAAOzI,OAAOjP,GAASA,EACzC2X,SAAUD,EACVA,eAKR,2BAA2BE,GACzB,OAAO,IACLA,EACA,CAAC/W,EAAKmU,K,QACJ,WAASnU,EAAK,CACZ,CAACmU,EAAET,MAAMhT,MACA,QAAP,EAAAyT,EAAET,aAAK,eAAEoD,YAAmB,QAAP,EAAA3C,EAAET,aAAK,eAAEmD,UAAW1C,EAAET,MAAMvU,MAAQ,SAAOiP,OAAO+F,EAAET,MAAMvU,UAErF,IAGJ,cAAcsV,EAAcuC,GAC1B,MAAMC,EAA4B,IAAI7M,KAAKgH,MAAMmC,oBAC3CoB,EAAmB,CACvBb,IAAKmD,EAA0BD,GAASlD,IACxCJ,MAAOe,GAETwC,EAA0BD,GAAWrC,EACrCvK,KAAKoH,SACH,CACE+B,mBAAoB0D,GAEtB,IACE7M,KAAK7I,MAAMmN,SAAS,CAClBrB,iBAAkBjD,KAAK8M,2BAA2B9M,KAAKgH,MAAMmC,uBAIrE,YAAYyD,GACV,MAAMC,EAA4B,IAAI7M,KAAKgH,MAAMmC,oBACjD0D,EAA0BpC,OAAOmC,EAAS,GAC1C5M,KAAKoH,SACH,CACE+B,mBAAoB0D,GAEtB,IACE7M,KAAK7I,MAAMmN,SAAS,CAClBrB,iBAAkBjD,KAAK8M,2BAA2B9M,KAAKgH,MAAMmC,uBAIrE,WACEnJ,KAAKoH,SACH,CACE+B,mBAAoB,IAASnJ,KAAKgH,MAAMmC,mBAAoBnJ,KAAKwM,0BAEnE,IACExM,KAAK7I,MAAMmN,SAAS,CAClBrB,iBAAkBjD,KAAK8M,2BAA2B9M,KAAKgH,MAAMmC,uBAIrE,SACE,MAAM,EAAEnV,GAAMgM,KAAK7I,MACbuT,EAAoB,IAAM1K,KAAKgH,MAAMmC,mBAAoB,CAACwB,EAAWC,IAEvE,uBAAK3W,UAAU,4BAA4BqC,IAAKqU,EAAUjB,KACvD,IAAO1J,KAAKgH,MAAMmC,oBAAsB,GACvC,uBAAKlV,UAAU,0CACb,gBAAC,IAAM,CACLkB,KAAK,SACL6P,QAAS,IAAMhF,KAAK6K,YAAYD,GAChCxV,QAAQ,OAAM,YACJ,uBAEV,gBAAC,IAAe,CAACnB,UAAU,oBAC1BD,EAAE,6BAIT,gBAAC,IAAiB,CAAC+D,GAAI6S,EAAOtB,MAAOqB,EAAUrB,MAAOhF,SAAUtE,KAAKuD,kBAI3E,OACE,gCACGmH,EACD,gBAAC,IAAM,CACLzW,UAAU,+DACV+Q,QAAS,IAAMhF,KAAK8K,WACpB3V,KAAK,SACLC,QAAQ,OAAM,YACJ,0BAEV,gBAAC,IAAc,CAACnB,UAAU,oBACzBD,EAAE,2BAON,MAAM+Y,EAAoB,4BAAkBV,I,kCC7InD,gGAMO,MAAMW,UAAyC,YAIpD,YAAY7V,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACX1Q,IAAKa,EAAMmS,MAAMhT,IACjBvB,MAAOoC,EAAMmS,MAAMvU,MACnB0X,SAAUtV,EAAMmS,MAAMmD,UAExBzM,KAAKiN,cAAgBjN,KAAKiN,cAAc9F,KAAKnH,MAC7CA,KAAKkN,YAAclN,KAAKkN,YAAY/F,KAAKnH,MAE3C,cAAcgI,EAAUyE,GACtBzM,KAAKoH,SACH,CACErS,MAAOiT,EACP0E,SAAUD,GAEZ,IAAMzM,KAAK7I,MAAMmN,SAAStE,KAAKgH,MAAOhH,KAAK7I,MAAMY,KAGrD,YAAY6L,GACV5D,KAAKoH,SACH,CACE9Q,IAAKsN,EAAMhG,OAAO7I,OAEpB,IAAMiL,KAAK7I,MAAMmN,SAAStE,KAAKgH,MAAOhH,KAAK7I,MAAMY,KAGrD,SACE,MAAM,EAAE/D,GAAMgM,KAAK7I,MACnB,OACE,uBAAKlD,UAAU,kCACb,uBAAKA,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAYrE,KAAK7I,MAAMY,GAAd,QACnD/D,EAAE,eAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOiI,KAAK7I,MAAMY,GAAd,OACJ5C,KAAK,OACL1C,KAAK,MACL6R,SAAUtE,KAAKkN,YACfnY,MAAOiL,KAAKgH,MAAM1Q,IAAG,YACX,aACViO,UAAQ,MAId,uBAAKtQ,UAAU,cACb,2BACE,gBAAC,IAAkB,CACjBqQ,SAAUtE,KAAKiN,cACf/E,cAAelI,KAAKgH,MAAMjS,MAC1BgD,GAAOiI,KAAK7I,MAAMY,GAAd,SACJoQ,MAAOnU,EAAE,gBACToU,mBAAoBpU,EAClB,0EAEFmZ,kBAAmBnN,KAAKgH,MAAMyF,eASrC,MAAMW,EAAoB,4BAAkBJ,I,kCC7EnD,IAAYK,EAkBAC,EASAC,EA3BZ,+GAAYF,GACV,yBACA,+BACA,iBACA,qDACA,qBALF,CAAYA,MAAU,KAkBtB,SAAYC,GACV,kBACA,wBACA,kBACA,gBACA,iBACA,aANF,CAAYA,MAAW,KASvB,SAAYC,GACV,iBACA,+BACA,yBACA,iDAJF,CAAYA,MAAc,M,8bCXnB,MAAMC,UAAsB,IAKjC,YAAYzN,GACVgH,MAAMhH,GAQE,KAAA0N,gBAAkB,KAC1B,OAAQzN,KAAKD,UAAUL,YACrB,KAAK,IAAWgO,sBAChB,KAAK,IAAWC,WAChB,KAAK,IAAWC,MACd,MAAO,CAAEnE,KAAM,SAAOzG,OAAOhD,KAAKD,UAAU8N,cAAcjG,WAC5D,QACE,OAAO,OAIH,KAAAkG,gBAAkB,K,MAC1B,MAAM,KAAErb,EAAI,MAAE+I,EAAK,OAAEmC,GAAW,EAAYqC,KAAKD,UAAUgO,KACrD5S,GAAsC,QAAzB,EAAA6E,KAAKD,UAAU5E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GACpE,MAAO,CACLsS,SAAUvb,EACV+I,QACAyS,KAAMtQ,EACNuQ,cAAelO,KAAKD,UAAUoO,IAC9BhT,aACAiT,YAAapO,KAAKD,UAAUqO,YAC5BC,eAAgBrO,KAAKD,UAAUsO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,IAME,GAAoB,aALDtO,KAAKuO,OAAOC,MAAMhU,IAAI,CACvCgB,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,YAGbrY,OACP,OAAO,IAAW+Y,UAEpB,MAAOlO,GACP,OAAQA,EAAE7K,QACR,KAAK,IACH,OAAO,IAAWgZ,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWC,uBAEpB,QACE,OAAO,IAAWC,aAIxB,OAAO,IAAWA,eAGpB,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,IACE,MAAMC,QAAahP,KAAKuO,OAAOC,MAAMS,aAAa,CAChDzT,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,WAKtB,MAAO,CAAEkB,SAHIF,EAAKjT,KAAKoT,IAAKC,GACnBA,EAAE3c,OAGX,MAAO+N,GACP,MAAO,CAAE0O,SAAU,QAIvB,KAAAhP,gBAAyBkC,GAA8D,EAAD,gCACpF,IACE,MAAM4M,QAAahP,KAAKuO,OAAOC,MAAMa,YAAY,OAAD,sBAC9C7T,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,UAChB5L,IAAUA,aAAM,EAANA,EAAQkN,cAClB,CAAEC,KAAM,GAAGvP,KAAK7L,SAASgH,cAAciH,EAAOkN,gBAC9C,CAAEC,KAAMvP,KAAK7L,SAASgH,aACtB6E,KAAK7L,SAAS+Z,cAAgB,CAAEC,IAAKnO,KAAK7L,SAAS+Z,eAAkB,KAE3E,IAAI9N,EAAQ,GAIZ,OAHoB,MAAhB4O,EAAKrZ,QAAkBuU,MAAMsF,QAAQR,EAAKjT,QAC5CqE,EAAQ4O,EAAKjT,KAAKoT,IAAKnb,GAAMA,EAAEvB,OAE1B,CAAE2N,SACT,MAAOI,GACP,MAAO,CAAEJ,MAAO,QAIpB,KAAAqP,oBAAsB,IAAuC,EAAD,gCAC1D,IACE,MAAMT,QAAahP,KAAKuO,OAAOC,MAAMkB,cAAc,CACjDlU,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,WAEtB,OAAoB,MAAhBgB,EAAKrZ,OACA,CAAEga,UAAW3O,OAAOC,KAAK+N,EAAKjT,OAEhC,CAAE4T,UAAW,IACpB,MAAOnP,GACP,MAAO,CAAEmP,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAMjP,EAAU,CACdkP,OAAQ,CAAC,+BACTC,cAAe,CAAC,UAAUL,GAC1B,uBAAwB,CAAC,eAErB9N,EAAO,CACXtP,KAAM,MACN0d,QAAQ,EACRC,OAAQ,CACNrC,IAAK+B,EACLO,aAAc,OACdC,aAAcP,EAAkB,IAAM,IACtCvR,OAAQwR,GAEVO,OAAQ,CAAC,OAAQ,iBAEbC,EACmB,eAAvBxQ,KAAK7L,SAAS8Z,KACV,yBACA,WAAWjO,KAAK7L,SAAS8Z,cAS/B,OAAsC,aAPO,mBAAiB1M,KAAK,IAAe,CAChFwM,IAAK,GAAGyC,WAA2BxQ,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,iBACxEyC,OAAQ,OACR1P,UACAgB,KAAMH,KAAKiH,UAAU9G,MAGAP,cAGzB,KAAAkP,cAAuBnB,GAAmC,EAAD,gCACvD,IAOE,OAAuB,aANJvP,KAAKuO,OAAOC,MAAMa,YAAY,OAAD,QAC9C7T,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,SACpBuB,QACIvP,KAAK7L,SAAS+Z,cAAgB,CAAEC,IAAKnO,KAAK7L,SAAS+Z,eAAkB,MAE/DvY,OACZ,MAAO6K,GACP,OAAO,MAIX,KAAAmQ,eAAwBpB,GAAyC,EAAD,gCAC9D,IACE,MAAMP,QAAahP,KAAKuO,OAAOC,MAAMa,YAAY,OAAD,QAC9C7T,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,SACpBuB,QACIvP,KAAK7L,SAAS+Z,cAAgB,CAAEC,IAAKnO,KAAK7L,SAAS+Z,eAAkB,KAE3E,OAAoB,MAAhBc,EAAKrZ,OAEAib,EAAOjd,KAAKqb,EAAKjT,KAAc,QAAG,UAAUmD,WAE9C,KACP,MAAOsB,GACP,OAAO,SAIX,KAAAqQ,oBAAsB,IACpB7Q,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAElE,KAAAyC,sBAAwB,IAAM9Q,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,YAEjD,KAAA4V,qBAAuB,IACrB/Q,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAEnE,KAAA2C,kBAAoB,IAClBhR,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,eACnB6E,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,aAErB,KAAA8V,mBAAqB,IACnBjR,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,eACpB6E,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,aAEtB,KAAA+V,iBAAmB,IACjBlR,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAElE,KAAA+C,kBAAoB,IAClBnR,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAEnE,KAAA9N,sBAAwB,IAAMN,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,iBA1MhD,MAAMiW,EAAWpR,KAAKyN,kBACtBzN,KAAK7L,SAAW6L,KAAK8N,kBACrB,MAAMvS,EACmB,eAAvByE,KAAK7L,SAAS8Z,KAAwB,KAAO,WAAWjO,KAAK7L,SAAS8Z,cACxEjO,KAAKuO,OAAS,IAAI,EAAQ,OAAD,wBAAM6C,GAAQ,CAAE7V,iB,2cCNtC,MAAM8V,UAAyB,IAOpC,YAAYtR,GACVgH,MAAMhH,GALA,KAAAuR,QAAU,gCAEV,KAAAC,UAAW,EAWT,KAAA9D,gBAAkB,KAC1B,OAAQzN,KAAKD,UAAUL,YACrB,KAAK,IAAWiO,WAAY,CAC1B,MAAM,SAAEhG,EAAQ,SAAEC,GAAa5H,KAAKD,UAAU8N,cAE9C,MAAO,CAAEqC,cAAe,SADJ,SAAOlM,OAAO,GAAG,SAAOhB,OAAO2E,MAAa,SAAO3E,OAAO4E,OAGhF,QACE,OAAO,OAIH,KAAA4J,UAAY,CACpBzD,EACA0D,EACA1Q,EACAgB,IACG,EAAD,gCACF,MAAM2P,EAAc1R,KAAKyN,kBAEnBkE,EAAiB,OAAH,sBAClB1B,OAAQ,oBACLyB,GACA3Q,GAGL,GAAIf,KAAKuR,SACP,OAAO,YAAsB,OAAD,QAC1BxD,MACA0C,OAAQgB,GAAiB,MACzB1Q,QAAS,YAAe4Q,IACpB5P,GAAQ,CAAEA,KAAMH,KAAKiH,UAAU9G,MAIvC,MAAML,QAAiBkQ,MAAM7D,EAAK,OAAF,QAC9B0C,OAAQgB,GAAiB,MACzB1Q,QAAS4Q,GACL5P,GAAQ,CAAEA,KAAMH,KAAKiH,UAAU9G,MAErC,IAAKL,EAASmQ,GACZ,MAAMnQ,EAER,MAA6C,eAAzCA,EAASX,QAAQvG,IAAI,gBAChBkH,EAASxM,OAEXwM,EAASoQ,UAGlB,KAAAhE,gBAAkB,K,MAChB,MAAM,KAAErb,EAAI,MAAE+I,EAAK,KAAEyS,GAAS,EAAkBjO,KAAKD,UAAUgO,KACzD5S,GAAsC,QAAzB,EAAA6E,KAAKD,UAAU5E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GACpE,MAAO,CACLsS,SAAUvb,EACV+I,QACAyS,OACAC,cAAelO,KAAKD,UAAUoO,KAAO,OACrChT,aACAiT,YAAapO,KAAKD,UAAUqO,YAC5BC,eAAgBrO,KAAKD,UAAUsO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,MAAMP,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,WACvE,GAAGhO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,WACzE,IAEE,UADmBhO,KAAKwR,UAAUzD,IACzBgE,OAAS/R,KAAK7L,SAAS6Z,SAC9B,OAAO,IAAWU,UAEpB,MAAOlO,GACP,OAAQA,EAAE7K,QACR,KAAK,IACH,OAAO,IAAWgZ,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWoD,iBAEpB,QACE,OAAO,IAAWnD,wBAIxB,OAAO,IAAWC,eAGpB,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,MAAMhB,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,oBACvE,GAAGhO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,yBACzE,IACE,MAAMjS,QAAaiE,KAAKwR,UAAUzD,GAElC,MAAO,CAAEmB,SADInT,EAAKkW,OAAO9C,IAAKtc,GAAMA,EAAEJ,OAEtC,MAAO+N,GACP,MAAO,CAAE0O,SAAU,QAIvB,KAAAgD,YAAc,CAACX,EAAmBjC,KAChC,IAAIvB,EAAM,GAUV,OAREA,EADEuB,EACIiC,EACF,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,kBAAkBhO,KAAK7L,SAASgH,cAAcmU,iBAA4BtP,KAAK7L,SAAS+Z,gBAC/J,GAAGlO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBhO,KAAK7L,SAAS+Z,iBAAiBlO,KAAK7L,SAASgH,cAAcmU,eAE9IiC,EACF,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,kBAAkBhO,KAAK7L,SAASgH,0BAA0B6E,KAAK7L,SAAS+Z,gBAC/I,GAAGlO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBhO,KAAK7L,SAAS+Z,iBAAiBlO,KAAK7L,SAASgH,wBAEjI4S,GAGT,KAAA7N,gBAAyBkC,GAA8D,EAAD,gC,MACpF,MAAM2L,GAAM3L,aAAM,EAANA,EAAQkN,cAChBtP,KAAKkS,YAAYlS,KAAKuR,SAAUnP,EAAOkN,cACvCtP,KAAKkS,YAAYlS,KAAKuR,UAC1B,IACE,MAAMxV,QAAaiE,KAAKwR,UAAUzD,GAElC,MAAO,CAAE3N,MADKJ,KAAKuR,SAAWxV,EAAKkW,QAAoB,QAAX,EAAAlW,EAAKkW,cAAM,eAAE9C,IAAKgD,GAAMA,EAAE5C,QAAS,IAE/E,MAAO/O,GACP,MAAO,CAAEJ,MAAO,QAIpB,KAAAqP,oBAAsB,IAAuC,EAAD,gCAC1D,MAAM1B,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,WACvE,GAAGhO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,WACzE,IAEE,MAAO,CAAE2B,UAAW,QADD3P,KAAKwR,UAAUzD,IACRqE,WAC1B,MAAO5R,GACP,MAAO,CAAEmP,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAMhP,EAAU,CACd,eAAgB,CAAC,oBACjBmP,cAAe,CAAC,SAASL,IAErB9N,EAAO,CACXgM,IAAK+B,EACLS,OAAQ,CAAC,YAAa,sBAAuB,uBAC7C8B,wBAAyBtC,EACzBI,QAAQ,GAEJpC,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,iBACvE,GAAGhO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,iBAUzE,OAAsC,aAPO,mBAAiBzM,KAAK,IAAe,CAChFwM,MACA0C,OAAQ,OACR1P,UACAgB,KAAMH,KAAKiH,UAAU9G,MAGAP,cAGzB,KAAAkP,cAAuBnB,GAAmC,EAAD,gCACvD,MAAM+C,EAAW/C,EAAK7T,QAAQ,MAAO,IAC/BqS,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,gBAAgBsE,QAAetS,KAAK7L,SAAS+Z,gBACpH,GAAGlO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBhO,KAAK7L,SAAS+Z,iBAAiBoE,IACxH,IAEE,aADMtS,KAAKwR,UAAUzD,IACd,EACP,MAAOvN,GACP,OAAO,MAIX,KAAAmQ,eAAwBpB,GAAyC,EAAD,gCAC9D,MAAM+C,EAAW/C,EAAK7T,QAAQ,MAAO,IAC/BqS,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,gBAAgBsE,QAAetS,KAAK7L,SAAS+Z,gBACpH,GAAGlO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBhO,KAAK7L,SAAS+Z,iBAAiBoE,IACxH,IAEE,aADmBtS,KAAKwR,UAAUzD,GAElC,MAAOvN,GACP,OAAO,SAIX,KAAAqQ,oBAAsB,IACpB7Q,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAElE,KAAAyC,sBAAwB,IAAM9Q,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,YAEjD,KAAA4V,qBAAuB,IACrB/Q,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAEnE,KAAA2C,kBAAoB,IAClBhR,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,eACnB6E,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,aAErB,KAAA8V,mBAAqB,IACnBjR,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,eACpB6E,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,aAEtB,KAAA+V,iBAAmB,IACjBlR,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAElE,KAAA+C,kBAAoB,IAClBnR,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAEnE,KAAA9N,sBAAwB,IAAMN,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,iBApOhD6E,KAAK7L,SAAW6L,KAAK8N,kBACM,kBAAvB9N,KAAK7L,SAAS8Z,OAChBjO,KAAKsR,QAAU,WAAWtR,KAAK7L,SAAS8Z,oBACxCjO,KAAKuR,UAAW,M,ybCTf,MAAMgB,UAAsB,IAOjC,YAAYxS,GACVgH,MAAMhH,GAUA,KAAAyS,QAAU,IAAiC,EAAD,gCAChD,GAAIxS,KAAKyO,KACP,OAAOzR,QAAQyV,QAAQzS,KAAKyO,MAE9B,MAAMA,QAAyBzO,KAAKuO,OAAOmE,SAASC,KAAK3S,KAAK7L,SAASye,UACvE,IAAKnE,EACH,MAAM,IAAIjR,MAAM,IAAKxJ,EAAE,0CAClB,GAAIya,EAAKoE,sBAAwB7S,KAAK7L,SAASye,SACpD,MAAM,IAAIpV,MACR,IAAKxJ,EAAE,6EAA8E,CACnFub,KAAMd,EAAKoE,oBACXpgB,KAAMuN,KAAK7L,SAASye,YAM1B,OADA5S,KAAKyO,KAAOA,EACLzR,QAAQyV,QAAQzS,KAAKyO,SAmB9B,KAAAhB,gBAAkB,KAChB,OAAQzN,KAAKD,UAAUL,YACrB,KAAK,IAAWgO,sBAChB,KAAK,IAAWE,MAChB,KAAK,IAAWD,WACd,OAAO,SAAO3K,OAAOhD,KAAKD,UAAU8N,cAAcjG,UACpD,QACE,OAAO,OAIb,KAAAkL,aAAe,IAA0B,EAAD,gCACtC,IAEE,aADmB9S,KAAKwS,WACZza,GACZ,MAAOyI,GACP,MAAMA,MAIV,KAAA8N,gBAAkB,IAAiC,EAAD,gCAChD,IAEE,aADMtO,KAAKwS,UACJ,IAAW9D,UAClB,MAAOlO,GACP,OAAQA,EAAE7K,QACR,KAAK,IACH,OAAO,IAAWgZ,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWoD,iBAEpB,KAAK,IACH,OAAO,IAAWnD,uBAEpB,QACE,OAAO,IAAWC,iBAM1B,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,IACE,MAAMgE,QAAkB/S,KAAK8S,eACvB9D,QAAahP,KAAKuO,OAAOyE,SAASvV,IAAIsV,GAE5C,MAAO,CAAE7D,SADIF,EAAKG,IAAKtc,GAAMA,EAAEJ,OAE/B,MAAO+N,GACP,MAAO,CAAE0O,SAAU,QAIvB,KAAAhP,gBAAyBkC,GAGI,EAAD,gCAC1B,IACE,MAAM2Q,QAAkB/S,KAAK8S,eACvB9D,QAAahP,KAAKuO,OAAO0E,aAAaC,KAAKH,EAAW,OAAF,WACpD3Q,aAAM,EAANA,EAAQkN,cACR,CAAEC,KAAMvP,KAAKsS,SAASlQ,EAAOkN,eAC7B,CAAEC,KAAMvP,KAAK7L,SAASgH,cAO5B,MAAO,CAAEiF,MALK4O,EAAK9N,OAAO,CAACtL,EAAKud,MACZ,SAAdA,EAAKhe,OAAoBiN,aAAM,EAANA,EAAQgR,gBAA+B,SAAdD,EAAKhe,OACzDS,EAAII,KAAKmd,EAAK5D,MACT3Z,GACN,KAEH,MAAO4K,GACP,MAAO,CAAEJ,MAAO,QAIpB,KAAAqP,oBAAsB,IAAuC,EAAD,gCAC1D,IACE,MAAMsD,QAAkB/S,KAAK8S,eACvB9D,QAAahP,KAAKuO,OAAOmE,SAAS/C,UAAUoD,GAClD,MAAO,CAAEpD,UAAW3O,OAAOC,KAAK+N,IAChC,MAAOxO,GACP,MAAO,CAAEmP,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAM+C,QAAkB/S,KAAK8S,eACvB/R,EAAU,CACd,eAAgB,CAAC,oBACjB,gBAAiB,CAAC8O,IAEd9N,EAAO,CACXgM,IAAK+B,EACLuD,aAAa,EACbC,uBAAuB,EACvBC,wBAAyBxD,EACzBF,MAAOG,GAUT,OAAsC,aAPO,mBAAiBzO,KAAK,IAAe,CAChFwM,IAAK,GAAG/N,KAAK7L,SAAS8Z,wBAAwB8E,UAC9CtC,OAAQ,OACR1P,UACAgB,KAAMH,KAAKiH,UAAU9G,MAGAP,cAGzB,KAAAkP,cAAuBnB,GAAmC,EAAD,gC,MACvD,IACE,MAAMwD,QAAkB/S,KAAK8S,eACvB3E,EAAMnO,KAAK7L,SAAS+Z,gBAAmC,QAAjB,EAAAlO,KAAKyO,YAAY,eAAE+E,gBAE/D,aADMxT,KAAKuO,OAAOkF,gBAAgBC,QAAQX,EAAWxD,EAAMpB,IACpD,EACP,MAAO3N,GACP,OAAO,MAIX,KAAAmQ,eAAwBpB,GAAyC,EAAD,gC,MAC9D,IACE,MAAMwD,QAAkB/S,KAAK8S,eACvB3E,EAAMnO,KAAK7L,SAAS+Z,gBAAmC,QAAjB,EAAAlO,KAAKyO,YAAY,eAAE+E,gBACzDlB,EAAW/C,EAAK7T,QAAQ,OAAQ,IACtC,aAAasE,KAAKuO,OAAOkF,gBAAgBC,QAAQX,EAAWT,EAAUnE,GACtE,MAAO3N,GACP,OAAO,SAIX,KAAA8R,SAAYa,GACHnT,KAAK7L,SAASgH,WAAa,GAAG6E,KAAK7L,SAASgH,cAAcgY,IAASA,EAG5E,KAAAtC,oBAAsB,IAAM7Q,KAAK0Q,cAAc1Q,KAAKsS,SAAS,GAAGtS,KAAK7L,SAASka,iBAE9E,KAAAyC,sBAAwB,IAA8B,EAAD,gCACnD,IACE,MAAMiC,QAAkB/S,KAAK8S,eACvB9D,QAAahP,KAAKuO,OAAO0E,aAAaC,KAAKH,EAAW,CAC1DxD,KAAMvP,KAAK7L,SAASgH,aAKtB,QAH4B6T,EAAK2E,KAC9BR,GAAuB,SAAdA,EAAKhe,MAAiC,YAAdge,EAAK1gB,MAGzC,MAAO+N,GACP,OAAO,MAIX,KAAAuQ,qBAAuB,IACrB/Q,KAAK2Q,eAAe3Q,KAAKsS,SAAS,GAAGtS,KAAK7L,SAASka,iBAErD,KAAA2C,kBAAoB,IAClBhR,KAAK0Q,cAAc1Q,KAAKsS,SAAS,eAAiBtS,KAAK0Q,cAAc1Q,KAAKsS,SAAS,aAErF,KAAArB,mBAAqB,IACnBjR,KAAK2Q,eAAe3Q,KAAKsS,SAAS,eAClCtS,KAAK2Q,eAAe3Q,KAAKsS,SAAS,aAEpC,KAAApB,iBAAmB,IAAMlR,KAAK0Q,cAAc1Q,KAAKsS,SAAS,GAAGtS,KAAK7L,SAASia,cAE3E,KAAA+C,kBAAoB,IAAMnR,KAAK2Q,eAAe3Q,KAAKsS,SAAS,GAAGtS,KAAK7L,SAASia,cAE7E,KAAA9N,sBAAwB,IAAMN,KAAK2Q,eAAe3Q,KAAKsS,SAAS,iBA3N9DtS,KAAK7L,SAAW6L,KAAK8N,kBACrB,MAAM+B,EAAQ7P,KAAKyN,kBACnBzN,KAAKuO,OAAS,IAAI,SAAO,CACvBN,KAAMjO,KAAK7L,SAAS8Z,KACpB4B,UAEF7P,KAAKyO,KAAO,KAuBd,kBACE,MAAM,KAAEhc,EAAI,MAAE+I,EAAK,SAAEjF,EAAUqd,UAAWhB,GAAa,EAAY5S,KAAKD,UAAUgO,KAC5E5S,GA1CkCwG,OAAhBA,EA0Cc3B,KAAKD,UAAU5E,iBA1CV,EAAHwG,EAAKjG,QAAQ,MAAO,MAAO,GAA5C,IAACiG,EA4CxB,MAAO,CACLqM,SAAUvb,EACV+I,QACAyS,KAJW,WAAW1X,EAKtB2X,cAAelO,KAAKD,UAAUoO,IAC9ByE,WACAzX,aACAiT,YAAapO,KAAKD,UAAUqO,YAC5BC,eAAgBrO,KAAKD,UAAUsO,mB,ybCnD9B,MAAMwF,UAAqB,IAKhC,YAAY9T,GACVgH,MAAMhH,GAHA,KAAAwR,UAAW,EAUT,KAAA9D,gBAAkB,KAC1B,GAAIzN,KAAKD,UAAUL,aAAe,IAAWiO,WAAY,CACvD,MAAM,SAAEhG,EAAQ,SAAEC,GAAa5H,KAAKD,UAAU8N,cAC9C,IAAK,IAAUlG,GAAW,CAExB,MAAO,CAAEmM,cAAe,SADJ,SAAO9P,OAAO,GAAG,SAAOhB,OAAO2E,MAAa,SAAO3E,OAAO4E,OAGhF,MAAO,CAAEsI,cAAe,SAAS,SAAOlN,OAAO4E,IAEjD,OAAO,MAGC,KAAA4J,UAAY,CACpBzD,EACA0D,EACA1Q,EACAgB,IACG,EAAD,gCACF,MAAM2P,EAAc1R,KAAKyN,kBACnBkE,EAAiB,OAAH,sBAClB1B,OAAQ,oBACLyB,GACA3Q,GAEL,GAAIf,KAAKuR,SACP,OAAO,YAAsB,OAAD,QAC1BwC,eAAe,EACfhG,MACA0C,OAAQgB,GAAiB,MACzB1Q,QAAS,YAAe4Q,IACpB5P,GAAQ,CAAEA,KAAMH,KAAKiH,UAAU9G,MAIvC,MAAML,QAAiBkQ,MAAM7D,EAAK,OAAF,QAC9B0C,OAAQgB,GAAiB,MACzB1Q,QAAS4Q,GACL5P,GAAQ,CAAEA,KAAMH,KAAKiH,UAAU9G,MAErC,IAAKL,EAASmQ,GACZ,MAAMnQ,EAER,MAA6C,eAAzCA,EAASX,QAAQvG,IAAI,gBAChBkH,EAASxM,OAEXwM,EAASoQ,UAGlB,KAAAhE,gBAAkB,K,MAChB,MAAM,KAAErb,EAAI,MAAE+I,EAAK,SAAEjF,EAAUqd,UAAWhB,GAAa,EAAY5S,KAAKD,UAAUgO,KAC5E5S,GAAsC,QAAzB,EAAA6E,KAAKD,UAAU5E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GAEpE,MAAO,CACLsS,SAAUvb,EACV+I,QACAyS,KAJW,WAAW1X,EAKtB2X,cAAelO,KAAKD,UAAUoO,IAC9ByE,WACAzX,aACAiT,YAAapO,KAAKD,UAAUqO,YAC5BC,eAAgBrO,KAAKD,UAAUsO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,MAAMP,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,WACvF,IACE,MAAMjS,QAAwCiE,KAAKwR,UAAUzD,GAC7D,IAAIhS,aAAI,EAAJA,EAAMtJ,QAASuN,KAAK7L,SAAS6Z,SAC/B,OAAO,IAAWU,UAEpB,MAAOlO,GACP,OAAO,IAAWwT,qBAEpB,OAAO,IAAWA,wBAGpB,KAAAjF,kBAAoB,IAAiC,EAAD,gCAClD,MAAMhB,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,oBACvF,IACE,MAAMjS,QAAsCiE,KAAKwR,UAAUzD,GAE3D,MAAO,CAAEmB,UADInT,aAAI,EAAJA,EAAMoT,IAAKtc,GAAMA,EAAEJ,QAAS,IAEzC,MAAO+N,GACP,MAAO,CAAE0O,SAAU,QAIvB,KAAAhP,gBAAyBkC,GAA8D,EAAD,gCACpF,MAAM2L,GAAM3L,aAAM,EAANA,EAAQkN,cAChB,GAAGtP,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,qBAAqBhO,KAAK7L,SAASgH,cAAciH,EAAOkN,eACnI,GAAGtP,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,qBAAqBhO,KAAK7L,SAASgH,aAElH,IACE,MAAMY,QAAgDiE,KAAKwR,UAAUzD,GAErE,MAAO,CAAE3N,OADIrE,aAAI,EAAJA,EAAMoT,IAAKgD,GAAMA,EAAE1f,QAAS,IAEzC,MAAO+N,GACP,MAAO,CAAEJ,MAAO,QAIpB,KAAAqP,oBAAsB,IAAuC,EAAD,gCAC1D,MAAM1B,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,qBACvF,IACE,MAAMjS,QAAwCiE,KAAKwR,UAAUzD,GAE7D,MAAO,CAAE4B,WADI3O,kBAAM,EAANA,OAAQC,KAAKlF,KAAS,IAEnC,MAAOyE,GACP,MAAO,CAAEmP,UAAW,QAKxB,KAAAC,kBAAoB,CAAOC,EAAeC,IAAyC,EAAD,gCAChF,MAAM/O,EAAU,CACd,eAAgB,CAAC,oBACjBmP,cAAe,CAAC,SAASL,IAErB9N,EAAO,CACXoO,QAAQ,EACR8D,qBAAsB,GACtBC,cAAe,IACf9D,OAAQ,CACNC,aAAc,OACdtC,IAAK+B,GAEPS,OAAQ,CAAC,OAAQ,gBACjBpb,KAAM,SAEF4Y,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,iBAUvF,OAAsC,aAPO,mBAAiBzM,KAAK,IAAe,CAChFwM,MACA0C,OAAQ,OACR1P,UACAgB,KAAMH,KAAKiH,UAAU9G,MAGAP,cAGzB,KAAAkP,cAAuBnB,GAAmC,EAAD,gCACvD,MAAM+C,EAAW/C,EAAK7T,QAAQ,MAAO,IAC/BqS,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,qBAAqBsE,SAAgBtS,KAAK7L,SAAS+Z,gBAC1I,IAEE,aADMlO,KAAKwR,UAAUzD,IACd,EACP,MAAOvN,GACP,OAAO,MAIX,KAAAmQ,eAAwBpB,GAAyC,EAAD,gCAC9D,MAAM+C,EAAW/C,EAAK7T,QAAQ,MAAO,IAC/BqS,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBsE,SAAgBtS,KAAK7L,SAAS+Z,gBACrI,IAEE,aADmBlO,KAAKwR,UAAUzD,GAElC,MAAOvN,GAGP,OADA2T,QAAQC,KAAK,8BAA+B5T,GACrC,SAIX,KAAAqQ,oBAAsB,IACpB7Q,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAElE,KAAAyC,sBAAwB,IAAM9Q,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,YAEjD,KAAA4V,qBAAuB,IACrB/Q,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAEnE,KAAA2C,kBAAoB,IAClBhR,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,eACnB6E,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,aAErB,KAAA8V,mBAAqB,IACnBjR,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,eACpB6E,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,aAEtB,KAAA+V,iBAAmB,IACjBlR,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAElE,KAAA+C,kBAAoB,IAClBnR,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAEnE,KAAA9N,sBAAwB,IAAMN,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,iBAnMhD6E,KAAK7L,SAAW6L,KAAK8N,kBAChB9N,KAAK7L,SAAS8Z,KAAKtS,SAAS,eAC/BqE,KAAKuR,UAAW,M,wXCpBtB,MAAM8C,EAA0B,CAC9B,CACE5hB,KAAM,QACN0C,KAAM,OACNid,SAAU,OACVkC,eAAgB,UAChBC,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,OACNid,SAAU,OACVkC,eAAgB,aAChBC,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,SACNid,SAAU,KACVkC,eAAgBE,OAAO,CAAC,WAAY,aAAc,cAAcC,KAAK,MACrEF,SAAU,GAEZ,CACE9hB,KAAM,OACN0C,KAAM,OACNid,SAAU,OACVkC,eAAgBE,OAAO,CAAC,UAAW,WAAY,aAAaC,KAAK,MACjEF,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,SACNid,SAAU,aACVkC,eAAgBE,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACxFF,SAAU,GAEZ,CACE9hB,KAAM,iBACN0C,KAAM,gBACNid,SAAU,aACVkC,eAAgB,gBAChBC,SAAU,EACVG,gBAAwBC,GAAe,OAAD,6BACpC,MAAMC,QAAoBD,EAAWrU,wBACrC,OAAO,YAAesU,GAAe,CAAC,gBAAkB,OAG5D,CACEniB,KAAM,MACN0C,KAAM,MACNid,SAAU,MACVkC,eAAgBE,OAAO,CAAC,YAAa,iBAAiBC,KAAK,MAC3DF,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,SACNid,SAAU,SACVkC,eAAgBE,OAAO,CAAC,mBAAoB,YAAYC,KAAK,MAC7DF,SAAU,GAEZ,CACE9hB,KAAM,OACN0C,KAAM,OACNid,SAAU,OACVkC,eAAgBE,OAAO,CAAC,WAAY,YAAYC,KAAK,MACrDF,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,SACNid,SAAU,KACVkC,eAAgBE,OAAO,CAAC,eAAgB,aAAaC,KAAK,MAC1DF,SAAU,IAYDM,EAA0BF,GAA0D,OAAD,6BAC9F,MAAM,MAAEvU,SAAgBuU,EAAWzU,kBAkBnC,aAhByBlD,QAAQS,IAC/B4W,EAAWlF,IAAuCnb,GAAM,OAAD,6BACrD,IAAI8gB,EAAgB1U,EAAMnE,OAAQkW,GAAMne,EAAEsgB,eAAeS,KAAK5C,IAI9D,OAHI2C,EAAczY,OAAS,GAAKrI,EAAE0gB,kBAChCI,QAAsB9gB,EAAE0gB,gBAAgBC,IAEnC,CACLliB,KAAMuB,EAAEvB,KACR0C,KAAMnB,EAAEmB,KACRid,SAAUpe,EAAEoe,SACZmC,SAAUvgB,EAAEugB,SACZO,uBAMH7Y,OAAQjI,KAAQA,EAAE8gB,cAAczY,QAChC1J,KAAK,CAACqiB,EAAIC,IAAOA,EAAGV,SAAWS,EAAGT,c,kCCtHvC,wVAIYW,EAJZ,oCAIA,SAAYA,GACV,2CACA,2CACA,sCACA,wBACA,4CACA,0CACA,oCACA,0DACA,gDACA,gDACA,8CAXF,CAAYA,MAAsB,KAc3B,MAAMC,EAAqBC,I,MAChC,MAAMtf,EAAa,IAAMsf,EAAa,CAAC,SAAU,cAAe,IAChE,GAA0B,IAAtBtf,EAAWuG,OAAc,OAAO,KAEpC,MAAMgZ,EAAmBvf,EAAW6d,KAAM/S,GAAiB,cAAXA,EAAEzL,MAC5CmgB,EAAqBxf,EAAW6d,KAAM/S,GAAmB,cAAbA,EAAE2U,QAEpD,GACE,CACEL,EAAuBM,mBACvBN,EAAuBO,sBACvB9Z,SAAyB,QAAhB,EAAAyZ,EAAYhjB,YAAI,eAAEuD,UAC5B2f,EAED,OAAO,IAAeI,WAGxB,IAAKL,IAAqBA,EAAiB1f,OACzC,OAAO,KAGT,MAAMA,EACwB,SAA5B0f,EAAiB1f,OACb,IAAeggB,UACa,UAA5BN,EAAiB1f,OACjB,IAAeigB,OACf,IAAeC,QAErB,GAAIR,EAAiBE,QAAUF,EAAiBE,SAAW5f,EACzD,OAAQ0f,EAAiBE,QACvB,KAAKL,EAAuBO,qBAC5B,KAAKP,EAAuBY,iBAC5B,KAAKZ,EAAuBa,UAC5B,KAAKb,EAAuBM,mBAC1B,OAAO,IAAeO,UACxB,KAAKb,EAAuBc,oBAC5B,KAAKd,EAAuBe,gBAC1B,OAAO,IAAeL,OACxB,KAAKV,EAAuBgB,2BAC5B,KAAKhB,EAAuBiB,sBAC5B,KAAKjB,EAAuBkB,sBAC5B,KAAKlB,EAAuBmB,mBAC1B,OAAO,IAAeC,QACxB,KAAKpB,EAAuBqB,qBAC1B,OAAO,IAAeC,QACxB,QACE,OAAO7gB,EAGb,OAAOA,GAKI8gB,EAA0BrB,IACrC,MAAMzf,EAASwf,EAAkBC,GACjC,IAAKzf,EAAQ,MAAO,IACpB,OAAQA,GACN,KAAK,IAAeogB,UAClB,OAAO,IAAQ/hB,EAAE,8BACnB,KAAK,IAAe4hB,OAClB,OAAO,IAAQ5hB,EAAE,2BACnB,KAAK,IAAe2hB,UAClB,OAAO,IAAQ3hB,EAAE,8BACnB,KAAK,IAAesiB,QAClB,OAAO,IAAQtiB,EAAE,4BACnB,KAAK,IAAe6hB,QAClB,OAAO,IAAQ7hB,EAAE,4BACnB,KAAK,IAAewiB,QAClB,OAAO,IAAQxiB,EAAE,4BACnB,KAAK,IAAe0hB,WAClB,OAAO,IAAQ1hB,EAAE,+BACnB,QACE,OAAO2B,IAIA+gB,EAAyBC,GAC/BA,EAASC,WACPzB,EAAkBwB,EAASC,YADF,IAAeC,MAIpCC,EAA8BH,GACpCA,EAASC,WACPH,EAAuBE,EAASC,YADP,IAIrBG,EAAiC3B,GAC7BqB,EAAuBrB,IACrB,IAEN4B,EAA4B5B,GACxBD,EAAkBC,IAChB,IAAeyB,MAGrBI,EAAuB,CAACC,EAASP,K,MAC5C,IAAKO,IAAYA,EAAQC,WAAaD,EAAQC,SAAS9a,OACrD,OAAO,EAET,MAAM1G,EAAS+gB,EAAsBC,GACrC,OAAuB,QAAhB,EAAAO,EAAQC,gBAAQ,eAAExb,SAAShG,MAAY,IAAWuhB,EAAQzZ,IAAK9H,IAG3DyhB,EAA0B,CAACC,EAAQV,K,MAC9C,IAAKU,IAAWA,EAAOF,WAAaE,EAAOF,SAAS9a,OAClD,OAAO,EAGT,MAAM1G,EAASqhB,EAAyBL,GACxC,OAAsB,QAAf,EAAAU,EAAOF,gBAAQ,eAAExb,SAAShG,MAAY,IAAW0hB,EAAO5Z,IAAK9H,IAezD2hB,EAAwBC,GACpBpC,EAAkBoC,IAChB,IAAeV,MAGrBW,EAA6BD,GACzBd,EAAuBc,IACrB,K,kCCpJnB,IAAYE,EAAZ,2CAAYA,GACV,YACA,sBAFF,CAAYA,MAAY,M,kCCDxB,8kBASA,MAAMC,EAAgB,oEAChBC,EAAY,SAGLC,EAAc,8JAgBdC,EAA8B,WAAaC,MAAM,CAC5DrlB,KAAM,WAEHslB,QArBoB,kCAuBnB,yHAEDxT,SAAS,cAGDyT,EAAkC,WAAaF,MAAM,CAChEtQ,YAAa,WACb/U,KAAM,WAEHwlB,IAAI,GAAI,wCACRC,KAAK,cAAe,CACnBC,GAAI,IACJxX,KAAM,WAAa4D,SAAS,gBAIrB6T,EAA8BpkB,GACzC,WAAa8jB,MAAM,CACjBO,SAAU,WAEPC,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CxD,KAAK,YAAU/gB,EAAE,6CACjBykB,IAAI,EAAGzkB,EAAE,4DACTikB,IACCS,OAAOC,iBACP3kB,EAAE,0EAA2E,CAC3E4kB,eAAgBF,OAAOC,oBAG1B5D,KAAK,CACJtiB,KAAM,UACNsiB,KAAOhgB,QAAoByjB,IAAVzjB,EACjBkB,QAASjC,EAAE,8CAIN6kB,EAA4B,WAEtCC,MAAM,CAAC,IAAUjT,UAAW,IAAUE,WAAY,IAAUC,iBAC5DzB,WAEUwU,EAA8B/kB,GACzC,WAAakkB,KAAK,YAAa,CAC7BC,GAAI,IAAUnS,eACdrF,KAAM,WAAamX,MAAM,CACvBkB,QAAS,SAAW,CAClBC,QAAS,WAENX,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CxD,KAAK,YAAU/gB,EAAE,6CACjBykB,IAAI,EAAGzkB,EAAE,4DACTikB,IACCS,OAAOC,iBACP3kB,EAAE,0EAA2E,CAC3E4kB,eAAgBF,OAAOC,oBAG7BO,QAAS,WAENZ,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CxD,KAAK,YAAU/gB,EAAE,6CACjBykB,IAAI,EAAGzkB,EAAE,4DACTikB,IACCS,OAAOC,iBACP3kB,EAAE,0EAA2E,CAC3E4kB,eAAgBF,OAAOC,oBAG1B5D,KAAK,CACJ,KAAKoE,GACH,MAAM,QAAEF,GAAYjZ,KAAKoZ,OACzB,OAAOD,GAAQA,GAASF,GAE1BhjB,QAASjC,EAAE,oEAEfqlB,kBAAmB,WAEhBf,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CxD,KAAK,YAAU/gB,EAAE,uDACjBykB,IAAI,EAAGzkB,EAAE,sEACTikB,IACCS,OAAOC,iBACP3kB,EAAE,oFAAqF,CACrF4kB,eAAgBF,OAAOC,oBAG7BW,iBAAkB,WAEfhB,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CxD,KAAK,YAAU/gB,EAAE,sDACjBykB,IAAI,EAAGzkB,EAAE,qEACTikB,IACCS,OAAOC,iBACP3kB,EAAE,mFAAoF,CACpF4kB,eAAgBF,OAAOC,oBAG7BY,uBAAwB,WAErBjB,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CE,IAAI,EAAGzkB,EAAE,kEACTikB,IAAI,IAAKjkB,EAAE,kEACdwlB,UAAW,WAAa1B,MAAM,CAC5B2B,gBAAiB,WAEdnB,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CxD,KAAK,CACJ,KAAK0E,GACH,GAAIA,EAAiB,CACnB,MAAM,oBAAEC,GAAwB1Z,KAAKoZ,OAC/BrkB,EAjIH,EAACA,EAAe4kB,KACnC,OAAQA,GACN,IAAK,IACH,OAAe,GAAR5kB,EAET,IAAK,IACH,OAAe,KAARA,EAET,QACE,OAAOA,IAwHmB6kB,CAAaH,EAAiBC,GAC5C,OAAO3kB,GAAS,GAAKA,GAAS,KAEhC,OAAO,GAETkB,QAASjC,EAAE,gEAInB6lB,cAAe,UAAYC,GACzB,WAEGxB,UAAU,KACVP,QAAQL,EAAe,CACtBzhB,QAASjC,EACP,4IAEF+lB,oBAAoB,IAErBhF,KACC,2BACA/gB,EAAE,oFACF,SAAUgmB,GACR,OAAOA,EAAWjoB,MAAM,KAAKsK,QAAU,UAOxC4d,EAAyBjmB,GACpC,WAAa8jB,MAAM,CACjBoC,OAAQ,YACR3a,IAAK,WAAa2Y,KAAK,SAAU,CAC/BC,IAAI,EACJxX,KAAM,SAAW,CACfwZ,YAAa,WAAa5V,SAASvQ,EAAE,qDAGzComB,SAAU,WAEPrC,QAAQL,EAAe,CACtBzhB,QAASjC,EACP,yIAEF+lB,oBAAoB,IAErB9B,IAAI,IAAKjkB,EAAE,qDACdub,KAAM,WAAawI,QAAQJ,EAAW,CACpC1hB,QAASjC,EAAE,sCACX+lB,oBAAoB,IAEtBM,kBAAmB,WAEhBC,UAAUtmB,EAAE,wCACZumB,QAAQvmB,EAAE,wCACVykB,IAAI,EAAGzkB,EAAE,iDACTikB,IAAI,MAAOjkB,EAAE,mDAGPwmB,EAA0BxmB,GACrC,WAAa8jB,MAAM,CACjB2C,IAAK,WAAa3C,MAAM,CACtB4C,QAAS,WAENpC,UAAWoC,GAAa,IAAQA,QAAWlC,EAAYkC,GACvDjC,IAAI,EAAGzkB,EAAE,2DACT+gB,KAAK,CACJ,KAAK2F,GACH,MAAM,YAAEC,EAAW,MAAExB,EAAK,UAAEyB,GAAc5a,KAAKoZ,OAC/C,YAAcZ,IAAVW,GAEA,aAAmB,GAAGuB,IAAUC,MAChC,aAAmB,GAAGxB,IAAQyB,MAKpC3kB,QAASjC,EAAE,iEAEf2mB,YAAa,SAAW3mB,EAAE,iDAAiD6mB,SAC3ED,UAAW,SAAW5mB,EAAE,iDAAiD6mB,SACzE1B,MAAO,WAEJb,UAAWa,GAAW,IAAQA,QAASX,EAAYW,GACnDV,IAAI,EAAGzkB,EAAE,yDACT+gB,KAAK,CACJ,KAAKoE,GACH,MAAM,QAAEuB,EAAO,YAAEC,EAAW,UAAEC,GAAc5a,KAAKoZ,OACjD,YAAcZ,IAAVW,GAEA,aAAmB,GAAGA,IAAQyB,MAC9B,aAAmB,GAAGF,IAAUC,MAKtC1kB,QAASjC,EAAE,sEAGjB8mB,OAAQ,WAAahD,MAAM,CACzB4C,QAAS,WAENpC,UAAWoC,GAAa,IAAQA,QAAWlC,EAAYkC,GACvDjC,IAAI,EAAGzkB,EAAE,2DACT+gB,KAAK,CACJ,KAAK2F,GACH,MAAM,YAAEC,EAAW,MAAExB,EAAK,UAAEyB,GAAc5a,KAAKoZ,OAC/C,YAAcZ,IAAVW,GAEA,aAAmB,GAAGuB,IAAUC,MAChC,aAAmB,GAAGxB,IAAQyB,MAKpC3kB,QAASjC,EAAE,oEAEf2mB,YAAa,SAAW3mB,EAAE,sCAC1BmlB,MAAO,WAEJb,UAAWa,GAAW,IAAQA,QAASX,EAAYW,GACnDV,IAAI,EAAGzkB,EAAE,yDACT+gB,KAAK,CACJ,KAAKoE,GACH,MAAM,QAAEuB,EAAO,YAAEC,EAAW,UAAEC,GAAc5a,KAAKoZ,OACjD,YAAcZ,IAAVW,GAEA,aAAmB,GAAGuB,IAAUC,MAChC,aAAmB,GAAGxB,IAAQyB,MAKpC3kB,QAASjC,EAAE,uEAEf4mB,UAAW,SAAW5mB,EAAE,0CAIjB+mB,EAAyB/mB,GACpC,WAAakkB,KAAK,QAAS,CACzBC,GAAK/f,GAA6B,WAAnBA,EAAM4iB,SACrBra,KAAM,WAAamX,MAAM,CACvBX,SAAU,WAAa5S,SAASvQ,EAAE,wBAClC1B,IAAK,WAAaiS,SAASvQ,EAAE,4BAItBinB,EAAuBjnB,GAClC,WAAa8jB,MAAM,CACjB/J,IAAK,WAEFkK,IAAI,IAAMjkB,EAAE,qEACZ+jB,QAAQH,EAAa5jB,EAAE,gCACvBuQ,SAASvQ,EAAE,wBACdmB,KAAM,WAAa+iB,KAAK,cAAe,CACrCC,IAAI,EACJxX,KAAM,WAEH4D,SAASvQ,EAAE,6EAEhBknB,YAAa,cAGJC,EAA0BnnB,GACrC,WAAakkB,KAAK,QAAS,CACzBC,GAAK/f,GAA6B,WAAnBA,EAAM4iB,SACrBra,KAAM,WAAamX,MAAM,CACvBsD,cAAe,WAEZrG,KAAK,YAAU/gB,EAAE,oDACpBqa,eAAgB,WAAa9J,SAASvQ,EAAE,4BAIjCqnB,EAA2BrnB,GACtC,WAAakkB,KAAK,QAAS,CACzBC,GAAK/f,GAA6B,YAAnBA,EAAM4iB,SACrBra,KAAM,WAAamX,MAAM,CACvB1J,YAAa,WAAa7J,SAASvQ,EAAE,wBACrCsnB,eAAgB,WAEb7C,IAAI,EAAGzkB,EAAE,wBACTuQ,SAASvQ,EAAE,wBACdunB,gBAAiB,YAAczC,MAAM,EAAC,IACtC0C,0BAA2B,WAAajX,SAASvQ,EAAE,4BAI5CynB,EAAwB,WAAa3D,MAAM,CACtDkD,SAAU,aAMCU,EAAuB1nB,GAClC,WAAa8jB,MAAM,CACjBrlB,KAAM,WAAa8R,SAASvQ,EAAE,wBAC9BH,MAAO,WAAa0Q,SAASvQ,EAAE,wBAC/B1B,IAAK,WACLqD,OAAQ,WAAa4O,SAASvQ,EAAE,0BAGvB2nB,EAA6C,WAEvDzD,KAAK,CAAC,UAAW,eAAgB,QAAS,CACzCC,GAAI,CAACyD,EAAmBC,EAAaC,KAClCF,GAAqBC,IAAgB,IAAazV,YACnD0V,IAAiB,IAAaC,IAChCpb,KAAM,WAAamX,MAAM,CACvBkE,iBAAkB,WAAazX,gB,kCCrWrC,srBAGA,MAAM0X,EAAQ,wBAAiBlnB,MAElBmnB,EAAyB,CACpCC,SAAU,aACVzZ,WAAY,KACZyF,MAAO,WAEPrC,SAAU,4BAEVsW,eAAgB,6BAChBC,OAAQ,YACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,WACN6D,GAAI,WACJykB,YAAa,YACbC,KAAK,EACLR,SAGWS,EAAgC,CAC3CP,SAAU,aACVzZ,WAAY,UACZyF,MAAO,WAEPrC,SAAU,4BAEVsW,eAAgB,6BAChBC,OAAQ,YACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,WACN6D,GAAI,WACJykB,YAAa,YACbC,KAAK,EACLR,SAGWU,EAA4B,CACvCR,SAAU,aACVzZ,WAAY,KACZyF,MAAO,cAEPrC,SAAU,+BAEVsW,eAAgB,gCAChBC,OAAQ,eACRC,KAAM,MACNC,YAAY,EACZroB,KAAM,cACN6D,GAAI,cACJykB,YAAa,eACbC,KAAK,EACLR,SAGWW,EAAmC,CAC9CT,SAAU,aACVzZ,WAAY,UACZyF,MAAO,cAEPrC,SAAU,+BAEVsW,eAAgB,gCAChBC,OAAQ,eACRC,KAAM,MACNC,YAAY,EACZroB,KAAM,cACN6D,GAAI,cACJykB,YAAa,eACbC,KAAK,EACLR,SAGWY,EAAqB,CAChCV,SAAU,aACVzZ,WAAY,KACZyF,MAAO,OAEPrC,SAAU,wBAEVsW,eAAgB,yBAChBC,OAAQ,QACRC,KAAM,IACNC,YAAY,EACZroB,KAAM,OACN6D,GAAI,OACJykB,YAAa,QACbC,KAAK,EACLR,SAGWa,EAA4B,CACvCX,SAAU,aACVzZ,WAAY,UACZyF,MAAO,OAEPrC,SAAU,wBAEVsW,eAAgB,yBAChBC,OAAQ,QACRC,KAAM,IACNC,YAAY,EACZroB,KAAM,OACN6D,GAAI,OACJykB,YAAa,QACbC,KAAK,EACLR,SAGWc,EAAwB,CACnCZ,SAAU,aACVzZ,WAAY,KACZyF,MAAO,UAEPrC,SAAU,2BAEVsW,eAAgB,4BAChBC,OAAQ,WACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,UACN6D,GAAI,UACJykB,YAAa,WACbC,KAAK,EACLR,SAGWe,EAA+B,CAC1Cb,SAAU,aACVzZ,WAAY,UACZyF,MAAO,UAEPrC,SAAU,2BAEVsW,eAAgB,4BAChBC,OAAQ,WACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,UACN6D,GAAI,UACJykB,YAAa,WACbC,KAAK,EACLR,SAGWgB,EAAiC,CAC5Cd,SAAU,aACVzZ,WAAY,UACZyF,MAAO,YAEPrC,SAAU,6BAEVsW,eAAgB,8BAChBC,OAAQ,aACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,YACN6D,GAAI,YACJykB,YAAa,aACbC,KAAK,EACLR,SAGWiB,EAAiC,CAC5Cf,SAAU,aACVzZ,WAAY,WACZyF,MAAO,mBAEPrC,SAAU,oCAEVsW,eAAgB,qCAChBC,OAAQ,oBACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,mBACN6D,GAAI,mBACJykB,YAAa,oBACbC,KAAK,EACLR,SAGWkB,EAA4B,CACvChB,SAAU,aACVzZ,WAAY,UACZyF,MAAO,cAEPrC,SAAU,+BAEVsW,eAAgB,gCAChBC,OAAQ,eACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,cACN6D,GAAI,cACJykB,YAAa,eACbC,KAAK,EACLR,SAGWmB,EAA0B,CACrCjB,SAAU,aACVzZ,WAAY,WACZyF,MAAO,YAEPrC,SAAU,6BAEVsW,eAAgB,8BAChBC,OAAQ,aACRC,KAAM,IACNC,YAAY,EACZroB,KAAM,YACN6D,GAAI,YACJykB,YAAa,aACbC,KAAK,EACLR,SAGWoB,EAA+B,CAC1ClB,SAAU,sBACVzZ,WAAY,UACZyF,MAAO,iBAEPrC,SAAU,kCAEVsW,eAAgB,mCAChBC,OAAQ,kBACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,iBACN6D,GAAI,iBACJykB,YAAa,kBACbC,KAAK,EACLR,SAGWqB,EAAsC,CACjDnB,SAAU,sBACVzZ,WAAY,UACZyF,MAAO,wBAEPrC,SAAU,yCAEVsW,eAAgB,0CAChBC,OAAQ,yBACRC,KAAM,MACNC,YAAY,EACZroB,KAAM,wBACN6D,GAAI,wBACJykB,YAAa,yBACbC,KAAK,EACLR,SAGWsB,EAAgC,CAC3CpB,SAAU,sBACVzZ,WAAY,UACZyF,MAAO,kBAEPrC,SAAU,mCAEVsW,eAAgB,oCAChBC,OAAQ,mBACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,kBACN6D,GAAI,kBACJykB,YAAa,mBACbC,KAAK,EACLR,SAGWuB,EAA8B,CACzCrB,SAAU,sBACVzZ,WAAY,UACZyF,MAAO,gBAEPrC,SAAU,iCAEVsW,eAAgB,kCAChBC,OAAQ,iBACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,gBACN6D,GAAI,gBACJykB,YAAa,iBACbC,KAAK,EACLR,SAGWwB,EAA2B,CACtCtB,SAAU,6BACVzZ,WAAY,WACZyF,MAAO,aAEPrC,SAAU,8BAEVsW,eAAgB,gCAChBC,OAAQ,eACRC,KAAM,IACNC,YAAY,EACZroB,KAAM,aACN6D,GAAI,aACJykB,YAAa,eACbC,KAAK,EACLR,SAGWyB,EAA6B,CACxCvB,SAAU,sBACVzZ,WAAY,WACZyF,MAAO,eAEPrC,SAAU,gCAEVsW,eAAgB,iCAChBC,OAAQ,gBACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,eACN6D,GAAI,eACJykB,YAAa,gBACbC,KAAK,GAGMkB,EAA0B,CACrCxB,SAAU,sBACVzZ,WAAY,WACZyF,MAAO,YAEPrC,SAAU,6BAEVsW,eAAgB,8BAChBC,OAAQ,aACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,YACN6D,GAAI,YACJykB,YAAa,aACbC,KAAK,GAGMmB,EAA6B,CACxCzB,SAAU,sBACVzZ,WAAY,WACZyF,MAAO,eAEPrC,SAAU,gCAEVsW,eAAgB,iCAChBC,OAAQ,gBACRC,KAAM,KACNC,YAAY,EACZroB,KAAM,eACN6D,GAAI,eACJykB,YAAa,gBACbC,KAAK,I,kCCvWP,slCA6EO,MAOM3mB,EACS+nB,GAClBA,EAAKrhB,WACLqhB,EAAKrhB,UAAUshB,QACfD,EAAKrhB,UAAUshB,OAAOzhB,OAAS,KAC7BwhB,EAAKrhB,UAAUshB,OAAO,GAAGnqB,KALlBmC,EAMa+nB,GAAgCA,EAAKE,UAAYF,EAAKE,SAAS1hB,OAAS,EAGlG,IAAY2hB,GAAZ,SAAYA,GACV,oBACA,kBACA,wBACA,wBACA,YALF,CAAYA,MAAY,KAQjB,MAAMC,EAAmB,CAC9B,CAACD,EAAanI,SAAU,IAAQ7hB,EAAE,4BAClC,CAACgqB,EAAapI,QAAS,IAAQ5hB,EAAE,2BACjC,CAACgqB,EAAarI,WAAY,IAAQ3hB,EAAE,8BACpC,CAACgqB,EAAajI,WAAY,IAAQ/hB,EAAE,8BACpC,CAACgqB,EAAanH,OAAQ,IAAQ7iB,EAAE,2BAGlC,IAAYkqB,GAAZ,SAAYA,GACV,YACA,4BACA,gBACA,oBACA,oBACA,0BANF,CAAYA,MAA4B,KAUrCA,EAA6BhlB,IAC7BglB,EAA6BC,YAC7BD,EAA6B/kB,MAC7B+kB,EAA6BE,QAC7BF,EAA6BG,QAC7BH,EAA6BI,WANzB,MAeMC,EAA0B,CACrC5H,EACAvB,EACAoJ,EACAC,GAAiB,MAEFA,EAAiB9H,EAASvkB,KAAKssB,QAAU/H,EAASvkB,KAAKusB,QAAU,IAEnExP,IAAK0O,I,MAChB,IAAKzI,EAAYzf,OACf,OAAOkoB,EAET,IAAKW,GAAgC,IAApBA,EAASniB,OACxB,OAAI+Y,EAAYhjB,KAAKuD,SAAW,IAAuB8f,qBAC9C,IAAQoI,EAAM,CAAEloB,OAAQ,CAAE4f,OAAQ,IAAeQ,aAEtDX,EAAYhjB,KAAKuD,SAAW,IAAuB0gB,mBAC9C,IAAQwH,EAAM,CAAEloB,OAAQ,CAAE4f,OAAQ,IAAeqJ,QAEnD,IAAQf,EAAM,CAAEloB,OAAQ,CAAE4f,OAAQ,IAAeK,UAG1D,MAAM2B,EAAU,IACdiH,EACCK,GAAOA,EAAG1qB,SAASqD,OAAO,IAAoBsnB,gBAAkBjB,EAAKprB,MAElEssB,EAA4BxH,aAAO,EAAPA,EAAS5hB,OAErCqpB,EAAQ,IAAQnB,EAAM,CAC1BloB,QAA2B,QAAnB,EAAAyf,aAAW,EAAXA,EAAazf,cAAM,eAAE6oB,UACzB,IAAM,IAAOpJ,EAAYzf,OAAO6oB,SAAU,CAAES,iBAAkBpB,EAAKprB,OAAS,UAC5EssB,IAGN,GAAIC,EAAMrpB,QAAUqpB,EAAMrpB,OAAOupB,gBAAkBF,EAAMrpB,OAAOwpB,UAAW,CACzE,MAAMC,EACJ,IAAIC,KAAKL,EAAMrpB,OAAOupB,gBAAgBI,UACtC,IAAID,KAAKL,EAAMrpB,OAAOwpB,WAAWG,UACnCN,EAAMrpB,OAAO4pB,SAAW,YAAyBH,GAUnD,OAPKJ,EAAMrpB,OAEAqpB,EAAMrpB,QAAUqpB,EAAMrpB,OAAOG,WACtCkpB,EAAMrpB,OAAO4f,OAAS,YAAkByJ,IAAU,IAAe1I,QACxD0I,EAAMrpB,SAAWqpB,EAAMrpB,OAAO4f,SACvCyJ,EAAMrpB,OAAO4f,OAAS,IAAee,SAJrC0I,EAAMrpB,OAAS,CAAE4f,OAAQ,IAAee,SAMnC0I,IAIEQ,EAAmB,CAC9B7I,EACAvB,EAA+B,CAC7B1S,WAAY,GACZvO,SAAU,GACVD,KAAM,cACN9B,KAAM,IAERosB,K,MAGA,MAAMiB,EAAM,GACZ,KAAkB,QAAb,EAAA9I,EAASvkB,YAAI,eAAEusB,QAAS,IAAUhI,EAASvkB,KAAKusB,OACnD,OAAOc,EAET,MAAMC,EAAWnB,EAAwB5H,EAAUvB,EAAaoJ,GAoEhE,OAjEAkB,EAASC,QAAS9B,IACX/nB,EAA6B+nB,IAAU/nB,EAAiC+nB,KACxD,IAAf4B,EAAIpjB,QACNojB,EAAIzpB,KAAK,IAEXypB,EAAI,GAAGzpB,KAAK6nB,MAKhB6B,EAASC,QAAS9B,I,MAChB,IAAK/nB,EAAiC+nB,IAAS/nB,EAA6B+nB,GAAO,CACjF,IAAI+B,EAAOH,EAAIpjB,OAAS,EACxB,IAAK,IAAIhG,EAAI,EAAGA,EAAIopB,EAAIpjB,OAAQhG,IAC9B,IAAK,MAAMrC,KAAKyrB,EAAIppB,IAEP,QAAT,EAAArC,EAAE6rB,eAAO,eAAEptB,QAASorB,EAAKrhB,UAAUshB,OAAO,GAAGnqB,KAAK,IAClDK,EAAEvB,OAASorB,EAAKrhB,UAAUshB,OAAO,GAAGnqB,KAAK,KAEzCisB,EAAOvpB,GAIb,MAAMypB,EAAaL,EAAIG,EAAO,GAAKH,EAAIG,EAAO,GAAK,KAEjDE,GACAA,EAAW,IACXA,EAAW,GAAGtjB,WACdsjB,EAAW,GAAGtjB,UAAUshB,QACxBgC,EAAW,GAAGtjB,UAAUshB,OAAO,IAC/BgC,EAAW,GAAGtjB,UAAUshB,OAAO,GAAGnqB,MAClCmsB,EAAW,GAAGtjB,UAAUshB,OAAO,GAAGnqB,KAAK,IACvCmsB,EAAW,GAAGtjB,UAAUshB,OAAO,GAAGnqB,KAAK,KAAOkqB,EAAKrhB,UAAUshB,OAAO,GAAGnqB,KAAK,GAE5EmsB,EAAW9pB,KAAK6nB,GAEhB4B,EAAIhV,OAAOmV,EAAO,EAAG,EAAG,CAAC/B,OAM/B6B,EAASC,QAAS9B,I,MAChB,GAAI/nB,EAAiC+nB,GAAO,CAC1C,IAAI+B,EAAOH,EAAIpjB,OAAS,EACxB,IAAK,IAAIhG,EAAI,EAAGA,EAAIopB,EAAIpjB,OAAQhG,IAC9B,IAAK,MAAMrC,KAAKyrB,EAAIppB,IACL,QAAT,EAAArC,EAAE6rB,eAAO,eAAEptB,QAASorB,EAAKE,SAAS,IAAM/pB,EAAEvB,OAASorB,EAAKE,SAAS,KACnE6B,EAAOvpB,GAIb,MAAMypB,EAAaL,EAAIG,EAAO,GAAKH,EAAIG,EAAO,GAAK,KAEjDE,GACAA,EAAW,GAAG/B,UACd+B,EAAW,GAAG/B,SAAS,IACvB+B,EAAW,GAAG/B,SAAS,KAAOF,EAAKE,SAAS,GAE5C+B,EAAW9pB,KAAK6nB,GAEhB4B,EAAIhV,OAAOmV,EAAO,EAAG,EAAG,CAAC/B,OAIxB4B,GAGIM,EAA4B,CACvCpJ,EACAvB,EACAoJ,IACGD,EAAwB5H,EAAUvB,EAAaoJ,GAAU,GAEjDwB,EAA8BC,IACzC,IAAKA,EACH,OAAO,IAET,MAAM,MAAEjZ,EAAK,UAAEkZ,GAAcD,EAC7B,OAAIjZ,EAAMmZ,UAAY,IAAUD,GACvB,IAELlZ,EAAMmZ,QACD,IAELnZ,EAAMoZ,WACD,IAEF,KAWIC,EACXC,IAEA,IAAKA,GAAwC,IAAxBA,EAAajkB,OAEhC,MAAO,CAAEkkB,kBAAmB,KAAM5qB,OAAQ,IAAe6qB,oBAG3D,MAAMD,EAAoB,YAAaD,EAAc,qBAErD,IAAKC,EAEH,MAAO,CAAEA,kBAAmB,KAAM5qB,OAAQ,IAAe6qB,oBAG3D,IAAI7qB,EAAiB,YAAyB4qB,GAK9C,MAJe,MAAX5qB,IACFA,EAAS,IAAe2gB,SAGnB,CACLiK,oBACA5qB,WAIS8qB,EAAwBC,GAEjCA,GACAA,EAAevR,IAAKwR,IAAU,CAC5BluB,KAAMkuB,EAAMluB,KACZsC,MAAO4rB,EAAMC,WAKNC,EACXC,GAGEA,GACAA,EAAmB3R,IAAK4R,GAAe,OAAD,QACpCtuB,KAAMsuB,EAAUtuB,MACbsuB,EAAUhlB,OAKNilB,EAAoB,CAAC7B,EAAmB8B,EAAkBC,KACrE,MAAMC,EAAQ,IAAI9B,KAAKF,GAAWG,UAE5B8B,IADMH,EAAU,IAAI5B,KAAK4B,GAAS3B,WAAY,IAAID,MAAOC,WAC9B6B,GAAS,IAC1C,OAAO,YAAYC,EAAmBF,IAG3BG,EAAuBC,I,YAClC,MAAMnC,EAAkC,QAAtB,EAAW,QAAX,EAAAmC,aAAG,EAAHA,EAAK3rB,cAAM,eAAEwpB,iBAAS,QAAI,KACtCD,EAA4C,QAA3B,EAAW,QAAX,EAAAoC,aAAG,EAAHA,EAAK3rB,cAAM,eAAEupB,sBAAc,QAAI,KAGtD,OAAKC,IAAeD,GAA6C,YAA3B,YAAkBoC,GAC/C,IAEFN,EAAkB7B,EAAWD,GAAgB,IAGzCqC,EAAuB,CAClCC,EACAC,EACAC,KAEA,MAAMC,EAAwB,IAAYF,GAQ1C,OAPAE,EAAsBC,QAAU,IAAID,EAAsBC,QAAS,CAAEnvB,KAAM+uB,IACvEE,IACFC,EAAsBE,iBAAmB,IACpCF,EAAsBE,iBACzB,CAAEpvB,KAAM+uB,KAGL,aAAU,sBAAqBG,IAG3BG,EAAkC,CAC7CtjB,EACApK,EACA2tB,KAEA,aAAO,sBAAqB,IAA0B3tB,GACnDuM,KAAMqhB,SAC0ExJ,IAA3E,IAAOwJ,EAAeJ,QAAU3d,GAAMA,EAAExR,OAAS+L,EAAOrK,SAAS1B,OACnE8uB,EAAqB/iB,EAAOrK,SAAS1B,KAAMuvB,EAAgBD,KAG9DE,MAAOve,IACN,qBAAW,CAAEtN,MAAOsN,EAAIzN,aASxBisB,EAAmB,CAACxiB,EAAoByiB,IAExCziB,IAAe,IAAmBxG,IAC7B,cAAuB,IAAmBA,OAAOipB,IAEtDziB,IAAe,IAAmBvG,MAC7B,cAAuB,IAAmBA,SAASgpB,IAErD,KAGIC,EAAuB,CAClCC,EACAC,EAAiD,MAEjD,IAAIC,EAAQ,EACRC,EAAgBN,EAAiBG,aAAU,EAAVA,EAAY/rB,IAAKisB,GACtD,IAAKC,EACH,OAAOF,EAET,KACEA,EAAoBE,IACpBF,EAAoBE,MAAmBH,aAAU,EAAVA,EAAYttB,QAEnDytB,EAAgBN,EAAiBG,aAAU,EAAVA,EAAY/rB,MAAOisB,GAGtD,OAAO,OAAP,wBAAYD,GAAmB,CAAE,CAACE,GAAgBH,aAAU,EAAVA,EAAYttB,SAGnD0tB,EAAgBC,IAC3B,OAAQA,EAAQxuB,MACd,KAAK,gBAAcA,KACnB,KAAK,YAAUA,KACf,KAAK,qBAAmBA,KACtB,MAAO,GACT,KAAK,mBAAiBA,KACpB,MAAO,gBACT,KAAK,wBAAsBA,KACzB,MAAO,qBACT,KAAK,iBAAeA,KAClB,MAAO,aACT,KAAK,eAAaA,KAChB,MAAO,YACT,KAAK,mBAAiBA,KACpB,MAAO,gBACT,KAAK,uBAAqBA,KACxB,MAAO,oBACT,KAAK,sBAAoBA,KACvB,MAAO,mBACT,KAAK,6BAA2BA,KAC9B,MAAO,2BACT,KAAK,kBAAgBA,KACnB,MAAO,eACT,QACE,OAAO,OAIAyuB,EAAiB,CAC5BC,EACAC,EACAC,IAEOF,EAAa3mB,OAAQ8mB,IAC1B,MAAM,gBAAEC,EAAkB,IAAOD,EAAI5uB,SAErC,OAAO6uB,EAAgBC,KACpBC,GAAcA,EAAUzwB,OAASowB,GAAqBK,EAAUhvB,OAAS4uB,KAKnEK,EAAc,CAAC5sB,EAA2B6sB,IACpCA,EAAUzP,KAAM0P,GAAoBA,EAAElvB,SAAS1B,OAAS8D,EAASpC,SAAS1B,MAIhF6wB,EAAsB,CACjC3M,EACA4M,IAEwBA,EAAiBtnB,OACtCunB,KACGA,EAAGpxB,KAAKqxB,kBAAkB9P,KACzB+P,IAAM,MAAC,OAAmB,QAAnB,EAAAA,EAAGtxB,KAAKuxB,mBAAW,eAAElxB,QAASkkB,EAASxiB,SAAS1B,QAMnDmxB,EAAoB,CAC/BL,EACAM,IAE+BA,EAAe3iB,OAAO,CAACtL,EAAKkuB,KACxCA,EAAG1xB,KAAK2xB,SAAS9nB,OAAQjI,GACxCuvB,EAAiB5P,KAAM6P,IAAM,MAAC,OAAAA,aAAE,EAAFA,EAAIrvB,SAAS1B,SAAoB,QAAX,EAAAuB,aAAC,EAADA,EAAGgwB,gBAAQ,eAAE7V,QAEtD9R,OAAS,GACpBzG,EAAII,KAAK8tB,GAEJluB,GACN,IAIQquB,EAA4BtN,GACX,uBAAxBA,EAASjU,WACJ,uBAEF,gBAGIwhB,EAA+B9O,GACX,uBAA3BA,EAAY1S,WACP,0BAEF,mBAGIyhB,EAAwBtG,GACX,uBAApBA,EAAKnb,WACA,mBAEF,YAGT,IAAY0hB,EAKAC,EAIAC,GATZ,SAAYF,GACV,yBACA,2BAFF,CAAYA,MAAyB,KAKrC,SAAYC,GACV,gCADF,CAAYA,MAA6B,KAIzC,SAAYC,GACV,+BACA,sBACA,4BACA,4BAJF,CAAYA,MAAc,KAOnB,MAAMC,EAAkBC,GAC7BA,aAAQ,EAARA,EAAU7Q,KACPkL,IAAM,QAAC,OAAyB,QAAzB,EAAY,QAAZ,EAAAA,aAAE,EAAFA,EAAI1qB,gBAAQ,eAAEswB,mBAAW,eAAGL,EAA0BM,QAASJ,EAAeK,OAG7EC,EAAmBC,I,QAC9B,OAAkC,QAAlC,EAAqB,QAArB,EAAAA,aAAW,EAAXA,EAAa1wB,gBAAQ,eAAEswB,mBAAW,eAAGL,EAA0BU,SAC/DT,EAA8BU,eAEnBC,EAAeH,I,YAC1B,OAEC,QAFD,EAAkE,QAAlE,GAAoB,QAAnB,EAAAA,aAAW,EAAXA,EAAalvB,cAAM,eAAEsvB,WAA8B,QAAnB,EAAAJ,aAAW,EAAXA,EAAalvB,cAAM,eAAEuvB,oBAAY,eAAEvR,KACjEvE,GAAMA,EAAE3c,OAAS6xB,EAAeK,aAClC,eAAE5vB,OAEQowB,EAAeC,I,YAC1B,OAEC,QAFD,EAAsE,QAAtE,GAAoB,QAAnB,EAAAA,aAAW,EAAXA,EAAazvB,cAAM,eAAEsvB,WAA8B,QAAnB,EAAAG,aAAW,EAAXA,EAAazvB,cAAM,eAAE0vB,wBAAgB,eAAE1R,KACrEvE,GAAMA,EAAE3c,OAAS6xB,EAAegB,yBAClC,eAAEvwB,OAEQwwB,EAAiBhO,I,QAC5B,KAAgC,QAA3B,EAAe,QAAf,EAAAA,aAAO,EAAPA,EAAS5hB,cAAM,eAAEG,kBAAU,eAAEuG,QAChC,OAAO,IAAeia,QAGxB,OAD+B,YAAkBiB,IAItCiO,GAAwBpQ,I,UACnC,MAAMqQ,EAEL,QAFyB,EAA+B,QAA/B,EAAmB,QAAnB,EAAArQ,aAAW,EAAXA,EAAazf,cAAM,eAAEG,kBAAU,eAAE6d,KACxD5d,GAAkC,eAApBA,aAAS,EAATA,EAAWZ,cAC3B,eAAEc,QAGG8hB,EAAU0N,aAAiB,EAAjBA,EAAmBC,MAAM,2BAEnCC,EAAgC,GACtC5N,WAAS4H,QAAS+F,IAChB,MAAOpvB,EAAKvB,GAAS2wB,EAAM3zB,MAAM,gBACjC4zB,EAAOrvB,EAAI6U,QAAUuN,OAAO3jB,EAAMoW,UAGpC,MAAMya,IACHD,aAAM,EAANA,EAAQE,YAAa,KAAMF,aAAM,EAANA,EAAQ/P,SAAU,KAAM+P,aAAM,EAANA,EAAQ5P,YAAa,GAc3E,MAZqC,CACnCF,SAAS8P,aAAM,EAANA,EAAQG,aAAc,EAC/BnQ,UAAWiQ,GAAkB,EAC7B7P,WAAW4P,aAAM,EAANA,EAAQ5P,YAAa,EAChCH,QAAQ+P,aAAM,EAANA,EAAQ/P,SAAU,EAC1BY,SAASmP,aAAM,EAANA,EAAQnP,UAAW,EAC5BqP,WAAWF,aAAM,EAANA,EAAQE,YAAa,EAChCnQ,YAAYiQ,aAAM,EAANA,EAAQ5P,YAAa,EACjCyK,mBAAoB,EACpBlK,QAAS,K,kCC1lBb,oEAAO,MAAMyP,EAAa9vB,IAAY,CACpC8e,KAAKhgB,GACa,MAATA,GAAiB2jB,OAAOqN,UAAUhxB,GAE3CkB,YAGW+vB,EAAyB,iC,4jBCgD/B,MAAMC,EAA2B,CACtCjqB,EACAkqB,EAA0BlqB,KAE1B,OAAQkqB,GACN,KAAK,IACL,KAAK,IACH,MAAO,GACT,QACE,OAAOlqB,IAKPmqB,EAAqB,CACzB5oB,EACAT,EACAd,KAEA,MAAMxE,EAAS,OAAH,wBAAQsF,EAAK3I,SAASqD,QAAM,CAAE,4BAA6BwE,QAAewc,IAEtF,IAAKjb,EACH,OAAOP,QAAQC,SAGjB,MAAMmpB,EAAQ,CACZ,CACEC,GAAI,IAAU7uB,GAAU,MAAQ,UAChC+X,KAAM,mBACNxa,MAAOyC,IAIX,OAAO,aAAS+F,EAAcT,EAAMspB,IAIzBE,EAA4B,CACvC/oB,EACAhH,EACAyF,KAEA,IAAKzF,EACH,OAAOyG,QAAQC,OACb,IAAIO,MAAM,IAAQxJ,EAAE,qEAGxB,IAAKuJ,EACH,OAAOP,QAAQC,OACb,IAAIO,MACF,IAAQxJ,EAAE,8EAKhB,MAAMuyB,EAAe,IAAMhwB,EAAU,CAAC,WAAY,SAAU,+BACtDiwB,EAAkB,IAAMjwB,EAAU,CAAC,WAAY,SAAU,8BAEzDkwB,EAA0B,CAACN,EAAmB5oB,EAAchH,EAAUyF,IAG5E,IAAKuqB,EACH,OAAOvpB,QAAQS,IAAIgpB,GAYrB,OALID,IAHkB,CACpB,6BAA8BD,GAGhB,6BAA+BC,GAIxC,YAAsBjwB,EAASpC,SAASC,UAAWmyB,EAAc,CACtE,4BAA6BC,IAC5B7lB,KAAM+lB,IACP,IAAUA,EAAaC,IACrB,IAAUA,EAAO7pB,KAEX0pB,GAAoB,IAAM1pB,EAAM,CAAC,WAAY,SAAU,+BACzD2pB,EAAQzwB,KAAKmwB,EAAmB,aAASrpB,EAAK5I,MAAO4I,EAAMd,QAK1DgB,QAAQS,IAAIgpB,MAIjBG,EAAe,CACnBC,EACAC,EAAsC,GACtCC,IACG,OAAD,6B,QACF,IACE,GAAIA,EAAqB,CACvB,MAAMC,QAAwB,aAAY,CACxCC,MAAOJ,EAAM1K,SACb5lB,SAAUswB,EAAMxK,OAChB6K,KAAM,OACN9yB,UAAW0yB,aAAW,EAAXA,EAAa9xB,KAE1B,KAA4B,QAAvB,EAAAgyB,aAAe,EAAfA,EAAiBrxB,cAAM,eAAEwxB,SAC5B,MAAO,GAGX,aAAa,aAAQN,EAAOC,GAC5B,MAAO1wB,GAEP,GAAgC,OAAb,QAAf,EAAAA,aAAK,EAALA,EAAOsL,gBAAQ,eAAE/L,QAGnB,OADAwe,QAAQC,KAAK,qBAAqByS,EAAMxK,wBAAyBjmB,GAC1D,GAIT,MADA+d,QAAQC,KAAK,6BAA6ByS,EAAMxK,UAAWjmB,GACrDA,MAIJgxB,EAAW,CAAOP,EAAiBvxB,IAAyB,OAAD,6B,MAQ/D,WAPmB,aAAY,CAC7B2xB,MAAOJ,EAAM1K,SACb5lB,SAAUswB,EAAMxK,OAChB6K,KAAM,SACNz0B,KAAM6C,EAAInB,SAAS1B,KACnB2B,UAAWkB,EAAInB,SAASC,aAEhBuB,OAAOwxB,QAGf,OADAhT,QAAQC,KAAK,0CAA0CyS,EAAMxK,UAAU/mB,EAAInB,SAAS1B,SAC7E,KAET,IACE,aAAa,aAAQo0B,EAAOvxB,GAC5B,MAAOc,GAEP,GAAgC,OAAb,QAAf,EAAAA,aAAK,EAALA,EAAOsL,gBAAQ,eAAE/L,QAMnB,OAJAwe,QAAQC,KACN,YAAYyS,EAAMxK,UAAU/mB,EAAInB,SAAS1B,yCACzC2D,GAEK,KAIT,MADA+d,QAAQC,KAAK,iCAAiCyS,EAAMxK,UAAU/mB,EAAInB,SAAS1B,QAAS2D,GAC9EA,MAIJixB,EAAiB,CAAO9wB,EAA2B+wB,IAAqC,OAAD,6B,QAC3F,MAAMC,EAAuD,QAA9B,EAAiB,QAAjB,EAAAhxB,EAASpC,gBAAQ,eAAEswB,mBAAW,QAAI,GAC3D+C,EAAU,YAAcD,EAAuB,6BAC/CE,QAAmB,aAAQ,cAAa,CAC5CzyB,GAAIuB,EAASpC,SAASC,YAExB,IAAIszB,EACJ,IAAIJ,aAAY,EAAZA,EAAcjrB,QAAS,EACzBqrB,EAAWJ,aAAY,EAAZA,EAAcpmB,OAAO,CAACymB,EAAUC,K,QAgBzC,MAAO,IAAID,MAfuB,QAAjB,EAAO,QAAP,EAAAC,EAAGx1B,YAAI,eAAE2xB,gBAAQ,QAAI,IAChB7iB,OAAO,CAACtO,EAAGoB,K,QAC/B,IAAI6zB,EACJ,MAAMC,EAAc9zB,EAAE4K,QAAU,UAAY4oB,EACtCO,EAAiB/zB,EAAE4K,SAAW5K,EAAEwzB,GACtC,GAAIO,EAAgB,CAClB,MAAMvG,EACgC,QAApC,EAA8B,QAA9B,EAAAuG,EAAeC,uBAAe,eAAEv1B,YAAI,QACpC,GAAG8D,EAASpC,SAAS1B,QAAQq1B,mBAC/BD,EAAiBJ,EAAW9T,KACzBnV,GAA4BA,EAAOrK,SAAS1B,OAAS+uB,GAG1D,OAAOqG,EAAiB,IAAIj1B,EAAGw0B,EAAS,cAAaS,IAAmBj1B,GACvE,MAEF,QACE,CACL,MAAMq1B,EAAwBR,EAAW9T,KACtCnV,GACCA,EAAOrK,SAAS1B,OAAY8D,EAASpC,SAAS1B,KAArB,2BAEvBy1B,EAAwBT,EAAW9T,KACtCnV,GACCA,EAAOrK,SAAS1B,OAAS,GAAG8D,EAASpC,SAAS1B,QAAQ+0B,oBAE1DE,EAAW,CACTN,EAAS,cAAaa,GACtBb,EAAS,cAAac,IAG1B,OAAOR,KAGIS,EAAyB5xB,GAA0D,OAAD,6BAC7F,MAAM6xB,EAAO,GAEPd,QAAqBV,EAAa,mBAAkB,CAAE5xB,GAAIuB,EAASpC,SAASC,YAC5Ei0B,QAAezB,EAAa,aAAY,CAAE5xB,GAAIuB,EAASpC,SAASC,YAChEgvB,QAAkBwD,EAAa,gBAAe,CAAE5xB,GAAIuB,EAASpC,SAASC,YAAa,GACnFmvB,QAAyBqD,EAC7B,uBACA,CACE5xB,GAAIuB,EAASpC,SAASC,YAExB,GAEIyvB,QAAuB+C,EAC3B,qBACA,CACE5xB,GAAIuB,EAASpC,SAASC,YAExB,GAEIk0B,QAAsB,6BAEtBC,EAAgB,aAAS,aAAahyB,IACtCiG,EAAY,CAChB8qB,aAAc,CACZvrB,KAAMurB,EACNkB,QAAQ,EACRC,UAAW,MAEbJ,OAAQ,CACNtsB,KAAMssB,EACNG,QAAQ,EACRC,UAAW,OAGTC,EAAuB,aAA2BnyB,EAAUiG,GAC5DmsB,GAAwB,IAAUD,GAClC/R,EAAW,YAAYpgB,EAAU6sB,GACvC,IAAIwF,EAAkD,GAClDC,EAA8C,GAElD,MAAMC,EAAe,CAAC,eAAc,aAAY,oBAC1CC,EAAsB,CAAC,IAAqB,oBAE7C,IAAUpS,KACbmS,EAAa9yB,KAAK,iBAClB+yB,EAAoB/yB,KAAK,iBACzB4yB,EAA2B,YAAoBjS,EAAU4M,GACzDsF,EAAyB,YAAkBD,EAA0B/E,IAEvE,MAAMmF,EAAe,IAAYzyB,GAC3B0yB,EAAgB,CAACpC,EAAiBqC,KACtC,MAAMC,EAAM/B,EAASP,EAAOqC,GAC5BC,GAAOf,EAAKpyB,KAAKmzB,IAEfR,GACFD,EAAqB/I,QAASiI,IAC5BqB,EAAc,mBAAkBrB,KAGpC,MAAMwB,EAAsB,CAACC,EAAoBH,KAC/CG,EAAO1J,QAASkH,GAAUoC,EAAcpC,EAAOqC,KAejD,OAbI,qCAA2B,aAAa3yB,KAC1C0yB,EAAc,aAAS,aAAa1yB,IAAYA,GAC9C+xB,EAAc3U,KAAM2V,GAAYA,EAAQp1B,OAASqC,EAASrC,OAC5D+0B,EAAcV,EAAehyB,GAE3BqyB,EAAyBvsB,OAAS,GACpCusB,EAAyBjJ,QAAS6D,GAAOyF,EAAc,uBAAsBzF,IAG3EqF,EAAuBxsB,OAAS,GAClCwsB,EAAuBlJ,QAASmE,GAAOmF,EAAc,qBAAoBnF,IAGnEvtB,EAASrC,MACf,KAAK,iBAAeA,KACpB,KAAK,mBAAiBA,KACtB,KAAK,WAASA,KACd,KAAK,eAAaA,KAClB,KAAK,IAAoBA,KACvB+0B,EAAcV,EAAehyB,GAC7B,MACF,KAAK,kBAAgBrC,KACrB,KAAK,wBAAsBA,KACzB+0B,EAAcV,EAAehyB,GAC7B6yB,EAAoBN,EAAcvyB,GAClC,MACF,KAAK,IAAoBrC,KACvBk1B,EAAoBL,EAAqBC,GACzC,MACF,KAAK,IAAyB90B,KAC9B,KAAK,IAAeA,KAClB+0B,EAAcV,EAAehyB,GAajC,OAPIoyB,GACFP,EAAKpyB,cAAeqxB,EAAe9wB,EAAUmyB,IAE3C/R,GACFyR,EAAKpyB,cAAeqxB,EAAe9wB,IAG9ByG,QAAQS,IAAI2qB,O,kCCzRrB,IAAYmB,EAOAC,EAOAC,EAdZ,+GAAYF,GACV,wEACA,wDACA,gEACA,gDAJF,CAAYA,MAAY,KAOxB,SAAYC,GACV,sBACA,4BACA,cACA,oBAJF,CAAYA,MAAU,KAOtB,SAAYC,GACV,wBACA,wBACA,wBAHF,CAAYA,MAAa,M,yDCyFzB,kCAAO,MAAMC,EAAmD,CAC9DzC,MAAO,aACP0C,QAAS,KACTz1B,KAAM,gB,gFCtIR,kCAAO,MAAM01B,EAA+C,CAC1D3C,MAAO,aACP0C,QAAS,KACTz1B,KAAM,Y,kCCnDR,IAAY21B,EAgBAC,EAhBZ,2CAAYD,GACV,0BACA,wBACA,kBACA,oBAEA,+BACA,gCACA,0CACA,oBACA,wBACA,oBACA,cACA,YAbF,CAAYA,MAAc,KAgB1B,SAAYC,GACV,8BADF,CAAYA,MAAe,M,sZCF3B,MAAMC,EAA2C,CAC/C,CACEt3B,KAAM,UACN0C,KAAM,IAAe60B,QACrB1V,eAAgB,qBAChBC,SAAU,GAEZ,CACE9hB,KAAM,aACN0C,KAAM,IAAe80B,WACrB3V,eAAgB,gCAChBC,SAAU,GAEZ,CACE9hB,KAAM,sBACN0C,KAAM,IAAe+0B,oBACrB5V,eAAgB,qBAChBC,SAAU,GAEZ,CACE9hB,KAAM,gBACN0C,KAAM,IAAeg1B,IACrB7V,eAAgB,IAChBC,SAAU,EACVG,gBAAiB,MAmBR0V,EAAyB,CACpCC,EACA1V,EACA2V,GAA+B,IACE,OAAD,6BAChC,IACIC,EADAC,EAAyC,GAEzChC,GAAkB,EAClBC,EAAY,KAEhB,MAAMgC,EAAmB9V,QACfA,EAAWrG,kBACjB,IAAWoc,mBACf,IACIC,EADA7V,EAA0B,GAG9B,GAAI2V,IAAqB,IAAW/b,UAClC,IACE,MAAM,MAAEtO,SAAgBuU,EAAWzU,gBAAgB,CAAEkT,eAAe,IACpEmX,QAAgC,YAAyBD,EAAqB3V,GAE9E6V,QAA2BxtB,QAAQS,IACjCssB,EAAmB5a,IAAsC6L,GAAa,OAAD,6BAKnE,OAJAlG,EAAgB1U,EAAMnE,OAAQkW,GAAM6I,EAAS1G,eAAeS,KAAK5C,IAC7D2C,EAAczY,OAAS,GAAK2e,EAAStG,kBACvCiW,QAA2B3P,EAAStG,gBAAgBC,IAE/C,CACLliB,KAAMuoB,EAASvoB,KACf0C,KAAM6lB,EAAS7lB,KACfof,SAAUyG,EAASzG,SACnBO,gBACA6V,2BAINnC,GAAS,EACT,MAAO9kB,GACP8kB,GAAS,EACTC,EAAY/kB,EAAIzN,aAGlBuyB,GAAS,EAaX,OAVK+B,IACHC,EAAqBA,EAAmBvuB,OACrC+e,GAAaA,EAAS7lB,OAAS,IAAe+0B,sBAInDM,EAAqBA,EAClBvuB,OAAQ+e,IAAY,MAAC,QAAEA,EAASlG,cAAczY,WAAuC,QAA3B,EAAA2e,EAAS2P,0BAAkB,eAAEtuB,UACvF1J,KAAK,CAACqiB,EAAIC,IAAOA,EAAGV,SAAWS,EAAGT,UAE9B,CACLiU,SACAC,YACAgC,mBACAG,WAAYJ,O,kCCpHhB,knBAEO,MAAMK,EAAoB,eACpBC,EAAkB,aAClBC,EAAkB,aAClBC,EAA0B,qBAC1BC,EAAyB,oBACzBC,EAAuB,kBACvBC,EAA6B,0BAC7BC,EAAqB,eACrBC,EAA0B,oBAC1BC,EAAuB,kBACvBC,EAAwB,mBACxBC,EAAwB,mBACxBC,EAAgB,WAEhBC,EAA2B,IAC3BC,EAA4B,IAC5BC,EAA6B,CACxC,IACA,IACA,IAAoB,GACpB,KAGWC,EAAsB,EAGtBC,EAAW,O,kCC5BxB,ijBAmDO,MAAMC,EAAe,CAACC,EAAyBC,KACpD,KAAKD,GAAUA,EAAK3vB,OAAS,GAAO4vB,GAClC,OAAO,KAET,IAAIrV,EAAYoV,EAAK,GACrB,GAAc,sBAAVC,EACF,IAAK,IAAI51B,EAAI,EAAGA,EAAI21B,EAAK3vB,OAAQhG,IAC/BugB,EACEoV,EAAK31B,IACL21B,EAAK31B,GAAGlC,UACR63B,EAAK31B,GAAGlC,SAAS83B,IACjB,IAAI5M,KAAK2M,EAAK31B,GAAGlC,SAAS83B,IAAU,IAAI5M,KAAKzI,EAAUziB,SAAS83B,IAC5DD,EAAK31B,GACLugB,OAEH,GAAc,cAAVqV,GAAmC,mBAAVA,EAClC,IAAK,IAAI51B,EAAI,EAAGA,EAAI21B,EAAK3vB,OAAQhG,IAC/BugB,EACEoV,EAAK31B,IACL21B,EAAK31B,GAAGV,QACRq2B,EAAK31B,GAAGV,OAAOs2B,IACf,IAAI5M,KAAK2M,EAAK31B,GAAGV,OAAOs2B,IAAU,IAAI5M,KAAKzI,EAAUjhB,OAAOs2B,IACxDD,EAAK31B,GACLugB,OAGRA,EAAYoV,EAAKA,EAAK3vB,OAAS,GASjC,OAPKua,EAAUjhB,SACbihB,EAAY,OAAH,wBAAQA,GAAS,CAAEjhB,OAAQ,CAAEu2B,aAAc,CAAEvN,MAAO,QAE1D/H,EAAUjhB,OAAOw2B,qBACpBvV,EAAUjhB,OAAS,OAAH,wBAAQihB,EAAUjhB,QAAM,CAAEw2B,mBAAoB,MAEhEvV,EAAUjhB,OAAOw2B,mBAAqB,YAAyBvV,GACxDA,GAGIwV,EAAoB,CAC/BhJ,EACAiJ,IAEOjJ,EAAUjU,IAAKwH,IACpB,MAAM2V,EAAiBD,EAAapwB,OACjCswB,IAAM,MAAC,OAAkB,QAAlB,EAAAA,EAAGp4B,SAASqD,cAAM,eAAG,0BAA2Bmf,EAASxiB,SAAS1B,OAG5E,OADAkkB,EAASC,UAAYmV,EAAaO,EAAgB,qBAC3C3V,IAIE6V,EAAqB72B,IAChC,OAAQA,GACN,KAAK,IAAeggB,UAClB,MAAO,CAAE1f,QAAS,IAAQjC,EAAE,8BAA+By4B,QAAS,yBACtE,KAAK,IAAe7W,OAClB,MAAO,CAAE3f,QAAS,IAAQjC,EAAE,2BAA4By4B,QAAS,2BACnE,KAAK,IAAeC,cAClB,MAAO,CACLz2B,QAAS,IAAQjC,EAAE,gDACnBy4B,QAAS,2BAEb,KAAK,IAAe5W,QAEpB,KAAK,IAAe,eAClB,MAAO,CAAE5f,QAAS,IAAQjC,EAAE,4BAA6By4B,QAAS,wBAEpE,KAAK,IAAejW,QAClB,MAAO,CAAEvgB,QAAS,IAAQjC,EAAE,4BAA6By4B,QAAS,yBACpE,KAAK,IAAe1W,UAClB,MAAO,CAAE9f,QAAS,IAAQjC,EAAE,8BAA+By4B,QAAS,yBACtE,KAAK,IAAe/W,WAClB,MAAO,CAAEzf,QAAS,IAAQjC,EAAE,+BAAgCy4B,QAAS,yBACvE,KAAK,IAAe7N,KACpB,KAAK,IAAetI,QAClB,MAAO,CAAErgB,QAAS,IAAQjC,EAAE,4BAA6By4B,QAAS,wBACpE,QACE,MAAO,CACLx2B,QAAS,IAAQjC,EAAE,gDACnBy4B,QAAS,0BAQJE,EAA8BvX,I,cACzC,MAAMwX,GACyB,QAA7B,EAAqB,QAArB,EAAAxX,aAAW,EAAXA,EAAajhB,gBAAQ,eAAEqD,cAAM,eAAG,IAAoBmf,aAAkC,QAArB,EAAAvB,aAAW,EAAXA,EAAajhB,gBAAQ,eAAE1B,MACpFy5B,GAAkC,QAAnB,EAAA9W,aAAW,EAAXA,EAAazf,cAAM,eAAEu2B,gBAAiC,QAAjB,EAAA9W,aAAW,EAAXA,EAAahjB,YAAI,eAAE85B,cAC7E,OAAKU,GAAiBV,EAGf,CACLxpB,WAAY,YAAmB,iBAC/BxO,KAAM,gBAAcA,KACpBC,SAAU,CACR1B,KAAMm6B,EACNx4B,UAAWghB,EAAYjhB,SAASC,WAElChC,KAAM85B,GATC,MAqCEW,EAAgB,CAC3BC,EACAnW,EACA6H,K,cAEA,MAAMuO,EA7B6B,CAACC,I,YACpC,IAAKA,EACH,OAAO,EAIT,OAF8D,QAA1C,IAAqB,QAArB,EAAAA,EAAiB56B,YAAI,eAAEusB,QAAS,IAAItiB,cAAM,QAAI,IACA,QAA5C,IAAqB,QAArB,EAAA2wB,EAAiB56B,YAAI,eAAEssB,UAAW,IAAIriB,cAAM,QAAI,IAwBnD4wB,CAAsBtW,GApBA,CAACqW,I,YAC1C,IAAKA,EACH,OAAO,EAUT,OALU,QAFP,IAAqB,QAArB,EAAAA,EAAiB56B,YAAI,eAAEusB,QAAS,IAAI1iB,OAClC4hB,IAAQ,QAAC,MAAuB,UAAX,QAAZ,EAAAA,EAAKgC,eAAO,eAAE3rB,OAA0C,iBAAX,QAAZ,EAAA2pB,EAAKgC,eAAO,eAAE3rB,QACzDmI,cAAM,QAAI,IAIJ,QAFP,IAAqB,QAArB,EAAA2wB,EAAiB56B,YAAI,eAAEssB,UAAW,IAAIziB,OACpC4hB,IAAQ,QAAC,MAAuB,UAAX,QAAZ,EAAAA,EAAKgC,eAAO,eAAE3rB,OAA0C,iBAAX,QAAZ,EAAA2pB,EAAKgC,eAAO,eAAE3rB,QACzDmI,cAAM,QAAI,IASuC6wB,CAA4BvW,GAC3EwW,EAAW,K,MACf,OAAuB,QAAnB,EAAAL,aAAW,EAAXA,EAAan3B,cAAM,eAAE6oB,UAChBxd,OAAOC,KAAK6rB,EAAYn3B,OAAO6oB,UAEpCA,EACKA,aAAQ,EAARA,EAAUrP,IAAKie,GAASA,EAAKj5B,SAAS1B,MAExC,IAEH46B,EAAgBF,IAAW9wB,OAC3BixB,IAAwC,QAAnB,EAAAR,aAAW,EAAXA,EAAan3B,cAAM,eAAE43B,eAAgB,IAAIlxB,OAC9D0iB,EAAyB,CAC7ByB,mBAAoB,EACpBlK,QAAS,EACTT,QAAS,EACTF,UAAW,EACXC,OAAQ,EACRG,UAAW,EACXS,QAAS8W,GAGX,IAAuB,QAAnB,EAAAR,aAAW,EAAXA,EAAan3B,cAAM,eAAE6oB,WAAYA,EAAU,CAC7C2O,IAAWxN,QAASpI,IAClB,MAAM5hB,EAAS,aACb6oB,aAAQ,EAARA,EAAU7K,KAAMyZ,GAASA,EAAKj5B,SAAS1B,OAAS8kB,KAC9CuV,EAAYn3B,OAAO6oB,SAASjH,IAEjB,cAAX5hB,EACFopB,EAAW,IAAepJ,aACN,YAAXhgB,EACTopB,EAAW,IAAelJ,WACN,WAAXlgB,EACTopB,EAAW,IAAenJ,UACN,cAAXjgB,EACTopB,EAAW,IAAehJ,aAE1BgJ,EAAW,IAAezI,aAI9B,MAAMkX,EAAwBzO,EAAW,IAAenJ,QAAU,EAC5D6X,EACJ,YAAyBX,KAAiB,IAAe/W,UACrD2X,EACJX,GAAcM,EAAgBN,EAAaM,EAAgBC,EAAoBP,EAE7ES,GAAyBC,EAC3B1O,EAAW,IAAehJ,YAAc2X,EAExC3O,EAAW,IAAezI,UAAYoX,MAGS,WAAb,QAApC,EAA+B,QAA/B,EAAmB,QAAnB,EAAAZ,aAAW,EAAXA,EAAan3B,cAAM,eAAEG,kBAAU,eAAG,UAAE,eAAEH,UACtCm3B,aAAW,EAAXA,EAAa16B,KAAKuD,UAAW,IAAuB8f,qBAEpDsJ,EAAW,IAAehJ,WAAagX,GAC9BD,aAAW,EAAXA,EAAa16B,KAAKuD,UAAW,IAAuB0gB,mBAC7D0I,EAAW,IAAezI,UAAYyW,EAEtChO,EAAW,IAAeyB,sBAE5B,OAAOzB,GAGI4O,EAAgCz5B,GACvCA,IAAS,mBAAiBA,KACrB,mBAELA,IAAS,YAAUA,WAAiBskB,IAATtkB,EACtB,YAEF,KAGI05B,EAA2B15B,IACrCy5B,EAA6Bz5B,IAAS,aAAWA,KAEvC25B,EAAmC35B,GAC1CA,IAAS,6BAA2BA,KAC/B,6BAELA,IAAS,sBAAoBA,WAAiBskB,IAATtkB,EAChC,sBAEF,KAGI45B,EAA8B55B,IACxC25B,EAAgC35B,IAAS,uBAAqBA,KAapD65B,EAAiC75B,IAC5C,MAAM2yB,EAAQ8G,EAA6Bz5B,GAC3C,OAAO,aAAkB2yB,IAGdmH,EAAoB,CAC/B5Y,EACAoJ,KAEA,MAAMyP,EAAezP,GAAYqO,EAAczX,OAAaoD,EAAWgG,GACvE,OAAOyP,aAAY,EAAZA,EAAcpY,SAGVqY,EAA4B,CACvC9Y,EACAoJ,MAGEpJ,IACC4Y,EAAkB5Y,EAAaoJ,GAAY,GAC1C,YAAyBpJ,KAAiB,IAAeS,UAGlDsY,EAA4C,CACvD/Y,EACAgZ,MAGEhZ,KACCgZ,aAAgB,EAAhBA,EAAkBvY,SAAU,GAC3B,YAAyBT,KAAiB,IAAeS,UAGlDwY,EAA8B,CACzCjZ,EACAoJ,MAGEpJ,GACA4Y,EAAkB5Y,EAAaoJ,GAAY,GAC3C,YAAyBpJ,KAAiB,IAAeW,WAGhDuY,EAA8C,CACzDlZ,EACAgZ,MAGEhZ,IACAgZ,aAAgB,EAAhBA,EAAkBvY,SAAU,GAC5B,YAAyBT,KAAiB,IAAeW,Y,kCCjV7D,0IAWO,MAAMwY,EAAuB,4BAClC,cAAmC,YAAnC,c,oBAIW,KAAAvnB,MAAmC,CAC1CzE,sBAAuB,IAAsB3D,SAE/C,qBACE,IAAK,IAAUoB,KAAK7I,MAAM7B,IAAIyG,MAAO,CACnC,MAAMwG,EAAwB,YAAkBvC,KAAK7I,MAAM7B,IAAIyG,MAC3DiE,KAAKgH,MAAMzE,wBAA0BA,GACvCvC,KAAKoH,SAAS,CACZ7E,2BAKR,SACE,MAAM,IAAEjN,EAAG,UAAEk5B,GAAcxuB,KAAK7I,OAC1B,sBAAEoL,GAA0BvC,KAAKgH,MACvC,IAAKzE,EACH,OAAO,gBAAC,IAAU,MAEpB,MAAME,EAAQ+rB,aAAS,EAATA,EAAWttB,OAAO,CAACtL,EAAKmU,KAAK,MAAC,sCAAMnU,GAAG,CAAE,CAACmU,IAAY,QAAR,EAAAzU,EAAIyG,YAAI,eAAGgO,KAAM,MAAO,IAEpF,OACE,gBAAC,KAAS,iBAAKzU,GACb,gBAAC,IAAiB,iBACZ0K,KAAK7I,MAAK,CACdoL,sBAAuBA,EACvBjN,IAAKA,EAAIyG,KACT0G,MAAOA,SAQNgsB,EAAa,EAAGv6B,WAC3B,MAAMkO,EAAS,uBACT,EAAEpO,GAAM,2BACd,OACE,gBAAC,IAAQ,CACPwI,UAAW,CAAC,CAAEtI,OAAMzB,KAAM2P,EAAO3P,KAAM2B,UAAWgO,EAAOpN,GAAI05B,QAAQ,EAAOC,KAAM,SAElF,gBAACJ,EAAoB,CAACC,UAAW,CAAC,OAAQ,YAAazpB,eAAgB/Q,EAAE,oB,kCC1D/E,+DAKO,MAAM46B,EAAe,KAC1B,MAAMxsB,EAAS,sBACTG,EAAwBH,EAAOjN,KACrC,OACE,gBAAC,IAAiB,CAChBsN,MAAO,CAAEtO,SAAU,CAAEC,UAAWgO,EAAOpN,KACvCuN,sBAAuBA,EACvB3C,UAAU,M,gFCWhB,IAAYivB,EAAZ,2CAAYA,GACV,6BACA,iCACA,6CACA,+CACA,uDACA,iCACA,2CACA,mDARF,CAAYA,MAAU,M,kCCTtB,oEAAO,MAAMC,EAAmB,CAC9Br8B,KAAM,QACN0C,KAAM,OACNid,SAAU,OACV2c,gBAAiBva,OAAO,CAAC,WAAWC,KAAK,MACzCua,cAAe,CAAC,YAGLC,EAAoB,CAC/Bx8B,KAAM,SACN0C,KAAM,OACNid,SAAU,OACV2c,gBAAiBva,OAAO,CAAC,cAAcC,KAAK,MAC5Cua,cAAe,CAAC,eAAgB,UAAW,gBAGhCE,EAAoB,CAC/Bz8B,KAAM,SACN0C,KAAM,SACNid,SAAU,KACV2c,gBAAiBva,OAAO,CAAC,WAAY,aAAc,cAAcC,KAAK,MACtEua,cAAe,CAAC,UAAW,aAAc,eAG9BG,EAAkB,CAC7B18B,KAAM,OACN0C,KAAM,OACNid,SAAU,OACV2c,gBAAiBva,OAAO,CAAC,UAAW,WAAY,aAAaC,KAAK,MAClEua,cAAe,CAAC,UAAW,WAAY,cAG5BI,EAAoB,CAC/B38B,KAAM,SACN0C,KAAM,SACNid,SAAU,aACV2c,gBAAiBva,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACzFua,cAAe,CAAC,WAAY,eAAgB,cAAe,iBAGhDK,EAA0B,CACrC58B,KAAM,iBACN0C,KAAM,gBACNid,SAAU,aACV2c,gBAAiBva,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACzFua,cAAe,CAAC,WAAY,eAAgB,cAAe,iBAGhDM,EAAiB,CAC5B78B,KAAM,MACN0C,KAAM,MACNid,SAAU,MACV2c,gBAAiBva,OAAO,CAAC,YAAa,iBAAiBC,KAAK,MAC5Dua,cAAe,CAAC,YAAa,kBAGlBO,EAAoB,CAC/B98B,KAAM,SACN0C,KAAM,SACNid,SAAU,SACV2c,gBAAiBva,OAAO,CAAC,mBAAoB,YAAYC,KAAK,MAC9Dua,cAAe,CAAC,mBAAoB,aAGzBQ,EAAkB,CAC7B/8B,KAAM,OACN0C,KAAM,OACNid,SAAU,OACV2c,gBAAiBva,OAAO,CAAC,WAAY,YAAYC,KAAK,MACtDua,cAAe,CAAC,WAAY,aAWjB3a,EAAa,CARO,CAC/B5hB,KAAM,SACN0C,KAAM,SACNid,SAAU,KACV2c,gBAAiBva,OAAO,CAAC,eAAgB,aAAaC,KAAK,MAC3Dua,cAAe,CAAC,eAAgB,eAKhCE,EACAD,EACAH,EACAM,EACAC,EACAG,EACAF,EACAC,EACAJ,GAGWM,EAAqB,CAChC,QACA,UACA,gBACA,MACA,WACA,c,kCCjHF,2F,kCCAA,kFAEO,SAAS5a,EAAiBzU,GAK/B,OAJmB,IAAW+O,IAAKnb,IACjC,MAAM07B,EAAetvB,EAAMnE,OAAQkW,GAAcne,EAAE+6B,gBAAgBha,KAAK5C,IACxE,MAAO,CAAE5R,UAAWvM,EAAEmB,KAAMid,SAAUpe,EAAEoe,SAAUhS,MAAOsvB,KAGxDzzB,OAAQpJ,GAAiBA,EAAEuN,MAAM/D,OAAS,GAC1C1J,KAAK,CAACC,EAAGC,IAAMA,EAAEuN,MAAM/D,OAASzJ,EAAEwN,MAAM/D,QAGtC,SAASszB,EAAetvB,GAC7B,IACE,MAAMuU,EAAchT,KAAKC,MAAMxB,GAC/B,OAAO,IAAmB4iB,KAAM2M,GAAQA,KAAOhb,EAAYib,cAC3D,SACA,OAAO,K,kCCjBX,kGASO,SAASC,EACdzF,EACA0F,EACA5hB,EACAhT,EACAqD,EACA4P,EACAC,GAEA,IAAI3O,EACAmO,EACJ,OAAQrP,aAAM,EAANA,EAAQrJ,MACd,KAAK,aAAWiJ,UACdsB,EAAa,IAAciO,WAC3BE,EAAgBrP,EAAOzC,KACvB,MACF,KAAK,aAAW0C,QACdiB,EAAa,IAAcswB,IAC3BniB,EAAgBrP,EAAO,kBACvB,MACF,QACEkB,EAAa,IAAcuwB,QAE/B,MAAMC,EAAuB,CAC3BniB,IAAKsc,EACLlc,MACAhT,aACAuE,aACAmO,gBACAO,cACAC,kBAGF,OAAQ0hB,GACN,KAAK,IAAY5qB,OACf,OAAO,IAAI,IAAc+qB,GAC3B,KAAK,IAAY5qB,UACf,OAAO,IAAI,IAAiB4qB,GAC9B,KAAK,IAAY9qB,OACf,OAAO,IAAI,IAAc8qB,GAC3B,KAAK,IAAY7qB,MACf,OAAO,IAAI,IAAa6qB,GAC1B,QACE,OAAO,Q,kCCpDb,mE,kCCAA,gDAEO,MAAMC,EAKX,YAAYC,GACVpwB,KAAKowB,QAAUA,EACfpwB,KAAKqwB,eAAiBrwB,KAAK6B,QAG7B,QACE,IAAIyuB,EAAgC,GACpC,IACEA,EAAgB,gBAAMtwB,KAAKowB,SAC3B,UACF,OAAOE,EAGT,mBACE,MAAMC,EAAMvwB,KAAKqwB,eAAep0B,OAAQ2E,GAA+B,WAAXA,EAAEnO,MAC9D,GAAI89B,EAAIl0B,OAAS,EAAG,CAClB,MAAMm0B,EAAgBD,EAAI,GAC1B,GAAKC,EAAcC,KAAKp0B,OAAoB,EAAG,OAAOqc,OAAO8X,EAAcC,KAAK,IAElF,OAAO,Q,kCCzBX,6eAwCO,MAWMC,EAAsB,CAAC30B,EAAMtJ,K,oBACxC,KAAKsJ,aAAI,EAAJA,EAAMssB,WAAWtsB,aAAI,EAAJA,EAAMurB,iBAAiBvrB,aAAI,EAAJA,EAAMqnB,WACjD,OAAO,KAGT,MAAMuN,EAAqB7zB,IAAQ,UAAC,OAA6B,QAA7B,EAAiB,QAAjB,EAAS,QAAT,EAAAA,EAAK1K,YAAI,eAAEuL,cAAM,eAAExC,kBAAU,QAAI,MAC/Dy1B,EAA+B,QAAlB,EAAY,QAAZ,EAAA70B,aAAI,EAAJA,EAAMssB,cAAM,eAAEtsB,YAAI,eAAE4X,KACpCvb,GAA2BA,EAAMjE,SAAS1B,OAASA,GAEtD,GAAIm+B,EAAY,CAEd,OADmBD,EAAkBC,GAIvC,MAAMC,EAA0C,QAAxB,EAAkB,QAAlB,EAAA90B,aAAI,EAAJA,EAAMurB,oBAAY,eAAEvrB,YAAI,eAAE4X,KAC/Cmd,GAAiCA,EAAY38B,SAAS1B,OAASA,GAElE,GAAIo+B,EAAiB,CAEnB,OADmBF,EAAkBE,GAIvC,MAAME,EAAqC,QAArB,EAAe,QAAf,EAAAh1B,aAAI,EAAJA,EAAMqnB,iBAAS,eAAErnB,YAAI,eAAE4X,KAC1CgD,GAA8BA,EAASxiB,SAAS1B,OAASA,GAE5D,GAAIs+B,EAAe,CACjB,MAAMC,EAA8C,QAA3B,EAAmB,QAAnB,EAAAD,aAAa,EAAbA,EAAe3+B,YAAI,eAAEgQ,cAAM,eAAEuR,KACnDgN,GAAyB,iBAAfA,EAAMluB,MAEnB,GAAIu+B,EACF,OAAOA,EAAiBpQ,QAG5B,OAAO,MAMIqQ,EAAyB,CACpC16B,EACA26B,EACA/7B,EACAg8B,EACAC,GAAiC,EACjC50B,KAEA,MAAM,iBAAE60B,EAAmB,IAAOH,EAC5BI,EAAQ,IAAM/6B,EAAU,gBACxBg7B,EAAoB,IAAMh7B,EAAU,kBAAmB,IACvDgxB,EAAyB,IAAMhxB,EAAU,uBAAwB,IACjEi7B,EAAkB,IAAMj7B,EAAU,gBAAiB,IACnD4E,EAAau1B,EAAoBl0B,EAAWg1B,GAC5CC,EACJ,YAAqB,QAAQF,EAAkB,8BAC/C,YAAqB,QAAQA,EAAkB,2BACjD,MAAO,CACLx5B,GAAIu5B,EACJ7+B,MAAM8D,aAAQ,EAARA,EAAUpC,SAAS1B,OAAQ8+B,EAAkB,8BACnDp8B,OACAoB,WACAiG,UAAW,OAAF,wBAAO00B,GAAY,CAAEQ,wBAAyBN,IACvDr1B,KAAM,CACJs1B,mBACAn9B,KAAM,aAAaqC,GACnBo7B,QAASpK,EAAuB,6BAChCtsB,OAAQssB,EAAuB,4BAC/BqK,OAAQrK,EAAuB,4BAC/BpsB,aACA02B,aAAcJ,GAAoBN,EAClCW,qBACE38B,GACCA,IAAS,KACRA,IAAS,KACTA,IAAS,MAEP,aAAiBoB,EAAU,sBAQ1Bw7B,EAAsB,CACjCx7B,EACApB,EACA4G,EACAi2B,EACAC,EACA10B,EACAua,K,MAEA,MAAMpO,EAAMnT,aAAQ,EAARA,EAAUpC,SAASuV,IACzBjX,EAAO8D,aAAQ,EAARA,EAAUpC,SAAS1B,KAC1B0V,EAAiC,QAAzB,EAAA5R,aAAQ,EAARA,EAAUpC,SAASqD,cAAM,eAAG,6BACpCtD,EAAOqJ,GAAgB,aAAahH,GAC1C,OAAO,OAAP,sBACEwB,GAAI2R,EACJvU,OACAgT,MAAOA,GAAS1V,EAChBqlB,QACAvhB,WACAgH,aAAcrJ,EACd6H,QACIk2B,GAAYA,EAAS51B,QAAU,CAAE41B,aACjCD,GAAa,KAIRE,EAAqB,CAChCC,MAAO,IACPC,OAAQ,IACRnL,OAAO,EACPoL,SAAS,EACTC,MAAO,CACLC,QAAS,MAOAC,EAAuB,CAClCt2B,EACAM,KAEA,MAAMioB,EAAc,IAAMvoB,EAAI,wBACxBu2B,EAAQ,GAoCd,OAlCA,IAAU,YAAqBhO,GAAe1mB,IAE5C,MAAM20B,EAAa,IACjB,IAAOl2B,EAAYm2B,I,cACjB,IAAIlgC,EACJ,GAAoB,iBAATsL,EAIT,OAHAtL,EAC6D,QAA3D,EAA2B,QAA3B,EAAmB,QAAnB,EAAAkgC,EAAWx+B,gBAAQ,eAAEqD,cAAM,eAAG,qCAA6B,QACxC,QAAnB,EAAAm7B,EAAWx+B,gBAAQ,eAAE1B,KAChBA,IAASsL,EAElBtL,EAA0B,QAAnB,EAAAkgC,EAAWx+B,gBAAQ,eAAE1B,KAC5B,MAAQiQ,WAAYkwB,EAAgB1+B,KAAM2+B,EAAUpgC,KAAMqgC,GAAa/0B,GACjE,KAAE7J,EAAI,WAAEwO,GAAeiwB,EAC7B,IAAII,EAAatgC,IAASqgC,GAAY5+B,IAAS2+B,EAI/C,OAHInwB,IACFqwB,EAAaA,GAAcrwB,IAAekwB,GAErCG,IAET,CAAC,WAAY,QAETrpB,EAAM,IAAMxN,EAAI,CAAC,WAAY,QAC/Bw2B,GACFD,EAAMz8B,KAAK,CACT+B,GAAI,GAAG2R,KAAOgpB,IACdv9B,KAAM,IACNgT,MAAO,IAAQnU,EAAE,6BACjB2J,OAAQ+L,EACR9L,OAAQ80B,MAKPD,GAMIO,EAAyB92B,IACpC,MAAM+2B,EAAY,IAAM/2B,EAAI,CAAC,WAAY,SAAU,8BACnD,OAAK+2B,EAIE,CACLl7B,GAAI,SAASk7B,EACb99B,KAAM,IACN8xB,OAAO,EACP9e,MAAO8qB,EACPhB,SAAU,CAAC,IAAM/1B,EAAI,CAAC,WAAY,SAClCi2B,MAAO,IACPC,OAAQ,IACRr2B,KAAM,GACNs2B,SAAS,EACTa,WAAW,EACXZ,MAAO,CACLC,QAAS,MAfJ,MAqCEY,EAAa,CAACC,EAAqBC,K,MAC9C,IAAKD,EACH,OAIFA,EAASnB,SAA4B,QAAjB,EAAAmB,EAASnB,gBAAQ,eAAEh2B,OACpC2E,KAAOyyB,aAAc,EAAdA,EAAgB1f,KAAM2f,IAAK,MAAC,OAAU,QAAV,EAAAA,EAAErB,gBAAQ,eAAEt2B,SAASiF,OAI3D,MAAM2yB,EAAgBF,EAAe1f,KAAM2f,GAAMA,EAAErM,OAASqM,EAAEv7B,KAAOq7B,EAASr7B,IACzEw7B,EAGHH,EAASnB,SAAStS,QAAS5nB,IACpBw7B,EAActB,SAASt2B,SAAS5D,IACnCw7B,EAActB,SAASj8B,KAAK+B,GAlCb,EAACq7B,EAAqBG,K,cACpB,QAAlB,EAAAA,EAAcx3B,YAAI,eAAEqB,kBAAgC,QAAb,EAAAg2B,EAASr3B,YAAI,eAAEqB,oBAIpC,QAAlB,EAAAm2B,EAAcx3B,YAAI,eAAEqB,kBACvBm2B,EAAcx3B,KAAKqB,eAAiB,KAEpB,QAAd,EAAAg2B,aAAQ,EAARA,EAAUr3B,YAAI,eAAEqB,iBAClBg2B,EAASr3B,KAAKqB,eAAeuiB,QAASrqB,IAC/Bi+B,EAAcx3B,KAAKqB,eAAezB,SAASrG,IAC9Ci+B,EAAcx3B,KAAKqB,eAAepH,KAAKV,OAyBzCk+B,CAAeJ,EAAUG,KAN3BF,EAAer9B,KAAKo9B,IAWXK,EAAc,CAACC,EAAwBL,KAC7CK,GAAcA,EAAUr3B,QAG7Bq3B,EAAU/T,QAASyT,IACjBD,EAAWC,EAAUC,MAIZM,EAAyB,CACpCC,EACAC,EACAC,EAAkD,OAE9CF,aAAQ,EAARA,EAAUnB,QACZoB,EAAWpB,MAAMz8B,QAAQ49B,EAASnB,QAEhCmB,aAAQ,EAARA,EAAUG,SACZF,EAAWE,MAAM/9B,QACZ49B,EAASG,MAAM93B,OACf+3B,IACEA,EAAE/M,QACF4M,EAAWE,MAAMpgB,KAAMsgB,IACtB,GAAID,EAAEj8B,KAAOk8B,EAASl8B,GACpB,OAAO,EAET,MAAM,SAAExB,GAAay9B,EACrB,OACGz9B,KAAcu9B,EAAmBngB,KAAMugB,GAAaA,EAAS39B,EAAUs9B,QAKlFJ,EACEG,EAASG,MAAM93B,OAAQ+3B,GAAMA,EAAE/M,OAC/B4M,EAAWE,SAYJI,EAAuB,CAClC33B,EACA43B,EACAC,EAA0B,MAEnB,IACLA,EAAcllB,IAAK5R,GACVf,EAAUe,GACbf,EAAUe,GAAcxB,KAAKoT,IAAKmlB,IAChC,MAAMC,EAAUD,EAAIpgC,MAAQkgC,EAAS72B,GACrC,IACImF,EADAxO,EAAOqgC,EAMX,OAJIA,GAAW,aAAmBA,KAChCrgC,EAAO,aAAiBqgC,GACxB7xB,EAAa,YAAuB6xB,IAE/B,OAAP,QACErgC,OACAwO,cACG4xB,KAGP,KAKGE,EAA2BpgC,IAC/B,CACLqgC,kBAAmB,CACjB/F,QAAQ,EACRx6B,KAAM,mBACNE,YACAsgC,UAAU,GAEZC,YAAa,CACXjG,QAAQ,EACRx6B,KAAM,aACNE,YACAsgC,UAAU,GAEZE,WAAY,CACVlG,QAAQ,EACRx6B,KAAM,YACNE,YACAsgC,UAAU,GAEZG,KAAM,CACJnG,QAAQ,EACRx6B,KAAM,MACNE,YACAsgC,UAAU,GAEZI,KAAM,CACJpG,QAAQ,EACRx6B,KAAM,MACNE,YACAsgC,UAAU,GAEZK,SAAU,CACRrG,QAAQ,EACRx6B,KAAM,UACNE,YACAsgC,UAAU,GAEZM,aAAc,CACZtG,QAAQ,EACRx6B,KAAM,cACNE,YACAsgC,UAAU,GAEZO,SAAU,CACRvG,QAAQ,EACRx6B,KAAM,UACNE,YACAsgC,UAAU,GAEZQ,KAAM,CACJxG,QAAQ,EACRx6B,KAAM,+BAA6BA,KACnCE,YACAsgC,UAAU,GAEZpN,aAAc,CACZoH,QAAQ,EACRx6B,KAAM,mBAAiBA,KACvBE,YACAsgC,UAAU,M,kCCpahB,wVAGYS,EAQAC,EAOAC,EAlBZ,WAGA,SAAYF,GACV,0BACA,qBACA,oBACA,YACA,yBALF,CAAYA,MAAgB,KAQ5B,SAAYC,GACV,4BACA,oBACA,sBACA,kBAJF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,cACA,kBACA,kBACA,cAJF,CAAYA,MAAkB,KAOvB,MAAMC,EAAqD,CAChE,CAACH,EAAiBI,YAAa,wCAC/B,CAACJ,EAAiBK,UAAW,4CAC7B,CAACL,EAAiBM,SAAU,qCAC5B,CAACN,EAAiBO,KAAM,iCACxB,CAACP,EAAiBQ,YAAa,yCAGpBC,EAA8D,CACzE,CAACR,EAAqBS,aAAc,uCACpC,CAACT,EAAqBU,SAAU,qCAChC,CAACV,EAAqBW,UAAW,sCACjC,CAACX,EAAqBY,QAAS,qCAKjC,IAAYC,GAAZ,SAAYA,GACV,kBACA,oBAFF,CAAYA,MAAqB,KAK1B,MAAMC,EAAoD,CAC/D76B,OAAQ,GACR86B,oBAAoB,EACpBpG,YAAa,IAAYqG,QACzB3jC,KAAM,GACNge,OAAQ,SACR4lB,kBAAkB,EAClBC,SAAU,GACV33B,QAAS,CACPkR,MAAO,GACPY,OAAQ,QACRjS,OAAQ,GACRuP,IAAK,GACLwoB,KAAM,GACNC,YAAY,IAIHC,EAAsB,CACjC,CAAC,IAAYtxB,QACX,kHACF,CAAC,IAAYC,QAAS,sEACtB,CAAC,IAAYE,WAAY,qEAGdoxB,EAAkB,CAC7B,CAAC,IAAYvxB,QACX,uFACF,CAAC,IAAYC,QACX,mGACF,CAAC,IAAYE,WAAY,uEAGdqxB,EAAwB,CAAC,aAAc,gBAAiB,e,kCC/ErE,+MAuBO,MAAMC,EAAoB5iC,GAC/B,WAAa8jB,MAAM,CACjBrlB,KAAM,aAAqBuB,GAC3B6iC,QAAS,IACT76B,YAAa,IACbnI,MAAO,YAAsBG,GAC7B8iC,IAAK,YAAoB9iC,GACzB+iC,OAAQ,YAAuB/iC,GAC/BgjC,QAAS,YAAwBhjC,GACjC2+B,WAAY,YAA2B3+B,GACvCijC,WAAY,YAA2BjjC,GACvCkjC,MAAO,YAAsBljC,GAC7BmjC,OAAQ,YAAuBnjC,GAC/BoE,MAAO,IACPoE,UAAW,IACX46B,aAAc,YAAmCpjC,GACjDqjC,IAAK,YAAqCrjC,GAC1C2iB,SAAU,MAGR2gB,EAAY,CAACvpB,EAAawpB,IAE5BxpB,EAAIypB,WAAW,WAAWD,OAC1BxpB,EAAIypB,WAAW,eAAeD,OAC9BxpB,EAAIpS,SAAS,IAAI47B,MAIRE,EAAiB1pB,GACvB,IAAYgH,KAAKhH,GAIlBupB,EAAUvpB,EAAK,cACV,IAAY5I,OAEjBmyB,EAAUvpB,EAAK,iBACV,IAAYzI,UAEjBgyB,EAAUvpB,EAAK,cACV,IAAY3I,OAEjBkyB,EAAUvpB,EAAK,cAAgBA,EAAIpS,SAAS,SACvC,IAAY0J,MAGd,IAAYE,OAfV,IAAY6wB,QAkBVsB,EAAuBC,IAClC,GAAI,KAAU5iB,KAAK4iB,GACjB,OAAOA,EAGT,MAAMC,EAAe,IAAYD,GACjC,OAAOA,EAAWjS,MAAM,QAAUkS,EAAalS,MAAM,OACjD,OAAOkS,EACPA,GAGOC,EAAqB9pB,IAChC,IAAK,IAAYgH,KAAKhH,GACpB,OAEF,MAAMtb,EAAOsb,EAAIrS,QAAQ,MAAO,IAAI3J,MAAM,KAAK+lC,MAC/C,OAAOJ,EAAoBjlC,K,kCCzF7B,0XA4BYslC,EAOAC,EAnCZ,iGA4BA,SAAYD,GACV,oDACA,gDACA,kEACA,kDAJF,CAAYA,MAAa,KAOzB,SAAYC,GACV,kBACA,4DAFF,CAAYA,MAAkB,KAKvB,MAAMC,EAAiB,CAC5BC,EAAiBF,EAAmBG,+BACjC,CACH,CAAC,IAAqBC,qBAAsB,CAC1C,CAACL,EAAcM,wBAAyB,IACnCH,EAAH,4FAEF,CAACH,EAAcO,yBAA0B,IACvC,OAAOJ,+FAGX,CAAC,IAAqBK,2BAA4B,CAChD,CAACR,EAAcO,yBAA0B,IACvC,+BAA+BJ,yFAEjC,CAACH,EAAcS,gCAAiC,IAC9C,OAAON,wHAET,CAACH,EAAcU,uBAAwB,IACrC,OAAOP,0GAET,CAACH,EAAcM,wBAAyB,IACtC,mBAAmBH,qGAGvB,CAAC,IAAqBQ,4BAA6B,CACjD,CAACX,EAAcO,yBAA0B,IACvC,+BAA+BJ,wGAEjC,CAACH,EAAcS,gCAAiC,IAC9C,OAAON,qIAET,CAACH,EAAcU,uBAAwB,IACrC,OAAOP,uHAET,CAACH,EAAcM,wBAAyB,IACtC,mBAAmBH,sHAOZS,EAAe7uB,IACzBA,EAAI,EAAI,IAAM,IAHW,CAACA,GACrB,IAANA,GAAYA,GAAK,MAASA,EAAI,KAAQ,aAAiBA,GAAG8uB,OAAS9uB,EAAE+uB,cAAc,GAE9DC,CAAoB/5B,KAAKg6B,IAAIjvB,IACvCkvB,EAAc5Z,GAClB,IAAoB6Z,OAAO7Z,GAEvB8Z,EAAyB,CAACvT,EAA0BwT,EAAiBC,KAChF,MAAM,OAAEC,EAAM,OAAEpnB,GAAW0T,EACrB2T,EAAY,IAAMrnB,EAASnI,IAC/B,MAAMyvB,EAAI7gB,OAAO5O,EAAE,IACnB,MAAO,CACL0vB,EAAG,IAAIna,KAAK,IAAIA,KAAY,IAAPvV,EAAE,IAAW2vB,SAAS,EAAG,EAAG,EAAG,IACpDF,EAAG7gB,OAAOghB,MAAMH,GAAK,KAAOA,EAC5BF,YAMElY,EAAQzI,OAAO,IAAM4gB,EAAW,UAChCK,EAAMjhB,OAAO,IAAM,IAAO4gB,GAAY,MACtCM,EAAOR,EAAOD,EAQpB,OAPA,IAAQhY,EAAOwY,EAAKC,GAAMja,QAAQ,CAAC3rB,EAAGqC,KACpC,MAAMmjC,EAAI,IAAIna,KAAKrrB,GACf,IAAMslC,EAAW,CAACjjC,EAAG,MAAQmjC,GAC/BF,EAAU7uB,OAAOpU,EAAG,EAAG,CAAEmjC,IAAGD,EAAG,KAAMF,aAIlCC,GAKIO,EAAqB,CAChCn4B,EACAo4B,EACAC,K,MAEA,MAAM9U,GAAwB,QAAd,EAAAvjB,aAAQ,EAARA,EAAU3F,YAAI,eAAE4pB,SAAU,GAC1C,OAAOV,aAAO,EAAPA,EAAS9V,IAAKC,I,MACnB,OAAgB,QAAT,EAAAA,aAAC,EAADA,EAAG6C,cAAM,eAAE9C,IAAI,EAAEqqB,EAAGD,M,QACzB,MAAO,CACLC,EAAgB,QAAb,EAAAM,aAAQ,EAARA,EAAW1qB,UAAE,QAAI,IAAIiQ,KAAS,IAAJma,GAC7BD,EAAgB,QAAb,EAAAQ,aAAQ,EAARA,EAAWR,UAAE,QAAIS,WAAWT,GAC/BF,OAAQjqB,aAAC,EAADA,EAAGiqB,OACXY,KAAMT,QAMDU,EAAkBC,IAC7B,MAAMC,EAAU,GAChB,IAAKD,EAAU,OAAOC,EACtB,MAAMC,EAAiB,YAAwB,MACzCC,EAAUv7B,KAAKw7B,MAAMJ,EAAWE,GAChCG,EAAI,IAAInb,KAAKA,KAAKob,OAExB,IADAD,EAAEf,SAAS,EAAG,EAAG,EAAG,GACbW,EAAQ/9B,OAAS,EAAIi+B,GAC1BF,EAAQpkC,KAAKwkC,EAAElb,WACfkb,EAAEE,QAAQF,EAAEG,UAAY,GAE1B,OAAOP,EAAQQ,MAAM,EAAGN,IAGbO,EAAc,CAACC,EAAiB5Z,KAC3C,GAAgB,IAAZ4Z,EACF,OAAO,IAAQ9mC,EAAE,oCAEnB,IAAI+mC,EAAMh8B,KAAKw7B,MAAMO,GACjBriB,EAAM,EACNuiB,EAAK,EACLzb,EAAW,GA2Bf,OA1BIwb,GAAO,KACTtiB,EAAM1Z,KAAKC,MAAM+7B,EAAM,IACvBA,GAAO,IAELtiB,GAAO,KACTuiB,EAAKj8B,KAAKC,MAAMyZ,EAAM,IACtBA,GAAO,IAELuiB,EAAK,IACPzb,GAAY2B,EACR,IAAQltB,EAAE,kCAAmC,CAAEuuB,MAAOyY,IACtD,IAAQhnC,EAAE,2BAA4B,CAAEgnC,OAC5Czb,GAAY,KAEV9G,EAAM,IACR8G,GAAY2B,EACR,IAAQltB,EAAE,oCAAqC,CAAEuuB,MAAO9J,IACxD,IAAQzkB,EAAE,4BAA6B,CAAEykB,QAC7C8G,GAAY,KAEVwb,EAAM,IACRxb,GAAY2B,EACR,IAAQltB,EAAE,oCAAqC,CAAEuuB,MAAOwY,IACxD,IAAQ/mC,EAAE,4BAA6B,CAAE+mC,SAGxCxb,EAASpU,QAGL8vB,EAAkC,KAAM,CACnD,KAAM,IAAQjnC,EAAE,0BAChB,KAAM,IAAQA,EAAE,2BAChB,KAAM,IAAQA,EAAE,2BAChB,KAAM,IAAQA,EAAE,4BAChB,KAAM,IAAQA,EAAE,4BAChB,KAAM,IAAQA,EAAE,8BAGLknC,EAA4Bn/B,IACvC,IAAIo/B,EAAgB,EACpB,OAAO,IAASp/B,EAAM,KAAKoT,IAAKisB,IAC9B,MAAMC,EAAeD,EAAI7B,EAAI4B,EAE7B,OADAA,GAAiBC,EAAI7B,EACd,OAAP,wBAAY6B,GAAG,CAAE7B,EAAG8B,Q,kCCvMxB,iOAIO,MAAMC,EAAsBC,IACjC,MACOH,EAAKzhB,GAAQ4hB,aAAc,EAAdA,EAAgB7V,MADhB,sBAEpB,MAAO,CACLjM,gBAAiBf,OAAO0iB,IAAQ,GAChC1hB,oBAAqBC,GAAQ,IAC7B6hB,2BAA4B7hB,GAAQ,MAIlC8hB,EAAiC,iBAE1BC,EAAmCC,GAC9CA,EAAGjgC,QAAQ+/B,EAAgC,IAEhCG,EAAgC,CAC3CD,EACAE,K,MAEA,KAAY,QAAP,EAAAF,EAAGvpC,YAAI,eAAE+b,KAAK,OAAO,KAC1B,MAAM,WAAEzL,EAAU,KAAExO,EAAI,KAAEzB,GAASkpC,EAAGvpC,KAAK+b,IAC3C,OAAO,YAAmB,OAAkBzL,GAC1CxO,IAAS,IAAaA,MACtBzB,IAASopC,EACPppC,EACA,MAGOqpC,EAAgC,CAC3CC,EACAC,IAEO,IACF,IAAIC,IACLF,aAAiB,EAAjBA,EACI9/B,OAAQ0/B,MACRK,aAAuB,EAAvBA,EAAyB3/B,QAAS,KAC9B2/B,aAAuB,EAAvBA,EAAyBrgC,SAAS+/B,EAAgCC,MAGvExsB,IAAK6kB,GAAM0H,EAAgC1H,MAKvCkI,EAA8BriB,GACzCA,EAAcoJ,KAAM0Y,GAAO,IAAInnB,OAAOinB,GAAgC1mB,KAAK4mB,IAEhEQ,EAAgC,CAC3CC,EACArgC,EAA0B,GAC1BsgC,IAEAD,EACGngC,OAAQu+B,GAAM0B,EAA2B,CAAC1B,KAC1CrrB,IAAKwsB,I,QACJ,MAAMW,EAAiBvgC,aAAI,EAAJA,EAAM4X,KAC1B6mB,GAAMA,EAAErmC,SAAS1B,OAASipC,EAAgCC,IAE7D,OAAOW,IAA0C,QAAxB,EAAmB,QAAnB,EAAAA,EAAelqC,YAAI,eAAE+b,WAAG,eAAE1b,QAAS4pC,EACxDC,EACA,OAELrgC,OAAQu+B,KAAQA,I,kCCnErB,+BAYA,MAAM+B,UAAoB,IAKxB,cACEx1B,QALK,KAAAxQ,cAAyCiiB,EAEzC,KAAAjb,kBAAsDib,EAK3D,YAAexY,KAAM,CACnBzJ,SAAU,IAAW4X,IACrB5Q,aAAc,MAIlB,cACE,OAAOyC,KAAKzJ,SAGd,YAAYA,GACVyJ,KAAKzJ,SAAWA,EAGlB,kBACE,OAAOyJ,KAAKzC,cAAgB,aAAayC,KAAKzJ,UAGhD,gBAAgBrC,GACd8L,KAAKzC,aAAerJ,EAGtB,SAAS2yB,GACP9f,MAAMy1B,SAAS3V,GAEX,aAAcA,IAChB7mB,KAAKzJ,SAAWswB,EAAMtwB,UAEpB,iBAAkBswB,IACpB7mB,KAAKzC,aAAespB,EAAMtpB,eAKjB,O,ktBC7BR,MAAMk/B,EAAY,CAAEC,OAAQ,OAEtBC,EAA8B3oC,GACzC,WAAa8jB,MAAM,CACjBrlB,KAAM,WAEHslB,QAAQ,KAAW,CAClB9hB,QAASjC,EACP,+IAEF+lB,oBAAoB,IAErBxV,SAASvQ,EAAE,8BACdqH,OAAQ,WAEL0c,QAAQ,IAAa/jB,EAAE,sCACvBuQ,SAASvQ,EAAE,8BACd4oC,YAAa,WACbj+B,QAAS,WAENuZ,KAAK,cAAe,CACnBC,GAAI,IAAY7S,UAChB3E,KAAM,WAAamX,MAAM,CACvBye,KAAM,WAEHxe,QAAQ,IAAwB,CAC/B9hB,QAASjC,EACP,4JAEF+lB,oBAAoB,IAErBxV,SAASvQ,EAAE,kCAGjBkkB,KAAK,CAAC,SAAU,cAAe,UAAW,CACzCC,GAAI,CAAC1H,EAAQsf,EAAa10B,IACxBA,KAAY00B,IAAgB,IAAY5qB,QAAUsL,IAAW,IAAYtL,QAC3ExE,KAAM,WAAamX,MAAM,CACvBjI,MAAO,WAAakF,KAAK,gBAAiB,YAAY,WACpD,OAAO/U,KAAKoZ,OAAOvJ,OAAS7P,KAAKoZ,OAAOyjB,aAE1CA,UAAW,WAAa9nB,KAAK,gBAAiB,YAAY,WACxD,OAAO/U,KAAKoZ,OAAOvJ,OAAS7P,KAAKoZ,OAAOyjB,mBAMvCC,EAAwC9oC,GACnD,WAAa8jB,MAAM,CACjBnZ,QAAS,WAENuZ,KAAK,cAAe,CACnBC,GAAI,IAAY7S,UAChB3E,KAAM,WAAamX,MAAM,CACvBye,KAAM,WAEHxe,QAAQ,KAAW,CAClB9hB,QAASjC,EACP,+IAEF+lB,oBAAoB,IAErBxV,SAASvQ,EAAE,kCAGjBkkB,KAAK,CAAC,SAAU,cAAe,UAAW,CACzCC,GAAI,CAAC1H,EAAQsf,EAAa10B,IACxBA,GACA00B,KACEA,IAAgB,IAAY5qB,QAAUsL,IAAW,IAAYtL,QACjExE,KAAM,WAAamX,MAAM,CACvBjI,MAAO,WAAakF,KAAK,gBAAiB,YAAY,WACpD,OAAO/U,KAAKoZ,OAAOvJ,OAAS7P,KAAKoZ,OAAOyjB,aAE1CA,UAAW,WAAa9nB,KAAK,gBAAiB,YAAY,WACxD,OAAO/U,KAAKoZ,OAAOvJ,OAAS7P,KAAKoZ,OAAOyjB,mBAMvCE,EAAwC/oC,GAC5C,WAAa8jB,MAAM,CACxBuS,WAAY,WAAanS,KAAK,CAAC,eAAgB,mBAAoB,CACjEC,GAAI,CAAC2D,EAAckhB,IAAoBlhB,IAAiB,IAAaC,KAAOihB,EAC5Er8B,KAAMm8B,EAAqC9oC,OAK3CsjC,EAAY,CAACvpB,EAAawpB,IAE5BxpB,EAAIypB,WAAW,WAAWD,OAC1BxpB,EAAIypB,WAAW,eAAeD,OAC9BxpB,EAAIpS,SAAS,IAAI47B,MAIRE,EAAiB1pB,GACvB,IAAYgH,KAAKhH,GAIlBupB,EAAUvpB,EAAK,cACV,IAAY5I,OAEjBmyB,EAAUvpB,EAAK,iBACV,IAAYzI,UAEjBgyB,EAAUvpB,EAAK,cACV,IAAY3I,OAGd,IAAYG,OAZV,IAAY6wB,QAiDV6G,EAA4B,CACvChrB,EACA7d,EACAoD,EAAoC,GACpCklC,IAC6B,OAAD,6B,UAC5B,MAAM,KACJjqC,EAAI,OACJ4I,EACAsD,SAAS,UAAEu+B,EAAS,OAAEzsB,EAAM,MAAEZ,EAAOrR,OAAQwR,EAAa,KAAEumB,IAC1DtkB,EACEkrB,EAAgB,SAAOn5B,OAAOgM,GAC9BotB,EAAkB3F,EAAcp8B,GACtC,IAAImD,EACAqR,GAAoB,UAAXY,EACXjS,OAjDsB,EACxB6+B,EACA9G,EACA1mB,EACAzb,EACAgpC,EACAptB,EACA0sB,IACG,OAAD,6BACF,MAAM3gC,EAAmB,CACvB2G,WAAY,cAAYA,WACxBxO,KAAM,cAAYA,KAClBC,SAAU,CACRmpC,aAAiBD,EAAH,UACdjpC,aAEFe,KAAM,aAAWmJ,OACjBe,WAAY,OAAF,sBACR,iBAAkBwQ,GACdG,GAAiB,CAAE,iBAAkBA,IACrCotB,IAAoB,IAAY93B,WAAa,CAC/C,eAAgB,SAAOtB,OAAO,GAAGuyB,KAAQ1mB,QAK/C,OAAO,YAAkB,CACvBgX,MAAO,cACP9qB,OACA/G,GAAIZ,EACJ0yB,YAAa4V,EAASD,EAAY,QAmBnBc,CACb9qC,EACA8jC,EACA1mB,EACAzb,EACAgpC,EACAptB,EACA0sB,GAGS,WAAXjsB,GACAysB,IACe,QAAf,EAAAA,aAAS,EAATA,EAAWnhC,YAAI,eAAG,qBAAsBohC,UAElC,YAAiB,CACrBtW,MAAO,cACPtwB,SAAU2mC,EACVnhC,KAAM,CAAC,CAAEsqB,GAAI,UAAW9W,KAAM,uBAAwBxa,MAAO,SAAOiP,OAAOgM,QAG/E,MAAMwtB,EAAU,EAAYniC,GAAQsC,OAC9Bk/B,EAAYr+B,GAAU0+B,EACtBnhC,EAAO,CACX7H,KAAM,kBAAgBA,KACtBwO,WAAY,sCACZvO,SAAU,OAAF,QACN1B,OACA2B,aACIoD,GAAU,IAEhBpF,KAAM,OAAF,QACF2b,IAAK1S,GACDwhC,GAAyB,eAAZW,EACb,CAEEC,aAAc,OAAF,sCACL,IAAsB9hC,SAAS6hC,GAA8B,GAAnB,CAAEzvB,IAAKyvB,IACtC,kBAAZA,EACA,CACEjH,QAEF,IACAsG,EACA,CACEr+B,OAAQ,CACN/L,KAAyB,QAAnB,EAAAoqC,aAAS,EAATA,EAAW1oC,gBAAQ,eAAE1B,KAC3B6D,IAAK,kBAGPonC,eAAgB,CACdjrC,KAAyB,QAAnB,EAAAoqC,aAAS,EAATA,EAAW1oC,gBAAQ,eAAE1B,KAC3B6D,IAAK,mBAGT,KAGR,KAWR,aAPuB,YAAkB,CACvCuwB,MAAO,kBACP9qB,OACA/G,GAAIZ,EACJ0yB,YAAa4V,EAASD,EAAY,QAMzBkB,EAAsB,CACjC1rB,EACAolB,EACA7O,IACqB,OAAD,6B,UACpB,MAAM,OACJntB,EACAsD,SAAS,OAAE8R,EAAM,MAAEZ,EAAOrR,OAAQwR,EAAejC,IAAK+B,EAAU,UAAEotB,EAAS,KAAE3G,IAC3EtkB,EACEmrB,EAAkB3F,EAAcp8B,GAChCsZ,EAAa,YAActZ,EAAQ+hC,GAEzC,IAKIQ,EALA7tB,GAAkB,EAClByY,GAAsD,WAAnC,QAAT,EAAA6O,aAAG,EAAHA,EAAKt7B,YAAI,eAAG,+BACxBgU,GAAkB,GAKlB6tB,EADER,IAAoB,IAAY93B,UAErB,UAAXmL,EACI,SAAOzM,OAAO,GAAGuyB,KAAQ1mB,KACzB,SAAO7M,OAAsB,QAAf,EAAAk6B,aAAS,EAATA,EAAWnhC,YAAI,eAAG,iBAEf,UAAX0U,EAAqBZ,EAAQ,SAAO7M,OAAsB,QAAf,EAAAk6B,aAAS,EAATA,EAAWnhC,YAAI,eAAG,mBAU3E,aAPoC4Y,EAAW/E,kBAC7CguB,EACA9tB,EACAC,EACAC,MAaS6tB,EAA2B9vB,IACtC,IAAK,IAAYgH,KAAKhH,GACpB,OAEF,MAAMtb,EAAOsb,EAAIrS,QAAQ,MAAO,IAAI3J,MAAM,KAAK+lC,MAC/C,OAZmCH,EAYPllC,EAXxB,KAAUsiB,KAAK4iB,GACV,OAAOA,EAET,OAAO,IAAYA,GAJQ,IAACA,GAsHxBmG,EAAyB,CACpCC,EACA/vB,IACoB,OAAD,6B,MACnB,IAAIgwB,EACJ,IACE,MAAOC,SAAgC,YAAoC,CACzEpX,MAAO,iBACPC,YAAa,CACX9xB,GAAI,IACJkpC,cAAe,CACbC,YAAa,CACX,uCAAwC,IAAmBJ,IAAYA,OAK/EC,EAA8C,QAA5B,EAAAC,aAAsB,EAAtBA,EAAwBliC,YAAI,eAAEioB,SAChD,MAAOxjB,GACP2T,QAAQiqB,IAAI,oCAAqC59B,GAGnD,OAD4Bw9B,eAvCe,CAAOhwB,GAAsC,OAAD,6B,MACvF,IAAIqwB,EAtF6B,CAACrwB,GAA6B,yEAGvDA,UAAY,sgFAmFMswB,CAAoBtwB,GAC9C,IACE,MAAMgW,QAAiB,YAA8B,CACnD6C,MAAO,iBACP7xB,GAAI,IACJvC,KAAM,OAEU,QAAd,EAAAuxB,aAAQ,EAARA,EAAUjoB,YAAI,eAAEioB,YAClBqa,EAAsBra,EAASjoB,KAAKioB,UAEtC,MAAOxjB,GACP2T,QAAQiqB,IAAI,oCAAqC59B,GAGnD,OAAO69B,KAwB+CE,CAA8BvwB,O,kCCrbtF,+CAEA,MAAM2J,EAAY,SAIL6mB,EAAgCxqC,GAC3C,WAAa8jB,MAAM,CACjB2mB,cAAe,WACfC,SAAU,YACVC,QAAS,YACTC,SAAU,YACV7iC,KAAM,WAAamc,KAAK,WAAY,CAClCC,IAAI,EACJxX,KAAM,WAAamX,MAAM,CACvB+mB,cAAe,WAEZtkB,QAAQvmB,EAAE,yCACVykB,IAAI,EAAGzkB,EAAE,0DACTikB,IAfc,WAeCjkB,EAAE,2DACpB8qC,oBAAqB,WAElBvkB,QAAQvmB,EAAE,yCACVykB,IAAI,EAAGzkB,EAAE,iEACTikB,IApBc,WAoBCjkB,EAAE,2DACpB+qC,iBAAkB,WAEfxkB,QAAQvmB,EAAE,yCACVykB,IAAI,EAAGzkB,EAAE,qEACZgrC,eAAgB,WAEbzkB,QAAQvmB,EAAE,yCACVykB,IAAI,EAAGzkB,EAAE,2DACTikB,IA7Bc,WA6BCjkB,EAAE,2DACpBirC,iBAAkB,WAEf1kB,QAAQvmB,EAAE,yCACVykB,IAAI,EAAGzkB,EAAE,qEACTikB,IAlCc,WAkCCjkB,EAAE,2DACpBkrC,YAAa,WACbC,QAAS,WAAajnB,KAAK,cAAe,CACxCC,GAAI,UACJxX,KAAM,SAAW,CACf4O,KAAM,WAAawI,QAAQJ,EAAW,CACpC1hB,QAASjC,EAAE,sCACX+lB,oBAAoB,IAEtBqlB,KAAM,WAAa76B,SAASvQ,EAAE,4BAGlCqrC,UAAW,WAAannB,KAAK,cAAe,CAC1CC,GAAI,YACJxX,KAAM,SAAW,CACfy+B,KAAM,WAAa76B,SAASvQ,EAAE,4BAGlCsrC,KAAM,WAAapnB,KAAK,cAAe,CACrCC,GAAI,UACJxX,KAAM,SAAW,CACf4+B,QAAS,UAAYzlB,GAAG,WAAavV,SAASvQ,EAAE,mCAO/CwrC,EAAsCxrC,GACjD,WAAa8jB,MAAM,CACjB2nB,eAAgBjB,EAA6BxqC,GAC7C0rC,cAAelB,EAA6BxqC,GAC5C2rC,aAAcnB,EAA6BxqC,M,kCCvE/C,gRAAO,MAAM4rC,EAAiB,uCACjBC,EACX,oGACWC,EAA0B,uCAC1BC,EAAqB,gCACrBC,EAAkB,2BAClBC,EAAkB,2BAClBC,EAAW,yBACXC,EAAuB,yC,kCC2EpC,0KAAO,MAAMC,EAA8B5/B,GACvB,8BAAXA,EAAErL,KAGEkrC,EAA8B7/B,GACvB,8BAAXA,EAAErL,KAGEmrC,EAA6B9/B,GACtB,6BAAXA,EAAErL,KAGEorC,EAA4B//B,GACrB,4BAAXA,EAAErL,KAGEqrC,EAA+BhgC,GACxB,uBAAXA,EAAErL,M,kCCpGX,sJAEO,MAAMsrC,EAA+B,0BAE/BC,EAAuB,IACvBC,EAAwB,IACxBC,EAAyB,K,maCO/B,MAAMC,EAAsBlsB,GAA+C,OAAD,6B,UAG/E,WAFgCA,EAAW3D,qBAGzC,MAAO,CACLiB,OAAQ,IAIZ,MAAM6uB,QAAwBnsB,EAAW1D,qBAEzC,IACE,MAAM8vB,EAAY,IAAWD,GAAqC,YAAaA,GAA/BA,EAE1CE,EAAyB,QAAf,EAAAD,aAAQ,EAARA,EAAU3oC,aAAK,eAAE4oC,QAC3BC,EAA6B,QAAf,EAAAF,aAAQ,EAARA,EAAU3oC,aAAK,eAAE8oC,UAC/BnD,EAAUgD,aAAQ,EAARA,EAAUhD,QAE1B,MAAO,CACL9rB,OAAQ,CACN+uB,UACAjD,UACAkD,cACAE,YAN6B,QAAb,EAAAJ,aAAQ,EAARA,EAAUzf,WAAG,eAAE8f,OASnC,SACA,MAAO,CACLnvB,OAAQ,QAKDovB,EAA2B,CACtC/W,EACA3V,IACqB,OAAD,6B,QAGpB,UAFgCA,EAAW3D,sBAElBsZ,EAAqB,CAC5C,MAAM8F,QAAgBzb,EAAW1D,qBAC3B8vB,EAAW,YAAa3Q,GAC9B,KAAoB,QAAf,EAAA2Q,aAAQ,EAARA,EAAU3oC,aAAK,eAAE4oC,UAAwC,SAAd,QAAf,EAAAD,aAAQ,EAARA,EAAU3oC,aAAK,eAAE4oC,SAChD,OAAO,EAGX,OAAO,M,qbChCF,MAAMM,EAeX,YAAmBltC,GAdX,KAAAmtC,WAAsD,GAEvD,KAAAntC,eAAoBokB,EAEpB,KAAAqO,MAAe,CAAEkN,MAAO,GAAItB,MAAO,IAEnC,KAAAjK,QAAkB,EAElB,KAAAC,eAAoBjQ,EAEpB,KAAAgpB,kBAA4B,EAE5B,KAAAC,iBAA2C,GAwD3C,KAAAC,uBAAyB,KAC9B,MAAMC,EAAgB3gC,OAAOC,KAAKjB,KAAKuhC,YACvCvhC,KAAKyhC,iBAAmBE,EAAczgC,OAAO,CAACtL,EAAKU,KACjD,GAAI0J,KAAKuhC,WAAWjrC,GAAKkG,UAAW,CAClC,MAAMolC,EAAU5hC,KAAKuhC,WAAWjrC,GAAKkG,UAAUwD,KAAK5L,WACpD4M,OAAOC,KAAK2gC,GAASjiB,QAASkiB,IACvBjsC,EAAIisC,KACPjsC,EAAIisC,GAAUD,EAAQC,MAI5B,OAAOjsC,GACN,YAAwBoK,KAAK5L,aAG3B,KAAA0tC,gBAAkB,CAAC/pC,EAAYgqC,KACpC/hC,KAAKuhC,WAAWxpC,GAAM,OAAH,wBAASiI,KAAKuhC,WAAWxpC,IAAO,IAAQgqC,GAC3D/hC,KAAKgiC,yBACLhiC,KAAK0hC,0BAGA,KAAAvN,qBAAwB33B,IAC7B,MAAMolC,EAAU5hC,KAAKyhC,iBACfrN,EAAWpzB,OAAOC,KAAK2gC,GAAS1gC,OAAO,CAACtL,EAAKU,KACjDV,EAAIU,GAAOsrC,EAAQtrC,GAAKpC,KACjB0B,GACN,IACH,OAAO,YAAqB4G,EAAW43B,EAAUp0B,KAAKiiC,eAwCjD,KAAAC,mBAA4B1lC,GAAqD,EAAD,gCACrF,MAAM2lC,EAAuB,CAC3BpO,MAAO,GACPtB,MAAO,IAEH2P,EAAUpiC,KAAKqiC,iBAErB,KAAKD,aAAO,EAAPA,EAAS/lC,QACZ,OAAOW,QAAQyV,QAAQ0vB,GAGzB,MAAMG,EAAYtiC,KAAK8zB,mBACjByO,EAAoBviC,KAAKm0B,qBAAqB33B,GAC9CgmC,EAAWJ,EAAQjzB,IAAKszB,IAC5B,IACE,OAAOA,EAAOziC,KAAK5L,UAAWoI,EAAW+lC,GACzC,MAAO/hC,GAGP,OADA2T,QAAQ/d,MAAM,2CAA4CoK,GACnD,QAiBX,aAbMxD,QAAQS,IAAI+kC,GAAU7hC,KAAM0oB,IAChCA,EAAO1J,QAASkH,IACd,GAAIA,EACF,IACE,YAAuBA,EAAOsb,EAAeG,GAC7C,MAAO9hC,GAEP2T,QAAQ/d,MAAM,2CAA4CoK,QAM3DxD,QAAQyV,QAAQ0vB,MAGlB,KAAAO,eAAiB,CAAC7b,EAAcrqB,KACrCwD,KAAK2iC,qBAAqBhjB,QAASijB,IACjC,IACEA,EAAW/b,EAAOrqB,GAClB,MAAOgE,GAEP2T,QAAQ/d,MAAM,iDAAkDoK,OArKpER,KAAK5L,UAAYA,EAEjB,YAAe4L,KAAM,CACnB5L,UAAW,IACXyyB,MAAO,IAAW1Y,IAClBqa,OAAQ,IACRC,UAAW,IACX+Y,iBAAkB,IAClBC,iBAAkB,IAAWtzB,IAC7B00B,aAAc,MAMV,yBACN,MAAMlB,EAAgB3gC,OAAOC,KAAKjB,KAAKuhC,YACjCuB,EAAO9iC,KAAKwhC,iBAClBxhC,KAAKwhC,iBACHG,EAActlC,OAAS,GACvBslC,EAAcoB,MACXzsC,KACG0J,KAAKuhC,WAAWjrC,GAAK0sC,mBACrBhjC,KAAKuhC,WAAWjrC,GAAK2sC,qBACrBjjC,KAAKuhC,WAAWjrC,GAAK4sC,sBAExBJ,GAAQ9iC,KAAKwhC,kBAAoBxhC,KAAKmjC,oBACzCnjC,KAAKmjC,mBAAmBnjC,MAIrB,gBACL,OAAOA,KAAKuhC,WAGP,aAAaxpC,GAClB,OAAOiI,KAAKuhC,WAAWxpC,GAGzB,mBACE,MAAMkqC,EAAe,IAAI,KAUzB,OATAjhC,OAAOC,KAAKjB,KAAKuhC,YAAY5hB,QAASrpB,IAChC0J,KAAKuhC,WAAWjrC,GAAK2rC,cACvBjiC,KAAKuhC,WAAWjrC,GAAK2rC,aAAatiB,QAASyjB,IACpCnB,EAAatmC,SAASynC,IACzBnB,EAAajsC,KAAKotC,OAKnBnB,EAiCT,sBACE,OAAOjhC,OAAOC,KAAKjB,KAAKuhC,YAAY5uC,KAClC,CAAC0wC,EAAIC,IAAOtjC,KAAKuhC,WAAW8B,GAAI9uB,SAAWvU,KAAKuhC,WAAW+B,GAAI/uB,UAInE,uBACE,OAAOvU,KAAKujC,gBAAgBriC,OAAO,CAACtL,EAAKU,KACnC0J,KAAKuhC,WAAWjrC,GAAK0sC,iBACvBptC,EAAII,KAAKgK,KAAKuhC,WAAWjrC,GAAK0sC,iBAEzBptC,GACN,IAGL,yBACE,OAAOoK,KAAKujC,gBAAgBriC,OAAO,CAACtL,EAAKU,KACnC0J,KAAKuhC,WAAWjrC,GAAK2sC,mBACvBrtC,EAAII,KAAKgK,KAAKuhC,WAAWjrC,GAAK2sC,mBAEzBrtC,GACN,IAGL,2BACE,OAAOoK,KAAKujC,gBAAgBriC,OAAO,CAACtL,EAAKU,KACnC0J,KAAKuhC,WAAWjrC,GAAK4sC,qBACvBttC,EAAII,KAAKgK,KAAKuhC,WAAWjrC,GAAK4sC,qBAEzBttC,GACN,IAGL,mB,UACE,OAA4C,KAAX,QAAzB,EAAiB,QAAjB,EAAU,QAAV,EAAAoK,KAAK6mB,aAAK,eAAEkN,aAAK,eAAE13B,cAAM,QAAI,IAsDlC,MAAMmnC,EAAe,wBAA+B,O,kCCtN3D,wBA6BA,MAAMC,EAAkB,CAAC9J,EAAiB,YAAU+J,KAAMvuC,EAAe,KACvE,GAAGwkC,KAAOxkC,IAEZ,MAAMwuC,UAA2D,cAkC/D,cACE58B,QAjCM,KAAA68B,QAAsC,CAC5C,CAACH,KAAoB,IAAI,eAAazjC,OAGhC,KAAA6jC,WAAa,IAAI,aAEjB,KAAAC,uBAAwB,EAExB,KAAAC,YAAa,EAEb,KAAAC,kBAA2B,KAE3B,KAAAC,SAAW,IAAI,QAUf,KAAAhd,OAAQ,EAER,KAAAiM,WAAY,EAEZ,KAAAgR,cAAgB,gBAAcC,OAE9B,KAAArsB,WAA+BU,EAE/B,KAAA7iB,YAAiC6iB,EAKvC,YAkBExY,KAAM,CACN4jC,QAAS,IAAWQ,QACpBP,WAAY,IAAW11B,IACvB21B,sBAAuB,IACvBG,SAAU,IAAW91B,IACrB4lB,MAAO,IACP9M,MAAO,IACPiM,UAAW,IACXgR,cAAe,IACfpsB,MAAO,IACPniB,OAAQ,IACR0uC,YAAa,IACbC,YAAa,IACbC,YAAa,IACbC,cAAe,IACfC,UAAW,IACXC,YAAa,MAvDjB,YACE,OAAI1kC,KAAK2kC,cACA,GAGF3kC,KAAK4kC,cAAc3oC,OAAO,UAsDnC,kBACE,MAAMg2B,EAAWjyB,KAAK4kC,cACnB3oC,OAAO,UACPA,OAAQ+3B,GAAMA,EAAE6Q,aACnB,IAAK5S,EAAS51B,OACZ,OAAO2D,KAAK8kC,oBAGd,IAAIC,EACJ9S,EAAStS,QAAS/e,IAChB,GAAI,iBAAOA,GAAI,CACb,MAAM,QAAE2xB,GAAY3xB,EAAEokC,WAChBnyC,EAAI+N,EAAEqkC,aAEPrkC,EAAEskC,WAAa3S,GAClB1/B,EAAE0/B,QAAQ3xB,EAAEokC,WAAsBzS,SAE/BwS,EAGHA,EAAKI,MAAMtyC,GAFXkyC,EAAOlyC,EAAEuyC,WAOVL,IACHA,EAAO,IAAI,QAGb,MAAM,QAAExS,GAAYvyB,KAAKglC,WAEzB,OAAOD,EAAKxS,QAAQA,GAGtB,kBACE,OAAOvyB,KAAKqlC,WACTC,WACArpC,OAAQuE,GAAMA,EAAExC,cAAgBgC,MAGrC,kBACE,OAAOA,KAAKqlC,WACTC,WACArpC,OAAQuE,GAAMA,EAAEvC,cAAgB+B,MAGrC,cACE,OAAIA,KAAK2kC,cACA59B,MAAM69B,cAAc3oC,OAAO,UAE7B8K,MAAM69B,cAIf,qBACE,OAAO79B,MAAM69B,cAAc1jC,OAAO,CAACqkC,EAAOC,KACpC,iBAAOA,IACTD,EAAMvvC,KAAKwvC,EAASN,UAAYM,EAASC,qBAAuBD,GAE3DD,GACN,IAGL,UACE,OAAO,YAAU7oC,KAGX,oBACN,MAAM,SAAEunC,EAAQ,WAAEJ,GAAe7jC,KACjC,OAAO,IAAI,OAAKikC,EAASzK,EAAGyK,EAAS1K,EAAGsK,EAAW1R,MAAO0R,EAAWzR,QAGvE,YACE,OAAOpyB,KAAKinB,QAAUjnB,KAAKkzB,UAAYlzB,KAAKqkC,YAAcrkC,KAAK8kC,oBAGjE,UAAUY,GACR,MAAM,MAAEvT,EAAK,OAAEC,GAAWpyB,KAAK6jC,WAC3B6B,EAAOvT,QAAUA,GAASuT,EAAOtT,SAAWA,IAC9CpyB,KAAK6jC,WAAa,IAAI,aAAW6B,EAAOvT,MAAOuT,EAAOtT,SAExD,MAAM,EAAEoH,EAAC,EAAED,GAAMv5B,KAAKikC,SAClByB,EAAOlM,IAAMA,GAAKkM,EAAOnM,IAAMA,GACjCv5B,KAAK0kC,YAAY,IAAI,QAAMgB,EAAOlM,EAAGkM,EAAOnM,IAIhD,cACE,OAAIv5B,KAAKklC,WAAallC,KAAK4kC,cAAcvoC,SAAW2D,KAAKkzB,UAChDlzB,KAAKilC,YAAYU,YAEnB3lC,KAAKikC,SAGd,wBAAwB2B,EAAcC,GACpC,MAAMC,EAAUF,EAAMpM,EAAIqM,EAAarM,EACjCuM,EAAUH,EAAMrM,EAAIsM,EAAatM,EACvCv5B,KAAK4kC,cAAcjlB,QAASqmB,IAC1B,GAAI,iBAAOA,GAAQ,CACjB,MAAMtpC,EAAOspC,EACP/B,EAAWvnC,EAAKupC,cAChBC,EAAc,IAAI,QAAMjC,EAASzK,EAAIsM,EAAS7B,EAAS1K,EAAIwM,GACjErpC,EAAKgoC,YAAYwB,MAKvB,YAAYN,GACV,GAAI5lC,KAAKklC,WAAallC,KAAK4kC,cAAcvoC,SAAW2D,KAAKkzB,UAAzD,CACE,MAAM2S,EAAe7lC,KAAKilC,YAAYU,YACtC3lC,KAAKmmC,wBAAwBP,EAAOC,OAFtC,CAKA7lC,KAAKikC,SAAW2B,EAChB5lC,KAAK+jC,YAAa,EAClB,IACE/jC,KAAKomC,gBAAgBC,UAAU,wBAAuB,CAAE3pC,KAAMsD,OAE9D,MAAOQ,MAGX,eACE,OAAOR,KAAK+jC,WAGd,gBACE,OAAO/jC,KAAK6jC,WAGd,cAAcA,GACZ7jC,KAAK6jC,WAAaA,EAClB7jC,KAAK8jC,uBAAwB,EAG/B,0BACE,IAAK9jC,KAAK8jC,uBAAyB9jC,KAAKklC,UAAW,CACjD,MAAMnR,EAAQ/zB,KAAK4kC,cAAc3oC,OAAO,UACxC,GAAqB,IAAjB83B,EAAM13B,OACR,OAAO2D,KAAK8jC,sBAEC/P,EAAMgP,MAAOniC,GAAMA,EAAE0lC,6BAElCtmC,KAAK8jC,uBAAwB,GAGjC,OAAO9jC,KAAK8jC,sBAGd,UAAUnK,EAAiBxkC,GACzB,IAAIoxC,EAASvmC,KAAK4jC,QAAQH,EAAgB9J,EAAKxkC,IAU/C,OATKoxC,GAAUpxC,IACboxC,EAASvmC,KAAK4jC,QAAQH,EAAgB9J,KAEnC4M,GAAW5M,IAAQ,YAAUh8B,QAAUg8B,IAAQ,YAAU/7B,SAC5D2oC,EAASvmC,KAAK4jC,QAAQH,EAAgB,YAAUC,KAAMvuC,KACjDoxC,GAAUpxC,IACboxC,EAASvmC,KAAK4jC,QAAQH,EAAgB,YAAUC,SAG7C6C,EAGT,UAAUA,EAAgB5M,EAAiBxkC,GACzC,MAAMmB,EAAMmtC,EAAgB9J,EAAKxkC,GAC7BoxC,EACFvmC,KAAK4jC,QAAQttC,GAAOiwC,SAEbvmC,KAAK4jC,QAAQttC,GAIxB,WACE,OAAO0J,KAAK+zB,MAGd,UACE,OAAO/zB,KAAKinB,MAGd,SAASA,GACPjnB,KAAKinB,MAAQA,EAGf,cACE,OAAOjnB,KAAKkzB,UAGd,aAAaA,GACX,GAAIA,IAAclzB,KAAKkzB,UAAW,CAKhC,MAAMsT,EAAaxmC,KAAKilC,YAAYU,aAC/BzS,GAAalzB,KAAKgkC,mBACrBhkC,KAAKmmC,wBAAwBK,EAAYxmC,KAAKgkC,mBAC9ChkC,KAAKgkC,kBAAoB,KACzBhkC,KAAKkzB,UAAYA,IAEjBlzB,KAAKgkC,kBAAoB9Q,EAAYsT,EAAa,KAClDxmC,KAAKkzB,UAAYA,EACjBlzB,KAAKykC,UAAUzkC,KAAKilC,YAAYwB,UAAUD,EAAWhN,EAAGgN,EAAWjN,KAErEv5B,KAAKomC,gBAAgBC,UAAU,6BAA4B,CAAE3pC,KAAMsD,QAIvE,mBACE,OAAOA,KAAKkkC,cAGd,iBAAiBD,GACfjkC,KAAKkkC,cAAgBD,EAGvB,eACE,OAAOjkC,KAAK8X,QAAU9X,KAAKinB,MAAQ,YAAU8d,KAAO,YAAU2B,SAGhE,aAAa5uB,GACX9X,KAAK8X,MAAQA,EAGf,gBACE,OAAO9X,KAAKrK,QAAU,aAAWirB,QAGnC,cAAcjrB,GACZqK,KAAKrK,OAASA,EAGhB,iBACE,OAAOqK,KAAKskC,YAGd,iBACE,OAAOtkC,KAAKukC,YAGd,YACE,OAAOx9B,MAAM89B,aAAe7kC,KAAKsmC,0BAGnC,SAASzf,GAGP,IAAI2T,EACAnX,EAHJtc,MAAMy1B,SAAS3V,GAKX,UAAWA,GAAwB,MAAfA,EAAMsL,OAAiBtL,EAAMsL,QAAUnyB,KAAK6jC,WAAW1R,QACxEqI,IACHA,EAAIx6B,KAAK6jC,WAAWuB,SAEtB5K,EAAErI,MAAQtL,EAAMsL,OAEd,WAAYtL,GAAyB,MAAhBA,EAAMuL,QAAkBvL,EAAMuL,SAAWpyB,KAAK6jC,WAAWzR,SAC3EoI,IACHA,EAAIx6B,KAAK6jC,WAAWuB,SAEtB5K,EAAEpI,OAASvL,EAAMuL,QAEfoI,GACFx6B,KAAKwkC,cAAchK,GAGjB,MAAO3T,GAAoB,MAAXA,EAAM2S,GAAa3S,EAAM2S,IAAMx5B,KAAKikC,SAASzK,IAC1DnW,IACHA,EAAIrjB,KAAKikC,SAASmB,SAEpB/hB,EAAEmW,EAAI3S,EAAM2S,GAEV,MAAO3S,GAAoB,MAAXA,EAAM0S,GAAa1S,EAAM0S,IAAMv5B,KAAKikC,SAAS1K,IAC1DlW,IACHA,EAAIrjB,KAAKikC,SAASmB,SAEpB/hB,EAAEkW,EAAI1S,EAAM0S,GAEVlW,GACFrjB,KAAK0kC,YAAYrhB,GAGf,UAAWwD,GACb7mB,KAAK2mC,WAAW9f,EAAMI,OAEpB,kBAAmBJ,IACrB7mB,KAAKkkC,cAAgBrd,EAAMqd,eAEzB,UAAWrd,IACb7mB,KAAK8X,MAAQ+O,EAAM/O,OAEjB,WAAY+O,IACd7mB,KAAKrK,OAASkxB,EAAMlxB,QAElB,cAAekxB,GACjB7mB,KAAK4mC,eAAe/f,EAAMqM,WAI9B,UACE,OAAO,OAAP,wBACKnsB,MAAM8/B,WAAS,CAClBrN,EAAGx5B,KAAK8mC,eAAiB9mC,KAAKimC,cAAczM,OAAIhhB,EAChD+gB,EAAGv5B,KAAK8mC,eAAiB9mC,KAAKimC,cAAc1M,OAAI/gB,EAChD2Z,MAAOnyB,KAAKsmC,0BAA4BtmC,KAAK+mC,gBAAgB5U,WAAQ3Z,EACrE4Z,OAAQpyB,KAAKsmC,0BAA4BtmC,KAAK+mC,gBAAgB3U,YAAS5Z,EACvE0a,UAAWlzB,KAAK2kC,cAChB1d,MAAOjnB,KAAKklC,UACZhB,cAAelkC,KAAKkkC,cACpBpsB,MAAO9X,KAAK8X,MACZniB,OAAQqK,KAAKrK,SAIjB,kBAAkB3B,GAChB,IAAKgM,KAAKinB,OAASjnB,KAAK2kC,cAAe,CACrC,MAAM,EAAEnL,EAAC,EAAED,GAAMv5B,KAAKimC,cACtBjyC,EAAEgzC,UAAUxN,EAAGD,IAInB,oBAAoBvlC,GAClB,IAAKgM,KAAKinB,OAASjnB,KAAK2kC,cAAe,CACrC,MAAM,EAAEnL,EAAC,EAAED,GAAMv5B,KAAKimC,cACtBjyC,EAAEgzC,WAAWxN,GAAID,KAKR,O,kCCnbf,wZAAO,MAAM0N,EAA0B,qBAC1BC,EAAkC,6BAClCC,EAAoC,+BACpCC,EAAsB,YACtBC,EAAyB,gCACzBC,EAAiC,wCACjCC,EAA0B,iCAC1BC,EAAmD,oCACnDC,EAA8B,+BAC9BC,EAA2B,gCAC3BC,EAAqC,0BACrCC,EAA0C,sC,kCCVvD,uoBAuCO,MAAMC,EAAoB,CAAC,yBAA0B,4BAE/CC,EAAiBx1C,IAAO,QAAC,OAA4B,QAA5B,EAAgB,QAAhB,EAAAA,aAAG,EAAHA,EAAKmyB,mBAAW,eAAEsjB,kBAAU,QAAI,IACzDC,EAAgB11C,IAAO,QAAC,OAA2B,QAA3B,EAAgB,QAAhB,EAAAA,aAAG,EAAHA,EAAKmyB,mBAAW,eAAEwjB,iBAAS,QAAI,IACvDC,EAAuB51C,IAAO,QAAC,OAAkC,QAAlC,EAAgB,QAAhB,EAAAA,aAAG,EAAHA,EAAKmyB,mBAAW,eAAE0jB,wBAAgB,QAAI,IA8BrEC,EAAYC,I,gBAIvB,MA9BoB,CAACC,GACd,IACLA,EACA,CAAC3iB,EAAyB5wB,EAAOuB,KAC/B,MAAMiyC,EAAQjyC,EAAIvE,MAAM,KACH,IAAjBw2C,EAAMlsC,QACRksC,EAAMvyC,KAAK,OAGb,MAAMolB,EAAgBotB,SAASD,EAAM,GAAI,IAWzC,OAVI,IAAWntB,GACbuK,EAAO3vB,KAAK,CACVolB,gBACAqtB,SAAUF,EAAM,GAAGG,gBAIrBv0B,QAAQC,KAAK,iCAAkC9d,GAG1CqvB,GAET,IAQKgjB,EAF+C,QAApD,EAA4C,QAA5C,EAAuB,QAAvB,EAAAN,aAAgB,EAAhBA,EAAkBx0C,aAAK,eAAE+0C,2BAAmB,eAAEC,cAAM,eAAEC,gBACO,QAA7D,EAA4C,QAA5C,EAAuB,QAAvB,EAAAT,aAAgB,EAAhBA,EAAkBx0C,aAAK,eAAE+0C,2BAAmB,eAAEG,uBAAe,eAAED,gBAKtDE,EAAgB5J,GAC3B,GAAGA,EAAKhkB,iBAAiBgkB,EAAKqJ,WAAWQ,cAE9BC,EAAgBz2C,GACpBA,EAAKiJ,QAAQ,gBAAiB,CAACytC,EAAOC,EAAMC,KACzCD,GAAQ,KAAOC,EAAOX,eAIrBY,EACXC,IAEar/B,MAAMsF,QAAQ+5B,GAAgBA,EAAe,CAACA,IAC1BttC,OAAQhK,GAAgB,oBAAUA,IAExCiP,OAAO,CAACsoC,EAAwCv3C,K,UACzE,MAAMI,EAAO,wCAA8BJ,GACrCw3C,EAAY,kCAAwBx3C,IACpC,KAAEQ,GAASR,EAAYkC,SACvB0C,EAAgD,QAAlC,EAAqB,QAArB,EAAA5E,aAAW,EAAXA,EAAakC,gBAAQ,eAAEswB,mBAAW,eAAG,6BACnDilB,EAAoC,QAAtB,EAAAD,aAAS,EAATA,EAAWhlB,mBAAW,eAAEilB,YACtC9yC,EAAuB3E,EAAYkC,SAASC,UAC5CC,EAAQwC,GAAeA,EAAYwF,OAAS,GAAKxF,EAAcqyC,EAAaz2C,GAC5Ek3C,EAAY,YAAmBF,GAC/BG,EAAU,YAAqBD,GAarC,OAXAH,EAAc/2C,GAAQ,CACpB6C,IAAKrD,EACLQ,OACAoE,cACA6yC,cACAr1C,QACAu1C,UACAv3C,OACAo3C,YACA7yC,wBAEK4yC,GACN,IAGQK,EAA4B,CACvCC,EACAC,EACAC,K,QAEA,MAAMC,EAAW,IAAOH,EAAW,CAAEr3C,KAAMs3C,IAG3C,MAAO,CAACE,EAFgE,QAApD,EAAqB,QAArB,EAAAA,aAAQ,EAARA,EAAUxlB,mBAAW,eAAG,oCAA4B,QAAIulB,IAKjEE,EAAoBz3C,IAC/B,IAAKA,EACH,OAEF,MAAM03C,EAAoB,IAAO13C,EAAKV,MAAM,MAC5C,OAAO,IAAQo4C,EAAUp4C,MAAM,gBAGjC,IAAYq4C,EAIAC,GAJZ,SAAYD,GACV,sBACA,sBAFF,CAAYA,MAAY,KAIxB,SAAYC,GACV,wBADF,CAAYA,MAAsB,KAG3B,MAAMC,EAAqBt2C,IACzB,CACLu2C,SAAU,CACRx1C,MAAOq1C,EAAaG,SACpBpiC,MAAOnU,EAAE,iDAEXw2C,SAAU,CACRz1C,MAAOq1C,EAAaI,SACpBriC,MAAOnU,EAAE,yDAuBFy2C,EAAsBx4C,IACdA,IAAgB,IAAUA,GAnBlB,CAACA,GACrB,IAAUA,EAAY0D,OAAOtD,OAASJ,EAAY0D,OAAOtD,KAAKgK,OACjEpK,EAAY0D,OAAOtD,KAAKM,KAAK,EAAGL,IAAKM,IAAON,IAAKO,MAC/C,MAAMC,EAAK,SAAcF,GACnBG,EAAK,SAAcF,GACzB,OAAKC,GAAOC,EAGPD,EAGAC,EAGE,WAAgBD,EAAIC,IAFjB,EAHD,EAHAH,EAAEI,cAAcH,KAU3B,GAGwD63C,CAAcz4C,GAAe,IACvEiP,OAAO,CAAC7O,GAAQC,UAChCD,EAAKC,GAAOA,EACLD,GACN,IAGQs4C,EAAqB,IACzB,CACL,CACEjc,QAAQ,EACRx6B,KAAM,eAAaA,KACnBy6B,KAAM,eAAa52B,KAKZ6yC,EAA0Bx2C,IACrC,MAAMmC,EAAW,GASjB,OARInC,GACFmC,EAASP,KAAK,CACZ04B,QAAQ,EACRx6B,KAAM,mBAAiBA,KACvBy6B,KAAM,mBAAiB52B,GACvB3D,cAGGmC,I,4XC7MF,MAAMs0C,EAAY,CACvB32C,EACAzB,EACA2B,EACA02C,KAEA,MAAO/uC,EAAMgvC,GAAW,cACjBviB,EAAQwiB,GAAa,YAAe,IACpCviB,EAAWwiB,GAAgB,aAkBlC,OAjBA,YAAgB,KACY,OAAD,6BACvB,IACEA,EAAa,MACbD,GAAU,GACVD,EAAQ,MACR,MAAMx0C,QAAiB,aAAOrC,EAAMzB,EAAM2B,EAAW02C,GACrDC,EAAQx0C,GACR,MAAOH,GACP60C,EAAa70C,G,QAEb40C,GAAU,QAIb,CAAC92C,EAAMzB,EAAM2B,EAAW02C,IAEpB,CAAC/uC,EAAMysB,EAAQC,K,kCC7BxB,sTAyCO,MAiCMyiB,EAA8B91B,I,MACzC,OAAIA,EAAYjhB,SAASmpC,aAChBloB,EAAYjhB,SAASmpC,cAGK,QAAzB,EAAAloB,EAAYjhB,SAAS1B,YAAI,eAAEiJ,QAAQ,kBAAmB,KAAzD,KAGIyvC,EAAqB,CAChCx0B,EAAyB,KACzBC,EACAw0B,K,gBAEA,IAAKz0B,IAAaC,EAGhB,OADAzC,QAAQ/d,MAAM,wDACP,KAGT,MAAMw2B,EAjCuB,EAACjW,EAAyBC,K,UACvD,OAAID,EACKA,EAASxiB,SAAS1B,KAGvBmkB,EAEgC,QAAhC,EAA0B,QAA1B,EAAAA,EAAUxkB,KAAKuxB,mBAAW,eAAElxB,YAAI,SACD,QAA9B,EAAAmkB,EAAUziB,SAASswB,mBAAW,eAAG,OAA4B7N,EAAUziB,SAAS1B,KAG9E,MAsBc44C,CAAgB10B,EAAUC,GAEzC00B,EAAa10B,aAAS,EAATA,EAAWxkB,KAAKk5C,WAE7BC,EAAkB30B,aAAS,EAATA,EAAWxkB,KAAKgQ,OAClCse,EAAiB/J,aAAQ,EAARA,EAAUvkB,KAAKgQ,OAChCA,EAASmpC,GAAmB,YAAqB7qB,GAGjD+D,EAAc,IAClB,GACkB,QAAlB,EAAA9N,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEswB,YACD,QAAnB,EAAA7N,aAAS,EAATA,EAAWziB,gBAAQ,eAAEswB,YACrB,CACE,CAAC,IAAoB8R,MAAO,iBAE7B3f,aAAS,EAATA,EAAWxkB,KAAKuxB,gBACiB,QAA/B,EAAA/M,aAAS,EAATA,EAAWziB,SAASswB,mBAAW,eAAG,OAA4B,CAC7D,CAAC,KAA0BmI,WAG1BnI,EAAY,2DACZA,EAAY,qCACZA,EAAY,iCACZA,EAAY,oCACZA,EAAY,oCACZA,EAAY,YACZA,EAAY,KAuCnB,MAtHgC,CAACrP,IACjC,IAAIo2B,EAAiBp2B,EAGrB,GAAI,IAAMo2B,EADiB,uBACoB,CAG7C,MAAMC,EAAqB,IAAMD,EAJR,uBAKzBA,EAAiB,IAAOA,EAAgB,CALf,wBAMzBA,EAAiB,IAAQA,EAAgB,CACvCp5C,KAAM,CACJq5C,wBAKN,OAAOD,GAsGAE,CArCgB,CACrBhpC,WAAYiU,EAAWA,EAASjU,WAAakU,EAAUlU,WACvDxO,KAAM,mBAAiBA,KACvBC,SAAU,OAAF,yBACFi3C,aAAO,EAAPA,EAAS9N,cACT,CACEA,aAAiB1Q,EAAH,KAEhB,CACEn6B,UACgC+lB,KAAX,QAAnB,EAAA5B,aAAS,EAATA,EAAWziB,gBAAQ,eAAE1B,MACjB,GAAGy4C,EAA2Bt0B,KAAa,iBAC3C,GAAGgW,KAAgB,mBACzB,CACNnI,cACArwB,UAAWuiB,EAAWA,EAASxiB,SAASC,UAAYwiB,EAAUziB,SAASC,UACvEoD,OAAQ,IACN,GACkB,QAAlB,EAAAmf,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEqD,OACD,QAAnB,EAAAof,aAAS,EAATA,EAAWziB,gBAAQ,eAAEqD,SACpBof,aAAS,EAATA,EAAWxkB,KAAKuxB,cAAehN,IAAa,CAC3C,sBAAuBiW,MAI7Bx6B,KAAM,OAAF,qDACEwkB,aAAS,EAATA,EAAWxkB,OAAQ,MAClBwkB,aAAS,EAATA,EAAWxkB,KAAKuxB,cAAehN,IAAa,CAC/CgN,YAAa,CACXlxB,KAAMm6B,KAGNxqB,GAAU,CAAEA,WAAS,CACzBkpC,aACA31C,OAAQ,UAMDg2C,EAAiC/e,IACrC,CACLgf,oBAAqB,CACnBz3C,SAAU,CACRqD,OAAQ,CAAE,CAAC,IAAoBmf,UAAWiW,IAE5Cx6B,KAAM,CACJy5C,YAAa,CAAC,iBACdrvC,UAAW,CACTmrB,SAAU,CACRmkB,QAAS,YAQRC,EACXnf,IAEO,CACLgf,oBAAqB,CACnBz3C,SAAU,CACR63C,WAAY,CAAC,gCACbx0C,OAAQ,CACN,CAAC,IAAoBmf,UAAWiW,EAChC,qBAAsB,OACtB,uBAAwB,OACxB,4BAA6BA,IAGjCx6B,KAAM,CACJy5C,YAAa,CAAC,iBACdrvC,UAAW,CACTmrB,SAAU,CACRmkB,QAAS,QAGbG,iBAAkB,UAClBC,WAAY,iBAMdC,EAA4BC,GAChCrrB,IAEA,IAAIsrB,EAAwD,CAC1Dl3C,KAAM,IAAYm3C,eAClBvwC,KAAM,CAAEwwC,SAAU,KAoBpB,OAjBIH,IACFC,EAAmB,CACjBl3C,KAAM,IAAYq3C,IAClBzwC,KAAM,CACJ0wC,sBAAuB,CACrBC,UAAWN,MAKfrrB,EAAU2T,WACZ2X,EAAmB,CACjBl3C,KAAM,IAAYw3C,YAClB5wC,KAAM,KAIH,OAAP,wBACKglB,GACAsrB,IAIMO,EAA6B,CACxCj2B,EACAk2B,GAAiC,EACjCT,EAAuB,MAEvB,MACEj4C,UAAU,UAAEC,GACZhC,MAAM,OAAEgQ,EAAM,UAAE5F,IACdma,EAEJ,MAAO,CACLviB,YACA04C,YAAa1qC,GAAU,IAAI+M,IAAKwR,GAAW,OAAD,wBACrCA,GAAK,CACR5rB,MAAO4rB,EAAMC,WAEfpkB,WAAYA,GAAa,IAAI2S,IAAK5Y,IAA6B,CAC7D9D,KAAM8D,EAAS9D,KACfs6C,UAAWF,EAAwB,IAA2B,GAC9D9wC,KAAM,OAAF,wBACC,IAA0BxF,EAASpB,OAAK,CAC3CA,KAAMoB,EAASpB,UAGnBm2C,YAAa30B,EAASvkB,KAAKk5C,YAAc,IAAIn8B,IAAIg9B,EAAyBC,MAIjEY,EAA8B79B,GAGlCnO,OAAOC,KAAKkO,GAAKA,IAAK1c,IAEpB,CAAEA,OAAMsC,MADDoa,EAAI1c,MAwBTw6C,EAAyB,CACpCt2B,EACAu2B,EACA11C,EACAitB,EACA2mB,KAEA,MAAM,WAAE0B,EAAU,WAAExB,GAAe4B,EAE7BC,EAAmC,CACvCh5C,SAAU,CACRswB,cACAjtB,UAEFpF,KAAM,CACJuxB,YAAa,CACXlxB,KAAMkkB,EAASxiB,SAAS1B,MAE1B2P,OAAQ0qC,EAAW39B,IAAI,EAAG1c,OAAMsC,YAA8B,CAAGtC,OAAMsC,WACvEu2C,WAAY,YAAyBA,KAGzC,OAAOH,EAAmBx0B,EAAUw2B,EAAiB/B,K,kCC7TvD,sCAOYgC,EAPZ,4CAOA,SAAYA,GACV,gBACA,oBAFF,CAAYA,MAAsB,KA0CnB,IA5BuC,EACpDnb,WACA7tB,WACAipC,oBACAC,gBAAe,EACfC,oBAAmB,EACnBn4C,UAAUg4C,EAAuBxsB,QACjC4sB,aAEA,uBAAKv5C,UAAU,uBACb,gBAAC,eAAY,CACX6Q,WAAYV,EACZipC,kBAAmBA,EACnBC,aAAcA,IAEZC,GAAoB,gBAAC,IAA+B,CAACnpC,SAAUA,IAChEopC,GAAW,uBAAKv5C,UAAU,gCAAgCu5C,IAE7D,uBACEv5C,UAAW,EAAG,+BAAgC,CAC5C,CAAC,MAAMmB,GAAYA,IAAYg4C,EAAuBxsB,WAGvDqR,K,6bCyCQ,IAxCkD,I,IAAA,UAAE79B,GAAS,EAAK+C,EAAK,IAArB,eAC/D,MAAM,EAAEnD,GAAM,2BACRy5C,EAAiB,YAAwC,KACzDC,EAAwB,YAC5B,MAGIC,EAA6B,UACjC,IAAM,YAAmCD,GACzC,CAACA,IAGGlxC,EAAY,UAAc,KAC9B,IAAIoxC,EAAuB,YAAwBx5C,GAUnD,MATA,IAAIq5C,KAAmBE,GAA4BhuB,QAASkuB,I,QAC1D,MAAMC,EAAoD,QAAjC,KAAAD,EAAaE,YAAWvxC,iBAAS,sBAAGpI,GACzD05C,IACFF,EAAuB,OAAH,wBACfE,GACAF,MAIF5sC,OAAOC,KAAK2sC,GAAsBz+B,IAAK7Y,GAAS,OAAD,wBACjDs3C,EAAqBt3C,IAAI,CAC5Bq4B,KAAMr4B,MAEP,CAACq3C,EAA4BF,EAAgBr5C,IAEhD,OACE,gBAAC,IAAQ,CAACoI,UAAWA,GACnB,gBAAC,KAAgB,iBACXrF,EAAK,CACT62C,YAAah6C,EAAE,kCACfi6C,aAAc,CAAC,WAAY,SAAU,mC,qrBCvDtC,MAAMC,EAAoC95C,GAA8C,OAAD,6BAC5F,MASM+5C,SAT6C,YAAQ,IAA4B,CACrFn5C,GAAIZ,KAEuB6H,OAC1BmyC,I,cACC,QAAmB,QAAlB,EAAY,QAAZ,EAAAA,EAAIj6C,gBAAQ,eAAE1B,YAAI,eAAE+kC,WAAW,mCACZ,QAAlB,EAAY,QAAZ,EAAA4W,EAAIj6C,gBAAQ,eAAE1B,YAAI,eAAE+kC,WAAW,kCACvB,QAAV,EAAA4W,EAAIz4C,cAAM,eAAE0C,SAAU,IAA2Bg2C,oBAEvBl/B,IAAKi/B,GAAQ,gBAAMA,EAAIh8C,KAAKu3B,UAAU1tB,OAAOqyC,SAG3E,OADAH,EAASx7C,KAAK,WACVw7C,EAAS9xC,OAAS,EACb8xC,EAASA,EAAS9xC,OAAS,GAE7B,QAGIkyC,EAA8Bn6C,IACzC,MAAOu1B,EAAS6kB,GAAc,WAA8B,MAS5D,OARA,YAAgB,KACdN,EAA2B95C,GACxBuM,KAAK6tC,GACLvsB,MAAO7rB,GAEN+d,QAAQC,KAAK,gEAAiEhe,KAEjF,CAAChC,IACGu1B,GAGI8kB,EAAwBC,KAC9BA,GACE,cAAIA,EAAS/kB,QAAS,KAGlBglB,EAAuBD,KAC7BA,GACE,cAAIA,EAAS/kB,QAAS,KAQlBilB,EAA2Bx6C,IACtC,MAAMy6C,EAA2BN,EAA2Bn6C,IACrDgc,GAAU,eAEV0+B,GAAuB,aAAgB,CAC5C7nB,MAAO,oBAAkB9K,SACzB5lB,SAAU,oBAAkB8lB,OAC5BjoB,UAAW,IACX8yB,KAAM,WAbkC,IAACwnB,EA0B3C,MAAO,CACLK,gBA3ByCL,EAgBYG,IAdhD,aAAGH,EAAS/kB,QAAS,KAgBxB,YAAwBvZ,GACxB,IAAqBsoB,2BASvBsW,YANAH,IAAqBJ,EAAqBI,GACtC,IAAmBI,OACnB,IAAmB9W,4BAKvB2W,wBAISI,EAA+BC,IAC1C,MAAOC,GAAmB,eACpBC,EAAkBd,EAA2Ba,GAC7CE,EAAsD,KAA3BD,aAAe,EAAfA,EAAiBE,SAAeF,aAAe,EAAfA,EAAiBG,QAAS,GAC3FL,EAAe,IAAwBG,IAG5BG,EAA8CN,IACzD,MAAOC,GAAmB,eACpBC,EAAkBd,EAA2Ba,GAC7CM,EACuB,KAA3BL,aAAe,EAAfA,EAAiBE,SAAeF,aAAe,EAAfA,EAAiBG,QAAS,GAC5DL,EACE,IACAO,IAKSC,EAA8CR,IACzD,MAAOC,GAAmB,eACpBC,EAAkBd,EAA2Ba,GAC7CQ,EACuB,KAA3BP,aAAe,EAAfA,EAAiBE,SAAeF,aAAe,EAAfA,EAAiBG,QAAS,GAC5DL,EACE,IACAS,K,kCC7HJ,4GAuBA,MAiCaC,EACXtO,GAEAA,EAAWpyB,IAAK4yB,GACP,OAAP,wBACKA,GAAS,CACZgM,WAAY,OAAF,wBACLhM,EAAUgM,YAAU,CACvBvxC,UAAYpI,GACV4M,OAAO8uC,QAAQ/N,EAAUgM,WAAWvxC,WAAa,IAAI0E,OAAO,CAACtL,GAAMU,EAAKC,MACtE,MAAMw5C,EA3CM,EACtB37C,EACA2tC,EACAiO,EACAnpB,EACAikB,EAAO,MAEP,IAAKjkB,EACH,OAAO,OAAP,QAASzyB,aAAc02C,GAGzB,GAAIjkB,EAAM8C,QAAS,CACjB,MAAMsmB,EAAqB,aAA2BppB,GACtD,OAAO,OAAP,QAASzyB,YAAWF,KAAM+7C,GAAuBnF,GAInD,MAAMoF,EAAgB,aAAkBrpB,EAAMI,MAAOJ,EAAM3yB,MAC3D,IAAKg8C,EASH,OAPA/7B,QAAQC,KACN,WAAW2tB,EAAUoO,oDAAoDtpB,EAAMI,oBAAoBJ,EAAM3yB,qHAAqH87C,kEAC9NjO,EACAiO,EACAnpB,EACAikB,GAEK,KAET,MAAMsF,EAAoB,aAAkBF,GAC5C,OAAO,OAAP,QAAS97C,YAAWF,KAAMk8C,GAAsBtF,IAaZuF,CACxBj8C,EACA2tC,EACAzrC,EACAC,aAAQ,EAARA,EAAUswB,MACVtwB,aAAQ,EAARA,EAAUu0C,MAKZ,OAHIiF,IACFn6C,EAAIU,GAAOy5C,GAENn6C,GACN,SAqCE,IAhC6C,EAAGxB,YAAW69B,eACxE,MAAOpL,EAAO2V,GAAY,WAAgC,IAAI,IAAgBpoC,IAE9E,YAAgB,KACdooC,EAAS,IAAI,IAAgBpoC,KAC5B,CAACA,IAEJ,MAAMq5C,EAAiB,YAAwC,KACzDC,EAAwB,YAC5B,MAGIC,EAA6B,UACjC,IAAMkC,EAAmCnC,GACzC,CAACA,IAGH,OACE,gBAAC,IAAa4C,SAAQ,CAACv7C,MAAO8xB,GAC3BzyB,GACC,gCACG,IAAIu5C,KAA+BF,GAAgBt+B,IAAK/b,GACvD,gBAAC,IAAkB,CAACkD,IAAKlD,EAAQ26C,WAAWh2C,GAAIw4C,iBAAkBn9C,EAAQ26C,eAI/E35C,GAAa,gBAAC,IAAqB,MACnC69B,K,kCC7GP,6VAMO,MAAMue,EAAe,EAC1B/9C,OACAg+C,kBACA95C,kBACA+5C,cACA3G,cACA31C,gBASA,MAAMoD,EAAS,OAAH,QACVm5C,IAAKl+C,EACL,6BAA8BA,EAC9B,8BAA+BA,EAC/B,yBAA0BA,GACtBkE,GAAmB,CACrB,2BAA4BA,IAiBhC,OAbI+5C,IACFl5C,EAAO,4BAA8Bk5C,GAEnCD,GAAmBA,EAAgBtlC,OAAO9O,OAAS,IACrD7E,EAAO,6BAA+Bi5C,GAEpC1G,IACFvyC,EAAO,oCAAsCuyC,GAE3C31C,IACFoD,EAAO,sCAAwCpD,GAG1CoD,GAGIo5C,EAAuB,KAC3B,CACL,4BAA6B,wBAIpBC,EAAsB,KAC1B,CACL,CAAC,KAA4B,UAIpBC,EAAoB,CAACC,EAAgBC,KACzC,CACL,2BAA4BD,EAC5B,2BAA4BC,GAAU,KAI7BC,EAAuB,CAClCxS,EACA0L,EACA+G,EACAC,EACAlH,EAAmB,YAChB,CACH,CAAC,MAAsBroC,KAAKiH,UAAU,CACpC,CACElV,KAAM,CAAEO,KAAM,iBAAkBzB,KAAM,GAAG03C,KAAaF,IAAY71C,UAAW88C,GAC7EE,UAAW,4CAA4C3S,aACvD4S,OAAQ,IAAIF,OAkBLG,EAAe,CAAC/6C,EAAqB9D,KAChD,MAAM8K,EAAe,IAAehH,GACpC,OAAIgH,EACK,CACLozC,IAAKl+C,EACL,CAAC8K,EAAa0rC,eAAgBx2C,GAG3B,CACLk+C,IAAKl+C,IAII8+C,EAAY,CAACC,EAAmCC,K,8DAC3D,GAAI,IAAUD,GAAmB,OAAOC,EAExC,MAAMC,EAAa,IAAQ,GAAIF,GAAoB,GAAIC,GACjDE,EAA2D,QAAvC,EAA0B,QAA1B,EAAAH,aAAgB,EAAhBA,EAAkBr9C,gBAAQ,eAAEswB,mBAAW,eAAEmtB,cA9BnC,IAACC,EA8CjC,GAfAH,EAAWv9C,SAASqD,OAAS,OAAH,wBACrBi6C,EAAYt9C,SAASqD,QACpBm6C,EAA8C,QAA1B,EAAAH,aAAgB,EAAhBA,EAAkBr9C,gBAAQ,eAAEqD,OAAS,IAE3Dk6C,EAAWv9C,SAASswB,cACtBitB,EAAWv9C,SAASswB,YAAc,OAAH,wBACzBktB,EAC0B,QAA1B,EAAAH,aAAgB,EAAhBA,EAAkBr9C,gBAAQ,eAAEswB,aAtCHotB,EAuCoB,QAA1B,EAAAL,aAAgB,EAAhBA,EAAkBr9C,gBAAQ,eAAEswB,YA7BhD,IAAOotB,EATa,CACzB,2BACA,2BACA,4BACA,8BACA,gDACA,cACA,uDAgCKJ,EAAYt9C,SAASswB,eAGW,QAAnC,EAAyB,QAAzB,EAAe,QAAf,EAAAitB,EAAWt/C,YAAI,eAAE4xB,gBAAQ,eAAE7vB,gBAAQ,eAAEqD,UACvCk6C,EAAWt/C,KAAK4xB,SAAS7vB,SAASqD,OAA6C,QAApC,EAA0B,QAA1B,EAAgB,QAAhB,EAAAi6C,EAAYr/C,YAAI,eAAE4xB,gBAAQ,eAAE7vB,gBAAQ,eAAEqD,SAE9E,IAA+C,QAArC,EAA+B,QAA/B,EAAqB,QAArB,EAAAg6C,EAAiBp/C,YAAI,eAAE4xB,gBAAQ,eAAE5xB,YAAI,eAAE0/C,YAAa,CACjEJ,EAAWt/C,KAAK4xB,SAAS5xB,KAAK0/C,WAAaN,EAAiBp/C,KAAK4xB,SAAS5xB,KAAK0/C,WAC/E,MAAMlnC,EAAQ,IAAY4mC,EAAiBp/C,KAAK4xB,SAAS5xB,KAAK0/C,WAAY,CACxEr/C,KAAM++C,EAAiBr9C,SAAS1B,OAE9BmY,GAAS,EACX8mC,EAAWt/C,KAAK4xB,SAAS5xB,KAAK0/C,WAAWlnC,GAAS,OAAH,sCAC1C4mC,EAAiBp/C,KAAK4xB,SAAS5xB,KAAK0/C,WAAWlnC,IAC/C6mC,EAAYr/C,KAAK4xB,SAAS5xB,KAAK0/C,WAAW,IAAE,CAE/CC,aAAcP,EAAiBp/C,KAAK4xB,SAAS5xB,KAAK0/C,WAAWlnC,GAAOmnC,eAGtEL,EAAWt/C,KAAK4xB,SAAS5xB,KAAK0/C,WAAW97C,KAAKy7C,EAAYr/C,KAAK4xB,SAAS5xB,KAAK0/C,WAAW,IAiB5F,OAdoB,QAAhB,EAAAJ,aAAU,EAAVA,EAAYt/C,YAAI,eAAE4/C,eAAe,eACnCN,EAAWt/C,KAAK4oB,SAAqC,QAA1B,EAAgB,QAAhB,EAAAy2B,EAAYr/C,YAAI,eAAE4oB,gBAAQ,QAAyB,QAArB,EAAAw2B,EAAiBp/C,YAAI,eAAE4oB,WAE/D,QAAf,EAAA02B,EAAWt/C,YAAI,eAAE2xB,YACnB2tB,EAAWt/C,KAAK2xB,SAAW0tB,EAAYr/C,KAAK2xB,WAEjB,QAAxB,EAAgB,QAAhB,EAAA0tB,EAAYr/C,YAAI,eAAEuL,cAAM,eAAEs0C,eACE,QAAxB,EAAgB,QAAhB,EAAAP,aAAU,EAAVA,EAAYt/C,YAAI,eAAEuL,cAAM,gBAAEs0C,cAGA,QAA/B,EAAyB,QAAzB,EAAe,QAAf,EAAAP,EAAWt/C,YAAI,eAAE4xB,gBAAQ,eAAE5xB,YAAI,eAAE4/C,eAAe,cAClDN,EAAWt/C,KAAK4xB,SAAS5xB,KAAK8/C,QAA+C,QAArC,EAA+B,QAA/B,EAAqB,QAArB,EAAAV,EAAiBp/C,YAAI,eAAE4xB,gBAAQ,eAAE5xB,YAAI,eAAE8/C,SAG1ER,GAGIS,EAAqBxf,I,UAChC,OAAO,IAC+B,QAApC,EAA0B,QAA1B,EAAgB,QAAhB,EAAAA,aAAU,EAAVA,EAAYvgC,YAAI,eAAE4xB,gBAAQ,eAAE7vB,gBAAQ,eAAEqD,OACtC,CAAC5B,EAAKb,EAAOuB,K,QAIX,OAHgC,QAA3B,EAAmB,QAAnB,EAAAq8B,EAAWx+B,gBAAQ,eAAEqD,cAAM,eAAEw6C,eAAe17C,MAC/CV,EAAIU,GAAOvB,GAENa,GAET,M,kCC1KJ,6BAgFe,IAvE+C,EAAG26C,uBAC/D,MAAM6B,EAAmB,aAAkC,MACrD,GAAEr6C,EAAE,SAAEwc,EAAQ,UAAE/X,GAAc+zC,EAC9BtO,EAAe,aAAsBsO,EAAiBtO,cACtDoQ,EAAmB,SAAoC,CAC3D99B,WACA0tB,eACAzlC,cA6DF,OA1DA,YAAgB,KAEd,IADsB41C,EAAiBE,aAAav6C,GAChC,CAClBs6C,EAAiBE,QAAU,CACzBh+B,WACA0tB,eACAzlC,aAEF41C,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,SAEtD,MAAM,aAAEC,EAAY,mBAAEC,EAAkB,uBAAEC,GAA2BnC,EACjEiC,EACFA,IACG7xC,KAAM8hC,IACL4P,EAAiBE,QAAQvP,gBAAkBP,EAC3C2P,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,WAEvDtwB,MAAM,KACLowB,EAAiBE,QAAQvP,gBAAkB,IAAMhmC,QAAQyV,QAAQ,IACjE2/B,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,YAG1DF,EAAiBE,QAAQvP,gBAAkB,IAAMhmC,QAAQyV,QAAQ,IACjE2/B,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,UAGpDE,EACFA,IACG9xC,KAAMuzB,IACLme,EAAiBE,QAAQtP,kBAAoB/O,EAC7Cke,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,WAEvDtwB,MAAM,KACLowB,EAAiBE,QAAQtP,kBAAoB,KAAM,EACnDmP,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,YAG1DF,EAAiBE,QAAQtP,kBAAoB,KAAM,EACnDmP,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,UAGpDG,EACFA,IACG/xC,KAAMiiC,IACLyP,EAAiBE,QAAQrP,oBAAsBN,EAC/CwP,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,WAEvDtwB,MAAM,KACLowB,EAAiBE,QAAQrP,oBAAsB,OAC/CkP,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,YAG1DF,EAAiBE,QAAQrP,oBAAsB,OAC/CkP,EAAiBtQ,gBAAgB/pC,EAAIs6C,EAAiBE,YAGzD,CAACH,EAAkB7B,EAAkBx4C,EAAIwc,EAAU/X,EAAWylC,IAE1D,O,kCC7ET,4EAwDe,uBAzCqD,EAAG0Q,kBACrE,MAAMP,EAAmB,aAAkC,MACrD,UAAEh+C,EAAS,iBAAEotC,EAAgB,iBAAEC,GAAqB2Q,GACnD51C,EAAWo2C,GAAgB,aAC5BvhB,EAAmB,YAAoBj9B,GACvCy+C,EAAgB,UACpB,IAAOz+C,GAAaotC,EAAmBC,EAAmB,GAC1D,CAACD,EAAkBC,EAAkBrtC,IAGjC0+C,EAA2B,aAAoBF,EAAc,KAE7DG,EAAmB,YAA8CF,GA0BvE,OAzBA,YAAgB,IAAMC,EAAyBC,GAAmB,CAChED,EACAC,IAIF,YAAgB,KACdX,EAAiBvrB,MAAQ,MAExB,CAACzyB,IAEJ,YAAgB,KACT,IAAUoI,IACb,YAAwB41C,EAAkB51C,EAAWm2C,EAAathB,GAC/D1wB,KAAM2zB,IACL8d,EAAiB3pB,UAAY6L,EAAI7L,UAC7B6L,EAAI9L,SACN4pB,EAAiB5pB,QAAS,EAC1B4pB,EAAiBvrB,MAAQyN,EAAIzN,SAGhC5E,MAAM,SAEV,CAACzlB,EAAWm2C,EAAaP,EAAkB/gB,IAEvC,Q,kCCjDT,gDAGO,MAAM2hB,EAA0B,CACrCZ,EACA51C,EACAm2C,EACAthB,KAEA,MAAM,iBAAEmQ,EAAgB,iBAAEC,GAAqB2Q,EAC/C,IAAK5Q,IAAqBhlC,EACxB,OAAOQ,QAAQyV,QAAQ,CAAE+V,QAAQ,EAAOC,UAAW,GAAI5B,MAAO,OAGhE,MAWMosB,EAAejyC,OAAOC,KAAKzE,GAAWmX,KAAMrd,GAX7B,CAACA,GAChBkG,EAAUlG,GAAKmyB,YAAcgZ,EAAiBnrC,GAAKo+B,SAC9Cl4B,EAAUlG,GAAKmyB,UAEjB,GAOiDyqB,CAAa58C,IACvE,GAAI28C,EACF,OAAOj2C,QAAQyV,QAAQ,CACrB+V,QAAQ,EACRC,UAAWjsB,EAAUy2C,GAAcxqB,UACnC5B,MAAO,OAIX,IAAK7lB,OAAOC,KAAKzE,GAAWumC,MAAOzsC,GAblB,CAACA,GACTkG,EAAUlG,GAAKkyB,QAAWhsB,EAAUlG,GAAKmyB,WAAagZ,EAAiBnrC,GAAKo+B,SAY1Cye,CAAS78C,IAClD,OAAO0G,QAAQyV,QAAQ,CAAE+V,QAAQ,EAAOC,UAAW,GAAI5B,MAAO,OAIhE,MAAM0b,EAAoB6P,EAAiBje,qBAAqB33B,GAG1D8lC,EAAY8P,EAAiBte,mBACnC,OAAOse,EAAiBlQ,mBAAmB1lC,GAAWmE,KAAMyyC,IAC1D,MAAMC,EAAY,YAChBD,EACAhB,EAAiBh+C,UACjBoI,EACA+lC,EACAD,EACAqQ,EACAthB,GAGF,OADA+gB,EAAiB1P,eAAe2Q,EAAW72C,GACpCQ,QAAQyV,QAAQ,CAAE+V,QAAQ,EAAMC,UAAW,GAAI5B,MAAOwsB,Q,kCCzDjE,sFAsBO,MAGMC,EAAuB,CAClCX,EACAn2C,KAEA,MAAM+2C,EAA8CZ,EAAY5e,MAN1D93B,OAAO,EAAGF,UAAWA,EAAKy3C,WAAa,KAO7C,OAAOb,EAAYlgB,MAAMvxB,OAAO,CAACtL,GAAOmG,WACtC,MAAQA,KAAM03C,GAAsBF,EAAiB5/B,KAClD+/B,GAAUA,EAAM33C,KAAKhE,KAAOgE,EAAK4B,SAE5B5B,KAAM43C,GAAsBJ,EAAiB5/B,KAClD+/B,GAAUA,EAAM33C,KAAKhE,KAAOgE,EAAK6B,QAE9Bg2C,EAAqBp3C,EAAUmX,KAAM2gB,GAClCA,EAAIngC,SAAS1B,OAASghD,EAAkBA,EAAkBD,WAE7DK,EAAqBr3C,EAAUmX,KAClC2gB,GAAQA,EAAIngC,SAAS1B,OAASkhD,EAAkBA,EAAkBH,WAErE,OAAOI,GAAsBC,EACzB,IACKj+C,EACH,CACEmC,GAAI,GAAG67C,EAAmBz/C,SAASuV,OAAOmqC,EAAmB1/C,SAASuV,MACtEvU,KAAM,IACNwI,OAAQi2C,EAAmBz/C,SAASuV,IACpC9L,OAAQi2C,EAAmB1/C,SAASuV,IACpC3N,KAAMA,EAAK+3C,UAGfl+C,GACH,KA2EQm+C,EAAsB,CACjCltB,EACAzyB,EACAoI,EACA+lC,EACAzO,EACA6e,EACAthB,KAEA,MACM2iB,EAlFyB,CAC/Bx3C,IAEA,MAAMy3C,EAAuB,CAC3BlgB,MAAO,GACPtB,MAAO,IA+BT,OA5BA,IAAe9S,QAASrpB,I,QACtB,GAA0B,QAAtB,EAAgB,QAAhB,EAAAkG,aAAS,EAATA,EAAYlG,UAAI,eAAEyF,YAAI,eAAEM,OAAQ,CAClC,MAAM63C,EAAwB,CAC5BngB,MAAO,GACPtB,MAAO,IAGTj2B,EAAUlG,GAAKyF,KAAK4jB,QAASppB,IAC3B,MAAMuG,EAAO,aAA0BxG,EAAKC,EAAUiG,GACtD,GAAIM,EAAM,CACR,MAAMf,EAAO,YACXxF,EACAuG,EACA,IACA,YAAqB,uBACrB0b,EACAhc,GAEF03C,EAAengB,MAAM/9B,KACnB,YAAoBO,EAAU,IAAewF,EAAM,MAErD,YAAW,YAAsBxF,GAAW29C,EAAengB,UAG/D,YAAuBmgB,EAAgBD,MAIpCA,GA8CWE,CADN,OAAH,wBAAQ33C,GAAS,CAAE60B,sBAQ5B,OANA,YAAuB2iB,EAAWntB,EAAOiN,GA5CZ,CAACjN,IAC9BA,EAAMkN,MAAMpU,QAASqU,I,QACfA,EAAE7+B,OAAS,MAEb6+B,EAAE/B,SAAW+B,EAAE/B,SAASh2B,OAAQlE,GAAO8uB,EAAMkN,MAAMpgB,KAAMqyB,GAAUA,EAAMjuC,KAAOA,IAChFi8B,EAAEj4B,KAAKqB,eAA8E,QAA7D,EAAU,QAAV,EAAA42B,EAAE/B,gBAAQ,eAAE9iB,IAAKpX,GAAO8uB,EAAMkN,MAAMpgB,KAAM/S,GAAM7I,IAAO6I,EAAE7I,YAAI,QAAI,MAK7F8uB,EAAMkN,MAAQlN,EAAMkN,MAAM93B,OACvB+3B,GAAMA,EAAE7+B,OAAS,KAA0B6+B,EAAE/B,SAAS51B,OAAS,IAmClE+3C,CAAuBvtB,GA/BM,EAACA,EAAc0b,KAE5CA,EAAkB5iB,QAASzjB,IACzB2qB,EAAM4L,MAAMz8B,QAAQ,YAAqBkG,EAAIqmC,OA6B/C8R,CAAuBxtB,EAAO0b,GAzBA,EAC9B1b,EACA0b,EACAoQ,KAGIA,GACF9rB,EAAM4L,MAAMz8B,QAAQs9C,EAAqBX,EAAapQ,KAmBxD+R,CAAwBztB,EAAO0b,EAAmBoQ,GAE3C9rB,I,kCCpJT,uEAMO,MAAM0tB,EACXngD,IAMA,MAAOogD,EAAgBC,EAAaC,GAAiB,YAAuB,CAAEtgD,cACxEsN,EAAW,UAAc,KAC7B,IAAIizC,EAiBJ,OAhBKD,GAAkBD,IACrBE,EAAY,YAAkBH,aAAc,EAAdA,EAAgBz4C,MAAM5F,OAGpDw+C,EAAUh1B,QAASi1B,WACVA,EAAMC,SACTD,EAAME,cACDF,EAAME,KAAKC,sBACXH,EAAME,KAAKE,eAClBJ,EAAME,KAAK3+C,QACTy+C,EAAME,KAAK3+C,OAAOwpB,QAASs1B,WAClBA,EAAUJ,eAKpB,CAAE94C,KAAM44C,EAAWnsB,QAASksB,EAAejsB,UAAWgsB,IAC5D,CAACA,EAAaC,EAAeF,IAEhC,OAAO,aAAsB9yC,K,kCCnC/B,wDAIO,MAAMwzC,EAAyB,EAAGC,QAAO/gD,gBAC9C,MAAM2Z,EAAM,YAAiB,CAC3BqnC,SAAU,IAAmBC,MAC7BjhD,cAGF,OAAO,qBAAoC2Z,EAAKonC,EAAO/gD,K,kCCVzD,mD,kCCAA,gIAWO,MAAMkhD,EAAqB,CAChCv5C,EACAw5C,K,MA0BA,OAxBkB,OAAH,4GACTx5C,EAAKgjC,kBAAoB,CAAEA,iBAAkB,IAAYhjC,EAAKgjC,oBAC9DhjC,EAAKkjC,kBAAoB,CAAEA,iBAAkB,IAAYljC,EAAKkjC,oBAC9DljC,EAAKmjC,cAAgB,IAAYsW,kBAAoB,CACvDlW,KAAMvjC,EAAKujC,OAETvjC,EAAKmjC,cAAgB,IAAYuW,SAAW,CAC9CtW,QAAS,OAAF,wBACFpjC,EAAKA,EAAKmjC,cAAY,CACzBwW,QAA8B,QAAtB,EAAA35C,EAAKA,EAAKmjC,oBAAY,eAAEwW,QAAS35C,EAAKA,EAAKmjC,aAAawW,OAAO,GAAK,OAC5EtW,KAAMmW,IAAiB,IAAUvvC,eAAiB,EAAI,IAAYjK,EAAKojC,QAAQC,UAG/ErjC,EAAKmjC,cAAgB,IAAYyW,WAAa,CAChDtW,UAAW,CACTD,KAAMmW,IAAiB,IAAUvvC,eAAiB,EAAI,IAAYjK,EAAKsjC,UAAUD,SAGjFrjC,EAAK+iC,qBAAuB,CAC9BA,oBAAqB,IAAY/iC,EAAK+iC,uBAEpC/iC,EAAK8iC,eAAiB,CAAEA,cAAe,IAAY9iC,EAAK8iC,iBACxD9iC,EAAKijC,gBAAkB,CAAEA,eAAgB,IAAYjjC,EAAKijC,mBAYrD4W,EACX5sB,I,kBAR6BjtB,EAU7B,OAAO,OAAP,oDACKitB,GAAY,CACfkW,aAZ2BnjC,EAYCitB,EAX1B,IAAMjtB,EAAM,IAAY05C,SAAiB,IAAYA,QACrD,IAAM15C,EAAM,IAAY45C,WAAmB,IAAYA,UACvD,IAAM55C,EAAM,gBAAwB,IAAYy5C,iBAC7C,IASLzW,kBAA+C,QAA7B,EAAA/V,EAAa+V,wBAAgB,eAAE7/B,aAAc,GAC/D+/B,kBAA+C,QAA7B,EAAAjW,EAAaiW,wBAAgB,eAAE//B,aAAc,GAC/D4/B,qBAAqD,QAAhC,EAAA9V,EAAa8V,2BAAmB,eAAE5/B,aAAc,GACrE2/B,eAAyC,QAA1B,EAAA7V,EAAa6V,qBAAa,eAAE3/B,aAAc,GACzD8/B,gBAA2C,QAA3B,EAAAhW,EAAagW,sBAAc,eAAE9/B,aAAc,KACvD8pB,EAAamW,SAAW,CAC1BA,QAAS,OAAF,wBACFnW,EAAamW,SAAO,CACvBC,MAA+B,QAAzB,EAAApW,EAAamW,QAAQC,YAAI,eAAElgC,aAAc,GAC/Cw2C,OAAwC,SAAhC1sB,EAAamW,QAAQuW,YAAoBl9B,EAAY,CAAC,aAG9DwQ,EAAaqW,WAAa,CAC5BA,UAAW,CAAED,MAAiC,QAA3B,EAAApW,EAAaqW,UAAUD,YAAI,eAAElgC,aAAc,OAKvD22C,EAAsB,CACjCt/C,EACAu/C,EAAyB,K,wBAEzB,MAAMhE,EAAuD,QAA1C,EAA8B,QAA9B,EAAwB,QAAxB,EAAc,QAAd,EAAAv7C,aAAQ,EAARA,EAAUnE,YAAI,eAAE4xB,gBAAQ,eAAE5xB,YAAI,eAAE0/C,kBAAU,QAAI,GAC3DrS,EACgE,QAApE,EAA4B,QAA5B,EAAAqS,aAAU,EAAVA,EAAagE,UAAe,eAAG,IAAsBC,uBAAe,QAAI,GACpErW,EAC+D,QAAnE,EAA4B,QAA5B,EAAAoS,aAAU,EAAVA,EAAagE,UAAe,eAAG,IAAsBE,sBAAc,QAAI,GACnErW,EAC8D,QAAlE,EAA4B,QAA5B,EAAAmS,aAAU,EAAVA,EAAagE,UAAe,eAAG,IAAsBG,qBAAa,QAAI,GAkCxE,MAhCqB,CACnBxW,eAAgB,CACdf,UAAU,EACVE,UAAU,EACVD,SAAU,IAAUc,GACpB1jC,KAAO,IAAU0jC,GAIb,IAA0B1jC,KAH1B,OAAD,UACM65C,EAA8BnW,KAIzCC,cAAe,CACbhB,UAAU,EACVE,UAAU,EACVD,SAAU,IAAUe,GACpB3jC,KAAO,IAAU2jC,GAIb,IAA0B3jC,KAH1B,OAAD,UACM65C,EAA8BlW,KAIzCC,aAAc,CACZjB,UAAU,EACVE,UAAU,EACVD,SAAU,IAAUgB,GACpB5jC,KAAO,IAAU4jC,GAIb,IAA0B5jC,KAH1B,OAAD,UACM65C,EAA8BjW,OAQhCuW,EAAgB,CAAC9e,EAAoCme,KAChE,MAAM,eAAE9V,EAAc,cAAEC,EAAa,aAAEC,GAAiBvI,EACxD,OAAO,OAAP,sCACMqI,EAAed,QACf,CAAEc,eAAgB6V,EAAmB7V,EAAe1jC,KAAMw5C,IAC1D,IACA7V,EAAcf,QACd,CAAEe,cAAe4V,EAAmB5V,EAAc3jC,KAAMw5C,IACxD,IACAA,IAAiB,IAAUvvC,iBAAkB25B,aAAY,EAAZA,EAAchB,SAC3D,CAAEgB,aAAc2V,EAAmB3V,EAAa5jC,OAChD,M,kCCjIR,IAAYo6C,EAMAC,EANZ,6EAAYD,GACV,kCACA,gCACA,8BAHF,CAAYA,MAAqB,KAMjC,SAAYC,GACV,oBACA,6BACA,wBAHF,CAAYA,MAAW,M,kCCRvB,kFAEO,MAAMC,EAA2B,6BAE3BC,EAA4B,CACvC,CAAC,IAAqBxf,KAAM,CAC1B10B,OAAQ,CACN2L,IAAK,GACLwoC,SAAU,KAGd,CAAC,IAAqB1iD,OAAQ,CAC5BuO,OAAQ,CACN2L,IAAK,KAGT,CAAC,IAAqB+9B,SAAU,CAC9B1pC,OAAQ,CACNjN,KAAM,GACNqhD,SAAU,GACVC,IAAK,KAGT,CAAC,IAAqBC,SAAU,CAC9Bt0C,OAAQ,CACN3P,KAAM,GACNsb,IAAK,GACLpG,SAAU,GACVC,SAAU,GACV+uC,SAAU,IAEZ/0B,QAAS,CACPg1B,OAAQ,GACR/mC,MAAO,O,kCCjCb,6DA4Fe,sBAXU7I,IAAiC,CACxD5S,UAAW,YAAmB4S,GAC9BhL,YAAa,YAAqBgL,KAGR6vC,IAAsC,CAChEvyC,SAAWqsC,IACTkG,EAAS,YAAqBlG,OAInB,CA9D0C,EACvDv8C,YACA4H,cACAsI,WACAF,eAEA,MAAM,EAAEpQ,GAAM,2BACR8iD,EAAuB9iD,EAAE,6BACzB+iD,EAAsB/iD,EAAE,iCACxBgjD,EACJh7C,IAAgB,IACZ86C,EACA96C,IAAgB,KAChB+6C,EACA/6C,GACC3H,EAAO4iD,GAAY,WAAuBD,GAMjD,GALA,YAAgB,KACT5yC,GACH6yC,EAASD,IAEV,CAAC5yC,EAAU4yC,IACV5iD,IAAc,IAAoB,OAAO,KAM7C,OACE,gBAAC,IAAmB,CAClBH,UAAU,wBACVijD,gBAAgB,aAChB9iD,UAAWA,EACXC,MAAOA,GAAS,wBAAMJ,UAAU,mBAAmBI,GACnD8iD,YAAanjD,EAAE,wBACfojD,gBAAiB,CACfC,eAAgB,IAChBC,iBAAkBR,GAEpBS,iBAAkB,CAChBC,gBAAiB,KACjBC,kBAAmBV,GAErBvvC,YAAaxL,GAAe,IAC5BsI,SApBwB,CAACozC,EAAwBphD,KACnDA,IAAQ,IAAuBgO,EAAShO,GAAOgO,EAASozC,IAoBtDC,mBAAoB,IACpBC,WAAY,IACZxzC,SAAUA,O,yDC3EhB,8RAEO,MAAMyzC,EAA8C,CACzD9/C,GAAI,uBACJskB,OAAQ,yBACRF,SAAU,IACVzZ,WAAY,WACZxO,KAAM,uBACNqoB,YAAY,EACZE,KAAK,EAELtU,MAAO,uBAEPrC,SAAU,yCACV0W,YAAa,yBAEbJ,eAAgB,2CAChBE,KAAM,OAGKw7B,EAAuC,CAClD//C,GAAI,gBACJskB,OAAQ,kBACRF,SAAU,IACVzZ,WAAY,WACZxO,KAAM,gBACNqoB,YAAY,EACZE,KAAK,EAELtU,MAAO,gBAEPrC,SAAU,kCACV0W,YAAa,kBAEbJ,eAAgB,oCAChBE,KAAM,MAGKy7B,EAA+B,CAC1ChgD,GAAI,QACJskB,OAAQ,SACRF,SAAU,IACVzZ,WAAY,WACZxO,KAAM,QACNqoB,YAAY,EACZE,KAAK,EAELtU,MAAO,QAEPrC,SAAU,0BACV0W,YAAa,SAEbJ,eAAgB,2BAChBE,KAAM,KAGK07B,EAAkC,CAC7CjgD,GAAI,WACJskB,OAAQ,YACRF,SAAU,IACVzZ,WAAY,WACZxO,KAAM,WACNqoB,YAAY,EACZE,KAAK,EAELtU,MAAO,WAEPrC,SAAU,6BACV0W,YAAa,YAEbJ,eAAgB,8BAChBE,KAAM,MAGK27B,EAAsC,CACjDlgD,GAAI,uBACJskB,OAAQ,yBACRF,SAAU,IACVzZ,WAAY,IACZxO,KAAM,uBACNqoB,YAAY,EACZE,KAAK,EAELtU,MAAO,uBAEPrC,SAAU,yCACV0W,YAAa,yBAEbJ,eAAgB,2CAChBE,KAAM,OAGK47B,EAA+B,CAC1CngD,GAAI,gBACJskB,OAAQ,kBACRF,SAAU,IACVzZ,WAAY,IACZxO,KAAM,gBACNqoB,YAAY,EACZE,KAAK,EAELtU,MAAO,gBAEPrC,SAAU,kCACV0W,YAAa,kBAEbJ,eAAgB,oCAChBE,KAAM,MAGK67B,EAAuB,CAClCpgD,GAAI,QACJskB,OAAQ,SACRF,SAAU,IACVzZ,WAAY,IACZxO,KAAM,QACNqoB,YAAY,EACZE,KAAK,EAELtU,MAAO,QAEPrC,SAAU,0BACV0W,YAAa,SAEbJ,eAAgB,2BAChBE,KAAM,KAGK87B,EAA0B,CACrCrgD,GAAI,WACJskB,OAAQ,YACRF,SAAU,IACVzZ,WAAY,IACZxO,KAAM,WACNqoB,YAAY,EACZE,KAAK,EAELtU,MAAO,WAEPrC,SAAU,6BACV0W,YAAa,YAEbJ,eAAgB,8BAChBE,KAAM,O,kCChJR,4MAAO,MAAM+7B,EAAY,gBACZC,EAAqB,UAErBC,EAAoC,2BACpCC,EAAiC,6BAEjCC,EAA+B,mDAC/BC,EAAwB,W,kCCPrC,2JAWO,MAAMC,EAAiBC,GACrB,IAASA,EAAU9uC,GAAM,IAAcA,IAAM,IAASA,IAAY,KAANA,GAGxD+uC,EAAyB,CACpCz2C,EACAjN,EACAf,EACA0kD,KAEA,MAAMC,EAAe,GAAG5jD,KAAQ,YAAe,KACzC6jD,EAAoC,CACxCt2C,WAAY,sBACZxO,KAAM,wBAAsBA,KAC5BC,SAAU,CACR1B,KAAMsmD,EACN3kD,aAEFhC,KAAM,OAAF,QACF+C,OACAiN,OAAQ,YAA2Bu2C,EAAcv2C,KAC7C02C,GAAc,CAChBl3B,QAAS,IAAMk3B,EAAW/8C,KAAM,CAAChH,EAAOtC,KAC/B,CACLwmD,UAAWxmD,EACXymD,UAAWzmD,EACX+uB,WAAYs3B,EAAW3kD,SAAS1B,WAO1C,OAAO,aAAU,wBAAuBumD,IAG7BG,EAAuB,CAClC36C,EACArJ,EACAf,KAEA,MACMyzB,EAAiB,CACrBnlB,WAAY,KACZxO,KAAM,SACNC,SAAU,CACR1B,KALiB,GAAG0C,YAAe,YAAe,KAMlDf,aAEFiL,WAAYs5C,EAAcn6C,IAE5B,OAAO,aAAU,cAAaqpB,K,kCC9DhC,0LAWA,MAEauxB,EAAwB,CAACziD,EAAyBrE,IAC7D,GAAGqE,KAAmBrE,IAElB+mD,EAAkE,EACtE/mD,MACAqE,kBACAC,uBACA0iD,gBAEA,MAAMC,EAAkB,IAAQjnD,EAAIknD,qBAAsB,KAC1D,OACE,gCACE,0BACE,uBAAKvlD,UAAU,2CACb,wBAAMA,UAAU,8CACd,gBAAC,IAAU,OAEb,uBAAKA,UAAU,4CACb,gBAAC,YAAS,CAACM,UAAWjC,EAAIwB,QAAS2lD,QAAQ,MAI/C,uBAAKxlD,UAAU,2CACb,wBAAMA,UAAU,wCAChB,uBAAKA,UAAU,uCACb,gBAAC,eAAY,CACXC,KA5B6C,iBA6B7CzB,KAAM2mD,EAAsBziD,EAAiBrE,EAAIA,KACjD8B,UAAWwC,EACXvC,MAAO/B,EAAIA,IACXgC,OAAQglD,IAEV,uBAAKrlD,UAAU,gB,QAAqBslD,EAAgB,IACpD,uBAAKtlD,UAAU,gBAAgBslD,EAAgB,SASrDG,EAAqB,CACzBC,EACAC,EACAC,IAGED,IACA,IAAYC,EAAkBC,GAAwBA,EAAWxnD,MAAQqnD,GAIhEI,EAA0D,EACrErjD,kBACAC,kBACAC,2BAEA,MAAM,EAAE5C,GAAM,2BACd,IAAK,IAAO0C,EAAiB,SAC3B,OAAO,gBAAC,IAAQ,CAACyR,MAAOnU,EAAE,mBAE5B,MAAMgmD,EAAuB,IAC3B,IAAMtjD,EAAiB,EAAGpE,MAAKgV,WACtB,IAAMA,EAAO,EAAGxT,UAAS0lD,2BAA2B,CACzDlnD,MACAwB,UACA0lD,4BAIAK,EAAkB,IAAUG,EAAW,CAAC,WAAY,CAAC,SACrDC,EAAW,IAAMJ,EAAiB,CAACvnD,EAAc+D,IAEnD,gBAACgjD,EAAuB,CACtB/iD,IAAKhE,EAAIknD,qBACTlnD,IAAKA,EACLqE,gBAAiBA,EACjBC,qBAAsBA,EACtB0iD,UAAWI,EAAmBpnD,EAAIA,IAAK+D,EAAGwjD,MAKhD,OACE,gCACE,sBAAI5lD,UAAU,iCACXgmD,EACD,2BACE,wBAAMhmD,UAAU,8CACd,gBAAC,IAAU,Y,kCCtGvB,oHAEO,MAAMimD,EAA6B,CAACC,EAAenmD,KACxD,OAAQmmD,GACN,KAAK,IAAsBpE,eACzB,MAAO,CACLqE,UAAWpmD,EAAE,8BACbqmD,aAAcrmD,EACZ,yMAIN,KAAK,IAAsBgiD,cACzB,MAAO,CACLoE,UAAWpmD,EAAE,6BACbqmD,aAAcrmD,EACZ,+HAIN,KAAK,IAAsBiiD,aACzB,MAAO,CACLmE,UAAWpmD,EAAE,4BACbqmD,aAAcrmD,EACZ,8IAIN,QACE,SAIOsmD,EAAkD,CAC7D5b,UAAU,EACVC,SAAS,EACTC,UAAU,EACV7iC,KAAM,CACJgjC,iBAAkB,IAClBG,YAAa,IAAYuW,QACzBtW,QAAS,CACPuW,YAAQl9B,EACRjJ,KAAM,IACN6vB,KAAM,OACNmb,YAAa,IAEflb,UAAW,CACTD,KAAM,QAERE,KAAM,CAAEC,QAAS,CAAC,KAClBT,oBAAqB,IACrBD,cAAe,KACfG,eAAgB,IAChBC,iBAAkB,MAITub,EAA+B,CAC1C/a,eAAgB6a,EAChB5a,cAAe4a,EACf3a,aAAc2a,I,kCC7DhB,uCAce,IARkB,IACxB,YAAuB,CAC5BG,iBAAkB,sCAA4B,8BAC9C/rB,QAAQ,EACRj8B,KAAM,O,kCCVV,sCAqBe,IAXgD8D,IAC7D,MAAMwX,EAAM,aAAY,6BAA4B,CAAEtb,KAAM,MAC5D,OAAO,YAAiBsb,EAAK,QAAS,CACpChN,QAAS,CACPkP,OAAQ,mBACR,eAAgB,8CAElBlO,KAAMH,KAAKiH,UAAUtS,O,kCCjBzB,qCAyBe,IAlB+B,EAC5C07B,WACAyoB,gBAAe,EACfC,kBAAiB,KAGf,uBACE1mD,UAAW,cACT,IAAW2mD,KACXF,GAAgB,IAAWG,UAAUC,WACrCH,GAAkB,IAAWE,UAAUE,aAGxC9oB,I,kCCpBP,0BAgBe,IAZgC,EAAG77B,Y,UAChD,MAAM,EAAEpC,GAAM,2BACd,OAAKoC,EAIH,gBAAC,IAAK,CAAChB,QAAQ,UAAU4lD,UAAQ,EAAC3mD,MAAOL,EAAE,kDACjB,QAAvB,EAAa,QAAb,EAAAoC,EAAMH,eAAO,eAAEiJ,gBAAQ,0BAAsB,QAAd,EAAA9I,EAAM8I,gBAAQ,oBAAd9I,KAJ3B,O,kCCPX,4DASO,MAAM6kD,EAAwC,EAAGtlD,SAAQS,Y,UAC9D,MAAM,EAAEpC,GAAM,2BACd,MAAe,eAAX2B,EAEA,gBAAC,IAAK,CACJP,QAAQ,UAAS,YACP,gBACV4lD,UAAQ,EACR3mD,MAAOL,EAAE,0BAERA,EACC,8HAKO,UAAX2B,EAEA,gBAAC,IAAK,CAACP,QAAQ,SAAS4lD,UAAQ,EAAC3mD,MAAOL,EAAE,kDACf,QAAxB,EAAc,QAAd,EAAAoC,aAAK,EAALA,EAAOH,eAAO,eAAEiJ,gBAAQ,0BAAuB,QAAf,EAAA9I,aAAK,EAALA,EAAO8I,gBAAQ,oBAAf9I,KAIhC,O,0cCnBF,MAeD8kD,EACJjpC,GACqC,OAAD,6BACpC,MAAM,UAAE7d,EAAS,UAAEoI,GAAcyV,EAE3BkpC,EAAoE3+C,EAAU0E,OAClF,CAACtL,EAAKW,EAAUqU,IACPrU,EAASw2C,YAAc,IAA2B,OAAD,wBAAMn3C,GAAG,CAAE,CAACgV,GAAQrU,IAAaX,EAE3F,IAEIwlD,QAAyBp+C,QAAQS,IACrCuD,OAAOiR,OAAOkpC,GAAmBhsC,IAAK5Y,GA3BZ,EAC5B8kD,EACAjnD,IAC+B,OAAD,6BAC9B,MACE2H,MAAM,OAAEqG,EAAM,QAAEwf,EAAO,KAAEzsB,IACvBkmD,EAEJ,OAAOz5B,EACH,YAAqBA,EAASzsB,EAAMf,GAAWuM,KAAMm4C,GAC5C,YAAuB12C,EAAQjN,EAAMf,EAAW0kD,IAEzD,YAAuB12C,EAAQjN,EAAMf,MAeYknD,CAAe/kD,EAAUnC,KAE9E,IAAKgnD,GAAgD,IAA5BA,EAAiB/+C,OAAc,OAAO4V,EAE/D,MAAMspC,EAAcv6C,OAAOC,KAAKk6C,GAChC,OAAO,OAAP,wBACKlpC,GAAM,CACTzV,UAAWA,EAAU2S,IACnB,CAAC5Y,EAAUqU,KACT,GAAIuwC,EAAkBvwC,GAAQ,CAC5B,MAAM4wC,EAAgBD,EAAYE,QAAQ7wC,EAAM1L,YAChD,OAAO,OAAP,wBACK3I,GAAQ,CACXw2C,UAAWqO,EAAiBI,GAAernD,SAAS1B,OAGxD,OAAO8D,SAiBFmlD,EAAsB,CACjCzpC,EACA0E,EACAnf,EACAitB,IAC6B,OAAD,6BAC5B,IAAIyoB,EAAaj7B,EACjBi7B,QAAmBgO,EAAiBhO,GACpCA,EAnBwB,CAACj7B,IACzB,MAAM,WAAEq5B,GAAer5B,EAEvB,OAAKq5B,GAAoC,IAAtBA,EAAWjvC,OAEvB,OAAP,wBACK4V,GAAM,CACTq5B,WAAYA,EAAWrvC,OAAQ8kB,GAAcA,EAAU5rB,OAAS,IAAYw3C,eAJ3B16B,GAgBtC0pC,CAAkBzO,GAE/B,MAAM0O,QAA6C,aACjD,mBACA,YAAuBjlC,EAAUu2B,EAAY11C,EAAQitB,IAGvD,OAAOznB,QAAQyV,QAAQmpC,O,y4BCTlB,MAAM/8C,EAAiB,KAE5B,MAAMC,EAAK,IACTC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAClBC,SAAS,IACTC,UAAU,GACf,OAAOL,IAAOA,IAAOA,IAAOA,KAGjB+8C,EAAiBC,IAC5B,MAAMjlB,EAAU,CACd1iC,SAAU,CACR1B,KAAMqpD,EAAYrpD,MAEpBoE,YAAailD,EAAYjlD,YACzB6yC,YAAaoS,EAAYpS,aAG3B,OAAO,aAAU,sBAAqB7S,IAG3BklB,EAA4B,CACvCC,EACAC,EACAvf,EACAwf,EACAh1B,EAAgB,SAChBi1B,EAAmC,M,YAEnC,MAAM,KACJ1pD,EACAokC,SAAWpkC,KAAM2B,GACjB4H,aAAevJ,KAAMg+C,GACrBj5C,OAAQ4kD,EACRvoD,OAASvB,IAAKy3C,GAAa,OAC3BvyC,GACEwkD,EACEK,EAAa,yBACbhyB,EAAgD,QAAlC,EAAA2xB,EAA+BllB,WAAG,eAAE/oB,IAClDI,EAAyC,QAAlC,EAAA6tC,EAA+BllB,WAAG,eAAE3oB,IAC3CmuC,EAAiD,QAA/B,EAAyB,QAAzB,EAAAJ,aAAY,EAAZA,EAAcjqD,mBAAW,eAAE8J,YAAI,eAAEE,OACtDsgD,IAAU,QAAC,OAAuB,QAAvB,EAAe,QAAf,EAAAA,EAAOpoD,gBAAQ,eAAEqD,cAAM,eAAG6kD,OAAiB7kD,EAAO6kD,IAAe5pD,KAEzE+pD,EAAwB,IAAUF,EAAiB,CAAC,4BAA6B,CAAC,SAClFG,EAAuBD,EAAsBngD,QAAUmgD,EAAsB,IAAO,GACpF7lD,EAAkBslD,GAAmBA,EAAgB9nD,SAAS1B,KAC9DiqD,EAAgB,YAAa,CAAEjqD,OAAMg+C,kBAAiB95C,kBAAiBozC,gBACvE4S,EAAqB,OAAH,wBAClBtyB,GAAc,YAAkBA,EAAYlc,IAC7C,eAECyuC,EACK,WAAT11B,GAAsB,IAAUu1B,GAE5BhqD,EADAgqD,EAAoBtoD,SAASqD,OAAO6kD,GAEpCQ,EAAiB,CACrBn6C,WAAY,wBACZxO,KAAM,cACNC,SAAU,CACR1B,KAAM0pD,GAA4BS,EAClCxoD,YACAoD,OAAQ,OAAF,sCACDklD,GACAN,GAAU,CACb,CAACC,GAAaO,IAEhBn4B,YAAak4B,IAGX1qD,EAAc,YAAUwqD,EAAqBI,GAInD,MAHa,WAAT31B,IACFj1B,EAAYkC,SAAS1B,KAAOgqD,EAAoBtoD,SAAS1B,MAE3C,WAATy0B,EACH,aAAU,mBAAkBj1B,GAC5B,aAAU,mBAAkB4qD,EAAgBngB,EAAS,IAAY,KAG1DogB,EAAsB,CACjCd,EACA/pD,EACAyN,EACAg9B,KAEA,MAAM,KACJjqC,EACAuJ,aAAevJ,KAAMg+C,GACrB5Z,SAAWpkC,KAAM2B,GACjBP,OAASvB,IAAKy3C,GACdvyC,OAAQ4kD,GACNJ,EAEErlD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDiqD,EAAgB,YAAa,CAAEjqD,OAAMg+C,kBAAiB95C,kBAAiBozC,gBAEvE/5B,EAAgB,CACpBtN,WAAY,KACZ3G,KAAM,GACN7H,KAAM,SACNC,SAAU,CACR1B,KAAM,GAAGA,KAAQiN,mBACjBtL,YACAoD,OAAQ,OAAF,wBAAOklD,GAAkBN,IAEjC/8C,WAAY,CAAE4M,iBAAkBpN,KAChC1J,KAAM,aAAWmJ,QAGnB,OAAO,aAAU,cAAa0R,EAAe0sB,EAAS,IAAY,KAsGvDqgB,EAA4B,CACvCf,EACA/pD,EACAyqC,EACAsgB,EACA91B,EAAgB,SAChBi1B,EAAmC,M,UAEnC,MAAM,KACJ1pD,EACAokC,SAAWpkC,KAAM2B,GACjB4H,aAAevJ,KAAMg+C,GACrB3Z,KAAO/oB,IAAKsc,EAAYl1B,KAAMqyB,EAAO,IAAErZ,EAAM,SAAUsoC,IAAKt7C,EAAYqD,OAAQgjB,GAChFuV,QAAQ,eAAE1oB,GACVxa,OAASvB,IAAKy3C,EAAW,SAAEkT,GAC3B7kD,OAAO,IAAE8kD,EAAG,SAAEn5B,EAAU/I,SAAUmiC,GAClC3lD,OAAQ4kD,GACNJ,EAEErlD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDmE,EAAuB3E,GAAeA,EAAYkC,SAASC,UAE3DsoD,EAAgB,YAAa,CAAEjqD,OAAMg+C,kBAAiB95C,kBAAiBozC,gBACvE4S,EAAqB,OAAH,wBAAQ,YAAkBtyB,EAAYlc,IAAS,eACvE,IAAIivC,EAEAC,EAAoBliD,EACxB,MAAMmiD,EAAeL,EAAWj8C,OAAOC,KAAKg8C,GAAY,GAClDM,EAAaD,EAChBrhD,OAAQ8N,KAAQkzC,EAASlzC,IACzBoF,IAAKpF,IAAM,CAAGtX,KAAMsX,EAAGhV,MAAOkoD,EAASlzC,MACpCm3B,EAAYgc,EAAIjhD,OAAQuhD,IAAcF,EAAa3hD,SAAS6hD,EAAS/qD,OAE3E,OAAQ0qD,GACN,IAAK,UACHC,GAA6C,QAAzB,EAAAJ,aAAmB,EAAnBA,EAAqB5qD,YAAI,eAAE4oB,WAAY,CACzDyiC,eAAgB,CAAEP,MAAK7uC,mBAEzBgvC,GAAqD,QAAjC,EAAyB,QAAzB,EAAAL,aAAmB,EAAnBA,EAAqB5qD,YAAI,eAAEuL,cAAM,eAAExC,aAAcA,EACrE,MACF,IAAK,SACHiiD,EAAoB,CAClBK,eAAgB,CAAEP,MAAK7uC,mBAEzB,MACF,QACE+uC,EAAoB,CAClBM,eAAgB,CACdR,IAAK,IAAIK,KAAerc,GACxBvtC,KAAM,CACJO,KAAM,iBACNzB,KAAM,GAAGkE,KAAmBozC,IAC5B31C,UAAWwC,KAOrB,MAAM+mD,EAAqB,CACzBxoD,KAAM,IAAiBqyB,GACvB,CAACA,GAAU,CACTQ,gBAAiB,CAAEv1B,KAAM,GAAGA,KAAQ+0B,sBAIlCo2B,EAA8B,CAAC,IAAYr4C,OAAQ,IAAYF,OAE/Dw4C,EACK,WAAT32B,GAAsB,IAAU81B,GAE5BvqD,EADAuqD,EAAoB7oD,SAASqD,OApDhB,0BAuDbsmD,EAAiB,CACrBp7C,WAAY,wBACZxO,KAAM,cACNC,SAAU,CACR1B,KAAM0pD,GAA4B0B,EAClCzpD,YACAoD,OAAQ,OAAF,sCAAOklD,GAAkBN,GAAU,CAAE,yBAAcyB,IACzDp5B,YAAak4B,GAEfvqD,KAAM,CACJ+O,OAAQ,CACN48C,GAAI,CACF7pD,KAAM,iBACNzB,MAAS0pD,GAA4B0B,GAA/B,YAGVlgD,OAAQ,OAAF,QACJxC,WAAYkiD,EACZvmB,IAAK,CACHknB,IAAK3zB,EACLlc,QAEEqT,EAAa,CAAEywB,aAAc,CAAEx/C,KAAM+uB,IAAiB,IAE5DxG,SAAU,OAAF,QACN7lB,KAAMgoD,GACHC,GAELr5B,SAAU,CACR,CACE5uB,KAAM,UACNyJ,QAAS,CACPopB,gBAAiB,CAAEv1B,KAASA,EAAH,gCAGzBsxB,EAASplB,UAAYi/C,EAA4BjiD,SAAS6rB,GAC1D,CAACm2B,GACD,MACA55B,EAASlwB,MAAQ,CAAC,CAAEsB,KAAM,cAAe8oD,YAAa,KAAQ,MAC9Dl6B,EAAS3T,OAAS,CAAC,CAAEjb,KAAM,iBAAoB,MAKnD27B,EAAc,YAAUksB,EAAqBc,GAInD,MAHa,WAAT52B,IACF4J,EAAY38B,SAAS1B,KAAOuqD,EAAoB7oD,SAAS1B,MAE3C,WAATy0B,EACH,aAAU,mBAAkB4J,GAC5B,aAAU,mBAAkBgtB,EAAgBphB,EAAS,IAAY,KAG1DwhB,EAA2B,CACtClC,EACA/pD,EACAyqC,EACAyhB,EACAj3B,EAAgB,Y,MAEhB,MAAM,KACJz0B,EACAokC,SAAWpkC,KAAM2B,GACjB4H,aAAevJ,KAAMg+C,GACrB58C,OAAO,MAAEuqD,EAAO9rD,IAAKy3C,GACrBpX,YAAY,IACVuqB,EAAG,SACH7kC,EACA0L,UAAYlwB,MAAOoqD,IAErBzmD,OAAQ4kD,EACRjlB,QAAQ,IAAE1c,EAAG,OAAEK,GACfgc,KAAO/oB,IAAKsc,EAAU,IAAElc,GAAK,aAC7BipB,GACE4kB,EAEErlD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDi+C,EAAcz+C,IAA0C,QAA3B,EAAAA,EAAYkC,SAASqD,cAAM,eAAG,MAC3DklD,EAAgB,YAAa,CACjCjqD,OACAg+C,kBACA95C,kBACAozC,cACA2G,gBAEIvG,EAAY13C,EACZkqD,EAAqB,OAAH,kEACnB,eACA,YAAkBtyB,EAAYlc,IAC9B,eAAqB,CACxB,gDAAiD,MAC9C,YAAqB1b,EAAM03C,EAAW/1C,EAAW6pD,IAEhDI,EAAY,YAAa,IAAUt4C,WAAYtT,GAC/C6rD,EAAiB,YAAkBH,GAEnCI,EAAgB,CACpB77C,WAAY,UACZxO,KAAM,aACNC,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,wBAAOklD,GAAkBN,GAC/B33B,YAAak4B,GAEfvqD,KAAM,CACJosD,SAAU,CACRrgB,YAAa,CACXwS,IAAKl+C,IAGT4lB,WACA2L,SAAU,CACR7vB,SAAU,CACRqD,OAAQ,OAAF,sCAAO8mD,GAAmBlC,GAAeiC,IAEjDjsD,KAAM,CACJ0/C,WAAY,C,eAERr/C,OACAoB,MAAUpB,EAAH,UACP2rD,QACAlB,MACA1gD,UAAW,YAAsB,CAAEie,MAAKK,YACrC,YAAcsc,SAOvBzE,EAAa,YAAUwrB,EAAoBI,GAEjD,MAAgB,WAATr3B,EACH,aAAU,kBAAiByL,GAC3B,aAAU,kBAAiBA,EAAY+J,EAAS,IAAY,KA+QrD+hB,EAA0B,CACrCzqD,EACAgoD,EACA/pD,EACAysD,EACAhiB,GAAkB,EAClBxV,EAAgB,SAChBg1B,IAC+B,OAAD,6B,6CAC9B,MAAM,KACJzpD,GACAokC,SAAWpkC,KAAM2B,IACjB8iC,OAASynB,OAAQC,GAAc,QAAEn6C,IACjC5Q,OAAO,MAAEuqD,IACThmD,OACE4iB,SAAUmiC,GACVp5B,UAAYplB,QAASkgD,IACrBC,OAAQjjC,IAEV8W,YACE5O,UAAYlwB,MAAOoqD,KAErBnnB,KAAO/oB,IAAKsc,GAAYl1B,KAAMqyB,GAAO,IAAErZ,IAAK,SAC5CwI,GAAQ,UACRna,IACEw/C,EACErlD,GAAkB,IAAM1E,EAAa,iBACrC8sD,GACmD,QAAvD,EAAkD,QAAlD,EAA6C,QAA7C,EAAqC,QAArC,EAA+B,QAA/B,EAAyB,QAAzB,EAAA7C,aAAY,EAAZA,EAAcprB,mBAAW,eAAE/0B,YAAI,eAAE3J,YAAI,eAAEuL,cAAM,eAAEm5B,WAAG,eAAEknB,WAAG,QACgC,QAAvF,EAA0C,QAA1C,EAAkC,QAAlC,EAA4B,QAA5B,EAAsB,QAAtB,EAAA9B,aAAY,EAAZA,EAAcvlC,gBAAQ,eAAE5a,YAAI,eAAE3J,YAAI,eAAEgQ,cAAM,eAAEuR,KAAMgN,GAA0B,cAAhBA,aAAK,EAALA,EAAOluB,cAAoB,eACnFmuB,QACN89B,UAA2B7C,EAAcG,EAASnlB,UAElD,MAAMmoB,GAA+B,GACrC,IAAI7C,GAAmC,GASvC,GAPE3/C,KAAc,IAAUwJ,gBACxB+4C,IACAA,KAAuB10B,KAEvB8xB,GAA2B,GAAG1pD,MAAQ,iBAGpC0qD,KAAkB,oBAAkB8B,QAAS,CAC/C,GAAa,WAAT/3B,EACF,MAAM,IAAI1pB,MAAMxJ,EAAE,+CAEpB,MAvJkC,EACpCgoD,EACAtf,EACAwf,EACAC,EAAmC,KACJ,OAAD,6BAC9B,MAEM,KACJ1pD,EACAokC,SAAWpkC,KAAM2B,GACjB4iC,SAAS,0BAAExb,EAAyB,mBAAE0jC,IACpClD,EAEEmD,EAAoDn+C,OAAOC,KAC/Dua,GACAta,OAAO,CAACtL,EAAgC2/C,K,QACxC,MAAMh/C,EAA4BilB,EAA0B+5B,GAC5D,OAAKh/C,EAGE,OAAP,wBACKX,GAAG,CACN,CAAC2/C,GAAe,OAAF,wBACTh/C,GAAQ,CACXpC,SAAU,OAAF,wBACHoC,EAASpC,UAAQ,CACpBswB,YAAa,OAAF,wBACW,QAAjB,EAAAluB,EAASpC,gBAAQ,eAAEswB,aAAW,CACjCmtB,cAAe,SAEjBn/C,OACA2B,YACAoD,OAAQ,OAAF,wBACgB,QAAjB,EAAAjB,EAASpC,gBAAQ,eAAEqD,QAClB0nD,EAAqB,CAAE,CAAC,KAAgBA,GAAuB,UAhBlEtpD,GAqBR,IAEGwpD,QAA4BrD,EAChCC,EACAmD,EAAuBltD,YACvByqC,EACAwf,EAxCoB,SA0CpBC,GAGIkD,QAA4BtC,EAChCf,EACAmD,EAAuBltD,YACvByqC,EACAyiB,EAAuBG,cAjDH,SAmDpBnD,GAGIoD,QAA8BzC,EAClCd,EACAmD,EAAuBltD,YACvB,UACAyqC,GAGI8iB,QAA2BtB,EAC/BlC,EACAmD,EAAuBltD,YACvByqC,EACAyiB,EAAuBM,eAjEH,UAqEhBC,EACJP,EAAuBQ,gBAChB,aACL,eACA,YAAc3D,EAAUmD,EAAuBltD,YAAaktD,EAAuBQ,SACnFjjB,EAAS,IAAY,KAGnBkjB,EACJT,EAAuBjoB,cAChB,aACL,aACA,YAAY8kB,EAAUmD,EAAuBltD,YAAaktD,EAAuBjoB,OACjFwF,EAAS,IAAY,KAGnBmjB,EAAmB,CACvBT,EACAC,EACAE,EACAC,GAMF,OAHAE,GAAwBG,EAAiB7pD,KAAK0pD,GAC9CE,GAAiBC,EAAiB7pD,KAAK4pD,GAEhCC,KAkDEC,CAAuB9D,EAAUtf,EAAQwf,EAAcC,IAGhE,GAAIxlC,GAASxhB,OAAS,IAAa4mB,MAAyB,QAAlB,EAAAigC,aAAQ,EAARA,EAAUrlC,gBAAQ,eAAEgoB,SAAS,CACrE,MAAMohB,EAA6B,QAAb,EAAA/D,aAAQ,EAARA,EAAU3kB,WAAG,eAAEhN,WAC/B7yB,EAASwkD,aAAQ,EAARA,EAAUxkD,OACnBiX,QAAa,YAA0BsxC,EAAe3rD,GAAWoD,EAAQklC,GAC/EsiB,GAAUhpD,KAAKyY,GAGjB,MAAM2wC,SAA4BrD,EAChCC,EACA/pD,EACAyqC,EACAwf,EACAC,GAA2B,SAAWj1B,EACtCi1B,IAIF,GAFA6C,GAAUhpD,KAAKopD,IAEXzoC,GAASgoB,SAAWhoB,GAASxhB,OAAS,IAAa4mB,KACrD,IAAK2gB,EAAQ,CACX,MAAMsjB,OAhQ2B,EACrChE,EACAiE,IAC+B,OAAD,6B,QAC9B,MAAMD,EAAoB,GAC1B,IAAKhE,EAAU,OAAOh/C,QAAQyV,QAAQ,IACtC,MAAM,KAAEhgB,EAAI,IAAEqkC,EAAG,SAAEngB,EAAQ,QAAEkgB,EAAO,OAAEE,EAAM,MAAEljC,EAAK,MAAEuE,EAAK,OAAEZ,GAAWwkD,EACvE,IAAIkE,EACJ,MAAMtzB,EAAqC,QAAtB,EAAAqzB,aAAY,EAAZA,EAAc9rD,gBAAQ,eAAE1B,KAE7C,GAAK,IAAUwtD,IAAiBrzB,IAAiBn6B,GAc1C,GAAIkkB,EAASqN,SAAU,CAC5Bk8B,QAAwB,YACtBztD,EACAokC,EAAQpkC,KACRqkC,EAAI/oB,IACJ+oB,EAAI3oB,IACJ2oB,EAAI2f,IACJ9/B,EACAogB,EAAO1oB,eACPxa,EAAMvB,IACN8F,EAAM8kD,IACN1lD,GAEFwoD,EAAkBhqD,KAAKkqD,GACvB,IACE,MAAMC,QAAyB,YAAcD,EAAiBppB,EAAIspB,cAClEJ,EAAkBhqD,QAAQmqD,GAC1B,MAAO/pD,GAEP+d,QAAQC,KAAK,wCAAyChe,UAhCxD8pD,QAAwB,YACtBD,EACAtpC,EAASqN,SACTvxB,EACAokC,EAAQpkC,KACRqkC,EAAI/oB,IACJ+oB,EAAI3oB,IACJ2oB,EAAI2f,IACJ1f,EAAO1oB,eACPxa,EAAMvB,IACN8F,EAAM8kD,IACN1lD,GAyBJ,GAAIs/B,EAAIt4B,OAAQ,CACd,MAAMA,QAAe,aAAO,cAAas4B,EAAIt4B,OAAQq4B,EAAQpkC,MACvD4I,EAAS,EAAYy7B,EAAI/oB,KAC/BvP,EAAOrK,SAASswB,YAAc,YAC5B,CACEnuB,IAAK,MACLvB,MACsB,QAApBsG,EAAOotC,SAAqBptC,EAAO9E,SAAW,GAAG8E,EAAOotC,cAAcptC,EAAO9E,YAEjFiI,EAAOrK,SAASswB,mBAEZ,aAAU,cAAajmB,EAAQq4B,EAAQpkC,MAE7C,MAAM4tD,QAA+B,aACnC,sBACA,IACAxpB,EAAQpkC,WAEmE+lB,IAAzE,IAAO6nC,EAAuBz+B,QAAU3d,GAAMA,EAAExR,OAASqkC,EAAIt4B,gBACzD,YAAqBs4B,EAAIt4B,OAAQ6hD,GAAwB,IAInE,GAAI,IAA+B,QAAzB,EAAAH,aAAe,EAAfA,EAAiB/rD,gBAAQ,eAAEqD,OAAQ,8BAC3C,IACE,MAAM4d,QAAoB,YAA+B8qC,GACzDF,EAAkBhqD,KAAKof,GACvB,MAAOhf,GAEP+d,QAAQiqB,IAAI,+CAAgDhoC,GAC5D,YAAsB8pD,EAAgB/rD,SAAS1B,KAAMytD,EAAgB/rD,SAASC,WAGlF,OAAO4I,QAAQS,IAAIuiD,MAgLiBM,CAC9BtE,EACsB,QAAtB,EAAAE,aAAY,EAAZA,EAAcvlC,gBAAQ,eAAE5a,MAE1BijD,GAAUhpD,QAAQgqD,SAEXnkC,KAAgB,IAAa3V,OACtC84C,GAAUhpD,WACF+mD,EACJf,EACA/pD,EACAyqC,EACyB,QAAzB,EAAAwf,aAAY,EAAZA,EAAcprB,mBAAW,eAAE/0B,KAC3BogD,GAA2B,SAAWj1B,EACtCi1B,KAGKtgC,KAAgB,IAAa1V,kBACtC64C,GAAUhpD,UAzpB+B,EAC3CgmD,EACA/pD,EACAyqC,EACA6jB,EACAr5B,EAAgB,SAChBi1B,EAAmC,M,MAEnC,MAAM,KACJ1pD,EACAokC,SAAWpkC,KAAM2B,GACjB4H,aAAevJ,KAAMg+C,GACrB3Z,KAAO/oB,IAAKsc,EAAU,IAAElc,EAAM,SAAUsoC,IAAKt7C,EAAYqD,OAAQgjB,GACjEuV,QAAQ,eAAE1oB,GACVxa,OAASvB,IAAKy3C,EAAW,SAAEkT,GAC3B7kD,OAAO,IAAE8kD,EAAKliC,SAAUmiC,EAAa,qBAAEqD,GACvChpD,OAAQ4kD,GACNJ,EAEErlD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDguD,EAAwBxuD,IAAiC,QAAlB,EAAAA,EAAY0D,cAAM,eAAE+qD,uBAE3DhE,EAAgB,YAAa,CAAEjqD,OAAMg+C,kBAAiB95C,kBAAiBozC,gBACvE4S,EAAqB,OAAH,wBAAQ,YAAkBtyB,EAAYlc,IAAS,eAEjEmvC,EAAeL,EAAWj8C,OAAOC,KAAKg8C,GAAY,GAClDM,EAAaD,EAChBrhD,OAAQ8N,KAAQkzC,EAASlzC,IACzBoF,IAAKpF,IAAM,CAAGtX,KAAMsX,EAAGhV,MAAOkoD,EAASlzC,MACpCm3B,EAAYgc,EAAIjhD,OAAQuhD,IAAcF,EAAa3hD,SAAS6hD,EAAS/qD,OAE3E,IAAIkuD,EAAsB,GAE1B,OAAQxD,GACN,KAAK,oBAAkByD,OACrBD,EAAsB,CACpB,CACEluD,KAAM,aACNsC,MAAOsZ,IAGX,MACF,KAAK,oBAAkBwyC,OACrBF,EAAsB,CACpB,CACEluD,KAAM,gBACNsC,MAAO,GAAG0rD,KAAyB1W,MAM3C,MAAM+W,EACK,WAAT55B,GAAsB,IAAUq5B,GAE5B9tD,EADA8tD,EAAwBpsD,SAASqD,OApCpB,0BAuCbupD,EAAqB,CACzBr+C,WAAY,wBACZxO,KAAM,QACNC,SAAU,CACR1B,KAAM0pD,GAA4B2E,EAClC1sD,YACAoD,OAAQ,OAAF,sCAAOklD,GAAkBN,GAAU,CAAE,yBAAc0E,IACzDr8B,YAAak4B,GAEfvqD,KAAM,CACJuL,OAAQ,CACNxI,KAAM,MACN2hC,IAAK,OAAF,QACD/oB,IAAKsc,EACLksB,SAAUpoC,GACNqT,EAAa,CAAEw/B,YAAax/B,GAAe,IAEjDrmB,cAEF+hD,IAAK,IAAIK,KAAerc,GACxBlmB,SAAU,CACRvoB,KAAM+tD,EACNtsD,KAAM,wBAER+sD,YAAaN,EACbx/C,OAAQ,CACNtN,MAAO,GAAG,OAAgCO,KACxC+nD,GAA4B2E,cAM9BI,EAAkB,YAAUX,EAAyBQ,GAI3D,MAHa,WAAT75B,IACFg6B,EAAgB/sD,SAAS1B,KAAO8tD,EAAwBpsD,SAAS1B,MAEnD,WAATy0B,EACH,aAAU,IAAsBg6B,GAChC,aAAU,IAAsBH,EAAoBrkB,EAAS,IAAY,KA0jBnEykB,CACJnF,EACA/pD,EACAyqC,EAC6B,QAA7B,EAAAwf,aAAY,EAAZA,EAAcgF,uBAAe,eAAEnlD,KAC/BogD,GAA2B,SAAWj1B,EACtCi1B,KAYN,GAPa,WAATj1B,IACF83B,GAAUhpD,WAAW8mD,EAAoBd,EAAU/pD,EAAa,UAAWyqC,IACvEmiB,IACFG,GAAUhpD,WAAW8mD,EAAoBd,EAAU/pD,EAAau1B,GAASkV,KAIzEsf,EAASx/C,YAAc,IAAUwJ,eAAgB,CACnD,MAAMo7C,EAAiBhC,GAAoBzpD,OAAO+qD,sBAE5CW,GAAmE,QAA7C,GAAmC,QAAnC,GAA6B,QAA7B,GAAAnF,aAAY,EAAZA,EAAcoF,uBAAe,iBAAEvlD,YAAI,iBAAE5H,gBAAQ,iBAAEswB,cAAe,GACpF88B,EAAqB,YACzB9uD,GACA0pD,IAA4B1pD,GAC5B2B,GACA6pD,IAEIx5B,EACJzjB,OAAOC,KAAKogD,GAAqBhlD,OAAS,EACtC,OAAD,sCACMglD,GACA,YAAkBh3B,GAAYlc,KAC9BozC,GAEL,OAAD,kEACMF,GACA,eACA,eACA,YAAkBh3B,GAAYlc,KAC9BozC,GAELC,EAAuB,YAC3BxF,EACAoF,EACAzqD,QACA6hB,OACAA,EACAiM,EACA,IAAMy3B,EAAc,wBACpBC,IAEIsF,QAA+B,YACnCzF,EACAwF,EACA9kB,GAQF,MAAO,UANwB1/B,QAAQS,IAAI,CAChC,WAATypB,EACI,aAAU,IAAgBs6B,EAAsB,KAAM,KAAM9kB,EAAS,IAAY,IACjF,aAAU,IAAgB8kB,EAAsB9kB,EAAS,IAAY,OACtE+kB,OAE2BzC,IAyBlC,GAtBIhD,EAASx/C,YAAc,IAAUuJ,WACnCi5C,GAAUhpD,WACFkoD,EACJlC,EACA/pD,EACAyqC,EACA,IAAMwf,EAAc,wBACpBh1B,IAGK80B,EAASx/C,YAAc,IAAUqJ,WAC1Cm5C,GAAUhpD,UAjbgC,EAC5CgmD,EACA/pD,EACAyqC,EACAglB,EACAx6B,EAAgB,YAEhB,MAAM,KACJz0B,EACAokC,SAAWpkC,KAAM2B,GACjB4H,aAAevJ,KAAMg+C,GACrB58C,OAAO,MAAEuqD,EAAO9rD,IAAKy3C,GACrBpX,YAAY,IAAEuqB,EAAG,SAAE7kC,EAAQ,SAAE0L,GAC7BvsB,OAAQ4kD,EACRjlB,QAAQ,IAAE1c,EAAG,OAAEK,GACfgc,KAAO/oB,IAAKsc,EAAU,IAAElc,GAAK,aAC7BipB,GACE4kB,EAEErlD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDiqD,EAAgB,YAAa,CAAEjqD,OAAMg+C,kBAAiB95C,kBAAiBozC,gBACvE4S,EAAqB,OAAH,sCACnB,eACA,YAAkBtyB,EAAYlc,IAC9B,eAECkwC,EAAY,YAAa,IAAUx4C,UAAWpT,GAC9C6rD,EAAiB,YAAkBoD,GAEnCC,EAAsB,CAC1Bj/C,WAAY,uBACZxO,KAAM,mBACNC,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,wBAAOklD,GAAkBN,GAC/B33B,YAAak4B,GAEfvqD,KAAM,CACJosD,SAAUH,EACVhmC,WACA2L,SAAU,CACR7vB,SAAU,CACRqD,OAAQ,OAAF,sCAAO8mD,GAAmBlC,GAAeiC,IAEjDjsD,KAAM,CACJ0/C,WAAY,C,eAERr/C,OACAoB,MAAUpB,EAAH,UACP2rD,QACAlB,MACA1gD,UAAW,YAAsB,CAAEie,MAAKK,YACrC,YAAcsc,OAKzBrT,SAAU,CACR,CACE5uB,KAAM,cACNysD,kBAAmB,CACjBC,UAAW99B,EAASlwB,MACpBiuD,eAAgB,CAACrvD,GACjBkB,KAAM,CACJO,KAAM,iBACNzB,KAASA,EAAH,gBAIRsxB,EAAS3T,OAAS,CAAC,CAAEjb,KAAM,iBAAoB,MAInD4sD,EAAmB,YAAUL,EAA0BC,GAE7D,MAAgB,WAATz6B,EACH,aAAU,wBAAuB66B,GACjC,aAAU,wBAAuBA,EAAkBrlB,EAAS,IAAY,KAoWlEslB,CACJhG,EACA/pD,EACAyqC,EACA,IAAMwf,EAAc,wBACpBh1B,KAMH,IAAUk3B,KACXjB,KAAkB,oBAAkByD,QACpCzD,KAAkB,oBAAkB0D,OACpC,CACA,MAAMoB,EAAkB,IAAM/F,EAAc,gBACtCyD,EAAU,YAAc3D,EAAU/pD,EAAagwD,GAExC,WAAT/6B,EACF83B,GAAUhpD,WAAW,aAAU,eAAc2pD,EAASjjB,EAAS,IAAY,KACzD,WAATxV,GAAsB,IAAU+6B,IACzCjD,GAAUhpD,WAAW,aAAU,eAAc2pD,IAG/C,MAAMuC,EAAgB,IAAMhG,EAAc,cACpChlB,EAAQ,YAAY8kB,EAAU/pD,EAAaiwD,GACpC,WAATh7B,GAAqBziB,GACvBu6C,GAAUhpD,WAAW,aAAU,aAAYkhC,EAAO9iC,GAAW3B,KACpDmsD,IACTI,GAAUhpD,WAAW,aAAU,aAAYkhC,EAAOwF,EAAS,IAAY,KAI3E,OAAOsiB,MAGImD,EAA2B3lD,GACtCA,EAAUP,OACP1F,GACCA,EAASrC,OAAS,kBAAgBA,MAClCqC,EAASrC,OAAS,wBAAsBA,MACvCqC,EAASrC,OAAS,IAAeA,MAChCqC,EAASmM,aAAe,GAAG,IAAeyZ,YAAY,IAAezZ,cAiBhE0/C,EAAiB,CAC5BvrB,EACAwrB,EACAC,EACAC,IACG,OAAD,6BACF,MAAMC,EAAkBF,EAAsB3uC,KAAM7W,GAASA,EAAKixC,WAAWh2C,KAAOsqD,GAC9EI,SAAqBD,EAAgBzU,WAAW2U,qBAAqB7rB,GAEvE0rB,EACF,KAAQvsD,KAxBgC,EAC1C+X,EACA40C,KAEA,MAAMC,EAAS,IAAIC,IAAI90C,EAAK,iBAO5B,OALA60C,EAAOE,OAAS,IAAIC,gBAAgB,OAAD,wBAC9B/hD,OAAOgiD,YAAYJ,EAAOD,eACzBA,EAAe3hD,OAAOgiD,YAAYL,GAAgB,KACrDzjD,WAEI0jD,EAAO1jD,WAAWxD,QAAQknD,EAAOna,SAAU,KAanCwa,CAA6BR,EAAaF,IAEvD,KAAQvsD,KAAKysD,MAIJS,EAAwB,CACnC/tD,EACAguD,EACAC,K,MAEA,GAAIjuD,IAAS,IAAU6Q,gBAAkBm9C,EAAW,CAClD,GAAMA,EAAU/oC,UAAc+oC,EAAU5zC,OAAS4zC,EAAUjpC,OAAQ,OAAO,EAC1E,GAAIipC,aAAS,EAATA,EAAW5jD,IACb,IAAK,MAAM8jD,KAAUF,EAAU5jD,IAC7B,GAAI4jD,EAAU5jD,IAAIyyC,eAAeqR,GAAS,CACxC,GACE,CAAC,gBAAiB,cAAe,2BAA4B,OAAO1nD,SAAS0nD,IAC3EF,EAAU5jD,IAAI8jD,GAEhB,OAAO,EACT,GAAe,kCAAXA,GAAwE,SAA1BF,EAAU5jD,IAAI8jD,GAC9D,OAAO,EACT,GAAe,gBAAXA,GAAsD,cAA1BF,EAAU5jD,IAAI8jD,GAAyB,OAAO,EAIpF,OAAO,EAET,OAA+B,QAA3B,EAAAD,EAAcvpC,qBAAa,eAAExd,QAAS,GAI/BinD,EAAsB,CACjCnuD,EACAouD,EACAC,KAEA,GAAIruD,IAAS,IAAU6Q,iBAAkBu9C,aAAW,EAAXA,EAAalrC,UAAW,EAC/D,OAAO,EAET,MAAMorC,EAAkBD,aAAQ,EAARA,EAAUxqC,QAClC,GAAIyqC,EACF,IAAK,MAAMC,KAASD,EAClB,GAAIA,EAAgBzR,eAAe0R,GAAQ,CACzC,GAAI,CAAC,mBAAoB,UAAW,WAAW/nD,SAAS+nD,IAAYD,EAAgBC,GAClF,OAAO,EACT,GACY,sBAAVA,GACAD,EAAgBC,KAAWD,EAAgBE,yBAE3C,OAAO,EACT,GACY,2BAAVD,GACAD,EAAgBC,KAAWD,EAAgBG,8BAE3C,OAAO,EACT,GAAc,cAAVF,GAAyBD,EAAgBC,GAAQ,CACnD,MAAMG,EAAgBJ,EAAgBC,GACtC,IAAK,MAAMI,KAASD,EAClB,GAAIA,EAAc7R,eAAe8R,GAAQ,CACvC,GACY,oBAAVA,GACAD,EAAcC,KAAWD,EAAcE,uBAEvC,OAAO,EACT,GACY,wBAAVD,GACAD,EAAcC,KAAWD,EAAcroB,2BAEvC,OAAO,IAOrB,OAAO,GAGIwoB,EAA6BC,IACxC,MAAMC,EAAeC,IACnB,IAAK,MAAMC,KAAYD,EACrB,GAAIA,EAAYnS,eAAeoS,GAAW,CACxC,GAAI,CAAC,QAAS,WAAWzoD,SAASyoD,IAAeD,EAAYC,GAAW,OAAO,EAC/E,GAAiB,cAAbA,GAA4BD,EAAYC,KAAcD,EAAYE,iBACpE,OAAO,EACT,GAAiB,gBAAbD,GAA8BD,EAAYC,KAAcD,EAAYG,mBACtE,OAAO,EAGb,OAAO,GAGT,SAAIJ,EAAYD,EAAUxpC,OAAQypC,EAAYD,EAAUnpC,UAI7CypC,EAAsBtyC,I,kEACjC,IAAKA,EAAQ,MAAO,GAEpB,IAAIuyC,GACc,QAAd,EAAAvyC,EAAO+kB,eAAO,eAAE1b,kBAClBkpC,EAAc,YAAavyC,EAAO+kB,QAAQ1b,iBAE5C,MAAM4K,IACgB,QAAlB,EAAAjU,EAAOjW,mBAAW,eAAEwL,eAAiC,QAAlB,EAAAyK,EAAOjW,mBAAW,eAAEvJ,QACvC,QAAlB,EAAAwf,EAAOjW,mBAAW,eAAEwL,gBAAkC,QAAlB,EAAAyK,EAAOjW,mBAAW,eAAEvJ,MACpD,WACkB,QAAlB,EAAAwf,EAAOjW,mBAAW,eAAEwL,eAAgB,MAA8C,QAAlB,EAAAyK,EAAOjW,mBAAW,eAAEvJ,MACpF,SACA,OACA8iD,EACJtjC,EAAOzV,YAAc,IAAUuJ,WAC3B,aACAkM,EAAOzV,YAAc,IAAUqJ,UAC/B,mBACAoM,EAAOzV,YAAc,IAAUwJ,gBAAkB,kBACjDy+C,EAA6C,QAA/B,EAAa,QAAb,EAAAxyC,EAAOyyC,cAAM,eAAEC,wBAAgB,eAAElyD,KA6CrD,MA5C4B,CAC1BmyD,gBAA4B,QAAZ,EAAA3yC,EAAOpe,aAAK,eAAEgxD,gBAA4B,QAAZ,EAAA5yC,EAAOpe,aAAK,eAAEsjB,UAC5D2tC,oBAAuD,QAAlC,EAAa,QAAb,EAAA7yC,EAAOyyC,cAAM,eAAEI,2BAAmB,eAAEryD,KACzDsyD,wBAAqC,QAAZ,EAAA9yC,EAAOpe,aAAK,eAAEgxD,YACvC7pC,SAAUypC,EACV5yB,aAA0B,QAAZ,EAAA5f,EAAOpe,aAAK,eAAEsjB,SAE5B6tC,iBAAsC,QAArB,EAAAR,aAAW,EAAXA,EAAarwD,gBAAQ,eAAE8wD,cAAe,GACvDC,oBAAyC,QAArB,EAAAV,aAAW,EAAXA,EAAarwD,gBAAQ,eAAEie,WAAY,GAEvDpW,YAAakqB,EAEb3vB,SAAUg/C,EAEV4P,qBAAiC,QAAZ,EAAAlzC,EAAOilB,aAAK,eAAE7c,mBAGnC+qC,iBAAuC,QAAtB,EAAY,QAAZ,EAAAnzC,EAAOpe,aAAK,eAAEopD,gBAAQ,eAAEoI,SAEzCC,sBAA0C,MAAnBrzC,EAAO6kB,IAAI2f,OAAiBxkC,EAAO6kB,IAAI3oB,OAAS8D,EAAO6kB,IAAIt4B,OAElF+mD,yBACc,QAAZ,EAAAtzC,EAAO7Z,aAAK,eAAE8kD,IAAI7gD,QAAS,GAAK,IAAmB,QAAZ,EAAA4V,EAAO7Z,aAAK,eAAE2rB,SAAWztB,IAASA,GAC3EkvD,6BACkB,YAAhBf,KACkB,QAAjB,EAAAxyC,EAAO0gB,kBAAU,eAAEuqB,IAAI7gD,QAAS,KAAiC,QAA3B,EAAiB,QAAjB,EAAA4V,EAAO0gB,kBAAU,eAAE5O,gBAAQ,eAAElwB,QACtE4xD,wBAAyBvC,EACvBjxC,EAAOzV,UACPyV,EAAOilB,MACPjlB,EAAOglB,YAETyuB,gCACoC,QAAlC,EAAmB,QAAnB,EAAAzzC,EAAOmlB,oBAAY,eAAEsI,qBAAa,eAAEf,WACD,QAAnC,EAAmB,QAAnB,EAAA1sB,EAAOmlB,oBAAY,eAAEqI,sBAAc,eAAEd,WACJ,QAAjC,EAAmB,QAAnB,EAAA1sB,EAAOmlB,oBAAY,eAAEuI,oBAAY,eAAEhB,SACrCgnB,0BAA2BrC,EACzBrxC,EAAOzV,UACPyV,EAAO0gB,WACP1gB,EAAOglB,YAET2uB,iCAAkC5B,EAA0B/xC,EAAOklB,QACnE0uB,0BAA2B,IAAU5zC,EAAOza,W,yiBCnnChD,MAAM2tB,EAAc,CAAC1yB,EAAc2B,IAC1B,oDAAoDA,KAAa3B,IAgB7DqzD,EAAoB,CAC/B1jD,EACA3P,EACA2B,EACAiH,EACA21C,EACA+U,EACA13C,EACA/b,EACAkrD,KAEQp7C,GAAU,IAAI+M,IAAKwR,IACzB,OAAQA,EAAMluB,MACZ,IAAK,WACH,OAAO,OAAP,wBAAYkuB,GAAK,CAAEC,QAASnuB,IAC9B,IAAK,WACH,OAAO,OAAP,wBAAYkuB,GAAK,CAAEC,QAASvlB,IAC9B,IAAK,eACH,OAAO,OAAP,wBAAYslB,GAAK,CAAEC,QAASowB,GAAU,KACxC,IAAK,eACH,OAAO,OAAP,wBAAYrwB,GAAK,CAAEC,QAASmlC,EAAOrqD,QAAQ,MAAO,KAAOilB,EAAMC,UACjE,IAAK,aACH,OAAO,OAAP,wBAAYD,GAAK,CAAEC,QAASuE,EAAY1yB,EAAM2B,KAChD,IAAK,aACH,OAAO,OAAP,wBAAYusB,GAAK,CAAEC,QAASvS,IAC9B,IAAK,UACH,OAAO,OAAP,wBAAYsS,GAAK,CAAEC,QAAStuB,GAAOquB,EAAMC,UAC3C,IAAK,aACH,OAAO,OAAP,wBAAYD,GAAK,CAAEC,QAAS48B,GAAY78B,EAAMC,UAChD,QACE,OAAOD,KAcFqlC,EAAoBhiC,IAAmC,QAClE,MAA0D,YAAhC,QAA1B,EAAkB,QAAlB,EAAAA,aAAQ,EAARA,EAAU7vB,gBAAQ,eAAEqD,cAAM,eAAG,OAElByuD,EAA8B,CACzCxzD,EACA2B,EACAiH,EACA21C,EACA+U,EACApvC,EACAtI,EACA/b,EACAkrD,EACAhmD,EAAoC,KACjC,OAAD,6B,MACF,MAAMwsB,EAAW,IAAYrN,EAASqN,UA8BtC,OA5BAA,EAAS7vB,SAAW,CAClB1B,KAAM,GAAGA,EACT2B,YACAoD,OAAQ,OAAF,oDACgB,QAAjB,EAAAwsB,EAAS7vB,gBAAQ,eAAEqD,QACnBA,GAAM,CACT,6BAA8B/E,EAC9B,yBAA0BA,KACrBuzD,EAAiBhiC,IAAa,CACjC,CAAC,KAAiC1xB,KAKxC0xB,EAAS5xB,KAAKgQ,OACZ4hB,EAAS5xB,KAAKgQ,QACd0jD,EACE9hC,EAAS5xB,KAAKgQ,OACd3P,EACA2B,EACAiH,EACA21C,EACA+U,EACA13C,EACA/b,EACAkrD,GAGG,aAAU,gBAAex5B,EAAU,CAAEhvB,GAAIZ,OAGrC8xD,EACXvvC,GAC6B,OAAD,6B,QAC5B,MAAMwvC,EACqD,UAA/B,QAA1B,EAAkB,QAAlB,EAAAxvC,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEqD,cAAM,eAAG,yBACzB4uD,EAAqB,+BACtB,YAA2BzvC,IAAS,CACvC20B,YAAa30B,EAASvkB,KAAKk5C,YAAc,IAAIn8B,IAAK4R,I,QAA+B,sCAC5EA,GAAS,CACZ5rB,KAAM,IAAYkxD,oBAClBtqD,KAAMoqD,EACF,YAAoE,QAAlB,EAAAxvC,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAE1B,MACtE,YAAgD,QAAlB,EAAAkkB,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAE1B,UAExD6zD,YAAY,IAEd,OAAO,YAAoBF,EAAuBzvC,MAEvC4vC,EAA8B,CACzC5vC,EACAqN,EACAvxB,EACA2B,EACAiH,EACA21C,EACA+U,EACA13C,EACA/b,EACAkrD,EACAhmD,EAAoC,KACV,OAAD,6B,MACzB,IAAIgvD,EAAkB,IAAY7vC,GAoClC,OAlCKqN,GA1FwC,EAC7CA,EACArN,K,YAEA,OAAiB,QAAjB,EAAAqN,EAAS7vB,gBAAQ,eAAEqD,OAAO,SACP,QAAjB,EAAAmf,EAASxiB,gBAAQ,eAAEqD,OAAO,QACX,QAAjB,EAAAwsB,EAAS7vB,gBAAQ,eAAEqD,OAAO,SACP,QAAjB,EAAAmf,EAASxiB,gBAAQ,eAAEqD,OAAO,OAyFtBivD,CAAgCziC,EAAUrN,KAC5C6vC,EAAkB,IAAYxiC,GAC9BwiC,EAAgBryD,SAAW,CACzBuyD,gBAAiB/vC,EAASxiB,SAASuyD,gBACnCj0D,KAAM,GAAGA,EACT2B,YACAoD,OAAQ,OAAF,oDACgB,QAAjB,EAAAwsB,EAAS7vB,gBAAQ,eAAEqD,QACnBA,GAAM,CACT,6BAA8B/E,EAC9B,yBAA0BA,KACrBuzD,EAAiBhiC,IAAa,CAAE,CAAC,KAAiC1xB,MAK7Ek0D,EAAgBp0D,KAAKgQ,OAAS0jD,EAC5B9hC,EAAS5xB,KAAKgQ,OACd3P,EACA2B,EACAiH,EACA21C,EACA+U,EACA13C,EACA/b,EACAkrD,IA9BFgJ,EAAgBryD,SAASqD,OAAS,IAAO,OAAD,wBACjCgvD,EAAgBryD,SAASqD,QAAWA,GACzC,8BA+BG,aAAU,gBAAegvD,EAAiBpyD,EAAW3B,O,0fCnLvD,MAAMgqC,EAAY,CAAE3V,YAAa,CAAE4V,OAAQ,QACrCiqB,EAA+B,CAC1C3K,EACA4K,EACAjwD,EACAkwD,EACA3V,EACAzsB,EACAqiC,EACA3K,K,QAEA,MAAM,KACJ1pD,EACAuJ,aAAevJ,KAAMg+C,GACrB5Z,SAAWpkC,KAAM2B,GAAW,YAC5Bs8C,EACAzZ,YAAY,QAAEje,GAAS,OACvBme,EACAD,OAAO,kBAAE7c,EAAiB,OAAEskC,EAAM,mBAAEoI,GAAoB,OACxDvvD,EACA3D,OAASvB,IAAK23C,GACdtX,YAAY,IACVuqB,EACAn5B,UAAYlwB,MAAOmzD,IACpB,aACD5vB,EAAY,UACZ56B,EAAS,SACTyqD,GACEjL,GACE,WAAEkL,GAAelL,EACjB2I,EAAmC,QAAhB,EAAA3I,aAAQ,EAARA,EAAU0I,cAAM,eAAEC,iBAErCwC,EAAiB3e,SAASnuB,EAAmB,KAAO0sC,EACpDK,EAAgBJ,EAAc,IAAgBK,OAAS,IAAgBC,cACvE,iBACJhuC,EAAgB,kBAChBD,EAAiB,QACjBJ,EAAO,QACPC,EACAM,WAAW,gBAAEC,EAAe,oBAAEC,GAAqB,uBACnDH,GACEP,GAEFyB,KACEC,QAAS6sC,EACT5sC,YAAa6sC,EACbruC,MAAOsuC,EACP7sC,UAAW8sC,GAEb5sC,QACEJ,QAASitC,EACThtC,YAAaitC,EACbzuC,MAAO0uC,EACPjtC,UAAWktC,IAEX3wB,EACE4wB,EAAe,YAAa,CAChCt1D,OACAg+C,kBACA95C,kBACAozC,YAAa8c,GAAkB5c,EAC/B71C,UAAW88C,EACXR,gBAGF,UADOqX,EAAapX,IAChBuW,EAAY,CACd,MAAMc,EAAa9K,aAAG,EAAHA,EAAK+K,UAAWznD,GAAiB,cAAXA,EAAE/N,OACvB,IAAhBu1D,EAC0B,KAAxBd,EAAWgB,SACZhL,EAAI8K,GAA8BjzD,MAAQmyD,EAAWgB,SAEtDhL,EAAIzyC,OAAOu9C,EAAY,GAEQ,KAAxBd,EAAWgB,UACpBhL,EAAIlnD,KAAK,CAAEvD,KAAM,YAAasC,MAAOmyD,EAAWgB,WAGpD,MAAMC,EAA4C,CAChDj0D,KAAM,IAAaA,KACnBwO,WAAY,GAAG,IAAayZ,YAAY,IAAazZ,aACrDvO,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,gFACDuwD,GACAvwD,GACc,uBAAbyvD,GAAqC,CAAE,uBAAwB,UAC9DtI,GAAU,CAAE,oCAAqC,oBACT,QAAxC,EAAC3C,EAA+BrlC,gBAAQ,eAAEgoB,UAAWwd,IAA6B,CACrF,yBAA0B1pD,IAExBkyD,IACFA,aAAgB,EAAhBA,EAAkBxvD,QAAS,IAAe+0B,qBAAuB,CAC/D,uBAAwB,SAG9BzF,YAAayiC,EAAa,OAAD,wBAAMziC,GAAW,CAAE2jC,YAAalB,EAAWz0D,OAASgyB,GAE/EryB,KAAM,CACJ4xB,SAAU,CACR7vB,SAAU,CACRqD,OAAQ,OAAF,sCACDuwD,GACAvwD,GAAM,CACT,yBAA0B2kD,EACtBH,EAASvpD,KACT+E,EAAO,4BAEbitB,YAAa,OAAF,kEACLpL,GAAqB,CACvB,iCAAkC,GAAGA,IAEnCJ,GAAW,CAAE,oCAAqC,GAAGA,IACrDC,GAAW,CAAE,oCAAqC,GAAGA,IACrDO,GAAmB,CACrB,iCAAkC,GAAGA,IAAkBC,MAErDH,GAA0B,CAC5B,wDAAyD,GAAGA,KAIlEnnB,KAAM,OAAF,wBACEknB,GAAoB,CAAE+uC,qBAAsB/uC,IAAmB,CACnEw4B,WAAY,C,2CAERr/C,OACAoB,MAAO,GAAG+yD,GACNO,GAAkB,CACpB/I,MAAO,CACL,CACEhjC,cAAe+rC,MAGnB,CACFmB,gBAAiBlB,EACjBmB,gBAAiB,CACfC,0BAA0B,EAC1BC,aAAc,CACZC,KAAM,CAAC,QAETC,cAAc,EACdC,eAAgB,CACdzzD,KAAM,mBAGV+nD,MACA1gD,UAAW,OAAF,yBACFirD,GAAYI,IAAgB,CAC/B1wB,OAAQ,OAAF,wBACAswB,GAAY,CAAEhtC,IAAK,GAAGgtC,IAAWC,MACjCG,GAAe,CAAE/sC,OAAQ,GAAG+sC,IAAcC,SAG7CP,GAAcI,IAAkB,CACnChgC,SAAU,OAAF,wBACF4/B,GAAc,CAAE9sC,IAAK,GAAG8sC,IAAaC,MACrCG,GAAiB,CAAE7sC,OAAQ,GAAG6sC,IAAgBC,UAIrD,YAAcxwB,EAAc56B,UAO3C,IAAIqsD,GAAwB,GACvB,IAAU/B,KACb+B,GAAwB,IAAO/B,EAAwB,CACrD,SACA,8BACA,mCAKJ,OAF8B,YAAU+B,IAAyB,GAAIV,IAmBjEW,EAA0B,CAC9Br2D,EACAs2D,EACAC,KAEA,MAAM,KACJ90D,EAAI,WACJwO,EACAvO,UAAY1B,KAAMw2D,EAAO,UAAE70D,IACzB20D,EACJ,OAAO,OAAP,wBACMC,EACA,OAAD,UAAMA,GACL,CACE90D,KAAM,IAAmBA,KACzBwO,WAAY,GAAG,IAAmByZ,YAAY,IAAmBzZ,aACjEvO,SAAU,CACR1B,OACA2B,eAEF,CACNhC,KAAM,CACJ+b,IAAK,CACH1b,KAAMw2D,EACN/0D,OACAwO,kBAMKwmD,EAA4B,CACvCH,EACAI,KAEA,MACEh1D,UAAU,KAAE1B,EAAI,UAAE2B,IAChB20D,EACEtH,EAAyB,GAC/B,OAAO,aAAO,IAAoB,KAAMrtD,GACrCuM,KAAM2zB,IACL,MAAM80B,EAAuB90B,EAAIhtB,MACjC,KAAK6hD,aAAqB,EAArBA,EAAuB9sD,WAAW+sD,aAAoB,EAApBA,EAAsB/sD,QAC3D,OAAOW,QAAQyV,QAAQ,IAIzB,MAAM42C,GA5DVC,EA6DM72D,EA3DN82D,EA6DMJ,EADAC,EAzDHntD,OAAQutD,IAAS,QAAC,OAAe,QAAf,EAAU,QAAV,EAAAA,EAAMp3D,YAAI,eAAE+b,WAAG,eAAE1b,QAAS62D,IAC5CrtD,OAAQwtD,KAAWF,aAAqB,EAArBA,EAAuB5tD,SAAS8tD,EAAMt1D,SAAS1B,QAClE0c,IAAKu6C,IAAU,CACdC,OAAQ,IAA4BC,OACpCrzD,SAAUmzD,MAVmB,IACjCJ,EAEAC,EA+DI9H,EAAuBzrD,QAAQqzD,GAG/B,MAAMQ,EAAqBV,EAAsBh6C,IAAK6K,IACpD,MAAMgvC,EAAmBI,EAAqBz1C,KAC3Cm2C,GAAcA,EAAU31D,SAAS1B,OAASunB,GAE7C,IAAI+vC,EAYJ,OAVEA,EADEf,EAC0B,CAC1BW,OAAQ,IAA4BK,OACpCzzD,SAAUuyD,EAAwB9uC,EAAY+uC,EAAoBC,IAGxC,CAC1BW,OAAQ,IAA4BM,OACpC1zD,SAAUuyD,EAAwB9uC,EAAY+uC,IAG3CgB,IAIT,OAFAtI,EAAuBzrD,QAAQ6zD,GAExBpI,IAERx/B,MAAOve,IAENyQ,QAAQiqB,IAAI,yCAA0C16B,GAC/C+9C,KAIAyI,EAA2B,CACtClO,EACA+M,EACArsB,IACwC,OAAD,6BACvC,MACEzF,YAAcpd,cAAesvC,EAAwB,KACnDnN,EACEyF,QAA+ByH,EAA0BH,EAAoB,IAC9E,IAAI9sB,IAAIktB,EAAsBh6C,IAAKwsB,GAAOA,EAAGjgC,QAAQ,iBAAkB,QAEtEisB,EAAuC,GAiB7C,OAhBA85B,EAAuBplD,QACrBolD,EAAuB9hC,QAAQ,EAAGgqC,SAAQpzD,SAAUizD,MAClD,OAAQG,GACN,KAAK,IAA4BM,OAC/BtiC,EAAS3xB,KAAK,aAAU,IAAoBwzD,EAAO9sB,EAASD,EAAY,KACxE,MACF,KAAK,IAA4ButB,OAC/BriC,EAAS3xB,KAAK,aAAU,IAAoBwzD,EAAO,KAAM,KAAM9sB,EAASD,EAAY,KACpF,MACF,KAAK,IAA4BmtB,OAC/BjiC,EAAS3xB,KAAK,aAAQ,IAAoBwzD,EAAO9sB,EAASD,EAAY,QAMvE9U,M,kCCxUT,gHAKO,MAAMwiC,EAAoB,IAC/B,YAAwB,oBAAmB,KAEhCC,EAA2Bh6C,IACtC,IAAKA,EACH,OAAO,IAAqBi6C,kBAE9B,MAAM,SAAE1zC,GAAavG,EAAOhe,KAC5B,OACEukB,EAAS,IAAa2zC,qCAAuC,IAAcC,WAC3E5zC,EAAS,IAAa6zC,iCAAmC,IAAcD,WACvE5zC,EAAS,IAAa8zC,6BAA+B,IAAWC,UAChE/zC,EAAS,IAAag0C,yBAA2B,IAAWC,KAErD,IAAqBxyB,oBAG5BzhB,EAAS,IAAa2zC,qCAAuC,IAAcO,WAC3El0C,EAAS,IAAa6zC,iCAAmC,IAAcK,WACvEl0C,EAAS,IAAa8zC,6BAA+B,IAAWK,aAChEn0C,EAAS,IAAag0C,yBAA2B,IAAWI,QAErD,IAAqBxyB,0BAEvB,IAAqB8xB,oB,0dCDvB,MAAMW,EAAc,CAAOC,EAAgBj2D,EAAYk2D,EAAY,IAAM,OAAD,6B,YAC7E,MAAMC,QAAsC,aAAO,qBAAoBF,EAAQj2D,GACzEo2D,EAAyC,QAAlB,EAAAD,aAAU,EAAVA,EAAYx1D,cAAM,eAAE01D,cAAcC,cAE/D,IACE,IAAKF,EAOH,YANIF,EAAY,EACdK,WAAW,IAAMP,EAAYC,EAAQj2D,EAAIk2D,EAAY,GAAI,WAGnD,aAAU,aAAY,YAAyBC,GAAa,CAAEn2D,QAMxE,MACMw2D,EAA8C,QAAhC,EAA2B,QAA3B,EAAoB,QAApB,SADU,aAAO,eAAcJ,EAAsBp2D,IACrC5C,YAAI,eAAEgsD,aAAK,eAAG,UAAE,eAAE3rD,KAGhDykC,EAAmB,YACvBi0B,EACAC,EACAI,SAEI,aAAU,aAAYt0B,EAAO,CAAEliC,OACrC,MAAOwL,GACP,YAAW,CACTnM,MAAO,uBACP+B,MAAOoK,EAAEvK,SAAW,iDAKbw1D,EAAgB,CAC3B90C,EACAu2B,IAC+B,OAAD,6BAC9B,MAAM,eAAEwe,GAAmBxe,EACrBye,EAAgBh1C,EAASxiB,SAASC,UAElCghB,EAA+B,YAAuBuB,EAAUu2B,EAAY,KAAM,KAAM,CAC5F5P,cAAc,IAEVsuB,EAAoDF,EAAen1D,SAASnE,KAAKgQ,OAAO+M,IAC5F,EAAG1c,WAAW,CAAGA,UAEbo5D,EAAuC,YAC3Cl1C,EACAvB,EACAw2C,GAEIE,QAAgC,YAA2BH,GAC3DI,EAAmC,YACvC,CAACL,EAAen1D,UAChBs1D,EACAC,GAEI33D,EAAW,CAAEa,GAAI22D,GACvB,IAAInvD,EACJ,IAEE,MAAMwvD,QAAmB,aAAU,uBAAsBH,EAAiB13D,GAM1EqI,EAAY,CAACwvD,QAHY,aAAU,qBAAoBD,EAAe53D,IAItE,MAAOuP,GACP,OAAO1G,QAAQC,OAAOyG,GAKxB,OAFAsnD,EAAYe,EAAc53D,SAAS1B,KAAMk5D,GAElC3uD,QAAQyV,QAAQjW,MAGZyvD,EAAgB,CAC3Bt1C,EACAu1C,IAC+B,OAAD,6BAC9B,MAAM9Q,EAAmB,GACnB+Q,EAAwBD,EAAqBA,EAAH,QAA4B,cACtEE,QAA8B,aAAO,6BAA4BD,GACvE,GAAIC,EAAuB,CACzB,MAAMC,EAAa,+BACd,YAA2B11C,IAAS,CACvC20B,YAAa30B,EAASvkB,KAAKk5C,YAAc,IAAIn8B,IAAK4R,I,MAA+B,sCAC5EA,GAAS,CACZ5rB,KAAM,IAAYkxD,oBAClBtqD,KAAM,YAAgD,QAAlB,EAAA4a,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAE1B,UAE1Di5D,eAAgB,CACdj5D,KAAM05D,EACN51D,SAAU61D,KAGR5vD,QAAkBivD,EAAc90C,EAAU01C,GAChDjR,EAAiBplD,QAAQwG,GAE3B,OAAOQ,QAAQyV,QAAQ2oC,O,kCCjIzB,wKAiBO,MAAM3e,EAAY,CAAE3V,YAAa,CAAE4V,OAAQ,QAE5C4vB,EACJtQ,GAEO,QAAUA,EAGNuQ,EAAgB,CAC3BvQ,EACAC,EACAgG,EACAC,K,YAEA,MACErrB,SAAWpkC,KAAM2B,GACjB4H,aAAevJ,KAAMg+C,GAAiB,KACtCh+C,EACA+E,OAAQ4kD,EACRvoD,OAASuqD,MAAOoO,EAAYl6D,IAAKy3C,GACjC7S,OAAO,kBAAE7c,EAAiB,mBAAE0sC,GAAoB,UAChDvqD,GACEw/C,EAEErlD,EAAkB,IAAMslD,EAAiB,kBAAoB,IAAMD,EAAU,cAC7EllB,EAAM,IAAMklB,EAAU,OAEtBU,EAAgB,YAAa,CAAEjqD,OAAMg+C,kBAAiB95C,kBAAiBozC,gBACvEsU,EAAY,YAAa7hD,EAAW/J,GACpCkqD,EAAqB7lB,EACvB,OAAD,wBAAM,YAAkBA,EAAI/oB,IAAK+oB,EAAI3oB,MAAS,eAC7C,cAEJ,IAAIiwC,EAAQoO,EACZ,MAAMrP,EAA8B,QAAd,EAAAnB,EAAS5jD,aAAK,eAAE4iB,SACtC,GAAImiC,IAAkB,oBAAkByD,QAAUvmC,EAAmB,CAEnE+jC,EAAQ,CADK,CAAEhjC,cAAe,IAAYf,GAAoBouB,SAAU,aAEnE,GACL0U,IAAkB,oBAAkB8B,SACnC,IAA+B,QAArB,EAAAgD,aAAe,EAAfA,EAAiB7vD,YAAI,eAAEgsD,QAS7B,GAAIkO,EAAsBtQ,GAAW,CAC1C,MACEyQ,KAAOrO,MAAOsO,IACZ1Q,EACJoC,EAAQsO,OACH,GAAI,IAAUtO,GAAQ,CAE3BA,EAAQ,CADK,CAAEhjC,cAAe2rC,EAAoBte,SAAU,cAb5D2V,EAAQ,IACH6D,EAAgB7vD,KAAKgsD,MAAMjvC,IAAKiwB,IAAS,CAC1C3sC,KAAM2sC,EAAK3sC,KACX2oB,cAAegkB,EAAKA,KACpBqJ,SAAU,UAYhB,GACEpuB,IACC+jC,EAAMn7B,KAAMmc,GAAS/kB,IAAsB+kB,EAAKhkB,cAAclc,YAC/D,CACA,MAAMkgC,EAAO,CAAEhkB,cAAe,IAAYf,GAAoBouB,SAAU,OAClEkkB,EAAmD,QAAzB,EAAmB,QAAnB,EAAAzK,aAAa,EAAbA,EAAe9vD,YAAI,eAAEgtC,YAAI,eAAEwtB,WAC3DxO,EAAQ,IAAIA,EAAMniD,OAAQonB,GAAMA,EAAEjI,gBAAkB2rC,GAAqB3nB,GAErEutB,IACFvO,EAAQ,IAAIA,EAAMniD,OAAQonB,GAAMA,EAAEjI,gBAAkBuxC,GAA0BvtB,IAIlF,MAAMytB,EAAkB,CACtB34D,KAAM,UACNwO,WAAY,KACZvO,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,wBAAOklD,GAAkBN,GAC/B33B,YAAa,OAAF,UAAOk4B,IAEpBvqD,KAAM,CACJosD,SAAUH,EACVD,MAAO,IAAMA,EAAQhf,IAAS,CAC5BA,KAAMA,EAAKhkB,cACXwxC,WAAYxtB,EAAKhkB,cACjBqtB,SAAUrJ,EAAKqJ,SAEfh2C,KAAM2sC,EAAK3sC,MAAQ,YAAa2sC,QAOtC,OAFgB,YAAU6iB,EAAiB4K,IAKhCC,EAAc,CACzB9Q,EACAC,EACAiG,K,YAEA,MACErrB,SAAWpkC,KAAM2B,GACjB4H,aAAevJ,KAAMg+C,GAAiB,KACtCh+C,EACA+E,OAAQ4kD,EACRllB,OAAO,SACL9c,EAAQ,kBACRC,EAAiB,mBACjB0sC,EAAkB,OAClB7sC,EAAM,KACN3K,EAAI,IACJhQ,EACA/H,OAAQu1D,GAEVl5D,OAASuqD,MAAOoO,EAAYl6D,IAAKy3C,IAC/BiS,EAEErlD,EAAkB,IAAMslD,EAAiB,kBAAoB,IAAMD,EAAU,cAC7EllB,EAAM,IAAMklB,EAAU,OAEtBU,EAAgB,YAAa,CAAEjqD,OAAMg+C,kBAAiB95C,kBAAiBozC,gBACvE4S,EAAqB7lB,EACvB,OAAD,wBAAM,YAAkBA,EAAI/oB,IAAK+oB,EAAI3oB,MAAS,eAC7C,cAEJ,IAQIy+C,EARAxO,EAAQoO,EACZ,GAAIF,EAAsBtQ,GAAW,CACnC,MACEyQ,KAAOrO,MAAOsO,IACZ1Q,EACJoC,EAAQsO,EAIV,MAAMvP,EAA8B,QAAd,EAAAnB,EAAS5jD,aAAK,eAAE4iB,SAEpC4xC,EADEzP,IAAkB,oBAAkByD,QAAUvmC,EACnC,YAAa,CACxBe,cAAe,IAAYf,GAC3BouB,SAAU,QAEH0U,IAAkB,oBAAkB8B,QACP,QAAzB,EAAmB,QAAnB,EAAAiD,aAAa,EAAbA,EAAe9vD,YAAI,eAAEgtC,YAAI,eAAEwtB,WAC/BvyC,EACI,YAAa,CAAEe,cAAe,IAAYf,GAAoBouB,SAAU,QAExE,YAAa,CACxBrtB,eAAuB,QAAR,EAAAgjC,EAAM,UAAE,eAAEhjC,gBAAiB2rC,EAC1Cte,SAAU,QAId,MAAMukB,EAAgB,CACpB94D,KAAM,QACNwO,WAAY,wBACZvO,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,sCAAOklD,GAAkBN,GAAe2Q,GAC9CtoC,YAAak4B,GAEfvqD,KAAM,CACJ2rD,GAAI,CACF7pD,KAAM,UACNzB,QAEF8M,IAAK2a,EAAS3a,EAAM,KACpB0O,KAAMmM,EACN7K,OAEA6vB,KAAM,CAKJwtB,cAEFK,eAAgB,SAMpB,OAFc,YAAU/K,EAAe8K,K,kCCvMzC,oT,kCCCA,+JAeO,MAAME,EAAwB,CACnCv2C,EACAvB,EACAhT,KAEO,CACLM,WAAY,YAAmB,wBAC/BxO,KAAM,uBAAqBA,KAC3BC,SAAU,CACR1B,KAAM,oBAAoBkkB,EAASxiB,SAAS1B,QAAQ,kBAEtDL,KAAM,CACJgQ,SACAqhB,kBAAmB,CAACrO,MAKb+3C,EAAsB,CACjCC,EACAvB,EACAC,KA8BA,MAAO,CACLppD,WAAY,YAAmB,sBAC/BxO,KAAM,qBAAmBA,KACzBC,SAAU,CACR1B,KAAM,kBAAkB,gBAE1BL,KAAM,CACJq5C,mBAAoB,IACpB1nB,SAAU,CACR,CACEspC,SAAUD,EAAgBj+C,IApCQu8C,GAIH,KAAnCI,aAAuB,EAAvBA,EAAyBvc,QACW,KAAnCuc,aAAuB,EAAvBA,EAAyBvc,QAAkD,KAAnCuc,aAAuB,EAAvBA,EAAyBtc,OAE3D,CACLt7C,KAAMw3D,EAAex3D,KACrBzB,KAAMi5D,EAAev3D,SAAS1B,MAG3B,CACLyB,KAAMw3D,EAAex3D,KACrBia,IAAKu9C,EAAev3D,SAAS1B,OAuBzBuxB,UApBoBvxB,EAoBSo5D,EAAgB13D,SAAS1B,KAnBvD,YAAqBq5D,GAKnB,CAAE39C,IAAK1b,GAJL,CACLA,aAHqB,IAACA,GA2BjB66D,EAA2B,CACtCvB,EACAT,EACAsB,EAAqB,QAErB,MAAMW,EAAoBxB,EAAc53D,SAAS1B,KAE3C+6D,EAAgBlC,GAAiB,MAAMiC,EAE7C,MAAO,CACL7qD,WAAY,YAAmB,cAC/BxO,KAAM,aAAWA,KACjBC,SAAU,CACR1B,KAAM+6D,EACNh2D,OAAQ,CACN,+BAAgC,qBAAmBtD,KACnD,4BAA6B,WAC7Bu5D,cAAeF,IAGnBn7D,KAAM,CACJgtC,KAAM,CACJwtB,cAEF7O,GAAI,CACF7pD,KAAM,UACNzB,KAAM+6D,EACNE,OAAQ,S,kCChHhB,oHAEO,MAAMC,EAA4B,K,MACvC,IACE,OAAO/rD,KAAKC,MAA4D,QAAtD,EAAA+rD,eAAeC,QAAQ,YAA+B,QAAI,MAC5E,MAAOrtD,GACP,MAAO,KAIEstD,EAA0B15D,I,MACrC,OAA6C,QAAtC,EAAAu5D,IAA4Bv5D,UAAU,QAAI,IAEtC25D,EAAuB,CAACnhC,EAAsBx4B,IAClD05D,EAAuB15D,GAAWuH,SAASixB,GAGvCohC,EAA2B,CAACphC,EAAsBx4B,KAC7D,IAAKw4B,IAAiBx4B,EAAW,OAEjC,MAAM65D,EAAUH,EAAuB15D,GAAW6H,OAAQiyD,GAAUA,IAAUthC,GAE9EghC,eAAeO,QACb,IACAvsD,KAAKiH,UAAU,OAAD,wBAAM8kD,KAA2B,CAAE,CAACv5D,GAAY65D,OAIrDG,EAAwB,CAACxhC,EAAsBx4B,KAC1D,IAAKw4B,IAAiBx4B,EAAW,OACjC,MAAM6rD,EAAe0N,IAEhB1N,EAAa7rD,KAChB6rD,EAAa7rD,GAAa,IAEvB6rD,EAAa7rD,GAAWuH,SAASixB,KACpCqzB,EAAa7rD,GAAW4B,KAAK42B,GAC7BghC,eAAeO,QAAQ,IAAgCvsD,KAAKiH,UAAUo3C,O,kCCrC1E,qJAGO,MAAMoO,EAAqB,CAChCC,MAAO,QACPC,KAAM,OACNC,KAAM,QAOKC,EAA0B,KACrC,GAAKC,OAAOC,aAAaC,0BACzB,OAAOhtD,KAAKC,MAAM6sD,OAAOC,aAAaC,4BAc3BC,EAAsB,CACjCC,EACAC,EACA36D,IAEA06D,EAAa5tD,OAAO,CAACtL,EAAKo5D,K,MAIxB,OAHID,EAAiBpzD,SAASqzD,EAAYC,QAAQx8D,QAA6B,QAApB,EAAAu8D,EAAYE,gBAAQ,eAAE7yD,QAAS,GACxFzG,EAAII,QAlBgC,EACxCugC,EACAniC,K,MAEA,OAAa,QAAb,EAAAmiC,EAAK24B,gBAAQ,eAAE//C,IAAK7Z,IAAQ,CAC1B65D,gBAAiB54B,EAAKpiC,SAAS1B,KAC/B28D,QAAS,OAAF,wBAAO95D,GAAG,CAAElB,UAAwB,mBAAbkB,EAAIpB,KAA4BE,EAAYkB,EAAIlB,YAC9Ei7D,KAAM94B,EAAK04B,QAAQx8D,KACnBy8D,SAAU34B,EAAK24B,aAUDI,CAA2BN,EAAa56D,IAE/CwB,GACN,IAEQ25D,EAAyBP,IACpC,MAAM16B,EAAM06B,EAAY7/C,IAAK7Z,I,QAAQ,OACnCihC,KAAiB,QAAX,EAAAjhC,EAAI85D,eAAO,eAAE38D,KACnB48D,KAAM/5D,EAAI+5D,KACVl6D,KAAiB,QAAX,EAAAG,EAAI85D,eAAO,eAAEl7D,QAErB,OAAO,IAASogC,EAAK,CAAC,W,kCC7CxB,IAAYk7B,EAAZ,2CAAYA,GACV,kBACA,kBACA,gBAHF,CAAYA,MAAI,M,kCCFhB,8DAqCe,IA7BsBr4D,IACnC,MAAM,EAAEnD,GAAM,2BACRoO,EAAS,sBACTo0C,EAAW,wBACXpiD,EAAYgO,EAAOpN,GACnBy6D,EAAQ,cACRC,EAAelZ,EAASmZ,SAASh0D,SAAS,kBAChD,OACE,gCACE,gBAAC,IAAM,KACL,6BAAQ3H,EAAE,+BAEZ,gBAAC,IAAQ,CACPwI,UAAW,CACT,CACEpI,YACAF,KAAM,cACNy6B,KAAM,eACND,QAAQ,EACRgG,UAAU,KAId,gBAAC,IAAa,eAACk7B,aAAcF,EAAct7D,UAAWA,EAAWq7D,MAAOA,GAAWt4D,Q,kCC/B3F,wEAUO,MAAM04D,EAAwB,KACnC,MAAMC,EAAwB,cAExBC,EAAsB,UAAgD,IACrED,GAA0BA,EAAsBzzD,OAG9CyzD,EAAsB5uD,OAAO,CAACtL,EAAKy5D,KACxCz5D,EAAIy5D,GAAQ,CACVn7D,KAAM,mBAAiBA,KACvBzB,KAAM48D,GAEDz5D,GACN,IARM,GASR,CAACk6D,IAEEE,EAAe,YAAsDD,GAE3E,IAAKD,GAA0D,IAAjCA,EAAsBzzD,OAClD,MAAO,CAAEN,KAAM,IAAoBysB,QAAQ,GA0B7C,MAAO,CAAEzsB,KAvBW+zD,EAAsB5uD,OAAO,CAACtL,EAAKy5D,K,cACrD,MAAMY,EAAcD,EAAaX,GACjC,GAAiD,OAAb,QAAhC,EAAsB,QAAtB,EAAAY,aAAW,EAAXA,EAAaxnC,iBAAS,eAAE/mB,gBAAQ,eAAE/L,QAEpCwe,QAAQC,KACN,eAAei7C,8EAEZ,IAAIY,aAAW,EAAXA,EAAaznC,UAAUynC,aAAW,EAAXA,EAAal0D,MAAM,CACnD,MAAMoM,GACkC,QAAtC,EAAyB,QAAzB,EAAA8nD,EAAYl0D,KAAK5H,gBAAQ,eAAEswB,mBAAW,eAAG,wCAChB,QAAzB,EAAAwrC,EAAYl0D,KAAK5H,gBAAQ,eAAE1B,OAC3B48D,EACFz5D,EAAIy5D,GAAQlnD,OAEZvS,EAAIy5D,GAAQA,EAEd,OAAOz5D,GACN,IAMyB4yB,OAJFxnB,OAAOiR,OAAO+9C,GAAcjtB,MACnDktB,GAAgBA,EAAYznC,QAAUynC,EAAYxnC,c,kCCpDvD,8HA0Ke,IArIqC,EAClDr0B,YACA06D,eACAW,QACAG,mBAEA,MAAM,EAAE57D,GAAM,2BACd,IAAM86D,EAAatmC,QAAU,IAAUsmC,EAAarmC,aAAgBgnC,EAAMjnC,OACxE,OAAO,gBAAC,IAAU,MAGpB,MAAM0nC,EAAsC,YAC1CpB,EAAa/yD,KACbiF,OAAOC,KAAKwuD,EAAM1zD,MAClB3H,GAGI+7D,EAAU,aAAoB,KAAkBC,WAEhDC,EAAgB,CACpBC,cAAexB,EAAatmC,QAAU0nC,GA0DlCK,EACJ,gCACE,gBAAC,IAAW,CACVl8D,MAAOu7D,EAAe57D,EAAE,6BAA+B,KAAI,YACjD,uBAEV,gBAAC,QAAK,CAACA,EAAGA,EAAGgB,GAAG,cAEZ,8IAEF,gBAAC,OAAI,CAAC+oD,GAAI,WAAW3pD,KAAa,YAAUioB,UAAQ,S,OAAmB,IACvE,gBAAC,OAAI,CAAC0hC,GAAI,WAAW3pD,KAAa,mBAAiBioB,UAAQ,iB,MAE3D,gBACA,gBAAC,QAAK,CAACroB,EAAGA,EAAGgB,GAAG,cACb,I,gCAC6B,IAC9B,gBAAC,IAAY,CAACC,KAAMk7D,GAAO,2C,MAIhCrB,EAAarmC,UACZ,gBAAC,KAAS,CAACD,OAAQsmC,EAAatmC,OAAQC,UAAWqmC,EAAarmC,YAEhE,gBAAC,IAAM,CACL4nC,cAAeA,EACf3rD,SAjFa,CAACuN,EAAQva,KAC5B,IAAI84D,EAAW,YAAYH,EAAcC,cAAer+C,EAAOq+C,eAC3DG,EAAc,YAAgBJ,EAAcC,cAAer+C,EAAOq+C,eACtE,MAAMI,EAAc,YAAiBF,EAAUC,IAEzC,gCAAEE,EAA+B,sBAAEC,GAA0B,YACjEJ,EACAC,EACAC,GAGEA,EAAYr0D,OAAS,IACvBm0D,EAAWA,EAASv0D,OACjB40D,IAAQH,EAAY/8C,KAAMm9C,GAAOD,EAAG1B,kBAAoB2B,EAAG3B,kBAE9DsB,EAAcA,EAAYx0D,OACvB40D,IAAQH,EAAY/8C,KAAMm9C,GAAOD,EAAG1B,kBAAoB2B,EAAG3B,mBAGhEuB,EAAY16D,QAAQ26D,GACpB,MAAMI,EAAsB,GAiB5B,OAhBIL,EAAYr0D,OAAS,GACvB00D,EAAoB/6D,QACf,YAAuB,IAAKg7D,MAAON,EAAat8D,EAAWw8D,IAG9DJ,EAASn0D,OAAS,GACpB00D,EAAoB/6D,QACf,YAAuB,IAAKi0D,OAAQuG,EAAUp8D,EAAWw8D,IAG5DH,EAAYp0D,OAAS,GACvB00D,EAAoB/6D,QACf,YAAuB,IAAKi7D,OAAQR,EAAar8D,EAAWw8D,IAI5D5zD,QAAQS,IAAIszD,GAChBpwD,KAAK,KACJjJ,EAAQw5D,UAAU,CAChBj/C,OAAQ,CACNq+C,cAAer+C,EAAOq+C,eAExB36D,OAAQ,CAAEw7D,QAASn9D,EAAE,4DAGxBiuB,MAAOve,IACNhM,EAAQ05D,UAAU,CAAEC,YAAa3tD,EAAIzN,aAmCnCq7D,QA/BY,CAACr/C,EAAQva,KAC3BA,EAAQw5D,UAAU,CAAEv7D,OAAQ,CAAEw7D,QAAS,MAAQl/C,OAAQo+C,KA+BjDz5B,iBAAkB,KAEhB26B,GACA,gBAAC,IAAiB,iBACZA,EAAW,CACf9B,MAAOA,EAAM1zD,KACb+yD,aAAcuB,EACdnuD,SAAU0tD,EAAe,KAAQ4B,OAAS,UAQtD,OAAO5B,EACL,gBAAC,IAAc,CAACriB,kBAAgB,EAACn4C,QAAS,IAAuBq8D,MAAOrtD,UAAQ,GAC9E,gBAAC,IAAM,KACL,6BAAQpQ,EAAE,+BAEXu8D,GAED,I,kCCrKN,uPAWO,MAAMmB,EAAyB,CACpClB,EACAC,KAEA,MAAMkB,EAAc,IAASnB,EAAU,mBACjCoB,EAAc,IAASnB,EAAcI,GACzCc,EAAYh+C,KAAMm9C,GAAOD,EAAG1B,kBAAoB2B,EAAG3B,kBAUrD,OAR4B,IAASwC,EAAcd,GACjDe,EAAYj+C,KACTm9C,GACCD,EAAG1B,kBAAoB2B,EAAG3B,iBAC1B0B,EAAGzB,QAAQ38D,OAASq+D,EAAG1B,QAAQ38D,MAC/Bo+D,EAAGxB,OAASyB,EAAGzB,QAMVwC,EAA4B,CACvCrB,EACAC,KAEA,MAAMkB,EAAc,IAASnB,EAAU,mBACjCoB,EAAc,IAASnB,EAAcI,GACzCc,EAAYh+C,KAAMm9C,GAAOD,EAAG1B,kBAAoB2B,EAAG3B,kBAUrD,OAR+B,IAASwC,EAAcd,GACpDe,EAAYj+C,KACTm9C,GACCD,EAAG1B,kBAAoB2B,EAAG3B,kBACzB0B,EAAGzB,QAAQl7D,OAAS48D,EAAG1B,QAAQl7D,MAAQ28D,EAAGzB,QAAQh7D,YAAc08D,EAAG1B,QAAQh7D,YAC5Ey8D,EAAGxB,OAASyB,EAAGzB,QAMVyC,EAAmB,CAACtB,EAA6BC,IACrD,IACFoB,EAA0BrB,EAAUC,MACpCiB,EAAuBlB,EAAUC,IA4B3BsB,EAAc,CACzBC,EACA9kB,IAEiB,IACf,IACEA,EACC2jB,IACEmB,EAAar+C,KACXm9C,GACCD,EAAGzB,QAAQ38D,OAASq+D,EAAG1B,QAAQ38D,MAC/Bo+D,EAAGzB,QAAQl7D,OAAS48D,EAAG1B,QAAQl7D,MAC/B28D,EAAGxB,OAASyB,EAAGzB,MACfwB,EAAGzB,QAAQh7D,YAAc08D,EAAG1B,QAAQh7D,YAG3CmiC,GAAS30B,KAAKiH,UAAU,CAAC0tB,EAAK64B,QAAQ38D,KAAM8jC,EAAK64B,QAAQl7D,KAAMqiC,EAAK84B,QAK5D4C,EAAkB,CAC7BD,EACA9kB,IAEoB,IAClB8kB,EACCnB,IACE3jB,EAAWv5B,KACTm9C,GACCD,EAAGzB,QAAQ38D,OAASq+D,EAAG1B,QAAQ38D,MAC/Bo+D,EAAGzB,QAAQl7D,OAAS48D,EAAG1B,QAAQl7D,MAC/B28D,EAAGxB,OAASyB,EAAGzB,MACfwB,EAAGzB,QAAQh7D,YAAc08D,EAAG1B,QAAQh7D,WACpCy8D,EAAG1B,kBAAoB2B,EAAG3B,kBAMvB+C,EAAsBhD,GAC1BA,EAAS//C,IAAKgjD,GACF,mBAAbA,EAAIj+D,aACCi+D,EAAIh2C,SACJg2C,WAGFA,EAAI/9D,UACJ+9D,IAIEC,EAAyB,CACpClrC,EACAuoC,EACAr7D,EACAw8D,KAEA,MAAMyB,EAAyC,GAwC/C,OAvCA,IAAU5C,EAAQl5B,IAChB,MAAM44B,EACJjoC,IAAS,IAAK+iC,QAjEoBtiD,EAkEN4uB,EAAK64B,QAAQ38D,KAlEW48D,EAkEL94B,EAAK84B,KAjEjD,GAAG1nD,KAAY0nD,KAAQ,iBAkEtB94B,EAAK44B,gBAnEwB,IAACxnD,EAAkB0nD,EAoEtD,MAAMH,EACJhoC,IAAS,IAAK+iC,QAAU/iC,IAAS,IAAK+pC,OAClC,C,+BAE8B,mBAAtB16B,EAAK64B,QAAQl7D,KACbqiC,EAAK64B,QAAQh7D,UACX,CAAEA,UAAWmiC,EAAK64B,QAAQh7D,WAC1B,GACF,CAAE+nB,SAAU,8BAA8B,CAC9CjoB,KAAMqiC,EAAK64B,QAAQl7D,KACnBzB,KAAM8jC,EAAK64B,QAAQ38D,QAGG,IAA1Bm+D,GAA+Br6B,EAAK24B,SAAS7yD,OAAS,GAEtDk6B,EAAK24B,SAAS7yD,OAAS,EADvB61D,EAAmB37B,EAAK24B,UAGxBgD,EAAmB,CAAC37B,EAAK64B,UACzBJ,EAA2B,CAC/BtsD,WAAY,+BACZxO,KAAM,cACNC,SAAU,CACR1B,KAAM08D,EACN/6D,aAEF66D,QAAS,CACP9yC,SAAU,4BACVjoB,KAAM,cACNzB,KAAM8jC,EAAK84B,MAEbH,YAEFmD,EAAWr8D,KAxHe,EAC5BkxB,EACA8nC,KAEA,OAAQ9nC,GACN,KAAK,IAAK+iC,OACR,OAAO,YAAkB,CAAEpjC,MAAO,mBAAkB9qB,KAAMizD,IAC5D,KAAK,IAAKiC,OACR,OAAO,YAAkB,CAAEpqC,MAAO,mBAAkBtwB,SAAUy4D,IAChE,KAAK,IAAKgC,MACR,OAAO,YAAiB,CACtBnqC,MAAO,mBACPtwB,SAAUy4D,EACVjzD,KAAM,CAAC,CAAEsqB,GAAI,UAAW9W,KAAM,YAAaxa,MAAOi6D,EAAYE,aAElE,QACE,OAAO,OAwGOoD,CAAeprC,EAAM8nC,MAEhCqD,GAGIE,EAA+B,CAC1C/B,EACAC,EACAC,KAEA,IAAIE,EAAwB,EAC5B,MAAMD,EAAqD,GAwC3D,OAvCA,IACEH,EACCgC,I,MACC,OAAgB,QAAhB,EAAAA,EAAQtD,gBAAQ,eAAE7yD,QAAS,GAC3Bo0D,EAAY98C,KACT07C,GAASA,EAAKF,kBAAoBqD,EAAQrD,iBAAmBE,EAAKA,OAASmD,EAAQnD,QAI1F,IAASoB,EAAcgC,IACrB,GAAIA,EAAWvD,SAAS7yD,OAAS,EAAG,CAClC,MAAMq2D,EAA2B/B,EAAgCh9C,KAC9DvE,GAAMA,EAAE+/C,kBAAoBsD,EAAWtD,iBAE1C,GAAIuD,EAA0B,CAC5B,MAAMC,EAAUD,EAAyBxD,SAASjzD,OAC/Ck2D,GAAQA,EAAI1/D,OAASggE,EAAWrD,QAAQ38D,MAE3CigE,EAAyBxD,SAAWyD,MAC/B,CACL,MAAMA,EAAUF,EAAWvD,SAASjzD,OAAQk2D,GAAQA,EAAI1/D,OAASggE,EAAWrD,QAAQ38D,MACpFk+D,EAAgC36D,KAAK,OAAD,wBAAMy8D,GAAU,CAAEvD,SAAUyD,KAChE/B,EAAwB,EAE1B,OAAO,EAET,OAAO,IAGT,IAASF,EAAckC,IACrB,GAAIA,EAAW1D,SAAS7yD,OAAS,EAAG,CAKlC,OAJiCs0D,EAAgCh9C,KAC9DvE,GAAMA,EAAE+/C,kBAAoByD,EAAWzD,iBAEjBD,SAASl5D,KAAK48D,EAAWxD,UAC3C,EAET,OAAO,IAEF,CAAEuB,kCAAiCC,2B,kCCnO5C,wDAGO,MAAMh6B,EAAmB,WAAa9e,MAAM,CACjDw4C,cAAe,UAAYx2C,GACzB,WAAahC,MAAM,CACjBs3C,QAAS,WAAat3C,MAAM,CAC1BrlB,KAAM,WAAa8R,SAAS,IAAKvQ,EAAE,wBACnCE,KAAM,WAAaqQ,SAAS,IAAKvQ,EAAE,0BAErCq7D,KAAM,WAAa9qD,SAAS,IAAKvQ,EAAE,8B,kCCVzC,gFA2BO,MAAM6+D,EAAoE,EAC/EpgE,OACAwf,a,UAEA,MAAM,EAAEje,GAAM,2BACR8+D,EAAMrgE,EAAKV,MAAM,KACjBghE,EACJD,EAAIz2D,OAAS,GAA0D,oBAAX,QAA1C,EAAiC,QAAjC,EAAqB,QAArB,EAAA4V,aAAM,EAANA,EAAQq+C,qBAAa,eAAGwC,aAAG,EAAHA,EAAM,WAAG,eAAE1D,eAAO,eAAEl7D,MAChE,OACE,2BACE,gBAAC,IAAa,CACZzB,KAASA,EAAH,QACN4B,MAAOL,EAAE,4BACTsT,MAAO,CAAE0rD,MAAO,QAASC,eAAgB,iBAAkBC,KAAM,QACjEC,WAAS,EACTl/D,UAAU,mDAEX8+D,GAAgB,gBAAC,KAAe,CAACtgE,KAASA,EAAH,aAAqB0gE,WAAS,MA+E7D,IA1E6C,EAC1DC,eACAC,cACAC,eACA39D,SACA49D,SACAC,QACA/D,QACAX,eACA78C,SACA/P,eAEA,MAAM,EAAElO,GAAM,4BACPy/D,EAAaC,GAAkB,YAAwB,GACxDC,GAAiBH,IAAU,IAAUD,IAAWD,EAEtD,YAAgB,KACb,IACC,YAAsBxE,EAAawB,eACnC,YAAsBr+C,EAAOq+C,gBAG3BoD,GAAe,GADfA,GAAe,IAGlB,CAAC5E,IAOJ,OACE,gBAAC,IAAI,CAACpqD,SAAU0uD,GACd,uBAAKn/D,UAAU,iDACb,uBAAKA,UAAU,mBACb,gBAAC,KAAgB,CACfxB,KAAK,gBACLmhE,SAAU5/D,EAAE,yBACZ+M,QAAS,CAAC/M,EAAE,sBAAuBA,EAAE,mBAAoBA,EAAE,oBAC3D6/D,YAAa,CAAEphE,KAAM,GAAI48D,KAAM,KAE/B,gBAACwD,EAAwB,CAACpgE,KAAK,UAAUwf,OAAQA,IACjD,gBAAC,KAAU,CACTxf,KAAK,eACL0C,KAAM,IAAeD,KACrB84C,YAAah6C,EAAE,qBAEjB,gBAAC,IAAa,CACZ8/D,SAAS,gBACTrhE,KAAK,OACL4B,MAAOL,EAAE,4BACTsT,MAAOmoD,EACP0D,WAAS,OAKjB,gBAAC,IAAU,CACTE,YAhCW,KACfA,IACAK,GAAe,IA+BXJ,aAAcA,EACd3uD,aAAchP,aAAM,EAANA,EAAQ07D,YACtB0C,gBAAiBP,IAAS79D,aAAM,EAANA,EAAQw7D,SAClCwC,cAAeF,GAAeE,EAC9BK,UAAWP,IAAgBE,EAC3BM,YAAajgE,EAAE,mBACfkgE,WAAYlgE,EAAE,qBACdmgE,UAAWV,GAAez/D,EAAE,0CAC5BogE,YAAaX,GAAez/D,EAAE,gDAC9BqgE,aAAcnyD,O,yDCrHtB,2FAsBA,MAAMoyD,EAA0B,CAAC,QAAS,OAAQ,QAc5CC,EAAiB,CAACtE,EAAiCx9D,K,MACvD,OAAiC,QAAjC,EAAAw9D,aAAW,EAAXA,EAAa97D,SAASswB,mBAAW,eAAG,wCACpCwrC,aAAW,EAAXA,EAAa97D,SAAS1B,OACtBA,GAEI+hE,EAA4B,EAAG/hE,OAAMw9D,iBACzC,uBAAK39B,MAAO,CAAEmiC,QAAS,OAAQC,WAAY,WACxCzE,EACC,gBAAC,eAAY,CAACxV,iBAAkB,sCAA4B,sBAC1D,KACJ,2BAAM8Z,EAAetE,EAAax9D,KAmJvB,IA/I0D,EAAGkiE,eAC1E,MAAM,EAAE3gE,GAAM,2BACR4gE,EAAqB,gBAGpBC,EAAiBC,EAAuBC,GAAwB,YAErE,CACAta,iBAAkB,sCAA4B,oBAC9C/rB,QAAQ,IAEJsmC,EAAqB,UAAc,KACvC,MAAMhF,EAAe6E,EAAkB,IAAIA,GAAmB,GAM9D,OALA7E,EAAar9D,KAAK,CAACsiE,EAAcC,KAC/B,MAAMC,EAAeZ,EAAeU,GAC9BG,EAAeb,EAAeW,GACpC,OAAOC,EAAaniE,cAAcoiE,KAE7BpF,GACN,CAAC6E,KAGGQ,EAAeC,EAAqBC,GAAsB,eAG1DC,EAAsBC,GAA2B,aACxD,YAAgB,K,UACVJ,GAAiBC,IAAwBE,GAC3CC,GACmD,QAAjD,EAAkC,QAAlC,EAAmB,QAAnB,EAAAJ,aAAa,EAAbA,EAAejjE,YAAI,eAAEsjE,qBAAa,eAAEpF,qBAAa,eAAER,wBAAyB,KAG/E,CAAC0F,EAAsBH,EAAeC,IAGzC,MAAMK,EAAmB,UAA+C,KACtE,IACGL,IACAR,GACDC,IACCS,EAED,MAAO,GAET,MAAMI,EAC4B,IAAhCJ,EAAqBn5D,OAAei4D,EAA0BkB,EAChE,OAAOR,EACJ/4D,OAAQg0D,IAAiB2F,EAAqBj6D,SAASs0D,EAAY97D,SAAS1B,OAC5E0c,IAAK8gD,GACJ,gBAACuE,EAAI,CACHl+D,IAAK25D,EAAY97D,SAAS1B,KAC1BA,KAAMw9D,EAAY97D,SAAS1B,KAC3Bw9D,YAAaA,MAGlB,CACD+E,EACAD,EACAD,EACAU,EACAF,IAEIO,EAAgB,UAA+C,KACnE,IAAKL,EACH,MAAO,GAET,MAAMM,EAAwBjB,EAAgB3zD,OAC5C,CAACtL,EAAKq6D,KACJr6D,EAAIq6D,EAAY97D,SAAS1B,MAAQw9D,EAC1Br6D,GAET,IAIF,OADkC,IAAhC4/D,EAAqBn5D,OAAei4D,EAA0BkB,GACxCrmD,IAAK1c,GAC3B,gBAAC+hE,EAAI,CAACl+D,IAAK7D,EAAMA,KAAMA,EAAMw9D,YAAa6F,EAAsBrjE,OAEjE,CAACoiE,EAAiBW,KAGdO,EAAYC,GAAiB,aAC9BlyD,EAAO,YAAoB,KAC/B8wD,EAAmB,wCAAyC,CAC1DqB,UAAW,+BACXxG,OAAO+F,aAAoB,EAApBA,EAAsBn5D,QAAS,EAAIm5D,EAAuB,OAEnEQ,EAAc,CAAErgE,OAAQ,gBAExB,MAAMywB,EAA4C,CAChDh0B,KAAM,CACJsjE,cAAe,CACbpF,cAAe,CACbR,uBAAuB0F,aAAoB,EAApBA,EAAsBn5D,QAAS,EAAIm5D,EAAuB,SAKzF,YAA2BpvC,GACxBzlB,KAAK,IAAMq1D,EAAc,CAAErgE,OAAQ,gBACnCssB,MAAO7rB,GAAU4/D,EAAc,CAAErgE,OAAQ,QAASS,YACpD,KAkBH,OACE,gBAAC,IAAW,CACV/B,MAAOL,EAAE,6BAA4B,YAC3B,qCAEV,gBAAC,IAAgB,CACfkiE,sBAAuBliE,EAAE,sCACzBmiE,mBAAoBniE,EAAE,mCACtBoiE,cAAY,EACZT,iBAAkBA,EAClBE,cAAeA,EACfQ,aA1Be,CACnBC,EACAC,EACAC,KAEAf,EAAwBe,EAAmBrnD,IAAKzS,GAASA,EAAKvF,MAAM1E,OACpEujE,EAAc,CAAErgE,OAAQ,YACxBmO,KAoBI2yD,aAjBe,CAAC3X,EAAuC4X,KAC3D,MAAM7/D,EAAc09D,EAAezV,EAAO3nD,MAAM84D,YAAanR,EAAO3nD,MAAM1E,MAC1E,OAAO,EAAMikE,EAAMC,oBAAqB9/D,EAAY8/D,sBAgBhD7xD,WACE6vD,IAAaG,IAA0BQ,GAAuBC,IAIlE,gBAAC,IAAS,CAACn/D,MAAOm/D,IAClB,gBAAC,IAAU,iBAAKQ","file":"dev-console/code-refs/projectAccess-chunk-0ab3c095ae20173b90e5.min.js","sourcesContent":["export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { DOC_URL_PODMAN } from './utils';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline, getImageStreamTagName } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={from.name}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">{t('public~pushed image')}</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~Unable to resolve')}\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>{t('public~Not synced yet')}</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>{t('public~Unresolved')}</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~There is no image associated with this tag')}\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const { t } = useTranslation();\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>{t('public~Image registry commands')}</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            {t(\n              'public~Create a new ImageStreamTag by pushing an image to this ImageStream with the desired tag.',\n            )}\n          </p>\n          <br />\n          <p>{t('public~Authenticate to the internal registry')}</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>{t('public~Push an image to this ImageStream')}</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>{t('public~Pull an image from this ImageStream')}</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            <Trans t={t} ns=\"public\">\n              Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong>{' '}\n              commands.{' '}\n            </Trans>\n            <ExternalLink href={DOC_URL_PODMAN} text={t('public~Learn more.')} />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        {t('public~Do you need to work with this ImageStream outside of the web console?')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const { t } = useTranslation();\n\n  const getImportErrors = (): string[] => {\n    return _.transform(imageStream.status.tags, (acc, tag: any) => {\n      const importErrorCondition = _.find(\n        tag.conditions,\n        (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n      );\n      importErrorCondition &&\n        acc.push(\n          t('public~Unable to sync image for tag {{tag}}. {{message}}', {\n            tag: `${imageStream.metadata.name}:${tag.tag}`,\n            message: importErrorCondition.message,\n          }),\n        );\n    });\n  };\n\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text={t('public~ImageStream details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={imageStream}>\n              {imageRepository && <dt>{t('public~Image repository')}</dt>}\n              {imageRepository && <dd>{imageRepository}</dd>}\n              {publicImageRepository && <dt>{t('public~Public image repository')}</dt>}\n              {publicImageRepository && <dd>{publicImageRepository}</dd>}\n              <dt>{t('public~Image count')}</dt>\n              <dd>{imageCount ? imageCount : 0}</dd>\n            </ResourceSummary>\n            <ExampleDockerCommandPopover imageStream={imageStream} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Tags')} />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">{t('public~No tags')}</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">{t('public~Name')}</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">{t('public~From')}</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">{t('public~Identifier')}</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">{t('public~Last updated')}</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  const ImageStreamsTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n  ImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ImageStreams')}\n      Header={ImageStreamsTableHeader}\n      Row={ImageStreamsTableRow}\n      virtualize\n    />\n  );\n};\n\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {...props}\n      title={t('public~ImageStreams')}\n      kind={ImageStreamsReference}\n      ListComponent={ImageStreamsList}\n      canCreate={true}\n    />\n  );\n};\n\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n","export { default as ProjectAccessRolesConfiguration } from './ProjectAccessRolesConfiguration';\nexport { default as ProjectAccessPage } from './ProjectAccessPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as semver from 'semver';\nimport {\n  getImageStreamIcon,\n  getImageForIconClass,\n} from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  isBuilder,\n  getMostRecentBuilderTag,\n  getBuilderTagsSortedByVersion,\n} from '@console/internal/components/image-stream';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { ProjectModel, ImageStreamModel } from '@console/internal/models';\nimport { ContainerPort, K8sResourceKind, K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport interface ImageTag {\n  name: string;\n  annotations: {\n    [key: string]: string;\n  };\n  generation: number;\n  [key: string]: any;\n}\nexport interface BuilderImage {\n  obj: K8sResourceKind;\n  name: string;\n  displayName: string;\n  description: string;\n  title: string;\n  iconUrl: string;\n  tags: ImageTag[];\n  recentTag: ImageTag;\n  imageStreamNamespace: string;\n}\n\nexport interface NormalizedBuilderImages {\n  [builderImageName: string]: BuilderImage;\n}\n\nexport const imageStreamLabels = ['app.kubernetes.io/name', 'app.openshift.io/runtime'];\n\nexport const getSampleRepo = (tag) => tag?.annotations?.sampleRepo ?? '';\nexport const getSampleRef = (tag) => tag?.annotations?.sampleRef ?? '';\nexport const getSampleContextDir = (tag) => tag?.annotations?.sampleContextDir ?? '';\n\n// Transform image ports to k8s structure.\n// `{ '3306/tcp': {} }` -> `{ containerPort: 3306, protocol: 'TCP' }`\nconst portsFromSpec = (portSpec: object): ContainerPort[] => {\n  return _.reduce(\n    portSpec,\n    (result: ContainerPort[], value, key) => {\n      const parts = key.split('/');\n      if (parts.length === 1) {\n        parts.push('tcp');\n      }\n\n      const containerPort = parseInt(parts[0], 10);\n      if (_.isFinite(containerPort)) {\n        result.push({\n          containerPort,\n          protocol: parts[1].toUpperCase(),\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unrecognized image port format', key);\n      }\n\n      return result;\n    },\n    [],\n  );\n};\n\nexport const getPorts = (imageStreamImage): ContainerPort[] => {\n  const portSpec =\n    imageStreamImage?.image?.dockerImageMetadata?.Config?.ExposedPorts ||\n    imageStreamImage?.image?.dockerImageMetadata?.ContainerConfig?.ExposedPorts;\n  return portsFromSpec(portSpec);\n};\n\n// Use the same naming convention as the CLI.\nexport const makePortName = (port: ContainerPort): string =>\n  `${port.containerPort}-${port.protocol}`.toLowerCase();\n\nexport const prettifyName = (name: string) => {\n  return name.replace(/(-|^)([^-]?)/g, (first, prep, letter) => {\n    return (prep && ' ') + letter.toUpperCase();\n  });\n};\n\nexport const normalizeBuilderImages = (\n  imageStreams: K8sResourceCommon | K8sResourceCommon[],\n): NormalizedBuilderImages => {\n  const data = Array.isArray(imageStreams) ? imageStreams : [imageStreams];\n  const builderImageStreams = data.filter((imageStream) => isBuilder(imageStream));\n\n  return builderImageStreams.reduce((builderImages: NormalizedBuilderImages, imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    const recentTag = getMostRecentBuilderTag(imageStream);\n    const { name } = imageStream.metadata;\n    const displayName = imageStream?.metadata?.annotations?.['openshift.io/display-name'];\n    const description = recentTag?.annotations?.description;\n    const imageStreamNamespace = imageStream.metadata.namespace;\n    const title = displayName && displayName.length < 14 ? displayName : prettifyName(name);\n    const iconClass = getImageStreamIcon(recentTag);\n    const iconUrl = getImageForIconClass(iconClass);\n\n    builderImages[name] = {\n      obj: imageStream,\n      name,\n      displayName,\n      description,\n      title,\n      iconUrl,\n      tags,\n      recentTag,\n      imageStreamNamespace,\n    };\n    return builderImages;\n  }, {});\n};\n\nexport const getTagDataWithDisplayName = (\n  imageTags: ImageTag[],\n  selectedTag: string,\n  defaultName: string,\n): [ImageTag, string] => {\n  const imageTag = _.find(imageTags, { name: selectedTag });\n  const displayName = imageTag?.annotations?.['openshift.io/display-name'] ?? defaultName;\n\n  return [imageTag, displayName];\n};\n\nexport const getSuggestedName = (name: string): string | undefined => {\n  if (!name) {\n    return undefined;\n  }\n  const imageName: string = _.last(name.split('/'));\n  return _.first(imageName.split(/[^a-z0-9-]/));\n};\n\nexport enum RegistryType {\n  External = 'external',\n  Internal = 'internal',\n}\nexport enum BuilderImagesNamespace {\n  Openshift = 'openshift',\n}\nexport const imageRegistryType = (t: TFunction) => {\n  return {\n    External: {\n      value: RegistryType.External,\n      label: t('devconsole~Image name from external registry'),\n    },\n    Internal: {\n      value: RegistryType.Internal,\n      label: t('devconsole~Image stream tag from internal registry'),\n    },\n  };\n};\n\nexport const getSortedTags = (imageStream: K8sResourceKind) => {\n  return _.isArray(imageStream.status.tags) && imageStream.status.tags.length\n    ? imageStream.status.tags.sort(({ tag: a }, { tag: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n          return a.localeCompare(b);\n        }\n        if (!v1) {\n          return 1;\n        }\n        if (!v2) {\n          return -1;\n        }\n        return semver.rcompare(v1, v2);\n      })\n    : [];\n};\nexport const getImageStreamTags = (imageStream: K8sResourceKind) => {\n  const sortedTags = imageStream && !_.isEmpty(imageStream) ? getSortedTags(imageStream) : [];\n  return sortedTags.reduce((tags, { tag }) => {\n    tags[tag] = tag;\n    return tags;\n  }, {});\n};\n\nexport const getProjectResource = (): FirehoseResource[] => {\n  return [\n    {\n      isList: true,\n      kind: ProjectModel.kind,\n      prop: ProjectModel.id,\n    },\n  ];\n};\n\nexport const getImageStreamResource = (namespace: string): FirehoseResource[] => {\n  const resource = [];\n  if (namespace) {\n    resource.push({\n      isList: true,\n      kind: ImageStreamModel.kind,\n      prop: ImageStreamModel.id,\n      namespace,\n    });\n  }\n  return resource;\n};\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Resources, HealthChecksFormData } from '../import/import-types';\nimport { healthChecksDefaultValues } from './health-checks-probe-utils';\nimport {\n  HealthCheckProbeData,\n  RequestType,\n  HealthChecksProbeType,\n  HealthCheckFormProbeData,\n} from './health-checks-types';\n\nexport const constructProbeData = (\n  data: HealthCheckFormProbeData,\n  resourceType?: Resources,\n): HealthCheckProbeData => {\n  const probeData = {\n    ...(data.failureThreshold && { failureThreshold: _.toInteger(data.failureThreshold) }),\n    ...(data.successThreshold && { successThreshold: _.toInteger(data.successThreshold) }),\n    ...(data.requestType === RequestType.ContainerCommand && {\n      exec: data.exec,\n    }),\n    ...(data.requestType === RequestType.HTTPGET && {\n      httpGet: {\n        ...data[data.requestType],\n        scheme: data[data.requestType]?.scheme ? data[data.requestType].scheme[0] : 'HTTP',\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.httpGet.port),\n      },\n    }),\n    ...(data.requestType === RequestType.TCPSocket && {\n      tcpSocket: {\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.tcpSocket.port),\n      },\n    }),\n    ...(data.initialDelaySeconds && {\n      initialDelaySeconds: _.toInteger(data.initialDelaySeconds),\n    }),\n    ...(data.periodSeconds && { periodSeconds: _.toInteger(data.periodSeconds) }),\n    ...(data.timeoutSeconds && { timeoutSeconds: _.toInteger(data.timeoutSeconds) }),\n  };\n  return probeData;\n};\n\nexport const getRequestType = (data: HealthCheckProbeData) => {\n  if (_.has(data, RequestType.HTTPGET)) return RequestType.HTTPGET;\n  if (_.has(data, RequestType.TCPSocket)) return RequestType.TCPSocket;\n  if (_.has(data, 'exec.command')) return RequestType.ContainerCommand;\n  return '';\n};\n\nexport const convertResourceDataToFormData = (\n  resourceData: HealthCheckProbeData,\n): HealthCheckFormProbeData => {\n  return {\n    ...resourceData,\n    requestType: getRequestType(resourceData),\n    failureThreshold: resourceData.failureThreshold?.toString() || '',\n    successThreshold: resourceData.successThreshold?.toString() || '',\n    initialDelaySeconds: resourceData.initialDelaySeconds?.toString() || '',\n    periodSeconds: resourceData.periodSeconds?.toString() || '',\n    timeoutSeconds: resourceData.timeoutSeconds?.toString() || '',\n    ...(resourceData.httpGet && {\n      httpGet: {\n        ...resourceData.httpGet,\n        port: resourceData.httpGet.port?.toString() || '',\n        scheme: resourceData.httpGet.scheme === 'HTTP' ? undefined : ['HTTPS'],\n      },\n    }),\n    ...(resourceData.tcpSocket && {\n      tcpSocket: { port: resourceData.tcpSocket.port?.toString() || '' },\n    }),\n  };\n};\n\nexport const getHealthChecksData = (\n  resource: K8sResourceKind,\n  containerIndex: number = 0,\n): HealthChecksFormData => {\n  const containers = resource?.spec?.template?.spec?.containers ?? [];\n  const readinessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.ReadinessProbe] ?? {};\n  const livenessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.LivenessProbe] ?? {};\n  const startupProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.StartupProbe] ?? {};\n\n  const healthChecks = {\n    readinessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(readinessProbe),\n      data: !_.isEmpty(readinessProbe)\n        ? {\n            ...convertResourceDataToFormData(readinessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    livenessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(livenessProbe),\n      data: !_.isEmpty(livenessProbe)\n        ? {\n            ...convertResourceDataToFormData(livenessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    startupProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(startupProbe),\n      data: !_.isEmpty(startupProbe)\n        ? {\n            ...convertResourceDataToFormData(startupProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n  };\n  return healthChecks;\n};\n\nexport const getProbesData = (healthChecks: HealthChecksFormData, resourceType?: Resources) => {\n  const { readinessProbe, livenessProbe, startupProbe } = healthChecks;\n  return {\n    ...(readinessProbe.enabled\n      ? { readinessProbe: constructProbeData(readinessProbe.data, resourceType) }\n      : {}),\n    ...(livenessProbe.enabled\n      ? { livenessProbe: constructProbeData(livenessProbe.data, resourceType) }\n      : {}),\n    ...(resourceType !== Resources.KnativeService && startupProbe?.enabled\n      ? { startupProbe: constructProbeData(startupProbe.data) }\n      : {}),\n  };\n};\n","import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n}\n\nexport interface HealthCheckFormProbeData {\n  failureThreshold: string;\n  initialDelaySeconds: string;\n  periodSeconds: string;\n  timeoutSeconds: string;\n  successThreshold: string;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string[];\n    path: string;\n    port: string;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: string;\n  };\n}\nexport interface HealthCheckFormProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckFormProbeData;\n}\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { SquareIcon } from '@patternfly/react-icons/dist/esm/icons/square-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sResourceKindReference } from '../module/k8s';\nimport { ResourceLink } from './utils/resource-link';\nimport { Timestamp } from './utils/timestamp';\nimport { EmptyBox } from './utils/status-box';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nconst ImageStreamTimelineItem: React.FC<ImageStreamTimelineItemProps> = ({\n  tag,\n  imageStreamName,\n  imageStreamNamespace,\n  linkToTag,\n}) => {\n  const referenceAndSHA = _.split(tag.dockerImageReference, '@');\n  return (\n    <>\n      <li>\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__circle-icon\">\n            <CircleIcon />\n          </span>\n          <div className=\"co-images-stream-tag-timeline__timestamp\">\n            <Timestamp timestamp={tag.created} simple={true} />\n          </div>\n        </div>\n\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__line\" />\n          <div className=\"co-images-stream-tag-timeline__info\">\n            <ResourceLink\n              kind={ImageStreamTagsReference}\n              name={getImageStreamTagName(imageStreamName, tag.tag)}\n              namespace={imageStreamNamespace}\n              title={tag.tag}\n              linkTo={linkToTag}\n            />\n            <div className=\"co-break-all\">from {referenceAndSHA[0]}</div>\n            <div className=\"co-break-all\">{referenceAndSHA[1]}</div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n\n// check is the compared tag version, is the latest version in a sorted array of all tag versions\nconst isTagVersionLatest = (\n  comparedTag: string,\n  comparedTagPosition: number,\n  orderedTagArray: TagMeta[],\n) => {\n  return (\n    comparedTagPosition ===\n    _.findIndex(orderedTagArray, (orderedTag: TagMeta) => orderedTag.tag === comparedTag)\n  );\n};\n\nexport const ImageStreamTimeline: React.FC<ImageStreamTimelineProps> = ({\n  imageStreamTags,\n  imageStreamName,\n  imageStreamNamespace,\n}) => {\n  const { t } = useTranslation();\n  if (!_.some(imageStreamTags, 'items')) {\n    return <EmptyBox label={t('public~Images')} />;\n  }\n  const tagsArray: TagMeta[] = _.flatten(\n    _.map(imageStreamTags, ({ tag, items }) => {\n      return _.map(items, ({ created, dockerImageReference }) => ({\n        tag,\n        created,\n        dockerImageReference,\n      }));\n    }),\n  );\n  const orderedTagArray = _.orderBy(tagsArray, ['created'], ['desc']);\n  const timeline = _.map(orderedTagArray, (tag: TagMeta, i: number) => {\n    return (\n      <ImageStreamTimelineItem\n        key={tag.dockerImageReference}\n        tag={tag}\n        imageStreamName={imageStreamName}\n        imageStreamNamespace={imageStreamNamespace}\n        linkToTag={isTagVersionLatest(tag.tag, i, orderedTagArray)}\n      />\n    );\n  });\n\n  return (\n    <>\n      <ul className=\"co-images-stream-tag-timeline\">\n        {timeline}\n        <div>\n          <span className=\"co-images-stream-tag-timeline__square-icon\">\n            <SquareIcon />\n          </span>\n        </div>\n      </ul>\n    </>\n  );\n};\n\ntype ImageStreamTimelineItemProps = {\n  tag: TagMeta;\n  imageStreamName: string;\n  imageStreamNamespace: string;\n  linkToTag: boolean;\n};\n\ntype TagMeta = {\n  created: string;\n  tag: string;\n  dockerImageReference: string;\n};\n\ntype ImageStreamTimelineProps = {\n  imageStreamTags: any[];\n  imageStreamName: string;\n  imageStreamNamespace: string;\n};\n","import { TFunction } from 'i18next';\nimport { HealthChecksProbeType, RequestType, HealthCheckFormProbe } from './health-checks-types';\n\nexport const getHealthChecksProbeConfig = (probe: string, t: TFunction) => {\n  switch (probe) {\n    case HealthChecksProbeType.ReadinessProbe: {\n      return {\n        formTitle: t('devconsole~Readiness probe'),\n        formSubtitle: t(\n          \"devconsole~A readiness probe checks if the Container is ready to handle requests. A failed readiness probe means that a Container should not receive any traffic from a proxy, even if it's running.\",\n        ),\n      };\n    }\n    case HealthChecksProbeType.LivenessProbe: {\n      return {\n        formTitle: t('devconsole~Liveness probe'),\n        formSubtitle: t(\n          'devconsole~A liveness probe checks if the Container is still running. If the liveness probe fails the Container is killed.',\n        ),\n      };\n    }\n    case HealthChecksProbeType.StartupProbe: {\n      return {\n        formTitle: t('devconsole~Startup probe'),\n        formSubtitle: t(\n          'devconsole~A startup probe checks if the application within the Container is started. If the startup probe fails the Container is killed.',\n        ),\n      };\n    }\n    default:\n      return undefined;\n  }\n};\n\nexport const healthChecksDefaultValues: HealthCheckFormProbe = {\n  showForm: false,\n  enabled: false,\n  modified: false,\n  data: {\n    failureThreshold: '3',\n    requestType: RequestType.HTTPGET,\n    httpGet: {\n      scheme: undefined,\n      path: '/',\n      port: '8080',\n      httpHeaders: [],\n    },\n    tcpSocket: {\n      port: '8080',\n    },\n    exec: { command: [''] },\n    initialDelaySeconds: '0',\n    periodSeconds: '10',\n    timeoutSeconds: '1',\n    successThreshold: '1',\n  },\n};\n\nexport const healthChecksProbeInitialData = {\n  readinessProbe: healthChecksDefaultValues,\n  livenessProbe: healthChecksDefaultValues,\n  startupProbe: healthChecksDefaultValues,\n};\n","import { getGroupVersionKindForModel } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks/useK8sWatchResource';\nimport { ConsoleOperatorConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { CONSOLE_OPERATOR_CONFIG_NAME } from '../../constants/resource';\n\nconst useConsoleOperatorConfig = <R extends K8sResourceKind>() => {\n  return useK8sWatchResource<R>({\n    groupVersionKind: getGroupVersionKindForModel(ConsoleOperatorConfigModel),\n    isList: false,\n    name: CONSOLE_OPERATOR_CONFIG_NAME,\n  });\n};\n\nexport default useConsoleOperatorConfig;\n","import { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/utils/fetch/console-fetch';\nimport { ConsoleOperatorConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, resourceURL } from '@console/internal/module/k8s';\nimport { CONSOLE_OPERATOR_CONFIG_NAME } from '../../constants/resource';\n\n/**\n * JSON Merge Patch instead of JSON patch to update also properties that doesn't exist yet.\n *\n * See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/#use-a-json-merge-patch-to-update-a-deployment\n */\nconst patchConsoleOperatorConfig = <R extends K8sResourceKind>(resource: R): Promise<R> => {\n  const url = resourceURL(ConsoleOperatorConfigModel, { name: CONSOLE_OPERATOR_CONFIG_NAME });\n  return consoleFetchJSON(url, 'PATCH', {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/merge-patch+json;charset=UTF-8',\n    },\n    body: JSON.stringify(resource),\n  });\n};\n\nexport default patchConsoleOperatorConfig;\n","import * as React from 'react';\nimport { FormProps } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\n\nexport type FormLayoutProps = Pick<FormProps, 'children' | 'isHorizontal' | 'isWidthLimited'>;\n\nconst FormLayout: React.FC<FormLayoutProps> = ({\n  children,\n  isHorizontal = false,\n  isWidthLimited = true,\n}) => {\n  return (\n    <div\n      className={css(\n        formStyles.form,\n        isHorizontal && formStyles.modifiers.horizontal,\n        isWidthLimited && formStyles.modifiers.limitWidth,\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default FormLayout;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nconst LoadError: React.FC<{ error?: Error }> = ({ error }) => {\n  const { t } = useTranslation();\n  if (!error) {\n    return null;\n  }\n  return (\n    <Alert variant=\"warning\" isInline title={t('console-shared~Could not load configuration.')}>\n      {error.message?.toString?.() || error.toString?.()}\n    </Alert>\n  );\n};\n\nexport default LoadError;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nexport type SaveStatusProps = {\n  status: 'pending' | 'in-progress' | 'successful' | 'error';\n  error?: Error;\n};\n\nexport const SaveStatus: React.FC<SaveStatusProps> = ({ status, error }) => {\n  const { t } = useTranslation();\n  if (status === 'successful') {\n    return (\n      <Alert\n        variant=\"success\"\n        data-test=\"success-alert\"\n        isInline\n        title={t('console-shared~Saved.')}\n      >\n        {t(\n          'console-shared~This config update requires a console rollout, this can take up to a minute and require a browser refresh.',\n        )}\n      </Alert>\n    );\n  }\n  if (status === 'error') {\n    return (\n      <Alert variant=\"danger\" isInline title={t('console-shared~Could not save configuration.')}>\n        {error?.message?.toString?.() || error?.toString?.()}\n      </Alert>\n    );\n  }\n  return null;\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { history } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  ProjectRequestModel,\n  SecretModel,\n  ServiceModel,\n  ServiceAccountModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  k8sCreate,\n  k8sGet,\n  K8sResourceKind,\n  k8sUpdate,\n  K8sVerb,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport {\n  createPipelineForImportFlow,\n  createPipelineRunForImportFlow,\n  updatePipelineForImportFlow,\n} from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '@console/pipelines-plugin/src/components/pipelines/const';\nimport { createTrigger } from '@console/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils';\nimport { setPipelineNotStarted } from '@console/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils';\nimport { createRepositoryResources } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport {\n  updateServiceAccount,\n  getSecretAnnotations,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { LimitsData } from '@console/shared/src/types';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BUILD_OUTPUT_IMAGESTREAM_URL } from '@console/shipwright-plugin/src/const';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { RUNTIME_LABEL } from '../../const';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  getTriggerAnnotation,\n  mergeData,\n  getTemplateLabels,\n  getRouteAnnotations,\n} from '../../utils/resource-label-utils';\nimport { createService, createRoute, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  GitImportFormData,\n  ProjectData,\n  GitReadableTypes,\n  Resources,\n  DevfileSuggestedResources,\n  UploadJarFormData,\n  RouteData,\n  ServerlessData,\n  DeploymentData,\n  BuildOptions,\n} from './import-types';\n\nexport const generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const createProject = (projectData: ProjectData): Promise<K8sResourceKind> => {\n  const project = {\n    metadata: {\n      name: projectData.name,\n    },\n    displayName: projectData.displayName,\n    description: projectData.description,\n  };\n\n  return k8sCreate(ProjectRequestModel, project);\n};\n\nexport const createOrUpdateImageStream = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStreamData: K8sResourceKind,\n  dryRun: boolean,\n  appResources: AppResources,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    labels: userLabels,\n    image: { tag: selectedTag },\n    labels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const repository = (formData as GitImportFormData).git?.url;\n  const ref = (formData as GitImportFormData).git?.ref;\n  const imageStreamList = appResources?.imageStream?.data?.filter(\n    (imgstr) => imgstr.metadata?.labels?.[NAME_LABEL] === (labels[NAME_LABEL] || name),\n  );\n  const imageStreamFilterData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamFilterData.length && imageStreamFilterData[0]) || {};\n  const imageStreamName = imageStreamData && imageStreamData.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...(repository && getGitAnnotations(repository, ref)),\n    ...getCommonAnnotations(),\n  };\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: {\n        ...defaultLabels,\n        ...userLabels,\n        [NAME_LABEL]: imgStreamName,\n      },\n      annotations: defaultAnnotations,\n    },\n  };\n  const imageStream = mergeData(originalImageStream, newImageStream);\n  if (verb === 'update') {\n    imageStream.metadata.name = originalImageStream.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ImageStreamModel, imageStream)\n    : k8sCreate(ImageStreamModel, newImageStream, dryRun ? dryRunOpt : {});\n};\n\nexport const createWebhookSecret = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStream: K8sResourceKind,\n  secretType: string,\n  dryRun: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    image: { tag: selectedTag },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n\n  const webhookSecret = {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: `${name}-${secretType}-webhook-secret`,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n    },\n    stringData: { WebHookSecretKey: generateSecret() },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreate(SecretModel, webhookSecret, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateShipwrightBuild = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalShipwrightBuild?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n) => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, strategy: buildStrategy, clusterBuildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamRepository = imageStream && imageStream.status?.dockerImageRepository;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  let shipwrightParamsObj = [];\n  // eslint-disable-next-line default-case\n  switch (buildStrategy) {\n    case BuildStrategyType.Docker:\n      shipwrightParamsObj = [\n        {\n          name: 'dockerfile',\n          value: dockerfilePath,\n        },\n      ];\n      break;\n    case BuildStrategyType.Source:\n      shipwrightParamsObj = [\n        {\n          name: 'builder-image',\n          value: `${imageStreamRepository}:${selectedTag}`,\n        },\n      ];\n      break;\n  }\n\n  const shipwrightBuildName =\n    verb === 'update' && !_.isEmpty(originalShipwrightBuild)\n      ? originalShipwrightBuild.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newShipwrightBuild = {\n    apiVersion: 'shipwright.io/v1beta1',\n    kind: 'Build',\n    metadata: {\n      name: generatedImageStreamName || shipwrightBuildName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: shipwrightBuildName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      source: {\n        type: 'Git',\n        git: {\n          url: repository,\n          revision: ref,\n          ...(secretName ? { cloneSecret: secretName } : {}),\n        },\n        contextDir,\n      },\n      env: [...customEnvs, ...buildEnvs],\n      strategy: {\n        name: clusterBuildStrategy,\n        kind: 'ClusterBuildStrategy',\n      },\n      paramValues: shipwrightParamsObj,\n      output: {\n        image: `${BUILD_OUTPUT_IMAGESTREAM_URL}/${namespace}/${\n          generatedImageStreamName || shipwrightBuildName\n        }:latest`,\n      },\n    },\n  };\n\n  const shipwrightBuild = mergeData(originalShipwrightBuild, newShipwrightBuild);\n  if (verb === 'update') {\n    shipwrightBuild.metadata.name = originalShipwrightBuild.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ShipwrightBuildModel, shipwrightBuild)\n    : k8sCreate(ShipwrightBuildModel, newShipwrightBuild, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, type: gitType, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, triggers, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n  let buildStrategyData;\n\n  let desiredContextDir = contextDir;\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  switch (buildStrategy) {\n    case 'Devfile':\n      buildStrategyData = originalBuildConfig?.spec?.strategy || {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      desiredContextDir = originalBuildConfig?.spec?.source?.contextDir || contextDir;\n      break;\n    case 'Docker':\n      buildStrategyData = {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      break;\n    default:\n      buildStrategyData = {\n        sourceStrategy: {\n          env: [...customEnvs, ...buildEnvs],\n          from: {\n            kind: 'ImageStreamTag',\n            name: `${imageStreamName}:${selectedTag}`,\n            namespace: imageStreamNamespace,\n          },\n        },\n      };\n      break;\n  }\n\n  const webhookTriggerData = {\n    type: GitReadableTypes[gitType],\n    [gitType]: {\n      secretReference: { name: `${name}-${gitType}-webhook-secret` },\n    },\n  };\n\n  const excludedGitTypesForTriggers = [GitProvider.UNSURE, GitProvider.GITEA];\n\n  const buildConfigName =\n    verb === 'update' && !_.isEmpty(originalBuildConfig)\n      ? originalBuildConfig.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: generatedImageStreamName || buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: buildConfigName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || buildConfigName}:latest`,\n        },\n      },\n      source: {\n        contextDir: desiredContextDir,\n        git: {\n          uri: repository,\n          ref,\n        },\n        ...(secretName ? { sourceSecret: { name: secretName } } : {}),\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n        ...(triggers.webhook && !excludedGitTypesForTriggers.includes(gitType)\n          ? [webhookTriggerData]\n          : []),\n        ...(triggers.image ? [{ type: 'ImageChange', imageChange: {} }] : []),\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n  if (verb === 'update') {\n    buildConfig.metadata.name = originalBuildConfig.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, newBuildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeployment = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const runtimeIcon = imageStream && imageStream.metadata.labels?.[RUNTIME_LABEL];\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag,\n    runtimeIcon,\n  });\n  const imageName = name;\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n  };\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const managePipelineResources = async (\n  formData: GitImportFormData,\n  pipelineData: PipelineKind,\n): Promise<K8sResourceKind[]> => {\n  const pipelineResources = [];\n  if (!formData) return Promise.resolve([]);\n  const { name, git, pipeline, project, docker, image, build, labels } = formData;\n  let managedPipeline: PipelineKind;\n  const pipelineName = pipelineData?.metadata?.name;\n\n  if (!_.isEmpty(pipelineData) && pipelineName === name) {\n    managedPipeline = await updatePipelineForImportFlow(\n      pipelineData,\n      pipeline.template,\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n  } else if (pipeline.template) {\n    managedPipeline = await createPipelineForImportFlow(\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      pipeline,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n    pipelineResources.push(managedPipeline);\n    try {\n      const triggerResources = await createTrigger(managedPipeline, git.detectedType);\n      pipelineResources.push(...triggerResources);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('Error occured while creating triggers', error);\n    }\n  }\n\n  if (git.secret) {\n    const secret = await k8sGet(SecretModel, git.secret, project.name);\n    const gitUrl = GitUrlParse(git.url);\n    secret.metadata.annotations = getSecretAnnotations(\n      {\n        key: 'git',\n        value:\n          gitUrl.protocol === 'ssh' ? gitUrl.resource : `${gitUrl.protocol}://${gitUrl.resource}`,\n      },\n      secret.metadata.annotations,\n    );\n    await k8sUpdate(SecretModel, secret, project.name);\n\n    const pipelineServiceAccount = await k8sGet(\n      ServiceAccountModel,\n      PIPELINE_SERVICE_ACCOUNT,\n      project.name,\n    );\n    if (_.find(pipelineServiceAccount.secrets, (s) => s.name === git.secret) === undefined) {\n      await updateServiceAccount(git.secret, pipelineServiceAccount, false);\n    }\n  }\n\n  if (_.has(managedPipeline?.metadata?.labels, 'app.kubernetes.io/instance')) {\n    try {\n      const pipelineRun = await createPipelineRunForImportFlow(managedPipeline);\n      pipelineResources.push(pipelineRun);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('Failed to create PipelineRun for import flow', error);\n      setPipelineNotStarted(managedPipeline.metadata.name, managedPipeline.metadata.namespace);\n    }\n  }\n  return Promise.all(pipelineResources);\n};\n\nexport const createDevfileResources = async (\n  formData: GitImportFormData,\n  dryRun: boolean,\n  appResources: AppResources,\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind[]> => {\n  const verb: K8sVerb = 'create';\n\n  const {\n    name,\n    project: { name: namespace },\n    devfile: { devfileSuggestedResources, devfileProjectType },\n  } = formData;\n\n  const devfileResourceObjects: DevfileSuggestedResources = Object.keys(\n    devfileSuggestedResources,\n  ).reduce((acc: DevfileSuggestedResources, resourceType: string) => {\n    const resource: K8sResourceKind = devfileSuggestedResources[resourceType];\n    if (!resource) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [resourceType]: {\n        ...resource,\n        metadata: {\n          ...resource.metadata,\n          annotations: {\n            ...resource.metadata?.annotations,\n            isFromDevfile: 'true',\n          },\n          name,\n          namespace,\n          labels: {\n            ...resource.metadata?.labels,\n            ...(devfileProjectType ? { [RUNTIME_LABEL]: devfileProjectType } : {}),\n          },\n        },\n      },\n    };\n  }, {} as DevfileSuggestedResources);\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    appResources,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.buildResource,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const webhookSecretResponse = await createWebhookSecret(\n    formData,\n    devfileResourceObjects.imageStream,\n    'generic',\n    dryRun,\n  );\n\n  const deploymentResponse = await createOrUpdateDeployment(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.deployResource,\n    verb,\n  );\n\n  const serviceModelResponse =\n    devfileResourceObjects.service &&\n    (await k8sCreate(\n      ServiceModel,\n      createService(formData, devfileResourceObjects.imageStream, devfileResourceObjects.service),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const routeResponse =\n    devfileResourceObjects.route &&\n    (await k8sCreate(\n      RouteModel,\n      createRoute(formData, devfileResourceObjects.imageStream, devfileResourceObjects.route),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const devfileResources = [\n    imageStreamResponse,\n    buildConfigResponse,\n    webhookSecretResponse,\n    deploymentResponse,\n  ];\n\n  serviceModelResponse && devfileResources.push(serviceModelResponse);\n  routeResponse && devfileResources.push(routeResponse);\n\n  return devfileResources;\n};\n\nexport const createOrUpdateResources = async (\n  t: TFunction,\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: {\n      strategy: buildStrategy,\n      triggers: { webhook: webhookTrigger },\n      option: buildOption,\n    },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    git: { url: repository, type: gitType, ref },\n    pipeline,\n    resources,\n  } = formData;\n  const imageStreamName = _.get(imageStream, 'metadata.name');\n  const originalRepository =\n    appResources?.buildConfig?.data?.spec?.source?.git?.uri ??\n    appResources?.pipeline?.data?.spec?.params?.find((param) => param?.name === 'GIT_REPO')\n      ?.default;\n  createNewProject && (await createProject(formData.project));\n\n  const responses: K8sResourceKind[] = [];\n  let generatedImageStreamName: string = '';\n  if (\n    resources === Resources.KnativeService &&\n    originalRepository &&\n    originalRepository !== repository\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  if (buildStrategy === BuildStrategyType.Devfile) {\n    if (verb !== 'create') {\n      throw new Error(t('devconsole~Cannot update Devfile resources'));\n    }\n    return createDevfileResources(formData, dryRun, appResources, generatedImageStreamName);\n  }\n\n  if (pipeline.type === PipelineType.PAC && formData?.pipeline?.enabled) {\n    const pacRepository = formData?.pac?.repository;\n    const labels = formData?.labels;\n    const repo = await createRepositoryResources(pacRepository, namespace, labels, dryRun);\n    responses.push(repo);\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  if (pipeline.enabled && pipeline.type !== PipelineType.PAC) {\n    if (!dryRun) {\n      const pipelineResources = await managePipelineResources(\n        formData,\n        appResources?.pipeline?.data,\n      );\n      responses.push(...pipelineResources);\n    }\n  } else if (buildOption === BuildOptions.BUILDS) {\n    responses.push(\n      await createOrUpdateBuildConfig(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.buildConfig?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    responses.push(\n      await createOrUpdateShipwrightBuild(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.shipwrightBuild?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  }\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n    if (webhookTrigger) {\n      responses.push(await createWebhookSecret(formData, imageStream, gitType, dryRun));\n    }\n  }\n\n  if (formData.resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          }\n        : {\n            ...originalAnnotations,\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    const knativeResources = await Promise.all([\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    ]);\n    return [...knativeResources, ...responses];\n  }\n\n  if (formData.resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  } else if (formData.resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  }\n\n  if (\n    !_.isEmpty(ports) ||\n    buildStrategy === BuildStrategyType.Docker ||\n    buildStrategy === BuildStrategyType.Source\n  ) {\n    const originalService = _.get(appResources, 'service.data');\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = _.get(appResources, 'route.data');\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n\nexport const filterDeployedResources = (resources: K8sResourceKind[]) =>\n  resources.filter(\n    (resource) =>\n      resource.kind === DeploymentModel.kind ||\n      resource.kind === DeploymentConfigModel.kind ||\n      (resource.kind === KnServiceModel.kind &&\n        resource.apiVersion === `${KnServiceModel.apiGroup}/${KnServiceModel.apiVersion}`),\n  );\n\nexport const addSearchParamsToRelativeURL = (\n  url: string,\n  searchParams?: URLSearchParams,\n): string => {\n  const urlObj = new URL(url, 'thismessage:/'); // ITEF RFC 2557 section 5 (e)\n\n  urlObj.search = new URLSearchParams({\n    ...Object.fromEntries(urlObj.searchParams),\n    ...(searchParams ? Object.fromEntries(searchParams) : {}),\n  }).toString();\n\n  return urlObj.toString().replace(urlObj.protocol, '');\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n  searchParamOverrides?: URLSearchParams,\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n\n  if (searchParamOverrides) {\n    history.push(addSearchParamsToRelativeURL(redirectURL, searchParamOverrides));\n  } else {\n    history.push(redirectURL);\n  }\n};\n\nexport const isRouteAdvOptionsUsed = (\n  type: string,\n  routeData: RouteData,\n  ksvcRouteData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && routeData) {\n    if (!!routeData.hostname || !!routeData.path || !routeData.secure) return true;\n    if (routeData?.tls) {\n      for (const tlsKey in routeData.tls) {\n        if (routeData.tls.hasOwnProperty(tlsKey)) {\n          if (\n            ['caCertificate', 'certificate', 'destinationCACertificate', 'key'].includes(tlsKey) &&\n            !!routeData.tls[tlsKey]\n          )\n            return true;\n          if (tlsKey === 'insecureEdgeTerminationPolicy' && routeData.tls[tlsKey] !== 'None')\n            return true;\n          if (tlsKey === 'termination' && routeData.tls[tlsKey] !== 'reencrypt') return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (ksvcRouteData.domainMapping?.length > 0) return true;\n  return false;\n};\n\nexport const isScalingAdvOptions = (\n  type: string,\n  scalingData: DeploymentData,\n  ksvcData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && scalingData?.replicas > 1) {\n    return true;\n  }\n  const ksvcScalingData = ksvcData?.scaling;\n  if (ksvcScalingData) {\n    for (const scKey in ksvcScalingData) {\n      if (ksvcScalingData.hasOwnProperty(scKey)) {\n        if (['concurrencylimit', 'maxpods', 'minpods'].includes(scKey) && !!ksvcScalingData[scKey])\n          return true;\n        if (\n          scKey === 'concurrencytarget' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencytarget\n        )\n          return true;\n        if (\n          scKey === 'concurrencyutilization' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencyutilization\n        )\n          return true;\n        if (scKey === 'autoscale' && ksvcScalingData[scKey]) {\n          const autoscaleData = ksvcScalingData[scKey];\n          for (const asKey in autoscaleData) {\n            if (autoscaleData.hasOwnProperty(asKey)) {\n              if (\n                asKey === 'autoscalewindow' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindow\n              )\n                return true;\n              if (\n                asKey === 'autoscalewindowUnit' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindowUnit\n              )\n                return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const isResourceLimitAdvOptions = (resLimits: LimitsData): boolean => {\n  const isLimitUsed = (resLimitObj) => {\n    for (const limitKey in resLimitObj) {\n      if (resLimitObj.hasOwnProperty(limitKey)) {\n        if (['limit', 'request'].includes(limitKey) && !!resLimitObj[limitKey]) return true;\n        if (limitKey === 'limitUnit' && resLimitObj[limitKey] !== resLimitObj.defaultLimitUnit)\n          return true;\n        if (limitKey === 'requestUnit' && resLimitObj[limitKey] !== resLimitObj.defaultRequestUnit)\n          return true;\n      }\n    }\n    return false;\n  };\n\n  if (isLimitUsed(resLimits.cpu) || isLimitUsed(resLimits.memory)) return true;\n  return false;\n};\n\nexport const getTelemetryImport = (values: GitImportFormData) => {\n  if (!values) return {};\n  // get devfile data if exists\n  let devfileJson;\n  if (values.devfile?.devfileContent) {\n    devfileJson = safeYAMLToJS(values.devfile.devfileContent);\n  }\n  const applicationType =\n    (!values.application?.selectedKey && values.application?.name) ||\n    values.application?.selectedKey === values.application?.name\n      ? 'default'\n      : values.application?.selectedKey === CREATE_APPLICATION_KEY && !!values.application?.name\n      ? 'custom'\n      : 'none';\n  const resourceType =\n    values.resources === Resources.Kubernetes\n      ? 'Deployment'\n      : values.resources === Resources.OpenShift\n      ? 'DeploymentConfig'\n      : values.resources === Resources.KnativeService && 'Knative Service';\n  const selStrategy = values.import?.selectedStrategy?.name;\n  const telemetryImportData = {\n    useRecommended: values.image?.recommended === values.image?.selected,\n    recommendedStrategy: values.import?.recommendedStrategy?.name,\n    recommendedBuilderImage: values.image?.recommended,\n    strategy: selStrategy,\n    builderImage: values.image?.selected,\n\n    devFileLanguage: devfileJson?.metadata?.projectType || '',\n    devFileProjectType: devfileJson?.metadata?.language || '',\n\n    application: applicationType,\n\n    resource: resourceType,\n\n    targetPortChanged: !!values.route?.unknownTargetPort,\n\n    // currently run command is being used only for Node app\n    useRunCommand: !!values.image?.imageEnv?.NPM_RUN,\n\n    useAdvancedOptionsGit: values.git.dir !== '/' || !!values.git.ref || !!values.git.secret,\n\n    useAdvancedOptionsBuild:\n      values.build?.env.length > 0 || _.some(values.build?.triggers, (key) => !key),\n    useAdvancedOptionsDeployment:\n      selStrategy !== 'Devfile' &&\n      (values.deployment?.env.length > 0 || !values.deployment?.triggers?.image),\n    useAdvancedOptionsRoute: isRouteAdvOptionsUsed(\n      values.resources,\n      values.route,\n      values.serverless,\n    ),\n    useAdvancedOptionsHealthChecks:\n      values.healthChecks?.livenessProbe?.enabled ||\n      values.healthChecks?.readinessProbe?.enabled ||\n      values.healthChecks?.startupProbe?.enabled,\n    useAdvancedOptionsScaling: isScalingAdvOptions(\n      values.resources,\n      values.deployment,\n      values.serverless,\n    ),\n    useAdvancedOptionsResourceLimits: isResourceLimitAdvOptions(values.limits),\n    useAdvancedOptionsLabels: !_.isEmpty(values.labels),\n  };\n\n  return telemetryImportData;\n};\n","import * as _ from 'lodash';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport {\n  NameValueFromPair,\n  NameValuePair,\n} from '@console/shared/src/components/formik-fields/field-types';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n  PIPELINE_STRATEGY_LABEL,\n} from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind, TektonParam, TektonWorkspace } from '../../../types';\nimport { VolumeTypes } from '../../pipelines/const';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getServerlessFunctionDefaultPersistentVolumeClaim,\n} from '../../pipelines/modals/common/utils';\nimport { submitStartPipeline } from '../../pipelines/modals/start-pipeline/submit-utils';\nimport { StartPipelineFormValues } from '../../pipelines/modals/start-pipeline/types';\nimport { createPipelineResource } from '../../pipelines/pipeline-resource/pipelineResource-utils';\nimport { PipelineData } from '../import-types';\n\nconst getImageUrl = (name: string, namespace: string) => {\n  return `image-registry.openshift-image-registry.svc:5000/${namespace}/${name}`;\n};\n\nexport const createGitResource = (url: string, namespace: string, ref: string = 'master') => {\n  const params = { url, revision: ref };\n  return createPipelineResource(params, 'git', namespace);\n};\n\nexport const createImageResource = (name: string, namespace: string) => {\n  const params = {\n    url: getImageUrl(name, namespace),\n  };\n\n  return createPipelineResource(params, 'image', namespace);\n};\n\nexport const getPipelineParams = (\n  params: TektonParam[],\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: any,\n) => {\n  return (params || []).map((param) => {\n    switch (param.name) {\n      case 'APP_NAME':\n        return { ...param, default: name };\n      case 'GIT_REPO':\n        return { ...param, default: gitUrl };\n      case 'GIT_REVISION':\n        return { ...param, default: gitRef || '' };\n      case 'PATH_CONTEXT':\n        return { ...param, default: gitDir.replace(/^\\//, '') || param.default };\n      case 'IMAGE_NAME':\n        return { ...param, default: getImageUrl(name, namespace) };\n      case 'DOCKERFILE':\n        return { ...param, default: dockerfilePath };\n      case 'VERSION':\n        return { ...param, default: tag || param.default };\n      case 'BUILD_ENVS':\n        return { ...param, default: buildEnv || param.default };\n      default:\n        return param;\n    }\n  });\n};\n\nexport const pipelineRuntimeOrVersionChanged = (\n  template: PipelineKind,\n  pipeline: PipelineKind,\n): boolean =>\n  template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_LABEL] ||\n  template.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL];\n\nexport const isDockerPipeline = (template: PipelineKind): boolean =>\n  template?.metadata?.labels?.[PIPELINE_STRATEGY_LABEL] === 'docker';\n\nexport const createPipelineForImportFlow = async (\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  pipeline: PipelineData,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n) => {\n  const template = _.cloneDeep(pipeline.template);\n\n  template.metadata = {\n    name: `${name}`,\n    namespace,\n    labels: {\n      ...template.metadata?.labels,\n      ...labels,\n      'app.kubernetes.io/instance': name,\n      'app.kubernetes.io/name': name,\n      ...(!isDockerPipeline(template) && {\n        [PIPELINE_RUNTIME_VERSION_LABEL]: tag,\n      }),\n    },\n  };\n\n  template.spec.params =\n    template.spec.params &&\n    getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n\n  return k8sCreate(PipelineModel, template, { ns: namespace });\n};\n\nexport const createPipelineRunForImportFlow = async (\n  pipeline: PipelineKind,\n): Promise<PipelineRunKind> => {\n  const isServerlessFunctionPipeline =\n    pipeline?.metadata?.labels?.['function.knative.dev'] === 'true';\n  const pipelineInitialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n      ...workspace,\n      type: VolumeTypes.VolumeClaimTemplate,\n      data: isServerlessFunctionPipeline\n        ? getServerlessFunctionDefaultPersistentVolumeClaim(pipeline?.metadata?.name)\n        : getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n    })),\n    secretOpen: false,\n  };\n  return submitStartPipeline(pipelineInitialValues, pipeline);\n};\nexport const updatePipelineForImportFlow = async (\n  pipeline: PipelineKind,\n  template: PipelineKind,\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n): Promise<PipelineKind> => {\n  let updatedPipeline = _.cloneDeep(pipeline);\n\n  if (!template) {\n    updatedPipeline.metadata.labels = _.omit(\n      { ...updatedPipeline.metadata.labels, ...labels },\n      'app.kubernetes.io/instance',\n    );\n  } else {\n    if (pipelineRuntimeOrVersionChanged(template, pipeline)) {\n      updatedPipeline = _.cloneDeep(template);\n      updatedPipeline.metadata = {\n        resourceVersion: pipeline.metadata.resourceVersion,\n        name: `${name}`,\n        namespace,\n        labels: {\n          ...template.metadata?.labels,\n          ...labels,\n          'app.kubernetes.io/instance': name,\n          'app.kubernetes.io/name': name,\n          ...(!isDockerPipeline(template) && { [PIPELINE_RUNTIME_VERSION_LABEL]: tag }),\n        },\n      };\n    }\n\n    updatedPipeline.spec.params = getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n  }\n  return k8sUpdate(PipelineModel, updatedPipeline, namespace, name);\n};\n","import * as _ from 'lodash';\nimport { getProbesData } from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport {\n  DeployImageFormData,\n  GitImportFormData,\n  UploadJarFormData,\n} from '@console/dev-console/src/components/import/import-types';\nimport { getAppLabels, mergeData } from '@console/dev-console/src/utils/resource-label-utils';\nimport { ImportStrategy } from '@console/git-service/src';\nimport {\n  K8sResourceKind,\n  ImagePullPolicy,\n  k8sGet,\n  k8sCreate,\n  k8sUpdate,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { NameValuePair } from 'packages/console-shared/src';\nimport { ServiceModel, DomainMappingModel } from '../models';\nimport { DomainMappingResponse, DomainMappingResponseAction } from '../types';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\nexport const getKnativeServiceDepResource = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamUrl: string,\n  imageStreamName?: string,\n  imageStreamTag?: string,\n  imageNamespace?: string,\n  annotations?: { [name: string]: string },\n  originalKnativeService?: K8sResourceKind,\n  generatedImageStreamName?: string,\n): K8sResourceKind => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    runtimeIcon,\n    serverless: { scaling },\n    limits,\n    route: { unknownTargetPort, create, defaultUnknownPort },\n    labels,\n    image: { tag: imageTag },\n    deployment: {\n      env,\n      triggers: { image: imagePolicy },\n    },\n    healthChecks,\n    resources,\n    formType,\n  } = formData;\n  const { fileUpload } = formData as UploadJarFormData;\n  const selectedStrategy = formData?.import?.selectedStrategy;\n\n  const contTargetPort = parseInt(unknownTargetPort, 10) || defaultUnknownPort;\n  const imgPullPolicy = imagePolicy ? ImagePullPolicy.Always : ImagePullPolicy.IfNotPresent;\n  const {\n    concurrencylimit,\n    concurrencytarget,\n    minpods,\n    maxpods,\n    autoscale: { autoscalewindow, autoscalewindowUnit },\n    concurrencyutilization,\n  } = scaling;\n  const {\n    cpu: {\n      request: cpuRequest,\n      requestUnit: cpuRequestUnit,\n      limit: cpuLimit,\n      limitUnit: cpuLimitUnit,\n    },\n    memory: {\n      request: memoryRequest,\n      requestUnit: memoryRequestUnit,\n      limit: memoryLimit,\n      limitUnit: memoryLimitUnit,\n    },\n  } = limits;\n  const defaultLabel = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag: imageStreamTag || imageTag,\n    namespace: imageNamespace,\n    runtimeIcon,\n  });\n  delete defaultLabel.app;\n  if (fileUpload) {\n    const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n    if (jArgsIndex !== -1) {\n      if (fileUpload.javaArgs !== '') {\n        (env[jArgsIndex] as NameValuePair).value = fileUpload.javaArgs;\n      } else {\n        env.splice(jArgsIndex, 1);\n      }\n    } else if (fileUpload.javaArgs !== '') {\n      env.push({ name: 'JAVA_ARGS', value: fileUpload.javaArgs });\n    }\n  }\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n        ...labels,\n        ...(formType === 'serverlessFunction' && { 'function.knative.dev': 'true' }),\n        ...(!create && { 'networking.knative.dev/visibility': `cluster-local` }),\n        ...(((formData as GitImportFormData).pipeline?.enabled || generatedImageStreamName) && {\n          'app.kubernetes.io/name': name,\n        }),\n        ...(selectedStrategy &&\n          selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION && {\n            'function.knative.dev': 'true',\n          }),\n      },\n      annotations: fileUpload ? { ...annotations, jarFileName: fileUpload.name } : annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: {\n            ...defaultLabel,\n            ...labels,\n            'app.kubernetes.io/name': generatedImageStreamName\n              ? formData.name\n              : labels['app.kubernetes.io/name'],\n          },\n          annotations: {\n            ...(concurrencytarget && {\n              'autoscaling.knative.dev/target': `${concurrencytarget}`,\n            }),\n            ...(minpods && { 'autoscaling.knative.dev/min-scale': `${minpods}` }),\n            ...(maxpods && { 'autoscaling.knative.dev/max-scale': `${maxpods}` }),\n            ...(autoscalewindow && {\n              'autoscaling.knative.dev/window': `${autoscalewindow}${autoscalewindowUnit}`,\n            }),\n            ...(concurrencyutilization && {\n              'autoscaling.knative.dev/target-utilization-percentage': `${concurrencyutilization}`,\n            }),\n          },\n        },\n        spec: {\n          ...(concurrencylimit && { containerConcurrency: concurrencylimit }),\n          containers: [\n            {\n              name,\n              image: `${imageStreamUrl}`,\n              ...(contTargetPort && {\n                ports: [\n                  {\n                    containerPort: contTargetPort,\n                  },\n                ],\n              }),\n              imagePullPolicy: imgPullPolicy,\n              securityContext: {\n                allowPrivilegeEscalation: false,\n                capabilities: {\n                  drop: ['ALL'],\n                },\n                runAsNonRoot: true,\n                seccompProfile: {\n                  type: 'RuntimeDefault',\n                },\n              },\n              env,\n              resources: {\n                ...((cpuLimit || memoryLimit) && {\n                  limits: {\n                    ...(cpuLimit && { cpu: `${cpuLimit}${cpuLimitUnit}` }),\n                    ...(memoryLimit && { memory: `${memoryLimit}${memoryLimitUnit}` }),\n                  },\n                }),\n                ...((cpuRequest || memoryRequest) && {\n                  requests: {\n                    ...(cpuRequest && { cpu: `${cpuRequest}${cpuRequestUnit}` }),\n                    ...(memoryRequest && { memory: `${memoryRequest}${memoryRequestUnit}` }),\n                  },\n                }),\n              },\n              ...getProbesData(healthChecks, resources),\n            },\n          ],\n        },\n      },\n    },\n  };\n  let knativeServiceUpdated = {};\n  if (!_.isEmpty(originalKnativeService)) {\n    knativeServiceUpdated = _.omit(originalKnativeService, [\n      'status',\n      'spec.template.metadata.name',\n      'spec.template.spec.containers',\n    ]);\n  }\n  const knativeDeployResource = mergeData(knativeServiceUpdated || {}, newKnativeDeployResource);\n\n  return knativeDeployResource;\n};\n\nconst getDomainMappingDeleteList = (\n  ksvcName: string,\n  allDomainMapping: K8sResourceKind[],\n  selDomainMappingNames: string[],\n): DomainMappingResponse[] => {\n  return allDomainMapping\n    .filter((dmRes) => dmRes.spec?.ref?.name === ksvcName)\n    .filter((dmSvc) => !selDomainMappingNames?.includes(dmSvc.metadata.name))\n    .map((dmDel) => ({\n      action: DomainMappingResponseAction.Delete,\n      resource: dmDel,\n    }));\n};\n\nconst formDomainMappingStruct = (\n  name: string,\n  knativeSvcResource: K8sResourceKind,\n  curDomainMapping?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    kind,\n    apiVersion,\n    metadata: { name: svcName, namespace },\n  } = knativeSvcResource;\n  return {\n    ...(curDomainMapping\n      ? { ...curDomainMapping }\n      : {\n          kind: DomainMappingModel.kind,\n          apiVersion: `${DomainMappingModel.apiGroup}/${DomainMappingModel.apiVersion}`,\n          metadata: {\n            name,\n            namespace,\n          },\n        }),\n    spec: {\n      ref: {\n        name: svcName,\n        kind,\n        apiVersion,\n      },\n    },\n  };\n};\n\nexport const getDomainMappingResources = (\n  knativeSvcResource: K8sResourceKind,\n  selectedDomainMapping: string[],\n): Promise<DomainMappingResponse[]> => {\n  const {\n    metadata: { name, namespace },\n  } = knativeSvcResource;\n  const domainMappingResources = [];\n  return k8sGet(DomainMappingModel, null, namespace)\n    .then((res) => {\n      const allDomainMappingList = res.items;\n      if (!selectedDomainMapping?.length && !allDomainMappingList?.length) {\n        return Promise.resolve([]);\n      }\n\n      // form domain mapping to be deleted\n      const dmDeleteList = getDomainMappingDeleteList(\n        name,\n        allDomainMappingList,\n        selectedDomainMapping,\n      );\n      domainMappingResources.push(...dmDeleteList);\n\n      // form domain mapping to be created or updated\n      const dmCreateUpdateList = selectedDomainMapping.map((domainName) => {\n        const curDomainMapping = allDomainMappingList.find(\n          (curDomain) => curDomain.metadata.name === domainName,\n        );\n        let domainMappingResourceData: DomainMappingResponse;\n        if (curDomainMapping) {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Update,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource, curDomainMapping),\n          };\n        } else {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Create,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource),\n          };\n        }\n        return domainMappingResourceData;\n      });\n      domainMappingResources.push(...dmCreateUpdateList);\n\n      return domainMappingResources;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to get domain mapping resources', err);\n      return domainMappingResources;\n    });\n};\n\nexport const getDomainMappingRequests = async (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  knativeSvcResource: K8sResourceKind,\n  dryRun: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const {\n    serverless: { domainMapping: selectedDomainMapping = [] },\n  } = formData;\n  const domainMappingResources = await getDomainMappingResources(knativeSvcResource, [\n    ...new Set(selectedDomainMapping.map((dm) => dm.replace(/ *\\([^)]*\\) */g, ''))),\n  ]);\n  const requests: Promise<K8sResourceKind>[] = [];\n  domainMappingResources.length &&\n    domainMappingResources.forEach(({ action, resource: dmRes }) => {\n      switch (action) {\n        case DomainMappingResponseAction.Create:\n          requests.push(k8sCreate(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Update:\n          requests.push(k8sUpdate(DomainMappingModel, dmRes, null, null, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Delete:\n          requests.push(k8sKill(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        default:\n          break;\n      }\n    });\n  return requests;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import * as _ from 'lodash';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  GitImportFormData,\n  DeployImageFormData,\n  UploadJarFormData,\n} from '../components/import/import-types';\nimport { makePortName } from './imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  mergeData,\n} from './resource-label-utils';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\n\nconst isDeployImageFormData = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n): formData is DeployImageFormData => {\n  return 'isi' in (formData as DeployImageFormData);\n};\n\nexport const createService = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalService?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    image: { ports: imagePorts, tag: selectedTag },\n    route: { unknownTargetPort, defaultUnknownPort },\n    resources,\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(resources, name);\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    ports = [port];\n  } else if (\n    buildStrategy === BuildStrategyType.Devfile &&\n    !_.isEmpty(originalService?.spec?.ports)\n  ) {\n    ports = [\n      ...originalService.spec.ports.map((port) => ({\n        name: port.name,\n        containerPort: port.port,\n        protocol: 'TCP',\n      })),\n    ];\n  } else if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  } else if (_.isEmpty(ports)) {\n    const port = { containerPort: defaultUnknownPort, protocol: 'TCP' };\n    ports = [port];\n  }\n  if (\n    unknownTargetPort &&\n    !ports.some((port) => unknownTargetPort === port.containerPort.toString())\n  ) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    const existingRouteTargetPort = originalRoute?.spec?.port?.targetPort;\n    ports = [...ports.filter((p) => p.containerPort !== defaultUnknownPort), port];\n\n    if (existingRouteTargetPort) {\n      ports = [...ports.filter((p) => p.containerPort !== existingRouteTargetPort), port];\n    }\n  }\n\n  const newService: any = {\n    kind: 'Service',\n    apiVersion: 'v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...defaultAnnotations },\n    },\n    spec: {\n      selector: podLabels,\n      ports: _.map(ports, (port) => ({\n        port: port.containerPort,\n        targetPort: port.containerPort,\n        protocol: port.protocol,\n        // Use the same naming convention as CLI new-app.\n        name: port.name || makePortName(port),\n      })),\n    },\n  };\n\n  const service = mergeData(originalService, newService);\n\n  return service;\n};\n\nexport const createRoute = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    route: {\n      hostname,\n      unknownTargetPort,\n      defaultUnknownPort,\n      secure,\n      path,\n      tls,\n      labels: routeLabels,\n    },\n    image: { ports: imagePorts, tag: selectedTag },\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  }\n\n  let targetPort: string;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    targetPort = makePortName({\n      containerPort: _.toInteger(unknownTargetPort),\n      protocol: 'TCP',\n    });\n  } else if (buildStrategy === BuildStrategyType.Devfile) {\n    targetPort = originalRoute?.spec?.port?.targetPort;\n  } else if (unknownTargetPort) {\n    targetPort = makePortName({ containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' });\n  } else {\n    targetPort = makePortName({\n      containerPort: ports[0]?.containerPort || defaultUnknownPort,\n      protocol: 'TCP',\n    });\n  }\n\n  const newRoute: any = {\n    kind: 'Route',\n    apiVersion: 'route.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, ...routeLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      to: {\n        kind: 'Service',\n        name,\n      },\n      tls: secure ? tls : null,\n      host: hostname,\n      path,\n      // The service created by `createService` uses the same port as the container port.\n      port: {\n        // Use the port name, not the number for targetPort. The router looks\n        // at endpoints, not services, when resolving ports, so port numbers\n        // will not resolve correctly if the service port and container port\n        // numbers don't match.\n        targetPort,\n      },\n      wildcardPolicy: 'None',\n    },\n  };\n\n  const route = mergeData(originalRoute, newRoute);\n\n  return route;\n};\n","export { useDebounceCallback } from '../../hooks/debounce';\n\nexport { default as useConsoleOperatorConfig } from './useConsoleOperatorConfig';\nexport { default as patchConsoleOperatorConfig } from './patchConsoleOperatorConfig';\nexport { default as FormLayout } from './FormLayout';\nexport { default as LoadError } from './LoadError';\nexport * from './SaveStatus';\nexport * from './path-utils';\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","import * as _ from 'lodash';\nimport { UserRoleBinding, RoleBinding } from './project-access-form-utils-types';\n\nexport const defaultAccessRoles = {\n  admin: 'Admin',\n  edit: 'Edit',\n  view: 'View',\n};\n\nexport type Roles = {\n  [key: string]: string;\n};\n\nexport const getAvailableAccessRoles = (): string[] | undefined => {\n  if (!window.SERVER_FLAGS.projectAccessClusterRoles) return undefined;\n  return JSON.parse(window.SERVER_FLAGS.projectAccessClusterRoles);\n};\n\nexport const getFormDataFromRoleBinding = (\n  user: RoleBinding,\n  namespace: string,\n): UserRoleBinding[] =>\n  user.subjects?.map((obj) => ({\n    roleBindingName: user.metadata.name,\n    subject: { ...obj, namespace: obj.kind !== 'ServiceAccount' ? namespace : obj.namespace },\n    role: user.roleRef.name,\n    subjects: user.subjects,\n  }));\n\nexport const getUserRoleBindings = (\n  roleBindings: RoleBinding[],\n  clusterRoleNames: string[],\n  namespace: string,\n): UserRoleBinding[] =>\n  roleBindings.reduce((acc, roleBinding: RoleBinding) => {\n    if (clusterRoleNames.includes(roleBinding.roleRef.name) && roleBinding.subjects?.length > 0) {\n      acc.push(...getFormDataFromRoleBinding(roleBinding, namespace));\n    }\n    return acc;\n  }, []);\n\nexport const ignoreRoleBindingName = (roleBinding: UserRoleBinding[]) => {\n  const res = roleBinding.map((obj) => ({\n    user: obj.subject?.name,\n    role: obj.role,\n    type: obj.subject?.kind,\n  }));\n  return _.sortBy(res, ['user']);\n};\n","import { K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport enum Verb {\n  Create = 'Create',\n  Remove = 'Remove',\n  Patch = 'Patch',\n}\n\nexport type SubjectType = {\n  apiGroup?: string;\n  kind: string;\n  name: string;\n  namespace?: string;\n};\n\nexport type UserRoleBinding = {\n  roleBindingName?: string;\n  role: string;\n  subject: SubjectType;\n  subjects: SubjectType[];\n};\n\nexport type RoleBinding = K8sResourceCommon & {\n  roleRef: SubjectType;\n  subjects?: SubjectType[];\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useProjectAccessRoles } from './hooks';\nimport ProjectAccess from './ProjectAccess';\n\nconst ProjectAccessPage: React.FC = (props) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const location = useLocation();\n  const namespace = params.ns;\n  const roles = useProjectAccessRoles();\n  const showFullForm = location.pathname.includes('project-access');\n  return (\n    <>\n      <Helmet>\n        <title>{t('devconsole~Project access')}</title>\n      </Helmet>\n      <Firehose\n        resources={[\n          {\n            namespace,\n            kind: 'RoleBinding',\n            prop: 'roleBindings',\n            isList: true,\n            optional: true,\n          },\n        ]}\n      >\n        <ProjectAccess fullFormView={showFullForm} namespace={namespace} roles={roles} {...props} />\n      </Firehose>\n    </>\n  );\n};\n\nexport default ProjectAccessPage;\n","import * as React from 'react';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ClusterRoleModel } from '@console/internal/models';\nimport { K8sResourceCommon, WatchK8sResource } from '@console/internal/module/k8s';\nimport { defaultAccessRoles, getAvailableAccessRoles, Roles } from './project-access-form-utils';\n\nexport type ClusterRoleKind = K8sResourceCommon & {\n  rules: { [key: string]: string[] }[];\n};\n\nexport const useProjectAccessRoles = (): { data: Roles; loaded: boolean } => {\n  const availableClusterRoles = getAvailableAccessRoles();\n\n  const watchedClusterRoles = React.useMemo<Record<string, WatchK8sResource>>(() => {\n    if (!availableClusterRoles || !availableClusterRoles.length) {\n      return {};\n    }\n    return availableClusterRoles.reduce((acc, role) => {\n      acc[role] = {\n        kind: ClusterRoleModel.kind,\n        name: role,\n      };\n      return acc;\n    }, {} as Record<string, WatchK8sResource>);\n  }, [availableClusterRoles]);\n\n  const clusterRoles = useK8sWatchResources<Record<string, ClusterRoleKind>>(watchedClusterRoles);\n\n  if (!availableClusterRoles || availableClusterRoles.length === 0) {\n    return { data: defaultAccessRoles, loaded: true };\n  }\n\n  const mappedRoles = availableClusterRoles.reduce((acc, role) => {\n    const clusterRole = clusterRoles[role];\n    if (clusterRole?.loadError?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `ClusterRole ${role} could not be found and will not be shown in project access options.`,\n      );\n    } else if (clusterRole?.loaded && clusterRole?.data) {\n      const label =\n        clusterRole.data.metadata?.annotations?.['console.openshift.io/display-name'] ||\n        clusterRole.data.metadata?.name ||\n        role;\n      acc[role] = label;\n    } else {\n      acc[role] = role;\n    }\n    return acc;\n  }, {} as Roles);\n\n  const allLoadedOrFailed = Object.values(clusterRoles).every(\n    (clusterRole) => clusterRole.loaded || clusterRole.loadError,\n  );\n\n  return { data: mappedRoles, loaded: allLoadedOrFailed };\n};\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport * as _ from 'lodash';\nimport Helmet from 'react-helmet';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  documentationURLs,\n  ExternalLink,\n  getDocumentationURL,\n  history,\n  isManaged,\n  LoadingBox,\n  PageHeading,\n  StatusBox,\n} from '@console/internal/components/utils';\nimport { RoleBindingModel, RoleModel } from '@console/internal/models';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport {\n  getNewRoles,\n  getRemovedRoles,\n  sendRoleBindingRequest,\n  getRolesWithMultipleSubjects,\n  getRolesToUpdate,\n} from './project-access-form-submit-utils';\nimport { getUserRoleBindings, Roles } from './project-access-form-utils';\nimport { Verb, UserRoleBinding } from './project-access-form-utils-types';\nimport { validationSchema } from './project-access-form-validation-utils';\nimport ProjectAccessForm from './ProjectAccessForm';\n\nexport interface ProjectAccessProps {\n  namespace: string;\n  roleBindings?: { data: []; loaded: boolean; loadError: {} };\n  roles: { data: Roles; loaded: boolean };\n  fullFormView?: boolean;\n}\n\nconst ProjectAccess: React.FC<ProjectAccessProps> = ({\n  namespace,\n  roleBindings,\n  roles,\n  fullFormView,\n}) => {\n  const { t } = useTranslation();\n  if ((!roleBindings.loaded && _.isEmpty(roleBindings.loadError)) || !roles.loaded) {\n    return <LoadingBox />;\n  }\n\n  const userRoleBindings: UserRoleBinding[] = getUserRoleBindings(\n    roleBindings.data,\n    Object.keys(roles.data),\n    namespace,\n  );\n\n  const rbacURL = getDocumentationURL(documentationURLs.usingRBAC);\n\n  const initialValues = {\n    projectAccess: roleBindings.loaded && userRoleBindings,\n  };\n\n  const handleSubmit = (values, actions) => {\n    let newRoles = getNewRoles(initialValues.projectAccess, values.projectAccess);\n    let removeRoles = getRemovedRoles(initialValues.projectAccess, values.projectAccess);\n    const updateRoles = getRolesToUpdate(newRoles, removeRoles);\n\n    const { updateRolesWithMultipleSubjects, removeRoleSubjectFlag } = getRolesWithMultipleSubjects(\n      newRoles,\n      removeRoles,\n      updateRoles,\n    );\n\n    if (updateRoles.length > 0) {\n      newRoles = newRoles.filter(\n        (o1) => !updateRoles.find((o2) => o1.roleBindingName === o2.roleBindingName),\n      );\n      removeRoles = removeRoles.filter(\n        (o1) => !updateRoles.find((o2) => o1.roleBindingName === o2.roleBindingName),\n      );\n    }\n    updateRoles.push(...updateRolesWithMultipleSubjects);\n    const roleBindingRequests = [];\n    if (updateRoles.length > 0) {\n      roleBindingRequests.push(\n        ...sendRoleBindingRequest(Verb.Patch, updateRoles, namespace, removeRoleSubjectFlag),\n      );\n    }\n    if (newRoles.length > 0) {\n      roleBindingRequests.push(\n        ...sendRoleBindingRequest(Verb.Create, newRoles, namespace, removeRoleSubjectFlag),\n      );\n    }\n    if (removeRoles.length > 0) {\n      roleBindingRequests.push(\n        ...sendRoleBindingRequest(Verb.Remove, removeRoles, namespace, removeRoleSubjectFlag),\n      );\n    }\n\n    return Promise.all(roleBindingRequests)\n      .then(() => {\n        actions.resetForm({\n          values: {\n            projectAccess: values.projectAccess,\n          },\n          status: { success: t('devconsole~Successfully updated the project access.') },\n        });\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  const handleReset = (values, actions) => {\n    actions.resetForm({ status: { success: null }, values: initialValues });\n  };\n\n  const projectAccessForm = (\n    <>\n      <PageHeading\n        title={fullFormView ? t('devconsole~Project access') : null}\n        data-test=\"project-access-page\"\n      >\n        <Trans t={t} ns=\"devconsole\">\n          {\n            \"Project access allows you to add or remove a user's access to the project. More advanced management of role-based access control appear in \"\n          }\n          <Link to={`/k8s/ns/${namespace}/${RoleModel.plural}`}>Roles</Link> and{' '}\n          <Link to={`/k8s/ns/${namespace}/${RoleBindingModel.plural}`}>Role Bindings</Link>.\n        </Trans>\n        {!isManaged() && (\n          <Trans t={t} ns=\"devconsole\">\n            {' '}\n            For more information, see the{' '}\n            <ExternalLink href={rbacURL}>role-based access control documentation</ExternalLink>.\n          </Trans>\n        )}\n      </PageHeading>\n      {roleBindings.loadError ? (\n        <StatusBox loaded={roleBindings.loaded} loadError={roleBindings.loadError} />\n      ) : (\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n          validationSchema={validationSchema}\n        >\n          {(formikProps) => (\n            <ProjectAccessForm\n              {...formikProps}\n              roles={roles.data}\n              roleBindings={initialValues}\n              onCancel={fullFormView ? history.goBack : null}\n            />\n          )}\n        </Formik>\n      )}\n    </>\n  );\n\n  return fullFormView ? (\n    <NamespacedPage hideApplications variant={NamespacedPageVariants.light} disabled>\n      <Helmet>\n        <title>{t('devconsole~Project access')}</title>\n      </Helmet>\n      {projectAccessForm}\n    </NamespacedPage>\n  ) : (\n    projectAccessForm\n  );\n};\n\nexport default ProjectAccess;\n","import * as _ from 'lodash';\nimport {\n  k8sCreateResource,\n  k8sDeleteResource,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { RoleBindingModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { generateSecret } from '../import/import-submit-utils';\nimport { Verb, UserRoleBinding, RoleBinding, SubjectType } from './project-access-form-utils-types';\n\nexport const getRolesWithNameChange = (\n  newRoles: UserRoleBinding[],\n  removeRoles: UserRoleBinding[],\n): UserRoleBinding[] => {\n  const createRoles = _.filter(newRoles, 'roleBindingName');\n  const deleteRoles = _.filter(removeRoles, (o1) =>\n    createRoles.find((o2) => o1.roleBindingName === o2.roleBindingName),\n  );\n  const rolesWithNameChange = _.filter(createRoles, (o1) =>\n    deleteRoles.find(\n      (o2) =>\n        o1.roleBindingName === o2.roleBindingName &&\n        o1.subject.name !== o2.subject.name &&\n        o1.role === o2.role,\n    ),\n  );\n  return rolesWithNameChange;\n};\n\nexport const getRolesWithSubjectChange = (\n  newRoles: UserRoleBinding[],\n  removeRoles: UserRoleBinding[],\n): UserRoleBinding[] => {\n  const createRoles = _.filter(newRoles, 'roleBindingName');\n  const deleteRoles = _.filter(removeRoles, (o1) =>\n    createRoles.find((o2) => o1.roleBindingName === o2.roleBindingName),\n  );\n  const rolesWithSubjectChange = _.filter(createRoles, (o1) =>\n    deleteRoles.find(\n      (o2) =>\n        o1.roleBindingName === o2.roleBindingName &&\n        (o1.subject.kind !== o2.subject.kind || o1.subject.namespace !== o2.subject.namespace) &&\n        o1.role === o2.role,\n    ),\n  );\n  return rolesWithSubjectChange;\n};\n\nexport const getRolesToUpdate = (newRoles: UserRoleBinding[], removeRoles: UserRoleBinding[]) => {\n  return [\n    ...getRolesWithSubjectChange(newRoles, removeRoles),\n    ...getRolesWithNameChange(newRoles, removeRoles),\n  ];\n};\n\nexport const sendK8sRequest = (\n  verb: string,\n  roleBinding: RoleBinding,\n): Promise<K8sResourceKind> => {\n  switch (verb) {\n    case Verb.Create:\n      return k8sCreateResource({ model: RoleBindingModel, data: roleBinding });\n    case Verb.Remove:\n      return k8sDeleteResource({ model: RoleBindingModel, resource: roleBinding });\n    case Verb.Patch:\n      return k8sPatchResource({\n        model: RoleBindingModel,\n        resource: roleBinding,\n        data: [{ op: 'replace', path: `/subjects`, value: roleBinding.subjects }],\n      });\n    default:\n      return null;\n  }\n};\n\nexport const generateRoleBindingName = (username: string, role: string): string => {\n  return `${username}-${role}-${generateSecret()}`;\n};\n\nexport const getNewRoles = (\n  initialRoles: UserRoleBinding[],\n  formValues: UserRoleBinding[],\n): UserRoleBinding[] => {\n  const newRoles = _.uniqBy(\n    _.filter(\n      formValues,\n      (o1) =>\n        !initialRoles.find(\n          (o2) =>\n            o1.subject.name === o2.subject.name &&\n            o1.subject.kind === o2.subject.kind &&\n            o1.role === o2.role &&\n            o1.subject.namespace === o2.subject.namespace,\n        ),\n    ),\n    (user) => JSON.stringify([user.subject.name, user.subject.kind, user.role]),\n  );\n  return newRoles;\n};\n\nexport const getRemovedRoles = (\n  initialRoles: UserRoleBinding[],\n  formValues: UserRoleBinding[],\n): UserRoleBinding[] => {\n  const removeRoles = _.filter(\n    initialRoles,\n    (o1) =>\n      !formValues.find(\n        (o2: UserRoleBinding) =>\n          o1.subject.name === o2.subject.name &&\n          o1.subject.kind === o2.subject.kind &&\n          o1.role === o2.role &&\n          o1.subject.namespace === o2.subject.namespace &&\n          o1.roleBindingName === o2.roleBindingName,\n      ),\n  );\n  return removeRoles;\n};\n\nexport const getUpdatedSubjects = (subjects: SubjectType[]) => {\n  return subjects.map((sub) => {\n    if (sub.kind === 'ServiceAccount') {\n      delete sub.apiGroup;\n      return sub;\n    }\n\n    delete sub.namespace;\n    return sub;\n  });\n};\n\nexport const sendRoleBindingRequest = (\n  verb: string,\n  roles: UserRoleBinding[],\n  namespace: string,\n  removeRoleSubjectFlag: number,\n) => {\n  const finalArray: Promise<K8sResourceKind>[] = [];\n  _.forEach(roles, (user) => {\n    const roleBindingName =\n      verb === Verb.Create\n        ? generateRoleBindingName(user.subject.name, user.role)\n        : user.roleBindingName;\n    const subjects =\n      verb === Verb.Create || verb === Verb.Remove\n        ? [\n            {\n              ...(user.subject.kind === 'ServiceAccount'\n                ? user.subject.namespace\n                  ? { namespace: user.subject.namespace }\n                  : {}\n                : { apiGroup: 'rbac.authorization.k8s.io' }),\n              kind: user.subject.kind,\n              name: user.subject.name,\n            },\n          ]\n        : removeRoleSubjectFlag === 1 && user.subjects.length > 0\n        ? getUpdatedSubjects(user.subjects)\n        : user.subjects.length > 1\n        ? getUpdatedSubjects(user.subjects)\n        : getUpdatedSubjects([user.subject]);\n    const roleBinding: RoleBinding = {\n      apiVersion: 'rbac.authorization.k8s.io/v1',\n      kind: 'RoleBinding',\n      metadata: {\n        name: roleBindingName,\n        namespace,\n      },\n      roleRef: {\n        apiGroup: 'rbac.authorization.k8s.io',\n        kind: 'ClusterRole',\n        name: user.role,\n      },\n      subjects,\n    };\n    finalArray.push(sendK8sRequest(verb, roleBinding));\n  });\n  return finalArray;\n};\n\nexport const getRolesWithMultipleSubjects = (\n  newRoles: UserRoleBinding[],\n  removeRoles: UserRoleBinding[],\n  updateRoles: UserRoleBinding[],\n) => {\n  let removeRoleSubjectFlag = 0;\n  const updateRolesWithMultipleSubjects: UserRoleBinding[] = [];\n  _.remove(\n    newRoles,\n    (newRole) =>\n      newRole.subjects?.length > 1 &&\n      removeRoles.find(\n        (role) => role.roleBindingName === newRole.roleBindingName && role.role === newRole.role,\n      ),\n  );\n\n  _.remove(removeRoles, (removeRole) => {\n    if (removeRole.subjects.length > 1) {\n      const roleWithMultipleSubjects = updateRolesWithMultipleSubjects.find(\n        (r) => r.roleBindingName === removeRole.roleBindingName,\n      );\n      if (roleWithMultipleSubjects) {\n        const newSubs = roleWithMultipleSubjects.subjects.filter(\n          (sub) => sub.name !== removeRole.subject.name,\n        );\n        roleWithMultipleSubjects.subjects = newSubs;\n      } else {\n        const newSubs = removeRole.subjects.filter((sub) => sub.name !== removeRole.subject.name);\n        updateRolesWithMultipleSubjects.push({ ...removeRole, subjects: newSubs });\n        removeRoleSubjectFlag = 1;\n      }\n      return true;\n    }\n    return false;\n  });\n\n  _.remove(updateRoles, (updateRole) => {\n    if (updateRole.subjects.length > 1) {\n      const roleWithMultipleSubjects = updateRolesWithMultipleSubjects.find(\n        (r) => r.roleBindingName === updateRole.roleBindingName,\n      );\n      roleWithMultipleSubjects.subjects.push(updateRole.subject);\n      return true;\n    }\n    return false;\n  });\n  return { updateRolesWithMultipleSubjects, removeRoleSubjectFlag };\n};\n","import * as yup from 'yup';\nimport i18n from '@console/internal/i18n';\n\nexport const validationSchema = yup.object().shape({\n  projectAccess: yup.array().of(\n    yup.object().shape({\n      subject: yup.object().shape({\n        name: yup.string().required(i18n.t('devconsole~Required')),\n        kind: yup.string().required(i18n.t('devconsole~Required')),\n      }),\n      role: yup.string().required(i18n.t('devconsole~Required')),\n    }),\n  ),\n});\n","import * as React from 'react';\nimport { Form, TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  MultiColumnField,\n  InputField,\n  DropdownField,\n  FormFooter,\n  NSDropdownField,\n} from '@console/shared';\nimport { Roles, ignoreRoleBindingName } from './project-access-form-utils';\nimport { UserRoleBinding } from './project-access-form-utils-types';\nimport './ProjectAccessForm.scss';\n\ntype ProjectAccessFormProps = FormikProps<FormikValues> & {\n  roles: Roles;\n  roleBindings: { projectAccess: UserRoleBinding[] };\n  onCancel?: () => void;\n};\n\ntype SubjectNamespaceDropdownProps = {\n  name?: string;\n  values: FormikValues;\n};\n\nexport const SubjectNamespaceDropdown: React.FC<SubjectNamespaceDropdownProps> = ({\n  name,\n  values,\n}) => {\n  const { t } = useTranslation();\n  const arr = name.split('.');\n  const showDropdown =\n    arr.length > 2 && values?.projectAccess?.[arr?.[1]]?.subject?.kind === 'ServiceAccount';\n  return (\n    <div>\n      <DropdownField\n        name={`${name}.kind`}\n        title={t('devconsole~Select a type')}\n        items={{ Group: 'Group', ServiceAccount: 'ServiceAccount', User: 'User' }}\n        fullWidth\n        className=\"odc-project-access-form__subject-kind-dropdown\"\n      />\n      {showDropdown && <NSDropdownField name={`${name}.namespace`} fullWidth />}\n    </div>\n  );\n};\n\nconst ProjectAccessForm: React.FC<ProjectAccessFormProps> = ({\n  handleSubmit,\n  handleReset,\n  isSubmitting,\n  status,\n  errors,\n  dirty,\n  roles,\n  roleBindings,\n  values,\n  onCancel,\n}) => {\n  const { t } = useTranslation();\n  const [isStaleInfo, setIsStaleInfo] = React.useState<boolean>(false);\n  const disableSubmit = !dirty || !_.isEmpty(errors) || isSubmitting;\n\n  React.useEffect(() => {\n    !_.isEqual(\n      ignoreRoleBindingName(roleBindings.projectAccess),\n      ignoreRoleBindingName(values.projectAccess),\n    )\n      ? setIsStaleInfo(true)\n      : setIsStaleInfo(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roleBindings]);\n\n  const onReload = () => {\n    handleReset();\n    setIsStaleInfo(false);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"co-m-pane__body odc-project-access-form__body\">\n        <div className=\"co-m-pane__form\">\n          <MultiColumnField\n            name=\"projectAccess\"\n            addLabel={t('devconsole~Add access')}\n            headers={[t('devconsole~Subject'), t('devconsole~Name'), t('devconsole~Role')]}\n            emptyValues={{ name: '', role: '' }}\n          >\n            <SubjectNamespaceDropdown name=\"subject\" values={values} />\n            <InputField\n              name=\"subject.name\"\n              type={TextInputTypes.text}\n              placeholder={t('devconsole~Name')}\n            />\n            <DropdownField\n              dataTest=\"role-dropdown\"\n              name=\"role\"\n              title={t('devconsole~Select a role')}\n              items={roles}\n              fullWidth\n            />\n          </MultiColumnField>\n        </div>\n      </div>\n      <FormFooter\n        handleReset={onReload}\n        isSubmitting={isSubmitting}\n        errorMessage={status?.submitError}\n        successMessage={!dirty && status?.success}\n        disableSubmit={isStaleInfo || disableSubmit}\n        showAlert={isStaleInfo || !disableSubmit}\n        submitLabel={t('devconsole~Save')}\n        resetLabel={t('devconsole~Reload')}\n        infoTitle={isStaleInfo && t('devconsole~This list has been updated.')}\n        infoMessage={isStaleInfo && t('devconsole~Click reload to see the new list.')}\n        handleCancel={onCancel}\n      />\n    </Form>\n  );\n};\n\nexport default ProjectAccessForm;\n","import * as React from 'react';\nimport { DualListSelector, FormSection } from '@patternfly/react-core';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport {\n  getGroupVersionKindForModel,\n  K8sResourceCommon,\n  ResourceIcon,\n} from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks/useK8sWatchResource';\nimport { ClusterRoleModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useTelemetry } from '@console/shared/src';\nimport {\n  useDebounceCallback,\n  useConsoleOperatorConfig,\n  patchConsoleOperatorConfig,\n  LoadError,\n  SaveStatus,\n  SaveStatusProps,\n} from '@console/shared/src/components/cluster-configuration';\n\nconst defaultClusterRoleNames = ['admin', 'edit', 'view'];\n\ntype DeveloperCatalogClusterRolesConfig = K8sResourceKind & {\n  spec: {\n    customization?: {\n      projectAccess?: {\n        availableClusterRoles?: string[];\n      };\n    };\n  };\n};\n\ntype ItemProps = { name: string; clusterRole?: K8sResourceCommon };\n\nconst getDisplayName = (clusterRole?: K8sResourceCommon, name?: string) =>\n  clusterRole?.metadata.annotations?.['console.openshift.io/display-name'] ||\n  clusterRole?.metadata.name ||\n  name;\n\nconst Item: React.FC<ItemProps> = ({ name, clusterRole }) => (\n  <div style={{ display: 'flex', alignItems: 'center' }}>\n    {clusterRole ? (\n      <ResourceIcon groupVersionKind={getGroupVersionKindForModel(ClusterRoleModel)} />\n    ) : null}\n    <div>{getDisplayName(clusterRole, name)}</div>\n  </div>\n);\n\nconst ProjectAccessRolesConfiguration: React.FC<{ readonly: boolean }> = ({ readonly }) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n\n  // Available cluster roles\n  const [allClusterRoles, allClusterRolesLoaded, allClusterRolesError] = useK8sWatchResource<\n    K8sResourceCommon[]\n  >({\n    groupVersionKind: getGroupVersionKindForModel(ClusterRoleModel),\n    isList: true,\n  });\n  const sortedClusterRoles = React.useMemo(() => {\n    const clusterRoles = allClusterRoles ? [...allClusterRoles] : [];\n    clusterRoles.sort((clusterRoleA, clusterRoleB) => {\n      const displayNameA = getDisplayName(clusterRoleA);\n      const displayNameB = getDisplayName(clusterRoleB);\n      return displayNameA.localeCompare(displayNameB);\n    });\n    return clusterRoles;\n  }, [allClusterRoles]);\n\n  // Current configuration\n  const [consoleConfig, consoleConfigLoaded, consoleConfigError] = useConsoleOperatorConfig<\n    DeveloperCatalogClusterRolesConfig\n  >();\n  const [selectedClusterRoles, setSelectedClusterRoles] = React.useState<string[]>();\n  React.useEffect(() => {\n    if (consoleConfig && consoleConfigLoaded && !selectedClusterRoles) {\n      setSelectedClusterRoles(\n        consoleConfig?.spec?.customization?.projectAccess?.availableClusterRoles || [],\n      );\n    }\n  }, [selectedClusterRoles, consoleConfig, consoleConfigLoaded]);\n\n  // Calculate options\n  const availableOptions = React.useMemo<React.ReactElement<ItemProps>[]>(() => {\n    if (\n      !consoleConfigLoaded ||\n      !allClusterRolesLoaded ||\n      allClusterRolesError ||\n      !selectedClusterRoles\n    ) {\n      return [];\n    }\n    const hideClusterRoleNames =\n      selectedClusterRoles.length === 0 ? defaultClusterRoleNames : selectedClusterRoles;\n    return sortedClusterRoles\n      .filter((clusterRole) => !hideClusterRoleNames.includes(clusterRole.metadata.name))\n      .map((clusterRole) => (\n        <Item\n          key={clusterRole.metadata.name}\n          name={clusterRole.metadata.name}\n          clusterRole={clusterRole}\n        />\n      ));\n  }, [\n    sortedClusterRoles,\n    allClusterRolesError,\n    allClusterRolesLoaded,\n    selectedClusterRoles,\n    consoleConfigLoaded,\n  ]);\n  const chosenOptions = React.useMemo<React.ReactElement<ItemProps>[]>(() => {\n    if (!selectedClusterRoles) {\n      return [];\n    }\n    const allClusterRolesByName = allClusterRoles.reduce<Record<string, K8sResourceCommon>>(\n      (acc, clusterRole) => {\n        acc[clusterRole.metadata.name] = clusterRole;\n        return acc;\n      },\n      {},\n    );\n    const clusterRoleNames =\n      selectedClusterRoles.length === 0 ? defaultClusterRoleNames : selectedClusterRoles;\n    return clusterRoleNames.map((name) => (\n      <Item key={name} name={name} clusterRole={allClusterRolesByName[name]} />\n    ));\n  }, [allClusterRoles, selectedClusterRoles]);\n\n  // Save the latest value (disabled string array)\n  const [saveStatus, setSaveStatus] = React.useState<SaveStatusProps>();\n  const save = useDebounceCallback(() => {\n    fireTelemetryEvent('Console cluster configuration changed', {\n      customize: 'Project Access cluster roles',\n      roles: selectedClusterRoles?.length > 0 ? selectedClusterRoles : null,\n    });\n    setSaveStatus({ status: 'in-progress' });\n\n    const patch: DeveloperCatalogClusterRolesConfig = {\n      spec: {\n        customization: {\n          projectAccess: {\n            availableClusterRoles: selectedClusterRoles?.length > 0 ? selectedClusterRoles : null,\n          },\n        },\n      },\n    };\n    patchConsoleOperatorConfig(patch)\n      .then(() => setSaveStatus({ status: 'successful' }))\n      .catch((error) => setSaveStatus({ status: 'error', error }));\n  }, 2000);\n\n  // Extract disabled string array from Items\n  const onListChange = (\n    _event,\n    newEnabledOptions: React.ReactElement<ItemProps>[],\n    newDisabledOptions: React.ReactElement<ItemProps>[],\n  ) => {\n    setSelectedClusterRoles(newDisabledOptions.map((node) => node.props.name));\n    setSaveStatus({ status: 'pending' });\n    save();\n  };\n\n  const filterOption = (option: React.ReactElement<ItemProps>, input: string): boolean => {\n    const displayName = getDisplayName(option.props.clusterRole, option.props.name);\n    return fuzzy(input.toLocaleLowerCase(), displayName.toLocaleLowerCase());\n  };\n\n  return (\n    <FormSection\n      title={t('devconsole~Project access')}\n      data-test=\"project-access-roles form-section\"\n    >\n      <DualListSelector\n        availableOptionsTitle={t('devconsole~Available Cluster Roles')}\n        chosenOptionsTitle={t('devconsole~Chosen Cluster Roles')}\n        isSearchable\n        availableOptions={availableOptions}\n        chosenOptions={chosenOptions}\n        onListChange={onListChange}\n        filterOption={filterOption}\n        isDisabled={\n          readonly || !allClusterRolesLoaded || !consoleConfigLoaded || consoleConfigError\n        }\n      />\n\n      <LoadError error={consoleConfigError} />\n      <SaveStatus {...saveStatus} />\n    </FormSection>\n  );\n};\n\nexport default ProjectAccessRolesConfiguration;\n"],"sourceRoot":""}