{"version":3,"sources":["webpack:///./public/components/resource-quota.jsx","webpack:///./public/components/namespace.jsx","webpack:///./packages/console-shared/src/components/dashboard/inventory-card/utils.ts","webpack:///./packages/topology/src/components/workload/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/topology/src/actions/provider.ts","webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./public/components/replicaset.jsx","webpack:///./public/components/daemon-set.tsx","webpack:///./public/components/deployment.tsx","webpack:///./packages/console-app/src/components/file-upload/file-upload-context.ts","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringTab.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard-context.tsx","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./public/components/dashboard/with-dashboard-resources.tsx","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/console-app/src/components/resource-quota/utils.ts","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarTabSection.tsx","webpack:///./packages/topology/src/topology-types.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/Decorator.tsx","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/filters/index.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/BaseEdge.tsx","webpack:///./packages/topology/src/components/workload/utils.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/topology/src/filters/const.ts","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utils.ts","webpack:///./packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/health-item.tsx","webpack:///./packages/topology/src/actions/edgeActions.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/console-shared/src/promql/project-dashboard.ts","webpack:///./packages/console-shared/src/promql/cluster-dashboard.ts","webpack:///./packages/console-app/src/components/resource-quota/ResourceQuotaCharts.tsx","webpack:///./packages/console-app/src/components/resource-quota/AppliedClusterResourceQuotaCharts.tsx","webpack:///./public/components/graphs/donut.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/QuotaSummary.tsx","webpack:///./packages/topology/src/actions/modify-application.ts","webpack:///./packages/topology/src/filters/filter-utils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/topology/src/actions/contextMenuActions.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/BaseNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecoratorBubble.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNode.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./packages/topology/src/components/graph-view/components/index.ts","webpack:///./packages/topology/src/components/graph-view/components/componentUtils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodeContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/index.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/index.ts","webpack:///./packages/topology/src/filters/useDisplayFilters.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNodeAnchor.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/ResourceKindsInfo.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/PodSet.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./packages/topology/src/elements/OdcBaseEdge.ts","webpack:///./packages/topology/src/components/graph-view/index.ts","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/context.ts","webpack:///./packages/topology/src/filters/FilterProvider.tsx","webpack:///./packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/status-card.tsx","webpack:///./packages/dev-console/src/components/projects/CreateProjectListPage.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","webpack:///./public/components/graphs/gauge.tsx","webpack:///./packages/topology/src/actions/index.ts","webpack:///./packages/topology/src/filters/useShowLabel.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/nodeUtils.ts","webpack:///./packages/topology/src/components/workload/CronJobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DaemonSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentConfigSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/JobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/pods-tab-section.tsx","webpack:///./packages/topology/src/components/workload/ResolveAdapter.ts","webpack:///./packages/topology/src/components/workload/StatefulSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/workload-resource-link.tsx","webpack:///./packages/topology/src/components/workload/build-tab-section.tsx","webpack:///./packages/topology/src/components/workload/network-tab-section.tsx","webpack:///./packages/topology/src/components/workload/jobs-tab-section.tsx","webpack:///./packages/topology/src/components/workload/PodSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/resource-alert.tsx","webpack:///./packages/topology/src/components/workload/vpa-tab-section.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/EditDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/MonitoringAlertsDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/UrlDecorator.tsx","webpack:///./public/components/dashboard/project-dashboard/project-dashboard.tsx","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-ref.js","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.tsx","webpack:///./public/components/overview/index.tsx","webpack:///./public/components/dashboard/project-dashboard/details-card.tsx","webpack:///./public/components/dashboard/project-dashboard/status-card.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-card.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/inventory-card.tsx","webpack:///./public/components/dashboard/project-dashboard/activity-card.tsx","webpack:///./public/components/dashboard/project-dashboard/launcher-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherItem.tsx","webpack:///./public/components/dashboard/project-dashboard/resource-quota-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem.tsx","webpack:///./packages/console-app/src/components/resource-quota/ClusterResourceQuotaCharts.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem.tsx","webpack:///./packages/topology/src/actions/nodeActions.ts","webpack:///./packages/topology/src/behavior/useHover.ts","webpack:///./packages/topology/src/behavior/withCreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/componentFactory.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/AggregateEdge.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ConnectsTo.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/CreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ServiceBinding.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/TrafficConnector.tsx","webpack:///./packages/topology/src/filters/useAppliedDisplayFilters.ts","webpack:///./packages/topology/src/filters/useSearchFilter.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/Application.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/WorkloadNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/index.ts","webpack:///./packages/topology/src/components/graph-view/components/NodeShadows.tsx","webpack:///./packages/topology/src/components/graph-view/Topology.tsx","webpack:///./packages/topology/src/elements/odcElementFactory.ts","webpack:///./packages/dev-console/src/components/import/render-utils.tsx","webpack:///./packages/dev-console/src/components/import/CheIcon.tsx","webpack:///./packages/topology/src/components/modals/MoveConnectionModal.tsx","webpack:///./packages/topology/src/components/modals/index.ts","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx","webpack:///./packages/topology/src/elements/index.ts","webpack:///./packages/topology/src/redux/action.ts","webpack:///./packages/knative-plugin/src/utils/usePodsForRevisions.ts","webpack:///./packages/console-shared/src/components/pod/PodsOverview.tsx","webpack:///./packages/topology/src/components/workload/BuildOverview.tsx","webpack:///./packages/topology/src/components/workload/NetworkingOverview.tsx","webpack:///./packages/topology/src/components/workload/JobsOverview.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/getNodeDecorators.tsx","webpack:///./packages/topology/src/data-transforms/useRoutesURL.ts","webpack:///./packages/topology/src/components/list-view/TopologyListViewNode.tsx","webpack:///./packages/dev-console/src/utils/useAddActionExtensions.ts","webpack:///./packages/topology/src/components/graph-view/components/withTopologyContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/GraphComponent.tsx","webpack:///./packages/topology/src/redux/const.ts","webpack:///./packages/topology/src/components/graph-view/components/RegroupHint.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/ApplicationGroupExpanded.tsx","webpack:///./packages/topology/src/components/graph-view/layouts/layoutFactory.ts","webpack:///./packages/topology/src/components/graph-view/layouts/TopologyColaLayout.ts","webpack:///./packages/knative-plugin/src/topology/layouts/layoutConstraints.ts","webpack:///./packages/topology/src/components/graph-view/TopologyControlBar.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/console-fetch.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sModel.js","webpack:///./packages/helm-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/list-view/cells/TypedResourceBadgeCell.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/coreSelectors.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/actions/core.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/console-fetch-utils.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/k8s/actions/k8s.js","webpack:///./packages/dev-console/src/utils/add-page-utils.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-utils.js","webpack:///./packages/topology/src/components/side-bar/TopologyEdgeResourcesPanel.tsx","webpack:///./packages/console-app/src/components/file-upload/file-upload-utils.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/storeHandler.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/index.js","webpack:///./packages/dev-console/src/actions/add-resources.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-resource.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/error/custom-error.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/core.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sModels.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sWatchResource.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/k8s-watcher.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useDeepCompareMemoize.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useModelsLoaded.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sWatchResources.js","webpack:///./packages/topology/src/behavior/index.ts","webpack:///./packages/topology/src/components/list-view/list-view-utils.tsx","webpack:///./packages/topology/src/components/list-view/cells/GroupResourcesCell.tsx","webpack:///./packages/topology/src/components/list-view/cells/index.ts","webpack:///./packages/topology/src/components/list-view/cells/CpuCell.tsx","webpack:///./packages/topology/src/components/list-view/cells/MemoryCell.tsx","webpack:///./packages/topology/src/components/list-view/cells/StatusCell.tsx","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/configSetup.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/actions/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/error/http-error.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/ws-factory.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/k8s/reducers/k8sSelector.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/usePrevious.js","webpack:///./packages/topology/src/components/quick-search/TopologyQuickSearch.tsx","webpack:///./packages/topology/src/components/quick-search/topology-quick-search-utils.tsx","webpack:///./packages/topology/src/components/quick-search/TopologyQuickSearchButton.tsx","webpack:///./packages/dev-console/src/components/resource-quota/ResourceQuotaAlert.tsx","webpack:///./packages/topology/src/components/utils/checkResourceQuota.ts","webpack:///./packages/topology/src/components/export-app/ExportApplicationModal.tsx","webpack:///./packages/topology/src/utils/export-app-utils.ts","webpack:///./packages/topology/src/components/export-app/ExportViewLogButton.tsx","webpack:///./packages/dev-console/src/utils/useAddToProjectAccess.ts","webpack:///./public/components/overview/metricUtils.ts","webpack:///./packages/topology/src/components/list-view/TopologyListViewKindGroup.tsx","webpack:///./packages/topology/src/components/list-view/cells/AlertsCell.tsx","webpack:///./packages/topology/src/components/list-view/cells/MetricsTooltip.tsx","webpack:///./packages/service-binding-plugin/src/components/service-binding-status/ServiceBindingStatus.tsx","webpack:///./packages/dev-console/src/components/topology/index.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/BindableNode.tsx","webpack:///./packages/topology/src/utils/relationship-provider-utils.ts","webpack:///./packages/dev-console/src/components/topology/const.ts","webpack:///./packages/dev-console/src/components/topology/relationship-provider.ts","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverview.tsx","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringMetrics.tsx","webpack:///./packages/dev-console/src/components/monitoring/dashboard/MonitoringDashboardGraph.tsx","webpack:///./packages/dev-console/src/components/monitoring/queries.ts","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverviewAlerts.tsx","webpack:///./packages/dev-console/src/components/monitoring/overview/monitoring-overview-alerts-utils.ts","webpack:///./packages/dev-console/src/components/monitoring/overview/MonitoringOverviewEvents.tsx","webpack:///./packages/service-binding-plugin/src/components/service-binding-details/ServiceBindingSummary.tsx","webpack:///./packages/topology/src/components/page/TopologyPage.tsx","webpack:///./packages/topology/src/user-preferences/usePreferredTopologyView.ts","webpack:///./packages/topology/src/components/page/TopologyDataRenderer.tsx","webpack:///./packages/topology/src/components/page/DroppableTopologyComponent.tsx","webpack:///./packages/topology/src/components/page/TopologyView.tsx","webpack:///./packages/topology/src/data-transforms/updateModelFromFilters.ts","webpack:///./packages/topology/src/filters/TopologyFilterBar.tsx","webpack:///./packages/console-app/src/components/pdb/PDBAlert.tsx","webpack:///./packages/topology/src/components/export-app/ExportApplication.tsx","webpack:///./packages/topology/src/filters/FilterDropdown.tsx","webpack:///./packages/topology/src/filters/KindFilterDropdown.tsx","webpack:///./packages/topology/src/filters/NameLabelFilterDropdown.tsx","webpack:///./packages/topology/src/components/list-view/TopologyListView.tsx","webpack:///./packages/topology/src/components/utils/subscribeOverviewAlerts.ts","webpack:///./packages/topology/src/components/utils/subscribeOverviewMetrics.ts","webpack:///./packages/topology/src/components/list-view/TopologyListViewAppGroup.tsx","webpack:///./packages/topology/src/components/list-view/ListElementWrapper.tsx","webpack:///./packages/topology/src/components/list-view/listViewComponentFactory.ts","webpack:///./packages/helm-plugin/src/topology/listView/HelmReleaseListViewNode.tsx","webpack:///./packages/knative-plugin/src/topology/listView/knativeListViewComponentFactory.ts","webpack:///./packages/knative-plugin/src/topology/listView/KnativeRevisionListViewNode.tsx","webpack:///./packages/knative-plugin/src/topology/listView/KnativeServiceListViewNode.tsx","webpack:///./packages/knative-plugin/src/topology/listView/NoStatusListViewNode.tsx","webpack:///./packages/knative-plugin/src/topology/listView/SinkUriListViewNode.tsx","webpack:///./packages/topology/src/operators/listView/OperatorGroupListViewNode.tsx","webpack:///./packages/topology/src/components/list-view/kubevirtListViewComponentFactory.ts","webpack:///./packages/topology/src/components/list-view/VMListViewNode.tsx","webpack:///./packages/topology/src/utils/usePodsForVM.ts","webpack:///./packages/topology/src/utils/kubevirt-models.ts","webpack:///./packages/topology/src/utils/kubevirt-utils.ts","webpack:///./packages/topology/src/components/list-view/TopologyListViewUnassignedGroup.tsx","webpack:///./packages/topology/src/components/side-bar/SelectedEntityDetails.tsx","webpack:///./packages/topology/src/components/side-bar/TopologyEdgePanel.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarContent.tsx","webpack:///./packages/topology/src/components/side-bar/components/SideBarBody.tsx","webpack:///./packages/topology/src/components/side-bar/providers/SideBarTabLoader.tsx","webpack:///./packages/topology/src/components/side-bar/providers/SideBarTabHookResolver.tsx","webpack:///./packages/topology/src/components/side-bar/DefaultResourceSideBar.tsx","webpack:///./packages/topology/src/components/side-bar/providers/useDetailsTab.tsx","webpack:///./packages/topology/src/components/side-bar/providers/useDetailsTabSection.tsx","webpack:///./packages/topology/src/components/side-bar/components/SideBarHeading.tsx","webpack:///./packages/topology/src/actions/TopologyActions.tsx","webpack:///./packages/topology/src/components/side-bar/providers/useDetailsResourceLink.tsx","webpack:///./packages/topology/src/components/side-bar/components/SideBarAlerts.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBar.tsx","webpack:///./packages/topology/src/components/page/LimitExceededState.tsx","webpack:///./packages/topology/src/components/page/TopologyEmptyState.tsx","webpack:///./packages/topology/src/components/page/TopologyPageToolbar.tsx","webpack:///./packages/topology/src/components/graph-view/TopologyShortcuts.tsx","webpack:///./packages/dev-console/src/components/topology/components/devConsoleComponetFactory.ts","webpack:///./packages/dev-console/src/components/topology/hpa-tab-section.tsx","webpack:///./packages/dev-console/src/components/topology/observe-tab-section.tsx","webpack:///./packages/dev-console/src/components/topology/sbr-sidebar/index.ts","webpack:///./packages/dev-console/src/components/topology/sbr-sidebar/resource-link.tsx","webpack:///./packages/dev-console/src/components/topology/sbr-sidebar/tab-section.tsx","webpack:///./packages/dev-console/src/components/topology/TopologyPage.tsx","webpack:///./packages/dev-console/src/components/hpa/HpaOverview.tsx"],"names":["common","factory","resourceQuotaMenuActions","getExtensionsActionsForKind","clusterResourceQuotaMenuActions","appliedClusterResourceQuotaMenuActions","namespace","ModifyLabels","ModifyAnnotations","kind","obj","labelKey","href","metadata","name","accessReview","group","apiGroup","resource","plural","verb","Delete","isClusterQuota","quota","clusterQuotaReference","appliedClusterQuotaReference","quotaActions","customData","getQuotaResourceTypes","specHard","sort","getACRQResourceUsage","resourceType","used","status","namespaces","filter","ns","cluster","total","totalUsed","max","hard","spec","percentNamespace","percentOtherNamespaces","percent","otherNamespaces","unused","getResourceUsage","isCluster","statusPath","specPath","usedPath","tableColumnClasses","columnClass","acrqTableColumnClasses","UsageIcon","usageIcon","className","ResourceUsageRow","QuotaScopesInline","scopes","join","QuotaScopesList","t","quotaScopes","Terminating","description","NotTerminating","BestEffort","NotBestEffort","map","scope","scopeObj","key","hasComputeResources","resourceTypes","length","Details","rq","params","reference","isACRQ","text","charts","appliedClusterResourceQuota","clusterResourceQuota","resourceQuota","canListCRQ","label","path","labels","selector","matchLabels","annotations","style","display","marginBottom","type","ResourceQuotaTableRow","actions","resourcesAtQuota","Object","keys","reduce","acc","dataTest","columnID","count","timestamp","creationTimestamp","AppliedClusterResourceQuotaTableRow","ResourceQuotasList","props","Header","title","sortField","transforms","id","Row","virtualize","AppliedClusterResourceQuotasList","quotaType","flatten","resources","data","ResourceQuotasPage","OPENSHIFT","flags","mock","showTitle","namespaced","rowFilters","push","optional","filterGroupName","reducer","items","labelPluralKey","createNS","model","canCreate","createAccessReview","createButtonText","createProps","to","ListComponent","AppliedClusterResourceQuotasPage","ResourceQuotasDetailsPage","menuActions","pages","details","editYaml","AppliedClusterResourceQuotasDetailsPage","getDisplayName","getFilters","requester","ME","USER","SYSTEM","hideIfEmpty","deleteModal","labelKind","weight","tooltip","callback","undefined","phase","content","nsMenuActions","Edit","fetchNamespaceMetrics","promises","query","url","then","result","value","Number","metric","Promise","all","catch","console","error","namespaceColumnInfo","freeze","classes","displayName","memory","cpu","created","NamespacesTableHeader","sortFunc","additional","NamespacesColumnManagementID","getNamespacesSelectedColumns","Set","column","NamespacesTableRow","tableColumns","metrics","UI","getIn","bytes","cores","columns","NamespacesNotFoundMessage","Icon","NamespacesEmptyMessage","NamespacesList","dispatch","updateMetrics","setInterval","clearInterval","selectedColumns","activeColumns","columnManagementID","EmptyMsg","NoDataEmptyMsg","NamespacesPage","createNamespaceModal","createHandler","columnLayout","projectMenuActions","projectColumnManagementID","projectTableHeader","showMetrics","showActions","ProjectLink","project","setLastNamespace","URL","window","location","URLSearchParams","search","basePath","pathname","has","delete","newUrl","toString","hash","namespacedPath","onClick","e","sessionStorage","setItem","projectHeaderWithoutActions","ProjectTableRow","ProjectLinkComponent","actionsEnabled","isColumnManagementEnabled","getProjectSelectedColumns","ProjectsTable","headerWithMetrics","headerNoMetrics","ProjectNotFoundMessage","canCreateNs","CAN_CREATE_NS","canCreateProject","CAN_CREATE_PROJECT","ProjectEmptyMessage","icon","ProjectList","tableProps","canGetNS","CAN_GET_NS","screen","width","ProjectsPage","createProjectModal","filterLabel","skipAccessReview","textFilter","PullSecret","isLoading","setIsLoading","setData","setError","canViewSecrets","serviceAccount","imagePullSecrets","err","modal","pullSecret","variant","isInline","secret","linkTo","NamespaceLineCharts","humanize","byteDataType","BinaryBytes","TopPodsBarChart","ResourceUsage","NamespaceSummary","serviceMeshEnabled","canListSecrets","showLabelEditor","NamespaceDetails","perspective","consoleLinks","isList","links","hideHeading","link","uid","RolesPage","createPath","NamespacesDetailsPage","roles","ProjectsDetailsPage","nameKey","component","workloads","POD_PHASE_GROUP_MAPPING","NOT_MAPPED","ERROR","PROGRESS","WARN","PVC_STATUS_GROUP_MAPPING","PV_STATUS_GROUP_MAPPING","NODE_STATUS_GROUP_MAPPING","VS_STATUS_GROUP_MAPPING","getStatusGroups","mapping","mapper","filterType","groups","UNKNOWN","statusIDs","forEach","find","includes","getPodStatusGroups","getNodeStatusGroups","getPVCStatusGroups","pvc","getPVStatusGroups","pv","getVSStatusGroups","useTopologyWorkloadActionProvider","element","getType","k8sKind","useTopologyVisualConnectorActionProvider","getSource","kindObj","inFlight","ModifyCount","AddStorage","dc","req","apiVersion","latest","force","opts","rollout","message","subresource","paused","getDeploymentConfigStatus","conditions","progressingFailure","reason","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","timeout","updatePeriod","interval","triggers","hideEmpty","strategy","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","deprecatedDeploymentConfig","additionalClassName","DeploymentConfigsDetails","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","loader","c","envPath","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","context","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","DeploymentConfigsPage","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","replicationController","revision","ReplicationControllerTableRow","statusReplicas","specReplicas","ReplicationControllersList","ReplicationControllersPage","replicaSet","ReplicaSetPods","ReplicaSetsDetailsPage","ReplicaSetTableRow","count1","count2","ReplicaSetsList","ReplicaSetsPage","DaemonSetDetailsList","ds","DaemonSetDetails","daemonset","podData","resourceKind","enableScaling","EnvironmentTab","DaemonSetTableRow","currentNumber","currentNumberScheduled","desiredNumber","desiredNumberScheduled","DaemonSets","DaemonSetsPage","DaemonSetPods","DaemonSetsDetailsPage","prometheusIsAvailable","deployment","DeploymentDetailsList","rollingUpdate","progressDeadlineSeconds","DeploymentDetails","ReplicaSetsTab","DeploymentsDetailsPage","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","FileUploadContext","fileUpload","setFileUpload","extensions","FileUploadContextProvider","Provider","useValuesFileUploadContext","fileUploadExtensions","resolved","toastContext","file","setFile","fileExtensions","properties","ext","toLowerCase","f","requiredFileExtension","handler","addToast","warning","fileName","dismissible","item","monitoringAlerts","loadError","res","prop","fieldSelector","pod","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","itemData","reject","updates","groupResources","groupResource","nextResource","Error","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","onCancel","navigate","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","when","is","deploymentValidationSchema","transform","cv","min","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","request","requestUnit","limitUnit","ensure","imageValidationSchema","build","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","abbr","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","associateServiceAccountToSecret","isImageSecret","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","ownerReferences","some","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","height","visible","padding","getTopologyEdgeItems","edges","targetNode","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","resKind","getBaseWatchedResources","deploymentConfigs","deployments","daemonSets","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","ProjectDashboardContext","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","getPodMetricStats","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","isFinite","formattedValue","deploymentData","inProgressDeploymentData","completedDeploymentData","previous","progressRC","completedRC","hasGutter","rc","isRollingOut","size","mapDispatchToProps","watchURL","stopWatchURL","watchPrometheusQuery","stopWatchPrometheusQuery","mapStateToProps","dashboards","PROMETHEUS","notificationAlerts","observe","withDashboardResources","WrappedComponent","urls","queries","watchingAlerts","watchPrometheus","queryKey","q","watchAlerts","stopWatchAlerts","watchK8sResource","k8sResources","stopWatchK8sResource","getExternalProps","nextProps","nextState","urlResultChanged","urlKey","queryResultChanged","alertsResultChanged","k8sResourcesChanged","nextExternalProps","externalProps","urlResults","prometheusResults","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","Component","editAccess","canEdit","genericCountResources","getUsedPercentage","usedNum","hardNum","parseInt","getLabelAndUsage","resourceName","useCount","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","TopologyViewType","TopologyDisplayFilterType","SHOW_GROUPING_HINT_EVENT","radius","ariaLabel","external","rest","decorator","showBackground","rel","stopPropagation","role","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","endTerminalType","directional","onShowRemoveConnector","onHideRemoveConnector","targetDragRef","sourceDragRef","onSelect","controlled","getDataFromAdapter","resolvedExtensions","adapt","usePodsAdapterForWorkloads","podsAdapterForWorkloads","provider","buildsAdapterForWorkloads","networkAdapterForWorkloads","usePodsAdapterForCronJobWorkloads","setPods","setLoaded","setLoadError","errorKey","updatedPods","podsAdapterForCronJobWorkload","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","SHOW_POD_COUNT_FILTER_ID","SHOW_LABELS_FILTER_ID","EXPAND_APPLICATION_GROUPS_FILTER_ID","EXPAND_GROUPS_FILTER_ID","DEFAULT_TOPOLOGY_FILTERS","expand","DEFAULT_SUPPORTED_FILTER_IDS","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","placeholder","dataSelector","getNamespacedDynamicModelFactories","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","dataModelFactory","dataModelContext","extensionContext","getExtension","getDataModel","isResourceDepicted","getDataModelReconciler","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alerts","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","healthChecksAdded","healthChecksUrl","AddHealthChecks","hidden","EditHealthChecks","CommonActionFactory","cta","blocking","ModifyPodSelector","ModifyTolerations","modalClassName","getCommonResourceActions","NodeType","EdgeType","KameletType","app","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","dx","dy","stdDeviation","floodColor","floodOpacity","navigator","userAgent","in","in2","operator","uniqueResource","ConsumerPopover","consumers","top","isOpen","setOpen","onShow","onHide","headerContent","bodyContent","PopoverBody","enableFlip","maxWidth","getLimitIcon","LimitsBody","limitState","requestedState","available","requested","OK","currentConsumer","setCurrentConsumer","activePerspective","canAccessMonitoring","SERVER_FLAGS","prometheusBaseURL","k8sResource","getResourceToWatch","consumerData","consumerLoaded","consumersLoadError","top5Data","bodyData","consumer","monitoringParams","set","dropdownItems","onDropdownChange","monitoringURL","String","ListItem","OperatorRow","operatorStatus","isResolved","LoadingComponent","ResolvedComponent","operators","OperatorsPopup","operatorExtensions","dynamicOperatorSubsystems","sections","o","operatorResources","getOperatorsWithStatuses","viewAllLink","operatorRowLoader","reverse","OperatorHealthItem","healthStatuses","health","NOT_AVAILABLE","LOADING","operatorStatuses","importantStatuses","operatorsHealth","detailMessage","popupTitle","URLHealthItem","subsystem","modelExists","additionalResource","healthResult","healthResultError","k8sResult","healthState","healthHandler","popupBodyContent","popupComponent","hide","PrometheusHealthItem","infrastructure","queryResults","popupClassname","popupKeepOnOutsideClick","responses","ResourceHealthItem","resourcesWithNamespace","imageManifestVuln","resourcesResult","getAvailableTargetForEdge","currentTargets","getSourceEdges","getId","n1","n2","localeCompare","MoveConnectorAction","getElements","availableTargets","DeleteConnectorAction","edgeActions","moveConnection","resourceLimitsModal","m","ProjectQueries","CPU_USAGE","CPU_REQUESTS","MEMORY_USAGE","MEMORY_REQUESTS","POD_COUNT","FILESYSTEM_USAGE","NETWORK_IN_UTILIZATION","NETWORK_OUT_UTILIZATION","top25Queries","PODS_BY_CPU","PODS_BY_MEMORY","PODS_BY_FILESYSTEM","PODS_BY_NETWORK_IN","PODS_BY_NETWORK_OUT","getMultilineQueries","NETWORK_UTILIZATION","desc","getUtilizationQueries","getTopConsumerQueries","OverviewQuery","PODS_BY_STORAGE","NODES_BY_CPU","NODES_BY_MEMORY","NODES_BY_STORAGE","NODES_BY_PODS","NODES_BY_NETWORK_IN","NODES_BY_NETWORK_OUT","PROJECTS_BY_CPU","PROJECTS_BY_MEMORY","PROJECTS_BY_STORAGE","PROJECTS_BY_PODS","PROJECTS_BY_NETWORK_IN","PROJECTS_BY_NETWORK_OUT","overviewQueries","MEMORY_TOTAL","MEMORY_UTILIZATION","CPU_UTILIZATION","CPU_TOTAL","STORAGE_UTILIZATION","STORAGE_TOTAL","POD_UTILIZATION","getTop25ConsumerQueries","utilization","thresholds","nsQuotas","clusterHard","clusterUsed","nsUsed","clusterUsage","nsUsage","DonutChart","ariaChartLinkLabel","ariaChartTitle","ariaDescription","usedLabel","secondaryTitle","usedLabelText","secondaryTitleText","labelText","namespaceData","datum","ariaTitle","ariaDesc","subTitle","colorScale","getModifyApplicationAction","insertBefore","initialApplication","TOPOLOGY_SEARCH_FILTER_KEY","TOPOLOGY_LABELS_FILTER_KEY","NameLabelFilterValues","onSearchChange","searchQuery","clearNameFilter","clearLabelFilter","clearAll","getSupportedTopologyFilters","topology","plugins","devconsole","getSupportedTopologyKinds","getTopologySearchQuery","getFilterById","isExpanded","showKind","WorkloadTableRow","WorkloadTableHeader","createContextMenuItems","option","SUB_MENU","GROUP_MENU","action","graphActionContext","graph","connectorSource","groupActionContext","contextMenuActions","csvName","innerRadius","hoverRef","onShowCreateConnector","onContextMenu","contextMenuOpen","createConnectorAccessVerb","createConnectorDrag","alertVariant","hoverChange","setHoverChange","hover","internalHoverRef","nodeHoverRefs","cx","cy","iconRadius","filtered","showLabel","kindData","detailsLevel","getDetailsLevel","showDetails","low","badgeClassName","kindStr","kindColor","truncateLength","scaleNode","high","badge","kindAbbr","badgeColor","showStatusBackground","fill","xlinkHref","otherDecoratorProps","fontSize","truncateOptions","bgClassName","emptyValue","typeIconClass","textHover","textHoverRef","iconSize","iconRef","iconWidth","iconHeight","groupSize","groupRef","getCustomShape","rx","ry","iconClass","TOP_MARGIN","triggerRef","textAnchor","EditResourceLimits","hasHPAs","mapOfResources","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","actionOptions","MOVE_CONNECTOR_DROP_TYPE","NODE_DRAG_TYPE","EDGE_DRAG_TYPE","canDropEdgeOnNode","operation","getTargetEdges","highlightNode","monitor","getOperation","isDragging","getItem","canDropOnNode","nodeDragSourceSpec","allowRegroup","SHIFT","edit","canCancel","begin","dropResult","isCancelled","didDrop","controller","getNodeById","appendChild","collect","dragging","regrouping","noRegroupDragSourceSpec","nodesEdgeIsDragging","nodeDropTargetSpec","accept","canDrop","dropTarget","isOver","edgeDragging","graphDropTargetSpec","hitTest","getItemType","hasParent","dragInProgress","dragEditInProgress","dragCreate","hasDropTarget","dropHint","applicationGroupDropTargetSpec","droppable","dragRegroupable","edgeDragSourceSpec","failureTitle","raise","drag","setEndPoint","showIcon","noDropTargetSpec","withNoDrop","withContextMenu","document","getElementById","createVisualConnector","createConnectorCallback","dropHints","relationshipProviders","relationshipProviderExtensions","curRelProvider","create","createConnectors","createConnectorExtensions","creator","isWorkloadRegroupable","groupContextMenu","graphContextMenu","useDisplayFilters","FILTER_ID","circleRef","typedIconSize","typedIconRef","GroupNodeAnchor","offset","center","offset2x","resourcesData","RESOURCE_INFO_PADDING","calculateInnerPodStatusRadius","outerPodStatusInnerRadius","outerPodStatusWidth","innerPodStatusOuterRadius","innerPodStatusInnerRadius","podSetInnerRadius","podStatusInnerRadius","podStatusStrokeWidth","innerStrokeWidth","podStatusInset","PodSet","showPodCount","podStatusOuterRadius","hpaControlledScaling","ownerKind","titleComponent","outerRadius","xmlns","viewBox","OdcBaseEdge","ClusterDashboardContext","infrastructureLoaded","infrastructureError","getAppliedFilters","useFilterContextValues","appliedFilters","setAppliedFilters","appliedFiltersLoaded","filtersLoaded","setFiltersLoaded","setFilters","getTopologyFilters","setTopologyFilters","displayFilters","FilterContext","FilterProvider","OperatorsSection","sortedOperatorStatuses","operatorsHealthy","RowLoading","firstColumn","operatorStatusLength","secondColumn","cvResource","DashboardAlerts","hasCVResource","CLUSTER_VERSION","cvLoaded","showClusterUpdate","StatusCard","k8sModels","k8s","subsystemExtensions","dynamicSubsystemExtensions","subsystems","filterSubsystems","popup","operatorSubsystemIndex","healthItems","disallowedControlPlaneTopology","controlPlaneTopology","operatorSubsystems","isClickable","isSelectable","hasNoOffset","CreateAProjectButton","openProjectModal","onCreate","setActiveNamespace","createNamespaceOrProjectModal","networkPopovers","PrometheusUtilizationItem","utilizationQuery","totalQuery","TopConsumerPopover","humanizeValue","limitQuery","requestQuery","setLimitReqState","utilizationError","totalError","limitError","requestError","PrometheusMultilineUtilizationItem","TopConsumerPopovers","stats","hasError","responseError","UtilizationCardNodeFilter","machineConfigPools","onNodeSelect","selectedNodes","setIsOpen","selectOptions","order","indexA","indexOf","indexB","mcp","mcpName","hasCheckbox","isSelected","onOpenChange","open","toggle","toggleRef","isRead","UtilizationCard","machineConfigPoolsLoaded","setSelectedNodes","dynamicItemExtensions","dynamicMultilineItemExtensions","utilizationQueries","multilineQueries","selection","selectionUpdated","getUtilizationQuery","getTotalQuery","getRequestQuery","getLimitQuery","DEFAULT_THRESHOLDS","GaugeChart","invert","loading","remainderLabel","themeColor","green","ready","Gauge","QUERY","useShowLabel","showLabelsFilter","getKindStringAndAbbreviation","CronJobSideBarDetails","cronjob","startingDeadlineSeconds","lastScheduleTime","useCronJobSideBarDetails","DaemonSetSideBarDetails","useDaemonSetSideBarDetails","DeploymentConfigSideBarDetails","useDeploymentConfigSideBarDetails","DeploymentSideBarDetails","useDeploymentSideBarDetails","JobSideBarDetails","job","activeDeadlineSeconds","useJobSideBarDetails","PodsTabSection","podAdapter","podAdapterExtensionResolved","podsData","podsDataLoaded","setPodData","handleAdapterResolved","setTimeout","useAdapterHook","onAdapterDataResolved","usePodsSideBarTabSection","podAdapterExtension","StatefulSetSideBarDetails","ss","useStatefulSetSideBarDetails","getWorkloadResourceLink","kindReference","BuildTabSection","buildAdapter","extensionsResolved","buildConfigsDataLoaded","setBuildConfigsData","useBuildsSideBarTabSection","buildAdapterExtensions","NetworkTabSection","networkAdapter","useNetworkingSideBarTabSection","networkAdapterExtensions","JobsTabSection","useJobsSideBarTabSection","PodSideBarDetails","usePodSideBarDetails","addHealthChecksRefs","useHealthChecksAlert","kindForCRDResource","canAddHealthChecks","canAddHealthChecksLoading","containersName","showAlert","addHealthChecksLink","alertMessage","useResourceQuotaAlert","fireTelemetryEvent","canUseAlertAction","canUseAlertActionLoading","replicaFailureMsg","resourceQuotaRequested","alertAction","showAlertActionLink","alertActionCta","alertActionLink","actionLinks","VPATabSection","vpas","vpa","groupVersionKind","useVpaSideBarTabSection","verticalPodAutoscalers","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","left","iconOnly","noTooltip","workloadData","cheEnabled","editUrl","repoIcon","right","showMonitoringOverview","firingAlerts","severityAlertType","mainCards","Card","leftCards","rightCards","getNamespaceDashboardConsoleLinks","ProjectDashboard","namespaceLinks","hasNamespaceLinks","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","deploymentConfigRollout","CreateServiceBinding","getReference","getReferenceForModel","getGroupVersionKindForReference","referenceSplit","transformGroupVersionKindToReference","listComponent","listPageProps","OverviewListPageLoader","OverviewListPage","DetailsCard","labelsSubset","firstThreelabels","detailsLink","projectName","ClusterUtilizationContext","useConsumers","nsQuery","podQuery","nodeQuery","consumerQueries","CPUPopover","MemoryPopover","StoragePopover","PodPopover","NetworkInPopover","NetworkOutPopover","ProjectUtilizationContext","FilesystemPopover","ProjectInventoryItem","additionalResources","additionalDynamicResources","createFirehoseResource","resourceLoaded","resourceLoadError","additionalResourcesData","additionalResourcesLoaded","additionalResourcesLoadError","dynamicResources","dynamicResourcesError","dynamicResourcesLoaded","InventoryCard","itemExtensions","inventoryExtensions","RecentEvent","viewEvents","eventsResource","getEventsResource","moreLink","OngoingActivity","resourceActivityExtensions","dynamicResourceActivityExtensions","resourceActivities","allResourceActivities","isActivity","getTimestamp","resourcesLoaded","ActivityCard","LauncherCard","nl","consoleLink","dataTestID","ResourceQuotaCard","quotas","rqLoaded","rqLoadError","clusterQuotas","acrqLoaded","acrqLoadError","noText","cq","setExpanded","isFilled","onToggle","_event","toggleContent","inline","truncate","EMPTY","delayIn","delayOut","setHover","mountRef","unsetHandle","delayHandle","delayedStateChange","newState","clearTimeout","onMouseEnter","onMouseLeave","addEventListener","removeEventListener","DEFAULT_HANDLE_ANGLE","PI","DEFAULT_HANDLE_ANGLE_TOP","DEFAULT_HANDLE_LENGTH","CreateConnectorWidget","onKeepAlive","ConnectorComponent","handleAngle","handleAngleTop","handleLength","contextMenuClass","dragItem","dragOperation","hideConnectorMenu","prompt","setPrompt","setActive","hintsRef","dragProps","getDragEvent","choices","getDropHints","hints","dragRef","refs","dragEvent","startPoint","endPoint","getAnchor","getLocation","isRightLabel","getLabelPosition","referencePoint","tan","cos","sin","translateFromParent","topologyDefaultCreateConnector","fillOpacity","pageX","pageY","onRequestClose","withCreateConnector","setShow","alive","setKeepAlive","onHideCreateConnector","isAlive","componentFactory","others","bidirectional","none","directionalAlt","tipContents","sbr","errorCross","getStartPoint","getEndPoint","centerX","centerY","angleDeg","atan2","classNames","topologyEdge","danger","topologyConnectorArrow","x1","y1","x2","y2","strokeWidth","endTerminalStatus","useAppliedDisplayFilters","EMPTY_QUERY_PARAMS","useSearchFilter","labelsQuery","labelsMatched","labelsString","fuzzyCaseInsensitive","dragNodeRef","needsHintRef","needsHint","groupClasses","StatusSeverities","normal","getAggregateStatus","donutStatus","alertSeverity","buildStatus","pipelineStatus","workloadRqAlertVariant","worstPodStatus","podStatus","CrashLoopBackOff","Warning","getNodePodStatus","Critical","WorkloadPodsNode","urlAnchorRef","dropTooltip","decoratorRadius","tipContent","showPodCountFilter","decorators","iconImageUrl","nodeDecorators","workloadRqAlert","animationDuration","nodeStatus","attachments","WorkloadNode","NODE_SHADOW_FILTER_ID","NODE_SHADOW_FILTER_ID_HOVER","NodeShadows","STORED_NODE_LAYOUT_FIELDS","TopologyGraphView","visualizationReady","visualization","controlsDisabled","selectedId","dragHint","selectedIds","layout","layers","getStoredGraphModel","onGraphModelChange","setVisualization","userSettingState","topologyLayoutDataJson","setUserSettingState","setTopologyLayoutData","applicationRef","setVisualizationReady","setDragHint","storedLayoutApplied","componentFactoryExtensions","isStaticResolved","dynamicComponentFactoryExtensions","isDynamicResolved","createVisualization","storedLayout","newVisualization","registerElementFactory","registerLayoutFactory","onCurrentGraphModelChange","visModel","saveGraphModel","scale","scaleExtent","onVisualizationLayoutChange","updatedLayoutData","currentStore","setTopologyLayout","prevState","fromModel","ids","selectedEntity","visualizationRef","storedGraphModel","storedNode","sn","oldNode","oldEdge","getEdgeById","isNodeInView","graphBounds","viewNode","closestNode","closestDistance","nextNode","distance","nodeBounds","nodeX","nodeY","sqrt","nodeDistanceToBounds","panIntoView","selectedItem","registerComponentFactory","getFactory","hint","reset","resizeTimeout","visibleEntity","minimumVisible","routeDecoratorIcon","routeURL","fillRule","stroke","nodeItem","MoveConnectionForm","handleSubmit","isSubmitting","setTranslator","isDirty","headingLevel","fieldId","_","isFullWidth","submitDisabled","submitError","MoveConnectionModal","newTarget","handlePromise","setStatus","initialValues","formikProps","moveConnectionModal","editApplicationModal","Recommendations","recommendations","recommendation","containerRecommendations","VerticalPodAutoscalerRecommendations","Actions","setSupportedTopologyFilters","supportedFilters","supportedTopologyFilters","setSupportedTopologyKinds","supportedKinds","supportedTopologyKinds","setTopologyGraphModel","topologyGraphModel","getTopologyGraphModel","usePodsForRevisions","revisionIds","replicaSets","updateResults","revisionsPods","podUpdateTime","allStatuses","updateTimes","times","nextStatus","running","errorPhases","isPodError","isEvicted","podCompare","pod1","pod2","error1","evicted1","runtime1","runtime2","PodOverviewItem","podName","tooltipFlag","PodsOverviewList","PodsOverviewContent","allPodsLink","emptyText","showWaitingPods","setShowWaitingPods","shipwrightBuilds","buildRunBeta","buildRunAlpha","watchedBuildRuns","allBuildRuns","useGetShipwrightBuilds","waitingForBuildConfig","completionTimestamp","isComplete","waitingForShipwright","buildRun","buildRunIsComplete","showWaitingForBuildAlert","isDeploymentGeneratedByWebConsole","filteredPods","containerStatuses","containerStatus","imageID","isPodWithoutImageId","errorPodCount","podsShown","emptyMessage","podAlert","podSize","StatusTitle","Complete","New","BuildStatus","logSnippet","BuildOverviewItem","startTimestamp","lastUpdated","spin","BuildOverviewList","canStartBuild","buildsLength","BuildOverview","ServicePortList","service","ports","protocol","targetPort","ServicesOverviewListItem","ServicesOverviewList","RoutesOverviewListItem","RoutesOverviewList","NetworkingOverview","serviceResources","routeResources","JobOverviewItem","podsLink","standalone","showTooltip","JobsOverviewList","JobsOverview","allJobsLink","jobCount","getNodeDecorators","nodeRadius","nodeWidth","nodeHeight","deltaX","deltaY","upperRight","lowerRight","upperLeft","lowerLeft","retDecorator","getExtensionDecoratorForQuadrant","useRoutesURL","annotationURL","watchedURL","onSelectTab","badgeCell","labelCell","alertsCell","memoryCell","cpuCell","statusCell","groupResourcesCell","hideAlerts","noPods","alertIndicator","onAlertClick","cells","dataListCells","kindLabel","isHidden","selectedDataListItemId","onSelectDataListItem","getDisabledAddActions","addPage","disabledActions","useAddActionExtensions","allAddActionExtensions","allAddActionsDisabled","addActionExtension","actionContext","atPoint","setReference","graphClasses","setRenderConstraint","addClassList","removeClassList","classList","add","remove","TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY","shift","collapsible","secondaryLabel","dndDropRef","badgeTextColor","badgeBorderColor","badgeLocation","labelIconClass","labelIcon","labelIconPadding","onCollapseChange","hovered","labelHover","labelHoverRef","dragLabelRef","isHover","anchorRef","outlineRef","labelLocation","pathRef","altGroup","hullPadding","getNodes","points","getNodeShape","hullPoints","lowPoints","delta","Infinity","computeLabelLocation","groupClassName","topologyGroup","innerGroupClassName","topologyGroupBackground","topologyGroupLabel","paddingX","paddingY","getNodeStatus","actionIcon","onActionIconClick","DEFAULT_LAYOUT","SUPPORTED_LAYOUTS","layoutFactory","layoutOnDrag","TopologyColaLayout","initialRun","addingNodes","startLayout","getNodeTimeStamp","nodeSorter","node1","node2","alignNodeConnector","filteredNode","constraints","connectorLinks","isFixed","l1","l2","nextLink","serviceDistance","linkNodeConstraint","axis","offsets","nextOffset","gap","linkDistance","equality","layoutConstraints","leafNodes","leaves","serviceConstraint","eventSourceLinksConnector","pubSubLinksConnector","eventSinkLinksConnector","TopologyControlBar","controlButtons","zoomInCallback","scaleBy","zoomInTip","zoomInAriaLabel","zoomInDisabled","zoomOutCallback","zoomOutTip","zoomOutAriaLabel","zoomOutDisabled","fitToScreenCallback","fit","fitToScreenTip","fitToScreenAriaLabel","fitToScreenDisabled","resetViewCallback","resetViewTip","resetViewAriaLabel","resetViewDisabled","legend","__awaiter","thisArg","_arguments","P","generator","fulfilled","next","rejected","done","apply","consoleFetchCommon","allOptions","fetchPromise","appFetch","timeoutPromise","race","consoleFetch","dataPromise","isPlainText","parseData","_a","warningData","getStore","handleAdmissionWebhookWarning","consoleFetchJSON","consoleFetchSendJSON","put","getK8sModel","k8sGroupVersionKind","useK8sModel","TYPE_HELM_RELEASE","TYPE_HELM_WORKLOAD","HELM_GROUP_WIDTH","HELM_GROUP_HEIGHT","HELM_GROUP_PADDING","typeIcon","imageClass","itemIcon","iconType","alt","src","getImpersonate","sdkCore","impersonate","ActionType","setAdmissionWebhookWarning","SetAdmissionWebhookWarning","getConsoleRequestHeaders","store","getState","cookie","updateListFromWS","k8sObjects","UpdateListFromWS","Loaded","bulkAddToList","BulkAddToList","startWatchK8sObject","StartWatchK8sObject","startWatchK8sList","StartWatchK8sList","modifyObject","ModifyObject","stopWatchK8s","StopWatchK8s","errored","Errored","partialObjectMetadataListHeader","partialObjectMetadataHeader","WS","POLLs","REF_COUNTS","stopK8sWatch","ws","destroy","poller","watchK8sList","k8skind","extraAction","partialMetadata","incrementallyLoad","continueToken","requestOptions","assign","continue","resourceVersion","pollAndWatch","subprotocols","onclose","code","ondestroy","timedOut","onbulkmessage","watchK8sObject","k8sModel","watch","object","getAddGroups","addActions","addActionGroups","initialActionGroups","actionGroup","actionGroups","currAction","actionGroupsForCurrentItem","groupId","navigateTo","resolvedHref","filterNamespaceScopedUrl","resourceURL","u","isLegacy","getK8sAPIPath","getK8sResourcePath","toArray","requirementToString","requirement","selectorToString","requirements","matchExpressions","isOldFormat","me","toRequirements","k8sWatch","wsOptions","wsOptionsUpdated","reconnect","jsonParse","bufferFlushInterval","bufferMax","encodedSelector","getRequiredFileUploadExtension","ex","supportedFileTypes","lastIndexOf","getFileType","isFileSupported","storeHandler","setStore","storeData","allImportResourceAccess","allCatalogImageResourceAccess","resolvedURLWithParams","unresolvedHref","contextSource","allowServiceBinding","resolvedURL","append","APPLICATION","CONTEXT_ACTION","payload","AddActions","FromGit","accessReviewDisabled","ContainerImage","DevCatalog","DatabaseCatalog","Samples","OperatorBacked","isServiceBindingAllowed","UploadJarFile","CreateServerlessFunction","CreateServerlessFunctionUsingSamples","disabledAddActions","disabledActionsFilter","adapterFunc","func","knownArgs","arg","k8sGet","requestInit","k8sCreate","k8sList","_b","propagationPolicy","jsonData","raw","newVal","listURL","typedItems","CustomError","defineProperty","enumerable","configurable","captureStackTrace","constructor","stack","setPrototypeOf","prototype","useK8sWatchResource","initResource","modelsLoaded","reduxID","resourceK8s","NoModelError","INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL","Symbol","INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL","getReduxData","immutableData","toJSON","getIDAndDispatch","makeQuery","qs","makeReduxID","useDeepCompareMemoize","strinfigy","useModelsLoaded","useK8sWatchResources","initResources","allK8sModels","prevK8sModels","prevResources","k8sModelsRef","modelReference","requiredModels","reduxIDs","idAndDispatch","noModel","reduxIDKeys","resourceK8sSelectorCreator","oldK8s","newK8s","resourceK8sSelector","getChildKinds","kindKeys","sortGroupChildren","childKindsMap","CpuCellComponent","metricLabel","byPod","CpuCell","memoryStats","MemoryCellComponent","MemoryCell","StatusCellResourceLink","desired","StatusCellResourceStatus","StatusCell","getUtilsConfig","HttpError","messages","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","426","428","429","431","451","500","501","502","503","504","505","506","510","511","TimeoutError","ms","k8sBasePath","WSFactory","handlers","bulkmessage","connect","flushCanceler","flushMessageBuffer","connectionAttempt","attempt","that","messageBuffer","createURL","WebSocket","onopen","triggerEvent","evt","onerror","onmessage","msg","fn","h","invokeHandlers","registerHandler","eventData","send","getReduxIdPayload","reduxId","usePrevious","deps","Contents","quickStarts","quickStartsLoaded","catalogService","catalogServiceSample","viewContainer","quickStartItems","quickSearchProviders","catalogType","getCatalogURL","searchTerm","catalogLinkLabel","catalogExtensions","allItemsLoaded","searchPlaceholder","limitItemCount","catalogId","useTransformedQuickStarts","setActiveQuickStart","prerequisites","prerequisite","ResourceQuotaAlert","warningMessageFlag","setWarningMessageFlag","resourceQuotaName","setResourceQuotaName","resourceQuotaKind","setResourceQuotaKind","resourcequotas","appliedclusterresourcequotas","totalRQatQuota","quotaName","quotaKind","totalACRQatQuota","clusterRQName","clusterRQKind","totalResourcesAtQuota","resourceAtQuota","checkQuotaLimit","resourceQuotas","exportApplicationModal","exportResource","toast","setStartTime","errMessage","setErrMessage","exportAppToast","setExportAppToast","completed","createExportCR","exportRes","exportAppToastConfig","info","handleCancel","exportInProgress","justifyContent","createError","onViewLog","handleExportApplication","getExportAppData","createExportResource","getExportResource","killExportResource","jobLoaded","podResource","podLoaded","linkedButton","disabledButton","isAriaDisabled","resourceAttributes","useAddToProjectAccess","activeNamespace","buildConfigsAccess","imageStreamAccess","deploymentConfigAccess","imageStreamImportAccess","secretAccess","routeAccess","serviceAccess","serviceBindingEnabled","createResourceAccess","METRICS_FAILURE_CODES","fetchOverviewMetrics","fetchMonitoringAlerts","groupLabel","childElements","resourceLabel","childNodes","AlertTooltip","severity","isMobile","buildConfigsLoaded","rcsLoaded","mostRecentRC","workloadRqAlerts","rqAlert","currentAlerts","previousAlerts","buildConfigAlerts","rollOutAlerts","buildNew","buildPending","buildRunning","buildFailed","buildError","sortedMetrics","keepLines","numRemoved","serviceBinding","computedStatus","CONNECTED","firstError","tooltipLabel","nodeElement","dndDropProps","iconData","getRelationshipProvider","getSourceNode","isEdgeConnected","getRelExtension","topologyRelationshipExtensions","relationshipExtension","provides","TYPE_BINDABLE_NODE","providerProvidesServiceBinding","providerCreateServiceBinding","sourceResource","resourceEvents","expanded","newExpanded","asDefinitionList","titleText","workloadName","workloadType","graphType","chartType","GraphTypes","PrometheusGraphLink","area","pollInterval","onZoom","hideControls","defaultTimespan","defaultSamples","isStack","fixedEndTime","formatSeriesTitle","showLegend","topWorkloadMetricsQueries","DecimalBytes","MonitoringOverviewAlerts","sortedAlerts","alertname","alertDetailsPageLink","getAlertType","Info","None","alignSelf","lastTimestamp","involvedObject","findModel","PageContentsWithStartGuide","viewType","activeViewStorageKey","defaultViewType","preferredTopologyView","preferredTopologyViewLoaded","topologyLastView","setTopologyLastView","isTopologyLastViewLoaded","topologyViewState","lastOverviewOpen","onViewChange","newViewType","namespacedPageVariant","light","usePreferredTopologyView","TopologyDataRenderer","skeleton","boxTarget","onDrop","DroppableTopology","FILE","connectObj","connectDropTarget","canDropFile","DroppableTopologyComponent","eventSourceEnabled","onSupportedFiltersChange","supportedFilterIds","onSupportedKindsChange","setViewContainer","onFiltersChange","filteredModel","setFilteredModel","setSelectedEntity","showTopologyAnyway","setShowTopologyAnyway","isQuickSearchOpen","setIsQuickSearchOpen","setIsQuickSearchOpenAndFireEvent","displayFilterExtensions","displayFilterExtensionsResolved","createConnectorsResolved","extensionDecorators","extensionDecoratorsResolved","dynamicDisplayFilterExtensions","dynamicDisplayFilterExtensionsResolved","dynamicCreateConnectors","dynamicCreateConnectorsResolved","dynamicExtensionDecorators","dynamicExtensionDecoratorsResolved","relationshipProvider","topologyDecorators","setTopologyDecorators","supportedFileExtensions","searchParams","labelParams","fileTypes","entity","selEntity","removeItem","graphData","getCreateConnector","allDecorators","extensionDecorator","quadrant","updateFilters","extFilters","applyDisplayOptions","updatedFilters","nodesLength","viewContent","isSidebarAvailable","topologyViewComponent","panelContent","onClose","onShowTopologyAnyway","getApplicationGroupForNode","getNodeKind","isNodeShown","allNodes","shown","parentNode","updateModelFromFilters","displayFilterers","dataModel","appGroupFound","displayFilterer","labelFilterInput","setLabelFilterInput","kialiLink","isExportApplicationEnabled","clearAllFilters","deleteChipGroup","chips","deleteChip","newLabels","keepItem","categoryName","endOfString","Label","updatedLabels","updateLabelFilter","updateNameFilter","nameFilterInput","align","pdbCount","pdbName","isExportAppAllowed","showExportAppBtn","opened","groupsExpanded","expandFilters","showFilters","isSelectDisabled","selectContent","isChecked","property","checked","isGrouped","isCheckboxSelectionBadgeHidden","kindFilters","selectedFilterCount","newFilter","setSelected","Name","handleInputValue","onSuggestionSelect","showSuggestions","textValue","setTextValue","labelPath","autoFocus","TopologyListViewComponent","applicationGroups","unassignedItems","appGroup","showCategory","prevProps","listModel","ConnectedTopologyListView","updateMonitoringAlerts","scrollIntoView","block","getFlattenedItems","flattened","addFlattenedNode","addFlattenedKinds","stopEvent","activeElement","HTMLElement","blur","onKeyDown","nodeName","onEnter","flattenedItems","selectPrevious","selectNext","clearMetricsInterval","clearAlertsInterval","TopologyListView","toJS","subscribeOverviewAlerts","alertsInterval","fetchAlerts","subscribeOverviewMetrics","metricsInterval","fetchMetrics","updatedMetrics","ListElementComponent","ListElementChildren","ListElementWrapper","listViewNodeComponentFactory","knativeComponent","kubevirtComponent","chartIcon","knativeListViewNodeComponentFactory","KnativeRevisionListViewNode","metricStats","KnativeServiceListViewNode","NoStatusListViewNode","SinkUriListViewNode","operatorKind","kubevirtListViewNodeComponentFactory","VMListViewNode","vm","usePodsForVm","vmName","vmRef","replicationControllers","virtualmachineinstances","vmi","instance","visibleReplicationControllers","launcherPod","podRCData","VirtualMachineInstanceModel","findVMIPod","vmUID","podOwnerReferences","podOwnerReference","unassignedContent","isSidebarRenderable","SelectedEntityDetails","connectorTypeToTitleKey","SimpleTabNavWrapper","tabs","selectedTab","selectTabParam","handleClickTab","tabProps","onClickTab","additionalClassNames","tabExtensions","tabSectionExtensions","tabSectionExtensionsResolved","blamedDeprecatedPlugins","renderNullNoop","graphElement","resolvedTabSections","section","tab","tabId","contentElement","hookResult","tabsLoaded","tabContent","tabSectionId","DefaultResourceSideBar","useDetailsTab","useDetailsTabSection","resourceLink","useDetailsResourceLink","resurceLinkExtension","ResolveResourceAlerts","useResourceAlertsContent","setShowAlert","alertConfigs","actionClose","resourceAlertsExtension","contentProvider","sideBarSize","setSideBarSize","sideBarSizeLoaded","handleResizeCallback","isResizable","minSize","defaultSize","onResize","resizable","LimitExceededState","full","TopologyPageToolbar","showGraphView","allImportAccess","viewChangeTooltipContent","getTopologyShortcuts","rightClick","click","ctrl","keyName","dragNdrop","getDevConsoleComponentFactory","useHpaTabSectionForTopologySideBar","useObserveSideBarTabSection","getSbrPanelResourceLink","hideIcon","DetailsSection","useSbrPanelDetailsSection","useSbrPanelResourceSection","HPAOverview"],"mappings":"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","file":"dev-console/code-refs/topology-chunk-6c7c725aa6d97e30bff1.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { OutlinedCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-circle-icon';\nimport { ResourcesAlmostEmptyIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-empty-icon';\nimport { ResourcesAlmostFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-full-icon';\nimport { ResourcesFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport { UnknownIcon } from '@patternfly/react-icons/dist/esm/icons/unknown-icon';\n\nimport { useTranslation } from 'react-i18next';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport ClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/ClusterResourceQuotaCharts';\n\nimport { FLAGS, YellowExclamationTriangleIcon } from '@console/shared';\nimport { DetailsPage, MultiListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  SectionHeading,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  convertToBaseValue,\n  FieldLevelHelp,\n  useAccessReview,\n  LabelList,\n  Selector,\n  Timestamp,\n  DetailsItem,\n} from './utils';\nimport { connectToFlags } from '../reducers/connectToFlags';\nimport { flagPending } from '../reducers/features';\nimport { LoadingBox } from './utils/status-box';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport {\n  AppliedClusterResourceQuotaModel,\n  ResourceQuotaModel,\n  ClusterResourceQuotaModel,\n} from '../models';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\n\nconst { common } = Kebab.factory;\n\nconst resourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ResourceQuotaModel),\n  ...common,\n];\nconst clusterResourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  ...common,\n];\nconst appliedClusterResourceQuotaMenuActions = (namespace) => [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (kind, obj) => {\n    return {\n      // t('public~Edit AppliedClusterResourceQuota')\n      labelKey: 'public~Edit AppliedClusterResourceQuota',\n      href: `/k8s/ns/${namespace}/${referenceForModel(AppliedClusterResourceQuotaModel)}/${\n        obj.metadata.name\n      }/yaml`,\n      accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace,\n        verb: 'update',\n      },\n    };\n  },\n  Kebab.factory.Delete,\n];\n\nconst isClusterQuota = (quota) => !quota.metadata.namespace;\n\nconst clusterQuotaReference = referenceForModel(ClusterResourceQuotaModel);\nconst appliedClusterQuotaReference = referenceForModel(AppliedClusterResourceQuotaModel);\n\nconst quotaActions = (quota, customData = undefined) => {\n  if (quota.metadata.namespace) {\n    return resourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'ClusterResourceQuota') {\n    return clusterResourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'AppliedClusterResourceQuota') {\n    return appliedClusterResourceQuotaMenuActions(customData.namespace);\n  }\n};\n\nexport const getQuotaResourceTypes = (quota) => {\n  const specHard = isClusterQuota(quota)\n    ? _.get(quota, 'spec.quota.hard')\n    : _.get(quota, 'spec.hard');\n  return _.keys(specHard).sort();\n};\n\nexport const getACRQResourceUsage = (quota, resourceType, namespace) => {\n  let used;\n  if (namespace) {\n    const allNamespaceData = quota.status?.namespaces;\n    const currentNamespaceData = allNamespaceData.filter((ns) => ns.namespace === namespace);\n    used = {\n      namespace: currentNamespaceData[0]?.status?.used[resourceType],\n      cluster: quota.status?.total?.used[resourceType],\n    };\n  } else {\n    used = { namespace: 0, cluster: quota.status?.total?.used[resourceType] };\n  }\n  const totalUsed = quota.status?.total?.used[resourceType];\n  const max = quota.status?.total?.hard[resourceType] || quota.spec?.quota?.hard[resourceType];\n  const percentNamespace =\n    !max || !used.namespace\n      ? 0\n      : (convertToBaseValue(used.namespace) / convertToBaseValue(max)) * 100;\n  const percentCluster =\n    !max || !used.cluster ? 0 : (convertToBaseValue(used.cluster) / convertToBaseValue(max)) * 100;\n  const percentOtherNamespaces = percentCluster - percentNamespace;\n\n  return {\n    used,\n    totalUsed,\n    max,\n    percent: {\n      namespace: percentNamespace,\n      otherNamespaces: percentOtherNamespaces,\n      unused: 100 - (percentNamespace + percentOtherNamespaces),\n    },\n  };\n};\n\nexport const getResourceUsage = (quota, resourceType) => {\n  const isCluster = isClusterQuota(quota);\n  const statusPath = isCluster ? ['status', 'total', 'hard'] : ['status', 'hard'];\n  const specPath = isCluster ? ['spec', 'quota', 'hard'] : ['spec', 'hard'];\n  const usedPath = isCluster ? ['status', 'total', 'used'] : ['status', 'used'];\n  const max =\n    _.get(quota, [...statusPath, resourceType]) || _.get(quota, [...specPath, resourceType]);\n  const used = _.get(quota, [...usedPath, resourceType]);\n  const percent = !max || !used ? 0 : (convertToBaseValue(used) / convertToBaseValue(max)) * 100;\n\n  return {\n    used,\n    max,\n    percent,\n  };\n};\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst acrqTableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nexport const UsageIcon = ({ percent }) => {\n  let usageIcon = <UnknownIcon />;\n  if (percent === 0) {\n    usageIcon = <OutlinedCircleIcon className=\"co-resource-quota-empty\" />;\n  } else if (percent > 0 && percent < 50) {\n    usageIcon = <ResourcesAlmostEmptyIcon className=\"co-resource-quota-almost-empty\" />;\n  } else if (percent >= 50 && percent < 100) {\n    usageIcon = <ResourcesAlmostFullIcon className=\"co-resource-quota-almost-full\" />;\n  } else if (percent === 100) {\n    usageIcon = <ResourcesFullIcon className=\"co-resource-quota-full\" />;\n  } else if (percent > 100) {\n    usageIcon = <YellowExclamationTriangleIcon className=\"co-resource-quota-exceeded\" />;\n  }\n  return usageIcon;\n};\n\nexport const ResourceUsageRow = ({ quota, resourceType, namespace = undefined }) => {\n  const reference = referenceFor(quota);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  if (isACRQ) {\n    const { used, totalUsed, max, percent } = getACRQResourceUsage(quota, resourceType, namespace);\n    return (\n      <div className=\"row co-m-row\">\n        <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n        <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n          <UsageIcon percent={percent.namespace} />\n        </div>\n        <div className=\"col-sm-2 col-xs-2\">{used.namespace}</div>\n        <div className=\"col-sm-2 col-xs-2\">{totalUsed}</div>\n        <div className=\"col-sm-2 col-xs-2\">{max}</div>\n      </div>\n    );\n  }\n\n  const { used, max, percent } = getResourceUsage(quota, resourceType);\n  return (\n    <div className=\"row co-m-row\">\n      <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n      <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n        <UsageIcon percent={percent} />\n      </div>\n      <div className=\"col-sm-3 col-xs-3\">{used}</div>\n      <div className=\"col-sm-3 col-xs-3\">{max}</div>\n    </div>\n  );\n};\n\nexport const QuotaScopesInline = ({ scopes }) => {\n  return <span>({scopes.join(', ')})</span>;\n};\n\nexport const QuotaScopesList = ({ scopes }) => {\n  const { t } = useTranslation();\n  const quotaScopes = {\n    Terminating: {\n      description: t(\n        'public~Affects pods that have an active deadline. These pods usually include builds, deployers, and jobs.',\n      ),\n    },\n    NotTerminating: {\n      description: t(\n        'public~Affects pods that do not have an active deadline. These pods usually include your applications.',\n      ),\n    },\n    BestEffort: {\n      description: t(\n        'public~Affects pods that do not have resource limits set. These pods have a best effort quality of service.',\n      ),\n    },\n    NotBestEffort: {\n      description: t(\n        'public~Affects pods that have at least one resource limit set. These pods do not have a best effort quality of service.',\n      ),\n    },\n  };\n  return scopes.map((scope) => {\n    const scopeObj = _.get(quotaScopes, scope);\n    return scopeObj ? (\n      <dd key={scope}>\n        <div className=\"co-resource-quota-scope__label\">{scope}</div>\n        <div className=\"co-resource-quota-scope__description\">{scopeObj.description}</div>\n      </dd>\n    ) : (\n      <dd key={scope} className=\"co-resource-quota-scope__label\">\n        {scope}\n      </dd>\n    );\n  });\n};\n\nexport const hasComputeResources = (resourceTypes) => {\n  const chartResourceTypes = [\n    'requests.cpu',\n    'cpu',\n    'limits.cpu',\n    'requests.memory',\n    'memory',\n    'limits.memory',\n  ];\n  return _.intersection(resourceTypes, chartResourceTypes).length > 0;\n};\n\nconst Details = ({ obj: rq }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const resourceTypes = getQuotaResourceTypes(rq);\n  const scopes = rq.spec?.scopes ?? rq.spec?.quota?.scopes;\n  const reference = referenceFor(rq);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  const namespace = params?.ns;\n  let text;\n  let charts;\n  switch (reference) {\n    case appliedClusterQuotaReference:\n      text = t('public~AppliedClusterResourceQuota details');\n      charts = (\n        <AppliedClusterResourceQuotaCharts appliedClusterResourceQuota={rq} namespace={namespace} />\n      );\n      break;\n    case clusterQuotaReference:\n      text = t('public~ClusterResourceQuota details');\n      charts = <ClusterResourceQuotaCharts clusterResourceQuota={rq} />;\n      break;\n    default:\n      text = t('public~ResourceQuota details');\n      charts = <ResourceQuotaCharts resourceQuota={rq} />;\n  }\n  const canListCRQ = useAccessReview({\n    group: ClusterResourceQuotaModel.apiGroup,\n    resource: ClusterResourceQuotaModel.plural,\n    verb: 'list',\n  });\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} />\n        {charts}\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={rq}>\n              {canListCRQ && (\n                <DetailsItem\n                  label={t('public~ClusterResourceQuota')}\n                  obj={rq}\n                  path=\"rq.metadata.name\"\n                >\n                  <ResourceLink kind={clusterQuotaReference} name={rq.metadata.name} />\n                </DetailsItem>\n              )}\n              <DetailsItem\n                label={t('public~Label selector')}\n                obj={rq}\n                path=\"spec.selector.labels.matchLabels\"\n              >\n                <LabelList\n                  kind={appliedClusterQuotaReference}\n                  labels={rq.spec?.selector?.labels?.matchLabels}\n                />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Project annotations')}\n                obj={rq}\n                path=\"spec.selector.annotations\"\n              >\n                <Selector selector={rq.spec?.selector?.annotations} namespace={namespace} />\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          {scopes && (\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('public~Scopes')}</dt>\n                <QuotaScopesList scopes={scopes} />\n              </dl>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} style={{ display: 'block', marginBottom: '20px' }}>\n          <FieldLevelHelp>\n            <p>\n              {t(\n                'public~Requests are the amount of resources you expect to use. These are used when establishing if the cluster can fulfill your Request.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~Limits are a maximum amount of a resource you can consume. Applications consuming more than the Limit may be terminated.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~A cluster administrator can establish limits on both the amount you can request and your limits with a ResourceQuota.',\n              )}\n            </p>\n          </FieldLevelHelp>\n        </SectionHeading>\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          <div className=\"row co-m-table-grid__head\">\n            <div className=\"col-sm-4 col-xs-6\">{t('public~Resource type')}</div>\n            <div className=\"col-sm-2 hidden-xs\">{t('public~Capacity')}</div>\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Used')}\n            </div>\n            {isACRQ && <div className=\"col-sm-2 col-xs-2\">{t('public~Total used')}</div>}\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Max')}\n            </div>\n          </div>\n          <div className=\"co-m-table-grid__body\">\n            {resourceTypes.map((type) => (\n              <ResourceUsageRow key={type} quota={rq} resourceType={type} namespace={namespace} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  let resourcesAtQuota;\n  if (rq.kind === ResourceQuotaModel.kind) {\n    resourcesAtQuota = Object.keys(rq?.status?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.hard[resource], rq?.status?.used?.[resource]) >= 100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  } else {\n    resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n        100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  }\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceFor(rq)}\n          name={rq.metadata.name}\n          namespace={\n            referenceFor(rq) === appliedClusterQuotaReference\n              ? customData.namespace\n              : rq.metadata.namespace\n          }\n          className=\"co-resource-item__resource-name\"\n          dataTest=\"resource-quota-link\"\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        {rq.metadata.namespace ? (\n          <ResourceLink kind=\"Namespace\" name={rq.metadata.namespace} />\n        ) : (\n          t('public~None')\n        )}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={referenceFor(rq)}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst AppliedClusterResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  const resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n    (acc, resource) =>\n      getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n      100\n        ? acc + 1\n        : acc,\n    0,\n  );\n  return (\n    <>\n      <TableData className={acrqTableColumnClasses[0]}>\n        <ResourceLink\n          kind={appliedClusterQuotaReference}\n          name={rq.metadata.name}\n          namespace={customData.namespace}\n          className=\"co-resource-item__resource-name\"\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[1], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[2], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[3], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={acrqTableColumnClasses[4]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={acrqTableColumnClasses[5]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={appliedClusterQuotaReference}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nexport const ResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const ResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: tableColumnClasses[4] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[5] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[6] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ResourceQuotas')}\n      Header={ResourceQuotaTableHeader}\n      Row={ResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const AppliedClusterResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[0] },\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[1] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[2] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: acrqTableColumnClasses[3] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: acrqTableColumnClasses[5] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~AppliedClusterResourceQuotas')}\n      Header={AppliedClusterResourceQuotaTableHeader}\n      Row={AppliedClusterResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const quotaType = (quota) => {\n  if (!quota) {\n    return undefined;\n  }\n  return quota.metadata.namespace ? 'namespace' : 'cluster';\n};\n\n// Split each resource quota into one row per subject\nexport const flatten = (resources) => _.flatMap(resources, (resource) => _.compact(resource.data));\n\nexport const ResourceQuotasPage = connectToFlags(FLAGS.OPENSHIFT)(\n  ({ namespace, flags, mock, showTitle }) => {\n    const { t } = useTranslation();\n    const resources = [{ kind: 'ResourceQuota', namespaced: true }];\n    let rowFilters = null;\n\n    if (flagPending(flags[FLAGS.OPENSHIFT])) {\n      return <LoadingBox />;\n    }\n    if (flags[FLAGS.OPENSHIFT]) {\n      if (!namespace) {\n        resources.push({\n          kind: referenceForModel(ClusterResourceQuotaModel),\n          namespaced: false,\n          optional: true,\n        });\n      } else {\n        resources.push({\n          kind: referenceForModel(AppliedClusterResourceQuotaModel),\n          namespaced: true,\n          namespace,\n          optional: true,\n        });\n      }\n\n      rowFilters = [\n        {\n          filterGroupName: t('public~Role'),\n          type: 'role-kind',\n          reducer: quotaType,\n          items: [\n            {\n              id: 'cluster',\n              title: t('public~Cluster-wide {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n            {\n              id: 'namespace',\n              title: t('public~Namespace {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n          ],\n        },\n      ];\n    }\n    const createNS = namespace || 'default';\n    const accessReview = {\n      model: ResourceQuotaModel,\n      namespace: createNS,\n    };\n    return (\n      <MultiListPage\n        canCreate={true}\n        createAccessReview={accessReview}\n        createButtonText={t('public~Create ResourceQuota')}\n        createProps={{ to: `/k8s/ns/${createNS}/resourcequotas/~new` }}\n        ListComponent={ResourceQuotasList}\n        resources={resources}\n        label={t(ResourceQuotaModel.labelPluralKey)}\n        namespace={namespace}\n        flatten={flatten}\n        title={t(ResourceQuotaModel.labelPluralKey)}\n        rowFilters={rowFilters}\n        mock={mock}\n        showTitle={showTitle}\n      />\n    );\n  },\n);\n\nexport const AppliedClusterResourceQuotasPage = ({ namespace, mock, showTitle }) => {\n  const { t } = useTranslation();\n  const resources = [\n    {\n      kind: referenceForModel(AppliedClusterResourceQuotaModel),\n      namespaced: true,\n      namespace,\n      optional: true,\n    },\n  ];\n\n  return (\n    <MultiListPage\n      ListComponent={AppliedClusterResourceQuotasList}\n      resources={resources}\n      label={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      namespace={namespace}\n      flatten={flatten}\n      title={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      mock={mock}\n      showTitle={showTitle}\n    />\n  );\n};\n\nexport const ResourceQuotasDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={resourceQuotaMenuActions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasDetailsPage = (props) => {\n  const params = useParams();\n  const actions = appliedClusterResourceQuotaMenuActions(params?.ns);\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={actions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n","/* eslint-disable tsdoc/syntax */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Alert, Button, Tooltip } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Status,\n  getRequester,\n  getDescription,\n  FLAGS,\n  GreenCheckCircleIcon,\n  getName,\n  COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n  COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n  useUserSettingsCompatibility,\n  isModifiedEvent,\n  REQUESTER_FILTER,\n  useFlag,\n  usePrometheusGate,\n} from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport * as k8sActions from '@console/dynamic-plugin-sdk/src/app/k8s/actions/k8s';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport {\n  ConsoleLinkModel,\n  NamespaceModel,\n  ProjectModel,\n  SecretModel,\n  ServiceAccountModel,\n} from '../models';\nimport { coFetchJSON } from '../co-fetch';\nimport { k8sGet, referenceForModel } from '../module/k8s';\nimport * as UIActions from '../actions/ui';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  DetailsItem,\n  ExternalLink,\n  Kebab,\n  LabelList,\n  LoadingInline,\n  ConsoleEmptyState,\n  ResourceIcon,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  formatBytesAsMiB,\n  formatCores,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  navFactory,\n  useAccessReview,\n} from './utils';\nimport { deleteNamespaceModal, configureNamespacePullSecretModal } from './modals';\nimport { RoleBindingsPage } from './RBAC';\nimport { Bar, Area, PROMETHEUS_BASE_PATH } from './graphs';\nimport { flagPending } from '../reducers/features';\nimport { OpenShiftGettingStarted } from './start-guide';\nimport { OverviewListPage } from './overview';\nimport {\n  getNamespaceDashboardConsoleLinks,\n  ProjectDashboard,\n} from './dashboard/project-dashboard/project-dashboard';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\n\nimport {\n  isCurrentUser,\n  isOtherUser,\n  isSystemNamespace,\n} from '@console/shared/src/components/namespace';\nimport { useCreateNamespaceModal } from '@console/shared/src/hooks/useCreateNamespaceModal';\nimport { useCreateProjectModal } from '@console/shared/src/hooks/useCreateProjectModal';\n\nconst getDisplayName = (obj) =>\n  _.get(obj, ['metadata', 'annotations', 'openshift.io/display-name']);\n\n// KKD CHECK TO SEE THAT ITEMS CHANGE WHEN LANGUAGE CHANGES\nconst getFilters = () => [\n  {\n    filterGroupName: i18next.t('public~Requester'),\n    type: 'requester',\n    reducer: (namespace) => {\n      const name = namespace.metadata?.name;\n      const requester = namespace.metadata?.annotations?.['openshift.io/requester'];\n      if (isCurrentUser(requester)) {\n        return REQUESTER_FILTER.ME;\n      }\n      if (isOtherUser(requester, name)) {\n        return REQUESTER_FILTER.USER;\n      }\n      if (isSystemNamespace({ title: name })) {\n        return REQUESTER_FILTER.SYSTEM;\n      }\n    },\n    items: [\n      { id: REQUESTER_FILTER.ME, title: i18next.t('public~Me') },\n      { id: REQUESTER_FILTER.USER, title: i18next.t('public~User') },\n      { id: REQUESTER_FILTER.SYSTEM, title: i18next.t('public~System'), hideIfEmpty: true },\n    ],\n  },\n];\n\nexport const deleteModal = (kind, ns) => {\n  const { labelKey, labelKind, weight, accessReview } = Kebab.factory.Delete(kind, ns);\n  let callback = undefined;\n  let tooltip;\n  let label;\n\n  if (ns.metadata.name === 'default') {\n    tooltip = `${kind.label} default cannot be deleted`;\n  } else if (ns.status?.phase === 'Terminating') {\n    tooltip = `${kind.label} is already terminating`;\n  } else {\n    callback = () => deleteNamespaceModal({ kind, resource: ns });\n  }\n  if (tooltip) {\n    label = (\n      <div className=\"dropdown__disabled\">\n        <Tooltip content={tooltip}>\n          <span>{i18next.t(labelKey, labelKind)}</span>\n        </Tooltip>\n      </div>\n    );\n  }\n  return { label, labelKey, labelKind, weight, callback, accessReview };\n};\n\nconst nsMenuActions = [\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  Kebab.factory.Edit,\n  deleteModal,\n];\n\nconst fetchNamespaceMetrics = () => {\n  const metrics = [\n    {\n      key: 'memory',\n      query: 'sum by(namespace) (container_memory_working_set_bytes{container=\"\",pod!=\"\"})',\n    },\n    {\n      key: 'cpu',\n      query: 'namespace:container_cpu_usage:sum',\n    },\n  ];\n  const promises = metrics.map(({ key, query }) => {\n    const url = `${PROMETHEUS_BASE_PATH}/api/v1/query?&query=${query}`;\n    return coFetchJSON(url).then(({ data: { result } }) => {\n      return result.reduce((acc, data) => {\n        const value = Number(data.value[1]);\n        return _.set(acc, [key, data.metric.namespace], value);\n      }, {});\n    });\n  });\n  return (\n    Promise.all(promises)\n      .then((data) => _.assign({}, ...data))\n      // eslint-disable-next-line no-console\n      .catch(console.error)\n  );\n};\n\nconst namespaceColumnInfo = Object.freeze({\n  name: {\n    classes: '',\n    id: 'name',\n  },\n  displayName: {\n    classes: 'co-break-word',\n    id: 'displayName',\n  },\n  status: {\n    classes: '',\n    id: 'status',\n  },\n  requester: {\n    classes: '',\n    id: 'requester',\n  },\n  memory: {\n    classes: '',\n    id: 'memory',\n  },\n  cpu: {\n    classes: '',\n    id: 'cpu',\n  },\n  created: {\n    classes: '',\n    id: 'created',\n  },\n  description: {\n    classes: '',\n    id: 'description',\n  },\n  labels: {\n    classes: '',\n    id: 'labels',\n  },\n});\n\nconst NamespacesTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    {\n      title: i18next.t('public~Memory'),\n      id: namespaceColumnInfo.memory.id,\n      sortFunc: 'namespaceMemory',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.memory.classes },\n    },\n    {\n      title: i18next.t('public~CPU'),\n      id: namespaceColumnInfo.cpu.id,\n      sortFunc: 'namespaceCPU',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.cpu.classes },\n    },\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    { title: '', props: { className: Kebab.columnClass } },\n  ];\n};\nNamespacesTableHeader.displayName = 'NamespacesTableHeader';\n\nconst NamespacesColumnManagementID = referenceForModel(NamespaceModel);\n\nconst getNamespacesSelectedColumns = () => {\n  return new Set(\n    NamespacesTableHeader().reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst NamespacesTableRow = ({ obj: ns, customData: { tableColumns } }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(ns);\n  const requester = getRequester(ns);\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(ns);\n  const labels = ns.metadata.labels;\n  const columns = tableColumns?.length > 0 ? new Set(tableColumns) : getNamespacesSelectedColumns();\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        <ResourceLink kind=\"Namespace\" name={ns.metadata.name} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(ns) || <span className=\"text-muted\">{t('public~No display name')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.status.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={ns.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.memory.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.memory.id}\n      >\n        {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.cpu.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.cpu.id}\n      >\n        {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={ns.metadata.creationTimestamp} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.description.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.description.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.labels.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.labels.id}\n      >\n        <LabelList kind=\"Namespace\" labels={labels} />\n      </TableData>\n      <TableData className={Kebab.columnClass}>\n        <ResourceKebab actions={nsMenuActions} kind=\"Namespace\" resource={ns} />\n      </TableData>\n    </>\n  );\n};\n\nconst NamespacesNotFoundMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No Namespaces found')} Icon={SearchIcon}>\n      {t('public~No results were found for the requested Namespaces.')}\n    </ConsoleEmptyState>\n  );\n};\n\nconst NamespacesEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Namespaces')} Icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const NamespacesList = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    const updateMetrics = () =>\n      fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n    updateMetrics();\n    const id = setInterval(updateMetrics, 30 * 1000);\n    return () => clearInterval(id);\n  }, [dispatch]);\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : null;\n\n  const customData = React.useMemo(\n    () => ({\n      tableColumns: tableColumns?.[NamespacesColumnManagementID],\n    }),\n    [tableColumns],\n  );\n\n  return (\n    <Table\n      {...props}\n      activeColumns={selectedColumns}\n      columnManagementID={NamespacesColumnManagementID}\n      aria-label={t('public~Namespaces')}\n      Header={NamespacesTableHeader}\n      Row={NamespacesTableRow}\n      customData={customData}\n      virtualize\n      EmptyMsg={NamespacesEmptyMessage}\n      NoDataEmptyMsg={NamespacesNotFoundMessage}\n    />\n  );\n};\n\nexport const NamespacesPage = (props) => {\n  const { t } = useTranslation();\n  const createNamespaceModal = useCreateNamespaceModal();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : getNamespacesSelectedColumns();\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={NamespacesList}\n      canCreate={true}\n      createHandler={() => createNamespaceModal()}\n      columnLayout={{\n        columns: NamespacesTableHeader(null, t).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: NamespacesColumnManagementID,\n        selectedColumns,\n        type: t('public~Namespaces'),\n      }}\n    />\n  );\n};\n\nexport const projectMenuActions = [Kebab.factory.Edit, deleteModal];\n\nconst projectColumnManagementID = referenceForModel(ProjectModel);\n\nconst projectTableHeader = ({ showMetrics, showActions }) => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    ...(showMetrics\n      ? [\n          {\n            title: i18next.t('public~Memory'),\n            id: namespaceColumnInfo.memory.id,\n            sortFunc: 'namespaceMemory',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.memory.classes },\n          },\n          {\n            title: i18next.t('public~CPU'),\n            id: namespaceColumnInfo.cpu.id,\n            sortFunc: 'namespaceCPU',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.cpu.classes },\n          },\n        ]\n      : []),\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    ...(showActions ? [{ title: '', props: { className: Kebab.columnClass } }] : []),\n  ];\n};\n\nconst getProjectSelectedColumns = ({ showMetrics, showActions }) => {\n  return new Set(\n    projectTableHeader({ showMetrics, showActions }).reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst ProjectLink = ({ project }) => {\n  const dispatch = useDispatch();\n  const [, setLastNamespace] = useUserSettingsCompatibility(\n    LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n    LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  );\n  const url = new URL(window.location.href);\n  const params = new URLSearchParams(url.search);\n  const basePath = url.pathname;\n  if (params.has('project-name')) {\n    // clear project-name query param from the url\n    params.delete('project-name');\n  }\n  const newUrl = {\n    search: `?${params.toString()}`,\n    hash: url.hash,\n  };\n  const namespacedPath = UIActions.formatNamespaceRoute(project.metadata.name, basePath, newUrl);\n\n  const handleClick = (e) => {\n    // Don't set last namespace if its modified click (Ctrl+Click).\n    if (isModifiedEvent(e)) {\n      return;\n    }\n    setLastNamespace(project.metadata.name);\n    // update last namespace in session storage (persisted only for current browser tab). Used to remember/restore if\n    // \"All Projects\" was selected when returning to the list view (typically from details view) via breadcrumb or\n    // sidebar navigation\n    sessionStorage.setItem(LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY, project.metadata.name);\n    // clear project-name filter when active namespace is changed\n    dispatch(k8sActions.filterList(referenceForModel(ProjectModel), 'project-name', ''));\n  };\n\n  return (\n    <span className=\"co-resource-item co-resource-item--truncate\">\n      <ResourceIcon kind=\"Project\" />\n      <Link to={namespacedPath} className=\"co-resource-item__resource-name\" onClick={handleClick}>\n        {project.metadata.name}\n      </Link>\n    </span>\n  );\n};\nconst projectHeaderWithoutActions = () =>\n  projectTableHeader({ showMetrics: false, showActions: false });\n\nconst ProjectTableRow = ({ obj: project, customData = {} }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(project);\n  const requester = getRequester(project);\n  const {\n    ProjectLinkComponent,\n    actionsEnabled = true,\n    showMetrics,\n    showActions,\n    isColumnManagementEnabled = true,\n    tableColumns,\n  } = customData;\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(project);\n  const labels = project.metadata.labels;\n  const columns = isColumnManagementEnabled\n    ? tableColumns?.length > 0\n      ? new Set(tableColumns)\n      : getProjectSelectedColumns({ showMetrics, showActions })\n    : null;\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        {customData && ProjectLinkComponent ? (\n          <ProjectLinkComponent project={project} />\n        ) : (\n          <span className=\"co-resource-item\">\n            <ResourceLink kind=\"Project\" name={project.metadata.name} />\n          </span>\n        )}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(project) || (\n            <span className=\"text-muted\">{t('public~No display name')}</span>\n          )}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.status.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={project.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      {showMetrics && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.memory.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.memory.id}\n          >\n            {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.cpu.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.cpu.id}\n          >\n            {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n          </TableData>\n        </>\n      )}\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={project.metadata.creationTimestamp} />\n      </TableData>\n      {isColumnManagementEnabled && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.description.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.description.id}\n          >\n            <span className=\"co-break-word co-line-clamp\">\n              {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n            </span>\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.labels.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.labels.id}\n          >\n            <LabelList labels={labels} kind=\"Project\" />\n          </TableData>\n        </>\n      )}\n      {actionsEnabled && (\n        <TableData className={Kebab.columnClass}>\n          <ResourceKebab actions={projectMenuActions} kind=\"Project\" resource={project} />\n        </TableData>\n      )}\n    </>\n  );\n};\nProjectTableRow.displayName = 'ProjectTableRow';\n\nexport const ProjectsTable = (props) => {\n  const { t } = useTranslation();\n  const customData = React.useMemo(\n    () => ({\n      ProjectLinkComponent: ProjectLink,\n      actionsEnabled: false,\n      isColumnManagementEnabled: false,\n    }),\n    [],\n  );\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Projects')}\n      Header={projectHeaderWithoutActions}\n      Row={ProjectTableRow}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nconst headerWithMetrics = () => projectTableHeader({ showMetrics: true, showActions: true });\nconst headerNoMetrics = () => projectTableHeader({ showMetrics: false, showActions: true });\n\nconst ProjectNotFoundMessage = () => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const canCreate = canCreateNs || canCreateProject;\n  return (\n    <ConsoleEmptyState title={t('public~Welcome to OpenShift')}>\n      <OpenShiftGettingStarted canCreate={canCreate} />\n    </ConsoleEmptyState>\n  );\n};\n\nconst ProjectEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Projects')} icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const ProjectList = ({ data, ...tableProps }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const customData = React.useMemo(\n    () => ({\n      showMetrics,\n      tableColumns: tableColumns?.[projectColumnManagementID],\n    }),\n    [showMetrics, tableColumns],\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    if (showMetrics) {\n      const updateMetrics = () =>\n        fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n      updateMetrics();\n      const id = setInterval(updateMetrics, 30 * 1000);\n      return () => clearInterval(id);\n    }\n  }, [dispatch, showMetrics]);\n  const selectedColumns =\n    tableColumns?.[projectColumnManagementID]?.length > 0\n      ? new Set(tableColumns[projectColumnManagementID])\n      : null;\n\n  // Don't render the table until we know whether we can get metrics. It's\n  // not possible to change the table headers once the component is mounted.\n  if (flagPending(canGetNS)) {\n    return null;\n  }\n\n  return (\n    <Table\n      {...tableProps}\n      activeColumns={selectedColumns}\n      columnManagementID={projectColumnManagementID}\n      aria-label={t('public~Projects')}\n      data={data}\n      Header={showMetrics ? headerWithMetrics : headerNoMetrics}\n      Row={ProjectTableRow}\n      NoDataEmptyMsg={ProjectNotFoundMessage}\n      EmptyMsg={ProjectEmptyMessage}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nexport const ProjectsPage = (props) => {\n  const { t } = useTranslation();\n  const createProjectModal = useCreateProjectModal();\n  // Skip self-subject access review for projects since they use a special project request API.\n  // `FLAGS.CAN_CREATE_PROJECT` determines if the user can create projects.\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const showActions = showMetrics;\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={ProjectList}\n      canCreate={canCreateProject}\n      createHandler={() => createProjectModal()}\n      filterLabel={t('public~by name or display name')}\n      skipAccessReview\n      textFilter=\"project-name\"\n      kind=\"Project\"\n      columnLayout={{\n        columns: projectTableHeader({ showMetrics, showActions }).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: projectColumnManagementID,\n        selectedColumns:\n          tableColumns?.[projectColumnManagementID]?.length > 0\n            ? new Set(tableColumns[projectColumnManagementID])\n            : null,\n        type: t('public~Project'),\n      }}\n    />\n  );\n};\n\n/** @type {React.SFC<{namespace: K8sResourceKind}>} */\nexport const PullSecret = (props) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [error, setError] = React.useState(false);\n  const { t } = useTranslation();\n  const { namespace, canViewSecrets } = props;\n\n  React.useEffect(() => {\n    k8sGet(ServiceAccountModel, 'default', namespace.metadata.name, {})\n      .then((serviceAccount) => {\n        setIsLoading(false);\n        setData(serviceAccount.imagePullSecrets ?? []);\n        setError(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setData([]);\n        setError(true);\n        // eslint-disable-next-line no-console\n        console.error('Error getting default ServiceAccount', err);\n      });\n  }, [namespace.metadata.name]);\n\n  const modal = () => configureNamespacePullSecretModal({ namespace, pullSecret: undefined });\n\n  const secrets = () => {\n    if (error) {\n      return <Alert variant=\"danger\" isInline title={t('Error loading default pull Secrets')} />;\n    }\n    return data.length > 0 ? (\n      data.map((secret) => (\n        <div key={secret.name}>\n          <ResourceLink\n            kind=\"Secret\"\n            name={secret.name}\n            namespace={namespace.metadata.name}\n            linkTo={canViewSecrets}\n          />\n        </div>\n      ))\n    ) : (\n      <Button variant=\"link\" type=\"button\" isInline onClick={modal}>\n        {t('public~Not configured')}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <dt>{t('public~Default pull Secret', { count: data.length })}</dt>\n      <dd>{isLoading ? <LoadingInline /> : secrets()}</dd>\n    </>\n  );\n};\n\nexport const NamespaceLineCharts = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~CPU usage')}\n          humanize={humanizeCpuCores}\n          namespace={ns.metadata.name}\n          query={`namespace:container_cpu_usage:sum{namespace='${ns.metadata.name}'}`}\n        />\n      </div>\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~Memory usage')}\n          humanize={humanizeBinaryBytes}\n          byteDataType={ByteDataTypes.BinaryBytes}\n          namespace={ns.metadata.name}\n          query={`sum by(namespace) (container_memory_working_set_bytes{namespace=\"${ns.metadata.name}\",container=\"\",pod!=\"\"})`}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const TopPodsBarChart = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <Bar\n      title={t('public~Memory usage by pod (top 10)')}\n      namespace={ns.metadata.name}\n      query={`sort_desc(topk(10, sum by (pod)(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace=\"${ns.metadata.name}\"})))`}\n      humanize={humanizeBinaryBytes}\n      metric=\"pod\"\n    />\n  );\n};\n\nconst ResourceUsage = ({ ns }) => {\n  const { t } = useTranslation();\n  const isPrometheusAvailable = usePrometheusGate();\n  return isPrometheusAvailable ? (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('public~Resource usage')} />\n      <NamespaceLineCharts ns={ns} />\n      <TopPodsBarChart ns={ns} />\n    </div>\n  ) : null;\n};\n\nexport const NamespaceSummary = ({ ns }) => {\n  const { t } = useTranslation();\n  const displayName = getDisplayName(ns);\n  const description = getDescription(ns);\n  const requester = getRequester(ns);\n  const serviceMeshEnabled = ns.metadata?.labels?.['maistra.io/member-of'];\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    verb: 'patch',\n    namespace: ns.metadata.name,\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-xs-12\">\n        {/* Labels aren't editable on kind Project, only Namespace. */}\n        <ResourceSummary resource={ns} showLabelEditor={ns.kind === 'Namespace'}>\n          <dt>{t('public~Display name')}</dt>\n          <dd\n            className={classNames({\n              'text-muted': !displayName,\n            })}\n          >\n            {displayName || t('public~No display name')}\n          </dd>\n          <dt>{t('public~Description')}</dt>\n          <dd>\n            <p\n              className={classNames({\n                'text-muted': !description,\n                'co-pre-wrap': description,\n                'co-namespace-summary__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </p>\n          </dd>\n          {requester && <dt>Requester</dt>}\n          {requester && <dd>{requester}</dd>}\n        </ResourceSummary>\n      </div>\n      <div className=\"col-sm-6 col-xs-12\">\n        <dl className=\"co-m-pane__details\">\n          <DetailsItem label={t('public~Status')} obj={ns} path=\"status.phase\">\n            <Status status={ns.status?.phase} />\n          </DetailsItem>\n          <PullSecret namespace={ns} canViewSecrets={canListSecrets} />\n          <dt>{t('public~NetworkPolicies')}</dt>\n          <dd>\n            <Link to={`/k8s/ns/${ns.metadata.name}/networkpolicies`}>\n              {t('public~NetworkPolicies')}\n            </Link>\n          </dd>\n          {serviceMeshEnabled && (\n            <>\n              <dt>{t('public~Service mesh')}</dt>\n              <dd>\n                <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n              </dd>\n            </>\n          )}\n        </dl>\n      </div>\n    </div>\n  );\n};\n\nexport const NamespaceDetails = ({ obj: ns, customData }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const links = getNamespaceDashboardConsoleLinks(ns, consoleLinks);\n  return (\n    <div>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project details')}</title>\n        </Helmet>\n      )}\n      <div className=\"co-m-pane__body\">\n        {!customData?.hideHeading && (\n          <SectionHeading text={t('public~{{kind}} details', { kind: ns.kind })} />\n        )}\n        <NamespaceSummary ns={ns} />\n      </div>\n      {ns.kind === 'Namespace' && <ResourceUsage ns={ns} />}\n      {!_.isEmpty(links) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Launcher')} />\n          <ul className=\"pf-v5-c-list pf-m-plain\">\n            {_.map(_.sortBy(links, 'spec.text'), (link) => {\n              return (\n                <li key={link.metadata.uid}>\n                  <ExternalLink href={link.spec.href} text={link.spec.text} />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst RolesPage = ({ obj: { metadata } }) => {\n  return (\n    <RoleBindingsPage\n      createPath={`/k8s/ns/${metadata.name}/rolebindings/~new`}\n      namespace={metadata.name}\n      showTitle={false}\n    />\n  );\n};\n\nexport const NamespacesDetailsPage = (props) => (\n  <DetailsPage\n    {...props}\n    menuActions={nsMenuActions}\n    pages={[\n      navFactory.details(NamespaceDetails),\n      navFactory.editYaml(),\n      navFactory.roles(RolesPage),\n    ]}\n  />\n);\n\nexport const ProjectsDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={projectMenuActions}\n      pages={[\n        {\n          href: '',\n          // t('public~Overview')\n          nameKey: 'public~Overview',\n          component: ProjectDashboard,\n        },\n        {\n          href: 'details',\n          // t('public~Details')\n          nameKey: 'public~Details',\n          component: NamespaceDetails,\n        },\n        navFactory.editYaml(),\n        navFactory.workloads(OverviewListPage),\n        navFactory.roles(RolesPage),\n      ]}\n    />\n  );\n};\n","import { nodeStatus } from '@console/app/src/status/node';\nimport { volumeSnapshotStatus } from '@console/app/src/status/snapshot';\nimport { podPhaseFilterReducer } from '@console/internal/module/k8s';\nimport { StatusGroupMapper } from './InventoryItem';\nimport { InventoryStatusGroup } from './status-group';\n\nconst POD_PHASE_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Running', 'Succeeded'],\n  [InventoryStatusGroup.ERROR]: ['CrashLoopBackOff', 'Failed'],\n  [InventoryStatusGroup.PROGRESS]: ['Terminating', 'Pending'],\n  [InventoryStatusGroup.WARN]: ['Unknown'],\n};\n\nconst PVC_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Bound'],\n  [InventoryStatusGroup.ERROR]: ['Lost'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n};\n\nconst PV_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Available', 'Bound'],\n  [InventoryStatusGroup.PROGRESS]: ['Released'],\n  [InventoryStatusGroup.ERROR]: ['Failed'],\n};\n\nconst NODE_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Not Ready'],\n};\n\nconst VS_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n  [InventoryStatusGroup.ERROR]: ['Error'],\n};\n\nexport const getStatusGroups = (resources, mapping, mapper, filterType) => {\n  const groups = {\n    [InventoryStatusGroup.UNKNOWN]: {\n      statusIDs: [],\n      count: 0,\n    },\n  };\n  Object.keys(mapping).forEach((key) => {\n    groups[key] = {\n      statusIDs: [...mapping[key]],\n      count: 0,\n      filterType,\n    };\n  });\n\n  resources.forEach((resource) => {\n    const status = mapper(resource);\n    const group =\n      Object.keys(mapping).find((key) => mapping[key].includes(status)) ||\n      InventoryStatusGroup.UNKNOWN;\n    groups[group].count++;\n  });\n\n  return groups;\n};\n\nexport const getPodStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, POD_PHASE_GROUP_MAPPING, podPhaseFilterReducer, 'pod-status');\nexport const getNodeStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, NODE_STATUS_GROUP_MAPPING, nodeStatus, 'node-status');\nexport const getPVCStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PVC_STATUS_GROUP_MAPPING, (pvc) => pvc.status.phase, 'pvc-status');\nexport const getPVStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PV_STATUS_GROUP_MAPPING, (pv) => pv.status.phase, 'pv-status');\nexport const getVSStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, VS_STATUS_GROUP_MAPPING, volumeSnapshotStatus, 'snapshot-status');\n","export * from './CronJobSideBarDetails';\nexport * from './DaemonSetSideBarDetails';\nexport * from './DeploymentConfigSideBarDetails';\nexport * from './DeploymentSideBarDetails';\nexport * from './JobSideBarDetails';\nexport * from './pods-tab-section';\nexport * from './StatefulSetSideBarDetails';\nexport * from './workload-resource-link';\nexport * from './utils';\nexport * from './build-tab-section';\nexport * from './network-tab-section';\nexport * from './jobs-tab-section';\nexport * from './PodSideBarDetails';\nexport * from './resource-alert';\nexport * from './vpa-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import { useMemo } from 'react';\nimport { Edge, GraphElement } from '@patternfly/react-topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { TYPE_WORKLOAD, TYPE_CONNECTS_TO } from '../const';\nimport { getResource } from '../utils';\nimport { DeleteConnectorAction, MoveConnectorAction } from './edgeActions';\nimport { getModifyApplicationAction } from './modify-application';\n\nexport const useTopologyWorkloadActionProvider = (element: GraphElement) => {\n  const resource = getResource(element);\n  const actions = useMemo(() => {\n    if (element.getType() !== TYPE_WORKLOAD) return undefined;\n    if (!resource) {\n      return [];\n    }\n    const k8sKind = modelFor(referenceFor(resource));\n    return [getModifyApplicationAction(k8sKind, resource)];\n  }, [element, resource]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useTopologyVisualConnectorActionProvider = (element: Edge) => {\n  const resource = getResource(element.getSource?.());\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource ?? {}));\n  const actions = useMemo(() => {\n    if (!kindObj || element.getType() !== TYPE_CONNECTS_TO) return undefined;\n    return [MoveConnectorAction(kindObj, element), DeleteConnectorAction(kindObj, element)];\n  }, [element, kindObj]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, !inFlight, undefined];\n  }, [actions, inFlight]);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport {\n  usePodsWatcher,\n  PodRing,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  usePrometheusGate,\n} from '@console/shared';\nimport { K8sResourceKind, referenceFor, referenceForModel, DaemonSetKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  detailsPage,\n  LabelList,\n  navFactory,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  LoadingInline,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nexport const menuActions: KebabAction[] = [\n  AddHealthChecks,\n  Kebab.factory.AddStorage,\n  ...Kebab.getExtensionsActionsForKind(DaemonSetModel),\n  EditHealthChecks,\n  ...Kebab.factory.common,\n];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem\n        label={t('public~Current count')}\n        obj={ds}\n        path=\"status.currentNumberScheduled\"\n      />\n      <DetailsItem\n        label={t('public~Desired count')}\n        obj={ds}\n        path=\"status.desiredNumberScheduled\"\n      />\n      <PodDisruptionBudgetField obj={ds} />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const { podData, loaded } = usePodsWatcher(daemonset);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DaemonSet details')} />\n        {loaded ? (\n          <PodRing\n            key={daemonset.metadata.uid}\n            pods={podData?.pods || []}\n            obj={daemonset}\n            resourceKind={DaemonSetModel}\n            enableScaling={false}\n          />\n        ) : (\n          <LoadingInline />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary\n              resource={daemonset}\n              showPodSelector\n              showNodeSelector\n              showTolerations\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst DaemonSetTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(daemonset);\n  const context = { [resourceKind]: daemonset };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={daemonset.metadata.name}\n          namespace={daemonset.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{currentNumber}} of {{desiredNumber}} pods', {\n            currentNumber: daemonset.status.currentNumberScheduled,\n            desiredNumber: daemonset.status.desiredNumberScheduled,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const DaemonSets: React.FC = (props) => {\n  const { t } = useTranslation();\n  const DaemonSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DaemonSets')}\n      Header={DaemonSetTableHeader}\n      Row={DaemonSetTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = (props) => (\n  <ListPage canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />\n);\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = (props) => (\n  <PodsComponent {...props} showNodes />\n);\n\nexport const DaemonSetsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(detailsPage(DaemonSetDetails)),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        navFactory.pods(DaemonSetPods),\n        navFactory.envEditor(EnvironmentTab),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\ntype DaemonSetDetailsListProps = {\n  ds: DaemonSetKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: DaemonSetKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","import * as React from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { FileUpload, isFileUpload, useResolvedExtensions } from '@console/dynamic-plugin-sdk';\nimport { useToast } from '@console/shared/src/components/toast';\nimport { useActiveNamespace } from '@console/shared/src/hooks/useActiveNamespace';\nimport { getRequiredFileUploadExtension } from './file-upload-utils';\n\nexport type FileUploadContextType = {\n  extensions: string[];\n  fileUpload: File;\n  setFileUpload: (file: File) => void;\n};\n\nexport const FileUploadContext = React.createContext<FileUploadContextType>({\n  fileUpload: undefined,\n  setFileUpload: () => {},\n  extensions: [],\n});\n\nexport const FileUploadContextProvider = FileUploadContext.Provider;\n\nexport const useValuesFileUploadContext = (): FileUploadContextType => {\n  const { t } = useTranslation();\n  const [fileUploadExtensions, resolved] = useResolvedExtensions<FileUpload>(isFileUpload);\n  const toastContext = useToast();\n  const [namespace] = useActiveNamespace();\n  const [file, setFile] = React.useState<File>(undefined);\n  const fileExtensions = React.useMemo(\n    () =>\n      resolved\n        ? _.flatten(fileUploadExtensions.map((e) => e.properties.fileExtensions)).map((ext) =>\n            ext.toLowerCase(),\n          )\n        : [],\n    [fileUploadExtensions, resolved],\n  );\n\n  const setFileUpload = React.useCallback(\n    (f: File): void => {\n      if (!f) {\n        setFile(undefined);\n      } else if (fileExtensions.length > 0) {\n        const requiredFileExtension = getRequiredFileUploadExtension(fileUploadExtensions, f.name);\n        if (requiredFileExtension) {\n          setFile(f);\n          requiredFileExtension.properties.handler(f, namespace);\n        } else {\n          toastContext.addToast({\n            variant: AlertVariant.warning,\n            title: t('console-app~Incompatible file type'),\n            content: t(\n              'console-app~{{fileName}} cannot be uploaded. Only {{fileExtensions}} files are supported currently. Try another file.',\n              {\n                fileName: f.name,\n                fileExtensions: fileExtensions.toString(),\n              },\n            ),\n            timeout: true,\n            dismissible: true,\n          });\n        }\n      }\n    },\n    [setFile, fileExtensions, t, namespace, toastContext, fileUploadExtensions],\n  );\n\n  return {\n    fileUpload: file,\n    setFileUpload,\n    extensions: fileExtensions,\n  };\n};\n","import * as React from 'react';\nimport { Firehose } from '@console/internal/components/utils';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { OverviewItem, usePodsWatcher } from '@console/shared';\nimport MonitoringOverview from './MonitoringOverview';\n\ntype MonitoringTabProps = {\n  item: OverviewItem;\n};\n\nconst MonitoringTab: React.FC<MonitoringTabProps> = ({ item }) => {\n  const { monitoringAlerts } = item;\n  const {\n    kind,\n    metadata: { uid, name, namespace },\n  } = item.obj;\n  const { podData, loadError, loaded } = usePodsWatcher(item.obj, item.obj.kind, namespace);\n\n  const resources = React.useMemo(() => {\n    const res = [\n      {\n        isList: true,\n        kind: 'Event',\n        namespace,\n        prop: 'resourceEvents',\n        fieldSelector: `involvedObject.uid=${uid},involvedObject.name=${name},involvedObject.kind=${kind}`,\n      },\n    ];\n\n    if (loaded && !loadError && podData?.pods) {\n      podData.pods.forEach((pod) => {\n        const fieldSelector = `involvedObject.uid=${pod.metadata.uid},involvedObject.name=${pod.metadata.name},involvedObject.kind=${PodModel.kind}`;\n        res.push({\n          isList: true,\n          kind: 'Event',\n          namespace: pod.metadata.namespace,\n          prop: pod.metadata.uid,\n          fieldSelector,\n        });\n      });\n    }\n    return res;\n  }, [kind, uid, name, namespace, loaded, loadError, podData]);\n\n  return (\n    <Firehose resources={resources}>\n      <MonitoringOverview\n        resource={item.obj}\n        pods={(podData?.pods as PodKind[]) || []}\n        monitoringAlerts={monitoringAlerts}\n      />\n    </Firehose>\n  );\n};\n\nexport default MonitoringTab;\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../module/k8s';\n\nexport const ProjectDashboardContext = React.createContext<ProjectDashboardContext>({});\n\n// eslint-disable-next-line no-redeclare\ntype ProjectDashboardContext = {\n  obj?: K8sResourceKind;\n  namespaceLinks?: K8sResourceKind[];\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\n\nimport { RESULTS_TYPE } from '../../reducers/dashboards';\nimport { NotificationAlerts } from '../../reducers/observe';\nimport {\n  StopWatchPrometheusAction,\n  stopWatchPrometheusQuery,\n  stopWatchURL,\n  StopWatchURLAction,\n  watchPrometheusQuery,\n  WatchPrometheusQueryAction,\n  watchURL,\n  WatchURLAction,\n  getQueryKey,\n} from '../../actions/dashboards';\nimport { RootState } from '../../redux';\nimport { Firehose, FirehoseResource, FirehoseResult } from '../utils';\nimport { K8sResourceKind, AppliedClusterResourceQuotaKind } from '../../module/k8s';\nimport { PrometheusResponse } from '../graphs';\nimport { Fetch, RequestMap } from '@console/dynamic-plugin-sdk/src/api/internal-types';\n\nconst mapDispatchToProps: DispatchToProps = (dispatch) => ({\n  watchURL: (url, fetch) => dispatch(watchURL(url, fetch)),\n  stopWatchURL: (url) => dispatch(stopWatchURL(url)),\n  watchPrometheusQuery: (query, namespace, timespan) =>\n    dispatch(watchPrometheusQuery(query, namespace, timespan)),\n  stopWatchPrometheusQuery: (query, timespan) =>\n    dispatch(stopWatchPrometheusQuery(query, timespan)),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  [RESULTS_TYPE.URL]: state.dashboards.get(RESULTS_TYPE.URL),\n  [RESULTS_TYPE.PROMETHEUS]: state.dashboards.get(RESULTS_TYPE.PROMETHEUS) as RequestMap<\n    PrometheusResponse\n  >,\n  notificationAlerts: state.observe.get('notificationAlerts'),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nexport const withDashboardResources = <P extends DashboardItemProps>(\n  WrappedComponent: React.ComponentType<P>,\n) =>\n  connect<StateProps, DispatchProps, Diff<P, DashboardItemProps>>(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(\n    class WithDashboardResources extends React.Component<\n      WithDashboardResourcesProps,\n      WithDashboardResourcesState\n    > {\n      private urls: Array<string> = [];\n      private queries: Array<string> = [];\n      private watchingAlerts: boolean = false;\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          k8sResources: [],\n        };\n      }\n\n      shouldComponentUpdate(\n        nextProps: WithDashboardResourcesProps,\n        nextState: WithDashboardResourcesState,\n      ) {\n        const urlResultChanged = this.urls.some(\n          (urlKey) =>\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'data']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'data']) ||\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']),\n        );\n        const queryResultChanged = this.queries.some(\n          (query) =>\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) ||\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']),\n        );\n        const alertsResultChanged =\n          this.props?.notificationAlerts?.data !== nextProps?.notificationAlerts?.data ||\n          this.props?.notificationAlerts?.loadError !== nextProps?.notificationAlerts?.loadError;\n        const k8sResourcesChanged = this.state.k8sResources !== nextState.k8sResources;\n\n        const nextExternalProps = this.getExternalProps(nextProps);\n        const externalProps = this.getExternalProps(this.props);\n\n        return (\n          urlResultChanged ||\n          queryResultChanged ||\n          k8sResourcesChanged ||\n          (this.watchingAlerts && alertsResultChanged) ||\n          Object.keys(nextExternalProps).length !== Object.keys(externalProps).length ||\n          Object.keys(nextExternalProps).some(\n            (key) => nextExternalProps[key] !== externalProps[key],\n          )\n        );\n      }\n\n      watchURL: WatchURL = (url, fetch) => {\n        this.urls.push(url);\n        this.props.watchURL(url, fetch);\n      };\n\n      watchPrometheus: WatchPrometheus = (query, namespace, timespan) => {\n        this.queries.push(getQueryKey(query, timespan));\n        this.props.watchPrometheusQuery(query, namespace, timespan);\n      };\n\n      stopWatchPrometheusQuery: StopWatchPrometheus = (query, timespan) => {\n        const queryKey = getQueryKey(query, timespan);\n        this.queries = this.queries.filter((q) => q !== queryKey);\n        this.props.stopWatchPrometheusQuery(query, timespan);\n      };\n\n      watchAlerts: WatchAlerts = () => {\n        this.watchingAlerts = true;\n      };\n\n      stopWatchAlerts: StopWatchAlerts = () => {\n        this.watchingAlerts = false;\n      };\n\n      watchK8sResource: WatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: [...state.k8sResources, { ...resource, optional: true }],\n        }));\n      };\n\n      stopWatchK8sResource: StopWatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: state.k8sResources.filter((r) => r.prop !== resource.prop),\n        }));\n      };\n\n      getExternalProps = (props) => {\n        return _.omit(\n          props,\n          'watchURL',\n          'stopWatchURL',\n          'watchPrometheusQuery',\n          'stopWatchPrometheusQuery',\n          'watchAlerts',\n          'stopWatchAlerts',\n          RESULTS_TYPE.URL,\n          RESULTS_TYPE.PROMETHEUS,\n          'notificationAlerts',\n        );\n      };\n\n      render() {\n        return (\n          <Firehose resources={this.state.k8sResources}>\n            <WrappedComponent\n              watchURL={this.watchURL}\n              stopWatchURL={this.props.stopWatchURL}\n              watchPrometheus={this.watchPrometheus}\n              stopWatchPrometheusQuery={this.stopWatchPrometheusQuery}\n              watchAlerts={this.watchAlerts}\n              stopWatchAlerts={this.stopWatchAlerts}\n              urlResults={this.props[RESULTS_TYPE.URL]}\n              prometheusResults={this.props[RESULTS_TYPE.PROMETHEUS]}\n              notificationAlerts={this.props.notificationAlerts}\n              watchK8sResource={this.watchK8sResource}\n              stopWatchK8sResource={this.stopWatchK8sResource}\n              {...this.getExternalProps(this.props)}\n            />\n          </Firehose>\n        );\n      }\n    },\n  );\n\ntype DispatchToProps = (\n  dispatch: any,\n) => {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheusQuery: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n};\n\ntype WatchURL = (url: string, fetch?: Fetch) => void;\ntype StopWatchURL = (url: string) => void;\ntype WatchPrometheus = (query: string, namespace?: string, timespan?: number) => void;\ntype StopWatchPrometheus = (query: string, timespan?: number) => void;\ntype WatchAlerts = () => void;\ntype StopWatchAlerts = () => void;\n\ntype WithDashboardResourcesState = {\n  k8sResources: FirehoseResource[];\n};\n\ntype WithDashboardResourcesProps = {\n  watchURL: WatchURLAction;\n  watchPrometheusQuery: WatchPrometheusQueryAction;\n  stopWatchURL: StopWatchURLAction;\n  stopWatchPrometheusQuery: StopWatchPrometheusAction;\n  [RESULTS_TYPE.PROMETHEUS]: RequestMap<PrometheusResponse>;\n  [RESULTS_TYPE.URL]: RequestMap<any>;\n  notificationAlerts: any;\n};\n\nexport type WatchK8sResource = (resource: FirehoseResource) => void;\nexport type StopWatchK8sResource = (resource: FirehoseResource) => void;\n\nexport type DashboardItemProps = {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheus: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n  watchAlerts: WatchAlerts;\n  stopWatchAlerts: StopWatchAlerts;\n  urlResults: RequestMap<any>;\n  prometheusResults: RequestMap<PrometheusResponse>;\n  notificationAlerts: NotificationAlerts;\n  watchK8sResource: WatchK8sResource;\n  stopWatchK8sResource: StopWatchK8sResource;\n  resources?: {\n    [key: string]:\n      | FirehoseResult\n      | FirehoseResult<K8sResourceKind>\n      | FirehoseResult<AppliedClusterResourceQuotaKind>;\n  };\n};\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import { convertToBaseValue, humanizePercentage } from '@console/internal/components/utils';\n\nconst genericCountResources = [\n  'configmaps',\n  'persistentvolumeclaims',\n  'pods',\n  'replicationcontrollers',\n  'resourcequotas',\n  'services',\n  'services.loadbalancers',\n  'services.nodeports',\n  'secrets',\n  'openshift.io/imagestreams',\n];\n\nexport const getUsedPercentage = (hard: string, used: string) => {\n  let usedNum = convertToBaseValue(used);\n  let hardNum = convertToBaseValue(hard);\n\n  if (!usedNum || !hardNum) {\n    // try to get the value without unit\n    usedNum = parseInt(usedNum, 10);\n    hardNum = parseInt(hardNum, 10);\n  }\n\n  return !usedNum || !hardNum ? 0 : (usedNum / hardNum) * 100;\n};\n\nexport const getLabelAndUsage = ({\n  resourceName,\n  used,\n  hard,\n}: {\n  resourceName: string;\n  used: string;\n  hard: string;\n}) => {\n  const useCount =\n    resourceName.startsWith('count/') || genericCountResources.includes(resourceName);\n\n  const percent = getUsedPercentage(hard, used);\n\n  return {\n    label: useCount ? `${used || 0} of ${hard}` : humanizePercentage(percent).string,\n    percent,\n  };\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport './TopologySideBarTabSection.scss';\n\nconst TopologySideBarTabSection: React.FC = ({ children }) => {\n  return <div className=\"ocs-sidebar-tabsection\">{children}</div>;\n};\n\nexport default TopologySideBarTabSection;\n","import * as React from 'react';\nimport {\n  Graph,\n  Node,\n  Model,\n  EdgeModel,\n  NodeModel,\n  EventListener,\n  ModelKind,\n  GraphElement,\n  TopologyQuadrant,\n} from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { ExtPodKind, OverviewItem } from '@console/shared';\n\nexport type Point = [number, number];\n\nexport interface OdcNodeModel extends NodeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport interface OdcEdgeModel extends EdgeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport type TopologyResourcesObject = { [key: string]: K8sResourceKind[] };\n\nexport type TopologyDataResources = WatchK8sResults<TopologyResourcesObject>;\n\nexport type TopologyDataModelGetter = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n) => Promise<Model>;\n\nexport enum TopologyViewType {\n  graph = 'graph',\n  list = 'list',\n}\nexport type ViewComponentFactory = (\n  kind: ModelKind,\n  type: string,\n  view?: TopologyViewType,\n) => React.ComponentType<{ element: GraphElement }> | undefined;\n\nexport type TopologyDataModelDepicted = (resource: K8sResourceKind, model: Model) => boolean;\n\nexport type TopologyDataModelReconciler = (model: Model, resources: TopologyDataResources) => void;\n\nexport type CreateConnection = (\n  source: Node,\n  target: Node | Graph,\n) => Promise<React.ReactElement[] | null>;\n\nexport type CreateConnectionGetter = (\n  createHints: string[],\n  source?: Node,\n  target?: Node,\n) => CreateConnection;\n\nexport enum TopologyDisplayFilterType {\n  show = 'show',\n  expand = 'expand',\n  kind = 'kind',\n}\n\nexport type TopologyDisplayOption = {\n  type: TopologyDisplayFilterType;\n  id: string;\n  label?: string;\n  labelKey?: string;\n  priority: number;\n  value: boolean;\n};\n\nexport type DisplayFilters = TopologyDisplayOption[];\n\n// Applies the filters on the model and returns the ids of filters that were relevant\nexport type TopologyApplyDisplayOptions = (model: Model, filters: DisplayFilters) => string[];\n\nexport type TopologyDecoratorGetter = (\n  element: Node,\n  radius: number,\n  centerX: number,\n  centerY: number,\n) => React.ReactElement;\n\nexport type TopologyDecorator = {\n  id: string;\n  priority: number;\n  quadrant: TopologyQuadrant;\n  decorator: TopologyDecoratorGetter;\n};\n\nexport interface TopologyDataObject<D = {}> {\n  id: string;\n  name: string;\n  type: string;\n  resources: OverviewItem;\n  pods?: ExtPodKind[];\n  data: D;\n  resource: K8sResourceKind | null;\n  groupResources?: OdcNodeModel[];\n}\n\nexport interface TopologyApplicationObject {\n  id: string;\n  name: string;\n  resources: OdcNodeModel[];\n}\n\nexport interface WorkloadData {\n  editURL?: string;\n  vcsURI?: string;\n  vcsRef?: string;\n  builderImage?: string;\n  kind?: string;\n  isKnativeResource?: boolean;\n}\n\nexport type TrafficData = {\n  nodes: KialiNode[];\n  edges: KialiEdge[];\n};\n\nexport type KialiNode = {\n  data: {\n    id: string;\n    nodeType: string;\n    namespace: string;\n    workload: string;\n    app: string;\n    version?: string;\n    destServices?: { [key: string]: any }[];\n    traffic?: { [key: string]: any }[];\n  };\n};\n\nexport type KialiEdge = {\n  data: {\n    id: string;\n    source: string;\n    target: string;\n    traffic: { [key: string]: any };\n  };\n};\n\nexport type GraphData = {\n  namespace: string;\n  createResourceAccess: string[];\n  eventSourceEnabled: boolean;\n  createConnectorExtensions?: CreateConnectionGetter[];\n  decorators?: { [key: string]: TopologyDecorator[] };\n};\n\nexport const SHOW_GROUPING_HINT_EVENT = 'show-regroup-hint';\nexport type ShowGroupingHintEventListener = EventListener<[Node, string]>;\n","import * as React from 'react';\nimport { Decorator as PfDecorator } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\n\nimport './Decorator.scss';\n\ntype DecoratorTypes = {\n  x: number;\n  y: number;\n  radius: number;\n  onClick?(event: React.MouseEvent<SVGGElement, MouseEvent>): void;\n  href?: string;\n  ariaLabel?: string;\n  external?: boolean;\n  circleRef?: React.Ref<SVGCircleElement>;\n};\n\nconst Decorator: React.FunctionComponent<DecoratorTypes> = ({\n  x,\n  y,\n  radius,\n  href,\n  ariaLabel,\n  external,\n  ...rest\n}) => {\n  const decorator = (\n    <PfDecorator x={x} y={y} radius={radius} className=\"odc-decorator\" showBackground {...rest} />\n  );\n\n  if (href) {\n    return external ? (\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      <a\n        className=\"odc-decorator__link\"\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        role=\"button\"\n        aria-label={ariaLabel}\n      >\n        {decorator}\n      </a>\n    ) : (\n      <Link className=\"odc-decorator__link\" to={href} role=\"button\" aria-label={ariaLabel}>\n        {decorator}\n      </Link>\n    );\n  }\n  return decorator;\n};\n\nexport default Decorator;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","export * from './const';\nexport * from './filter-utils';\nexport * from './useAppliedDisplayFilters';\nexport * from './useSearchFilter';\nexport * from './useDisplayFilters';\nexport * from './useAllowEdgeCreation';\n","import * as React from 'react';\nimport {\n  Edge,\n  WithRemoveConnectorProps,\n  observer,\n  useSelection,\n  WithContextMenuProps,\n  DefaultEdge,\n  EdgeTerminalType,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  NodeStatus,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useAccessReviewAllowed } from '@console/dynamic-plugin-sdk';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../../../utils/topology-utils';\nimport './BaseEdge.scss';\n\ntype BaseEdgeProps = {\n  element: GraphElement;\n  dragging?: boolean;\n  className?: string;\n  animationDuration?: number;\n  startTerminalType?: EdgeTerminalType;\n  startTerminalClass?: string;\n  startTerminalStatus?: NodeStatus;\n  endTerminalType?: EdgeTerminalType;\n  endTerminalClass?: string;\n  endTerminalStatus?: NodeStatus;\n  tag?: string;\n  tagClass?: string;\n  tagStatus?: NodeStatus;\n} & WithRemoveConnectorProps &\n  Partial<WithSourceDragProps> &\n  Partial<WithTargetDragProps> &\n  Partial<WithContextMenuProps>;\n\nconst BaseEdge: React.FC<BaseEdgeProps> = ({\n  className,\n  element,\n  endTerminalType = EdgeTerminalType.directional,\n  onShowRemoveConnector,\n  onHideRemoveConnector,\n  targetDragRef,\n  sourceDragRef,\n  ...rest\n}) => {\n  const resourceObj = getResource((element as Edge).getSource());\n  const resourceModel = resourceObj && modelFor(referenceFor(resourceObj));\n  const [selected, onSelect] = useSelection({ controlled: true });\n\n  const editAccess = useAccessReviewAllowed({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: resourceObj?.metadata.name,\n    namespace: resourceObj?.metadata.namespace,\n  });\n\n  return (\n    <DefaultEdge\n      className={classNames('odc-base-edge', className)}\n      element={element}\n      onShowRemoveConnector={editAccess ? onShowRemoveConnector : undefined}\n      onHideRemoveConnector={editAccess ? onHideRemoveConnector : undefined}\n      targetDragRef={editAccess ? targetDragRef : undefined}\n      sourceDragRef={editAccess ? sourceDragRef : undefined}\n      endTerminalType={endTerminalType}\n      selected={selected}\n      onSelect={onSelect}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(BaseEdge);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  K8sResourceCommon,\n  NetworkAdapterType,\n  PodsAdapterDataType,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { Extension } from '@console/dynamic-plugin-sdk/src/types';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  PodModel,\n} from '@console/internal/models';\nimport {\n  BuildConfigData,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  useBuildConfigsWatcher,\n  useJobsForCronJobWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { getResource } from '../../utils';\n\nexport const getDataFromAdapter = <T extends { resource: K8sResourceCommon }, E extends Extension>(\n  element: GraphElement,\n  [resolvedExtensions, loaded]: [ResolvedExtension<E>[], boolean],\n): T | undefined =>\n  loaded\n    ? resolvedExtensions.reduce<T>((acc, { properties: { adapt } }) => {\n        const values = (adapt as (element: GraphElement) => T)(element);\n        return values ?? acc;\n      }, undefined)\n    : undefined;\n\nconst usePodsAdapterForWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const buildConfigData = useBuildConfigsWatcher(resource);\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n  return React.useMemo(() => ({ pods: podData?.pods, loaded, loadError, buildConfigData }), [\n    buildConfigData,\n    loadError,\n    loaded,\n    podData,\n  ]);\n};\n\nexport const podsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      JobModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: usePodsAdapterForWorkloads };\n};\n\nexport const buildsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<BuildConfigData> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      CronJobModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: useBuildConfigsWatcher };\n};\n\nexport const networkAdapterForWorkloads = (\n  element: GraphElement,\n): NetworkAdapterType | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource };\n};\n\nconst usePodsAdapterForCronJobWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  const {\n    metadata: { namespace },\n  } = resource;\n\n  const [pods, setPods] = React.useState([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      const updatedPods = jobs?.length\n        ? jobs.reduce((acc, res) => {\n            acc.push(...getPodsForResource(res, resources));\n            return acc;\n          }, [])\n        : [];\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [jobs, resources]);\n  return { pods, loaded, loadError };\n};\n\nexport const podsAdapterForCronJobWorkload = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) return undefined;\n  return { resource, provider: usePodsAdapterForCronJobWorkloads };\n};\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { TopologyDisplayFilterType } from '../topology-types';\n\nexport const SHOW_POD_COUNT_FILTER_ID = 'show-pod-count';\nexport const SHOW_LABELS_FILTER_ID = 'show-labels';\nexport const EXPAND_APPLICATION_GROUPS_FILTER_ID = 'expand-app-groups';\nexport const EXPAND_GROUPS_FILTER_ID = 'expand-groups';\n\nexport const DEFAULT_TOPOLOGY_FILTERS = [\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_GROUPS_FILTER_ID,\n    // t('topology~Expand groups')\n    labelKey: 'topology~Expand groups',\n    priority: 1,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_POD_COUNT_FILTER_ID,\n    // t('topology~Pod count')\n    labelKey: 'topology~Pod count',\n    priority: 10,\n    value: false,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_LABELS_FILTER_ID,\n    // t('topology~Labels')\n    labelKey: 'topology~Labels',\n    priority: 900,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_APPLICATION_GROUPS_FILTER_ID,\n    // t('topology~Application groupings')\n    labelKey: 'topology~Application groupings',\n    priority: 10,\n    value: true,\n  },\n];\n\nexport const DEFAULT_SUPPORTED_FILTER_IDS = [SHOW_POD_COUNT_FILTER_ID, SHOW_LABELS_FILTER_ID];\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","import { FirehoseResource } from '../../../utils';\n\nexport const uniqueResource = (\n  resource: FirehoseResource,\n  prefix: string | number,\n): FirehoseResource => ({\n  ...resource,\n  prop: `${prefix}-${resource.prop}`,\n});\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useActivePerspective, LIMIT_STATE, Humanize } from '@console/dynamic-plugin-sdk';\nimport { getPrometheusQueryResponse } from '@console/internal/actions/dashboards';\nimport {\n  withDashboardResources,\n  DashboardItemProps,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, referenceForModel, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getName, getNamespace, useFlag } from '../../..';\nimport { FLAGS } from '../../../constants';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status';\nimport Status from '../status-card/StatusPopup';\n\nimport './top-consumer-popover.scss';\n\nconst ConsumerPopover: React.FC<ConsumerPopoverProps> = React.memo(\n  ({\n    current,\n    title,\n    humanize,\n    consumers,\n    namespace,\n    position = PopoverPosition.top,\n    description,\n    children,\n  }) => {\n    const { t } = useTranslation();\n    const [isOpen, setOpen] = React.useState(false);\n    const onShow = React.useCallback(() => setOpen(true), []);\n    const onHide = React.useCallback(() => setOpen(false), []);\n    if (!current) {\n      return null;\n    }\n    return (\n      <Popover\n        position={position}\n        headerContent={t('console-shared~{{title}} breakdown', { title })}\n        bodyContent={\n          <PopoverBody\n            humanize={humanize}\n            consumers={consumers}\n            namespace={namespace}\n            isOpen={isOpen}\n            description={description}\n          >\n            {children}\n          </PopoverBody>\n        }\n        enableFlip\n        onShow={onShow}\n        onHide={onHide}\n        maxWidth=\"21rem\"\n      >\n        <Button variant=\"link\" isInline>\n          {current}\n        </Button>\n      </Popover>\n    );\n  },\n);\n\nexport default ConsumerPopover;\n\nconst getLimitIcon = (state: LIMIT_STATE): React.ReactNode => {\n  switch (state) {\n    case LIMIT_STATE.ERROR:\n      return <RedExclamationCircleIcon />;\n    case LIMIT_STATE.WARN:\n      return <YellowExclamationTriangleIcon />;\n    default:\n      return null;\n  }\n};\n\nconst getResourceToWatch = (model: K8sKind, namespace: string, fieldSelector: string) => ({\n  isList: true,\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  fieldSelector,\n  namespace,\n});\n\nexport const LimitsBody: React.FC<LimitsBodyProps> = ({\n  limitState,\n  requestedState,\n  total,\n  limit,\n  current,\n  available,\n  requested,\n}) => {\n  const { t } = useTranslation();\n  return (\n    ((!!limitState && limitState !== LIMIT_STATE.OK) ||\n      (!!requestedState && requestedState !== LIMIT_STATE.OK)) && (\n      <ul className=\"co-utilization-card-popover__consumer-list\">\n        <Status value={total}>{t('console-shared~Total capacity')}</Status>\n        <Status value={limit} icon={getLimitIcon(limitState)}>\n          {t('console-shared~Total limit')}\n        </Status>\n        <Status value={current}>{t('console-shared~Current utilization')}</Status>\n        <Status value={available}>{t('console-shared~Current available capacity')}</Status>\n        <Status value={requested} icon={getLimitIcon(requestedState)}>\n          {t('console-shared~Total requested')}\n        </Status>\n      </ul>\n    )\n  );\n};\n\nexport const PopoverBody = withDashboardResources<DashboardItemProps & PopoverBodyProps>(\n  React.memo(\n    ({\n      humanize,\n      consumers,\n      namespace,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      prometheusResults,\n      isOpen,\n      description,\n      children,\n    }) => {\n      const { t } = useTranslation();\n      const [currentConsumer, setCurrentConsumer] = React.useState(consumers[0]);\n      const activePerspective = useActivePerspective()[0];\n      const canAccessMonitoring =\n        useFlag(FLAGS.CAN_GET_NS) && !!window.SERVER_FLAGS.prometheusBaseURL;\n      const { query, model, metric, fieldSelector } = currentConsumer;\n      const k8sResource = React.useMemo(\n        () => (isOpen ? getResourceToWatch(model, namespace, fieldSelector) : null),\n        [fieldSelector, isOpen, model, namespace],\n      );\n      const [consumerData, consumerLoaded, consumersLoadError] = useK8sWatchResource<\n        K8sResourceCommon[]\n      >(k8sResource);\n      React.useEffect(() => {\n        if (!isOpen) {\n          return () => {};\n        }\n        watchPrometheus(query, namespace);\n        return () => {\n          stopWatchPrometheusQuery(query);\n        };\n      }, [query, stopWatchPrometheusQuery, watchPrometheus, namespace, isOpen]);\n\n      const top5Data = [];\n\n      const [data, error] = getPrometheusQueryResponse(prometheusResults, query);\n      const bodyData = getInstantVectorStats(data, metric);\n\n      if (k8sResource && consumerLoaded && !consumersLoadError) {\n        for (const d of bodyData) {\n          const consumerExists = consumerData.some(\n            (consumer) =>\n              getName(consumer) === d.metric[metric] &&\n              (model.namespaced ? getNamespace(consumer) === d.metric.namespace : true),\n          );\n          if (consumerExists) {\n            top5Data.push({ ...d, y: humanize(d.y).string });\n          }\n          if (top5Data.length === 5) {\n            break;\n          }\n        }\n      }\n\n      const monitoringParams = React.useMemo(() => {\n        const params = new URLSearchParams();\n        params.set('query0', currentConsumer.query);\n        return params;\n      }, [currentConsumer.query]);\n\n      const dropdownItems = React.useMemo(\n        () =>\n          consumers.reduce((items, curr) => {\n            items[referenceForModel(curr.model)] = t('console-shared~By {{label}}', {\n              label: curr.model.labelKey ? t(curr.model.labelKey) : curr.model.label,\n            });\n            return items;\n          }, {}),\n        [consumers, t],\n      );\n\n      const onDropdownChange = React.useCallback(\n        (key) => setCurrentConsumer(consumers.find((c) => referenceForModel(c.model) === key)),\n        [consumers],\n      );\n\n      const monitoringURL =\n        canAccessMonitoring && activePerspective === 'admin'\n          ? `/monitoring/query-browser?${monitoringParams.toString()}`\n          : `/dev-monitoring/ns/${namespace}/metrics?${monitoringParams.toString()}`;\n\n      let body: React.ReactNode;\n      if (error || consumersLoadError) {\n        body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n      } else if (!consumerLoaded || !data) {\n        body = (\n          <ul className=\"co-utilization-card-popover__consumer-list\">\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n          </ul>\n        );\n      } else {\n        body = (\n          <>\n            <ul\n              className=\"co-utilization-card-popover__consumer-list\"\n              aria-label={t('console-shared~Top consumer by {{label}}', { label: model.label })}\n            >\n              {top5Data &&\n                top5Data.map((item) => {\n                  const title = String(item.x);\n                  return (\n                    <ListItem key={title} value={item.y}>\n                      <Link\n                        className=\"co-utilization-card-popover__consumer-name\"\n                        to={resourcePathFromModel(model, title, item.metric.namespace)}\n                      >\n                        {title}\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n            </ul>\n            <Link to={monitoringURL}>{t('console-shared~View more')}</Link>\n          </>\n        );\n      }\n\n      return (\n        <div className=\"co-utilization-card-popover__body\">\n          {description && (\n            <div className=\"co-utilization-card-popover__description\">{description}</div>\n          )}\n          {children}\n          <div className=\"co-utilization-card-popover__title\">\n            {consumers.length === 1\n              ? t('console-shared~Top {{label}} consumers', {\n                  label: currentConsumer.model.label.toLowerCase(),\n                })\n              : t('console-shared~Top consumers')}\n          </div>\n          {consumers.length > 1 && (\n            <Dropdown\n              className=\"co-utilization-card-popover__dropdown\"\n              id=\"consumer-select\"\n              name=\"selectConsumerType\"\n              aria-label={t('console-shared~Select consumer type')}\n              items={dropdownItems}\n              onChange={onDropdownChange}\n              selectedKey={referenceForModel(model)}\n            />\n          )}\n          {body}\n        </div>\n      );\n    },\n  ),\n);\n\nconst ListItem: React.FC<ListItemProps> = ({ children, value }) => (\n  <li className=\"co-utilization-card-popover__consumer-item\">\n    {children}\n    <div className=\"co-utilization-card-popover__consumer-value\">{value}</div>\n  </li>\n);\n\ntype ListItemProps = {\n  value: React.ReactText;\n};\n\ntype LimitsBodyProps = {\n  limitState?: LIMIT_STATE;\n  requestedState?: LIMIT_STATE;\n  limit?: string;\n  requested?: string;\n  available?: string;\n  total?: string;\n  current: string;\n};\n\ntype PopoverProps = {\n  humanize: Humanize;\n  consumers: { model: K8sKind; query: string; metric: string; fieldSelector?: string }[];\n  namespace?: string;\n  description?: string;\n};\n\ntype PopoverBodyProps = PopoverProps & {\n  topConsumers?: DataPoint[][];\n  error?: boolean;\n  isOpen: boolean;\n};\n\nexport type ConsumerPopoverProps = PopoverProps & {\n  position?: PopoverPosition;\n  title: string;\n  current: string;\n};\n","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\nimport { useTranslation } from 'react-i18next';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport {\n  DashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem,\n  SubsystemHealth,\n  OperatorRowProps,\n  LazyLoader,\n} from '@console/plugin-sdk';\nimport {\n  ResolvedExtension,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem as DynamicDashboardsOverviewHealthResourceSubsystem,\n  WatchK8sResources,\n  WatchK8sResults,\n  ResourcesObject,\n} from '@console/dynamic-plugin-sdk';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { OperatorsSection } from '@console/shared/src/components/dashboard/status-card/OperatorStatusBody';\nimport {\n  getOperatorsHealthState,\n  getMostImportantStatuses,\n} from '@console/shared/src/components/dashboard/status-card/state-utils';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { K8sKind } from '../../../../module/k8s';\nimport { FirehoseResourcesResult, AsyncComponent, resourcePath } from '../../../utils';\nimport { useK8sWatchResources } from '../../../utils/k8s-watch-hook';\nimport { withDashboardResources, DashboardItemProps } from '../../with-dashboard-resources';\nimport { uniqueResource } from './utils';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { ClusterDashboardContext } from './context';\n\nconst OperatorRow: React.FC<\n  OperatorRowProps & {\n    LoadingComponent: () => JSX.Element;\n    Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n    key: string;\n    isResolved: boolean;\n  }\n> = ({ operatorStatus, isResolved, key, Component, LoadingComponent }) => {\n  const ResolvedComponent = Component as React.ComponentType<OperatorRowProps>;\n  return isResolved ? (\n    <ResolvedComponent key={key} operatorStatus={operatorStatus} />\n  ) : (\n    <AsyncComponent\n      key={operatorStatus.operators[0].metadata.uid}\n      operatorStatus={operatorStatus}\n      loader={Component}\n      LoadingComponent={LoadingComponent}\n    />\n  );\n};\n\nexport const OperatorsPopup: React.FC<OperatorsPopupProps> = ({\n  resources,\n  operatorExtensions,\n  dynamicOperatorSubsystems,\n}) => {\n  const { t } = useTranslation();\n  const sections = [\n    ...operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved={false}\n          />\n        </StackItem>\n      );\n    }),\n    ...dynamicOperatorSubsystems.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved\n          />\n        </StackItem>\n      );\n    }),\n  ].reverse();\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        {t(\n          'public~Operators create, configure, and manage applications by extending the Kubernetes API.',\n        )}\n      </StackItem>\n      {sections}\n    </Stack>\n  );\n};\n\nexport const OperatorHealthItem = withDashboardResources<OperatorHealthItemProps>(\n  ({\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    operatorExtensions,\n    dynamicOperatorSubsystems,\n  }) => {\n    const { t } = useTranslation();\n    React.useEffect(() => {\n      operatorExtensions.forEach((o, index) =>\n        o.resources.forEach((r) => watchK8sResource(uniqueResource(r, index))),\n      );\n      return () => {\n        operatorExtensions.forEach((o, index) =>\n          o.resources.forEach((r) => stopWatchK8sResource(uniqueResource(r, index))),\n        );\n      };\n    }, [watchK8sResource, stopWatchK8sResource, operatorExtensions]);\n\n    const healthStatuses = operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop] || {};\n        return acc;\n      }, {});\n      if (\n        Object.keys(operatorResources).some((resource) => operatorResources[resource].loadError)\n      ) {\n        return { health: HealthState.NOT_AVAILABLE };\n      }\n      if (Object.keys(operatorResources).some((resource) => !operatorResources[resource].loaded)) {\n        return { health: HealthState.LOADING };\n      }\n      const operatorStatuses = o.getOperatorsWithStatuses(operatorResources);\n      if (!operatorStatuses.length) {\n        return { health: HealthState.OK };\n      }\n      const importantStatuses = getMostImportantStatuses(operatorStatuses);\n      return {\n        health: importantStatuses[0].status.health,\n        count: importantStatuses.length,\n      };\n    });\n\n    const operatorsHealth = getOperatorsHealthState(healthStatuses, t);\n\n    return (\n      <HealthItem\n        title={t('public~Operators')}\n        state={operatorsHealth.health}\n        details={operatorsHealth.detailMessage}\n        popupTitle={t('public~Operator status')}\n      >\n        <OperatorsPopup\n          resources={resources}\n          operatorExtensions={operatorExtensions}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      </HealthItem>\n    );\n  },\n);\n\nexport const URLHealthItem = withDashboardResources<URLHealthItemProps>(\n  ({\n    watchURL,\n    stopWatchURL,\n    urlResults,\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    subsystem,\n    models,\n  }) => {\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      watchURL(\n        subsystem.url,\n        (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          ? (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          : undefined,\n      );\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        stopWatchURL(subsystem.url);\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [watchURL, stopWatchURL, watchK8sResource, stopWatchK8sResource, subsystem, modelExists]);\n\n    const healthResult = urlResults.getIn([subsystem.url, 'data']);\n    const healthResultError = urlResults.getIn([subsystem.url, 'loadError']);\n\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(healthResult, healthResultError, k8sResult);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  healthResult={healthResult}\n                  healthResultError={healthResultError}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const PrometheusHealthItem = withDashboardResources<PrometheusHealthItemProps>(\n  ({\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    subsystem,\n    models,\n  }) => {\n    const { t } = useTranslation();\n    const { infrastructure } = React.useContext(ClusterDashboardContext);\n\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      subsystem.queries.forEach((q) => watchPrometheus(q));\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        subsystem.queries.forEach((q) => stopWatchPrometheusQuery(q));\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [\n      watchK8sResource,\n      stopWatchK8sResource,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      subsystem,\n      modelExists,\n    ]);\n\n    const queryResults = React.useMemo(\n      () =>\n        subsystem.queries.map((q) => {\n          const [response, error] = getPrometheusQueryResponse(prometheusResults, q);\n          return {\n            response,\n            error,\n          };\n        }),\n      [prometheusResults, subsystem.queries],\n    );\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(queryResults, t, k8sResult, infrastructure);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupClassname={subsystem.popupClassname}\n        popupKeepOnOutsideClick={subsystem.popupKeepOnOutsideClick}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  responses={queryResults}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const ResourceHealthItem: React.FC<ResourceHealthItemProps> = ({ subsystem, namespace }) => {\n  const { t } = useTranslation();\n\n  const { title, resources, healthHandler, popupComponent, popupTitle } = subsystem;\n\n  const resourcesWithNamespace: WatchK8sResources<ResourcesObject> = React.useMemo(() => {\n    return {\n      ...resources,\n      ...(resources.imageManifestVuln && {\n        imageManifestVuln: { ...resources.imageManifestVuln, namespace },\n      }),\n    };\n  }, [resources, namespace]);\n\n  const resourcesResult: WatchK8sResults<ResourcesObject> = useK8sWatchResources(\n    resourcesWithNamespace,\n  );\n  const healthState: SubsystemHealth = healthHandler(resourcesResult, t);\n\n  return (\n    <HealthItem\n      title={title}\n      state={healthState.state}\n      details={healthState.message}\n      popupTitle={popupTitle}\n    >\n      {popupComponent && resourcesResult && (\n        <AsyncComponent loader={popupComponent} {...resourcesResult} namespace={namespace} />\n      )}\n    </HealthItem>\n  );\n};\n\ntype OperatorHealthItemProps = DashboardItemProps & {\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n\ntype URLHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthURLSubsystem<any>['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem<any>>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype PrometheusHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthPrometheusSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype ResourceHealthItemProps = {\n  subsystem:\n    | DashboardsOverviewHealthResourceSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthResourceSubsystem>['properties'];\n  namespace?: string;\n};\n\ntype OperatorsPopupProps = {\n  resources: FirehoseResourcesResult;\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n","import { Edge, isNode, Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '@console/rhoas-plugin/src/topology/components/const';\nimport { moveConnectionModal } from '../components/modals/MoveConnectionModal';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING, TYPE_TRAFFIC_CONNECTOR } from '../const';\nimport { removeConnection } from '../utils';\nimport { getResource } from '../utils/topology-utils';\n\n/**\n * @deprecated migrated to use new Action extension, use MoveConnectorAction\n */\nconst moveConnection = (edge: Edge, availableTargets: Node[]) => {\n  const resourceObj = getResource(edge.getSource());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n\n  return {\n    // t('topology~Move connector')\n    labelKey: 'topology~Move connector',\n    callback: () => {\n      moveConnectionModal({ edge, availableTargets });\n    },\n    isDisabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(resourceModel, resourceObj, 'delete'),\n  };\n};\n\nconst getAvailableTargetForEdge = (edge: Edge, nodes: Node[]) => {\n  const currentTargets = edge\n    .getSource()\n    .getSourceEdges()\n    .map((e) => e.getTarget().getId());\n\n  return nodes\n    .filter((n) => {\n      if (n.getId() === edge.getSource().getId()) {\n        return false;\n      }\n      if (n.getId() !== edge.getTarget().getId() && currentTargets.includes(n.getId())) {\n        return false;\n      }\n      if (n.getType() === TYPE_EVENT_SOURCE) {\n        return false;\n      }\n      switch (edge.getType()) {\n        case TYPE_CONNECTS_TO:\n          return n.getType() !== TYPE_KNATIVE_REVISION && n.getType() !== TYPE_KNATIVE_SERVICE;\n        case TYPE_SERVICE_BINDING:\n          return false;\n        case TYPE_EVENT_SOURCE_LINK:\n          return n.getType() === TYPE_KNATIVE_SERVICE || n.getType() === TYPE_EVENT_PUB_SUB;\n        case TYPE_REVISION_TRAFFIC:\n          return false;\n        case TYPE_TRAFFIC_CONNECTOR:\n          return false;\n        case TYPE_KAFKA_CONNECTION_LINK:\n          return n.getType() === TYPE_MANAGED_KAFKA_CONNECTION;\n        default:\n          return true;\n      }\n    })\n    .sort((n1, n2) => n1.getLabel().localeCompare(n2.getLabel()));\n};\n\nexport const MoveConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n\n  const nodes = element\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n  const availableTargets = getAvailableTargetForEdge(element, nodes);\n\n  return {\n    id: 'move-visual-connector',\n    label: i18next.t('topology~Move connector'),\n    cta: () => {\n      moveConnectionModal({ edge: element, availableTargets });\n    },\n    disabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\nexport const DeleteConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n  return {\n    id: 'delete-connector',\n    label: i18next.t('topology~Delete connector'),\n    cta: () => {\n      removeConnection(element);\n    },\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\n/**\n * @deprecated remove this after migrating the Traffic connector side-panel to dynamic extensions\n */\nexport const edgeActions = (edge: Edge, nodes: Node[]): KebabOption[] => {\n  const actions: KebabOption[] = [];\n  const availableTargets = getAvailableTargetForEdge(edge, nodes);\n  actions.push(moveConnection(edge, availableTargets));\n  return actions;\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum ProjectQueries {\n  CPU_USAGE = 'CPU_USAGE',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  MEMORY_USAGE = 'MEMORY_USAGE',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  POD_COUNT = 'POD_COUNT',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_FILESYSTEM = 'PODS_BY_FILESYSTEM',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  FILESYSTEM_USAGE = 'FILESYSTEM_USAGE',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n}\n\nconst queries = {\n  [ProjectQueries.CPU_USAGE]: _.template(\n    `namespace:container_cpu_usage:sum{namespace='<%= project %>'}`,\n  ),\n  [ProjectQueries.CPU_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"cpu\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_USAGE]: _.template(\n    `sum(container_memory_working_set_bytes{namespace='<%= project %>',container=\"\",pod!=\"\"}) BY (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"memory\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.POD_COUNT]: _.template(\n    `count(kube_running_pod_ready{namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.FILESYSTEM_USAGE]: _.template(\n    `sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_IN_UTILIZATION]: _.template(\n    `sum(rate(container_network_receive_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_OUT_UTILIZATION]: _.template(\n    `sum(rate(container_network_transmit_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n};\n\nconst top25Queries = {\n  [ProjectQueries.PODS_BY_CPU]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_MEMORY]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: _.template(\n    `topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n};\n\nexport const getMultilineQueries = (\n  project: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [ProjectQueries.NETWORK_UTILIZATION]: [\n    {\n      query: queries[ProjectQueries.NETWORK_IN_UTILIZATION]({ project }),\n      desc: 'in',\n    },\n    {\n      query: queries[ProjectQueries.NETWORK_OUT_UTILIZATION]({ project }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getUtilizationQueries = (project: string) => ({\n  [ProjectQueries.CPU_USAGE]: queries[ProjectQueries.CPU_USAGE]({ project }),\n  [ProjectQueries.CPU_REQUESTS]: queries[ProjectQueries.CPU_REQUESTS]({ project }),\n  [ProjectQueries.MEMORY_USAGE]: queries[ProjectQueries.MEMORY_USAGE]({ project }),\n  [ProjectQueries.MEMORY_REQUESTS]: queries[ProjectQueries.MEMORY_REQUESTS]({ project }),\n  [ProjectQueries.POD_COUNT]: queries[ProjectQueries.POD_COUNT]({ project }),\n  [ProjectQueries.FILESYSTEM_USAGE]: queries[ProjectQueries.FILESYSTEM_USAGE]({\n    project,\n  }),\n});\n\nexport const getTopConsumerQueries = (project: string) => ({\n  [ProjectQueries.PODS_BY_CPU]: top25Queries[ProjectQueries.PODS_BY_CPU]({ project }),\n  [ProjectQueries.PODS_BY_MEMORY]: top25Queries[ProjectQueries.PODS_BY_MEMORY]({ project }),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: top25Queries[ProjectQueries.PODS_BY_FILESYSTEM]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: top25Queries[ProjectQueries.PODS_BY_NETWORK_IN]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: top25Queries[ProjectQueries.PODS_BY_NETWORK_OUT]({\n    project,\n  }),\n});\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum OverviewQuery {\n  MEMORY_TOTAL = 'MEMORY_TOTAL',\n  MEMORY_UTILIZATION = 'MEMORY_UTILIZATION',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  CPU_UTILIZATION = 'CPU_UTILIZATION',\n  CPU_TOTAL = 'CPU_TOTAL',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  STORAGE_UTILIZATION = 'STORAGE_UTILIZATION',\n  STORAGE_TOTAL = 'STORAGE_TOTAL',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_STORAGE = 'PODS_BY_STORAGE',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  NODES_BY_CPU = 'NODES_BY_CPU',\n  NODES_BY_MEMORY = 'NODES_BY_MEMORY',\n  NODES_BY_STORAGE = 'NODES_BY_STORAGE',\n  NODES_BY_NETWORK_IN = 'NODES_BY_NETWORK_IN',\n  NODES_BY_NETWORK_OUT = 'NODES_BY_NETWORK_OUT',\n  NODES_BY_PODS = 'NODES_BY_PODS',\n  PROJECTS_BY_CPU = 'PROJECTS_BY_CPU',\n  PROJECTS_BY_MEMORY = 'PROJECTS_BY_MEMORY',\n  PROJECTS_BY_STORAGE = 'PROJECTS_BY_STORAGE',\n  PROJECTS_BY_NETWORK_IN = 'PROJECTS_BY_NETWORK_IN',\n  PROJECTS_BY_NETWORK_OUT = 'PROJECTS_BY_NETWORK_OUT',\n  PROJECTS_BY_PODS = 'PROJECTS_BY_PODS',\n  POD_UTILIZATION = 'POD_UTILIZATION',\n}\n\nconst top25Queries = {\n  [OverviewQuery.PODS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        avg_over_time(instance:node_cpu:rate:sum[5m])\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum by (instance) (max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"}))\n          -\n          sum by (instance) (max by (device, instance) (node_filesystem_avail_bytes{device=~\"/.*\"}))\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(avg_over_time(kubelet_running_pods[5m])) BY (node)\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_receive_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_transmit_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n\n  [OverviewQuery.PROJECTS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        count by (namespace) (\n            topk without(uid) (1, kube_running_pod_ready)\n            *\n            ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n          *\n          on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})))\n        ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n};\n\nconst overviewQueries = {\n  [OverviewQuery.MEMORY_TOTAL]: _.template(\n    `\n      sum(\n        node_memory_MemTotal_bytes\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_UTILIZATION]: _.template(\n    `\n      sum(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"memory\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          instance:node_network_transmit_bytes_excluding_lo:rate1m\n          +\n          instance:node_network_receive_bytes_excluding_lo:rate1m\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_UTILIZATION]: _.template(\n    `\n      sum(\n        1 - sum without (mode) (rate(node_cpu_seconds_total{mode=~\"idle|iowait|steal\"}[2m]))\n        *\n        on(instance) group_left() (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\",\"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_TOTAL]: _.template(\n    `\n      sum(\n        kube_node_status_capacity{resource=\"cpu\",unit=\"core\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"cpu\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n          -\n          max by (device, instance) (node_filesystem_free_bytes{device=~\"/.*\"})\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_TOTAL]: _.template(\n    `\n      sum(\n        max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.POD_UTILIZATION]: _.template(\n    `\n      count(\n        (\n          topk without(uid) (1, kube_running_pod_ready)\n          *\n          ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n        )\n        *\n        on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_IN_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_receive_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_OUT_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_transmit_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n};\n\nexport const getMultilineQueries = (\n  nodeType: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [OverviewQuery.NETWORK_UTILIZATION]: [\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_IN_UTILIZATION]({ nodeType }),\n      desc: 'in',\n    },\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_OUT_UTILIZATION]({ nodeType }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getTop25ConsumerQueries = (nodeType: string) => ({\n  [OverviewQuery.PODS_BY_CPU]: top25Queries[OverviewQuery.PODS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PODS_BY_MEMORY]: top25Queries[OverviewQuery.PODS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PODS_BY_STORAGE]: top25Queries[OverviewQuery.PODS_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PODS_BY_NETWORK_IN]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PODS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_CPU]: top25Queries[OverviewQuery.NODES_BY_CPU]({ nodeType }),\n  [OverviewQuery.NODES_BY_MEMORY]: top25Queries[OverviewQuery.NODES_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.NODES_BY_STORAGE]: top25Queries[OverviewQuery.NODES_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.NODES_BY_PODS]: top25Queries[OverviewQuery.NODES_BY_PODS]({ nodeType }),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: top25Queries[OverviewQuery.NODES_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: top25Queries[OverviewQuery.NODES_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_CPU]: top25Queries[OverviewQuery.PROJECTS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: top25Queries[OverviewQuery.PROJECTS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: top25Queries[OverviewQuery.PROJECTS_BY_STORAGE]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_PODS]: top25Queries[OverviewQuery.PROJECTS_BY_PODS]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n});\n\nexport const getUtilizationQueries = (nodeType: string) => ({\n  [OverviewQuery.CPU_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.CPU_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.CPU_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.CPU_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.MEMORY_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.MEMORY_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.MEMORY_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.MEMORY_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.STORAGE_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.STORAGE_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.STORAGE_TOTAL]({ nodeType }),\n  },\n  [OverviewQuery.POD_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.POD_UTILIZATION]({ nodeType }),\n  },\n});\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GaugeChart } from '@console/internal/components/graphs/gauge';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ResourceQuotaChartsProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n\nconst ResourceQuotaCharts = ({ resourceQuota }: ResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(resourceQuota.status?.hard ?? {}).map((resourceName) => {\n    const hard = resourceQuota.status.hard[resourceName];\n    const used = resourceQuota.status.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({ resourceName, used, hard });\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <GaugeChart\n          data={{\n            x: `${percent}%`,\n            y: percent,\n          }}\n          thresholds={[{ value: 90 }, { value: 101 }]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ResourceQuotaCharts;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getUsedPercentage, getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype AppliedClusterResourceQuotaChartsProps = {\n  appliedClusterResourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n\nconst AppliedClusterResourceQuotaCharts = ({\n  appliedClusterResourceQuota,\n  namespace,\n}: AppliedClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const nsQuotas = appliedClusterResourceQuota.status?.namespaces?.find(\n    (ns) => ns.namespace === namespace,\n  );\n\n  const charts = Object.keys(nsQuotas?.status?.hard ?? {}).map((resourceName) => {\n    const clusterHard = appliedClusterResourceQuota.status.total?.hard?.[resourceName];\n    const clusterUsed = appliedClusterResourceQuota.status.total?.used?.[resourceName];\n    const nsUsed = nsQuotas.status.used?.[resourceName];\n    const clusterUsage = getUsedPercentage(clusterHard, clusterUsed);\n    const unused = 100 - clusterUsage;\n\n    const { label, percent: nsUsage } = getLabelAndUsage({\n      resourceName,\n      used: nsUsed,\n      hard: clusterHard,\n    });\n\n    const percentOtherNamespaces = clusterUsage - nsUsage;\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Namespace',\n              y: nsUsage,\n            },\n            {\n              x: 'Other namespaces',\n              y: percentOtherNamespaces,\n            },\n            {\n              x: 'Unused',\n              y: unused,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default AppliedClusterResourceQuotaCharts;\n","/* eslint-disable camelcase */\nimport * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport {\n  chart_color_black_100,\n  chart_color_green_300,\n  chart_color_green_500,\n  chart_color_gold_400,\n  chart_color_gold_500,\n} from '@patternfly/react-tokens';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { useRefWidth } from '../utils';\nimport { DataPoint } from '.';\n\nexport const DonutChart: React.FC<DonutChartProps> = ({\n  data,\n  query = '',\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  ariaDescription,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || t('No data');\n\n  const labels = ({ datum: { x, y } }) => t('public~{{x}}: {{y}}%', { x, y });\n\n  const namespaceData = data.filter((datum) => datum.x === 'Namespace');\n\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonut\n          ariaTitle={ariaChartTitle || title}\n          ariaDesc={ariaDescription}\n          data={data}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          labels={labels}\n          width={width}\n          subTitle={secondaryTitleText}\n          colorScale={\n            namespaceData[0]?.y === 100\n              ? [\n                  chart_color_gold_400.value,\n                  chart_color_gold_500.value,\n                  chart_color_black_100.value,\n                ]\n              : [\n                  chart_color_green_300.value,\n                  chart_color_green_500.value,\n                  chart_color_black_100.value,\n                ]\n          }\n          title={labelText}\n        />\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\ntype DonutChartProps = {\n  data: DataPoint[];\n  label: string;\n  query?: string;\n  secondaryTitle?: string;\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  ariaDescription?: string;\n  usedLabel?: string;\n  className?: string;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\nimport { YellowExclamationTriangleIcon } from '../../status';\n\nimport './quota-summary.scss';\n\ntype QuotaSummaryProps = {\n  hard: { [key: string]: string };\n  used: { [key: string]: string };\n};\n\nconst QuotaSummary = ({ hard, used }: QuotaSummaryProps): JSX.Element => {\n  const { t } = useTranslation();\n  const resourcesAtQuota = Object.keys(hard || {}).reduce(\n    (acc, resource) => (getUsedPercentage(hard[resource], used?.[resource]) >= 100 ? acc + 1 : acc),\n    0,\n  );\n\n  return (\n    <div className=\"co-resource-quota__summary\">\n      {t('console-shared~{{count}} resource', { count: Object.keys(hard || {}).length })}\n      {', '}\n      {resourcesAtQuota > 0 ? (\n        <>\n          <YellowExclamationTriangleIcon />{' '}\n          {t('console-shared~{{count}} resource reached quota', { count: resourcesAtQuota })}\n        </>\n      ) : (\n        t('console-shared~none are at quota')\n      )}\n    </div>\n  );\n};\n\nexport default QuotaSummary;\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { editApplicationModal } from '@console/topology/src/components/modals';\n\nexport const getModifyApplicationAction = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  insertBefore?: string | string[],\n): Action => {\n  return {\n    id: 'modify-application',\n    label: i18next.t('topology~Edit application grouping'),\n    insertBefore: insertBefore ?? 'edit-pod-count',\n    cta: () =>\n      editApplicationModal({\n        resourceKind: kind,\n        resource: obj,\n        blocking: true,\n        initialApplication: '',\n      }),\n    accessReview: {\n      verb: 'patch',\n      group: kind.apiGroup,\n      resource: kind.plural,\n      namespace: obj?.metadata?.namespace,\n    },\n  };\n};\n","import {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport {\n  DisplayFilters,\n  TopologyDisplayFilterType,\n  TopologyDisplayOption,\n} from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS, EXPAND_GROUPS_FILTER_ID } from './const';\n\nexport const TOPOLOGY_SEARCH_FILTER_KEY = 'searchQuery';\nexport const TOPOLOGY_LABELS_FILTER_KEY = 'labels';\n\nexport enum NameLabelFilterValues {\n  // t('topology~Name')\n  Name = 'Name',\n  // t('topology~Label')\n  Label = 'Label',\n}\n\nexport const onSearchChange = (searchQuery: string): void => {\n  if (searchQuery.length > 0) {\n    setQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY, searchQuery);\n  } else {\n    removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n  }\n};\n\nexport const clearNameFilter = () => {\n  onSearchChange('');\n};\nexport const clearLabelFilter = () => {\n  removeQueryArgument(TOPOLOGY_LABELS_FILTER_KEY);\n};\n\nexport const clearAll = () => {\n  clearNameFilter();\n  clearLabelFilter();\n};\n\nexport const getSupportedTopologyFilters = (state: RootState): string[] => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedFilters') : DEFAULT_TOPOLOGY_FILTERS.map((f) => f.id);\n};\n\nexport const getSupportedTopologyKinds = (state: RootState): { [key: string]: number } => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedKinds') : {};\n};\n\nexport const getTopologySearchQuery = () =>\n  getQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY) ??\n  getQueryArgument(TOPOLOGY_LABELS_FILTER_KEY) ??\n  '';\n\nexport const getFilterById = (id: string, filters: DisplayFilters): TopologyDisplayOption => {\n  if (!filters) {\n    return null;\n  }\n  return filters.find((f) => f.id === id);\n};\n\nexport const isExpanded = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const groupsExpanded = getFilterById(EXPAND_GROUPS_FILTER_ID, filters)?.value ?? true;\n  if (!groupsExpanded) {\n    return false;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.expand) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const isShown = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.show) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const showKind = (kind: K8sResourceKindReference, filters: DisplayFilters): boolean => {\n  if (!filters || !kind) {\n    return true;\n  }\n  // If no kinds are shown, show all\n  const shownKinds = filters.filter((f) => f.type === TopologyDisplayFilterType.kind && f.value);\n  if (shownKinds.length === 0) {\n    return true;\n  }\n\n  // Return filter value if it exists, otherwise filter it out since there are other set filters\n  return getFilterById(kind, filters)?.value ?? false;\n};\n","export { default as BaseNode } from './BaseNode';\nexport * from './WorkloadNode';\nexport { default as PodSet } from './PodSet';\nexport * from './decorators';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import * as React from 'react';\nimport {\n  Node,\n  ContextSubMenuItem,\n  ContextMenuItem,\n  Graph,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport {\n  Action,\n  GroupedMenuOption,\n  MenuOption,\n  MenuOptionType,\n} from '@console/dynamic-plugin-sdk/src';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getMenuOptionType, orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport ActionMenuItem from '@console/shared/src/components/actions/menu/ActionMenuItem';\nimport { getResource } from '../utils';\n\nexport const createContextMenuItems = (actions: MenuOption[]) => {\n  const sortedOptions = orderExtensionBasedOnInsertBeforeAndAfter(actions);\n  return sortedOptions.map((option: MenuOption) => {\n    const optionType = getMenuOptionType(option);\n    switch (optionType) {\n      case MenuOptionType.SUB_MENU:\n        return (\n          <ContextSubMenuItem label={option.label} key={option.id}>\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </ContextSubMenuItem>\n        );\n      case MenuOptionType.GROUP_MENU:\n        return (\n          <React.Fragment key={option.id}>\n            {option.label && <h1 className=\"pf-v5-c-dropdown__group-title\">{option.label}</h1>}\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </React.Fragment>\n        );\n      default:\n        return (\n          <ActionMenuItem key={option.id} action={option as Action} component={ContextMenuItem} />\n        );\n    }\n  });\n};\n\nexport const graphActionContext = (graph: Graph, connectorSource?: Node) => ({\n  'topology-context-actions': { element: graph, connectorSource },\n});\n\nexport const groupActionContext = (element: Node, connectorSource?: Node) => ({\n  'topology-context-actions': { element, connectorSource },\n});\n\nexport const contextMenuActions = (element: GraphElement) => {\n  const resource = getResource(element);\n  const { csvName } = element.getData()?.data ?? {};\n  return {\n    'topology-actions': element,\n    ...(resource ? { [referenceFor(resource)]: resource } : {}),\n    ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n  };\n};\n","import * as React from 'react';\nimport {\n  BadgeLocation,\n  DEFAULT_LAYER,\n  DefaultNode,\n  Layer,\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  TOP_LAYER,\n  useCombineRefs,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  StatusModifier,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { K8sVerb, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport useHover from '../../../../behavior/useHover';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { getKindStringAndAbbreviation } from './nodeUtils';\n\nimport '../../../svg/SvgResourceIcon.scss';\nimport './BaseNode.scss';\n\ntype BaseNodeProps = {\n  className?: string;\n  innerRadius?: number;\n  icon?: string;\n  kind?: string;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: React.ReactNode;\n  labelIconPadding?: number;\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  children?: React.ReactNode;\n  attachments?: React.ReactNode;\n  element: Node;\n  hoverRef?: (node: Element) => () => void;\n  dragging?: boolean;\n  dropTarget?: boolean;\n  canDrop?: boolean;\n  createConnectorAccessVerb?: K8sVerb;\n  nodeStatus?: NodeStatus;\n  showStatusBackground?: boolean;\n  alertVariant?: NodeStatus;\n} & Partial<WithSelectionProps> &\n  Partial<WithDragNodeProps> &\n  Partial<WithDndDropProps> &\n  Partial<WithContextMenuProps> &\n  Partial<WithCreateConnectorProps>;\n\nconst BaseNode: React.FC<BaseNodeProps> = ({\n  className,\n  innerRadius,\n  icon,\n  kind,\n  element,\n  hoverRef,\n  children,\n  onShowCreateConnector,\n  onContextMenu,\n  contextMenuOpen,\n  createConnectorAccessVerb = 'patch',\n  createConnectorDrag,\n  alertVariant,\n  ...rest\n}) => {\n  const [hoverChange, setHoverChange] = React.useState<boolean>(false);\n  const [hover, internalHoverRef] = useHover(200, 200, [hoverChange]);\n  const nodeHoverRefs = useCombineRefs(internalHoverRef, hoverRef);\n  const { width, height } = element.getDimensions();\n  const cx = width / 2;\n  const cy = height / 2;\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconRadius = innerRadius * 0.9;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: createConnectorAccessVerb,\n    resource: resourceModel?.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  const [filtered] = useSearchFilter(element.getLabel(), resourceObj?.metadata?.labels);\n  const showLabel = useShowLabel(hover || contextMenuOpen);\n  const kindData = kind && getKindStringAndAbbreviation(kind);\n\n  const detailsLevel = element.getController().getGraph().getDetailsLevel();\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const badgeClassName = kindData\n    ? classNames('odc-resource-icon', {\n        [`odc-resource-icon-${kindData.kindStr.toLowerCase()}`]: !kindData.kindColor,\n      })\n    : '';\n  React.useEffect(() => {\n    if (!createConnectorDrag) {\n      setHoverChange((prev) => !prev);\n    }\n  }, [createConnectorDrag]);\n  return (\n    <Layer id={hover || contextMenuOpen ? TOP_LAYER : DEFAULT_LAYER}>\n      <g ref={nodeHoverRefs} data-test-id={element.getLabel()}>\n        <DefaultNode\n          className={classNames(\n            'odc-base-node',\n            className,\n            alertVariant && StatusModifier[alertVariant],\n            {\n              'is-filtered': filtered,\n            },\n          )}\n          truncateLength={RESOURCE_NAME_TRUNCATE_LENGTH}\n          element={element}\n          showLabel={showLabel}\n          scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n          onShowCreateConnector={\n            editAccess && detailsLevel !== ScaleDetailsLevel.low && onShowCreateConnector\n          }\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          badge={kindData?.kindAbbr}\n          badgeColor={kindData?.kindColor}\n          badgeClassName={badgeClassName}\n          showStatusBackground={!showDetails}\n          {...rest}\n        >\n          <g data-test-id=\"base-node-handler\">\n            {icon && showDetails && (\n              <>\n                <circle\n                  fill=\"var(--pf-v5-global--palette--white)\"\n                  cx={cx}\n                  cy={cy}\n                  r={innerRadius + 6}\n                />\n                <image\n                  x={cx - iconRadius}\n                  y={cy - iconRadius}\n                  width={iconRadius * 2}\n                  height={iconRadius * 2}\n                  xlinkHref={icon}\n                />\n              </>\n            )}\n            {showDetails && children}\n          </g>\n        </DefaultNode>\n      </g>\n    </Layer>\n  );\n};\n\nexport default observer(BaseNode);\n","import * as React from 'react';\nimport Decorator from './Decorator';\n\ntype BuildDecoratorBubbleProps = React.ComponentProps<typeof Decorator> & {\n  children: React.ReactNode;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst BuildDecoratorBubble: React.FC<BuildDecoratorBubbleProps> = ({\n  children,\n  radius,\n  x,\n  y,\n  ...otherDecoratorProps\n}) => (\n  <Decorator x={x} y={y} radius={radius} {...otherDecoratorProps}>\n    <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n      <foreignObject width={radius} height={radius} style={{ fontSize: radius }}>\n        {children}\n      </foreignObject>\n    </g>\n  </Decorator>\n);\n\nexport default BuildDecoratorBubble;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport {\n  Node,\n  useSize,\n  useHover,\n  DefaultNode,\n  LabelBadge,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n  useAnchor,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport {\n  truncateMiddle,\n  shouldTruncate,\n  TruncateOptions,\n} from '@console/internal/components/utils';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport { useSearchFilter } from '../../../../filters';\nimport { OdcNodeModel } from '../../../../topology-types';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport GroupNodeAnchor from './GroupNodeAnchor';\nimport ResourceKindsInfo from './ResourceKindsInfo';\n\nimport './GroupNode.scss';\n\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\n\nconst truncateOptions: TruncateOptions = {\n  length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\n\ntype GroupNodeProps = {\n  element: Node;\n  bgClassName: string;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  emptyValue?: React.ReactNode;\n  groupResources?: OdcNodeModel[];\n  children?: React.ReactNode;\n  typeIconClass?: string;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & Partial<WithSelectionProps & WithDndDropProps & WithContextMenuProps & WithDragNodeProps>;\n\nconst GroupNode: React.FC<GroupNodeProps> = ({\n  element,\n  bgClassName,\n  badge,\n  badgeColor,\n  badgeClassName,\n  children,\n  emptyValue,\n  typeIconClass,\n  ...rest\n}) => {\n  const ref = React.useRef();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const [textHover, textHoverRef] = useHover();\n  const [iconSize, iconRef] = useSize([badge]);\n  const iconWidth = iconSize ? iconSize.width : 0;\n  const iconHeight = iconSize ? iconSize.height : 0;\n  const title = element.getLabel();\n  const { groupResources } = element.getData();\n  const [groupSize, groupRef] = useSize([groupResources]);\n  const width = groupSize ? groupSize.width : 0;\n  const height = groupSize ? groupSize.height : 0;\n  useAnchor(\n    React.useCallback((node: Node) => new GroupNodeAnchor(node, width, height, 1.5), [\n      width,\n      height,\n    ]),\n  );\n\n  const getCustomShape = () => () => (\n    <rect\n      className={classNames('odc-group-node__bg', bgClassName)}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      rx=\"5\"\n      ry=\"5\"\n    />\n  );\n\n  return (\n    <DefaultNode\n      element={element}\n      className={classNames('odc-group-node', { 'is-filtered': filtered })}\n      badge={badge}\n      badgeColor={badgeColor}\n      badgeClassName={badgeClassName}\n      showLabel={false}\n      getCustomShape={getCustomShape}\n      {...rest}\n    >\n      <g ref={groupRef}>\n        {typeIconClass && (\n          <SvgCircledIcon\n            className=\"odc-group-node__type-icon\"\n            x={10}\n            y={-10}\n            width={20}\n            height={20}\n            iconClass={typeIconClass}\n          />\n        )}\n        <g ref={groupRef}>\n          <LabelBadge\n            ref={iconRef}\n            x={LEFT_MARGIN}\n            y={TOP_MARGIN - 2}\n            badge={badge}\n            badgeClassName={badgeClassName}\n            badgeColor={badgeColor}\n          />\n          {title && (\n            <g ref={textHoverRef}>\n              <Tooltip\n                content={title}\n                position={TooltipPosition.top}\n                trigger=\"manual\"\n                isVisible={textHover && shouldTruncate(title, truncateOptions)}\n                triggerRef={ref}\n              >\n                <text\n                  ref={ref}\n                  className=\"odc-group-node__title\"\n                  x={LEFT_MARGIN + iconWidth + TEXT_MARGIN}\n                  y={TOP_MARGIN + iconHeight}\n                  textAnchor=\"start\"\n                  dy=\"-0.25em\"\n                >\n                  {truncateMiddle(title, truncateOptions)}\n                </text>\n              </Tooltip>\n            </g>\n          )}\n          {(children || groupResources || emptyValue) && (\n            <g transform={`translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})`}>\n              {(groupResources || emptyValue) && (\n                <ResourceKindsInfo groupResources={groupResources} emptyValue={emptyValue} />\n              )}\n              {children}\n            </g>\n          )}\n        </g>\n      </g>\n    </DefaultNode>\n  );\n};\n\nexport default observer(GroupNode);\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","export * from './componentUtils';\nexport * from './componentFactory';\nexport * from './nodeContextMenu';\nexport * from './nodes';\nexport * from './edges';\nexport * from './groups';\nexport * from './NodeShadows';\n","import * as React from 'react';\nimport {\n  Modifiers,\n  Edge,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n  Graph,\n  DragSourceSpec,\n  DragObjectWithType,\n  DropTargetSpec,\n  DropTargetMonitor,\n  DragSpecOperationType,\n  CREATE_CONNECTOR_DROP_TYPE,\n  CREATE_CONNECTOR_OPERATION,\n  isGraph,\n  withDndDrop,\n  DragEvent,\n  DragOperationWithType,\n} from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { action } from 'mobx';\nimport { errorModal } from '@console/internal/components/modals';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ActionContext } from '@console/shared';\nimport { createConnection, moveNodeToGroup } from '../../../utils';\nimport { isWorkloadRegroupable, graphContextMenu, groupContextMenu } from './nodeContextMenu';\nimport withTopologyContextMenu from './withTopologyContextMenu';\nimport './GraphComponent.scss';\n\nconst MOVE_CONNECTOR_DROP_TYPE = '#moveConnector#';\n\nconst NODE_DRAG_TYPE = '#node#';\nconst EDGE_DRAG_TYPE = '#edge#';\n\nconst MOVE_CONNECTOR_OPERATION = 'moveconnector';\nconst REGROUP_OPERATION = 'regroup';\n\ntype GraphComponentProps = {\n  element: GraphElement;\n};\n\ntype NodeComponentProps = {\n  element: GraphElement;\n};\n\ntype EdgeComponentProps = {\n  element: GraphElement;\n};\n\n/**\n * type: the drag operation type\n * edit: true if the operation performs an edit, used to dim invalid drop targets\n * canDropOnNode: true if the drag object can be dropped on node, used to highlight valid drop nodes\n */\ntype EditableDragOperationType = DragOperationWithType & {\n  edit?: boolean;\n  canDropOnNode?: (operationType: string, dragElement: GraphElement, node: Node) => boolean;\n};\n\ntype DragNodeObject = {\n  element: GraphElement;\n  allowRegroup: boolean;\n};\n\nconst canDropEdgeOnNode = (operation: string, edge: Edge, node: Node): boolean => {\n  if (edge.getSource() === node) {\n    return false;\n  }\n\n  if (edge.getTarget() === node) {\n    return true;\n  }\n\n  return !node.getTargetEdges().find((e) => e.getSource() === edge.getSource());\n};\n\nconst highlightNode = (monitor: DropTargetMonitor, element: Node): boolean => {\n  const operation = monitor.getOperation() as EditableDragOperationType;\n  if (!monitor.isDragging() || !operation) {\n    return false;\n  }\n\n  if (operation.type === CREATE_CONNECTOR_OPERATION) {\n    return (\n      monitor.getItem() !== element &&\n      monitor.getItem().getParent() !== element &&\n      !monitor\n        .getItem()\n        .getSourceEdges()\n        .find((e) => e.getTarget() === element)\n    );\n  }\n\n  return (\n    operation.canDropOnNode && operation.canDropOnNode(operation.type, monitor.getItem(), element)\n  );\n};\n\nexport type NodeDragSourceSpecType = DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  GraphElement,\n  {\n    dragging?: boolean;\n    regrouping?: boolean;\n  },\n  NodeComponentProps & { canEdit?: boolean }\n>;\n\nconst nodeDragSourceSpec = (\n  type: string,\n  allowRegroup: boolean = true,\n  canEdit: boolean = false,\n): NodeDragSourceSpecType => ({\n  item: { type: NODE_DRAG_TYPE },\n  operation: (monitor, props) => {\n    return (canEdit || props.canEdit) &&\n      allowRegroup &&\n      isWorkloadRegroupable(props.element as Node)\n      ? {\n          [Modifiers.SHIFT]: { type: REGROUP_OPERATION, edit: true },\n        }\n      : undefined;\n  },\n  canCancel: (monitor) => monitor.getOperation()?.type === REGROUP_OPERATION,\n  begin: (monitor, props): DragNodeObject => {\n    return {\n      element: props.element,\n      allowRegroup:\n        (canEdit || props.canEdit) && allowRegroup && isWorkloadRegroupable(props.element as Node),\n    };\n  },\n  end: async (dropResult, monitor, props) => {\n    if (!monitor.isCancelled() && monitor.getOperation()?.type === REGROUP_OPERATION) {\n      if (monitor.didDrop() && dropResult && props && props.element.getParent() !== dropResult) {\n        const controller = props.element.getController();\n        await moveNodeToGroup(\n          props.element as Node,\n          isNode(dropResult) ? (dropResult as Node) : null,\n        );\n\n        // perform the optimistic update in an action so as not to render too soon\n        action(() => {\n          // FIXME: check shouldn't be necessary if we handled the async and backend data refresh correctly\n          if (controller.getNodeById(props.element.getId())) {\n            dropResult.appendChild(props.element);\n          }\n        })();\n      } else {\n        // cancel operation\n        return Promise.reject();\n      }\n    }\n    return undefined;\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n    regrouping: monitor.getOperation()?.type === REGROUP_OPERATION,\n  }),\n});\n\nconst noRegroupDragSourceSpec: DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  {\n    dragging?: boolean;\n  },\n  NodeComponentProps\n> = {\n  item: { type: NODE_DRAG_TYPE },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n};\n\nconst nodesEdgeIsDragging = (monitor, props) => {\n  if (!monitor.isDragging()) {\n    return false;\n  }\n  if (monitor.getOperation()?.type === MOVE_CONNECTOR_OPERATION) {\n    return monitor.getItem().getSource() === props.element;\n  }\n  if (monitor.getOperation()?.type === CREATE_CONNECTOR_OPERATION) {\n    return monitor.getItem() === props.element;\n  }\n  return false;\n};\n\nconst nodeDropTargetSpec: DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean },\n  NodeComponentProps\n> = {\n  accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor, props) => {\n    if (isEdge(item)) {\n      return canDropEdgeOnNode(monitor.getOperation()?.type, item as Edge, props.element as Node);\n    }\n    if (!props.element || item === props.element) {\n      return false;\n    }\n    return !(props.element as Node).getTargetEdges().find((e) => e.getSource() === item);\n  },\n  collect: (monitor, props) => ({\n    canDrop: highlightNode(monitor, props.element as Node),\n    dropTarget: monitor.isOver({ shallow: true }),\n    edgeDragging: nodesEdgeIsDragging(monitor, props),\n  }),\n};\n\nconst graphDropTargetSpec: DropTargetSpec<\n  DragNodeObject,\n  any,\n  { dragEditInProgress: boolean },\n  GraphComponentProps\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  hitTest: () => true,\n  canDrop: (item, monitor, props) => {\n    return (\n      monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n      ((monitor.getOperation()?.type === REGROUP_OPERATION &&\n        // FIXME: the hasParent check is necessary due to model updates during async actions\n        item.element.hasParent() &&\n        item.element.getParent() !== props.element) ||\n        monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE)\n    );\n  },\n  collect: (monitor) => {\n    const operation = monitor.getOperation() as EditableDragOperationType;\n    const dragInProgress = monitor.isDragging();\n    const dragEditInProgress =\n      monitor.isDragging() && (operation?.type === CREATE_CONNECTOR_OPERATION || operation?.edit);\n    const dragCreate =\n      dragEditInProgress &&\n      (monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE ||\n        monitor.getItemType() === MOVE_CONNECTOR_DROP_TYPE);\n    return {\n      dragInProgress,\n      dragEditInProgress,\n      dragCreate,\n      hasDropTarget: dragEditInProgress && monitor.hasDropTarget(),\n    };\n  },\n  dropHint: 'create',\n};\n\nconst applicationGroupDropTargetSpec: DropTargetSpec<\n  any,\n  any,\n  { droppable: boolean; dropTarget: boolean; canDrop: boolean },\n  any\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor) =>\n    monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n    (monitor.getOperation()?.type === REGROUP_OPERATION ||\n      monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n  collect: (monitor) => {\n    return {\n      droppable: monitor.isDragging() && monitor.getOperation()?.type === REGROUP_OPERATION,\n      dropTarget: monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }),\n      canDrop:\n        monitor.isDragging() &&\n        (monitor.getOperation()?.type === REGROUP_OPERATION ||\n          monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n      dragRegroupable: monitor.isDragging() && monitor.getItem()?.allowRegroup,\n    };\n  },\n  dropHint: 'create',\n};\n\nconst edgeDragSourceSpec = (\n  type: string,\n  callback: (\n    sourceNode: Node,\n    targetNode: Node,\n    replaceTargetNode?: Node,\n  ) => Promise<K8sResourceKind[] | K8sResourceKind>,\n  failureTitle?: string,\n): DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  { dragging: boolean },\n  EdgeComponentProps\n> => ({\n  item: { type: EDGE_DRAG_TYPE },\n  operation: { type: MOVE_CONNECTOR_OPERATION, edit: true, canDropOnNode: canDropEdgeOnNode },\n  begin: (monitor, props) => {\n    props.element.raise();\n    return props.element;\n  },\n  drag: (event, monitor, props) => {\n    (props.element as Edge).setEndPoint(event.x, event.y);\n  },\n  end: (dropResult, monitor, props) => {\n    const edge = props.element as Edge;\n    edge.setEndPoint();\n    if (\n      monitor.didDrop() &&\n      dropResult &&\n      canDropEdgeOnNode(monitor.getOperation()?.type, edge, dropResult)\n    ) {\n      const title =\n        failureTitle !== undefined ? failureTitle : i18next.t('topology~Error moving connection');\n      callback(edge.getSource(), dropResult, edge.getTarget()).catch((error) => {\n        errorModal({ title, error: error.message, showIcon: true });\n      });\n    }\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n});\n\nconst noDropTargetSpec: DropTargetSpec<GraphElement, any, {}, { element: GraphElement }> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: () => {\n    return false;\n  },\n};\n\nconst withNoDrop = () => {\n  return withDndDrop<any, any, {}, NodeComponentProps>(noDropTargetSpec);\n};\n\nconst withContextMenu = <E extends GraphElement>(actions: (element: E) => ActionContext) => {\n  return withTopologyContextMenu(\n    actions,\n    document.getElementById('popper-container'),\n    'odc-topology-context-menu',\n  );\n};\n\nconst createVisualConnector = (source: Node, target: Node | Graph): React.ReactElement[] | null => {\n  if (isGraph(target)) {\n    return graphContextMenu(target, source);\n  }\n  if (target.isGroup()) {\n    return groupContextMenu(target, source);\n  }\n\n  createConnection(source, target, null).catch((error) => {\n    errorModal({ title: i18next.t('topology~Error creating connection'), error: error.message });\n  });\n\n  return null;\n};\n\nconst createConnectorCallback = () => (\n  source: Node,\n  target: Node | Graph,\n  event: DragEvent,\n  dropHints: string[] | undefined,\n): Promise<React.ReactElement[] | null> => {\n  if (source === target) {\n    return null;\n  }\n  const relationshipProviders = target.getGraph()?.getData()?.relationshipProviderExtensions;\n  const curRelProvider = relationshipProviders?.find(({ uid }) => dropHints.includes(uid));\n  if (curRelProvider) {\n    return curRelProvider.properties.create(source, target);\n  }\n\n  const createConnectors = target.getGraph()?.getData()?.createConnectorExtensions;\n  if (isGraph(target) || !createConnectors) {\n    return Promise.resolve(createVisualConnector(source, target));\n  }\n  const creator = createConnectors.find((getter) => !!getter(dropHints, source, target));\n  if (creator) {\n    return creator(dropHints, source, target)(source, target);\n  }\n  return Promise.resolve(createVisualConnector(source, target));\n};\n\nexport {\n  GraphComponentProps,\n  NodeComponentProps,\n  EdgeComponentProps,\n  EditableDragOperationType,\n  DragNodeObject,\n  nodesEdgeIsDragging,\n  noRegroupDragSourceSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  graphDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  noDropTargetSpec,\n  createConnectorCallback,\n  REGROUP_OPERATION,\n  MOVE_CONNECTOR_DROP_TYPE,\n  NODE_DRAG_TYPE,\n  EDGE_DRAG_TYPE,\n  withNoDrop,\n  withContextMenu,\n  canDropEdgeOnNode,\n  highlightNode,\n};\n","import * as React from 'react';\nimport { Node, Graph, isGraph } from '@patternfly/react-topology';\nimport { ActionServiceProvider } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP } from '@console/topology/src/const';\nimport { createContextMenuItems } from '../../../actions/contextMenuActions';\n\nexport const isWorkloadRegroupable = (node: Node): boolean =>\n  isGraph(node?.getParent()) || node?.getParent().getType() === TYPE_APPLICATION_GROUP;\n\nexport const groupContextMenu = (element: Node, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n\nexport const graphContextMenu = (graph: Graph, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element: graph, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n","export { default as BaseEdge } from './BaseEdge';\nexport { default as AggregateEdge } from './AggregateEdge';\nexport { default as ConnectsTo } from './ConnectsTo';\nexport { default as CreateConnector } from './CreateConnector';\nexport { default as ServiceBinding } from './ServiceBinding';\nexport { default as TrafficConnector } from './TrafficConnector';\n","export { default as GroupNode } from './GroupNode';\nexport { default as GroupNodeAnchor } from './GroupNodeAnchor';\nexport { default as Application } from './Application';\nexport { default as ResourceKindsInfo } from './ResourceKindsInfo';\n","import { useContext } from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { DisplayFilters } from '../topology-types';\nimport { FilterContext } from './FilterProvider';\n\nconst useDisplayFilters = (): DisplayFilters => {\n  const { filters } = useContext(FilterContext);\n  return useDeepCompareMemoize(filters);\n};\n\nexport { useDisplayFilters };\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import { Node, Point, AbstractAnchor, getRectAnchorPoint } from '@patternfly/react-topology';\n\nclass GroupNodeAnchor extends AbstractAnchor<Node> {\n  protected readonly width: number;\n\n  protected readonly height: number;\n\n  constructor(owner: Node, width: number, height: number, offset: number = 0) {\n    super(owner, offset);\n    this.width = width;\n    this.height = height;\n  }\n\n  getLocation(reference: Point): Point {\n    const center = new Point(\n      this.owner.getPosition().x + this.width / 2,\n      this.owner.getPosition().y + this.height / 2,\n    );\n\n    const offset2x = this.offset * 2;\n    return getRectAnchorPoint(center, this.width + offset2x, this.height + offset2x, reference);\n  }\n}\n\nexport default GroupNodeAnchor;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { modelFor, pluralizeKind, referenceForModel } from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../../../../topology-types';\n\nimport './ResourceKindsInfo.scss';\n\nexport const RESOURCE_INFO_PADDING = 32;\nexport const RESOURCE_KIND_ROW_WIDTH = 250;\nexport const RESOURCE_KIND_ROW_HEIGHT = 29;\n\ntype ResourceKindsInfoProps = {\n  groupResources: OdcNodeModel[];\n  emptyValue?: React.ReactNode;\n};\n\nconst ResourceKindsInfo: React.FC<ResourceKindsInfoProps> = ({ groupResources, emptyValue }) => {\n  const resourcesData = {};\n  _.forEach(groupResources, (node: OdcNodeModel) => {\n    if (!node) {\n      return;\n    }\n    const kind = node.resourceKind || node.resource?.kind;\n    resourcesData[kind] = [...(resourcesData[kind] ? resourcesData[kind] : []), node.resource];\n  });\n  const resourceTypes = _.keys(resourcesData);\n\n  if (!resourceTypes.length) {\n    return (\n      <foreignObject\n        width={RESOURCE_KIND_ROW_WIDTH}\n        height={RESOURCE_INFO_PADDING + RESOURCE_KIND_ROW_HEIGHT}\n      >\n        <div className=\"odc-resource-kinds-info\">{emptyValue}</div>\n      </foreignObject>\n    );\n  }\n\n  return (\n    <foreignObject\n      width={RESOURCE_KIND_ROW_WIDTH}\n      height={RESOURCE_INFO_PADDING + resourceTypes.length * RESOURCE_KIND_ROW_HEIGHT}\n    >\n      <div className=\"odc-resource-kinds-info\">\n        <table className=\"odc-resource-kinds-info__table\">\n          <tbody className=\"odc-resource-kinds-info__body\">\n            {resourceTypes.map((key) => {\n              const kindObj = modelFor(key);\n              let kind;\n              let label;\n              if (kindObj) {\n                kind = kindObj.crd ? referenceForModel(kindObj) : kindObj.kind;\n                label = resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label;\n              } else {\n                kind = key;\n                label = resourcesData[key].length > 1 ? pluralizeKind(key) : _.startCase(key);\n              }\n              return (\n                <tr key={key} className=\"odc-resource-kinds-info__row\">\n                  <td className=\"odc-resource-kinds-info__count\">{resourcesData[key].length}</td>\n                  <td className=\"odc-resource-kinds-info__resource-icon\">\n                    <ResourceIcon kind={kind} />\n                  </td>\n                  <td className=\"odc-resource-kinds-info__kind\">{label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </foreignObject>\n  );\n};\n\nexport default ResourceKindsInfo;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RevisionModel } from '@console/knative-plugin/src/models';\nimport {\n  PodRCData,\n  PodStatus,\n  calculateRadius,\n  getPodData,\n  podDataInProgress,\n  usePodRingLabel,\n  useRelatedHPA,\n} from '@console/shared';\n\ninterface PodSetProps {\n  size: number;\n  data: PodRCData;\n  showPodCount?: boolean;\n  x?: number;\n  y?: number;\n}\n\ninterface InnerPodStatusRadius {\n  innerPodStatusOuterRadius: number;\n  innerPodStatusInnerRadius: number;\n}\n\nconst calculateInnerPodStatusRadius = (\n  outerPodStatusInnerRadius: number,\n  outerPodStatusWidth: number,\n): InnerPodStatusRadius => {\n  const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n  const spaceBwOuterAndInnerPodStatus = 3;\n  const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n  const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n\n  return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\n\nexport const podSetInnerRadius = (size: number, data?: PodRCData) => {\n  const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  let radius = podStatusInnerRadius;\n\n  if (data && podDataInProgress(data.obj, data.current, data.isRollingOut)) {\n    const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n      radius,\n      podStatusStrokeWidth,\n    );\n    radius = innerPodStatusInnerRadius;\n  }\n\n  const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n\n  return radius - innerStrokeWidth - podStatusInset;\n};\n\nconst PodSet: React.FC<PodSetProps> = React.memo(function PodSet({\n  size,\n  data,\n  x = 0,\n  y = 0,\n  showPodCount,\n}) {\n  const { t } = useTranslation();\n  const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(\n    size,\n  );\n  const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n    podStatusInnerRadius,\n    podStatusStrokeWidth,\n  );\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(data);\n\n  const [hpa] = useRelatedHPA(\n    data.obj?.apiVersion,\n    data.obj?.kind,\n    data.obj?.metadata?.name,\n    data.obj?.metadata?.namespace,\n  );\n  const hpaControlledScaling = !!hpa;\n\n  const obj = data.current?.obj || data.obj;\n  const ownerKind = RevisionModel.kind === data.obj?.kind ? data.obj.kind : obj.kind;\n  const { title, subTitle, titleComponent } = usePodRingLabel(\n    obj,\n    ownerKind,\n    data?.pods,\n    hpaControlledScaling,\n    t,\n    hpa,\n  );\n  return (\n    <>\n      <PodStatus\n        key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n        x={x - size / 2}\n        y={y - size / 2}\n        innerRadius={podStatusInnerRadius}\n        outerRadius={podStatusOuterRadius}\n        data={completedDeploymentData}\n        size={size}\n        subTitle={showPodCount ? subTitle : undefined}\n        title={showPodCount ? title : undefined}\n        titleComponent={showPodCount ? titleComponent : undefined}\n      />\n      {inProgressDeploymentData && (\n        <PodStatus\n          x={x - size / 2}\n          y={y - size / 2}\n          innerRadius={innerPodStatusInnerRadius}\n          outerRadius={innerPodStatusOuterRadius}\n          data={inProgressDeploymentData}\n          size={size}\n        />\n      )}\n    </>\n  );\n});\n\nexport default PodSet;\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import { BaseEdge } from '@patternfly/react-topology';\nimport { observable, makeObservable } from 'mobx';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { OdcEdgeModel } from '../topology-types';\n\nclass OdcBaseEdge extends BaseEdge {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind;\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcEdgeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseEdge;\n","export * from './components';\nexport { default as Topology } from './Topology';\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../../module/k8s';\n\nexport const ClusterDashboardContext = React.createContext<ClusterDashboardContext>({\n  infrastructureLoaded: true,\n  infrastructureError: null,\n});\n\n// eslint-disable-next-line no-redeclare\ntype ClusterDashboardContext = {\n  infrastructure?: K8sResourceKind;\n  infrastructureLoaded: boolean;\n  infrastructureError: any;\n};\n","import * as React from 'react';\nimport { useUserSettingsCompatibility } from '@console/shared';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from '../redux/const';\nimport { DisplayFilters } from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS } from './const';\n\nconst TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY = `devconsole.topology.filters`;\n\nconst getTopologyFilters = (appliedFilters: AppliedFilters) => {\n  const filters = [...DEFAULT_TOPOLOGY_FILTERS];\n  filters.forEach((filter) => {\n    if (appliedFilters[filter.id] !== undefined) {\n      filter.value = appliedFilters[filter.id];\n    }\n  });\n\n  return filters;\n};\n\nconst getAppliedFilters = (filters: DisplayFilters): { [id: string]: boolean } => {\n  if (!filters?.length) {\n    return {};\n  }\n\n  return filters.reduce((acc, filter) => {\n    acc[filter.id] = filter.value;\n    return acc;\n  }, {});\n};\n\ntype AppliedFilters = { [filterKey: string]: boolean };\ntype SetTopologyFilters = (filters: DisplayFilters) => void;\n\nconst useFilterContextValues = (): [\n  DisplayFilters,\n  AppliedFilters,\n  boolean,\n  SetTopologyFilters,\n] => {\n  const [appliedFilters, setAppliedFilters, appliedFiltersLoaded] = useUserSettingsCompatibility(\n    TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY,\n    TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY,\n    getAppliedFilters(DEFAULT_TOPOLOGY_FILTERS),\n  );\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const [filters, setFilters] = React.useState<DisplayFilters>([]);\n\n  React.useEffect(() => {\n    if (appliedFiltersLoaded && !filtersLoaded) {\n      setFilters(getTopologyFilters(appliedFilters));\n      setFiltersLoaded(true);\n    }\n  }, [appliedFilters, appliedFiltersLoaded, filtersLoaded]);\n\n  const setTopologyFilters = React.useCallback(\n    (displayFilters: DisplayFilters) => {\n      setFilters(displayFilters);\n      setAppliedFilters(getAppliedFilters(displayFilters));\n    },\n    [setAppliedFilters],\n  );\n\n  return [filters, appliedFilters, appliedFilters && filtersLoaded, setTopologyFilters];\n};\n\ntype FilterContextType = {\n  filters?: DisplayFilters;\n  appliedFilters?: AppliedFilters;\n  setTopologyFilters?: SetTopologyFilters;\n};\n\nexport const FilterContext = React.createContext<FilterContextType>({});\n\nexport const FilterProvider: React.FC = ({ children }) => {\n  const [filters, appliedFilters, loaded, setTopologyFilters] = useFilterContextValues();\n  return (\n    <FilterContext.Provider value={{ filters, appliedFilters, setTopologyFilters }}>\n      {loaded ? children : null}\n    </FilterContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { FirehoseResourcesResult } from '@console/internal/components/utils';\nimport { GetOperatorsWithStatuses, LazyLoader, OperatorRowProps } from '@console/plugin-sdk';\nimport { getMostImportantStatuses } from './state-utils';\nimport { HealthState } from './states';\nimport StatusItem, { StatusPopupSection } from './StatusPopup';\n\nimport './operator-body.scss';\n\nexport const OperatorsSection: React.FC<OperatorsSectionProps> = ({\n  resources,\n  getOperatorsWithStatuses,\n  title,\n  linkTo,\n  Row,\n  Component,\n  isResolved,\n}) => {\n  const { t } = useTranslation();\n  const error = _.values(resources).some((r) => r.loadError);\n  const operatorStatuses = getOperatorsWithStatuses(resources);\n  const sortedOperatorStatuses = getMostImportantStatuses(operatorStatuses).sort((a, b) =>\n    a.operators[0].metadata.name.localeCompare(b.operators[0].metadata.name),\n  );\n  const operatorsHealthy = sortedOperatorStatuses.every((o) => o.status.health === HealthState.OK);\n  const RowLoading = React.useCallback(() => <div className=\"co-status__operator-skeleton\" />, []);\n  if (!operatorStatuses.length) {\n    return null;\n  }\n\n  return (\n    <StatusPopupSection\n      firstColumn={\n        <>\n          <span>{title}</span>\n          <span className=\"text-secondary co-status__operator-detail\">\n            {' '}\n            {t('console-shared~({{operatorStatusLength}} installed)', {\n              operatorStatusLength: operatorStatuses.length,\n            })}\n          </span>\n        </>\n      }\n      secondColumn={t('console-shared~Status')}\n    >\n      {error ? (\n        <div className=\"text-secondary\">{t('console-shared~Not available')}</div>\n      ) : (\n        !operatorsHealthy &&\n        sortedOperatorStatuses.map((operatorStatus) => (\n          <Row\n            key={operatorStatus.operators[0].metadata.uid}\n            Component={Component}\n            operatorStatus={operatorStatus}\n            LoadingComponent={RowLoading}\n            isResolved={isResolved}\n          />\n        ))\n      )}\n      <StatusItem\n        value={t('console-shared~All {{status}}', {\n          status: operatorStatuses[0].status.title.toLowerCase(),\n        })}\n        icon={operatorStatuses[0].status.icon}\n      >\n        <Link to={linkTo}>{t('console-shared~View all')}</Link>\n      </StatusItem>\n    </StatusPopupSection>\n  );\n};\n\ntype OperatorsSectionProps = {\n  resources: FirehoseResourcesResult;\n  getOperatorsWithStatuses: GetOperatorsWithStatuses;\n  title: string;\n  linkTo: string;\n  Row: React.ComponentType<\n    OperatorRowProps & {\n      LoadingComponent: () => JSX.Element;\n      Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n      key: string;\n      isResolved: boolean;\n    }\n  >;\n  isResolved: boolean;\n  Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useExtensions,\n  DashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthOperator,\n} from '@console/plugin-sdk';\nimport {\n  DashboardsOverviewHealthSubsystem as DynamicDashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem as isDynamicDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem as isDynamicDashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem as isDynamicDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthURLSubsystem,\n  isResolvedDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthResourceSubsystem,\n  isResolvedDashboardsOverviewHealthOperator,\n  ResolvedExtension,\n  useResolvedExtensions,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport { Gallery, GalleryItem, Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport { BlueArrowCircleUpIcon, FLAGS, useCanClusterUpgrade } from '@console/shared';\n\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport AlertItem, {\n  StatusItem,\n} from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '../../../monitoring/utils';\nimport {\n  ClusterVersionKind,\n  referenceForModel,\n  hasAvailableUpdates,\n  K8sKind,\n  ObjectMetadata,\n} from '../../../../module/k8s';\nimport { ClusterVersionModel } from '../../../../models';\nimport { RootState } from '../../../../redux';\nimport {\n  OperatorHealthItem,\n  PrometheusHealthItem,\n  URLHealthItem,\n  ResourceHealthItem,\n} from './health-item';\nimport { useK8sWatchResource } from '../../../utils/k8s-watch-hook';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { useNotificationAlerts } from '@console/shared/src/hooks/useNotificationAlerts';\n\nconst filterSubsystems = (\n  subsystems: (\n    | DashboardsOverviewHealthSubsystem\n    | ResolvedExtension<DynamicDashboardsOverviewHealthSubsystem>\n  )[],\n  k8sModels: ImmutableMap<string, K8sKind>,\n) =>\n  subsystems.filter((s) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(s) ||\n      isDashboardsOverviewHealthPrometheusSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthURLSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthPrometheusSubsystem(s)\n    ) {\n      const subsystem = s as\n        | DashboardsOverviewHealthPrometheusSubsystem\n        | DashboardsOverviewHealthURLSubsystem\n        | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>\n        | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem>;\n      return subsystem.properties.additionalResource &&\n        !subsystem.properties.additionalResource.optional\n        ? !!k8sModels.get(subsystem.properties.additionalResource.kind)\n        : true;\n    }\n    return true;\n  });\n\nconst cvResource: WatchK8sResource = {\n  kind: referenceForModel(ClusterVersionModel),\n  namespaced: false,\n  name: 'version',\n  isList: false,\n};\n\nexport const DashboardAlerts: React.FC<DashboardAlertsProps> = ({ labelSelector }) => {\n  const { t } = useTranslation();\n  const hasCVResource = useFlag(FLAGS.CLUSTER_VERSION);\n  const [alerts, , loadError] = useNotificationAlerts(labelSelector);\n  const [cv, cvLoaded] = useK8sWatchResource<ClusterVersionKind>(\n    hasCVResource ? cvResource : ({} as WatchK8sResource),\n  );\n  const canUpgrade = useCanClusterUpgrade();\n\n  const showClusterUpdate =\n    canUpgrade && hasCVResource && cvLoaded && hasAvailableUpdates(cv) && !labelSelector;\n  return (\n    <AlertsBody error={!_.isEmpty(loadError)}>\n      {showClusterUpdate && (\n        <StatusItem\n          key=\"clusterUpdate\"\n          Icon={BlueArrowCircleUpIcon}\n          message={t('public~A cluster version update is available')}\n        >\n          <Link to=\"/settings/cluster?showVersions\">{t('public~Update cluster')}</Link>\n        </StatusItem>\n      )}\n      {alerts.map((alert) => (\n        <AlertItem key={alertURL(alert, alert.rule.id)} alert={alert} />\n      ))}\n    </AlertsBody>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  k8sModels: state.k8s.getIn(['RESOURCES', 'models']),\n});\nexport const StatusCard = connect<StatusCardProps>(mapStateToProps)(({ k8sModels }) => {\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const [dynamicSubsystemExtensions] = useResolvedExtensions<\n    DynamicDashboardsOverviewHealthSubsystem\n  >(isDynamicDashboardsOverviewHealthSubsystem);\n\n  const subsystems = React.useMemo(() => {\n    const filteredSubsystems = filterSubsystems(\n      [...subsystemExtensions, ...dynamicSubsystemExtensions],\n      k8sModels,\n    );\n    return filteredSubsystems.map((e) => {\n      if (\n        isResolvedDashboardsOverviewHealthURLSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthPrometheusSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthResourceSubsystem(e)\n      ) {\n        const popup = e.properties.popupComponent\n          ? { popupComponent: () => Promise.resolve(e.properties.popupComponent) }\n          : {};\n        return {\n          ...e,\n          properties: {\n            ...e.properties,\n            ...popup,\n          },\n        };\n      }\n      return e;\n    });\n  }, [subsystemExtensions, dynamicSubsystemExtensions, k8sModels]);\n\n  const operatorSubsystemIndex = React.useMemo(\n    () =>\n      subsystems.findIndex(\n        (e) =>\n          isDashboardsOverviewHealthOperator(e) || isResolvedDashboardsOverviewHealthOperator(e),\n      ),\n    [subsystems],\n  );\n  const { t } = useTranslation();\n  const healthItems: { title: string; Component: React.ReactNode }[] = [];\n  subsystems.forEach((subsystem) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthURLSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <URLHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthPrometheusSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthPrometheusSubsystem(subsystem)\n    ) {\n      const { disallowedControlPlaneTopology } = subsystem.properties;\n      if (\n        disallowedControlPlaneTopology?.length &&\n        disallowedControlPlaneTopology.includes(window.SERVER_FLAGS.controlPlaneTopology)\n      ) {\n        return;\n      }\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <PrometheusHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthResourceSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthResourceSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <ResourceHealthItem subsystem={subsystem.properties} />,\n      });\n    }\n  });\n\n  if (operatorSubsystemIndex !== -1) {\n    const operatorSubsystems: DashboardsOverviewHealthOperator['properties'][] = [];\n    const dynamicOperatorSubsystems: ResolvedExtension<\n      DynamicDashboardsOverviewHealthOperator\n    >['properties'][] = [];\n    subsystems.forEach((e) => {\n      if (isResolvedDashboardsOverviewHealthOperator(e)) {\n        dynamicOperatorSubsystems.push(e.properties);\n      } else if (isDashboardsOverviewHealthOperator(e)) {\n        operatorSubsystems.push(e.properties);\n      }\n    });\n    healthItems.splice(operatorSubsystemIndex, 0, {\n      title: 'Operators',\n      Component: (\n        <OperatorHealthItem\n          operatorExtensions={operatorSubsystems}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      ),\n    });\n  }\n\n  return (\n    <Card\n      data-test-id=\"status-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to=\"/monitoring/alerts\" data-test=\"status-card-view-alerts\">\n                {t('public~View alerts')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      <HealthBody>\n        <Gallery className=\"co-overview-status__health\" hasGutter>\n          {healthItems.map((item) => {\n            return (\n              <GalleryItem key={item.title} data-test={item.title}>\n                {item.Component}\n              </GalleryItem>\n            );\n          })}\n        </Gallery>\n      </HealthBody>\n      <DashboardAlerts />\n    </Card>\n  );\n});\n\ntype StatusCardProps = {\n  k8sModels: ImmutableMap<string, K8sKind>;\n};\n\ntype DashboardAlertsProps = {\n  labelSelector?: ObjectMetadata['labels'];\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FLAGS, useActiveNamespace, useFlag } from '@console/shared';\nimport { useCreateNamespaceOrProjectModal } from '@console/shared/src/hooks/useCreateNamespaceOrProjectModal';\nimport ProjectListPage, { ProjectListPageProps } from './ProjectListPage';\n\ntype LazySubTitleRender = (openProjectModal: () => void) => React.ReactNode;\nexport interface CreateProjectListPageProps extends ProjectListPageProps {\n  title: string;\n  children: LazySubTitleRender;\n  onCreate?: (project: K8sResourceKind) => void;\n}\n\ntype CreateAProjectButtonProps = {\n  openProjectModal: () => void;\n};\n\nexport const CreateAProjectButton: React.FC<CreateAProjectButtonProps> = ({ openProjectModal }) => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  if (canCreateProject) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Project\n        </Button>\n      </Trans>\n    );\n  }\n  if (canCreateNs) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Namespace\n        </Button>\n      </Trans>\n    );\n  }\n  return null;\n};\n\nconst CreateProjectListPage: React.FC<CreateProjectListPageProps> = ({\n  onCreate,\n  title,\n  children,\n  ...props\n}) => {\n  const [, setActiveNamespace] = useActiveNamespace();\n  const createNamespaceOrProjectModal = useCreateNamespaceOrProjectModal();\n  const openProjectModal = React.useCallback(() => {\n    const handleSubmit = (project: K8sResourceKind) => {\n      setActiveNamespace(project.metadata?.name);\n      onCreate && onCreate(project);\n    };\n    createNamespaceOrProjectModal({ onSubmit: handleSubmit });\n  }, [onCreate, setActiveNamespace, createNamespaceOrProjectModal]);\n  return (\n    <ProjectListPage {...props} title={title}>\n      {children(openProjectModal)}\n    </ProjectListPage>\n  );\n};\n\nexport default CreateProjectListPage;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardTitle,\n  MenuToggle,\n  MenuToggleElement,\n  Select,\n  SelectList,\n  SelectOption,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport {\n  ClusterOverviewUtilizationItem,\n  isClusterOverviewUtilizationItem,\n  ClusterOverviewMultilineUtilizationItem,\n  isClusterOverviewMultilineUtilizationItem,\n  useResolvedExtensions,\n  Humanize,\n  TopConsumerPopoverProps,\n} from '@console/dynamic-plugin-sdk';\nimport UtilizationItem, {\n  MultilineUtilizationItem,\n  QueryWithDescription,\n  LimitRequested,\n  trimSecondsXMutator,\n} from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\n\nimport { DashboardItemProps, withDashboardResources } from '../../with-dashboard-resources';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils/units';\nimport { getRangeVectorStats, getInstantVectorStats } from '../../../graphs/utils';\nimport {\n  getMultilineQueries,\n  getUtilizationQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport { MachineConfigPoolModel } from '../../../../models';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { DataPoint, PrometheusResponse } from '../../../graphs';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { MachineConfigPoolKind, referenceForModel } from '@console/internal/module/k8s';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport { useUtilizationDuration } from '@console/shared/src/hooks/useUtilizationDuration';\nimport {\n  ClusterUtilizationContext,\n  CPUPopover,\n  MemoryPopover,\n  StoragePopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  PodPopover,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const PrometheusUtilizationItem = withDashboardResources<PrometheusUtilizationItemProps>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    utilizationQuery,\n    totalQuery,\n    title,\n    TopConsumerPopover,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n    limitQuery,\n    requestQuery,\n    setLimitReqState,\n  }) => {\n    let utilization: PrometheusResponse, utilizationError: any;\n    let total: PrometheusResponse, totalError: any;\n    let max: DataPoint<number>[];\n    let limit: PrometheusResponse, limitError: any;\n    let request: PrometheusResponse, requestError: any;\n    let isLoading = false;\n    const { duration } = useUtilizationDuration();\n\n    React.useEffect(() => {\n      if (!isDisabled) {\n        watchPrometheus(utilizationQuery, namespace, duration);\n        totalQuery && watchPrometheus(totalQuery, namespace);\n        limitQuery && watchPrometheus(limitQuery, namespace, duration);\n        requestQuery && watchPrometheus(requestQuery, namespace, duration);\n        return () => {\n          stopWatchPrometheusQuery(utilizationQuery, duration);\n          totalQuery && stopWatchPrometheusQuery(totalQuery);\n          limitQuery && stopWatchPrometheusQuery(limitQuery, duration);\n          requestQuery && stopWatchPrometheusQuery(requestQuery, duration);\n        };\n      }\n    }, [\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      duration,\n      utilizationQuery,\n      totalQuery,\n      namespace,\n      isDisabled,\n      limitQuery,\n      requestQuery,\n    ]);\n\n    if (!isDisabled) {\n      [utilization, utilizationError] = getPrometheusQueryResponse(\n        prometheusResults,\n        utilizationQuery,\n        duration,\n      );\n      [total, totalError] = getPrometheusQueryResponse(prometheusResults, totalQuery);\n      [limit, limitError] = getPrometheusQueryResponse(prometheusResults, limitQuery, duration);\n      [request, requestError] = getPrometheusQueryResponse(\n        prometheusResults,\n        requestQuery,\n        duration,\n      );\n\n      max = getInstantVectorStats(total);\n      isLoading = !utilization || (totalQuery && !total) || (limitQuery && !limit);\n    }\n\n    return (\n      <UtilizationItem\n        title={title}\n        utilization={utilization}\n        limit={limit}\n        requested={request}\n        error={utilizationError || totalError || limitError || requestError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        query={[utilizationQuery, limitQuery, requestQuery]}\n        max={max && max.length ? max[0].y : null}\n        TopConsumerPopover={TopConsumerPopover}\n        setLimitReqState={setLimitReqState}\n      />\n    );\n  },\n);\n\nexport const PrometheusMultilineUtilizationItem = withDashboardResources<\n  PrometheusMultilineUtilizationItemProps\n>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    queries,\n    title,\n    TopConsumerPopovers,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n  }) => {\n    const { duration } = useUtilizationDuration();\n    React.useEffect(() => {\n      if (!isDisabled) {\n        queries.forEach((q) => watchPrometheus(q.query, namespace, duration));\n        return () => {\n          queries.forEach((q) => stopWatchPrometheusQuery(q.query, duration));\n        };\n      }\n    }, [watchPrometheus, stopWatchPrometheusQuery, duration, queries, namespace, isDisabled]);\n\n    const stats = [];\n    let hasError = false;\n    let isLoading = false;\n    if (!isDisabled) {\n      queries.forEach((query) => {\n        const [response, responseError] = getPrometheusQueryResponse(\n          prometheusResults,\n          query.query,\n          duration,\n        );\n        if (responseError) {\n          hasError = true;\n          return false;\n        }\n        if (!response) {\n          isLoading = true;\n          return false;\n        }\n        stats.push(getRangeVectorStats(response, query.desc, null, trimSecondsXMutator)?.[0] || []);\n      });\n    }\n\n    return (\n      <MultilineUtilizationItem\n        title={title}\n        data={stats}\n        error={hasError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        queries={queries}\n        TopConsumerPopovers={TopConsumerPopovers}\n      />\n    );\n  },\n);\n\nconst UtilizationCardNodeFilter: React.FC<UtilizationCardNodeFilterProps> = ({\n  machineConfigPools,\n  onNodeSelect,\n  selectedNodes,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const sortedMCPs = machineConfigPools.sort((a, b) => {\n    const order = ['worker', 'master'];\n    const indexA = order.indexOf(a.metadata.name);\n    const indexB = order.indexOf(b.metadata.name);\n    if (indexA === -1 && indexB === -1) {\n      return a.metadata.name.localeCompare(b.metadata.name);\n    }\n    if (indexA === -1) {\n      return 1;\n    }\n    if (indexB === -1) {\n      return -1;\n    }\n    return indexA - indexB;\n  });\n\n  const selectOptions = sortedMCPs.map((mcp) => {\n    const mcpName = mcp.metadata.name === 'master' ? 'control plane' : mcp.metadata.name;\n    return (\n      <SelectOption\n        hasCheckbox\n        key={mcp.metadata.name}\n        value={mcpName}\n        isSelected={selectedNodes.includes(mcp.metadata.name)}\n      >\n        {mcpName}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle ref={toggleRef} onClick={(open) => setIsOpen(open)} variant=\"plainText\">\n      {t('public~Filter by Node type')}\n      {selectedNodes.length > 0 && (\n        <Badge className=\"pf-v5-u-ml-sm\" isRead>\n          {selectedNodes.length}\n        </Badge>\n      )}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      role=\"menu\"\n      aria-label={t('public~Filter by Node type')}\n      onSelect={onNodeSelect}\n      isOpen={isOpen}\n      selected={selectedNodes}\n      onOpenChange={(open) => setIsOpen(open)}\n      toggle={toggle}\n    >\n      <SelectList>{selectOptions}</SelectList>\n    </Select>\n  );\n};\n\nexport const UtilizationCard = () => {\n  const { t } = useTranslation();\n  const [machineConfigPools, machineConfigPoolsLoaded] = useK8sWatchResource<\n    MachineConfigPoolKind[]\n  >({\n    isList: true,\n    kind: referenceForModel(MachineConfigPoolModel),\n  });\n  // TODO: add `useUserSettings` to get default selected\n  const [selectedNodes, setSelectedNodes] = React.useState<string[]>([]);\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ClusterOverviewUtilizationItem>(\n    isClusterOverviewUtilizationItem,\n  );\n  const [dynamicMultilineItemExtensions] = useResolvedExtensions<\n    ClusterOverviewMultilineUtilizationItem\n  >(isClusterOverviewMultilineUtilizationItem);\n\n  // TODO: add `useUserSettingsCompatibility` to store selectedNodes\n  const onNodeSelect = (event: React.MouseEvent, selection: string) => {\n    const selectionUpdated = selection === 'control plane' ? 'master' : selection;\n    if (selectedNodes.includes(selectionUpdated)) {\n      setSelectedNodes(selectedNodes.filter((item) => item !== selectionUpdated));\n    } else {\n      setSelectedNodes([...selectedNodes, selectionUpdated]);\n    }\n  };\n  // if no filter is applied, show all nodes using regex\n  const nodeType = _.isEmpty(selectedNodes) ? '.+' : selectedNodes.join('|');\n  const [utilizationQueries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(nodeType), getMultilineQueries(nodeType)],\n    [nodeType],\n  );\n  return (\n    machineConfigPoolsLoaded && (\n      <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n        <CardHeader\n          actions={{\n            actions: (\n              <>\n                <Split>\n                  <SplitItem>\n                    <UtilizationCardNodeFilter\n                      machineConfigPools={machineConfigPools}\n                      onNodeSelect={onNodeSelect}\n                      selectedNodes={selectedNodes}\n                    />\n                  </SplitItem>\n                  <SplitItem>\n                    <UtilizationDurationDropdown />\n                  </SplitItem>\n                </Split>\n              </>\n            ),\n            hasNoOffset: false,\n            className: undefined,\n          }}\n        >\n          <CardTitle data-test=\"utilization-card__title\">\n            {t('public~Cluster utilization')}\n          </CardTitle>\n        </CardHeader>\n        <UtilizationBody>\n          <ClusterUtilizationContext.Provider value={nodeType}>\n            <PrometheusUtilizationItem\n              title={t('public~CPU')}\n              utilizationQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].requests}\n              TopConsumerPopover={CPUPopover}\n              humanizeValue={humanizeCpuCores}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Memory')}\n              utilizationQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].requests}\n              TopConsumerPopover={MemoryPopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Filesystem')}\n              utilizationQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].total}\n              TopConsumerPopover={StoragePopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusMultilineUtilizationItem\n              title={t('public~Network transfer')}\n              queries={multilineQueries[OverviewQuery.NETWORK_UTILIZATION]}\n              humanizeValue={humanizeDecimalBytesPerSec}\n              TopConsumerPopovers={networkPopovers}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Pod count')}\n              utilizationQuery={utilizationQueries[OverviewQuery.POD_UTILIZATION].utilization}\n              TopConsumerPopover={PodPopover}\n              humanizeValue={humanizeNumber}\n            />\n            {dynamicItemExtensions.map(({ uid, properties }) => (\n              <PrometheusUtilizationItem\n                key={uid}\n                title={properties.title}\n                utilizationQuery={properties.getUtilizationQuery(selectedNodes)}\n                totalQuery={properties.getTotalQuery?.(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopover={properties.TopConsumerPopover}\n                requestQuery={properties.getRequestQuery?.(selectedNodes)}\n                limitQuery={properties.getLimitQuery?.(selectedNodes)}\n              />\n            ))}\n            {dynamicMultilineItemExtensions.map(({ uid, properties }) => (\n              <PrometheusMultilineUtilizationItem\n                key={uid}\n                title={properties.title}\n                queries={properties.getUtilizationQueries(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopovers={properties.TopConsumerPopovers}\n              />\n            ))}\n          </ClusterUtilizationContext.Provider>\n        </UtilizationBody>\n      </Card>\n    )\n  );\n};\n\ntype PrometheusCommonProps = {\n  title: string;\n  humanizeValue: Humanize;\n  byteDataType?: ByteDataTypes;\n  namespace?: string;\n  isDisabled?: boolean;\n};\n\ntype PrometheusUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    utilizationQuery: string;\n    totalQuery?: string;\n    limitQuery?: string;\n    requestQuery?: string;\n    TopConsumerPopover?: React.ComponentType<TopConsumerPopoverProps>;\n    setLimitReqState?: (state: LimitRequested) => void;\n  };\n\ntype PrometheusMultilineUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    queries: QueryWithDescription[];\n    TopConsumerPopovers?: React.ComponentType<TopConsumerPopoverProps>[];\n  };\n\ntype UtilizationCardNodeFilterProps = {\n  machineConfigPools: MachineConfigPoolKind[];\n  onNodeSelect: (event: React.MouseEvent, selection: string) => void;\n  selectedNodes: string[];\n};\n","import * as React from 'react';\nimport {\n  ChartDonutThreshold,\n  ChartDonutUtilization,\n  ChartThemeColor,\n} from '@patternfly/react-charts';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { usePrometheusPoll } from './prometheus-poll-hook';\nimport { PrometheusEndpoint } from './helpers';\nimport { useRefWidth, humanizePercentage, Humanize } from '../utils';\nimport { getInstantVectorStats } from './utils';\nimport { DataPoint } from '.';\n\nconst DEFAULT_THRESHOLDS = [{ value: 67 }, { value: 92 }];\n\nexport const GaugeChart: React.FC<GaugeChartProps> = ({\n  data,\n  error,\n  humanize = humanizePercentage,\n  invert = false,\n  loading,\n  query = '',\n  remainderLabel,\n  themeColor = ChartThemeColor.green,\n  thresholds = DEFAULT_THRESHOLDS,\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n  const ready = !error && !loading;\n\n  const status = loading ? t('Loading') : error;\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || (data ? humanize(data.y).string : undefined) || t('No data');\n\n  const labels = ({ datum: { x, y } }) =>\n    x ? `${x} ${usedLabelText}` : `${y} ${remainderLabel || t('available')}`;\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonutThreshold\n          ariaTitle={ariaChartTitle || title}\n          data={thresholds}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          width={width}\n          y=\"value\"\n        >\n          <ChartDonutUtilization\n            labels={labels}\n            data={ready ? data : { y: 0 }}\n            invert={invert}\n            padding={0}\n            subTitle={ready ? secondaryTitleText : ''}\n            themeColor={themeColor}\n            thresholds={thresholds}\n            title={status || labelText}\n          />\n        </ChartDonutThreshold>\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\nexport const Gauge: React.FC<GaugeProps> = ({\n  humanize = humanizePercentage,\n  invert,\n  namespace,\n  percent = 0,\n  query,\n  remainderLabel,\n  secondaryTitle,\n  thresholds,\n  title,\n  usedLabel,\n}) => {\n  const { t } = useTranslation();\n\n  const [response, error, loading] = usePrometheusPoll({\n    endpoint: PrometheusEndpoint.QUERY,\n    namespace,\n    query,\n  });\n\n  const [data] = response\n    ? getInstantVectorStats(response, null, humanize).map(({ label, y }) => ({ x: label, y }))\n    : [{ x: humanize(percent).string, y: percent }];\n  return (\n    <GaugeChart\n      data={data}\n      error={!!error && t('No data')}\n      invert={invert}\n      label={data.x}\n      loading={loading}\n      query={query}\n      remainderLabel={remainderLabel}\n      secondaryTitle={secondaryTitle}\n      thresholds={thresholds}\n      title={title}\n      usedLabel={usedLabel}\n    />\n  );\n};\n\ntype GaugeChartProps = {\n  data: DataPoint;\n  error?: string;\n  humanize?: Humanize;\n  invert?: boolean;\n  isLoaded?: boolean;\n  label?: string;\n  loading?: boolean;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  themeColor?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  usedLabel?: string;\n  className?: string;\n};\n\ntype GaugeProps = {\n  humanize?: Humanize;\n  invert?: boolean;\n  namespace?: string;\n  percent?: number;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  usedLabel?: string;\n};\n","export * from './edgeActions';\nexport * from './nodeActions';\nexport * from './modify-application';\nexport * from './contextMenuActions';\nexport * from './provider';\n","import { ScaleDetailsLevel, useVisualizationController } from '@patternfly/react-topology';\nimport { SHOW_LABELS_FILTER_ID } from './const';\nimport { getFilterById } from './filter-utils';\nimport { useDisplayFilters } from './useDisplayFilters';\n\nconst useShowLabel = (hover: boolean): boolean => {\n  const displayFilters = useDisplayFilters();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const showLabelsFilter = getFilterById(SHOW_LABELS_FILTER_ID, displayFilters);\n\n  return hover || (detailsLevel === ScaleDetailsLevel.high && showLabelsFilter?.value);\n};\n\nexport { useShowLabel };\n","import { get } from 'lodash';\nimport { kindToAbbr, modelFor } from '@console/internal/module/k8s';\n\nexport const getKindStringAndAbbreviation = (\n  kind: string,\n): { kindStr: string; kindAbbr: string; kindColor: string } => {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DetailsItem, ResourceSummary, Timestamp } from '@console/internal/components/utils';\nimport { CronJobModel } from '@console/internal/models';\nimport { CronJobKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype CronJobSideBarDetailsProps = {\n  cronjob: CronJobKind;\n};\n\nconst CronJobSideBarDetails: React.FC<CronJobSideBarDetailsProps> = ({ cronjob }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={cronjob.metadata.uid} obj={cronjob} path=\"\" />\n      </div>\n      <ResourceSummary resource={cronjob} showPodSelector>\n        <DetailsItem label={t('topology~Schedule')} obj={cronjob} path=\"spec.schedule\" />\n        <DetailsItem\n          label={t('topology~Concurrency policy')}\n          obj={cronjob}\n          path=\"spec.concurrencyPolicy\"\n        />\n        <DetailsItem\n          label={t('topology~Starting deadline seconds')}\n          obj={cronjob}\n          path=\"spec.startingDeadlineSeconds\"\n        >\n          {cronjob.spec.startingDeadlineSeconds\n            ? t('topology~second', { count: cronjob.spec.startingDeadlineSeconds })\n            : t('topology~Not configured')}\n        </DetailsItem>\n        <DetailsItem\n          label={t('topology~Last schedule time')}\n          obj={cronjob}\n          path=\"status.lastScheduleTime\"\n        >\n          <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useCronJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<CronJobKind>(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <CronJobSideBarDetails cronjob={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DaemonSetDetailsList } from '@console/internal/components/daemon-set';\nimport { ResourceSummary, StatusBox } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { DaemonSetKind } from '@console/internal/module/k8s';\nimport { PodRing, usePodsWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\n\ntype DaemonSetOverviewDetailsProps = {\n  ds: DaemonSetKind;\n};\n\nconst DaemonSetSideBarDetails: React.FC<DaemonSetOverviewDetailsProps> = ({ ds }) => {\n  const { namespace } = ds.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(ds, 'DaemonSet', namespace);\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRing\n            pods={podData?.pods ?? []}\n            resourceKind={DaemonSetModel}\n            obj={ds}\n            enableScaling={false}\n          />\n        </StatusBox>\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={ds} showPodSelector showNodeSelector showTolerations />\n      </div>\n      <div className=\"resource-overview__details\">\n        <DaemonSetDetailsList ds={ds} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDaemonSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DaemonSetKind>(element);\n  if (!resource || resource.kind !== DaemonSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DaemonSetSideBarDetails ds={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentConfigDetailsList } from '@console/internal/components/deployment-config';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentConfigSideBarDetailsProps = {\n  dc: K8sResourceKind;\n};\n\nconst DeploymentConfigSideBarDetails: React.FC<DeploymentConfigSideBarDetailsProps> = ({ dc }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {dc.status.availableReplicas === dc.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentConfigDetailsList dc={dc} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentConfigSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== DeploymentConfigModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentConfigSideBarDetails dc={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentDetailsList } from '@console/internal/components/deployment';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentModel } from '@console/internal/models';\nimport { DeploymentKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentSideBarDetailsProps = {\n  deployment: DeploymentKind;\n};\n\nconst DeploymentSideBarDetails: React.FC<DeploymentSideBarDetailsProps> = ({ deployment: d }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {d.spec.paused && <WorkloadPausedAlert obj={d} model={DeploymentModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={d.metadata.uid} obj={d} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={d} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {d.status.availableReplicas === d.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentDetailsList deployment={d} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DeploymentKind>(element);\n  if (!resource || resource.kind !== DeploymentModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentSideBarDetails deployment={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DetailsItem,\n  ResourceSummary,\n  StatusBox,\n  pluralize,\n} from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport { JobKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype JobSideBarDetailsProps = {\n  job: JobKind;\n};\n\nconst JobSideBarDetails: React.FC<JobSideBarDetailsProps> = ({ job }) => {\n  const { namespace } = job.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRingSet key={job.metadata.uid} obj={job} path=\"\" />\n        </StatusBox>\n      </div>\n      <ResourceSummary resource={job} showPodSelector>\n        <DetailsItem label={t('topology~Desired completions')} obj={job} path=\"spec.completions\" />\n        <DetailsItem label={t('topology~Parallelism')} obj={job} path=\"spec.parallelism\" />\n        <DetailsItem\n          label={t('topology~Active deadline seconds')}\n          obj={job}\n          path=\"spec.activeDeadlineSeconds\"\n        >\n          {job.spec?.activeDeadlineSeconds\n            ? pluralize(job.spec.activeDeadlineSeconds, 'second')\n            : t('topology~Not configured')}\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<JobKind>(element);\n  if (!resource || resource.kind !== JobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobSideBarDetails job={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  isPodAdapter,\n  PodsAdapterDataType,\n  PodAdapter,\n  useResolvedExtensions,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { PodsOverviewContent } from '@console/shared/src/components/pod/PodsOverview';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst PodsTabSection: React.FC<{\n  id: string;\n  podAdapter: AdapterDataType<PodsAdapterDataType<PodKind>>;\n  podAdapterExtensionResolved: boolean;\n}> = ({ id, podAdapter, podAdapterExtensionResolved }) => {\n  const [{ data: podsData, loaded: podsDataLoaded }, setPodData] = React.useState<{\n    data?: PodsAdapterDataType<PodKind>;\n    loaded: boolean;\n  }>({ loaded: false });\n\n  const handleAdapterResolved = React.useCallback(\n    (data) => {\n      if (podAdapter?.resource?.kind === 'CronJob') {\n        // Fixes the issue of Topology page crashing.\n        setTimeout(() => setPodData({ data, loaded: true }), 3000);\n      } else {\n        setPodData({ data, loaded: true });\n      }\n    },\n    [podAdapter],\n  );\n\n  return podAdapter ? (\n    <TopologySideBarTabSection>\n      {podAdapterExtensionResolved && (\n        <ResolveAdapter<PodsAdapterDataType<PodKind>>\n          key={id}\n          resource={podAdapter.resource}\n          data={podAdapter.data}\n          useAdapterHook={podAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {podsDataLoaded && podsData.loaded && !podsData.loadError && (\n        <PodsOverviewContent obj={podAdapter.resource} {...podsData} />\n      )}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const usePodsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [podAdapterExtension, podAdapterExtensionResolved] = useResolvedExtensions<PodAdapter>(\n    isPodAdapter,\n  );\n  const podAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<PodsAdapterDataType<PodKind>>, PodAdapter>(element, [\n        podAdapterExtension,\n        podAdapterExtensionResolved,\n      ]),\n    [element, podAdapterExtension, podAdapterExtensionResolved],\n  );\n  if (!podAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <PodsTabSection\n      id={element.getId()}\n      podAdapter={podAdapter}\n      podAdapterExtensionResolved={podAdapterExtensionResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\ntype ResolveAdapterProps<D, T> = {\n  resource: K8sResourceCommon;\n  data?: T;\n  useAdapterHook: (resource: K8sResourceCommon, data: T) => D;\n  onAdapterDataResolved: (data: D) => void;\n};\n\nconst ResolveAdapter = <D extends {}, T = {}>({\n  resource,\n  data: customData,\n  useAdapterHook,\n  onAdapterDataResolved,\n}: ResolveAdapterProps<D, T>) => {\n  const data = useAdapterHook(resource, customData);\n\n  React.useEffect(() => {\n    if (data) {\n      onAdapterDataResolved(data);\n    }\n    // We do not want to run the effect every time onAdapterDataResolved changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return null;\n};\n\nexport default ResolveAdapter;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { StatefulSetModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype StatefulSetSideBarDetailsProps = {\n  ss: K8sResourceKind;\n};\n\nconst StatefulSetSideBarDetails: React.FC<StatefulSetSideBarDetailsProps> = ({ ss }) => (\n  <div className=\"overview__sidebar-pane-body resource-overview__body\">\n    <div className=\"resource-overview__pod-counts\">\n      <PodRingSet key={ss.metadata.uid} obj={ss} path=\"/spec/replicas\" />\n    </div>\n    <ResourceSummary resource={ss} showPodSelector showNodeSelector showTolerations />\n  </div>\n);\n\nexport const useStatefulSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== StatefulSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <StatefulSetSideBarDetails ss={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../utils';\n\nexport const getWorkloadResourceLink = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource) {\n    return null;\n  }\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  BuildAdapter,\n  isBuildAdapter,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { BuildConfigData } from '@console/shared';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { BuildOverview } from './BuildOverview';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst BuildTabSection: React.FC<{\n  id: string;\n  buildAdapter: AdapterDataType<BuildConfigData>;\n  extensionsResolved: boolean;\n}> = ({ id, buildAdapter, extensionsResolved }) => {\n  const [\n    { data: buildConfigs, loaded: buildConfigsDataLoaded },\n    setBuildConfigsData,\n  ] = React.useState<{\n    data?: BuildConfigData;\n    loaded: boolean;\n  }>({ loaded: false });\n  const handleAdapterResolved = React.useCallback((data) => {\n    setBuildConfigsData({ data, loaded: true });\n  }, []);\n\n  return buildAdapter ? (\n    <TopologySideBarTabSection>\n      {extensionsResolved && (\n        <ResolveAdapter<BuildConfigData>\n          key={id}\n          resource={buildAdapter.resource}\n          useAdapterHook={buildAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {buildConfigsDataLoaded && <BuildOverview buildConfigs={buildConfigs.buildConfigs} />}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useBuildsSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [buildAdapterExtensions, extensionsResolved] = useResolvedExtensions<BuildAdapter>(\n    isBuildAdapter,\n  );\n  const buildAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<BuildConfigData>, BuildAdapter>(element, [\n        buildAdapterExtensions,\n        extensionsResolved,\n      ]),\n    [buildAdapterExtensions, element, extensionsResolved],\n  );\n  if (!buildAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <BuildTabSection\n      id={element.getId()}\n      buildAdapter={buildAdapter}\n      extensionsResolved={extensionsResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  isNetworkAdapter,\n  useResolvedExtensions,\n  NetworkAdapter,\n  K8sResourceCommon,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { NetworkingOverview } from './NetworkingOverview';\nimport { getDataFromAdapter } from './utils';\n\nconst NetworkTabSection: React.FC<{\n  networkAdapter: {\n    resource: K8sResourceCommon;\n  };\n}> = ({ networkAdapter }) => {\n  return networkAdapter ? (\n    <TopologySideBarTabSection>\n      <NetworkingOverview obj={networkAdapter.resource} />\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useNetworkingSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [networkAdapterExtensions, extensionsLoaded] = useResolvedExtensions<NetworkAdapter>(\n    isNetworkAdapter,\n  );\n  const networkAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<{ resource: K8sResourceCommon }, NetworkAdapter>(element, [\n        networkAdapterExtensions,\n        extensionsLoaded,\n      ]),\n    [element, extensionsLoaded, networkAdapterExtensions],\n  );\n  if (!networkAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = <NetworkTabSection networkAdapter={networkAdapter} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { CronJobModel } from '@console/internal/models';\nimport { useJobsForCronJobWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { JobsOverview } from './JobsOverview';\n\nconst JobsTabSection: React.FC<{ resource: K8sResourceCommon }> = ({ resource }) => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  return (\n    <TopologySideBarTabSection>\n      <JobsOverview obj={resource} jobs={jobs} />\n    </TopologySideBarTabSection>\n  );\n};\n\nexport const useJobsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobsTabSection resource={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { PodDetailsList, PodResourceSummary } from '@console/internal/components/pod';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype PodSideBarDetailsProps = {\n  pod: PodKind;\n};\n\nconst PodSideBarDetails: React.FC<PodSideBarDetailsProps> = ({ pod }) => {\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={pod.metadata.uid} obj={pod} path=\"\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <PodResourceSummary pod={pod} />\n      </div>\n      <div className=\"resource-overview__details\">\n        <PodDetailsList pod={pod} />\n      </div>\n    </div>\n  );\n};\n\nexport const usePodSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<PodKind>(element);\n  if (!resource || resource.kind !== PodModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <PodSideBarDetails pod={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { CommonActionFactory } from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { Action, DetailsResourceAlertContent, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceCondition,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnativeServiceModel } from '@console/knative-plugin';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getResource } from '../../utils';\n\nconst addHealthChecksRefs = [\n  referenceForModel(DeploymentConfigModel),\n  referenceForModel(DeploymentModel),\n  referenceForModel(DaemonSetModel),\n  referenceForModel(StatefulSetModel),\n  referenceForModel(KnativeServiceModel),\n];\n\nexport const useHealthChecksAlert = (element: GraphElement): DetailsResourceAlertContent | null => {\n  const resource = getResource(element);\n  const kind = resource?.kind;\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n  const { t } = useTranslation();\n  const kindForCRDResource = resource ? referenceFor(resource) : undefined;\n  const resourceModel = kindForCRDResource ? modelFor(kindForCRDResource) : undefined;\n  const resourceKind = resourceModel?.crd ? kindForCRDResource : kind;\n\n  const [canAddHealthChecks, canAddHealthChecksLoading] = useAccessReview({\n    group: resourceModel?.apiGroup,\n    resource: resourceModel?.plural,\n    namespace,\n    name,\n    verb: 'update',\n  });\n\n  if (!resource || !addHealthChecksRefs.includes(referenceFor(resource))) {\n    return null;\n  }\n\n  const containers = resource?.spec?.template?.spec?.containers;\n  const containersName = containers?.map((container) => container.name);\n  const healthCheckAdded = containers?.every(\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n\n  const showAlert = !healthCheckAdded && canAddHealthChecks && !canAddHealthChecksLoading;\n\n  const addHealthChecksLink = `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containersName[0]}/health-checks`;\n\n  const alertMessage =\n    containersName?.length > 1\n      ? t(\n          'topology~Not all Containers have health checks to ensure your application is running correctly.',\n        )\n      : t(\n          'topology~Container {{containersName}} does not have health checks to ensure your application is running correctly.',\n          { containersName },\n        );\n\n  return showAlert\n    ? {\n        title: t('topology~Health checks'),\n        dismissible: true,\n        content: (\n          <>\n            {alertMessage} <Link to={addHealthChecksLink}>{t('topology~Add health checks')}</Link>\n          </>\n        ),\n        variant: 'custom',\n      }\n    : null;\n};\n\nexport const useResourceQuotaAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const resource = getResource(element);\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n\n  const [canUseAlertAction, canUseAlertActionLoading] = useAccessReview({\n    group: DeploymentModel.apiGroup,\n    resource: DeploymentModel.plural,\n    namespace,\n    name,\n    verb: 'patch',\n  });\n\n  if (!resource || referenceForModel(DeploymentModel) !== referenceFor(resource)) return null;\n\n  const statusConditions: K8sResourceCondition[] = resource.status?.conditions ?? [];\n  const replicaFailure = statusConditions.find((condition) => condition.type === 'ReplicaFailure');\n  const replicaFailureMsg: string = replicaFailure?.message ?? '';\n  const resourceQuotaRequested = replicaFailureMsg.split(':')?.[3] ?? '';\n\n  let alertAction: Action;\n  if (resourceQuotaRequested.includes('limits')) {\n    alertAction = DeploymentActionFactory.EditResourceLimits(DeploymentModel, resource);\n  } else if (resourceQuotaRequested.includes('pods')) {\n    alertAction = CommonActionFactory.ModifyCount(DeploymentModel, resource);\n  }\n\n  const showAlertActionLink = alertAction && canUseAlertAction && !canUseAlertActionLoading;\n\n  const alertActionCta = alertAction?.cta as () => void;\n\n  const onAlertActionClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Alert Action Link Clicked');\n    alertActionCta();\n  };\n\n  const alertActionLink = showAlertActionLink ? (\n    <AlertActionLink onClick={onAlertActionClick}>{alertAction.label as string}</AlertActionLink>\n  ) : undefined;\n\n  return replicaFailure\n    ? {\n        title: t('topology~Resource Quotas'),\n        dismissible: true,\n        content: replicaFailureMsg,\n        actionLinks: alertActionLink,\n        variant: 'warning',\n      }\n    : null;\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\n\ntype VPATabSectionProps = {\n  vpas: K8sResourceCommon[];\n};\n\nconst VPATabSection: React.FC<VPATabSectionProps> = ({ vpas }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~VerticalPodAutoscalers')} />\n      <ul className=\"list-group\">\n        {vpas.map((vpa: K8sResourceCommon) => (\n          <li key={vpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              groupVersionKind={getGroupVersionKindForResource(vpa)}\n              name={vpa.metadata.name}\n              namespace={vpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport const useVpaSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [vpas] = useK8sWatchResource<K8sResourceCommon[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    isList: true,\n    namespaced: true,\n  });\n\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n\n  const resource = getResource(element);\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, resource);\n\n  const section =\n    verticalPodAutoscalers.length > 0 ? (\n      <TopologySideBarTabSection>\n        <VPATabSection vpas={verticalPodAutoscalers} />\n      </TopologySideBarTabSection>\n    ) : undefined;\n  return [section, true, undefined];\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { BuildModel } from '@console/internal/models';\nimport { Status, useBuildConfigsWatcher } from '@console/shared';\nimport { getResource } from '../../../../../utils';\nimport BuildDecoratorBubble from './BuildDecoratorBubble';\n\ninterface BuildDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst BuildDecorator: React.FC<BuildDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const build = buildConfigs?.[0]?.builds?.[0];\n\n  if (!build) {\n    return null;\n  }\n\n  const label = t('topology~Build {{status}}', { status: build.status?.phase });\n\n  const link = `${resourcePathFromModel(\n    BuildModel,\n    build.metadata.name,\n    build.metadata.namespace,\n  )}/logs`;\n\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={label} href={link}>\n          <Status status={build.status.phase} iconOnly noTooltip />\n        </BuildDecoratorBubble>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default BuildDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { getCheDecoratorData, getEditURL } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst EditDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const { cheURL, cheIconURL } = getCheDecoratorData(consoleLinks);\n  const workloadData = element.getData().data;\n  const { editURL, vcsURI, vcsRef, contextDir } = workloadData;\n  const cheEnabled = !!cheURL;\n  const editUrl = editURL || getEditURL(vcsURI, vcsRef, cheURL, contextDir);\n  const repoIcon = routeDecoratorIcon(editUrl, radius, t, cheEnabled, cheIconURL);\n\n  if (!repoIcon) {\n    return null;\n  }\n  const label = t('topology~Edit source code');\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={editUrl} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>{repoIcon}</g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default EditDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node, SELECTION_EVENT } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getSeverityAlertType,\n  getFiringAlerts,\n  AlertSeverityIcon,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport Decorator from './Decorator';\n\ntype DispatchProps = {\n  showMonitoringOverview?: () => void;\n};\n\nconst dispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  showMonitoringOverview: () => dispatch(selectOverviewDetailsTab('Observe')),\n});\n\ninterface MonitoringAlertsDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\ntype MonitoringAlertsDecoratorType = MonitoringAlertsDecoratorProps & DispatchProps;\n\nconst MonitoringAlertsDecorator: React.FC<MonitoringAlertsDecoratorType> = ({\n  element,\n  radius,\n  x,\n  y,\n  showMonitoringOverview,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const workloadData = element.getData().data;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n\n  const showSidebar = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    showMonitoringOverview();\n    element.getGraph().getController().fireEvent(SELECTION_EVENT, [element.getId()]);\n  };\n\n  if (shouldHideMonitoringAlertDecorator(severityAlertType)) return null;\n\n  const label = t('topology~Monitoring alert');\n  return (\n    <Tooltip triggerRef={ref} key=\"monitoringAlert\" content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} onClick={showSidebar} ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <AlertSeverityIcon severityAlertType={severityAlertType} fontSize={radius} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default connect<null, DispatchProps, MonitoringAlertsDecoratorProps>(\n  null,\n  dispatchToProps,\n)(MonitoringAlertsDecorator);\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { useRoutesURL } from '../../../../../data-transforms/useRoutesURL';\nimport { getResource } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst UrlDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resourceObj = getResource(element);\n  const url = useRoutesURL(resourceObj);\n  if (!url) {\n    return null;\n  }\n  const label = t('topology~Open URL');\n  return (\n    <Tooltip triggerRef={ref} key=\"route\" content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={url} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <ExternalLinkAltIcon style={{ fontSize: radius }} title={label} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default UrlDecorator;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, LabelSelector, referenceForModel, Selector } from '../../../module/k8s';\nimport { DetailsCard } from './details-card';\nimport { StatusCard } from './status-card';\nimport { UtilizationCard } from './utilization-card';\nimport { InventoryCard } from './inventory-card';\nimport { ActivityCard } from './activity-card';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { LauncherCard } from './launcher-card';\nimport { ResourceQuotaCard } from './resource-quota-card';\n\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }, { Card: ResourceQuotaCard }];\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst rightCards = [{ Card: ActivityCard }];\n\nexport const getNamespaceDashboardConsoleLinks = (\n  ns: K8sResourceKind,\n  consoleLinks: K8sResourceKind[],\n): K8sResourceKind[] => {\n  return _.filter(consoleLinks, (link: K8sResourceKind): boolean => {\n    if (link.spec.location !== 'NamespaceDashboard') {\n      return false;\n    }\n\n    const namespaces: string[] = _.get(link, 'spec.namespaceDashboard.namespaces');\n    const selector: Selector = _.get(link, 'spec.namespaceDashboard.namespaceSelector');\n\n    // If neither namespaces or selector was provided, show the link for all namespaces.\n    if (_.isEmpty(namespaces) && _.isEmpty(selector)) {\n      return true;\n    }\n\n    // Show the link if either namespaces or the selector matches this namespace.\n    if (_.includes(namespaces, ns.metadata.name)) {\n      return true;\n    }\n\n    return !_.isEmpty(selector) && new LabelSelector(selector).matches(ns);\n  });\n};\n\nexport const ProjectDashboard: React.FC<ProjectDashboardProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const namespaceLinks = getNamespaceDashboardConsoleLinks(obj, consoleLinks);\n  const context = {\n    obj,\n    namespaceLinks,\n  };\n\n  const hasNamespaceLinks = !!namespaceLinks.length;\n\n  const rc = React.useMemo(\n    () => (hasNamespaceLinks ? [{ Card: LauncherCard }, ...rightCards] : rightCards),\n    [hasNamespaceLinks],\n  );\n\n  return (\n    <>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project overview')}</title>\n        </Helmet>\n      )}\n      <ProjectDashboardContext.Provider value={context}>\n        <Dashboard>\n          <DashboardGrid mainCards={mainCards} leftCards={leftCards} rightCards={rc} />\n        </Dashboard>\n      </ProjectDashboardContext.Provider>\n    </>\n  );\n};\n\ntype ProjectDashboardProps = {\n  obj: K8sResourceKind;\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind Pass K8sGroupVersionKind which will have group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind.group Pass group of k8s resource or model.\n * @param K8sGroupVersionKind.version Pass version of k8s resource or model.\n * @param K8sGroupVersionKind.kind Pass kind of k8s resource or model.\n * @returns The reference for any k8s resource i.e `group~version~kind`.\n * If the group will not be present then \"core\" will be returned as part of the group in reference.\n */\nexport const getReference = ({ group, version, kind, }) => [group || 'core', version, kind].join('~');\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * @see getGroupVersionKindForModel\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s model.\n * @param model k8s model\n * @returns The reference for model i.e `group~version~kind`.\n */\nexport const getReferenceForModel = (model) => getReference({ group: model.apiGroup, version: model.apiVersion, kind: model.kind });\n/**\n * Provides `apiVersion` for a Kubernetes model.\n * @param model Kubernetes model\n * @returns The apiVersion for the model i.e `group/version`.\n * */\nexport const getAPIVersionForModel = (model) => !(model === null || model === void 0 ? void 0 : model.apiGroup) ? model.apiVersion : `${model.apiGroup}/${model.apiVersion}`;\n/**\n * Provides a group, version, and kind for a resource.\n * @param resource Kubernetes resource\n * @returns The group, version, kind for the provided resource.\n * If the resource does not have an API group, the group `core` is returned.\n * If the resource has an invalid apiVersion then it'll throw Error.\n * */\nexport const getGroupVersionKindForResource = (resource) => {\n    const apiVersion = resource === null || resource === void 0 ? void 0 : resource.apiVersion;\n    const kind = resource === null || resource === void 0 ? void 0 : resource.kind;\n    const apiVersionSplit = apiVersion === null || apiVersion === void 0 ? void 0 : apiVersion.split('/');\n    const apiVersionSplitLen = apiVersionSplit === null || apiVersionSplit === void 0 ? void 0 : apiVersionSplit.length;\n    if (apiVersionSplitLen > 2)\n        throw new Error('Provided resource has invalid apiVersion.');\n    return !apiVersion || !kind\n        ? undefined\n        : Object.assign(Object.assign({}, (apiVersionSplitLen === 2 && {\n            group: apiVersionSplit[0],\n        })), { version: apiVersionSplitLen === 2 ? apiVersionSplit[1] : resource === null || resource === void 0 ? void 0 : resource.apiVersion, kind });\n};\n/**\n * Provides a group, version, and kind for a k8s model.\n * @param model Kubernetes model\n * @returns The group, version, kind for the provided model.\n * If the model does not have an apiGroup, group `core` will be returned.\n * */\nexport const getGroupVersionKindForModel = ({ apiGroup, apiVersion: version, kind, }) => (Object.assign(Object.assign({}, (apiGroup && { group: apiGroup })), { version,\n    kind }));\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a group, version, and kind for a reference.\n * @param reference reference for group, version, kind i.e `group~version~kind`.\n * @returns The group, version, kind for the provided reference.\n * If the group's value is \"core\" it denotes resource does not have an API group.\n * */\nexport const getGroupVersionKindForReference = (reference) => {\n    const referenceSplit = reference.split('~');\n    if (referenceSplit.length > 3)\n        throw new Error('Provided reference is invalid.');\n    const [group, version, kind] = referenceSplit;\n    return {\n        group,\n        version,\n        kind,\n    };\n};\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of K8sGroupVersionKind.\n * @param kind kind can be of type K8sResourceKindReference or K8sGroupVersionKind\n * @returns The reference i.e `group~version~kind`.\n */\nexport const transformGroupVersionKindToReference = (kind) => kind && typeof kind !== 'string' ? getReference(kind) : kind;\n//# sourceMappingURL=k8s-ref.js.map","import * as React from 'react';\nimport { Divider } from '@patternfly/react-core';\nimport { ListPage } from '@console/internal/components/factory';\nimport { ProjectsTable } from '@console/internal/components/namespace';\nimport { PageHeading } from '@console/internal/components/utils';\nimport './ProjectListPage.scss';\n\nexport type ProjectListPageProps = {\n  title: string;\n  listComponent?: React.ComponentType<any>;\n  children?: React.ReactNode;\n  badge?: React.ReactNode;\n};\nconst ProjectListPage: React.FC<ProjectListPageProps> = ({\n  badge,\n  title,\n  children,\n  listComponent,\n  ...listPageProps\n}) => (\n  <div className=\"odc-project-list-page\">\n    <PageHeading title={title} badge={badge}>\n      {children}\n    </PageHeading>\n    <Divider className=\"co-divider\" />\n    <ListPage\n      {...listPageProps}\n      showTitle={false}\n      kind=\"Project\"\n      ListComponent={listComponent || ProjectsTable}\n      canCreate={false}\n      filterLabel=\"by name or display name\"\n      textFilter=\"project-name\"\n    />\n  </div>\n);\n\nexport default ProjectListPage;\n","import * as React from 'react';\nimport { AsyncComponent } from '../utils';\n\nexport const OverviewListPageLoader = () =>\n  import('./OverviewListPage' /* webpackChunkName: \"overview-list-page\" */).then(\n    (m) => m.OverviewListPage,\n  );\n\nexport const OverviewListPage: React.FC = (props) => {\n  return <AsyncComponent loader={OverviewListPageLoader} {...props} />;\n};\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle, Button } from '@patternfly/react-core';\nimport DetailsBody from '@console/shared/src/components/dashboard/details-card/DetailsBody';\nimport { OverviewDetailItem } from '@openshift-console/plugin-shared/src';\nimport { getName, getRequester, GreenCheckCircleIcon } from '@console/shared';\nimport { LabelList, resourcePathFromModel } from '../../utils';\nimport { ProjectModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { Link } from 'react-router-dom-v5-compat';\n\nexport const DetailsCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const keys = _.keys(obj.metadata.labels).sort();\n  const labelsSubset = _.take(keys, 3);\n  const firstThreelabels = _.pick(obj.metadata.labels, labelsSubset);\n  const description = obj.metadata.annotations?.['openshift.io/description'];\n  const detailsLink = `${resourcePathFromModel(ProjectModel, obj.metadata.name)}/details`;\n  const serviceMeshEnabled = obj.metadata?.labels?.['maistra.io/member-of'];\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"details-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={detailsLink} data-test=\"details-card-view-all\">\n                {t('public~View all')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Details')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <DetailsBody>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Name')}>\n            {getName(obj)}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Requester')}>\n            {getRequester(obj) || <span className=\"text-muted\">{t('public~No requester')}</span>}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Labels')}>\n            <div className=\"co-project-dashboard__details-labels\">\n              <LabelList kind={ProjectModel.kind} labels={firstThreelabels} />\n              {keys.length > 3 && (\n                <Button variant=\"link\">\n                  <Link to={detailsLink}>{t('public~View all')}</Link>\n                </Button>\n              )}\n            </div>\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Description')}>\n            <span\n              className={cx({\n                'text-muted': !description,\n                'co-project-dashboard-details-card__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </span>\n          </OverviewDetailItem>\n          {serviceMeshEnabled && (\n            <OverviewDetailItem isLoading={!obj} title={t('public~Service mesh')}>\n              <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n            </OverviewDetailItem>\n          )}\n        </DetailsBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle, Gallery } from '@patternfly/react-core';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport { Status } from '@console/shared';\nimport { LoadingInline } from '@console/internal/components/utils/status-box';\nimport {\n  DashboardsOverviewHealthResourceSubsystem,\n  DashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthSubsystem,\n  useExtensions,\n} from '@console/plugin-sdk';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceHealthItem } from '../dashboards-page/cluster-dashboard/health-item';\n\nimport { DashboardAlerts } from '../dashboards-page/cluster-dashboard/status-card';\n\nexport const StatusCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const filterSubsystems = (subsystems: DashboardsOverviewHealthSubsystem[]) =>\n    subsystems.filter(isDashboardsOverviewHealthResourceSubsystem);\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const subsystem: DashboardsOverviewHealthResourceSubsystem = React.useMemo(\n    () =>\n      filterSubsystems(subsystemExtensions).find(\n        (s) => s.properties.title === 'Image Vulnerabilities',\n      ),\n    [subsystemExtensions],\n  );\n  const {\n    metadata: { name: namespace },\n  } = obj;\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"status-card\" className=\"co-overview-card--gradient\">\n      <CardHeader>\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      {obj ? (\n        <>\n          <HealthBody>\n            <Gallery className=\"co-overview-status__health\" hasGutter>\n              <div className=\"co-status-card__health-item\" data-test=\"project-status\">\n                <Status status={obj.status?.phase} className=\"co-icon-and-text--lg\" />\n              </div>\n              {subsystem && (\n                <ResourceHealthItem subsystem={subsystem.properties} namespace={namespace} />\n              )}\n            </Gallery>\n          </HealthBody>\n          <DashboardAlerts labelSelector={{ namespace }} />\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport {\n  isProjectOverviewUtilizationItem,\n  ProjectOverviewUtilizationItem,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeDecimalBytesPerSec,\n  humanizeNumber,\n} from '../../utils';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  getUtilizationQueries,\n  ProjectQueries,\n  getMultilineQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport {\n  PrometheusUtilizationItem,\n  PrometheusMultilineUtilizationItem,\n} from '../dashboards-page/cluster-dashboard/utilization-card';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport {\n  CPUPopover,\n  FilesystemPopover,\n  MemoryPopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  ProjectUtilizationContext,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const UtilizationCard: React.FC = () => {\n  const { t } = useTranslation();\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = obj?.metadata?.name;\n  const [queries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(projectName), getMultilineQueries(projectName)],\n    [projectName],\n  );\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ProjectOverviewUtilizationItem>(\n    isProjectOverviewUtilizationItem,\n  );\n\n  return (\n    <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <UtilizationDurationDropdown />\n            </>\n          ),\n          hasNoOffset: false,\n          className: undefined,\n        }}\n      >\n        <CardTitle>{t('public~Utilization')}</CardTitle>\n      </CardHeader>\n      <UtilizationBody>\n        <ProjectUtilizationContext.Provider value={projectName}>\n          <PrometheusUtilizationItem\n            title={t('public~CPU')}\n            humanizeValue={humanizeCpuCores}\n            utilizationQuery={queries[ProjectQueries.CPU_USAGE]}\n            requestQuery={queries[ProjectQueries.CPU_REQUESTS]}\n            TopConsumerPopover={CPUPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Memory')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.MEMORY_USAGE]}\n            requestQuery={queries[ProjectQueries.MEMORY_REQUESTS]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={MemoryPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Filesystem')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.FILESYSTEM_USAGE]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={FilesystemPopover}\n            namespace={projectName}\n          />\n          <PrometheusMultilineUtilizationItem\n            title={t('public~Network transfer')}\n            humanizeValue={humanizeDecimalBytesPerSec}\n            queries={multilineQueries[ProjectQueries.NETWORK_UTILIZATION]}\n            TopConsumerPopovers={networkPopovers}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Pod count')}\n            humanizeValue={humanizeNumber}\n            utilizationQuery={queries[ProjectQueries.POD_COUNT]}\n            namespace={projectName}\n          />\n          {dynamicItemExtensions.map(({ uid, properties }) => (\n            <PrometheusUtilizationItem\n              key={uid}\n              title={properties.title}\n              humanizeValue={properties.humanize}\n              utilizationQuery={properties.getUtilizationQuery(projectName)}\n              requestQuery={properties.getRequestQuery?.(projectName)}\n              limitQuery={properties.getLimitQuery?.(projectName)}\n              totalQuery={properties.getTotalQuery?.(projectName)}\n              namespace={projectName}\n              TopConsumerPopover={properties.TopConsumerPopover}\n            />\n          ))}\n        </ProjectUtilizationContext.Provider>\n      </UtilizationBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport {\n  getTop25ConsumerQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport { ProjectModel, PodModel, NodeModel } from '../../../../models';\nimport {\n  humanizeCpuCores,\n  humanizeBinaryBytes,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils';\n\nexport const ClusterUtilizationContext = React.createContext('.+');\n\nconst useConsumers = (\n  nsQuery: OverviewQuery,\n  podQuery: OverviewQuery,\n  nodeQuery: OverviewQuery,\n) => {\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  return React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[nsQuery],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[podQuery],\n        model: PodModel,\n        metric: 'pod',\n      },\n      {\n        query: consumerQueries[nodeQuery],\n        model: NodeModel,\n        metric: 'instance',\n      },\n    ];\n  }, [nodeQuery, nodeType, nsQuery, podQuery]);\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_CPU,\n    OverviewQuery.PODS_BY_CPU,\n    OverviewQuery.NODES_BY_CPU,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeCpuCores}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_MEMORY,\n    OverviewQuery.PODS_BY_MEMORY,\n    OverviewQuery.NODES_BY_MEMORY,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const StoragePopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_STORAGE,\n    OverviewQuery.PODS_BY_STORAGE,\n    OverviewQuery.NODES_BY_STORAGE,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const PodPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  const consumers = React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[OverviewQuery.PROJECTS_BY_PODS],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[OverviewQuery.NODES_BY_PODS],\n        model: NodeModel,\n        metric: 'node',\n      },\n    ];\n  }, [nodeType]);\n  return (\n    <ConsumerPopover\n      title={t('public~Pod count')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeNumber}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_IN,\n    OverviewQuery.PODS_BY_NETWORK_IN,\n    OverviewQuery.NODES_BY_NETWORK_IN,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_OUT,\n    OverviewQuery.PODS_BY_NETWORK_OUT,\n    OverviewQuery.NODES_BY_NETWORK_OUT,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport {\n  ProjectQueries,\n  getTopConsumerQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport { PodModel } from '../../../models';\nimport { humanizeCpuCores, humanizeBinaryBytes, humanizeDecimalBytesPerSec } from '../../utils';\n\nexport const ProjectUtilizationContext = React.createContext('');\n\nconst useConsumers = (query: ProjectQueries) => {\n  const namespace = React.useContext(ProjectUtilizationContext);\n  const consumers = React.useMemo(\n    () => [\n      {\n        query: getTopConsumerQueries(namespace)[query],\n        model: PodModel,\n        metric: 'pod',\n      },\n    ],\n    [query, namespace],\n  );\n  return {\n    consumers,\n    namespace,\n  };\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_CPU);\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      humanize={humanizeCpuCores}\n      {...consumers}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_MEMORY);\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const FilesystemPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_FILESYSTEM);\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_IN);\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_OUT);\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport {\n  PodModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  PersistentVolumeClaimModel,\n  ServiceModel,\n  StatefulSetModel,\n  RouteModel,\n  ConfigMapModel,\n  SecretModel,\n  VolumeSnapshotModel,\n} from '../../../models';\nimport {\n  ResourceInventoryItem,\n  StatusGroupMapper,\n} from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport {\n  getPodStatusGroups,\n  getPVCStatusGroups,\n  getVSStatusGroups,\n} from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { FirehoseResult, FirehoseResource, useAccessReview } from '../../utils';\nimport { K8sKind, referenceForModel } from '../../../module/k8s';\nimport { getName } from '@console/shared';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  useExtensions,\n  ProjectDashboardInventoryItem,\n  isProjectDashboardInventoryItem,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsProjectOverviewInventoryItem as DynamicProjectDashboardInventoryItem,\n  isDashboardsProjectOverviewInventoryItem as isDynamicProjectDashboardInventoryItem,\n  K8sResourceCommon,\n  WatchK8sResources,\n  ProjectOverviewInventoryItem,\n  isProjectOverviewInventoryItem,\n} from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\n\nconst createFirehoseResource = (model: K8sKind, projectName: string): FirehoseResource => ({\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  isList: true,\n  prop: 'resource',\n  namespace: projectName,\n});\n\nconst ProjectInventoryItem = withDashboardResources(\n  ({\n    projectName,\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    model,\n    mapper,\n    additionalResources,\n    additionalDynamicResources,\n  }: ProjectInventoryItemProps) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const resource = createFirehoseResource(model, projectName);\n        watchK8sResource(resource);\n        if (additionalResources) {\n          additionalResources.forEach((r) => watchK8sResource({ ...r, namespace: projectName }));\n        }\n        return () => {\n          stopWatchK8sResource(resource);\n          if (additionalResources) {\n            additionalResources.forEach(stopWatchK8sResource);\n          }\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName, model, additionalResources]);\n\n    const resourceData = _.get(resources.resource, 'data', []) as FirehoseResult['data'];\n    const resourceLoaded = _.get(resources.resource, 'loaded');\n    const resourceLoadError = _.get(resources.resource, 'loadError');\n\n    const additionalResourcesData = additionalResources\n      ? additionalResources.reduce((acc, r) => {\n          acc[r.prop] = _.get(resources[r.prop], 'data');\n          return acc;\n        }, {})\n      : {};\n    const additionalResourcesLoaded = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .every((r) => _.get(resources[r.prop], 'loaded'))\n      : true;\n    const additionalResourcesLoadError = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .some((r) => !!_.get(resources[r.prop], 'loadError'))\n      : false;\n\n    const dynamicResources = useK8sWatchResources(additionalDynamicResources || {});\n    const dynamicResourcesError = Object.values(dynamicResources).find((r) => r.loadError)\n      ?.loadError;\n    const dynamicResourcesLoaded = Object.keys(dynamicResources).every(\n      (key) => dynamicResources[key].loaded,\n    );\n\n    return (\n      <StackItem>\n        <ResourceInventoryItem\n          kind={model}\n          isLoading={\n            !projectName || !resourceLoaded || !additionalResourcesLoaded || !dynamicResourcesLoaded\n          }\n          namespace={projectName}\n          error={!!resourceLoadError || additionalResourcesLoadError || dynamicResourcesError}\n          resources={resourceData}\n          additionalResources={additionalResourcesData}\n          mapper={mapper}\n          dataTest=\"resource-inventory-item\"\n        />\n      </StackItem>\n    );\n  },\n);\n\nexport const InventoryCard = () => {\n  const itemExtensions = useExtensions<ProjectDashboardInventoryItem>(\n    isProjectDashboardInventoryItem,\n  );\n  const [dynamicItemExtensions] = useResolvedExtensions<DynamicProjectDashboardInventoryItem>(\n    isDynamicProjectDashboardInventoryItem,\n  );\n  const [inventoryExtensions] = useResolvedExtensions<ProjectOverviewInventoryItem>(\n    isProjectOverviewInventoryItem,\n  );\n\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    namespace: projectName,\n    verb: 'list',\n  });\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"inventory-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Inventory')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Stack hasGutter>\n          <ProjectInventoryItem projectName={projectName} model={DeploymentModel} />\n          <ProjectInventoryItem projectName={projectName} model={DeploymentConfigModel} />\n          <ProjectInventoryItem projectName={projectName} model={StatefulSetModel} />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PodModel}\n            mapper={getPodStatusGroups}\n          />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PersistentVolumeClaimModel}\n            mapper={getPVCStatusGroups}\n          />\n          <ProjectInventoryItem projectName={projectName} model={ServiceModel} />\n          <ProjectInventoryItem projectName={projectName} model={RouteModel} />\n          <ProjectInventoryItem projectName={projectName} model={ConfigMapModel} />\n          {canListSecrets && <ProjectInventoryItem projectName={projectName} model={SecretModel} />}\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={VolumeSnapshotModel}\n            mapper={getVSStatusGroups}\n          />\n          {itemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalResources={item.properties.additionalResources}\n            />\n          ))}\n          {dynamicItemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalDynamicResources={item.properties.additionalResources}\n            />\n          ))}\n          {inventoryExtensions.map(({ uid, properties: { component: Component } }) => (\n            <ErrorBoundary key={uid}>\n              <StackItem>\n                <Component projectName={projectName} />\n              </StackItem>\n            </ErrorBoundary>\n          ))}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\ntype ProjectInventoryItemProps = DashboardItemProps & {\n  projectName: string;\n  model: K8sKind;\n  mapper?: StatusGroupMapper;\n  additionalResources?: FirehoseResource[];\n  additionalDynamicResources?: WatchK8sResources<{\n    [key: string]: K8sResourceCommon[];\n  }>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport ActivityBody, {\n  RecentEventsBody,\n  OngoingActivityBody,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { FirehoseResource, FirehoseResult } from '../../utils';\nimport { EventModel } from '../../../models';\nimport { EventKind, K8sKind } from '../../../module/k8s';\nimport {\n  useExtensions,\n  DashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsOverviewResourceActivity as DynamicDashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity as isDynamicDashboardsOverviewResourceActivity,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { uniqueResource } from '../dashboards-page/cluster-dashboard/utils';\nimport { RootState } from '../../../redux';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { getName } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\nconst getEventsResource = (projectName: string): FirehoseResource => ({\n  isList: true,\n  kind: EventModel.kind,\n  prop: 'events',\n  namespace: projectName,\n});\n\nconst RecentEvent = withDashboardResources<RecentEventProps>(\n  ({ watchK8sResource, stopWatchK8sResource, resources, projectName, viewEvents }) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const eventsResource = getEventsResource(projectName);\n        watchK8sResource(eventsResource);\n        return () => {\n          stopWatchK8sResource(eventsResource);\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName]);\n    return (\n      <RecentEventsBody\n        events={resources.events as FirehoseResult<EventKind[]>}\n        moreLink={viewEvents}\n      />\n    );\n  },\n);\n\nconst mapStateToProps = (state: RootState): OngoingActivityReduxProps => ({\n  models: state.k8s.getIn(['RESOURCES', 'models']) as ImmutableMap<string, K8sKind>,\n});\n\nconst OngoingActivity = connect(mapStateToProps)(\n  withDashboardResources(\n    ({\n      watchK8sResource,\n      stopWatchK8sResource,\n      resources,\n      projectName,\n      models,\n    }: DashboardItemProps & OngoingActivityProps) => {\n      const resourceActivityExtensions = useExtensions<DashboardsOverviewResourceActivity>(\n        isDashboardsOverviewResourceActivity,\n      );\n      const [dynamicResourceActivityExtensions] = useResolvedExtensions<\n        DynamicDashboardsOverviewResourceActivity\n      >(isDynamicDashboardsOverviewResourceActivity);\n\n      const resourceActivities = React.useMemo(\n        () =>\n          [...resourceActivityExtensions, ...dynamicResourceActivityExtensions].filter((e) => {\n            const model = models.get(e.properties.k8sResource.kind);\n            return model && model.namespaced;\n          }),\n        [resourceActivityExtensions, dynamicResourceActivityExtensions, models],\n      );\n\n      React.useEffect(() => {\n        if (projectName) {\n          resourceActivities.forEach((a, index) => {\n            watchK8sResource(\n              uniqueResource({ ...a.properties.k8sResource, namespace: projectName }, index),\n            );\n          });\n          return () => {\n            resourceActivities.forEach((a, index) => {\n              stopWatchK8sResource(uniqueResource(a.properties.k8sResource, index));\n            });\n          };\n        }\n      }, [watchK8sResource, stopWatchK8sResource, projectName, resourceActivities]);\n\n      const allResourceActivities = React.useMemo(\n        () =>\n          _.flatten(\n            resourceActivities.map((a, index) => {\n              const k8sResources = _.get(\n                resources,\n                [uniqueResource(a.properties.k8sResource, index).prop, 'data'],\n                [],\n              ) as FirehoseResult['data'];\n              return k8sResources\n                .filter((r) => (a.properties.isActivity ? a.properties.isActivity(r) : true))\n                .map((r) => ({\n                  resource: r,\n                  timestamp: a.properties.getTimestamp ? a.properties.getTimestamp(r) : null,\n                  loader: (a as DashboardsOverviewResourceActivity)?.properties?.loader,\n                  component: (a as ResolvedExtension<DynamicDashboardsOverviewResourceActivity>)\n                    ?.properties?.component,\n                }));\n            }),\n          ),\n        [resourceActivities, resources],\n      );\n\n      const resourcesLoaded = React.useMemo(\n        () =>\n          resourceActivities.every((a, index) =>\n            _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'loaded']),\n          ),\n        [resourceActivities, resources],\n      );\n\n      return (\n        <OngoingActivityBody\n          loaded={projectName && resourcesLoaded && models.size !== 0}\n          resourceActivities={allResourceActivities}\n        />\n      );\n    },\n  ),\n);\n\nexport const ActivityCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const viewEvents = `/k8s/ns/${projectName}/events`;\n  const { t } = useTranslation();\n  return (\n    <Card\n      data-test-id=\"activity-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={viewEvents} data-test=\"view-events-link\">\n                {t('public~View events')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Activity')}</CardTitle>\n      </CardHeader>\n      <ActivityBody className=\"co-project-dashboard__activity-body\">\n        <OngoingActivity projectName={projectName} />\n        <RecentEvent projectName={projectName} viewEvents={viewEvents} />\n      </ActivityBody>\n    </Card>\n  );\n};\n\ntype RecentEventProps = DashboardItemProps & {\n  projectName: string;\n  viewEvents: string;\n};\n\ntype OngoingActivityReduxProps = {\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype OngoingActivityProps = OngoingActivityReduxProps & {\n  projectName: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle } from '@patternfly/react-core';\nimport LauncherBody from '@console/shared/src/components/dashboard/launcher-card/LauncherBody';\nimport LauncherItem from '@console/shared/src/components/dashboard/launcher-card/LauncherItem';\nimport { ProjectDashboardContext } from './project-dashboard-context';\n\nexport const LauncherCard: React.FC = () => {\n  const { namespaceLinks } = React.useContext(ProjectDashboardContext);\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"launcher-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Launcher')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <LauncherBody>\n          {_.sortBy(namespaceLinks, 'spec.text').map((nl) => (\n            <LauncherItem key={nl.metadata.uid} consoleLink={nl} />\n          ))}\n        </LauncherBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\n\nimport './launcher-card.scss';\n\nconst LauncherBody: React.FC = ({ children }) => (\n  <div className=\"co-launcher-card__body\">{children}</div>\n);\n\nexport default LauncherBody;\n","import * as React from 'react';\nimport { ExternalLink } from '@console/internal/components/utils/link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nconst LauncherItem: React.FC<LauncherItemProps> = ({ consoleLink }) => (\n  <ExternalLink\n    additionalClassName=\"co-launcher-card__item\"\n    href={consoleLink.spec.href}\n    text={consoleLink.spec.text}\n    dataTestID=\"launcher-item\"\n  />\n);\n\nexport default LauncherItem;\n\ntype LauncherItemProps = {\n  consoleLink: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport ResourceQuotaBody from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody';\nimport ResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem';\nimport AppliedClusterResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem';\nimport { AppliedClusterResourceQuotaModel, ResourceQuotaModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceQuotaKind, AppliedClusterResourceQuotaKind } from '../../../module/k8s';\n\nexport const ResourceQuotaCard = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n\n  const [quotas, rqLoaded, rqLoadError] = useK8sWatchResource<ResourceQuotaKind[]>({\n    groupVersionKind: {\n      kind: ResourceQuotaModel.kind,\n      version: ResourceQuotaModel.apiVersion,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const [clusterQuotas, acrqLoaded, acrqLoadError] = useK8sWatchResource<\n    AppliedClusterResourceQuotaKind[]\n  >({\n    groupVersionKind: {\n      kind: AppliedClusterResourceQuotaModel.kind,\n      version: AppliedClusterResourceQuotaModel.apiVersion,\n      group: AppliedClusterResourceQuotaModel.apiGroup,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"resource-quotas-card\">\n      <CardHeader>\n        <CardTitle>{t('public~ResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody error={!!rqLoadError} isLoading={!rqLoaded}>\n          {quotas.length ? (\n            <Stack hasGutter>\n              {quotas.map((rq) => (\n                <StackItem key={rq.metadata.uid}>\n                  <ResourceQuotaItem resourceQuota={rq} />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n      <CardHeader>\n        <CardTitle>{t('public~AppliedClusterResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody\n          error={!!acrqLoadError}\n          isLoading={!acrqLoaded}\n          noText={t('public~No AppliedClusterResourceQuotas')}\n        >\n          {clusterQuotas.length ? (\n            <Stack hasGutter>\n              {clusterQuotas.map((cq) => (\n                <StackItem key={cq.metadata.uid}>\n                  <AppliedClusterResourceQuotaItem\n                    resourceQuota={cq}\n                    namespace={obj.metadata.name}\n                  />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './resource-quota-card.scss';\n\nconst ResourceQuotaBody: React.FC<ResourceQuotaBodyProps> = ({\n  error,\n  isLoading,\n  noText,\n  children,\n}) => {\n  let body: React.ReactNode;\n  const { t } = useTranslation();\n  if (error) {\n    body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n  } else if (isLoading) {\n    body = <div className=\"skeleton-quota\" />;\n  } else if (!React.Children.count(children)) {\n    body = <div className=\"text-secondary\">{noText || t('console-shared~No ResourceQuotas')}</div>;\n  }\n\n  return <>{body || children}</>;\n};\n\nexport default ResourceQuotaBody;\n\ntype ResourceQuotaBodyProps = {\n  error: boolean;\n  isLoading: boolean;\n  noText?: string;\n};\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { ResourceQuotaModel } from '@console/internal/models';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst ResourceQuotaItem: React.FC<ResourceQuotaItemProps> = ({ resourceQuota }) => {\n  const resources = Object.keys(resourceQuota.status?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n\n  const scopes = resourceQuota.spec?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: ResourceQuotaModel.kind,\n                  version: ResourceQuotaModel.apiVersion,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={resourceQuota.metadata.namespace}\n                inline\n                truncate\n                dataTest=\"resource-quota-link\"\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary hard={resourceQuota.status?.hard} used={resourceQuota.status?.used} />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <ResourceQuotaCharts resourceQuota={resourceQuota} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ResourceQuotaItem;\n\ntype ResourceQuotaItemProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { ClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ClusterResourceQuotaChartsProps = {\n  clusterResourceQuota: ClusterResourceQuotaKind;\n};\n\nconst ClusterResourceQuotaCharts = ({\n  clusterResourceQuota,\n}: ClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(clusterResourceQuota.status?.total?.hard ?? {}).map((resourceName) => {\n    const clusterHard = clusterResourceQuota.status.total.hard[resourceName];\n    const clusterUsed = clusterResourceQuota.status.total.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({\n      resourceName,\n      used: clusterUsed,\n      hard: clusterHard,\n    });\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Used',\n              y: percent,\n            },\n            {\n              x: 'Unused',\n              y: 100 - percent,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ClusterResourceQuotaCharts;\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { AppliedClusterResourceQuotaModel } from '@console/internal/models';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst AppliedClusterResourceQuotaItem: React.FC<AppliedClusterResourceQuotaItemProps> = ({\n  resourceQuota,\n  namespace,\n}) => {\n  const resources = Object.keys(resourceQuota.status?.total?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n  const scopes = resourceQuota?.spec?.quota?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen: boolean) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: AppliedClusterResourceQuotaModel.kind,\n                  version: AppliedClusterResourceQuotaModel.apiVersion,\n                  group: AppliedClusterResourceQuotaModel.apiGroup,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={namespace}\n                inline\n                truncate\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary\n            hard={resourceQuota.status?.total?.hard}\n            used={resourceQuota.status?.total?.used}\n          />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <AppliedClusterResourceQuotaCharts\n            appliedClusterResourceQuota={resourceQuota}\n            namespace={namespace}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AppliedClusterResourceQuotaItem;\n\ntype AppliedClusterResourceQuotaItemProps = {\n  resourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n","import * as _ from 'lodash';\nimport { Kebab, KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\n\nexport const nodeActions = (contextMenuResource: K8sResourceKind): KebabOption[] => {\n  if (!contextMenuResource) {\n    return null;\n  }\n  const resourceKind = modelFor(referenceFor(contextMenuResource));\n  const menuActions = [...Kebab.getExtensionsActionsForKind(resourceKind), ...Kebab.factory.common];\n\n  return _.map(menuActions, (a) => a(resourceKind, contextMenuResource));\n};\n","import * as React from 'react';\nimport { useCallbackRef } from '@patternfly/react-topology';\n\n//\n// Local version of the @patternfly/react-topology useHover\n// Updated to provide the capability to reset the hover state based on a dependency change\n//\n\nconst EMPTY: any[] = [];\n\nconst useHover = <T extends Element>(\n  delayIn: number = 200,\n  delayOut: number = 200,\n  dependencies: any[] = EMPTY,\n): [boolean, (node: T) => (() => void) | undefined] => {\n  const [hover, setHover] = React.useState<boolean>(false);\n  const mountRef = React.useRef(true);\n\n  // need to ensure we do not start the unset timer on unmount\n  React.useEffect(\n    () => () => {\n      mountRef.current = false;\n    },\n    [],\n  );\n\n  React.useEffect(() => {\n    setHover(false);\n    // dynamic dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  // The unset handle needs to be referred by listeners in different closures.\n  const unsetHandle = React.useRef<number>();\n\n  const callbackRef = useCallbackRef(\n    React.useCallback(\n      (node: T) => {\n        if (node) {\n          // store locally instead of a ref because it only needs to be referred by inner closures\n          let delayHandle: any;\n\n          const delayedStateChange = (newState: boolean, delay: number) => {\n            clearTimeout(unsetHandle.current);\n            clearTimeout(delayHandle);\n\n            if (delay != null) {\n              delayHandle = window.setTimeout(() => {\n                clearTimeout(unsetHandle.current);\n                setHover(newState);\n              }, delay);\n            } else {\n              setHover(newState);\n            }\n          };\n\n          const onMouseEnter = () => {\n            delayedStateChange(true, delayIn);\n          };\n\n          const onMouseLeave = () => {\n            delayedStateChange(false, delayOut);\n          };\n\n          node.addEventListener('mouseenter', onMouseEnter);\n          node.addEventListener('mouseleave', onMouseLeave);\n\n          return () => {\n            node.removeEventListener('mouseenter', onMouseEnter);\n            node.removeEventListener('mouseleave', onMouseLeave);\n            clearTimeout(delayHandle);\n            if (mountRef.current) {\n              // Queue the unset in case reattaching to a new node in the same location.\n              // This can happen with layers. Rendering a node to a new layer will unmount the old node\n              // and remount a new node at the same location. This will prevent flickering and getting\n              // stuck in a hover state.\n              unsetHandle.current = window.setTimeout(() => {\n                if (mountRef.current) {\n                  setHover(false);\n                }\n              }, Math.max(delayIn, delayOut));\n            }\n          };\n        }\n        return undefined;\n      },\n      [delayIn, delayOut],\n    ),\n  );\n\n  return [hover, callbackRef];\n};\n\nexport default useHover;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  hullPath,\n  DefaultCreateConnector,\n  Point,\n  Layer,\n  ContextMenu,\n  ContextMenuItem,\n  AnchorEnd,\n  Graph,\n  GraphElement,\n  isGraph,\n  isNode,\n  LabelPosition,\n  Node,\n  DragEvent,\n  DragObjectWithType,\n  DragOperationWithType,\n  DragSourceMonitor,\n  DragSourceSpec,\n  DragSpecOperationType,\n  useDndDrag,\n  TOP_LAYER,\n  useCombineRefs,\n  useHover,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { observer } from 'mobx-react';\n\n//\n// Local version of the @patternfly/react-topology withCreateConnector\n// Updated to notify the wrapped component when the create connector is being dragged\n//\n\nexport const CREATE_CONNECTOR_OPERATION = '#createconnector#';\nexport const CREATE_CONNECTOR_DROP_TYPE = '#createConnector#';\n\nexport interface ConnectorChoice {\n  label: string;\n}\n\nexport interface CreateConnectorOptions {\n  handleAngle?: number;\n  handleAngleTop?: number;\n  handleLength?: number;\n  dragItem?: DragObjectWithType;\n  dragOperation?: DragOperationWithType;\n  hideConnectorMenu?: boolean;\n}\n\ninterface ConnectorComponentProps {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging: boolean;\n  hover?: boolean;\n}\n\ntype CreateConnectorRenderer = React.ComponentType<ConnectorComponentProps>;\n\ntype OnCreateResult = ConnectorChoice[] | void | undefined | null | React.ReactElement[];\n\ntype CreateConnectorWidgetProps = {\n  element: Node;\n  onKeepAlive: (isAlive: boolean) => void;\n  onCreate: (\n    element: Node,\n    target: Node | Graph,\n    event: DragEvent,\n    dropHints?: string[] | undefined,\n    choice?: ConnectorChoice,\n  ) => Promise<OnCreateResult> | OnCreateResult;\n  ConnectorComponent: CreateConnectorRenderer;\n  contextMenuClass?: string;\n} & CreateConnectorOptions;\n\ninterface CollectProps {\n  event?: DragEvent;\n  dragging: boolean;\n  hints?: string[] | undefined;\n}\n\ninterface PromptData {\n  element: Node;\n  target: Node | Graph;\n  event: DragEvent;\n  choices: ConnectorChoice[] | React.ReactElement[];\n}\n\nconst isReactElementArray = (\n  choices: ConnectorChoice[] | React.ReactElement[],\n): choices is React.ReactElement[] => React.isValidElement(choices[0]);\n\nconst DEFAULT_HANDLE_ANGLE = Math.PI / 180;\nconst DEFAULT_HANDLE_ANGLE_TOP = 1.5 * Math.PI;\nconst DEFAULT_HANDLE_LENGTH = 32;\n\nconst CreateConnectorWidget: React.FunctionComponent<CreateConnectorWidgetProps> = observer(\n  (props) => {\n    const {\n      element,\n      onKeepAlive,\n      onCreate,\n      ConnectorComponent,\n      handleAngle = DEFAULT_HANDLE_ANGLE,\n      handleAngleTop = DEFAULT_HANDLE_ANGLE_TOP,\n      handleLength = DEFAULT_HANDLE_LENGTH,\n      contextMenuClass,\n      dragItem,\n      dragOperation,\n      hideConnectorMenu,\n    } = props;\n    const [prompt, setPrompt] = React.useState<PromptData | null>(null);\n    const [active, setActive] = React.useState(false);\n    const hintsRef = React.useRef<string[] | undefined>();\n\n    const spec = React.useMemo(() => {\n      const dragSourceSpec: DragSourceSpec<\n        DragObjectWithType,\n        DragSpecOperationType<DragOperationWithType>,\n        GraphElement,\n        CollectProps,\n        CreateConnectorWidgetProps\n      > = {\n        item: dragItem || { type: CREATE_CONNECTOR_DROP_TYPE },\n        operation: dragOperation || { type: CREATE_CONNECTOR_OPERATION },\n        begin: (monitor: DragSourceMonitor, dragProps: any) => {\n          setActive(true);\n          return dragProps.element;\n        },\n        drag: (event: DragEvent, monitor: DragSourceMonitor, p: CreateConnectorWidgetProps) => {\n          p.element.raise();\n        },\n        end: async (\n          dropResult: GraphElement,\n          monitor: DragSourceMonitor,\n          dragProps: CreateConnectorWidgetProps,\n        ) => {\n          const event = monitor.getDragEvent();\n          if ((isNode(dropResult) || isGraph(dropResult)) && event) {\n            const choices = await dragProps.onCreate(\n              dragProps.element,\n              dropResult,\n              event,\n              monitor.getDropHints(),\n            );\n            if (choices && choices.length && !hideConnectorMenu) {\n              setPrompt({ element: dragProps.element, target: dropResult, event, choices });\n              return;\n            }\n          }\n          setActive(false);\n          dragProps.onKeepAlive(false);\n        },\n        collect: (monitor) => ({\n          dragging: !!monitor.getItem(),\n          event: monitor.isDragging() ? monitor.getDragEvent() : undefined,\n          hints: monitor.getDropHints(),\n        }),\n      };\n      return dragSourceSpec;\n    }, [setActive, dragItem, dragOperation, hideConnectorMenu]);\n    const [{ dragging, event, hints }, dragRef] = useDndDrag(spec, props);\n    const [hover, hoverRef] = useHover();\n    const refs = useCombineRefs(dragRef, hoverRef);\n\n    if (!active && dragging && !event) {\n      // another connector is dragging right now\n      return null;\n    }\n\n    if (dragging) {\n      // store the latest hints\n      hintsRef.current = hints;\n    }\n\n    const dragEvent = prompt ? prompt.event : event;\n\n    let startPoint: Point;\n    let endPoint: Point;\n\n    if (dragEvent) {\n      endPoint = new Point(dragEvent.x, dragEvent.y);\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(endPoint);\n    } else {\n      const bounds = element.getBounds();\n      const isRightLabel = element.getLabelPosition() === LabelPosition.right;\n      const referencePoint = isRightLabel\n        ? new Point(bounds.x + bounds.width / 2, bounds.y)\n        : new Point(\n            bounds.right(),\n            Math.tan(handleAngle) * (bounds.width / 2) + bounds.y + bounds.height / 2,\n          );\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(referencePoint);\n      endPoint = new Point(\n        Math.cos(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.x,\n        Math.sin(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.y,\n      );\n    }\n\n    // bring into the coordinate space of the element\n    element.translateFromParent(startPoint);\n    element.translateFromParent(endPoint);\n\n    const connector = (\n      <g\n        className={css(styles.topologyDefaultCreateConnector)}\n        ref={refs}\n        onMouseEnter={!active ? () => onKeepAlive(true) : undefined}\n        onMouseLeave={!active ? () => onKeepAlive(false) : undefined}\n      >\n        <ConnectorComponent\n          startPoint={startPoint}\n          endPoint={endPoint}\n          dragging={dragging}\n          hints={hintsRef.current || []}\n          hover={hover}\n        />\n        <path\n          d={hullPath(\n            [\n              [startPoint.x, startPoint.y],\n              [endPoint.x, endPoint.y],\n            ],\n            7,\n          )}\n          fillOpacity=\"0\"\n        />\n      </g>\n    );\n\n    return (\n      <>\n        {active ? <Layer id={TOP_LAYER}>{connector}</Layer> : connector}\n        {prompt && (\n          <ContextMenu\n            reference={{ x: prompt.event.pageX, y: prompt.event.pageY }}\n            className={contextMenuClass}\n            open\n            onRequestClose={() => {\n              setActive(false);\n              onKeepAlive(false);\n            }}\n          >\n            {isReactElementArray(prompt.choices)\n              ? prompt.choices\n              : prompt.choices.map((c: ConnectorChoice) => (\n                  <ContextMenuItem\n                    key={c.label}\n                    onClick={() => {\n                      onCreate(prompt.element, prompt.target, prompt.event, hintsRef.current, c);\n                    }}\n                  >\n                    {c.label}\n                  </ContextMenuItem>\n                ))}\n          </ContextMenu>\n        )}\n      </>\n    );\n  },\n);\n\ninterface ElementProps {\n  element: Node;\n}\n\nexport interface WithCreateConnectorProps {\n  onShowCreateConnector: () => void;\n  onHideCreateConnector: () => void;\n  createConnectorDrag: boolean;\n}\n\nexport const withCreateConnector = <P extends WithCreateConnectorProps & ElementProps>(\n  onCreate: React.ComponentProps<typeof CreateConnectorWidget>['onCreate'],\n  ConnectorComponent: CreateConnectorRenderer = DefaultCreateConnector,\n  contextMenuClass?: string,\n  options?: CreateConnectorOptions,\n) => (WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FunctionComponent<Omit<P, keyof WithCreateConnectorProps>> = ({\n    children,\n    ...props\n  }) => {\n    const [show, setShow] = React.useState(false);\n    const [alive, setKeepAlive] = React.useState(false);\n    const onShowCreateConnector = React.useCallback(() => setShow(true), []);\n    const onHideCreateConnector = React.useCallback(() => setShow(false), []);\n    const onKeepAlive = React.useCallback(\n      (isAlive: boolean) => {\n        setKeepAlive((prev) => {\n          if (prev && !isAlive) {\n            onHideCreateConnector();\n          }\n          return isAlive;\n        });\n      },\n      [onHideCreateConnector],\n    );\n    return (\n      <WrappedComponent\n        {...(props as any)}\n        onShowCreateConnector={onShowCreateConnector}\n        onHideCreateConnector={onHideCreateConnector}\n        createConnectorDrag={alive}\n      >\n        {children}\n        {(show || alive) && (\n          <CreateConnectorWidget\n            {...options}\n            element={props.element}\n            onCreate={onCreate}\n            onKeepAlive={onKeepAlive}\n            ConnectorComponent={ConnectorComponent}\n            contextMenuClass={contextMenuClass}\n          />\n        )}\n      </WrappedComponent>\n    );\n  };\n  Component.displayName = `withCreateConnector(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import {\n  ModelKind,\n  withPanZoom,\n  withDragNode,\n  withTargetDrag,\n  withSelection,\n  withDndDrop,\n  DragObjectWithType,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport { contextMenuActions, graphActionContext, groupActionContext } from '../../../actions';\nimport { withCreateConnector } from '../../../behavior/withCreateConnector';\nimport {\n  TYPE_WORKLOAD,\n  TYPE_CONNECTS_TO,\n  TYPE_APPLICATION_GROUP,\n  TYPE_AGGREGATE_EDGE,\n  TYPE_TRAFFIC_CONNECTOR,\n} from '../../../const';\nimport { createConnection } from '../../../utils/createConnection';\nimport { withEditReviewAccess } from '../../../utils/withEditReviewAccess';\nimport {\n  NodeComponentProps,\n  graphDropTargetSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  MOVE_CONNECTOR_DROP_TYPE,\n  withContextMenu,\n  createConnectorCallback,\n} from './componentUtils';\nimport { AggregateEdge, ConnectsTo, CreateConnector, TrafficConnector } from './edges';\nimport GraphComponent from './GraphComponent';\nimport { Application } from './groups';\nimport { WorkloadNode } from './nodes';\n\nimport './ContextMenu.scss';\n\nexport const componentFactory: ComponentFactory = (kind, type) => {\n  switch (type) {\n    case TYPE_APPLICATION_GROUP:\n      return withDndDrop(applicationGroupDropTargetSpec)(\n        withDragNode(nodeDragSourceSpec(type, false, false))(\n          withSelection({ controlled: true })(withContextMenu(groupActionContext)(Application)),\n        ),\n      );\n    case TYPE_WORKLOAD:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withDndDrop<\n          any,\n          any,\n          { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n          NodeComponentProps\n        >(nodeDropTargetSpec)(\n          withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type))(\n              withSelection({ controlled: true })(\n                withContextMenu(contextMenuActions)(WorkloadNode),\n              ),\n            ),\n          ),\n        ),\n      );\n    case TYPE_CONNECTS_TO:\n      return withTargetDrag<DragObjectWithType>(\n        edgeDragSourceSpec(MOVE_CONNECTOR_DROP_TYPE, createConnection),\n      )(withContextMenu(contextMenuActions)(ConnectsTo));\n    case TYPE_AGGREGATE_EDGE:\n      return AggregateEdge;\n    case TYPE_TRAFFIC_CONNECTOR:\n      return TrafficConnector;\n    default:\n      switch (kind) {\n        case ModelKind.graph:\n          return withDndDrop(graphDropTargetSpec)(\n            withPanZoom()(\n              withSelection({ controlled: true })(\n                withContextMenu(graphActionContext)(GraphComponent),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n  }\n};\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType, observer } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './AggregateEdge.scss';\n\ntype AggregateEdgeProps = {\n  element: Edge;\n};\n\nconst AggregateEdge: React.FC<AggregateEdgeProps> = ({ element, ...others }) => {\n  const { bidirectional } = element.getData();\n\n  const endTerminalType =\n    !bidirectional && (!element.getSource().isCollapsed() || !element.getTarget().isCollapsed())\n      ? EdgeTerminalType.directional\n      : EdgeTerminalType.none;\n\n  return (\n    <BaseEdge\n      data-test-id=\"edge-handler\"\n      element={element}\n      className=\"odc-base-edge odc-aggregate-edge\"\n      endTerminalType={endTerminalType}\n      {...others}\n    />\n  );\n};\n\nexport default observer(AggregateEdge);\n","import * as React from 'react';\nimport {\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n  Edge,\n  observer,\n  EdgeTerminalType,\n} from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './ConnectsTo.scss';\n\ntype ConnectsToProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\nconst ConnectsTo: React.FC<ConnectsToProps> = (props) => (\n  <BaseEdge\n    className=\"odc-connects-to\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default observer(ConnectsTo);\n","import * as React from 'react';\nimport { DefaultCreateConnector, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\ntype CreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging?: boolean;\n  hover?: boolean;\n};\n\nconst CreateConnector: React.FC<CreateConnectorProps> = ({\n  startPoint,\n  endPoint,\n  dragging,\n  hover,\n  hints,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DefaultCreateConnector\n      startPoint={startPoint}\n      endPoint={endPoint}\n      dragging={dragging}\n      hints={hints}\n      hover={hover}\n      tipContents={hover && dragging ? t('topology~Add resources') : null}\n    />\n  );\n};\n\nexport default CreateConnector;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  Edge,\n  EdgeTerminalType,\n  NodeStatus,\n  StatusModifier,\n  observer,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { ComputedServiceBindingStatus } from '@console/service-binding-plugin/src/types';\nimport { getComputedServiceBindingStatus } from '@console/service-binding-plugin/src/utils';\nimport BaseEdge from './BaseEdge';\n\nimport './ServiceBinding.scss';\n\nconst ERROR_CROSS_SIZE = 8;\nconst ERROR_CROSS_STROKE_WIDTH = 2;\n\ntype ServiceBindingProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\n\nconst ServiceBinding: React.FC<ServiceBindingProps> = (props) => {\n  const { sbr } = props.element.getData();\n\n  const hasError = getComputedServiceBindingStatus(sbr) === ComputedServiceBindingStatus.ERROR;\n\n  let errorCross: JSX.Element;\n  if (hasError) {\n    const startPoint = props.element.getStartPoint();\n    const endPoint = props.element.getEndPoint();\n    const centerX = (startPoint.x + endPoint.x) / 2;\n    const centerY = (startPoint.y + endPoint.y) / 2;\n    const angleDeg =\n      Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) * (180 / Math.PI);\n\n    const classNames = css(\n      // required to make it red\n      styles.topologyEdge,\n      StatusModifier[NodeStatus.danger],\n      // required to make it blue when the edge is selected\n      styles.topologyConnectorArrow,\n    );\n\n    errorCross = (\n      <g transform={`translate(${centerX}, ${centerY}) rotate(${angleDeg})`} className={classNames}>\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={-ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={-ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n      </g>\n    );\n  }\n\n  return (\n    <BaseEdge\n      className=\"odc-service-binding\"\n      endTerminalStatus={hasError ? NodeStatus.danger : undefined}\n      endTerminalType={EdgeTerminalType.directional}\n      {...props}\n    >\n      {errorCross}\n    </BaseEdge>\n  );\n};\n\nexport default observer(ServiceBinding);\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\nimport './TrafficConnector.scss';\n\ntype TrafficConnectorProps = {\n  element: Edge;\n};\n\nconst TrafficConnector: React.FC<TrafficConnectorProps> = (props) => (\n  <BaseEdge\n    className=\"odc-traffic-connector\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default TrafficConnector;\n","import { useContext } from 'react';\nimport { FilterContext } from './FilterProvider';\n\nconst useAppliedDisplayFilters = (): { [filterKey: string]: boolean } => {\n  return useContext(FilterContext).appliedFilters;\n};\n\nexport { useAppliedDisplayFilters };\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { toLower } from 'lodash';\nimport { useQueryParams } from '@console/shared/src';\n\nconst EMPTY_QUERY_PARAMS = [];\n\nconst fuzzyCaseInsensitive = (a: string, b: string): boolean => fuzzy(toLower(a), toLower(b));\n\nconst useSearchFilter = (\n  name: string,\n  labels: { [key: string]: string } = {},\n): [boolean, string] => {\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get('searchQuery');\n  const labelsQuery = queryParams.get('labels')?.split(',') ?? EMPTY_QUERY_PARAMS;\n\n  const labelsMatched = React.useMemo(() => {\n    const labelsString = Object.entries(labels).map((label) => label.join('='));\n    return labelsQuery.every((label) => labelsString.includes(label));\n  }, [labels, labelsQuery]);\n\n  const filtered = React.useMemo(() => fuzzyCaseInsensitive(searchQuery, name), [\n    searchQuery,\n    name,\n  ]);\n\n  return [(filtered && !!searchQuery) || (labelsMatched && labelsQuery.length > 0), searchQuery];\n};\n\nexport { useSearchFilter };\n","import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  WithContextMenuProps,\n  useHover,\n  useCombineRefs,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { ApplicationModel } from '../../../../models';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../../../topology-types';\nimport { getKindStringAndAbbreviation } from '../nodes/nodeUtils';\nimport RegroupHint from '../RegroupHint';\nimport ApplicationGroupExpanded from './ApplicationGroupExpanded';\nimport GroupNode from './GroupNode';\n\nimport './Application.scss';\n\ntype ApplicationProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithDragNodeProps &\n  WithContextMenuProps;\n\nconst Application: React.FC<ApplicationProps> = ({\n  element,\n  dragNodeRef,\n  canDrop,\n  dropTarget,\n  dragRegroupable,\n  ...others\n}) => {\n  const [hover, hoverRef] = useHover();\n  const refs = useCombineRefs(dragNodeRef, hoverRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const needsHintRef = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    const needsHint = dropTarget && !canDrop && dragRegroupable;\n    if (needsHint !== needsHintRef.current) {\n      needsHintRef.current = needsHint;\n      element\n        .getController()\n        .fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? <RegroupHint /> : null);\n    }\n  }, [dropTarget, canDrop, element, dragRegroupable]);\n  const showLabel = useShowLabel(hover);\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(ApplicationModel.kind);\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  const groupClasses = classNames('odc-application-group', {\n    'is-filtered': filtered,\n  });\n\n  if (element.isCollapsed()) {\n    return (\n      <GroupNode\n        bgClassName=\"odc-application-group__bg\"\n        element={element}\n        canDrop={canDrop}\n        dropTarget={dropTarget}\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n        dragNodeRef={refs}\n        {...others}\n      />\n    );\n  }\n\n  // Use local version of DefaultGroupExpanded until we have a fix for https://github.com/patternfly/patternfly-react/issues/7300\n  return (\n    <ApplicationGroupExpanded\n      className={groupClasses}\n      showLabel={showLabel}\n      element={element}\n      canDrop={canDrop}\n      dropTarget={dropTarget}\n      dragNodeRef={refs}\n      badge={kindAbbr}\n      badgeColor={kindColor}\n      badgeClassName={badgeClassName}\n      {...others}\n    />\n  );\n};\n\nexport default observer(Application);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  useHover,\n  useVisualizationController,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { AlertSeverity } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  AllPodStatus,\n  calculateRadius,\n  getFiringAlerts,\n  getPodStatus,\n  getSeverityAlertType,\n  PodRCData,\n  useBuildConfigsWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { getFilterById, SHOW_POD_COUNT_FILTER_ID, useDisplayFilters } from '../../../../filters';\nimport { getResource, getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { useResourceQuotaAlert } from '../../../workload';\nimport BaseNode from './BaseNode';\nimport { getNodeDecorators } from './decorators/getNodeDecorators';\nimport PodSet, { podSetInnerRadius } from './PodSet';\n\nimport './WorkloadNode.scss';\n\nconst POD_STATUS_NORMAL = 1;\nconst POD_STATUS_WARNING = 2;\nconst POD_STATUS_DANGER = 3;\n\nconst StatusSeverities = {\n  danger: [\n    'ContainerCannotRun',\n    'CrashLoopBackOff',\n    'Critical',\n    'ErrImagePull',\n    'Error',\n    'Failed',\n    'Failure',\n    'ImagePullBackOff',\n    'InstallCheckFailed',\n    'Lost',\n    'Rejected',\n    'UpgradeFailed',\n  ],\n  warning: [\n    'Cancelled',\n    'Deleting',\n    'Expired',\n    'Not Ready',\n    'Terminating',\n    'Warning',\n    'RequiresApproval',\n  ],\n  normal: [\n    'New',\n    'Pending',\n    'Planning',\n    'ContainerCreating',\n    'UpgradePending',\n    'In Progress',\n    'Installing',\n    'InstallReady',\n    'Replacing',\n    'Running',\n    'Updating',\n    'Upgrading',\n    'Accepted',\n    'Active',\n    'Bound',\n    'Complete',\n    'Completed',\n    'Created',\n    'Enabled',\n    'Succeeded',\n    'Ready',\n    'Up to date',\n    'Provisioned as node',\n    'Preferred',\n    'Connected',\n    'Info',\n    'Unknown',\n    'PipelineNotStarted',\n  ],\n};\n\nexport const getNodePodStatus = (podStatus: AllPodStatus): number => {\n  switch (podStatus) {\n    case AllPodStatus.Failed:\n    case AllPodStatus.CrashLoopBackOff:\n      return POD_STATUS_DANGER;\n    case AllPodStatus.Warning:\n      return POD_STATUS_WARNING;\n    default:\n      return POD_STATUS_NORMAL;\n  }\n};\n\nexport const getAggregateStatus = (\n  donutStatus: PodRCData,\n  alertSeverity: AlertSeverity,\n  buildStatus: string,\n  pipelineStatus: string,\n  workloadRqAlertVariant: NodeStatus,\n): NodeStatus => {\n  const worstPodStatus =\n    donutStatus?.pods?.reduce((acc, pod) => {\n      return Math.max(acc, getNodePodStatus(getPodStatus(pod)));\n    }, POD_STATUS_NORMAL) ?? NodeStatus.default;\n\n  if (\n    worstPodStatus === POD_STATUS_DANGER ||\n    alertSeverity === AlertSeverity.Critical ||\n    StatusSeverities.danger.includes(buildStatus) ||\n    StatusSeverities.danger.includes(pipelineStatus)\n  ) {\n    return NodeStatus.danger;\n  }\n  if (\n    worstPodStatus === POD_STATUS_WARNING ||\n    alertSeverity === AlertSeverity.Warning ||\n    StatusSeverities.warning.includes(buildStatus) ||\n    StatusSeverities.warning.includes(pipelineStatus) ||\n    workloadRqAlertVariant === NodeStatus.warning\n  ) {\n    return NodeStatus.warning;\n  }\n  return NodeStatus.default;\n};\n\ntype WorkloadNodeProps = {\n  element: Node;\n  dragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n  dropTooltip?: React.ReactNode;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\ntype WorkloadPodsNodeProps = WorkloadNodeProps & {\n  donutStatus: PodRCData;\n};\n\nconst WorkloadPodsNode: React.FC<WorkloadPodsNodeProps> = observer(function WorkloadPodsNode({\n  donutStatus,\n  element,\n  children,\n  urlAnchorRef,\n  canDrop,\n  dropTarget,\n  dropTooltip,\n  contextMenuOpen,\n  ...rest\n}) {\n  const { t } = useTranslation();\n  const { width, height } = element.getDimensions();\n  const workloadData = element.getData().data;\n  const filters = useDisplayFilters();\n  const [hover, hoverRef] = useHover();\n  const size = Math.min(width, height);\n  const { radius, decoratorRadius } = calculateRadius(size);\n  const cx = width / 2;\n  const cy = height / 2;\n  const tipContent = dropTooltip || t('topology~Create a visual connector');\n  const showPodCountFilter = getFilterById(SHOW_POD_COUNT_FILTER_ID, filters);\n  const showPodCount = showPodCountFilter?.value ?? false;\n  const { decorators } = element.getGraph().getData();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const iconImageUrl = getImageForIconClass(workloadData.builderImage) ?? workloadData.builderImage;\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const nodeDecorators = showDetails\n    ? getNodeDecorators(element, decorators, cx, cy, radius, decoratorRadius)\n    : null;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const buildStatus = buildConfigs?.[0]?.builds?.[0]?.status?.phase;\n  const pipelineStatus = element.getData()?.resources?.pipelineRunStatus ?? 'Unknown';\n  const workloadRqAlert = useResourceQuotaAlert(element);\n  const workloadRqAlertVariant = (workloadRqAlert?.variant as NodeStatus) || NodeStatus.default;\n\n  return (\n    <g className=\"odc-workload-node\">\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        animationDuration={0}\n      >\n        <BaseNode\n          className=\"odc-workload-node\"\n          hoverRef={hoverRef}\n          innerRadius={podSetInnerRadius(size, donutStatus)}\n          icon={showDetails && !showPodCount ? iconImageUrl : undefined}\n          kind={workloadData.kind}\n          element={element}\n          dropTarget={dropTarget}\n          canDrop={canDrop}\n          nodeStatus={\n            !showDetails &&\n            getAggregateStatus(\n              donutStatus,\n              severityAlertType,\n              buildStatus,\n              pipelineStatus,\n              workloadRqAlertVariant,\n            )\n          }\n          attachments={nodeDecorators}\n          contextMenuOpen={contextMenuOpen}\n          alertVariant={workloadRqAlertVariant}\n          {...rest}\n        >\n          {donutStatus && showDetails ? (\n            <PodSet size={size} x={cx} y={cy} data={donutStatus} showPodCount={showPodCount} />\n          ) : null}\n          {children}\n        </BaseNode>\n      </Tooltip>\n    </g>\n  );\n});\n\nconst WorkloadNode: React.FC<WorkloadNodeProps> = observer(function WorkloadNode({\n  element,\n  ...rest\n}) {\n  const resource = getTopologyResourceObject(element.getData());\n  const { podData, loadError, loaded } = usePodsWatcher(\n    resource,\n    resource.kind,\n    resource.metadata.namespace,\n  );\n  return (\n    <WorkloadPodsNode\n      element={element}\n      donutStatus={loaded && !loadError ? podData : null}\n      {...rest}\n    />\n  );\n});\n\nexport { WorkloadNode, WorkloadPodsNode };\n","export { default as Decorator } from './Decorator';\nexport { default as BuildDecorator } from './BuildDecorator';\nexport { default as BuildDecoratorBubble } from './BuildDecoratorBubble';\nexport { default as EditDecorator } from './EditDecorator';\nexport { default as MonitoringAlertsDecorator } from './MonitoringAlertsDecorator';\nexport { default as UrlDecorator } from './UrlDecorator';\n","import * as React from 'react';\nimport SvgDropShadowFilter from '../../svg/SvgDropShadowFilter';\n\nexport const NODE_SHADOW_FILTER_ID = 'NodeShadowsFilterId';\nexport const NODE_SHADOW_FILTER_ID_HOVER = 'NodeShadowsFilterId--hover';\n\nconst NodeShadows: React.FC = () => (\n  <>\n    <SvgDropShadowFilter id={NODE_SHADOW_FILTER_ID} />\n    <SvgDropShadowFilter\n      id={NODE_SHADOW_FILTER_ID_HOVER}\n      dy={3}\n      stdDeviation={7}\n      floodOpacity={0.24}\n    />\n  </>\n);\n\nexport { NodeShadows };\n","import * as React from 'react';\nimport {\n  Visualization,\n  VisualizationSurface,\n  GraphElement,\n  isNode,\n  BaseEdge,\n  VisualizationProvider,\n  Model,\n  GraphModel,\n  NodeModel,\n  BOTTOM_LAYER,\n  GROUPS_LAYER,\n  DEFAULT_LAYER,\n  TOP_LAYER,\n  SelectionEventListener,\n  SELECTION_EVENT,\n  NODE_POSITIONED_EVENT,\n  GRAPH_POSITION_CHANGE_EVENT,\n  Node,\n  Rect,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { action } from 'mobx';\nimport { connect } from 'react-redux';\nimport {\n  useResolvedExtensions,\n  isTopologyComponentFactory as isDynamicTopologyComponentFactory,\n  TopologyComponentFactory as DynamicTopologyComponentFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { RootState } from '@console/internal/redux';\nimport {\n  useQueryParams,\n  withUserSettingsCompatibility,\n  WithUserSettingsCompatibilityProps,\n} from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY, TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { isTopologyComponentFactory, TopologyComponentFactory } from '../../extensions/topology';\nimport { getTopologyGraphModel, setTopologyGraphModel } from '../../redux/action';\nimport { SHOW_GROUPING_HINT_EVENT, ShowGroupingHintEventListener } from '../../topology-types';\nimport { componentFactory } from './components';\nimport { DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory } from './layouts/layoutFactory';\nimport TopologyControlBar from './TopologyControlBar';\n\nimport './Topology.scss';\n\nconst STORED_NODE_LAYOUT_FIELDS = ['id', 'x', 'y'];\n\nconst setTopologyLayout = (namespace: string, nodes: NodeModel[], layout: string) => {\n  const currentStore = {};\n  currentStore[namespace] = {\n    nodes: nodes?.map((n) =>\n      Object.keys(n).reduce((acc, key) => {\n        if (STORED_NODE_LAYOUT_FIELDS.includes(key)) {\n          acc[key] = n[key];\n        }\n        return acc;\n      }, {} as NodeModel),\n    ),\n    layout,\n  };\n  return currentStore;\n};\n\nconst nodeDistanceToBounds = (node: Node, bounds: Rect): number => {\n  const nodeBounds = node.getBounds();\n  const nodeX = nodeBounds.x + nodeBounds.width / 2;\n  const nodeY = nodeBounds.y + nodeBounds.height / 2;\n\n  const dx = Math.max(bounds.x - nodeX, 0, nodeX - (bounds.x + bounds.width));\n  const dy = Math.max(bounds.y - nodeY, 0, nodeY - (bounds.y + bounds.height));\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  controlsDisabled?: boolean;\n  selectedId?: string;\n  dragHint?: string;\n}\n\nconst TopologyGraphView: React.FC<TopologyGraphViewProps> = React.memo(\n  ({ visualizationReady, visualization, controlsDisabled, selectedId, dragHint }) => {\n    if (!visualizationReady) {\n      return null;\n    }\n    return (\n      <div className=\"odc-topology-graph-view\">\n        <VisualizationProvider controller={visualization}>\n          <VisualizationSurface state={{ selectedIds: [selectedId] }} />\n          {dragHint && (\n            <div className=\"odc-topology__hint-container\">\n              <div className=\"odc-topology__hint-background\">{dragHint}</div>\n            </div>\n          )}\n          <TopologyControlBar visualization={visualization} isDisabled={controlsDisabled} />\n        </VisualizationProvider>\n      </div>\n    );\n  },\n);\n\nconst TOPOLOGY_GRAPH_ID = 'odc-topology-graph';\nconst graphModel: Model = {\n  graph: {\n    id: TOPOLOGY_GRAPH_ID,\n    type: 'graph',\n    layout: DEFAULT_LAYOUT,\n    layers: [BOTTOM_LAYER, GROUPS_LAYER, 'groups2', DEFAULT_LAYER, TOP_LAYER],\n  },\n};\n\ninterface StateProps {\n  getStoredGraphModel: (namespace: string) => GraphModel;\n}\n\ninterface DispatchProps {\n  onGraphModelChange: (namespace: string, model: GraphModel) => void;\n}\n\ninterface TopologyProps {\n  model: Model;\n  application: string;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst Topology: React.FC<\n  TopologyProps & StateProps & DispatchProps & WithUserSettingsCompatibilityProps<object>\n> = ({\n  model,\n  application,\n  namespace,\n  onSelect,\n  setVisualization,\n  onGraphModelChange,\n  getStoredGraphModel,\n  userSettingState: topologyLayoutDataJson,\n  setUserSettingState: setTopologyLayoutData,\n}) => {\n  const applicationRef = React.useRef<string>(null);\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n  const [dragHint, setDragHint] = React.useState<string>('');\n  const storedLayoutApplied = React.useRef<boolean>(false);\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [componentFactoryExtensions, isStaticResolved] = useResolvedExtensions<\n    TopologyComponentFactory\n  >(isTopologyComponentFactory);\n  const [dynamicComponentFactoryExtensions, isDynamicResolved] = useResolvedExtensions<\n    DynamicTopologyComponentFactory\n  >(isDynamicTopologyComponentFactory);\n\n  const createVisualization = React.useCallback(() => {\n    const storedLayout = topologyLayoutDataJson?.[namespace];\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.registerLayoutFactory(layoutFactory);\n\n    const onCurrentGraphModelChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const saveGraphModel = {\n        id: visModel.graph.id,\n        type: visModel.graph.type,\n        x: visModel.graph.x,\n        y: visModel.graph.y,\n        scale: visModel.graph.scale,\n        scaleExtent: visModel.graph.scaleExtent,\n      };\n      onGraphModelChange(namespace, saveGraphModel);\n    }, 200);\n\n    const onVisualizationLayoutChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const updatedLayoutData = setTopologyLayout(namespace, visModel.nodes, visModel.graph.layout);\n      setTopologyLayoutData((prevState) => {\n        return { ...prevState, ...updatedLayoutData };\n      });\n    }, 200);\n\n    newVisualization.addEventListener(NODE_POSITIONED_EVENT, onVisualizationLayoutChange);\n    newVisualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, onCurrentGraphModelChange);\n\n    if (storedLayout) {\n      // Cleanup removed layouts, otherwise the `newVisualization.fromModel` call\n      // will crash in @patternfly/react-topology Visualization `getLayout(type: string)`\n      if (!SUPPORTED_LAYOUTS.includes(storedLayout.layout)) {\n        graphModel.graph.layout = DEFAULT_LAYOUT;\n        setTopologyLayoutData((prevState) => {\n          return { ...prevState, layout: DEFAULT_LAYOUT };\n        });\n      } else {\n        graphModel.graph.layout = storedLayout.layout;\n      }\n    }\n    newVisualization.fromModel(graphModel);\n    newVisualization.addEventListener<SelectionEventListener>(SELECTION_EVENT, (ids: string[]) => {\n      const selectedEntity = ids[0] ? newVisualization.getElementById(ids[0]) : null;\n      onSelect(selectedEntity);\n    });\n    return newVisualization;\n  }, [namespace, onGraphModelChange, onSelect, setTopologyLayoutData, topologyLayoutDataJson]);\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n  const visualization = visualizationRef.current;\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model && visualizationReady) {\n      if (!storedLayoutApplied.current) {\n        const storedGraphModel = getStoredGraphModel(namespace);\n        if (storedGraphModel) {\n          model.graph = {\n            ...graphModel.graph,\n            x: storedGraphModel.x,\n            y: storedGraphModel.y,\n            scale: storedGraphModel.scale,\n            scaleExtent: storedGraphModel.scaleExtent,\n            data: visualization.getGraph()?.getData(),\n          };\n        }\n        const storedLayout = topologyLayoutDataJson?.[namespace];\n        if (storedLayout) {\n          model.nodes.forEach((n) => {\n            const storedNode = storedLayout.nodes.find((sn) => sn.id === n.id);\n            if (storedNode) {\n              STORED_NODE_LAYOUT_FIELDS.forEach((key) => {\n                n[key] = storedNode[key];\n              });\n            }\n          });\n        }\n      }\n\n      model.nodes.forEach((n) => {\n        const oldNode = visualization.getNodeById(n.id);\n        if (oldNode && _.isEqual(oldNode.getData(), n.data)) {\n          n.data = oldNode.getData();\n        }\n      });\n      model.edges.forEach((e) => {\n        const oldEdge = visualization.getEdgeById(e.id);\n        if (oldEdge && _.isEqual(oldEdge.getData(), e.data)) {\n          e.data = oldEdge.getData();\n        }\n      });\n\n      visualization.fromModel(model);\n\n      // Make sure something is visible in the case where stored locations are off the screen\n      if (!storedLayoutApplied.current) {\n        storedLayoutApplied.current = true;\n        if (topologyLayoutDataJson?.[namespace]) {\n          const graph = visualization.getGraph();\n          const nodes = visualization.getElements().filter(isNode);\n          if (nodes.length) {\n            const nodesVisible = nodes.find((n) => graph.isNodeInView(n, { padding: 0 }));\n            if (!nodesVisible) {\n              const graphBounds = graph.getBounds();\n              const [viewNode] = nodes.reduce(\n                ([closestNode, closestDistance], nextNode) => {\n                  const distance = nodeDistanceToBounds(nextNode, graphBounds);\n                  if (!closestNode || distance < closestDistance) {\n                    return [nextNode, distance];\n                  }\n                  return [closestNode, closestDistance];\n                },\n                [null, 0],\n              );\n              graph.panIntoView(viewNode);\n            }\n          }\n        }\n      }\n\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    // Do not update on selectedId change or stored layout change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, visualization, visualizationReady]);\n\n  React.useEffect(() => {\n    if (!isStaticResolved || !isDynamicResolved) {\n      return;\n    }\n\n    visualization.registerComponentFactory(componentFactory);\n    [...componentFactoryExtensions, ...dynamicComponentFactoryExtensions].forEach((factory) => {\n      visualization.registerComponentFactory(factory.properties.getFactory);\n    });\n\n    visualization.addEventListener<ShowGroupingHintEventListener>(\n      SHOW_GROUPING_HINT_EVENT,\n      (element, hint) => {\n        setDragHint(hint);\n      },\n    );\n    setVisualizationReady(true);\n  }, [\n    visualization,\n    isStaticResolved,\n    isDynamicResolved,\n    componentFactoryExtensions,\n    dynamicComponentFactoryExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (!applicationRef.current) {\n      applicationRef.current = application;\n      return;\n    }\n    if (application !== applicationRef.current) {\n      applicationRef.current = application;\n      if (visualization) {\n        visualization.getGraph().reset();\n        visualization.getGraph().layout();\n      }\n    }\n  }, [application, visualization]);\n\n  React.useEffect(() => {\n    let resizeTimeout = null;\n    if (visualization) {\n      if (selectedId) {\n        const selectedEntity = visualization.getElementById(selectedId);\n        if (selectedEntity) {\n          const visibleEntity = isNode(selectedEntity)\n            ? selectedEntity\n            : (selectedEntity as BaseEdge).getSource();\n          resizeTimeout = setTimeout(\n            action(() => {\n              visualization\n                .getGraph()\n                .panIntoView(visibleEntity, { offset: 20, minimumVisible: 100 });\n              resizeTimeout = null;\n            }),\n            500,\n          );\n        }\n      }\n    }\n    return () => {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n      }\n    };\n  }, [selectedId, visualization]);\n\n  return (\n    <TopologyGraphView\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      controlsDisabled={!model?.nodes.length}\n      dragHint={dragHint}\n      selectedId={selectedId}\n    />\n  );\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    getStoredGraphModel: (namespace: string) => getTopologyGraphModel(state, namespace),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onGraphModelChange: (namespace: string, model: GraphModel) => {\n    dispatch(setTopologyGraphModel(namespace, model));\n  },\n});\n\nexport default withFallback(\n  connect<StateProps, DispatchProps, TopologyProps>(\n    TopologyStateToProps,\n    TopologyDispatchToProps,\n  )(\n    withUserSettingsCompatibility<\n      TopologyProps & WithUserSettingsCompatibilityProps<object>,\n      object\n    >(\n      TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY,\n      TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY,\n      {},\n    )(React.memo(Topology)),\n  ),\n  ErrorBoundaryFallbackPage,\n);\n","import { ElementFactory, GraphElement, ModelKind, BaseGraph } from '@patternfly/react-topology';\nimport OdcBaseEdge from './OdcBaseEdge';\nimport OdcBaseNode from './OdcBaseNode';\n\nconst odcElementFactory: ElementFactory = (kind: ModelKind): GraphElement | undefined => {\n  switch (kind) {\n    case ModelKind.graph:\n      return new BaseGraph();\n    case ModelKind.node:\n      return new OdcBaseNode();\n    case ModelKind.edge:\n      return new OdcBaseEdge();\n    default:\n      return undefined;\n  }\n};\n\nexport default odcElementFactory;\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { TFunction } from 'i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport CheIcon from './CheIcon';\nimport GiteaIcon from './GiteaIcon';\nimport { detectGitType } from './import-validation-utils';\n\nexport const routeDecoratorIcon = (\n  routeURL: string,\n  radius: number,\n  t: TFunction,\n  cheEnabled?: boolean,\n  cheIconURL?: string,\n): React.ReactElement => {\n  if (cheEnabled && routeURL) {\n    return cheIconURL ? (\n      <image xlinkHref={cheIconURL} width={radius} height={radius} />\n    ) : (\n      <CheIcon style={{ fontSize: radius }} />\n    );\n  }\n  switch (detectGitType(routeURL)) {\n    case GitProvider.INVALID:\n      // Not a valid url and thus not safe to use\n      return null;\n    case GitProvider.GITHUB:\n      return <GithubIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.BITBUCKET:\n      return (\n        <BitbucketIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />\n      );\n    case GitProvider.GITLAB:\n      return <GitlabIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.GITEA:\n      return <GiteaIcon style={{ fontSize: radius }} topology />;\n    default:\n      return <GitAltIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n  }\n};\n","import * as React from 'react';\n\nconst CheIcon: React.FC<React.HTMLProps<SVGElement>> = ({ style }): React.ReactElement => {\n  return (\n    <svg height=\"1em\" width=\"1em\" version=\"1.1\" viewBox=\"0 0 47 57\" style={style}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\">\n        <path\n          d=\"M0.032227,30.88l-0.032227-17.087,23.853-13.793,23.796,13.784-14.691,8.51-9.062-5.109-23.864,13.695z\"\n          fill=\"#fdb940\"\n        />\n        <path\n          d=\"M0,43.355l23.876,13.622,23.974-13.937v-16.902l-23.974,13.506-23.876-13.506v17.217z\"\n          fill=\"#525c86\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default CheIcon;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Title,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { Edge, Node } from '@patternfly/react-topology';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { PromiseComponent, ResourceIcon } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport {\n  createEventSourceKafkaConnection,\n  createSinkConnection,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport { createConnection } from '../../utils';\n\ntype MoveConnectionModalProps = {\n  edge: Edge;\n  availableTargets: Node[];\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype MoveConnectionModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst nodeItem = (node: Node) => (\n  <span>\n    <span className=\"co-icon-space-r\">\n      <ResourceIcon kind={node.getData().data?.kind} />\n    </span>\n    {node.getLabel()}\n  </span>\n);\n\nconst MoveConnectionForm: React.FC<\n  FormikProps<FormikValues> & MoveConnectionModalProps & { setTranslator: (t: TFunction) => void }\n> = ({\n  handleSubmit,\n  isSubmitting,\n  setTranslator,\n  cancel,\n  values,\n  edge,\n  availableTargets,\n  status,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const isDirty = values.target.getId() !== edge.getTarget().getId();\n  setTranslator(t);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={() => setOpen(!isOpen)}\n      isExpanded={isOpen}\n      isFullWidth\n    >\n      {nodeItem(values.target)}\n    </MenuToggle>\n  );\n\n  const sourceLabel = edge.getSource().getLabel();\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content\">\n      <ModalTitle>{t('topology~Move connector')}</ModalTitle>\n      <ModalBody>\n        <Title headingLevel=\"h2\" size=\"md\" className=\"co-m-form-row\">\n          <Trans ns=\"topology\" t={t}>\n            Connect <strong>{{ sourceLabel }}</strong> to\n          </Trans>\n        </Title>\n        <div className=\"pf-v5-c-form\">\n          <FormGroup fieldId=\"target-node\" label=\"Target\">\n            <Select\n              id=\"target-node-dropdown\"\n              className=\"dropdown--full-width\"\n              onSelect={(_, value: Node) => {\n                if (value) {\n                  values.target = value;\n                }\n                setOpen(false);\n              }}\n              toggle={toggle}\n              isOpen={isOpen}\n              onOpenChange={(open) => setOpen(open)}\n            >\n              <SelectList>\n                {availableTargets.map((node) => (\n                  <SelectOption\n                    key={node.getId()}\n                    value={node}\n                    isSelected={values.target.getId() === node.getId()}\n                  >\n                    {nodeItem(node)}\n                  </SelectOption>\n                ))}\n              </SelectList>\n            </Select>\n          </FormGroup>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('topology~Move')}\n        submitDisabled={!isDirty || isSubmitting}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass MoveConnectionModal extends PromiseComponent<\n  MoveConnectionModalProps,\n  MoveConnectionModalState\n> {\n  private t: TFunction;\n\n  private onSubmit = (newTarget: Node): Promise<K8sResourceKind[] | K8sResourceKind> => {\n    const { edge } = this.props;\n    switch (edge.getType()) {\n      case TYPE_CONNECTS_TO:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_SERVICE_BINDING:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_EVENT_SOURCE_LINK:\n        return createSinkConnection(edge.getSource(), newTarget);\n      case TYPE_KAFKA_CONNECTION_LINK:\n        return createEventSourceKafkaConnection(edge.getSource(), newTarget);\n      default:\n        return Promise.reject(\n          new Error(\n            this.t('topology~Unable to move connector of type {{type}}.', {\n              type: edge.getType(),\n            }),\n          ),\n        );\n    }\n  };\n\n  private handleSubmit = (values, actions) => {\n    const { close } = this.props;\n    return this.handlePromise(this.onSubmit(values.target))\n      .then(() => {\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err });\n      });\n  };\n\n  private setTranslator = (t: TFunction) => {\n    this.t = t;\n  };\n\n  render() {\n    const { edge } = this.props;\n    const initialValues = {\n      target: edge.getTarget(),\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formikProps) => (\n          <MoveConnectionForm setTranslator={this.setTranslator} {...formikProps} {...this.props} />\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport const moveConnectionModal = createModalLauncher((props: MoveConnectionModalProps) => (\n  <MoveConnectionModal {...props} />\n));\n","export const editApplicationModal = (props) =>\n  import('./EditApplicationModal' /* webpackChunkName: \"topology-modals\" */).then((m) =>\n    m.editApplicationModal(props),\n  );\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n","export { default as OdcBaseEdge } from './OdcBaseEdge';\nexport { default as OdcBaseNode } from './OdcBaseNode';\nexport { default as odcElementFactory } from './odcElementFactory';\n","import { GraphModel } from '@patternfly/react-topology';\nimport { action, ActionType } from 'typesafe-actions';\nimport { RootState } from '@console/internal/redux';\n\nexport enum Actions {\n  topologyFilters = 'topologyFilters',\n  supportedTopologyFilters = 'supportedTopologyFilters',\n  supportedTopologyKinds = 'supportedTopologyKinds',\n  topologyGraphModel = 'topologyGraphModel',\n}\n\nexport const setSupportedTopologyFilters = (supportedFilters: string[]) => {\n  return action(Actions.supportedTopologyFilters, { supportedFilters });\n};\n\nexport const setSupportedTopologyKinds = (supportedKinds: { [key: string]: number }) => {\n  return action(Actions.supportedTopologyKinds, { supportedKinds });\n};\n\nexport const setTopologyGraphModel = (namespace: string, graphModel: GraphModel) => {\n  return action(Actions.topologyGraphModel, { namespace, graphModel });\n};\n\nexport const getTopologyGraphModel = (state: RootState, namespace: string): GraphModel => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology?.get('topologyGraphModel')?.[namespace];\n};\n\nconst actions = {\n  setSupportedTopologyFilters,\n  setSupportedTopologyKinds,\n  setTopologyGraphModel,\n};\n\nexport type TopologyAction = ActionType<typeof actions>;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { DeploymentModel } from '@console/internal/models';\nimport {\n  apiVersionForModel,\n  K8sResourceCommon,\n  K8sResourceKind,\n} from '@console/internal/module/k8s';\nimport {\n  getReplicaSetsForResource,\n  PodControllerOverviewItem,\n  useDeepCompareMemoize,\n  useDebounceCallback,\n} from '@console/shared';\n\nexport const usePodsForRevisions = (\n  revisionIds: string | string[],\n  namespace: string,\n): { loaded: boolean; loadError: string; pods: PodControllerOverviewItem[] } => {\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const [pods, setPods] = React.useState<PodControllerOverviewItem[]>([]);\n  const revisions = useDeepCompareMemoize(Array.isArray(revisionIds) ? revisionIds : [revisionIds]);\n  const watchedResources = React.useMemo(\n    () => ({\n      deployments: {\n        isList: true,\n        kind: 'Deployment',\n        namespace,\n      },\n      replicaSets: {\n        isList: true,\n        kind: 'ReplicaSet',\n        namespace,\n      },\n      pods: {\n        isList: true,\n        kind: 'Pod',\n        namespace,\n      },\n    }),\n    [namespace],\n  );\n\n  const resources = useK8sWatchResources<{ [key: string]: K8sResourceCommon[] }>(watchedResources);\n\n  const updateResults = React.useCallback(\n    (updatedResources) => {\n      const errorKey = Object.keys(updatedResources).find((key) => updatedResources[key].loadError);\n      if (errorKey) {\n        setLoadError(updatedResources[errorKey].loadError?.message);\n        return;\n      }\n      if (\n        Object.keys(updatedResources).length > 0 &&\n        Object.keys(updatedResources).every((key) => updatedResources[key].loaded)\n      ) {\n        const revisionsPods = revisions.reduce((acc, uid) => {\n          const associatedDeployment = _.filter(\n            updatedResources?.deployments?.data,\n            ({ metadata: { ownerReferences } }) =>\n              _.some(ownerReferences, {\n                uid,\n                controller: true,\n              }),\n          );\n          if (associatedDeployment?.[0]) {\n            const depObj: K8sResourceKind = {\n              ...associatedDeployment[0],\n              apiVersion: apiVersionForModel(DeploymentModel),\n              kind: DeploymentModel.kind,\n            };\n            acc.push(...getReplicaSetsForResource(depObj, updatedResources));\n          }\n          return acc;\n        }, []);\n        setLoaded(true);\n        setLoadError(null);\n        setPods(revisionsPods);\n      }\n    },\n    [revisions],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(updateResults, 250);\n\n  React.useEffect(() => {\n    debouncedUpdateResources(resources);\n  }, [debouncedUpdateResources, resources]);\n\n  return useDeepCompareMemoize({ loaded, loadError, pods });\n};\n","import * as React from 'react';\nimport { Alert, AlertActionLink } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { PodStatus } from '@console/internal/components/pod';\nimport { PodTraffic } from '@console/internal/components/pod-traffic';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  LoadingBox,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { podPhase, PodKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport {\n  usePodsWatcher,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  BuildConfigData,\n} from '@console/shared';\n\nconst kind: string = 'Pod';\nconst MAX_PODS: number = 3;\nconst MAX_ERROR_PODS: number = 10;\n\nconst podUpdateTime = (pod: PodKind) => {\n  const allStatuses = [\n    ..._.get(pod, 'status.containerStatuses', []),\n    ..._.get(pod, 'status.initContainerStatuses', []),\n  ];\n  const updateTimes = _.reduce(\n    allStatuses,\n    (times, nextStatus) => {\n      if (nextStatus.state.running) {\n        return [...times, _.get(nextStatus, 'state.running.startedAt')];\n      }\n      if (nextStatus.state.terminated) {\n        return [...times, _.get(nextStatus, 'state.terminated.finishedAt')];\n      }\n      if (nextStatus.lastState.running) {\n        return [...times, _.get(nextStatus, 'lastState.running.startedAt')];\n      }\n      if (nextStatus.lastState.terminated) {\n        return [...times, _.get(nextStatus, 'lastState.terminated.finishedAt')];\n      }\n      return [...times, _.get(nextStatus, _.get(pod, 'startTime'))];\n    },\n    [],\n  );\n\n  return _.head(_.reverse(updateTimes.sort()));\n};\n\nconst errorPhases = [\n  'ContainerCannotRun',\n  'CrashLoopBackOff',\n  'Critical',\n  'Error',\n  'Failed',\n  'InstallCheckFailed',\n  'Cancelled',\n  'Expired',\n  'Not Ready',\n  'Terminating',\n];\n\nconst isPodError = (pod: PodKind) => _.includes(errorPhases, podPhase(pod));\n\nconst isEvicted = (pod: PodKind) => podPhase(pod) === 'Evicted';\n\nconst isDeploymentGeneratedByWebConsole = (obj: K8sResourceKind) =>\n  obj.kind === 'Deployment' &&\n  obj.metadata?.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole';\n\nconst isPodWithoutImageId = (pod: PodKind) =>\n  pod.status?.phase === 'Pending' &&\n  pod.status?.containerStatuses?.some((containerStatus) => !containerStatus.imageID);\n\nexport const podCompare = (pod1: PodKind, pod2: PodKind): number => {\n  const error1 = isPodError(pod1);\n  const error2 = isPodError(pod2);\n\n  if (error1 !== error2) {\n    return error1 ? -1 : 1;\n  }\n\n  const evicted1 = isEvicted(pod1);\n  const evicted2 = isEvicted(pod2);\n\n  if (evicted1 !== evicted2) {\n    return evicted1 ? 1 : -1;\n  }\n\n  const runtime1 = podUpdateTime(pod1);\n  const runtime2 = podUpdateTime(pod2);\n\n  if (runtime1 < runtime2) {\n    return 1;\n  }\n  if (runtime1 > runtime2) {\n    return -1;\n  }\n\n  return pod1.metadata.name.localeCompare(pod2.metadata.name);\n};\n\nconst PodOverviewItem: React.FC<PodOverviewItemProps> = ({ pod }) => {\n  const {\n    metadata: { name, namespace },\n  } = pod;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-5\">\n          <ResourceLink kind={kind} name={name} namespace={namespace} />\n        </span>\n        <span className=\"col-xs-3\">\n          <PodStatus pod={pod} />\n        </span>\n        <span className=\"col-xs-1\">\n          <PodTraffic podName={name} namespace={namespace} tooltipFlag />\n        </span>\n        <span className=\"col-xs-3 text-right\">\n          <Link to={`${resourcePath(kind, name, namespace)}/logs`}>{t('public~View logs')}</Link>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nPodOverviewItem.displayName = 'PodOverviewItem';\n\ntype PodOverviewItemProps = {\n  pod: PodKind;\n};\n\nconst PodsOverviewList: React.FC<PodOverviewListProps> = ({ pods }) => (\n  <ul className=\"list-group\">\n    {_.map(pods, (pod) => (\n      <PodOverviewItem key={pod.metadata.uid} pod={pod} />\n    ))}\n  </ul>\n);\n\nPodsOverviewList.displayName = 'PodsOverviewList';\n\nconst isComplete = (build: K8sResourceKind) => build.status?.completionTimestamp;\n\n/**\n * Get the Shipwright BuildRun status for a pod's image if it exists, otherwise\n * return an empty object\n */\nconst useGetShipwrightBuilds = (namespace: string, name: string): K8sResourceKind[] => {\n  const watchedResources = {\n    buildRunBeta: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1beta1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n    buildRunAlpha: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1alpha1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n  };\n\n  // get all shipwright buildrun CRDs and concatenate into a list\n  const watchedBuildRuns = useK8sWatchResources(watchedResources);\n\n  const buildRuns = React.useMemo(() => {\n    const allBuildRuns = {\n      ...((watchedBuildRuns.buildRunBeta.data as object) || {}),\n      ...((watchedBuildRuns.buildRunAlpha.data as object) || {}),\n    };\n\n    return Object.keys(allBuildRuns)\n      .filter((key) => {\n        const buildRun = allBuildRuns[key] as K8sResourceKind;\n        return buildRun.spec?.build?.name === name;\n      })\n      .map((key) => allBuildRuns[key] as K8sResourceKind);\n  }, [watchedBuildRuns, name]);\n\n  return buildRuns;\n};\n\nconst buildRunIsComplete = (buildRun: K8sResourceKind) => {\n  const succeededCondition = buildRun?.status?.conditions?.find(\n    (condition) => condition.type === 'Succeeded',\n  );\n\n  return (\n    (succeededCondition?.status === 'True' || succeededCondition?.status === 'False') &&\n    succeededCondition?.reason === 'Succeeded'\n  );\n};\n\nexport const PodsOverviewContent: React.FC<PodsOverviewContentProps> = ({\n  obj,\n  pods,\n  loaded,\n  loadError,\n  allPodsLink,\n  emptyText,\n  buildConfigData,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const [showWaitingPods, setShowWaitingPods] = React.useState(false);\n  const shipwrightBuilds = useGetShipwrightBuilds(namespace, name);\n\n  const waitingForBuildConfig =\n    buildConfigData?.buildConfigs?.length > 0 &&\n    !buildConfigData.buildConfigs[0].builds.some((build) => isComplete(build));\n\n  const waitingForShipwright =\n    shipwrightBuilds?.length > 0 &&\n    !shipwrightBuilds.some((buildRun) => buildRunIsComplete(buildRun));\n\n  const showWaitingForBuildAlert =\n    (waitingForBuildConfig || waitingForShipwright) && isDeploymentGeneratedByWebConsole(obj);\n\n  let filteredPods = [...pods];\n  if (showWaitingForBuildAlert && !showWaitingPods) {\n    filteredPods = filteredPods.filter((pod) => !isPodWithoutImageId(pod));\n  }\n  filteredPods.sort(podCompare);\n\n  const errorPodCount = _.size(_.filter(pods, (pod) => isPodError(pod)));\n  const podsShown = Math.max(Math.min(errorPodCount, MAX_ERROR_PODS), MAX_PODS);\n  const linkTo = allPodsLink || `${resourcePath(referenceFor(obj), name, namespace)}/pods`;\n  const emptyMessage = emptyText || t('console-shared~No Pods found for this resource.');\n\n  const podAlert = showWaitingForBuildAlert ? (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~Waiting for the build')}\n      actionLinks={\n        <AlertActionLink\n          onClick={() => setShowWaitingPods(!showWaitingPods)}\n          data-test=\"waiting-pods\"\n        >\n          {showWaitingPods\n            ? t('console-shared~Hide waiting pods with errors')\n            : t('console-shared~Show waiting pods with errors')}\n        </AlertActionLink>\n      }\n    >\n      {t(\n        'console-shared~Waiting for the first build to run successfully. You may temporarily see \"ImagePullBackOff\" and \"ErrImagePull\" errors while waiting.',\n      )}\n    </Alert>\n  ) : null;\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('public~Pods')}>\n        {_.size(pods) > podsShown && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('console-shared~View all {{podSize}}', { podSize: _.size(pods) })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {buildConfigData?.loaded && !buildConfigData?.loadError && podAlert}\n      {_.isEmpty(filteredPods) ? (\n        <span className=\"text-muted\">{loaded || !!loadError ? emptyMessage : <LoadingBox />}</span>\n      ) : (\n        <PodsOverviewList pods={_.take(filteredPods, podsShown)} />\n      )}\n    </>\n  );\n};\nPodsOverviewContent.displayName = 'PodsOverviewContent';\n\nexport const PodsOverview: React.FC<PodsOverviewProps> = ({\n  obj,\n  podsFilter,\n  hideIfEmpty = false,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const { podData, loadError, loaded } = usePodsWatcher(obj, obj.kind, namespace);\n\n  React.useEffect(() => {\n    if (!loadError && loaded) {\n      let updatedPods = podData.pods as PodKind[];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n    }\n  }, [podData, loadError, loaded, podsFilter]);\n\n  if (!pods.length && hideIfEmpty) {\n    return null;\n  }\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\nexport const PodsOverviewMultiple: React.FC<PodsOverviewMultipleProps> = ({\n  obj,\n  podResources,\n  podsFilter,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      let updatedPods = podResources?.length\n        ? podResources.reduce((acc, resource) => {\n            acc.push(...getPodsForResource(resource, resources));\n            return acc;\n          }, [])\n        : [];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [podResources, podsFilter, resources]);\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\ntype PodOverviewListProps = {\n  pods: PodKind[];\n};\n\ntype PodsOverviewContentProps = {\n  obj: K8sResourceKind;\n  pods: PodKind[];\n  loaded: boolean;\n  loadError: string;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n\ntype PodsOverviewProps = {\n  obj: K8sResourceKind;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n  hideIfEmpty?: boolean;\n};\n\ntype PodsOverviewMultipleProps = {\n  obj: K8sResourceKind;\n  podResources: K8sResourceKind[];\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { BuildLogLink, BuildNumberLink } from '@console/internal/components/build';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { BuildConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { BuildPhase, startBuild } from '@console/internal/module/k8s/builds';\nimport { LogSnippet, Status, BuildConfigOverviewItem } from '@console/shared';\n\nconst MAX_VISIBLE = 3;\n\nconst StatusTitle = ({ build }: { build: K8sResourceKind }) => {\n  const { t } = useTranslation();\n  switch (build.status.phase) {\n    case BuildPhase.Cancelled:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was cancelled\n        </Trans>\n      );\n    case BuildPhase.Complete:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was complete\n        </Trans>\n      );\n    case BuildPhase.Error:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> encountered an error\n        </Trans>\n      );\n    case BuildPhase.Failed:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> failed\n        </Trans>\n      );\n    case BuildPhase.New:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is new\n        </Trans>\n      );\n    case BuildPhase.Pending:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is pending\n        </Trans>\n      );\n    case BuildPhase.Running:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is running\n        </Trans>\n      );\n    default:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is {build.status?.phase?.toLowerCase()}\n        </Trans>\n      );\n  }\n};\n\nconst BuildStatus = ({ build }: { build: K8sResourceKind }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? <LogSnippet message={message} logSnippet={logSnippet} /> : null;\n};\n\nconst BuildOverviewItem: React.FC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          <div>\n            <StatusTitle build={build} />\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"build-overview__item-time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.FC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n  const { t } = useTranslation();\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {builds.length > MAX_VISIBLE && (\n            <div>\n              <Link\n                className=\"sidebar__section-view-all\"\n                to={`${resourcePath(referenceFor(buildConfig), name, namespace)}/builds`}\n              >\n                {t('topology~View all {{buildsLength}}', {\n                  buildsLength: builds.length,\n                })}\n              </Link>\n            </div>\n          )}\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick} data-test-id=\"start-build-action\">\n                {t('topology~Start Build')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {!(builds?.length > 0) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">{t('topology~No Builds found for this Build Config.')}</span>\n        </li>\n      ) : (\n        builds\n          .slice(0, MAX_VISIBLE)\n          .map((build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\nexport const BuildOverview: React.FC<BuildConfigsOverviewProps> = ({ buildConfigs }) => {\n  const { t } = useTranslation();\n  if (!(buildConfigs?.length > 0)) {\n    return null;\n  }\n  return (\n    <div className=\"build-overview\">\n      <SidebarSectionHeading text={t('topology~Builds')} />\n      {buildConfigs.map((buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))}\n    </div>\n  );\n};\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n  loaded?: boolean;\n  loadError?: string;\n};\n","import * as React from 'react';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLocation } from '@console/internal/components/routes';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher, useServicesWatcher } from '@console/shared';\n\nconst ServicePortList: React.FC<ServicePortListProps> = ({ service }) => {\n  const ports = service.spec?.ports ?? [];\n  const { t } = useTranslation();\n  return (\n    <ul className=\"port-list\">\n      {ports.map(({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">{t('topology~Service port:')}</span>{' '}\n          {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">{t('topology~Pod port:')}</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.FC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.FC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {services?.map((service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.FC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{t('topology~Location:')}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.FC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {routes?.map((route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.FC<NetworkingOverviewProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const serviceResources = useServicesWatcher(obj);\n  const services =\n    serviceResources.loaded && !serviceResources.loadError ? serviceResources.services : [];\n  const routeResources = useRoutesWatcher(obj);\n  const routes = routeResources.loaded && !routeResources.loadError ? routeResources.routes : [];\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~Services')} />\n      {!(services?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Services found for this resource.')}</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text={t('topology~Routes')} />\n      {!(routes?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Routes found for this resource.')}</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  obj: K8sResourceKind;\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, JobKind } from '@console/internal/module/k8s';\nimport { PodStatus, usePodsWatcher } from '@console/shared';\n\nconst kind: string = 'Job';\nconst MAX_JOBS: number = 3;\n\nconst JobOverviewItem: React.FC<JobOverviewItemProps> = ({ job }) => {\n  const {\n    metadata: { name, namespace },\n  } = job;\n  const podsLink = `${resourcePath(referenceFor(job), name, namespace)}/pods`;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n\n  return loaded && !loadError ? (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"job-overview__item\">\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n        <Link to={podsLink} className=\"overview__pod-donut-sm\">\n          <PodStatus\n            standalone\n            data={podData.pods}\n            size={25}\n            innerRadius={8}\n            outerRadius={12}\n            title={`${podData.pods.length}`}\n            titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n            showTooltip={false}\n          />\n        </Link>\n      </div>\n    </li>\n  ) : null;\n};\n\nJobOverviewItem.displayName = 'JobOverviewItem';\n\ntype JobOverviewItemProps = {\n  job: JobKind;\n};\n\nconst JobsOverviewList: React.FC<JobsOverviewListProps> = ({ jobs }) => (\n  <ul className=\"list-group\">\n    {jobs?.map((job) => (\n      <JobOverviewItem key={job.metadata.uid} job={job} />\n    ))}\n  </ul>\n);\n\nJobsOverviewList.displayName = 'JobsOverviewList';\n\nexport const JobsOverview: React.FC<JobsOverviewProps> = ({\n  jobs,\n  obj,\n  allJobsLink,\n  emptyText,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const linkTo = allJobsLink || `${resourcePath(referenceFor(obj), name, namespace)}/jobs`;\n  const emptyMessage = emptyText || t('topology~No Jobs found for this resource.');\n\n  return (\n    <>\n      <SidebarSectionHeading text=\"Jobs\">\n        {jobs?.length > MAX_JOBS && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('topology~View all ({{jobCount}})', { jobCount: jobs.length })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {!(jobs?.length > 0) ? (\n        <span className=\"text-muted\">{emptyMessage}</span>\n      ) : (\n        <JobsOverviewList jobs={jobs.slice(0, MAX_JOBS)} />\n      )}\n    </>\n  );\n};\n\ntype JobsOverviewListProps = {\n  jobs: JobKind[];\n};\n\ntype JobsOverviewProps = {\n  jobs: JobKind[];\n  obj: K8sResourceKind;\n  allJobsLink?: string;\n  emptyText?: string;\n};\n","import * as React from 'react';\nimport { Node, TopologyQuadrant } from '@patternfly/react-topology/dist/esm/types';\nimport { TopologyDecorator } from '../../../../../topology-types';\n\nconst getExtensionDecoratorForQuadrant = (\n  location: string,\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number,\n  decoratorRadius: number,\n  nodeWidth: number,\n  nodeHeight: number,\n): React.ReactElement => {\n  let x: number;\n  let y: number;\n  const deltaX = nodeRadius > 0 ? nodeRadius : nodeWidth / 2;\n  const deltaY = nodeRadius > 0 ? nodeRadius : nodeHeight / 2;\n  const offset = nodeRadius > 0 ? decoratorRadius * 0.7 : 0;\n  switch (location) {\n    case TopologyQuadrant.upperRight:\n      x = centerX + deltaX - offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerRight:\n      x = centerX + deltaX - offset;\n      y = centerY + deltaY - offset;\n      break;\n    case TopologyQuadrant.upperLeft:\n      x = centerX - deltaX + offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerLeft:\n      x = centerX - deltaX + offset;\n      y = centerY + deltaY - offset;\n      break;\n    default:\n      x = centerX;\n      y = centerY;\n  }\n\n  let retDecorator;\n  let i = 0;\n  const length = decorators?.[location]?.length ?? 0;\n  while (!retDecorator && i < length) {\n    retDecorator = decorators[location][i++].decorator(element, decoratorRadius, x, y);\n  }\n  return retDecorator;\n};\n\nexport const getNodeDecorators = (\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number, // -1 to use width/height\n  decoratorRadius: number,\n  nodeWidth?: number,\n  nodeHeight?: number,\n): React.ReactNode => {\n  const keys = decorators ? Object.keys(decorators) : [];\n  return (\n    <>\n      {keys.map((key) =>\n        getExtensionDecoratorForQuadrant(\n          key,\n          element,\n          decorators,\n          centerX,\n          centerY,\n          nodeRadius,\n          decoratorRadius,\n          nodeWidth,\n          nodeHeight,\n        ),\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION, ROUTE_URL_ANNOTATION } from '../const';\nimport { getRoutesURL } from '../utils/topology-utils';\n\nexport const useRoutesURL = (resource: K8sResourceKind): string => {\n  const disabled = resource?.metadata?.annotations?.[ROUTE_DISABLED_ANNOTATION] === 'true';\n  const annotationURL = resource?.metadata?.annotations?.[ROUTE_URL_ANNOTATION];\n\n  const routeResources = useRoutesWatcher(resource);\n  const routes = React.useMemo(\n    () => (routeResources.loaded && !routeResources.loadError ? routeResources.routes : []),\n    [routeResources],\n  );\n  const watchedURL = React.useMemo(() => getRoutesURL(resource, routes), [resource, routes]);\n\n  const url = annotationURL || watchedURL;\n  if (disabled || !url || !(url.startsWith('http://') || url.startsWith('https://'))) {\n    return null;\n  }\n  return url;\n};\n","import * as React from 'react';\nimport {\n  Button,\n  DataList,\n  DataListCell,\n  DataListContent,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport { modelFor } from '@console/internal/module/k8s';\nimport {\n  getSeverityAlertType,\n  AlertSeverityIcon,\n  getFiringAlerts,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport { useSearchFilter } from '../../filters';\nimport { getResource, getResourceKind } from '../../utils/topology-utils';\nimport {\n  AlertsCell,\n  GroupResourcesCell,\n  CpuCell,\n  MemoryCell,\n  StatusCell,\n  TypedResourceBadgeCell,\n} from './cells';\n\ntype DispatchProps = {\n  onSelectTab?: (name: string) => void;\n};\n\ntype TopologyListViewNodeProps = {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n  badgeCell?: React.ReactNode;\n  labelCell?: React.ReactNode;\n  alertsCell?: React.ReactNode;\n  memoryCell?: React.ReactNode;\n  cpuCell?: React.ReactNode;\n  statusCell?: React.ReactNode;\n  groupResourcesCell?: React.ReactNode;\n  hideAlerts?: boolean;\n  noPods?: boolean;\n};\n\nconst TopologyListViewNode: React.FC<TopologyListViewNodeProps & DispatchProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  onSelectTab,\n  badgeCell,\n  labelCell,\n  alertsCell,\n  memoryCell,\n  cpuCell,\n  statusCell,\n  groupResourcesCell,\n  hideAlerts = false,\n  noPods = false,\n  children,\n}) => {\n  const { t } = useTranslation();\n  const [filtered] = useSearchFilter(item.getLabel(), getResource(item)?.metadata?.labels);\n  if (!item.isVisible) {\n    return null;\n  }\n  const kind = getResourceKind(item);\n\n  let alertIndicator = null;\n  const alerts = getFiringAlerts(item.getData().data?.monitoringAlerts ?? []);\n  if (alerts?.length > 0) {\n    const onAlertClick = () => {\n      onSelect([item.getId()]);\n      onSelectTab('Observe');\n    };\n    const severityAlertType = getSeverityAlertType(alerts);\n    alertIndicator = shouldHideMonitoringAlertDecorator(severityAlertType) ? null : (\n      <Tooltip\n        key=\"monitoringAlert\"\n        content={t('topology~Monitoring alert')}\n        position={TooltipPosition.right}\n      >\n        <Button\n          variant=\"plain\"\n          className=\"odc-topology-list-view__alert-button\"\n          onClick={onAlertClick}\n        >\n          <AlertSeverityIcon severityAlertType={severityAlertType} />\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  const cells = [];\n  cells.push(\n    labelCell || (\n      <DataListCell\n        className=\"odc-topology-list-view__label-cell\"\n        key=\"label\"\n        id={`${item.getId()}_label`}\n      >\n        {badgeCell || <TypedResourceBadgeCell key=\"type-icon\" kind={kind} />}\n        <span data-test-id={item.getLabel()}>{item.getLabel()}</span>\n        {alertIndicator}\n      </DataListCell>\n    ),\n  );\n  if (item.isGroup()) {\n    if (item.isCollapsed()) {\n      cells.push(groupResourcesCell || <GroupResourcesCell key=\"resources\" group={item} />);\n    }\n  } else {\n    if (!hideAlerts) {\n      cells.push(alertsCell || <AlertsCell key=\"alerts\" item={item} />);\n    }\n    if (!noPods) {\n      if (!selectedIds[0]) {\n        cells.push(memoryCell || <MemoryCell key=\"memory\" item={item} />);\n        cells.push(cpuCell || <CpuCell key=\"cpu\" item={item} />);\n      }\n      cells.push(statusCell || <StatusCell key=\"status\" item={item} />);\n    }\n  }\n\n  const className = classNames('odc-topology-list-view__item-row', { 'is-filtered': filtered });\n  return (\n    <DataListItem\n      key={item.getId()}\n      id={item.getId()}\n      aria-labelledby={`${item.getId()}_label`}\n      isExpanded={children !== undefined}\n      data-test={`row-${item.getLabel()}`}\n    >\n      <DataListItemRow className={className}>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n      {children ? (\n        <DataListContent\n          className=\"odc-topology-list-view__group-children\"\n          aria-label={t('topology~{{kindLabel}} {{label}}', {\n            label: item.getLabel(),\n            kindLabel: modelFor(kind)?.label ?? kind,\n          })}\n          id={`${item.getId()}-${item.getLabel()}`}\n          isHidden={false}\n        >\n          <DataList\n            aria-label={t('topology~{{label}} sub-resources', { label: item.getLabel() })}\n            selectedDataListItemId={selectedIds[0]}\n            onSelectDataListItem={(_event, id) => onSelect(selectedIds[0] === id ? [] : [id])}\n          >\n            {children}\n          </DataList>\n        </DataListContent>\n      ) : null}\n    </DataListItem>\n  );\n};\n\nconst TopologyListViewNodeDispatchToProps = (dispatch): DispatchProps => ({\n  onSelectTab: (name) => dispatch(selectOverviewDetailsTab(name)),\n});\n\nexport default connect<{}, DispatchProps, TopologyListViewNodeProps>(\n  null,\n  TopologyListViewNodeDispatchToProps,\n)(observer(TopologyListViewNode));\n","import {\n  ResolvedExtension,\n  useResolvedExtensions,\n  AddAction,\n  isAddAction,\n} from '@console/dynamic-plugin-sdk';\n\ninterface AddPage {\n  disabledActions?: string[];\n}\n\nexport const getDisabledAddActions = (): string[] | undefined => {\n  if (window.SERVER_FLAGS.addPage) {\n    const addPage: AddPage = JSON.parse(window.SERVER_FLAGS.addPage);\n    const { disabledActions } = addPage;\n    return disabledActions;\n  }\n  return undefined;\n};\n\nexport const useAddActionExtensions = (): [ResolvedExtension<AddAction>[], boolean, boolean] => {\n  const [allAddActionExtensions, resolved] = useResolvedExtensions<AddAction>(isAddAction);\n  const disabledActions = getDisabledAddActions();\n  const allAddActionsDisabled = disabledActions?.length === allAddActionExtensions?.length;\n\n  if (allAddActionExtensions && disabledActions && disabledActions.length > 0) {\n    const filteredAddActionExtensions = allAddActionExtensions.filter(\n      (addActionExtension) => !disabledActions.includes(addActionExtension.properties.id),\n    );\n    return [filteredAddActionExtensions, resolved, allAddActionsDisabled];\n  }\n\n  return [allAddActionExtensions, resolved, allAddActionsDisabled];\n};\n","import * as React from 'react';\nimport { GraphElement, ElementContext, ContextMenu } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { ActionContext, ActionServiceProvider } from '@console/shared';\nimport { createContextMenuItems } from '../../../actions';\n\ntype Reference = React.ComponentProps<typeof ContextMenu>['reference'];\n\nexport interface WithContextMenuProps {\n  onContextMenu: (e: React.MouseEvent) => void;\n  contextMenuOpen: boolean;\n}\n\nconst withContextMenu = <E extends GraphElement>(\n  actionContext: (element: E) => ActionContext,\n  container?: Element | null | undefined | (() => Element),\n  className?: string,\n  atPoint: boolean = true,\n) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FC<Omit<P, keyof WithContextMenuProps>> = (props) => {\n    const element = React.useContext(ElementContext);\n    const [reference, setReference] = React.useState<Reference | null>(null);\n    const onContextMenu = React.useCallback((e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setReference(\n        atPoint\n          ? {\n              x: e.pageX,\n              y: e.pageY,\n            }\n          : e.currentTarget,\n      );\n    }, []);\n\n    return (\n      <>\n        <WrappedComponent\n          {...(props as any)}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={!!reference}\n        />\n        {reference ? (\n          <ActionServiceProvider context={actionContext(element as E)}>\n            {({ options, loaded }) =>\n              loaded ? (\n                <ContextMenu\n                  reference={reference}\n                  container={container}\n                  className={className}\n                  open\n                  onRequestClose={() => setReference(null)}\n                >\n                  {createContextMenuItems(options)}\n                </ContextMenu>\n              ) : null\n            }\n          </ActionServiceProvider>\n        ) : null}\n      </>\n    );\n  };\n  Component.displayName = `withContextMenu(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n\nexport default withContextMenu;\n","import * as React from 'react';\nimport {\n  GraphComponent as BaseGraphComponent,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\n\ntype GraphComponentProps = React.ComponentProps<typeof BaseGraphComponent> & {\n  dragInProgress?: boolean;\n  dragEditInProgress?: boolean;\n  hasDropTarget?: boolean;\n  dragCreate?: boolean;\n} & WithContextMenuProps;\n\nconst DRAG_ACTIVE_CLASS = 'odc-m-drag-active';\nconst VALID_DROP_CLASS = 'odc-m-valid-drop-target';\n\nconst GraphComponent: React.FC<GraphComponentProps> = (props) => {\n  const { dragInProgress, dragEditInProgress, hasDropTarget, dragCreate } = props;\n  const graphClasses = classNames('odc-graph', { 'odc-m-drag-create': dragCreate });\n  const controller = props.element.getController();\n\n  React.useEffect(() => {\n    controller.setRenderConstraint(!dragInProgress);\n  }, [controller, dragInProgress]);\n\n  React.useEffect(() => {\n    const addClassList = [];\n    const removeClassList = [];\n\n    dragEditInProgress\n      ? addClassList.push(DRAG_ACTIVE_CLASS)\n      : removeClassList.push(DRAG_ACTIVE_CLASS);\n    hasDropTarget ? addClassList.push(VALID_DROP_CLASS) : removeClassList.push(VALID_DROP_CLASS);\n\n    if (addClassList.length) {\n      addClassList.forEach((className) => document.body.classList.add(className));\n    }\n    if (removeClassList.length) {\n      removeClassList.forEach((className) => document.body.classList.remove(className));\n    }\n  }, [dragEditInProgress, hasDropTarget]);\n  return (\n    <g className={graphClasses}>\n      <BaseGraphComponent {...props} />\n    </g>\n  );\n};\n\nexport default GraphComponent;\n","export const TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY = `bridge/topology-display-filters`;\n","import * as React from 'react';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '@console/shared';\n\nimport './RegroupHint.scss';\n\nconst RegroupHint: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-regroup-hint\">\n      <InfoCircleIcon className=\"odc-regroup-hint__icon\" />\n      <span className=\"odc-regroup-hint__text\">\n        <ShortcutTable>\n          <Shortcut shift drag>\n            {t('topology~Edit application grouping')}\n          </Shortcut>\n        </ShortcutTable>\n      </span>\n    </div>\n  );\n};\n\nexport default RegroupHint;\n","import * as React from 'react';\nimport CollapseIcon from '@patternfly/react-icons/dist/esm/icons/compress-alt-icon';\nimport { css } from '@patternfly/react-styles';\nimport {\n  NodeLabel,\n  Layer,\n  GROUPS_LAYER,\n  hullPath,\n  maxPadding,\n  useCombineRefs,\n  useHover,\n  BadgeLocation,\n  isGraph,\n  Node,\n  NodeShape,\n  NodeStyle,\n  PointTuple,\n  useDragNode,\n  useSvgAnchor,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  CollapsibleGroupProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { polygonHull } from 'd3-polygon';\nimport * as _ from 'lodash';\nimport { observer } from 'mobx-react';\n\ntype ApplicationGroupExpandedProps = {\n  className?: string;\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  hover?: boolean;\n  label?: string; // Defaults to element.getLabel()\n  secondaryLabel?: string;\n  showLabel?: boolean; // Defaults to true\n  truncateLength?: number; // Defaults to 13\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: string;\n  labelIconPadding?: number;\n} & Partial<\n  CollapsibleGroupProps &\n    WithDragNodeProps &\n    WithSelectionProps &\n    WithDndDropProps &\n    WithContextMenuProps\n>;\n\ntype PointWithSize = [number, number, number];\n\n// Return the point whose Y is the largest value.\n// If multiple points are found, compute the center X between them\n// export for testing only\nexport function computeLabelLocation(points: PointWithSize[]): PointWithSize {\n  let lowPoints: PointWithSize[];\n  const threshold = 5;\n\n  _.forEach(points, (p) => {\n    const delta = !lowPoints ? Infinity : Math.round(p[1]) - Math.round(lowPoints[0][1]);\n    if (delta > threshold) {\n      lowPoints = [p];\n    } else if (Math.abs(delta) <= threshold) {\n      lowPoints.push(p);\n    }\n  });\n  return [\n    (_.minBy(lowPoints, (p) => p[0])[0] + _.maxBy(lowPoints, (p) => p[0])[0]) / 2,\n    lowPoints[0][1],\n    // use the max size value\n    _.maxBy(lowPoints, (p) => p[2])[2],\n  ];\n}\n\nconst ApplicationGroupExpanded: React.FunctionComponent<ApplicationGroupExpandedProps> = ({\n  className,\n  element,\n  collapsible,\n  selected,\n  onSelect,\n  hover,\n  label,\n  secondaryLabel,\n  showLabel = true,\n  truncateLength,\n  dndDropRef,\n  droppable,\n  canDrop,\n  dropTarget,\n  onContextMenu,\n  contextMenuOpen,\n  dragging,\n  dragNodeRef,\n  badge,\n  badgeColor,\n  badgeTextColor,\n  badgeBorderColor,\n  badgeClassName,\n  badgeLocation,\n  labelIconClass,\n  labelIcon,\n  labelIconPadding,\n  onCollapseChange,\n}) => {\n  const [hovered, hoverRef] = useHover();\n  const [labelHover, labelHoverRef] = useHover();\n  const dragLabelRef = useDragNode()[1];\n  const refs = useCombineRefs<SVGPathElement>(hoverRef, dragNodeRef);\n  const isHover = hover !== undefined ? hover : hovered;\n  const anchorRef = useSvgAnchor();\n  const outlineRef = useCombineRefs(dndDropRef, anchorRef);\n  const labelLocation = React.useRef<PointWithSize>();\n  const pathRef = React.useRef<string>();\n\n  let parent = element.getParent();\n  let altGroup = false;\n  while (!isGraph(parent)) {\n    altGroup = !altGroup;\n    parent = parent.getParent();\n  }\n\n  // cast to number and coerce\n  const padding = maxPadding(element.getStyle<NodeStyle>().padding);\n  const hullPadding = (point: PointWithSize | PointTuple) => (point[2] || 0) + padding;\n\n  if (!droppable || !pathRef.current || !labelLocation.current) {\n    const children = element.getNodes().filter((c) => c.isVisible());\n    if (children.length === 0) {\n      return null;\n    }\n    const points: (PointWithSize | PointTuple)[] = [];\n    _.forEach(children, (c) => {\n      if (c.getNodeShape() === NodeShape.circle) {\n        const bounds = c.getBounds();\n        const { width, height } = bounds;\n        const { x, y } = bounds.getCenter();\n        const radius = Math.max(width, height) / 2;\n        points.push([x, y, radius] as PointWithSize);\n      } else {\n        // add all 4 corners\n        const { width, height, x, y } = c.getBounds();\n        points.push([x, y, 0] as PointWithSize);\n        points.push([x + width, y, 0] as PointWithSize);\n        points.push([x, y + height, 0] as PointWithSize);\n        points.push([x + width, y + height, 0] as PointWithSize);\n      }\n    });\n    const hullPoints: (PointWithSize | PointTuple)[] =\n      points.length > 2 ? polygonHull(points as PointTuple[]) : (points as PointTuple[]);\n    if (!hullPoints) {\n      return null;\n    }\n\n    // change the box only when not dragging\n    pathRef.current = hullPath(hullPoints as PointTuple[], hullPadding);\n\n    // Compute the location of the group label.\n    labelLocation.current = computeLabelLocation(hullPoints as PointWithSize[]);\n  }\n\n  const groupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n  );\n  const innerGroupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n    (isHover || labelHover) && 'pf-m-hover',\n    canDrop && dropTarget && 'pf-m-drop-target',\n  );\n\n  return (\n    <g\n      ref={labelHoverRef}\n      onContextMenu={onContextMenu}\n      onClick={onSelect}\n      className={groupClassName}\n    >\n      <Layer id={GROUPS_LAYER}>\n        <g\n          ref={refs}\n          onContextMenu={onContextMenu}\n          onClick={onSelect}\n          className={innerGroupClassName}\n        >\n          <path ref={outlineRef} className={styles.topologyGroupBackground} d={pathRef.current} />\n        </g>\n      </Layer>\n      {showLabel && (\n        <NodeLabel\n          className={styles.topologyGroupLabel}\n          data-test={`group-label-text`}\n          x={labelLocation.current[0]}\n          y={labelLocation.current[1] + hullPadding(labelLocation.current) + 24}\n          paddingX={8}\n          paddingY={5}\n          dragRef={dragNodeRef ? dragLabelRef : undefined}\n          status={element.getNodeStatus()}\n          secondaryLabel={secondaryLabel}\n          truncateLength={truncateLength}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeTextColor={badgeTextColor}\n          badgeBorderColor={badgeBorderColor}\n          badgeClassName={badgeClassName}\n          badgeLocation={badgeLocation}\n          labelIconClass={labelIconClass}\n          labelIcon={labelIcon}\n          labelIconPadding={labelIconPadding}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          hover={isHover || labelHover}\n          actionIcon={collapsible ? <CollapseIcon /> : undefined}\n          onActionIconClick={() => onCollapseChange(element, true)}\n        >\n          {label || element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(ApplicationGroupExpanded);\n","import { Graph, Layout, LayoutFactory } from '@patternfly/react-topology';\nimport TopologyColaLayout from './TopologyColaLayout';\n\nconst COLA_LAYOUT = 'Cola';\n\nconst DEFAULT_LAYOUT = COLA_LAYOUT;\n\nconst SUPPORTED_LAYOUTS = [COLA_LAYOUT];\n\nconst layoutFactory: LayoutFactory = (type: string, graph: Graph): Layout | undefined => {\n  return type === COLA_LAYOUT ? new TopologyColaLayout(graph, { layoutOnDrag: false }) : undefined;\n};\n\nexport { COLA_LAYOUT, DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory };\n","import {\n  ColaLayout,\n  ColaNode,\n  ColaGroup,\n  ColaLink,\n  Graph,\n  GraphModel,\n} from '@patternfly/react-topology';\nimport { layoutConstraints } from '@console/knative-plugin/src/topology/layouts/layoutConstraints';\n\nclass TopologyColaLayout extends ColaLayout {\n  protected getConstraints(nodes: ColaNode[], groups: ColaGroup[], edges: ColaLink[]): any[] {\n    return layoutConstraints(nodes, groups, edges, this.options);\n  }\n\n  protected startLayout(\n    graph: Graph<GraphModel, any>,\n    initialRun: boolean,\n    addingNodes: boolean,\n  ): void {\n    if (graph.getNodes()?.filter((n) => n.isVisible()).length === 0) {\n      return;\n    }\n    super.startLayout(graph, initialRun, addingNodes);\n  }\n}\n\nexport default TopologyColaLayout;\n","import {\n  ColaGroup,\n  ColaLink,\n  ColaNode,\n  getGroupPadding,\n  LayoutOptions,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\n\nconst getNodeTimeStamp = (node: ColaNode): Date => {\n  const data = node.element.getData();\n  return new Date(_.get(data, 'resources.obj.metadata.creationTimestamp', 0));\n};\n\n// Sort nodes most recent to least recent\nconst nodeSorter = (node1: ColaNode, node2: ColaNode) =>\n  getNodeTimeStamp(node1) > getNodeTimeStamp(node2) ? -1 : 1;\n\nconst alignNodeConnector = (\n  edges: ColaLink[],\n  type: string,\n  g: ColaGroup | ColaNode,\n  options: LayoutOptions,\n  filteredNode,\n): any[] => {\n  const constraints = [];\n  const connectorLinks = edges\n    .filter(\n      (e) =>\n        e.element.getType() === type &&\n        !e.target.isFixed &&\n        !e.source.isFixed &&\n        (e.target.element === g.element ||\n          e.source.element === g.element ||\n          e.target.element.getParent() === g.element),\n    )\n    .sort((l1: ColaLink, l2: ColaLink) => nodeSorter(l1.source, l2.source));\n  if (connectorLinks.length) {\n    const height = connectorLinks.reduce((current: number, nextLink: ColaLink) => {\n      return current + nextLink.source.height;\n    }, 0);\n    const serviceDistance =\n      g instanceof ColaGroup\n        ? (filteredNode as ColaNode).radius + getGroupPadding(g.element)\n        : (filteredNode as ColaNode).width / 2;\n\n    const linkNodeConstraint: any = {\n      type: 'alignment',\n      axis: 'y',\n      offsets: [{ node: connectorLinks[0].target.index, offset: 0 }],\n    };\n    let nextOffset = -height / 2;\n    connectorLinks.forEach((link: ColaLink) => {\n      // Evenly space out the nodes vertically\n      if (type === TYPE_EVENT_PUB_SUB_LINK) {\n        linkNodeConstraint.offsets.push({\n          node: link.target.index,\n          offset: nextOffset + link.target.height / 2,\n        });\n      } else {\n        linkNodeConstraint.offsets.push({\n          node: link.source.index,\n          offset: nextOffset + link.source.height / 2,\n        });\n      }\n\n      if (type === TYPE_EVENT_SINK_LINK) {\n        // Keep the event sink to the right\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: link.target.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      } else {\n        // Keep the event sources to the left\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: filteredNode.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      }\n      nextOffset += link.source.height;\n    });\n    constraints.push(linkNodeConstraint);\n  }\n  return constraints;\n};\n\nexport const layoutConstraints = (\n  nodes: ColaNode[],\n  groups: ColaGroup[],\n  edges: ColaLink[],\n  options: LayoutOptions,\n): any[] => {\n  let constraints: any[] = [];\n\n  [...groups, ...nodes]\n    .filter((g) =>\n      [TYPE_EVENT_PUB_SUB, TYPE_SINK_URI, TYPE_KNATIVE_SERVICE].includes(g.element.getType()),\n    )\n    .forEach((g) => {\n      const leafNodes =\n        g instanceof ColaGroup && g.leaves.sort(nodeSorter).filter((n) => !n.isFixed);\n      const filteredNode = (leafNodes && _.first(leafNodes)) || g;\n      if (g.element.getType() === TYPE_KNATIVE_SERVICE) {\n        const serviceConstraint: any = {\n          type: 'alignment',\n          axis: 'y',\n          offsets: [],\n        };\n\n        // Sort revisions such that most recent is to the left\n        if (leafNodes) {\n          for (let i = 0; i < leafNodes.length; i++) {\n            serviceConstraint.offsets.push({ node: leafNodes[i].index, offset: 0 });\n            if (i < leafNodes.length - 1) {\n              // Space out each revision horizontally\n              constraints.push({\n                axis: 'x',\n                left: leafNodes[i].index,\n                right: leafNodes[i + 1].index,\n                gap: leafNodes[i].width,\n                equality: true,\n              });\n            }\n          }\n          if (serviceConstraint.offsets.length) {\n            constraints.push(serviceConstraint);\n          }\n        }\n      }\n\n      const eventSourceLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SOURCE_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const pubSubLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_PUB_SUB_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const eventSinkLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SINK_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      constraints = [\n        ...constraints,\n        ...eventSourceLinksConnector,\n        ...pubSubLinksConnector,\n        ...eventSinkLinksConnector,\n      ];\n    });\n  return constraints;\n};\n","import * as React from 'react';\nimport {\n  TopologyControlBar as PfTopologyControlBar,\n  observer,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  Visualization,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\nimport './TopologyControlBar.scss';\n\ninterface ControlBarProps {\n  visualization: Visualization;\n  isDisabled: boolean;\n}\n\nconst TopologyControlBar: React.FC<ControlBarProps> = observer(({ visualization, isDisabled }) => {\n  const { t } = useTranslation();\n  return (\n    <span className=\"pf-topology-control-bar odc-topology-control-bar\">\n      <PfTopologyControlBar\n        controlButtons={[\n          ...createTopologyControlButtons({\n            ...defaultControlButtonsOptions,\n            zoomInCallback: action(() => {\n              visualization.getGraph().scaleBy(4 / 3);\n            }),\n            zoomInTip: t('topology~Zoom in'),\n            zoomInAriaLabel: t('topology~Zoom in'),\n            zoomInDisabled: isDisabled,\n            zoomOutCallback: action(() => {\n              visualization.getGraph().scaleBy(0.75);\n            }),\n            zoomOutTip: t('topology~Zoom out'),\n            zoomOutAriaLabel: t('topology~Zoom out'),\n            zoomOutDisabled: isDisabled,\n            fitToScreenCallback: action(() => {\n              visualization.getGraph().fit(80);\n            }),\n            fitToScreenTip: t('topology~Fit to screen'),\n            fitToScreenAriaLabel: t('topology~Fit to screen'),\n            fitToScreenDisabled: isDisabled,\n            resetViewCallback: action(() => {\n              visualization.getGraph().reset();\n              visualization.getGraph().layout();\n            }),\n            resetViewTip: t('topology~Reset view'),\n            resetViewAriaLabel: t('topology~Reset view'),\n            resetViewDisabled: isDisabled,\n            legend: false,\n          }),\n        ]}\n      />\n    </span>\n  );\n});\n\nexport default TopologyControlBar;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { getUtilsConfig } from '../../app/configSetup';\nimport { setAdmissionWebhookWarning } from '../../app/core/actions';\nimport storeHandler from '../../app/storeHandler';\nimport { TimeoutError } from '../error/http-error';\nimport { getConsoleRequestHeaders } from './console-fetch-utils';\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * @param url The URL to fetch\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response.\n */\nexport const consoleFetch = (url, options = {}, timeout = 60000) => __awaiter(void 0, void 0, void 0, function* () {\n    const fetchPromise = getUtilsConfig().appFetch(url, options);\n    if (timeout <= 0) {\n        return fetchPromise;\n    }\n    const timeoutPromise = new Promise((resolve, reject) => {\n        setTimeout(() => reject(new TimeoutError(url, timeout)), timeout);\n    });\n    return Promise.race([fetchPromise, timeoutPromise]);\n});\nconst parseData = (response) => __awaiter(void 0, void 0, void 0, function* () {\n    const text = yield response.text();\n    const isPlainText = response.headers.get('Content-Type') === 'text/plain';\n    if (!text) {\n        return isPlainText ? '' : {};\n    }\n    return isPlainText || !response.ok ? text : JSON.parse(text);\n});\nconst handleAdmissionWebhookWarning = (warning, kind, name) => {\n    const store = storeHandler.getStore();\n    const id = `${kind}_${name}_${warning}`;\n    const warningData = { kind, name, warning };\n    store.dispatch(setAdmissionWebhookWarning(id, warningData));\n};\nconst consoleFetchCommon = (url, method = 'GET', options = {}, timeout) => __awaiter(void 0, void 0, void 0, function* () {\n    const headers = getConsoleRequestHeaders();\n    // Pass headers last to let callers to override Accept.\n    const allOptions = _.defaultsDeep({ method }, options, { headers });\n    const response = yield consoleFetch(url, allOptions, timeout);\n    const dataPromise = parseData(response);\n    const warning = response.headers.get('Warning');\n    // If the response has a warning header, store it in the redux store.\n    if (response.ok && warning && method !== 'GET') {\n        // Do nothing on error since this is a side-effect. Caller will handle the error.\n        dataPromise\n            .then((data) => { var _a; return handleAdmissionWebhookWarning(warning, data.kind, (_a = data.metadata) === null || _a === void 0 ? void 0 : _a.name); })\n            .catch(() => { });\n    }\n    return dataPromise;\n});\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * It returns the response as a JSON object.\n * Uses consoleFetch internally.\n * @param url The URL to fetch\n * @param method  The HTTP method to use. Defaults to GET\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as text or JSON object.\n */\nexport const consoleFetchJSON = (url, method = 'GET', options = {}, timeout) => {\n    const allOptions = _.defaultsDeep({}, options, {\n        headers: { Accept: 'application/json' },\n    });\n    return consoleFetchCommon(url, method, allOptions, timeout);\n};\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * It returns the response as a text.\n * Uses `consoleFetch` internally.\n * @param url The URL to fetch\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as text or JSON object.\n */\nexport const consoleFetchText = (url, options = {}, timeout) => {\n    return consoleFetchCommon(url, 'GET', options, timeout);\n};\nconst consoleFetchSendJSON = (url, method, json = null, options = {}, timeout) => {\n    const allOptions = {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': `application/${method === 'PATCH' ? 'json-patch+json' : 'json'};charset=UTF-8`,\n        },\n    };\n    if (json) {\n        allOptions.body = JSON.stringify(json);\n    }\n    return consoleFetchJSON(url, method, _.defaultsDeep(allOptions, options), timeout);\n};\n/**\n * A custom DELETE method of consoleFetchJSON.\n * It sends an optional JSON object as the body of the request and adds extra headers for patch request.\n * @param url The URL to delete the object\n * @param json The JSON to delete the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.delete = (url, json = null, options = {}, timeout) => {\n    return json\n        ? consoleFetchSendJSON(url, 'DELETE', json, options, timeout)\n        : consoleFetchJSON(url, 'DELETE', options, timeout);\n};\n/**\n * A custom POST method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to post the object\n * @param json The JSON to POST the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.post = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'POST', json, options, timeout);\n/**\n * A custom PUT method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to put the object\n * @param json The JSON to PUT the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.put = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'PUT', json, options, timeout);\n/**\n * A custom PATCH method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to patch the object\n * @param json The JSON to PATCH the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.patch = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'PATCH', json, options, timeout);\n//# sourceMappingURL=console-fetch.js.map","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { getGroupVersionKindForReference, transformGroupVersionKindToReference } from '../k8s-ref';\nexport const getK8sModel = (k8s, k8sGroupVersionKind) => {\n    var _a;\n    const kindReference = transformGroupVersionKindToReference(k8sGroupVersionKind);\n    return kindReference\n        ? (_a = k8s.getIn(['RESOURCES', 'models', kindReference])) !== null && _a !== void 0 ? _a : k8s.getIn(['RESOURCES', 'models', getGroupVersionKindForReference(kindReference).kind])\n        : undefined;\n};\n/**\n * Hook that retrieves the k8s model for provided K8sGroupVersionKind from redux.\n * @param groupVersionKind group, version, kind of k8s resource `K8sGroupVersionKind` is preferred alternatively can pass reference for group, version, kind which is deprecated i.e `group~version~kind` `K8sResourceKindReference`.\n * @returns An array with the first item as k8s model and second item as inFlight status\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const [model, inFlight] = useK8sModel({ group: 'app'; version: 'v1'; kind: 'Deployment' });\n *   return ...\n * }\n * ```\n */\nexport const useK8sModel = (k8sGroupVersionKind) => [\n    useSelector(({ k8s }) => getK8sModel(k8s, k8sGroupVersionKind)),\n    useSelector(({ k8s }) => { var _a; return (_a = k8s.getIn(['RESOURCES', 'inFlight'])) !== null && _a !== void 0 ? _a : false; }),\n];\n//# sourceMappingURL=useK8sModel.js.map","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_HELM_RELEASE = 'helm-release';\nexport const TYPE_HELM_WORKLOAD = 'helm-workload';\n\nexport const HELM_GROUP_WIDTH = GROUP_WIDTH;\nexport const HELM_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const HELM_GROUP_PADDING = GROUP_PADDING;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { isValidUrl } from '@console/shared';\n\ninterface TypedResourceBadgeCellProps {\n  kind: string;\n  imageClass?: string;\n  typeIconClass?: string;\n  typeIcon?: React.ReactNode;\n}\n\nconst TypedResourceBadgeCell: React.FC<TypedResourceBadgeCellProps> = ({\n  typeIconClass,\n  typeIcon,\n  imageClass,\n  kind,\n}) => {\n  let itemIcon: React.ReactNode;\n  let iconType: React.ReactNode;\n  if (imageClass) {\n    itemIcon = (\n      <image\n        className=\"odc-topology-list-view__resource-icon co-m-resource-icon--md\"\n        xlinkHref={isValidUrl(imageClass) ? imageClass : getImageForIconClass(imageClass)}\n      />\n    );\n  } else {\n    itemIcon = (\n      <ResourceIcon\n        className=\"odc-topology-list-view__resource-icon co-m-resource-icon--md\"\n        kind={kind}\n      />\n    );\n  }\n  if (typeIconClass) {\n    iconType = (\n      <span className=\"odc-topology-list-view__type-icon-bg\">\n        <img\n          className=\"odc-topology-list-view__type-icon\"\n          alt={kind}\n          src={isValidUrl(typeIconClass) ? typeIconClass : getImageForIconClass(typeIconClass)}\n        />\n      </span>\n    );\n  } else if (typeIcon) {\n    iconType = (\n      <span className=\"odc-topology-list-view__type-icon-bg\">\n        <foreignObject className=\"odc-topology-list-view__type-icon\">{typeIcon}</foreignObject>\n      </span>\n    );\n  } else {\n    iconType = null;\n  }\n\n  return (\n    <span className=\"odc-topology-list-view__resource-icon__container\">\n      {itemIcon}\n      {iconType}\n    </span>\n  );\n};\n\nexport default observer(TypedResourceBadgeCell);\n","/**\n * It provides impersonation details from the redux store.\n * @param state the root state\n * @returns The the impersonate state.\n */\nexport const getImpersonate = (state) => state.sdkCore.impersonate;\n/**\n * It provides impersonation details from the redux store as a props object.\n * @param state the root state\n * @returns The the impersonation details props object.\n */\nexport const impersonateStateToProps = (state) => {\n    return { impersonate: getImpersonate(state) };\n};\n/**\n * It provides user details from the redux store.\n * @param state the root state\n * @returns The the user state.\n */\nexport const getUser = (state) => state.sdkCore.user;\n/**\n * It provides admission webhook warning data from the redux store.\n * @param state the root state\n * @returns The the admissionWebhookWarning state.\n */\nexport const getAdmissionWebhookWarnings = (state) => state.sdkCore.admissionWebhookWarnings;\n//# sourceMappingURL=coreSelectors.js.map","import { action } from 'typesafe-actions';\nexport var ActionType;\n(function (ActionType) {\n    ActionType[\"SetUser\"] = \"setUser\";\n    ActionType[\"BeginImpersonate\"] = \"beginImpersonate\";\n    ActionType[\"EndImpersonate\"] = \"endImpersonate\";\n    ActionType[\"SetActiveCluster\"] = \"setActiveCluster\";\n    ActionType[\"SetAdmissionWebhookWarning\"] = \"setAdmissionWebhookWarning\";\n    ActionType[\"RemoveAdmissionWebhookWarning\"] = \"removeAdmissionWebhookWarning\";\n})(ActionType || (ActionType = {}));\nexport const setUser = (userInfo) => action(ActionType.SetUser, { userInfo });\nexport const beginImpersonate = (kind, name, subprotocols) => action(ActionType.BeginImpersonate, { kind, name, subprotocols });\nexport const endImpersonate = () => action(ActionType.EndImpersonate);\nexport const setAdmissionWebhookWarning = (id, warning) => action(ActionType.SetAdmissionWebhookWarning, { id, warning });\nexport const removeAdmissionWebhookWarning = (id) => action(ActionType.RemoveAdmissionWebhookWarning, { id });\nconst coreActions = {\n    setUser,\n    beginImpersonate,\n    endImpersonate,\n    setAdmissionWebhookWarning,\n    removeAdmissionWebhookWarning,\n};\n//# sourceMappingURL=core.js.map","import { getImpersonate } from '../../app/core/reducers';\nimport storeHandler from '../../app/storeHandler';\nexport const getCSRFToken = () => {\n    const cookiePrefix = 'csrf-token=';\n    return (document &&\n        document.cookie &&\n        document.cookie\n            .split(';')\n            .map((c) => c.trim())\n            .filter((c) => c.startsWith(cookiePrefix))\n            .map((c) => c.slice(cookiePrefix.length))\n            .pop());\n};\n/**\n * A function that creates impersonation headers for API requests using current redux state.\n * @returns an object containing the appropriate impersonation requst headers, based on redux state\n */\nexport const getConsoleRequestHeaders = () => {\n    const store = storeHandler.getStore();\n    if (!store)\n        return undefined;\n    const state = store.getState();\n    const headers = {\n        'X-CSRFToken': getCSRFToken(),\n    };\n    // Set impersonation headers\n    const { kind, name } = getImpersonate(state) || {};\n    if ((kind === 'User' || kind === 'Group') && name) {\n        // Even if we are impersonating a group, we still need to set Impersonate-User to something or k8s will complain\n        headers['Impersonate-User'] = name;\n        if (kind === 'Group') {\n            headers['Impersonate-Group'] = name;\n        }\n    }\n    return headers;\n};\n//# sourceMappingURL=console-fetch-utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as _ from 'lodash';\nimport { action } from 'typesafe-actions';\nimport { getReferenceForModel } from '../../../utils/k8s/k8s-ref';\nimport { k8sList, k8sGet } from '../../../utils/k8s/k8s-resource';\nimport { k8sWatch } from '../../../utils/k8s/k8s-utils';\nimport { getImpersonate } from '../../core/reducers/coreSelectors';\nexport var ActionType;\n(function (ActionType) {\n    ActionType[\"ReceivedResources\"] = \"resources\";\n    ActionType[\"GetResourcesInFlight\"] = \"getResourcesInFlight\";\n    ActionType[\"StartWatchK8sObject\"] = \"startWatchK8sObject\";\n    ActionType[\"StartWatchK8sList\"] = \"startWatchK8sList\";\n    ActionType[\"ModifyObject\"] = \"modifyObject\";\n    ActionType[\"StopWatchK8s\"] = \"stopWatchK8s\";\n    ActionType[\"Errored\"] = \"errored\";\n    ActionType[\"Loaded\"] = \"loaded\";\n    ActionType[\"BulkAddToList\"] = \"bulkAddToList\";\n    ActionType[\"UpdateListFromWS\"] = \"updateListFromWS\";\n    ActionType[\"FilterList\"] = \"filterList\";\n})(ActionType || (ActionType = {}));\nexport const updateListFromWS = (id, k8sObjects) => action(ActionType.UpdateListFromWS, { id, k8sObjects });\nexport const loaded = (id, k8sObjects) => action(ActionType.Loaded, { id, k8sObjects });\nexport const bulkAddToList = (id, k8sObjects) => action(ActionType.BulkAddToList, { id, k8sObjects });\nexport const startWatchK8sObject = (id) => action(ActionType.StartWatchK8sObject, { id });\nexport const startWatchK8sList = (id, query) => action(ActionType.StartWatchK8sList, { id, query });\nexport const modifyObject = (id, k8sObjects) => action(ActionType.ModifyObject, { id, k8sObjects });\nexport const stopWatchK8s = (id) => action(ActionType.StopWatchK8s, { id });\nexport const errored = (id, k8sObjects) => action(ActionType.Errored, { id, k8sObjects });\nexport const filterList = (id, name, value) => action(ActionType.FilterList, { id, name, value });\nexport const partialObjectMetadataListHeader = {\n    Accept: 'application/json;as=PartialObjectMetadataList;v=v1;g=meta.k8s.io,application/json',\n};\nexport const partialObjectMetadataHeader = {\n    Accept: 'application/json;as=PartialObjectMetadata;v=v1;g=meta.k8s.io,application/json',\n};\nconst WS = {};\nconst POLLs = {};\nconst REF_COUNTS = {};\nconst paginationLimit = 250;\nexport const stopK8sWatch = (id) => (dispatch) => {\n    REF_COUNTS[id] -= 1;\n    if (REF_COUNTS[id] > 0) {\n        return _.noop;\n    }\n    const ws = WS[id];\n    if (ws) {\n        ws.destroy();\n        delete WS[id];\n    }\n    const poller = POLLs[id];\n    clearInterval(poller);\n    delete POLLs[id];\n    delete REF_COUNTS[id];\n    return dispatch(stopWatchK8s(id));\n};\nexport const watchK8sList = (id, query, k8skind, extraAction, partialMetadata = false) => (dispatch, getState) => {\n    // Only one watch per unique list ID\n    if (id in REF_COUNTS) {\n        REF_COUNTS[id] += 1;\n        return _.noop;\n    }\n    dispatch(startWatchK8sList(id, query));\n    REF_COUNTS[id] = 1;\n    const incrementallyLoad = (continueToken = '') => __awaiter(void 0, void 0, void 0, function* () {\n        // the list may not still be around...\n        if (!REF_COUNTS[id]) {\n            // let .then handle the cleanup\n            return null;\n        }\n        const requestOptions = partialMetadata\n            ? {\n                headers: partialObjectMetadataListHeader,\n            }\n            : {};\n        const response = yield k8sList(k8skind, Object.assign(Object.assign({ limit: paginationLimit }, query), (continueToken ? { continue: continueToken } : {})), true, requestOptions);\n        if (!REF_COUNTS[id]) {\n            return null;\n        }\n        if (!continueToken) {\n            [loaded, extraAction].forEach((f) => f && dispatch(f(id, response.items)));\n        }\n        else {\n            dispatch(bulkAddToList(id, response.items));\n        }\n        if (response.metadata.continue) {\n            return incrementallyLoad(response.metadata.continue);\n        }\n        return response.metadata.resourceVersion;\n    });\n    /**\n     * Incrementally fetch list (XHR) using k8s pagination then use its resourceVersion to\n     *  start listening on a WS (?resourceVersion=$resourceVersion)\n     *  start the process over when:\n     *   1. the WS closes abnormally\n     *   2. the WS can not establish a connection within $TIMEOUT\n     */\n    const pollAndWatch = () => __awaiter(void 0, void 0, void 0, function* () {\n        delete POLLs[id];\n        try {\n            const resourceVersion = yield incrementallyLoad();\n            // ensure this watch should still exist because pollAndWatch is recursiveish\n            if (!REF_COUNTS[id]) {\n                // eslint-disable-next-line no-console\n                console.log(`stopped watching ${id} before finishing incremental loading.`);\n                // call cleanup function out of abundance of caution...\n                dispatch(stopK8sWatch(id));\n                return;\n            }\n            if (WS[id]) {\n                // eslint-disable-next-line no-console\n                console.warn(`Attempted to create multiple websockets for ${id}.`);\n                return;\n            }\n            if (!_.get(k8skind, 'verbs', ['watch']).includes('watch')) {\n                // eslint-disable-next-line no-console\n                console.warn(`${getReferenceForModel(k8skind)} does not support watching, falling back to polling.`);\n                if (!POLLs[id]) {\n                    POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n                }\n                return;\n            }\n            const { subprotocols } = getImpersonate(getState()) || {};\n            WS[id] = k8sWatch(k8skind, Object.assign(Object.assign({}, query), { resourceVersion }), { subprotocols, timeout: 60 * 1000 });\n        }\n        catch (e) {\n            if (!REF_COUNTS[id]) {\n                // eslint-disable-next-line no-console\n                console.log(`stopped watching ${id} before finishing incremental loading with error ${e}!`);\n                // call cleanup function out of abundance of caution...\n                dispatch(stopK8sWatch(id));\n                return;\n            }\n            dispatch(errored(id, e));\n            if (!POLLs[id]) {\n                POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n            }\n            return;\n        }\n        WS[id]\n            .onclose((event) => {\n            // Close Frame Status Codes: https://tools.ietf.org/html/rfc6455#section-7.4.1\n            if (event.code !== 1006) {\n                return;\n            }\n            // eslint-disable-next-line no-console\n            console.log('WS closed abnormally');\n            const ws = WS[id];\n            const timedOut = true;\n            ws && ws.destroy(timedOut);\n        })\n            .ondestroy((timedOut) => {\n            if (!timedOut) {\n                return;\n            }\n            // If the WS is unsuccessful for timeout duration, assume it is less work\n            // to update the entire list and then start the WS again\n            // eslint-disable-next-line no-console\n            console.log(`WS ${id} timed out - restarting polling`);\n            delete WS[id];\n            if (POLLs[id]) {\n                return;\n            }\n            POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n        })\n            .onbulkmessage((events) => [updateListFromWS, extraAction].forEach((f) => f && dispatch(f(id, events))));\n    });\n    return pollAndWatch();\n};\nexport const watchK8sObject = (id, name, namespace, query, k8sModel, partialMetadata = false) => (dispatch, getState) => {\n    if (id in REF_COUNTS) {\n        REF_COUNTS[id] += 1;\n        return _.noop;\n    }\n    const watch = dispatch(startWatchK8sObject(id));\n    REF_COUNTS[id] = 1;\n    const requestOptions = partialMetadata\n        ? {\n            headers: partialObjectMetadataHeader,\n        }\n        : {};\n    const poller = () => {\n        k8sGet(k8sModel, name, namespace, {}, requestOptions)\n            .then((o) => dispatch(modifyObject(id, o)), (e) => dispatch(errored(id, e)))\n            .catch((err) => {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        });\n    };\n    POLLs[id] = window.setInterval(poller, 30 * 1000);\n    poller();\n    if (!_.get(k8sModel, 'verbs', ['watch']).includes('watch')) {\n        // eslint-disable-next-line no-console\n        console.warn(`${getReferenceForModel(k8sModel)} does not support watching`);\n        return _.noop;\n    }\n    // Validate that a namespace is provided when watching a singular namespaced object. Must happen\n    // on frontend since we use field selectors against the list endpoint to watch singular resources.\n    if (k8sModel.namespaced && query.name && !query.ns) {\n        // eslint-disable-next-line no-console\n        console.error('Namespace required to watch namespaced resource: ', k8sModel.kind, query.name);\n        return _.noop;\n    }\n    if (query.name) {\n        query.fieldSelector = `metadata.name=${query.name}`;\n        delete query.name;\n    }\n    const { subprotocols } = getImpersonate(getState()) || {};\n    WS[id] = k8sWatch(k8sModel, query, {\n        subprotocols,\n    }).onbulkmessage((events) => events.forEach((e) => dispatch(modifyObject(id, e.object))));\n    return watch;\n};\nexport const receivedResources = (resources) => action(ActionType.ReceivedResources, { resources });\nexport const getResourcesInFlight = () => action(ActionType.GetResourcesInFlight);\nconst k8sActions = {\n    startWatchK8sObject,\n    startWatchK8sList,\n    modifyObject,\n    stopWatchK8s,\n    errored,\n    loaded,\n    bulkAddToList,\n    updateListFromWS,\n    filterList,\n    receivedResources,\n    getResourcesInFlight,\n};\n//# sourceMappingURL=k8s.js.map","import { AddAction, AddActionGroup, ResolvedExtension } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nimport { AddGroup } from '../components/types';\n\nexport const getAddGroups = (\n  addActions: ResolvedExtension<AddAction>[],\n  addActionGroups: AddActionGroup['properties'][],\n): AddGroup[] => {\n  if (!addActions || !addActionGroups) {\n    return [];\n  }\n  const initialActionGroups: AddGroup[] = addActionGroups.map((actionGroup) => ({\n    ...actionGroup,\n    items: [],\n  }));\n  const populatedActionGroups = addActions.reduce(\n    (actionGroups: typeof initialActionGroups, currAction) => {\n      const actionGroupsForCurrentItem = actionGroups.filter(\n        (a) => currAction.properties.groupId === a.id,\n      );\n      if (actionGroupsForCurrentItem.length) {\n        actionGroupsForCurrentItem.forEach((group) => group.items.push(currAction));\n      } else {\n        actionGroups.push({\n          id: currAction.properties.id,\n          name: currAction.properties.label,\n          items: [currAction],\n        });\n      }\n      return actionGroups;\n    },\n    initialActionGroups,\n  );\n  return populatedActionGroups.filter((group) => group.items.length);\n};\n\nexport const navigateTo = (e: React.SyntheticEvent, url: string) => {\n  history.push(url);\n  e.preventDefault();\n};\n\nexport const resolvedHref = (href: string, namespace: string): string =>\n  href && namespace ? href.replace(/:namespace\\b/g, namespace) : null;\n\nexport const filterNamespaceScopedUrl = (\n  namespace: string,\n  addActions: ResolvedExtension<AddAction>[],\n): ResolvedExtension<AddAction>[] => {\n  if (!namespace || !addActions) {\n    return [];\n  }\n  if (namespace === ALL_NAMESPACES_KEY) {\n    return addActions.filter(({ properties: { href } }) => !href?.match(/:namespace\\b/));\n  }\n  return addActions;\n};\n","import { Map as ImmutableMap } from 'immutable';\nimport * as _ from 'lodash';\nimport { k8sBasePath } from './k8s';\nimport { getReferenceForModel } from './k8s-ref';\nimport { WSFactory } from './ws-factory';\n// eslint-disable-next-line\nconst staticModels = require('@console/internal/models');\nconst getK8sAPIPath = ({ apiGroup = 'core', apiVersion }) => {\n    const isLegacy = apiGroup === 'core' && apiVersion === 'v1';\n    let p = isLegacy ? '/api/' : '/apis/';\n    if (!isLegacy && apiGroup) {\n        p += `${apiGroup}/`;\n    }\n    p += apiVersion;\n    return p;\n};\nexport const getK8sResourcePath = (model, options) => {\n    let u = getK8sAPIPath(model);\n    if (options.ns) {\n        u += `/namespaces/${options.ns}`;\n    }\n    u += `/${model.plural}`;\n    if (options.name) {\n        // Some resources like Users can have special characters in the name.\n        u += `/${encodeURIComponent(options.name)}`;\n    }\n    if (options.path) {\n        u += `/${options.path}`;\n    }\n    if (!_.isEmpty(options.queryParams)) {\n        const q = _.map(options.queryParams, (v, k) => {\n            return `${k}=${v}`;\n        });\n        u += `?${q.join('&')}`;\n    }\n    return u;\n};\nexport const resourceURL = (model, options) => `${k8sBasePath}${getK8sResourcePath(model, options)}`;\nconst toArray = (value) => (Array.isArray(value) ? value : [value]);\nexport const requirementToString = (requirement) => {\n    if (requirement.operator === 'Equals') {\n        return `${requirement.key}=${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'NotEquals') {\n        return `${requirement.key}!=${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'Exists') {\n        return requirement.key;\n    }\n    if (requirement.operator === 'DoesNotExist') {\n        return `!${requirement.key}`;\n    }\n    if (requirement.operator === 'In') {\n        return `${requirement.key} in (${toArray(requirement.values).join(',')})`;\n    }\n    if (requirement.operator === 'NotIn') {\n        return `${requirement.key} notin (${toArray(requirement.values).join(',')})`;\n    }\n    if (requirement.operator === 'GreaterThan') {\n        return `${requirement.key} > ${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'LessThan') {\n        return `${requirement.key} < ${requirement.values[0]}`;\n    }\n    return '';\n};\nexport const createEquals = (key, value) => ({\n    key,\n    operator: 'Equals',\n    values: [value],\n});\nconst isOldFormat = (selector) => !selector.matchLabels && !selector.matchExpressions;\nexport const toRequirements = (selector = {}) => {\n    const requirements = [];\n    const matchLabels = isOldFormat(selector) ? selector : selector.matchLabels;\n    const { matchExpressions } = selector;\n    Object.keys(matchLabels || {})\n        .sort()\n        .forEach((k) => {\n        requirements.push(createEquals(k, matchLabels[k]));\n    });\n    (matchExpressions || []).forEach((me) => {\n        requirements.push(me);\n    });\n    return requirements;\n};\nexport const selectorToString = (selector) => {\n    const requirements = toRequirements(selector);\n    return requirements.map(requirementToString).join(',');\n};\nexport const k8sWatch = (kind, query = {}, wsOptions = {}) => {\n    const queryParams = { watch: 'true' };\n    const opts = { queryParams };\n    const wsOptionsUpdated = Object.assign({\n        host: 'auto',\n        reconnect: true,\n        jsonParse: true,\n        bufferFlushInterval: 500,\n        bufferMax: 1000,\n    }, wsOptions);\n    const { labelSelector } = query;\n    if (labelSelector) {\n        const encodedSelector = encodeURIComponent(selectorToString(labelSelector));\n        if (encodedSelector) {\n            queryParams.labelSelector = encodedSelector;\n        }\n    }\n    if (query.fieldSelector) {\n        queryParams.fieldSelector = encodeURIComponent(query.fieldSelector);\n    }\n    if (query.ns) {\n        opts.ns = query.ns;\n    }\n    if (query.resourceVersion) {\n        queryParams.resourceVersion = encodeURIComponent(query.resourceVersion);\n    }\n    const path = resourceURL(kind, opts);\n    wsOptionsUpdated.path = path;\n    return new WSFactory(path, wsOptionsUpdated);\n};\nlet pluginStore;\nexport const setPluginStore = (store) => {\n    pluginStore = store;\n};\nconst modelKey = (model) => {\n    // TODO: Use `referenceForModel` even for known API objects\n    return model.crd ? getReferenceForModel(model) : model.kind;\n};\nexport const modelsToMap = (models) => {\n    return ImmutableMap().withMutations((map) => {\n        models.forEach((model) => map.set(modelKey(model), model));\n    });\n};\nexport const isModelDefinition = (e) => {\n    return e.type === 'ModelDefinition';\n};\n/**\n * Contains static resource definitions for Kubernetes objects.\n * Keys are of type `group:version:Kind`, but TypeScript doesn't support regex types (https://github.com/Microsoft/TypeScript/issues/6579).\n */\nlet k8sModels;\nconst getK8sModels = () => {\n    if (!k8sModels) {\n        // TODO this was migrated from console and is only used for the fallback API discovery and can likely be removed\n        k8sModels = modelsToMap(_.values(staticModels));\n        const hasModel = (model) => k8sModels.has(modelKey(model));\n        k8sModels = k8sModels.withMutations((map) => {\n            const pluginModels = _.flatMap(pluginStore\n                .getExtensionsInUse()\n                .filter(isModelDefinition)\n                .map((md) => md.properties.models));\n            map.merge(modelsToMap(pluginModels.filter((model) => !hasModel(model))));\n        });\n    }\n    return k8sModels;\n};\n// URL routes that can be namespaced\nlet namespacedResources;\n/**\n * Provides a synchronous way to acquire all statically-defined Kubernetes models.\n * NOTE: This will not work for CRDs defined at runtime, use `connectToModels` instead.\n */\nexport const allModels = getK8sModels;\nexport const getNamespacedResources = () => {\n    if (!namespacedResources) {\n        namespacedResources = new Set();\n        allModels().forEach((v, k) => {\n            if (!v.namespaced) {\n                return;\n            }\n            if (v.crd) {\n                namespacedResources.add(k);\n            }\n            if (!v.crd || v.legacyPluralURL) {\n                namespacedResources.add(v.plural);\n            }\n        });\n    }\n    return namespacedResources;\n};\n//# sourceMappingURL=k8s-utils.js.map","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ResourceLink,\n  SidebarSectionHeading,\n  ExternalLink,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel, SecretModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { TYPE_TRAFFIC_CONNECTOR } from '../../const';\nimport { getNamespaceDashboardKialiLink, getResource } from '../../utils/topology-utils';\n\ntype TopologyEdgeResourcesPanelProps = {\n  edge: Edge;\n};\n\nconst TopologyEdgeResourcesPanel: React.FC<TopologyEdgeResourcesPanelProps> = ({ edge }) => {\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n  const data = edge.getData();\n  const resources = [source, target];\n  const {\n    metadata: { namespace },\n  } = resources[1];\n\n  return (\n    <div className=\"overview__sidebar-pane-body\">\n      <SidebarSectionHeading text={t('topology~Connections')} />\n      <ul className=\"list-group\">\n        {_.map(resources, (resource) => {\n          if (!resource) {\n            return null;\n          }\n          const {\n            metadata: { name, uid },\n            spec,\n          } = resource;\n          const sinkUri = spec?.sinkUri;\n\n          return (\n            <li className=\"list-group-item  container-fluid\" key={uid}>\n              {!sinkUri ? (\n                <ResourceLink\n                  kind={referenceFor(resource)}\n                  name={name}\n                  namespace={namespace}\n                  dataTest={`resource-link-${name}`}\n                />\n              ) : (\n                <ExternalLink\n                  href={sinkUri}\n                  additionalClassName=\"co-external-link--block\"\n                  text={sinkUri}\n                  dataTestID={`sink-uri-${sinkUri}`}\n                />\n              )}\n            </li>\n          );\n        })}\n      </ul>\n      {data?.sbr?.status.secret && (\n        <>\n          <SidebarSectionHeading text={t('topology~Secret')} />\n          <ul className=\"list-group\">\n            <li className=\"list-group-item  container-fluid\" key={data.sbr.status.secret}>\n              <ResourceLink\n                kind={referenceForModel(SecretModel)}\n                name={data.sbr.status.secret}\n                namespace={data.sbr.metadata.namespace}\n                dataTest={`secret-resource-link-${data.sbr.status.secret}`}\n              />\n            </li>\n          </ul>\n        </>\n      )}\n      {edge.getType() === TYPE_TRAFFIC_CONNECTOR && (\n        <>\n          <SidebarSectionHeading text={t('topology~Kiali link')} />\n          <ExternalLink\n            href={getNamespaceDashboardKialiLink(consoleLinks, namespace)}\n            text={t('topology~Kiali Graph view')}\n            dataTestID=\"kiali-link\"\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TopologyEdgeResourcesPanel;\n","import { ResolvedExtension, FileUpload } from '@console/dynamic-plugin-sdk';\n\nexport const getFileType = (fileName: string): string => {\n  if (fileName.lastIndexOf('.') === -1) {\n    return null;\n  }\n  return fileName.split('.').pop();\n};\n\nexport const isFileSupported = (fileName: string, supportedFileTypes: string[]): boolean => {\n  const extension = getFileType(fileName);\n  if (!extension || extension.length === 0) {\n    return false;\n  }\n  return supportedFileTypes.includes(extension.toLowerCase());\n};\n\nexport const getRequiredFileUploadExtension = (\n  fileUploadExtensions: ResolvedExtension<FileUpload>[],\n  fileName: string,\n) =>\n  fileUploadExtensions.find((ex) => isFileSupported(fileName, ex.properties.fileExtensions)) ??\n  null;\n","export { consoleFetch, consoleFetchJSON, consoleFetchText } from './console-fetch';\nexport { getConsoleRequestHeaders } from './console-fetch-utils';\n//# sourceMappingURL=index.js.map","let store;\nconst storeHandler = {\n    setStore: (storeData) => {\n        store = storeData;\n    },\n    getStore: () => store,\n};\nexport default storeHandler;\n//# sourceMappingURL=storeHandler.js.map","export { useK8sModel } from './useK8sModel';\nexport { useK8sModels } from './useK8sModels';\nexport { useK8sWatchResource } from './useK8sWatchResource';\nexport { useK8sWatchResources } from './useK8sWatchResources';\n//# sourceMappingURL=index.js.map","import * as React from 'react';\nimport { BoltIcon } from '@patternfly/react-icons/dist/esm/icons/bolt-icon';\nimport { CatalogIcon } from '@patternfly/react-icons/dist/esm/icons/catalog-icon';\nimport { DatabaseIcon } from '@patternfly/react-icons/dist/esm/icons/database-icon';\nimport { FileUploadIcon } from '@patternfly/react-icons/dist/esm/icons/file-upload-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { LaptopCodeIcon } from '@patternfly/react-icons/dist/esm/icons/laptop-code-icon';\nimport { OsImageIcon } from '@patternfly/react-icons/dist/esm/icons/os-image-icon';\nimport i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk/src';\nimport { eventIconStyle, ServerlessFunctionIcon } from '@console/knative-plugin/src/utils/icons';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport {\n  INCONTEXT_ACTIONS_CONNECTS_TO,\n  INCONTEXT_ACTIONS_SERVICE_BINDING,\n  QUERY_PROPERTIES,\n} from '../const';\nimport { resolvedHref } from '../utils/add-page-utils';\nimport { getDisabledAddActions } from '../utils/useAddActionExtensions';\n\nexport const allImportResourceAccess = 'allImportResourceAccess';\nexport const allCatalogImageResourceAccess = 'allCatalogImageResourceAccess';\n\ntype ActionFactory = (\n  namespace: string,\n  application?: string,\n  contextSource?: string,\n  path?: string,\n  accessReviewDisabled?: boolean,\n  isServiceBindingAllowed?: boolean,\n) => Action;\n\nexport const resolvedURLWithParams = (\n  unresolvedHref: string,\n  namespace: string,\n  application?: string,\n  contextSource?: string,\n  allowServiceBinding?: boolean,\n) => {\n  const resolvedURL = resolvedHref(unresolvedHref, namespace);\n  const queryParams = new URLSearchParams();\n  if (application || contextSource) {\n    application\n      ? queryParams.append(QUERY_PROPERTIES.APPLICATION, application)\n      : queryParams.append(QUERY_PROPERTIES.APPLICATION, UNASSIGNED_KEY);\n    contextSource &&\n      queryParams.append(\n        QUERY_PROPERTIES.CONTEXT_ACTION,\n        JSON.stringify({\n          type: allowServiceBinding\n            ? INCONTEXT_ACTIONS_SERVICE_BINDING\n            : INCONTEXT_ACTIONS_CONNECTS_TO,\n          payload: contextSource,\n        }),\n      );\n    return `${resolvedURL}${resolvedURL.indexOf('?') > -1 ? '&' : '?'}${queryParams.toString()}`;\n  }\n  return resolvedURL;\n};\n\nexport const AddActions: { [name: string]: ActionFactory } = {\n  FromGit: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'import-from-git',\n    label: i18next.t('devconsole~Import from Git'),\n    icon: <GitAltIcon />,\n    cta: {\n      href: resolvedURLWithParams('/import/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  ContainerImage: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'deploy-image',\n    label: i18next.t('devconsole~Container Image'),\n    icon: <OsImageIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/deploy-image/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  DevCatalog: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'dev-catalog',\n    label: i18next.t('devconsole~From Catalog'),\n    icon: <CatalogIcon />,\n    cta: {\n      href: resolvedURLWithParams('/catalog/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  DatabaseCatalog: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'dev-catalog-databases',\n    label: i18next.t('devconsole~Database'),\n    icon: <DatabaseIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/catalog/ns/:namespace?category=databases',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  Samples: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'import-from-samples',\n    label: i18next.t('devconsole~Samples'),\n    icon: <LaptopCodeIcon />,\n    cta: {\n      href: resolvedURLWithParams('/samples/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  OperatorBacked: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n    isServiceBindingAllowed,\n  ) => ({\n    id: 'operator-backed',\n    label: i18next.t('devconsole~Operator Backed'),\n    icon: <BoltIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/catalog/ns/:namespace?catalogType=OperatorBackedService',\n        namespace,\n        application,\n        contextSource,\n        isServiceBindingAllowed,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  UploadJarFile: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'upload-jar',\n    label: i18next.t('devconsole~Upload JAR file'),\n    icon: <FileUploadIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/upload-jar/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  // Tech debt: ODC-7413: Move Serverless specific actions and providers from devconsole into knative-pluigin\n  CreateServerlessFunction: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n  ) => ({\n    id: 'create-serverless-function',\n    label: i18next.t('devconsole~Create Serverless function'),\n    icon: <ServerlessFunctionIcon style={eventIconStyle} />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/serverless-function/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  CreateServerlessFunctionUsingSamples: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n  ) => ({\n    id: 'create-serverless-function-samples',\n    label: i18next.t('devconsole~Serverless function using Samples'),\n    icon: <ServerlessFunctionIcon style={eventIconStyle} />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/samples/ns/:namespace?sampleType=Serverless function',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n};\n\nconst disabledAddActions = getDisabledAddActions();\nexport const disabledActionsFilter = (item: Action) => !disabledAddActions?.includes(item.id);\n","import * as _ from 'lodash';\nimport { consoleFetchJSON as coFetchJSON } from '../fetch';\nimport { selectorToString, resourceURL } from './k8s-utils';\n/**\n * An adapter function to call the underlying APIs with provided options.\n * @param func The function to be called.\n * @param knownArgs  The list of arguments to be provided to underlying API in order.\n * @returns The function called with provided arguments.\n */\nconst adapterFunc = (func, knownArgs) => {\n    return (options) => {\n        const args = knownArgs.map((arg) => {\n            // forming opts to match underlying API signature if it's there in knownArgs\n            if (arg === 'opts') {\n                const { name, ns, path, queryParams } = options || {};\n                return Object.assign(Object.assign(Object.assign(Object.assign({}, (name && { name })), (ns && { ns })), (path && { path })), (queryParams && { queryParams }));\n            }\n            return options[arg];\n        });\n        return func(...args);\n    };\n};\n/**\n * @deprecated Use {@link k8sGetResource} instead. Support for k8sGet will be removed in a future release.\n * It fetches a resource from the cluster, based on the provided model, name, namespace.\n * If the name is provided it returns one resource else it returns all the resources matching the model.\n * @param model Kubernetes model\n * @param name The name of the resource, if not provided then it'll look for all the resources matching the model.\n * @param ns The namespace to look into, should not be specified for cluster-scoped resources.\n * @param opts The options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more at https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response as JSON object with a resource if the name is provided\n * else it returns all the resouces matching the model. In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sGet = (model, name, ns, opts, requestInit) => coFetchJSON(resourceURL(model, Object.assign({ ns, name }, opts)), 'GET', requestInit, null);\n/**\n * It fetches a resource from the cluster, based on the provided options.\n * If the name is provided it returns resource, else it returns all the resources matching the model.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model - Kubernetes model\n * @param options.name - The name of the resource, if not provided then it looks for all the resources matching the model.\n * @param options.ns - The namespace to look into, should not be specified for cluster-scoped resources.\n * @param options.path - Appends as subpath if provided\n * @param options.queryParams - The query parameters to be included in the URL.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, etc. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response as JSON object with a resource if the name is provided, else it returns all the resources matching the model. In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sGetResource = adapterFunc(k8sGet, [\n    'model',\n    'name',\n    'ns',\n    'opts',\n    'requestInit',\n]);\n/**\n * @deprecated Use {@link k8sCreateResource} instead. Support for k8sCreate will be removed in a future release.\n * It creates a resource in the cluster, based on the provided model and payload.\n * @param model Kubernetes model\n * @param data The payload for the resource to be created.\n * @param opts The options to pass.\n * @returns A promise that resolves to the response of the resource created.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sCreate = (model, data, opts = {}) => {\n    var _a;\n    return coFetchJSON.post(resourceURL(model, Object.assign({ ns: (_a = data === null || data === void 0 ? void 0 : data.metadata) === null || _a === void 0 ? void 0 : _a.namespace }, opts)), data, null, null);\n};\n/**\n * It creates a resource in the cluster, based on the provided options.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model - Kubernetes model\n * @param options.data - payload for the resource to be created\n * @param options.path - Appends as subpath if provided\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource created.\n * In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sCreateResource = adapterFunc(k8sCreate, [\n    'model',\n    'data',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sUpdateResource} instead. Support for k8sUpdate will be removed in a future release.\n * It updates the entire resource in the cluster, based on the provided model, data, name, namespace.\n * When a client needs to replace an existing resource entirely, they can use k8sUpdate.\n * Alternatively can use k8sPatch to perform the partial update.\n * @param model Kubernetes model\n * @param data payload for the resource to be updated.\n * @param ns namespace to look into, it should not be specified for cluster-scoped resources.\n * @param name resource name to be updated.\n * @param opts The options to pass\n * @returns A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sUpdate = (model, data, ns, name, opts) => {\n    var _a, _b;\n    return coFetchJSON.put(resourceURL(model, Object.assign({ ns: ns || ((_a = data.metadata) === null || _a === void 0 ? void 0 : _a.namespace), name: name || ((_b = data.metadata) === null || _b === void 0 ? void 0 : _b.name) }, opts)), data, null, null);\n};\n/**\n * It updates the entire resource in the cluster, based on the provided options.\n * When a client needs to replace an existing resource entirely, the client can use k8sUpdate.\n * Alternatively, the client can use k8sPatch to perform the partial update.\n * @param options which are passed as key-value pair in the map\n * @param options.model - Kubernetes model\n * @param options.data - payload for the Kubernetes resource to be updated\n * @param options.ns - namespace to look into, it should not be specified for cluster-scoped resources.\n * @param options.name - resource name to be updated.\n * @param options.path - appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sUpdateResource = adapterFunc(k8sUpdate, [\n    'model',\n    'data',\n    'ns',\n    'name',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sPatchResource} instead. Support for k8sPatch will be removed in a future release.\n * It patches any resource in the cluster, based on provided model, resource, data.\n * When a client needs to perform the partial update, they can use k8sPatch.\n * Alternatively can use k8sUpdate to replace an existing resource entirely.\n * See more https://datatracker.ietf.org/doc/html/rfc6902\n * @param model Kubernetes model\n * @param resource The resource to be patched\n * @param data Only the data to be patched on existing resource with the operation, path, and value\n * @param opts The options to pass\n * @returns A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sPatch = (model, resource, data, opts = {}) => {\n    const patches = _.compact(data);\n    if (_.isEmpty(patches)) {\n        return Promise.resolve(resource);\n    }\n    return coFetchJSON.patch(resourceURL(model, Object.assign({\n        ns: resource.metadata.namespace,\n        name: resource.metadata.name,\n    }, opts)), patches, null, null);\n};\n/**\n * It patches any resource in the cluster, based on the provided options.\n * When a client needs to perform the partial update, the client can use k8sPatch.\n * Alternatively, the client can use k8sUpdate to replace an existing resource entirely.\n * See more https://datatracker.ietf.org/doc/html/rfc6902\n * @param options Which are passed as key-value pairs in the map.\n * @param options.model - Kubernetes model\n * @param options.resource - The resource to be patched.\n * @param options.data - Only the data to be patched on existing resource with the operation, path, and value.\n * @param options.path - Appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sPatchResource = adapterFunc(k8sPatch, [\n    'model',\n    'resource',\n    'data',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sDeleteResource} instead. Support for k8sKill will be removed in a future release.\n * It deletes resources from the cluster, based on the provided model, resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with propagationPolicy property in provided model or passed in json.\n * See more https://kubernetes.io/docs/concepts/architecture/garbage-collection/\n * @param model Kubernetes model\n * @param resource The resource to be deleted.\n * @param opts The Options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @param options.json - Can control garbage collection of resource explicitly if provided else will default to model's \"propagationPolicy\".\n * @example\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * @returns A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sKill = (model, resource, opts = {}, requestInit = {}, json = null) => {\n    const { propagationPolicy } = model;\n    const jsonData = json !== null && json !== void 0 ? json : (propagationPolicy && { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy });\n    return coFetchJSON.delete(resourceURL(model, Object.assign({ ns: resource.metadata.namespace, name: resource.metadata.name }, opts)), jsonData, requestInit, null);\n};\n/**\n * It deletes resources from the cluster, based on the provided model and resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with `propagationPolicy` property in provided model or passed in json.\n * @param options which are passed as key-value pair in the map.\n * @param options.model - Kubernetes model\n * @param options.resource - The resource to be deleted.\n * @param options.path - Appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, etc. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @param options.json - Can control garbage collection of resources explicitly if provided else will default to model's `propagationPolicy`.\n * @example\n * ```\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * ```\n * @returns A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n *  */\nexport const k8sDeleteResource = adapterFunc(k8sKill, [\n    'model',\n    'resource',\n    'opts',\n    'requestInit',\n    'json',\n]);\n/**\n * @deprecated Use {@link k8sListResource} instead. Support for k8sList will be removed in a future release.\n * It lists the resources as an array in the cluster, based on the provided model, queryParams(label selector).\n * @param model Kubernetes model\n * @param queryParams The query parameters to be included in the URL and can pass label selector's as well with key \"labelSelector\".\n * @param raw If true then returns raw data i.e if the query is for Pod then resolved resources will not be in an array but a resource will be returned of kind PodList\n * and it will have a key \"item\" which will be an array of Pod kind.\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response with the resources in an array.\n * In case of failure promise gets rejected with HTTP error response.\n * */\nexport const k8sList = (model, queryParams = {}, raw = false, requestInit = {}) => {\n    const query = _.map(_.omit(queryParams, 'ns'), (v, k) => {\n        let newVal;\n        if (k === 'labelSelector') {\n            newVal = selectorToString(v);\n        }\n        return `${encodeURIComponent(k)}=${encodeURIComponent(newVal !== null && newVal !== void 0 ? newVal : v)}`;\n    }).join('&');\n    const listURL = resourceURL(model, { ns: queryParams.ns });\n    return coFetchJSON(`${listURL}?${query}`, 'GET', requestInit, null).then((result) => {\n        var _a;\n        const typedItems = (_a = result.items) === null || _a === void 0 ? void 0 : _a.map((i) => (Object.assign({ kind: model.kind, apiVersion: result.apiVersion }, i)));\n        return raw ? Object.assign(Object.assign({}, result), { items: typedItems }) : typedItems;\n    });\n};\n/**\n * It lists the resources as an array in the cluster, based on the provided options.\n * @param options Which are passed as key-value pairs in the map.\n * @param options.model - Kubernetes model\n * @param options.queryParams - The query parameters to be included in the URL. It can also pass label selectors by using the `labelSelector` key.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, and so forth. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response\n */\nexport const k8sListResource = adapterFunc(k8sList, [\n    'model',\n    'queryParams',\n    'raw',\n    'requestInit',\n]);\n/**\n * Same interface as k8sListResource but returns the sub items.\n * @see K8sListResource\n */\nexport const k8sListResourceItems = (options) => k8sListResource(options).then((response) => {\n    if (Array.isArray(response)) {\n        return response;\n    }\n    return response.items;\n});\n//# sourceMappingURL=k8s-resource.js.map","/**\n * Allows to easily extend a base class to create custom applicative errors.\n *\n * example:\n * ```\n * class HttpError extends CustomError {\n * \tpublic constructor(\n * \t\tpublic code: number,\n * \t\tmessage?: string,\n * \t) {\n * \t\tsuper(message)\n * \t}\n * }\n *\n * new HttpError(404, 'Not found')\n * ```\n */\nexport class CustomError extends Error {\n    constructor(message) {\n        super(message);\n        // set error name as constructor name, make it not enumerable to keep native Error behavior\n        // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_in_constructors\n        Object.defineProperty(this, 'name', {\n            value: new.target.name,\n            enumerable: false,\n            configurable: true,\n        });\n        // Use captureStackTrace when available to remove contructor from stack trace\n        // Add message to the stack trace\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            this.stack = new Error(message).stack;\n        }\n        // fix the extended error prototype chain\n        // because typescript __extends implementation can't\n        // see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexport class ErrorWithCause extends CustomError {\n    constructor(message, cause) {\n        super(message);\n        this.cause = cause;\n    }\n}\n//# sourceMappingURL=custom-error.js.map","import { Map as ImmutableMap } from 'immutable';\nimport { ActionType } from '../actions/core';\n/**\n * Reducer function for the core\n * @param state the reducer state\n * @param action provided associated action type alongwith payload\n * @param action.type type of the action\n * @param action.payload associated payload for the action\n * @see CoreAction\n * @returns The the updated state.\n */\nexport const coreReducer = (state = {\n    user: {},\n    admissionWebhookWarnings: ImmutableMap(),\n}, action) => {\n    switch (action.type) {\n        case ActionType.BeginImpersonate:\n            return Object.assign(Object.assign({}, state), { impersonate: {\n                    kind: action.payload.kind,\n                    name: action.payload.name,\n                    subprotocols: action.payload.subprotocols,\n                } });\n        case ActionType.EndImpersonate: {\n            const stateKeys = Object.keys(state);\n            return stateKeys.reduce((acc, key) => {\n                if (key !== 'impersonate') {\n                    return Object.assign(Object.assign({}, acc), { [key]: state[key] });\n                }\n                return acc;\n            }, {});\n        }\n        case ActionType.SetUser:\n            return Object.assign(Object.assign({}, state), { user: action.payload.userInfo });\n        case ActionType.SetAdmissionWebhookWarning:\n            return Object.assign(Object.assign({}, state), { admissionWebhookWarnings: state.admissionWebhookWarnings.set(action.payload.id, action.payload.warning) });\n        case ActionType.RemoveAdmissionWebhookWarning:\n            return Object.assign(Object.assign({}, state), { admissionWebhookWarnings: state.admissionWebhookWarnings.remove(action.payload.id) });\n        default:\n            return state;\n    }\n};\n//# sourceMappingURL=core.js.map","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\n/**\n * Hook that retrieves all current k8s models from redux.\n *\n * @returns An array with the first item as the list of k8s model and second item as inFlight status\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const [models, inFlight] = UseK8sModels();\n *   return ...\n * }\n * ```\n */\nexport const useK8sModels = () => {\n    var _a, _b, _c;\n    return [\n        (_b = (_a = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'models']))) === null || _a === void 0 ? void 0 : _a.toJS()) !== null && _b !== void 0 ? _b : {},\n        (_c = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'inFlight']))) !== null && _c !== void 0 ? _c : false,\n    ];\n};\n//# sourceMappingURL=useK8sModels.js.map","import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { getReduxIdPayload } from '../../../app/k8s/reducers/k8sSelector';\nimport { getIDAndDispatch, getReduxData, NoModelError } from './k8s-watcher';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\nimport { useK8sModel } from './useK8sModel';\nimport { useModelsLoaded } from './useModelsLoaded';\n/**\n * Hook that retrieves the Kubernetes resource along with their respective status for loaded and error.\n * @param initResource resources need to be watched as key-value pair, wherein key will be unique to resource and value will be options needed to watch for the respective resource.\n * @returns An array with first item as resource(s), second item as loaded status and third item as error state if any.\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const watchRes = {\n        ...\n      }\n *   const [data, loaded, error] = useK8sWatchResource(watchRes)\n *   return ...\n * }\n * ```\n */\nexport const useK8sWatchResource = (initResource) => {\n    const resource = useDeepCompareMemoize(initResource, true);\n    const modelsLoaded = useModelsLoaded();\n    const [k8sModel] = useK8sModel((resource === null || resource === void 0 ? void 0 : resource.groupVersionKind) || (resource === null || resource === void 0 ? void 0 : resource.kind));\n    const reduxID = React.useMemo(() => getIDAndDispatch(resource, k8sModel), [k8sModel, resource]);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        if (reduxID) {\n            dispatch(reduxID.dispatch);\n        }\n        return () => {\n            if (reduxID) {\n                dispatch(k8sActions.stopK8sWatch(reduxID.id));\n            }\n        };\n    }, [dispatch, reduxID]);\n    const resourceK8s = useSelector((state) => reduxID ? getReduxIdPayload(state, reduxID.id) : null);\n    return React.useMemo(() => {\n        if (!resource) {\n            return [undefined, true, undefined];\n        }\n        if (!resourceK8s) {\n            const data = (resource === null || resource === void 0 ? void 0 : resource.isList) ? [] : {};\n            return modelsLoaded && !k8sModel\n                ? [data, true, new NoModelError()]\n                : [data, false, undefined];\n        }\n        const data = getReduxData(resourceK8s.get('data'), resource);\n        const loaded = resourceK8s.get('loaded');\n        const loadError = resourceK8s.get('loadError');\n        return [data, loaded, loadError];\n    }, [resource, resourceK8s, modelsLoaded, k8sModel]);\n};\n//# sourceMappingURL=useK8sWatchResource.js.map","import * as _ from 'lodash';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { CustomError } from '../../error/custom-error';\nimport { getReferenceForModel } from '../k8s-ref';\nexport class NoModelError extends CustomError {\n    constructor() {\n        super('Model does not exist');\n    }\n}\nexport const makeReduxID = (k8sKind, query) => {\n    let qs = '';\n    if (!_.isEmpty(query)) {\n        qs = `---${JSON.stringify(query)}`;\n    }\n    return `${getReferenceForModel(k8sKind || {})}${qs}`;\n};\nexport const makeQuery = (namespace, labelSelector, fieldSelector, name, limit) => {\n    const query = {};\n    if (!_.isEmpty(labelSelector)) {\n        query.labelSelector = labelSelector;\n    }\n    if (!_.isEmpty(namespace)) {\n        query.ns = namespace;\n    }\n    if (!_.isEmpty(name)) {\n        query.name = name;\n    }\n    if (fieldSelector) {\n        query.fieldSelector = fieldSelector;\n    }\n    if (limit) {\n        query.limit = limit;\n    }\n    return query;\n};\nexport const INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL = Symbol('_cachedToArrayResult');\nexport const INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL = Symbol('_cachedToJSONResult');\nexport const getReduxData = (immutableData, resource) => {\n    if (!immutableData) {\n        return null;\n    }\n    if (resource.isList && immutableData.toArray) {\n        if (!immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL]) {\n            immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL] = immutableData\n                .toArray()\n                .map((a) => {\n                if (a.toJSON) {\n                    if (!a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL]) {\n                        a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL] = a.toJSON();\n                    }\n                    return a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL];\n                }\n                return a;\n            });\n        }\n        return immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL];\n    }\n    if (immutableData.toJSON) {\n        if (!immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL]) {\n            immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL] = immutableData.toJSON();\n        }\n        return immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL];\n    }\n    return null;\n};\nexport const getIDAndDispatch = (resource, k8sModel) => {\n    if (!k8sModel || !resource) {\n        return null;\n    }\n    const query = makeQuery(resource.namespace, resource.selector, resource.fieldSelector, resource.name, resource.limit);\n    const id = makeReduxID(k8sModel, query);\n    const dispatch = resource.isList\n        ? k8sActions.watchK8sList(id, query, k8sModel, null, resource.partialMetadata)\n        : k8sActions.watchK8sObject(id, resource.name, resource.namespace, query, k8sModel, resource.partialMetadata);\n    return { id, dispatch };\n};\n//# sourceMappingURL=k8s-watcher.js.map","import * as React from 'react';\nimport * as _ from 'lodash';\nexport const useDeepCompareMemoize = (value, strinfigy) => {\n    const ref = React.useRef();\n    if (strinfigy\n        ? JSON.stringify(value) !== JSON.stringify(ref.current)\n        : !_.isEqual(value, ref.current)) {\n        ref.current = value;\n    }\n    return ref.current;\n};\n//# sourceMappingURL=useDeepCompareMemoize.js.map","import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\n/**\n * Wait until internal models (CRDs) are loaded.\n *\n * Note: When loading is 'in flight' (in progress) when the component\n * that uses this hook is mounted, this hook waits until this is resolved, too.\n */\nexport const useModelsLoaded = () => {\n    const ref = React.useRef(false);\n    const loaded = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'loaded']));\n    const inFlight = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'inFlight']));\n    if (!ref.current && loaded && !inFlight) {\n        ref.current = true;\n    }\n    return ref.current;\n};\n//# sourceMappingURL=useModelsLoaded.js.map","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { transformGroupVersionKindToReference, getReferenceForModel, getGroupVersionKindForReference, } from '../k8s-ref';\nimport { getIDAndDispatch, getReduxData, NoModelError } from './k8s-watcher';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\nimport { getK8sModel } from './useK8sModel';\nimport { useModelsLoaded } from './useModelsLoaded';\nimport { usePrevious } from './usePrevious';\n/**\n * Hook that retrieves the Kubernetes resources along with their respective status for loaded and error.\n * @param initResources resources need to be watched as key-value pair, wherein key will be unique to resource and value will be options needed to watch for the respective resource.\n * @returns A map where keys are as provided in initResouces and value has three properties data, loaded and error.\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const watchResources = {\n        'deployment': {...},\n        'pod': {...}\n        ...\n      }\n *   const {deployment, pod} = useK8sWatchResources(watchResources)\n *   return ...\n * }\n * ```\n */\nexport const useK8sWatchResources = (initResources) => {\n    const resources = useDeepCompareMemoize(initResources, true);\n    const modelsLoaded = useModelsLoaded();\n    const allK8sModels = useSelector((state) => state.k8s.getIn(['RESOURCES', 'models']));\n    const prevK8sModels = usePrevious(allK8sModels);\n    const prevResources = usePrevious(resources);\n    const k8sModelsRef = React.useRef(ImmutableMap());\n    if (prevResources !== resources ||\n        (prevK8sModels !== allK8sModels &&\n            Object.values(resources).some((r) => {\n                const modelReference = transformGroupVersionKindToReference(r.groupVersionKind || r.kind);\n                return (getK8sModel(prevK8sModels, modelReference) !== getK8sModel(allK8sModels, modelReference));\n            }))) {\n        const requiredModels = Object.values(resources).map((r) => transformGroupVersionKindToReference(r.groupVersionKind || r.kind));\n        k8sModelsRef.current = allK8sModels.filter((model) => requiredModels.includes(getReferenceForModel(model)) || requiredModels.includes(model.kind));\n    }\n    const k8sModels = k8sModelsRef.current;\n    const reduxIDs = React.useMemo(() => modelsLoaded\n        ? Object.keys(resources).reduce((ids, key) => {\n            const modelReference = transformGroupVersionKindToReference(resources[key].groupVersionKind || resources[key].kind);\n            const resourceModel = modelReference &&\n                (k8sModels.get(modelReference) ||\n                    k8sModels.get(getGroupVersionKindForReference(modelReference).kind));\n            if (!resourceModel) {\n                ids[key] = {\n                    noModel: true,\n                };\n            }\n            else {\n                const idAndDispatch = getIDAndDispatch(resources[key], resourceModel);\n                if (idAndDispatch) {\n                    ids[key] = idAndDispatch;\n                }\n            }\n            return ids;\n        }, {})\n        : null, [k8sModels, modelsLoaded, resources]);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        const reduxIDKeys = Object.keys(reduxIDs || {});\n        reduxIDKeys.forEach((k) => {\n            if (reduxIDs[k].dispatch) {\n                dispatch(reduxIDs[k].dispatch);\n            }\n        });\n        return () => {\n            reduxIDKeys.forEach((k) => {\n                if (reduxIDs[k].dispatch) {\n                    dispatch(k8sActions.stopK8sWatch(reduxIDs[k].id));\n                }\n            });\n        };\n    }, [dispatch, reduxIDs]);\n    const resourceK8sSelectorCreator = React.useMemo(() => createSelectorCreator(\n    // specifying createSelectorCreator<ImmutableMap<string, K8sKind>> throws type error\n    defaultMemoize, (oldK8s, newK8s) => Object.keys(reduxIDs || {})\n        .filter((k) => !reduxIDs[k].noModel)\n        .every((k) => oldK8s.get(reduxIDs[k].id) === newK8s.get(reduxIDs[k].id))), [reduxIDs]);\n    const resourceK8sSelector = React.useMemo(() => resourceK8sSelectorCreator((state) => state.k8s, (k8s) => k8s), [resourceK8sSelectorCreator]);\n    const resourceK8s = useSelector(resourceK8sSelector);\n    const results = React.useMemo(() => Object.keys(resources).reduce((acc, key) => {\n        if (reduxIDs === null || reduxIDs === void 0 ? void 0 : reduxIDs[key].noModel) {\n            acc[key] = {\n                data: resources[key].isList ? [] : {},\n                loaded: true,\n                loadError: new NoModelError(),\n            };\n        }\n        else if (resourceK8s.has(reduxIDs === null || reduxIDs === void 0 ? void 0 : reduxIDs[key].id)) {\n            const data = getReduxData(resourceK8s.getIn([reduxIDs[key].id, 'data']), resources[key]);\n            const loaded = resourceK8s.getIn([reduxIDs[key].id, 'loaded']);\n            const loadError = resourceK8s.getIn([reduxIDs[key].id, 'loadError']);\n            acc[key] = { data, loaded, loadError };\n        }\n        else {\n            acc[key] = {\n                data: resources[key].isList ? [] : {},\n                loaded: false,\n                loadError: undefined,\n            };\n        }\n        return acc;\n    }, {}), [resources, reduxIDs, resourceK8s]);\n    return results;\n};\n//# sourceMappingURL=useK8sWatchResources.js.map","export { default as useHover } from './useHover';\nexport * from './withCreateConnector';\n","import { isNode, Node, GraphElement } from '@patternfly/react-topology';\nimport { labelForNodeKind } from '@console/shared';\nimport { getResourceKind } from '../../utils/topology-utils';\n\nexport const getChildKinds = (children: GraphElement[]) => {\n  const childNodes = children.filter((n) => isNode(n)) as Node[];\n  const kindsMap = childNodes.reduce((acc, n) => {\n    const kind = getResourceKind(n);\n    if (!acc[kind]) {\n      acc[kind] = [];\n    }\n    acc[kind].push(n);\n    return acc;\n  }, {});\n  const kindKeys = Object.keys(kindsMap).sort((a, b) =>\n    labelForNodeKind(a).localeCompare(labelForNodeKind(b)),\n  );\n\n  return { kindsMap, kindKeys };\n};\n\nexport const sortGroupChildren = (children: GraphElement[]): Node[] => {\n  const childNodes = children.filter((child) => isNode(child)) as Node[];\n  return childNodes\n    .sort((a, b) =>\n      labelForNodeKind(getResourceKind(a)).localeCompare(labelForNodeKind(getResourceKind(b))),\n    )\n    .sort((a, b) => a.getLabel().localeCompare(b.getLabel()));\n};\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { isValidUrl, labelForNodeKind } from '@console/shared';\nimport { showKind, useDisplayFilters } from '../../../filters';\n\ninterface GroupResourcesCellProps {\n  group: Node;\n}\n\nconst GroupResourcesCell: React.FC<GroupResourcesCellProps> = ({ group }) => {\n  const displayFilters = useDisplayFilters();\n  const { groupResources } = group.getData();\n  const shownResources = groupResources.filter((res) =>\n    showKind(res.resourceKind || res.resource?.kind, displayFilters),\n  );\n\n  const childKindsMap = shownResources.reduce((acc, child) => {\n    const kind = child.resourceKind || child.resource?.kind;\n    if (!acc[kind]) {\n      acc[kind] = 0;\n    }\n    acc[kind]++;\n    return acc;\n  }, {});\n  const kindKeys = Object.keys(childKindsMap).sort((a, b) =>\n    labelForNodeKind(a).localeCompare(labelForNodeKind(b)),\n  );\n  return (\n    <DataListCell key=\"resources\" id={`${group.getId()}_resources`}>\n      {kindKeys.map((key) => {\n        let itemIcon;\n        let imageClass;\n        if (imageClass) {\n          itemIcon = (\n            <image\n              className=\"co-m-resource-icon--md\"\n              xlinkHref={isValidUrl(imageClass) ? imageClass : getImageForIconClass(imageClass)}\n            />\n          );\n        } else {\n          itemIcon = <ResourceIcon className=\"co-m-resource-icon--md\" kind={key} />;\n        }\n        return (\n          <span key={key} className=\"odc-topology-list-view__group-resource-count\">\n            {childKindsMap[key]}\n            {itemIcon}\n          </span>\n        );\n      })}\n    </DataListCell>\n  );\n};\n\nexport default observer(GroupResourcesCell);\n","export { default as AlertsCell } from './AlertsCell';\nexport { default as GroupResourcesCell } from './GroupResourcesCell';\nexport * from './CpuCell';\nexport * from './MemoryCell';\nexport * from './StatusCell';\nexport { default as TypedResourceBadgeCell } from './TypedResourceBadgeCell';\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { formatCores } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '../../../utils/topology-utils';\nimport { useMetricStats } from '../../../utils/useMetricStats';\nimport MetricsTooltip from './MetricsTooltip';\n\nimport './MetricsCell.scss';\n\ntype CpuCellComponentProps = {\n  cpuByPod: any;\n  totalCores: number;\n};\n\nconst CpuCellComponent: React.FC<CpuCellComponentProps> = React.memo(({ cpuByPod, totalCores }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-topology-list-view__metrics-cell__detail--cpu\">\n      <MetricsTooltip metricLabel={t('topology~CPU')} byPod={cpuByPod}>\n        <span>\n          <span className=\"odc-topology-list-view__metrics-cell__metric-value\">\n            {formatCores(totalCores)}\n          </span>\n          &nbsp;\n          <span className=\"odc-topology-list-view__metrics-cell__metric-unit\">cores</span>\n        </span>\n      </MetricsTooltip>\n    </div>\n  );\n});\n\ntype CpuCellProps = {\n  item: Node;\n};\n\nconst CpuCell: React.FC<CpuCellProps> = ({ item }) => {\n  const resource = getTopologyResourceObject(item.getData());\n  const memoryStats = useMetricStats(resource);\n\n  return (\n    <DataListCell id={`${item.getId()}_metrics`}>\n      {!memoryStats || !memoryStats.totalBytes || !memoryStats.totalCores ? null : (\n        <CpuCellComponent cpuByPod={memoryStats.cpuByPod} totalCores={memoryStats.totalCores} />\n      )}\n    </DataListCell>\n  );\n};\n\nexport { CpuCell, CpuCellComponent };\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { formatBytesAsMiB } from '@console/internal/components/utils';\nimport { getTopologyResourceObject } from '../../../utils/topology-utils';\nimport { useMetricStats } from '../../../utils/useMetricStats';\nimport MetricsTooltip from './MetricsTooltip';\n\nimport './MemoryCell.scss';\n\ntype MemoryCellProps = {\n  item: Node;\n};\n\ntype MemoryCellComponentProps = {\n  totalBytes: number;\n  memoryByPod: any;\n};\n\nconst MemoryCellComponent: React.FC<MemoryCellComponentProps> = React.memo(\n  ({ totalBytes, memoryByPod }) => (\n    <div className=\"odc-topology-list-view__metrics-cell__detail--memory\">\n      <MetricsTooltip metricLabel=\"Memory\" byPod={memoryByPod}>\n        <span>\n          <span className=\"odc-topology-list-view__metrics-cell__metric-value\">\n            {formatBytesAsMiB(totalBytes)}\n          </span>\n          &nbsp;\n          <span className=\"odc-topology-list-view__metrics-cell__metric-unit\">MiB</span>\n        </span>\n      </MetricsTooltip>\n    </div>\n  ),\n);\n\nconst MemoryCell: React.FC<MemoryCellProps> = ({ item }) => {\n  const resource = getTopologyResourceObject(item.getData());\n  const memoryStats = useMetricStats(resource);\n\n  return (\n    <DataListCell id={`${item.getId()}_memory`}>\n      {!memoryStats || !memoryStats.totalBytes || !memoryStats.totalCores ? null : (\n        <MemoryCellComponent\n          totalBytes={memoryStats.totalBytes}\n          memoryByPod={memoryStats.memoryByPod}\n        />\n      )}\n    </DataListCell>\n  );\n};\n\nexport { MemoryCell, MemoryCellComponent };\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { resourceObjPath } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { K8sResourceKind, PodKind, podPhase } from '@console/internal/module/k8s';\nimport { usePodsWatcher, PodRCData } from '@console/shared';\nimport { getTopologyResourceObject } from '../../../utils/topology-utils';\n\nimport './StatusCell.scss';\n\ntype StatusCellResourceLinkProps = {\n  desired: number;\n  ready: number;\n  resource: K8sResourceKind;\n};\n\nconst StatusCellResourceLink: React.FC<StatusCellResourceLinkProps> = ({\n  desired = 0,\n  ready = 0,\n  resource,\n}) => {\n  const { t } = useTranslation();\n  const href = `${resourceObjPath(resource, resource.kind)}/pods`;\n  return (\n    <Link to={href}>\n      {t('topology~{{ready, number}} of {{count, number}} Pod', { ready, count: desired })}\n    </Link>\n  );\n};\n\ninterface StatusCellResourceStatus {\n  obj: K8sResourceKind;\n  podData: PodRCData;\n}\n\nconst StatusCellResourceStatus: React.FC<StatusCellResourceStatus> = ({ obj, podData }) => {\n  const { t } = useTranslation();\n  if (obj.kind === DaemonSetModel.kind) {\n    return (\n      <StatusCellResourceLink\n        desired={obj?.status?.desiredNumberScheduled}\n        ready={obj?.status?.currentNumberScheduled}\n        resource={obj}\n      />\n    );\n  }\n  if (obj.spec?.replicas === undefined) {\n    const href = `${resourceObjPath(obj, obj.kind)}/pods`;\n    const filteredPods = podData.pods?.filter((p) => podPhase(p as PodKind) !== 'Completed') ?? [];\n    if (!filteredPods.length) {\n      return null;\n    }\n    return <Link to={href}>{t('topology~{{length}} Pods', { length: filteredPods.length })}</Link>;\n  }\n\n  return podData.isRollingOut ? (\n    <span className=\"text-muted\">{t('topology~Rollout in progress...')}</span>\n  ) : (\n    <StatusCellResourceLink\n      desired={obj.spec.replicas}\n      ready={obj.status.replicas}\n      resource={podData.current ? podData.current.obj : obj}\n    />\n  );\n};\n\ntype StatusProps = {\n  item: Node;\n};\n\nconst StatusCell: React.FC<StatusProps> = ({ item }) => {\n  const resource = getTopologyResourceObject(item.getData());\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n\n  return (\n    <DataListCell id={`${item.getId()}_status`}>\n      <div className=\"odc-topology-list-view__detail--status\">\n        {loaded && !loadError ? (\n          <StatusCellResourceStatus obj={resource} podData={podData} />\n        ) : null}\n      </div>\n    </DataListCell>\n  );\n};\n\nexport { StatusCell, StatusCellResourceStatus };\n","let config;\n/**\n * Set the {@link UtilsConfig} reference.\n *\n * This must be done before using any of the Kubernetes utilities.\n */\nexport const setUtilsConfig = (c) => {\n    if (config !== undefined) {\n        throw new Error('setUtilsConfig has already been called');\n    }\n    config = Object.freeze(Object.assign({}, c));\n};\n/**\n * Get the {@link UtilsConfig} reference.\n *\n * Throws an error if the reference isn't already set.\n */\nexport const getUtilsConfig = () => {\n    if (config === undefined) {\n        throw new Error('setUtilsConfig has not been called');\n    }\n    return config;\n};\n//# sourceMappingURL=configSetup.js.map","export * from './core';\n//# sourceMappingURL=index.js.map","import { CustomError } from './custom-error';\n/**\n * Http error\n *\n * Usage: throw HttpError.fromCode(404)\n */\nexport class HttpError extends CustomError {\n    constructor(message, code, response, json) {\n        super(message);\n        this.code = code;\n        this.response = response;\n        this.json = json;\n    }\n    static fromCode(code) {\n        return new HttpError(HttpError.messages[code], code);\n    }\n}\nHttpError.messages = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Payload Too Large',\n    414: 'URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Range Not Satisfiable',\n    417: 'Expectation Failed',\n    418: \"I'm a teapot\",\n    421: 'Misdirected Request',\n    426: 'Upgrade Required',\n    428: 'Precondition Required',\n    429: 'Too Many Requests',\n    431: 'Request Header Fields Too Large',\n    451: 'Unavailable For Legal Reasons',\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n    506: 'Variant Also Negotiates',\n    510: 'Not Extended',\n    511: 'Network Authentication Required', // RFC 6585\n};\nexport class TimeoutError extends CustomError {\n    constructor(url, ms) {\n        super(`Call to ${url} timed out after ${ms}ms.`);\n        this.url = url;\n        this.ms = ms;\n    }\n}\nexport class IncompleteDataError extends CustomError {\n    constructor(labels) {\n        super(`Could not fetch all data. This data are missing: ${labels.join(', ')}.`);\n        this.labels = labels;\n    }\n}\nexport class RetryError extends CustomError {\n}\n//# sourceMappingURL=http-error.js.map","export { coreReducer } from './core';\nexport * from './coreSelectors';\n//# sourceMappingURL=index.js.map","export const k8sBasePath = `${window.SERVER_FLAGS.basePath}api/kubernetes`;\n//# sourceMappingURL=k8s.js.map","const createURL = (host, path) => {\n    let url;\n    if (host === 'auto') {\n        if (window.location.protocol === 'https:') {\n            url = 'wss://';\n        }\n        else {\n            url = 'ws://';\n        }\n        url += window.location.host;\n    }\n    else {\n        url = host;\n    }\n    if (path) {\n        url += path;\n    }\n    return url;\n};\n/**\n * @class WebSocket factory and utility wrapper.\n */\nexport class WSFactory {\n    /**\n     * @param id - unique id for the WebSocket.\n     * @param options - websocket options to initate the WebSocket with.\n     */\n    constructor(id, options) {\n        this.id = id;\n        this.options = options;\n        this.bufferMax = options.bufferMax || 0;\n        this.paused = false;\n        this.handlers = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n            destroy: [],\n            bulkmessage: [],\n        };\n        this.connect();\n        if (this.bufferMax) {\n            this.flushCanceler = setInterval(this.flushMessageBuffer.bind(this), this.options.bufferFlushInterval || 500);\n        }\n    }\n    reconnect() {\n        if (this.connectionAttempt || this.state === 'destroyed') {\n            return;\n        }\n        let delay = 1000;\n        const attempt = () => {\n            if (!this.options.reconnect || this.state === 'open') {\n                clearTimeout(this.connectionAttempt);\n                this.connectionAttempt = null;\n                return;\n            }\n            if (this.options.timeout && delay > this.options.timeout) {\n                clearTimeout(this.connectionAttempt);\n                this.connectionAttempt = null;\n                this.destroy();\n                return;\n            }\n            this.connect();\n            delay = Math.round(Math.min(1.5 * delay, 60000));\n            this.connectionAttempt = setTimeout(attempt, delay);\n            // eslint-disable-next-line no-console\n            console.log(`attempting reconnect in ${delay / 1000} seconds...`);\n        };\n        this.connectionAttempt = setTimeout(attempt, delay);\n    }\n    connect() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.state = 'init';\n        this.messageBuffer = [];\n        const url = createURL(this.options.host, this.options.path);\n        try {\n            this.ws = new WebSocket(url, this.options.subprotocols);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error creating websocket:', e);\n            this.reconnect();\n            return;\n        }\n        this.ws.onopen = function () {\n            // eslint-disable-next-line no-console\n            console.log(`websocket open: ${that.id}`);\n            that.state = 'open';\n            that.triggerEvent('open', undefined);\n            if (that.connectionAttempt) {\n                clearTimeout(that.connectionAttempt);\n                that.connectionAttempt = null;\n            }\n        };\n        this.ws.onclose = function (evt) {\n            // eslint-disable-next-line no-console\n            console.log(`websocket closed: ${that.id}`, evt);\n            that.state = 'closed';\n            that.triggerEvent('close', evt);\n            that.reconnect();\n        };\n        this.ws.onerror = function (evt) {\n            // eslint-disable-next-line no-console\n            console.log(`websocket error: ${that.id}`);\n            that.state = 'error';\n            that.triggerEvent('error', evt);\n        };\n        this.ws.onmessage = function (evt) {\n            var _a;\n            const msg = ((_a = that.options) === null || _a === void 0 ? void 0 : _a.jsonParse) ? JSON.parse(evt.data) : evt.data;\n            // In some browsers, onmessage can fire after onclose/error. Don't update state to be incorrect.\n            if (that.state !== 'destroyed' && that.state !== 'closed') {\n                that.state = 'open';\n            }\n            that.triggerEvent('message', msg);\n        };\n    }\n    registerHandler(type, fn) {\n        if (this.state === 'destroyed') {\n            return;\n        }\n        this.handlers[type].push(fn);\n    }\n    /**\n     * Invoke all registered handler callbacks for a given event type.\n     */\n    invokeHandlers(type, data) {\n        const handlers = this.handlers[type];\n        if (!handlers) {\n            return;\n        }\n        handlers.forEach(function (h) {\n            try {\n                h(data);\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                console.error('WS handling failed:', e);\n            }\n        });\n    }\n    /**\n     * Triggers event to be buffered or invoked depending on config.\n     */\n    triggerEvent(type, event) {\n        if (this.state === 'destroyed') {\n            return;\n        }\n        // Only buffer \"message\" events, so \"error\" and \"close\" etc can pass thru.\n        if (this.bufferMax && type === 'message') {\n            this.messageBuffer.push(event);\n            if (this.messageBuffer.length > this.bufferMax) {\n                this.messageBuffer.shift();\n            }\n            return;\n        }\n        this.invokeHandlers(type, event);\n    }\n    onmessage(fn) {\n        this.registerHandler('message', fn);\n        return this;\n    }\n    onbulkmessage(fn) {\n        this.registerHandler('bulkmessage', fn);\n        return this;\n    }\n    onerror(fn) {\n        this.registerHandler('error', fn);\n        return this;\n    }\n    onopen(fn) {\n        this.registerHandler('open', fn);\n        return this;\n    }\n    onclose(fn) {\n        this.registerHandler('close', fn);\n        return this;\n    }\n    ondestroy(fn) {\n        this.registerHandler('destroy', fn);\n        return this;\n    }\n    flushMessageBuffer() {\n        if (this.paused) {\n            return;\n        }\n        if (!this.messageBuffer.length) {\n            return;\n        }\n        if (this.handlers.bulkmessage.length) {\n            this.invokeHandlers('bulkmessage', this.messageBuffer);\n        }\n        else {\n            this.messageBuffer.forEach((e) => this.invokeHandlers('message', e));\n        }\n        this.messageBuffer = [];\n    }\n    /**\n     *  Pausing prevents any buffer flushing until unpaused.\n     */\n    pause() {\n        this.paused = true;\n    }\n    unpause() {\n        this.paused = false;\n        this.flushMessageBuffer();\n    }\n    isPaused() {\n        return this.paused;\n    }\n    getState() {\n        return this.state;\n    }\n    bufferSize() {\n        return this.messageBuffer.length;\n    }\n    destroy(eventData) {\n        // eslint-disable-next-line no-console\n        console.log(`destroying websocket: ${this.id}`);\n        if (this.state === 'destroyed') {\n            return;\n        }\n        try {\n            if (this.ws) {\n                this.ws.close();\n            }\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error while close WS socket', e);\n        }\n        clearInterval(this.flushCanceler);\n        clearTimeout(this.connectionAttempt);\n        if (this.ws) {\n            this.ws.onopen = null;\n            this.ws.onclose = null;\n            this.ws.onerror = null;\n            this.ws.onmessage = null;\n            delete this.ws;\n        }\n        try {\n            this.triggerEvent('destroy', eventData);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error while trigger destroy event for WS socket', e);\n        }\n        this.state = 'destroyed';\n        this.messageBuffer = [];\n    }\n    send(data) {\n        this.ws && this.ws.send(data);\n    }\n}\n//# sourceMappingURL=ws-factory.js.map","export const getReduxIdPayload = (state, reduxId) => state.k8s.get(reduxId);\nexport const getK8sDataById = (state, id) => state.getIn([id, 'data']);\n//# sourceMappingURL=k8sSelector.js.map","import * as React from 'react';\nexport const usePrevious = (value, deps) => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n        ref.current = value;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps || [value]);\n    return ref.current;\n};\n//# sourceMappingURL=usePrevious.js.map","import * as React from 'react';\nimport { QuickStart } from '@patternfly/quickstarts';\nimport { useTranslation } from 'react-i18next';\nimport QuickStartsLoader from '@console/app/src/components/quick-starts/loader/QuickStartsLoader';\nimport {\n  QuickSearchController,\n  QuickSearchProviders,\n  CatalogService,\n  CatalogServiceProvider,\n} from '@console/shared';\nimport { useTransformedQuickStarts } from './topology-quick-search-utils';\n\ninterface QuickSearchProps {\n  namespace: string;\n  viewContainer?: HTMLElement;\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}\n\nconst Contents: React.FC<\n  {\n    quickStarts: QuickStart[];\n    quickStartsLoaded: boolean;\n    catalogService: CatalogService;\n    catalogServiceSample: CatalogService;\n  } & QuickSearchProps\n> = ({\n  quickStarts,\n  quickStartsLoaded,\n  catalogService,\n  catalogServiceSample,\n  namespace,\n  viewContainer,\n  isOpen,\n  setIsOpen,\n}) => {\n  const { t } = useTranslation();\n\n  const DEFAULT_LIMIT_ITEM_COUNT = 5;\n  const quickStartItems = useTransformedQuickStarts(quickStarts);\n  const quickSearchProviders: QuickSearchProviders = [\n    {\n      catalogType: 'devCatalog',\n      items: catalogService.items,\n      loaded: catalogService.loaded,\n      getCatalogURL: (searchTerm: string, ns: string) => `/catalog/ns/${ns}?keyword=${searchTerm}`,\n      // t('topology~View all developer catalog items ({{itemCount, number}})')\n      catalogLinkLabel: 'topology~View all developer catalog items ({{itemCount, number}})',\n      extensions: catalogService.catalogExtensions,\n    },\n    {\n      catalogType: 'quickStarts',\n      items: quickStartItems,\n      loaded: quickStartsLoaded,\n      getCatalogURL: (searchTerm: string) => `/quickstart?keyword=${searchTerm}`,\n      // t('topology~View all quick starts ({{itemCount, number}})'\n      catalogLinkLabel: 'topology~View all quick starts ({{itemCount, number}})',\n      extensions: catalogService.catalogExtensions,\n    },\n    {\n      catalogType: 'Samples',\n      items: catalogServiceSample.items,\n      loaded: catalogServiceSample.loaded,\n      getCatalogURL: (searchTerm: string, ns: string) => `/samples/ns/${ns}?keyword=${searchTerm}`,\n      // t('topology~View all samples ({{itemCount, number}})'\n      catalogLinkLabel: 'topology~View all samples ({{itemCount, number}})',\n      extensions: catalogService.catalogExtensions,\n    },\n  ];\n  return (\n    <QuickSearchController\n      quickSearchProviders={quickSearchProviders}\n      allItemsLoaded={catalogService.loaded && quickStartsLoaded}\n      searchPlaceholder={`${t('topology~Add to Project')}...`}\n      namespace={namespace}\n      viewContainer={viewContainer}\n      isOpen={isOpen}\n      limitItemCount={DEFAULT_LIMIT_ITEM_COUNT}\n      setIsOpen={setIsOpen}\n    />\n  );\n};\n\nconst TopologyQuickSearch: React.FC<QuickSearchProps> = ({\n  namespace,\n  viewContainer,\n  isOpen,\n  setIsOpen,\n}) => {\n  return (\n    <CatalogServiceProvider namespace={namespace} catalogId=\"dev-catalog\">\n      {(catalogService: CatalogService) => (\n        <CatalogServiceProvider namespace={namespace} catalogId=\"samples-catalog\">\n          {(catalogServiceSample: CatalogService) => (\n            <QuickStartsLoader>\n              {(quickStarts, quickStartsLoaded) => (\n                <Contents\n                  {...{\n                    namespace,\n                    viewContainer,\n                    isOpen,\n                    setIsOpen,\n                    catalogService,\n                    catalogServiceSample,\n                    quickStarts,\n                    quickStartsLoaded,\n                  }}\n                />\n              )}\n            </QuickStartsLoader>\n          )}\n        </CatalogServiceProvider>\n      )}\n    </CatalogServiceProvider>\n  );\n};\n\nexport default React.memo(TopologyQuickSearch);\n","import * as React from 'react';\nimport { QuickStart } from '@patternfly/quickstarts';\nimport { TextList, TextListItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk';\nimport { useQuickStartContext } from '@console/shared/src/hooks/useQuickStartContext';\n\nexport const useTransformedQuickStarts = (quickStarts: QuickStart[]): CatalogItem[] => {\n  const { setActiveQuickStart } = useQuickStartContext();\n  const { t } = useTranslation();\n  return React.useMemo(\n    () =>\n      quickStarts.map((qs: QuickStart) => {\n        const prerequisites = qs.spec.prerequisites?.filter((p) => p);\n        const description = (\n          <>\n            <p>{qs.spec.description}</p>\n            {prerequisites?.length > 0 && (\n              <>\n                <h5>{t('topology~Prerequisites')}</h5>\n                <TextList>\n                  {prerequisites.map((prerequisite, index) => (\n                    // eslint-disable-next-line react/no-array-index-key\n                    <TextListItem key={index}>{prerequisite}</TextListItem>\n                  ))}\n                </TextList>\n              </>\n            )}\n          </>\n        );\n        return {\n          name: qs.spec.displayName,\n          type: t('topology~Quick Starts'),\n          uid: qs.metadata.uid,\n          cta: {\n            callback: () => setActiveQuickStart(qs.metadata.name, qs.spec.tasks?.length),\n            label: t('topology~Start'),\n          },\n          icon: {\n            url: qs.spec.icon as string,\n          },\n          description,\n        };\n      }),\n    [t, quickStarts, setActiveQuickStart],\n  );\n};\n","import * as React from 'react';\nimport { Tooltip, Button } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport QuickSearchIcon from '@console/shared/src/components/quick-search/QuickSearchIcon';\nimport './TopologyQuickSearchButton.scss';\n\ninterface QuickSearchButtonProps {\n  onClick: () => void;\n}\n\nconst TopologyQuickSearchButton: React.FC<QuickSearchButtonProps> = ({ onClick }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip position=\"right\" content={t('topology~Add to Project')}>\n      <Button\n        className=\"odc-topology-quick-search-button\"\n        data-test=\"quick-search\"\n        variant=\"plain\"\n        onClick={(e) => {\n          e.stopPropagation();\n          onClick();\n        }}\n        aria-label={t('topology~Quick search button')}\n      >\n        <QuickSearchIcon />\n      </Button>\n    </Tooltip>\n  );\n};\n\nexport default TopologyQuickSearchButton;\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  useK8sWatchResources,\n  YellowExclamationTriangleIcon,\n} from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport { resourcePathFromModel } from '@console/internal/components/utils/resource-link';\nimport { AppliedClusterResourceQuotaModel, ResourceQuotaModel } from '@console/internal/models';\nimport { AppliedClusterResourceQuotaKind, ResourceQuotaKind } from '@console/internal/module/k8s';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { checkQuotaLimit } from '@console/topology/src/components/utils/checkResourceQuota';\n\nexport interface ResourceQuotaAlertProps {\n  namespace: string;\n}\n\nexport const ResourceQuotaAlert: React.FC<ResourceQuotaAlertProps> = ({ namespace }) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [warningMessageFlag, setWarningMessageFlag] = React.useState<boolean>();\n  const [resourceQuotaName, setResourceQuotaName] = React.useState(null);\n  const [resourceQuotaKind, setResourceQuotaKind] = React.useState(null);\n\n  const watchedResources = React.useMemo(\n    () => ({\n      resourcequotas: {\n        groupVersionKind: {\n          kind: ResourceQuotaModel.kind,\n          version: ResourceQuotaModel.apiVersion,\n        },\n        namespace,\n        isList: true,\n      },\n      appliedclusterresourcequotas: {\n        groupVersionKind: {\n          kind: AppliedClusterResourceQuotaModel.kind,\n          version: AppliedClusterResourceQuotaModel.apiVersion,\n          group: AppliedClusterResourceQuotaModel.apiGroup,\n        },\n        namespace,\n        isList: true,\n      },\n    }),\n    [namespace],\n  );\n\n  const { resourcequotas, appliedclusterresourcequotas } = useK8sWatchResources<{\n    resourcequotas: ResourceQuotaKind[];\n    appliedclusterresourcequotas: AppliedClusterResourceQuotaKind[];\n  }>(watchedResources);\n\n  const [totalRQatQuota = [], quotaName, quotaKind] = React.useMemo(\n    () =>\n      resourcequotas.loaded && !resourcequotas.loadError\n        ? checkQuotaLimit(resourcequotas.data)\n        : [],\n    [resourcequotas],\n  );\n\n  const [totalACRQatQuota = [], clusterRQName, clusterRQKind] = React.useMemo(\n    () =>\n      appliedclusterresourcequotas.loaded && !appliedclusterresourcequotas.loadError\n        ? checkQuotaLimit(appliedclusterresourcequotas.data)\n        : [],\n    [appliedclusterresourcequotas],\n  );\n\n  let totalResourcesAtQuota = React.useMemo(() => [...totalRQatQuota, ...totalACRQatQuota], [\n    totalRQatQuota,\n    totalACRQatQuota,\n  ]);\n  totalResourcesAtQuota = totalResourcesAtQuota.filter((resourceAtQuota) => resourceAtQuota !== 0);\n\n  React.useEffect(() => {\n    if (totalResourcesAtQuota.length === 1) {\n      setResourceQuotaName(quotaName || clusterRQName);\n      setResourceQuotaKind(quotaKind || clusterRQKind);\n    } else {\n      setResourceQuotaName(null);\n      setResourceQuotaKind(null);\n    }\n  }, [clusterRQKind, clusterRQName, totalResourcesAtQuota, quotaKind, quotaName]);\n\n  React.useEffect(() => {\n    if (totalResourcesAtQuota.length > 0) {\n      setWarningMessageFlag(true);\n    } else {\n      setWarningMessageFlag(false);\n    }\n  }, [totalResourcesAtQuota]);\n\n  const getRedirectLink = () => {\n    if (resourceQuotaName && resourceQuotaKind === AppliedClusterResourceQuotaModel.kind) {\n      return resourcePathFromModel(AppliedClusterResourceQuotaModel, resourceQuotaName, namespace);\n    }\n    if (resourceQuotaName) {\n      return resourcePathFromModel(ResourceQuotaModel, resourceQuotaName, namespace);\n    }\n    return resourcePathFromModel(ResourceQuotaModel, null, namespace);\n  };\n\n  const onResourceQuotaLinkClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Label Clicked');\n  };\n\n  return (\n    <>\n      {warningMessageFlag && resourcequotas.loaded && appliedclusterresourcequotas.loaded ? (\n        <Label color=\"orange\" icon={<YellowExclamationTriangleIcon />}>\n          <Link\n            to={getRedirectLink()}\n            data-test=\"resource-quota-warning\"\n            onClick={onResourceQuotaLinkClick}\n          >\n            {t('devconsole~{{count}} resource reached quota', {\n              count: totalResourcesAtQuota.reduce((a, b) => a + b, 0),\n            })}\n          </Link>\n        </Label>\n      ) : null}\n    </>\n  );\n};\n\nexport default ResourceQuotaAlert;\n","import { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\nimport { ResourceQuotaModel } from '@console/internal/models';\n\ntype ResourceQuotaReturnItems = [number[], string, string];\n\nexport const checkQuotaLimit = (resourceQuotas: any): ResourceQuotaReturnItems => {\n  let quotaName = '';\n  let quotaKind = '';\n  const resourceQuotaResources = resourceQuotas.map((quota) => {\n    let resourcesAtQuota;\n    if (quota?.kind === ResourceQuotaModel.kind) {\n      resourcesAtQuota = Object.keys(quota?.status?.hard || {}).reduce(\n        (acc, resource) =>\n          getUsedPercentage(quota?.status?.hard[resource], quota?.status?.used?.[resource]) >= 100\n            ? acc + 1\n            : acc,\n        0,\n      );\n    } else {\n      resourcesAtQuota = Object.keys(quota?.status?.total?.hard || {}).reduce(\n        (acc, resource) =>\n          getUsedPercentage(\n            quota?.status?.total?.hard[resource],\n            quota?.status?.total?.used?.[resource],\n          ) >= 100\n            ? acc + 1\n            : acc,\n        0,\n      );\n    }\n\n    if (resourcesAtQuota > 0) {\n      quotaName = quota.metadata.name;\n      quotaKind = quota.kind;\n    }\n    return resourcesAtQuota;\n  });\n  return [resourceQuotaResources, quotaName, quotaKind];\n};\n","import * as React from 'react';\nimport { Button, AlertVariant, Flex, FlexItem } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport {\n  ModalTitle,\n  ModalBody,\n  ModalComponentProps,\n  ModalFooter,\n  createModalLauncher,\n} from '@console/internal/components/factory/modal';\nimport { dateTimeFormatter } from '@console/internal/components/utils/datetime';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  USERSETTINGS_PREFIX,\n  useUserSettings,\n  TOAST_TIMEOUT_DEFAULT,\n  TOAST_TIMEOUT_LONG,\n} from '@console/shared/src';\nimport { ToastContextType } from '@console/shared/src/components/toast/ToastContext';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport {\n  createExportResource,\n  getExportAppData,\n  getExportResource,\n  killExportResource,\n} from '../../utils/export-app-utils';\nimport ExportViewLogButton from './ExportViewLogButton';\nimport { ExportAppUserSettings } from './types';\n\nexport type ExportApplicationModalProps = ModalComponentProps & {\n  name: string;\n  namespace: string;\n  toast?: ToastContextType;\n  exportResource?: K8sResourceKind;\n};\n\nexport const ExportApplicationModal: React.FC<ExportApplicationModalProps> = (props) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const { cancel, name, namespace, exportResource, toast } = props;\n  const [startTime, setStartTime] = React.useState<string>(null);\n  const [errMessage, setErrMessage] = React.useState<string>('');\n  const [exportAppToast, setExportAppToast] = useUserSettings<ExportAppUserSettings>(\n    `${USERSETTINGS_PREFIX}.exportApp`,\n    {},\n    true,\n  );\n\n  React.useEffect(() => {\n    if (exportResource && exportResource.status?.completed !== true) {\n      setStartTime(dateTimeFormatter().format(new Date(exportResource.metadata.creationTimestamp)));\n    }\n  }, [exportResource]);\n\n  const createExportCR = async () => {\n    try {\n      const exportRes = await createExportResource(getExportAppData(name, namespace));\n      fireTelemetryEvent('Export Application Started');\n      const key = `${namespace}-${name}`;\n      const exportAppToastConfig = {\n        ...exportAppToast,\n        [key]: {\n          groupVersionKind: getGroupVersionKindForResource(exportRes),\n          uid: exportRes.metadata.uid,\n          name,\n          namespace,\n        },\n      };\n      toast?.addToast({\n        variant: AlertVariant.info,\n        title: t('topology~Export application'),\n        content: (\n          <>\n            <Trans t={t} ns=\"topology\">\n              Export of resources in <strong>{{ namespace }}</strong> has started.\n            </Trans>\n            <ExportViewLogButton name={name} namespace={namespace} />\n          </>\n        ),\n        dismissible: true,\n        timeout: TOAST_TIMEOUT_LONG,\n      });\n      setExportAppToast(exportAppToastConfig);\n    } catch (error) {\n      toast?.addToast({\n        variant: AlertVariant.danger,\n        title: t('topology~Export application'),\n        content: (\n          <Trans t={t} ns=\"topology\">\n            Export of resources in <strong>{{ namespace }}</strong> has failed with error:{' '}\n            {error.message}\n          </Trans>\n        ),\n        dismissible: true,\n        timeout: TOAST_TIMEOUT_DEFAULT,\n      });\n    }\n  };\n\n  const killExportCR = async (): Promise<boolean> => {\n    if (exportResource) {\n      await killExportResource(exportResource);\n    }\n    return true;\n  };\n\n  const restartExportCR = async (): Promise<boolean> => {\n    try {\n      if (exportResource) {\n        await killExportResource(exportResource);\n      }\n      const exportRes = await getExportResource(name, namespace);\n      if (exportRes) {\n        setTimeout(createExportCR, 2000);\n      } else {\n        await createExportCR();\n      }\n    } catch (err) {\n      createExportCR().catch((createError) =>\n        // eslint-disable-next-line no-console\n        console.warn('Could not createExportCR:', createError),\n      );\n    }\n    return true;\n  };\n\n  const handleStartExport = async () => {\n    try {\n      if (exportResource && exportResource.status?.completed) {\n        await killExportResource(exportResource);\n        const exportAppToastConfig = _.omit(exportAppToast, `${namespace}-${name}`);\n        setExportAppToast(exportAppToastConfig);\n        await createExportCR();\n      } else {\n        await createExportCR();\n      }\n    } catch (error) {\n      createExportCR().catch((createError) =>\n        // eslint-disable-next-line no-console\n        console.warn('Could not createExportCR:', createError),\n      );\n    }\n    cancel();\n  };\n\n  const handleCancel = async () => {\n    try {\n      await killExportCR();\n      cancel();\n    } catch (err) {\n      setErrMessage(err.message);\n    }\n  };\n\n  const handleRestart = async () => {\n    try {\n      await restartExportCR();\n      cancel();\n    } catch (err) {\n      setErrMessage(err.message);\n    }\n  };\n  const exportInProgress = exportResource && exportResource.status?.completed !== true;\n\n  return (\n    <div className=\"modal-content\" data-test=\"export-application-modal\">\n      <ModalTitle>{t('topology~Export Application')}</ModalTitle>\n      <ModalBody>\n        {exportInProgress ? (\n          startTime ? (\n            <Trans t={t} ns=\"topology\">\n              Application export in <strong>{{ namespace }}</strong> is in progress. Started at{' '}\n              {{ startTime }}.\n            </Trans>\n          ) : (\n            <Trans t={t} ns=\"topology\">\n              Application export in <strong>{{ namespace }}</strong> is in progress.\n            </Trans>\n          )\n        ) : (\n          <Trans t={t} ns=\"topology\">\n            Do you want to export your application?\n          </Trans>\n        )}\n      </ModalBody>\n      <ModalFooter inProgress={false} errorMessage={errMessage}>\n        <Flex justifyContent={{ default: 'justifyContentFlexEnd' }}>\n          <FlexItem>\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              data-test={exportInProgress ? 'export-cancel-btn' : 'cancel-btn'}\n              onClick={() => (exportInProgress ? handleCancel() : cancel())}\n            >\n              {exportInProgress ? t('topology~Cancel Export') : t('topology~Cancel')}\n            </Button>\n          </FlexItem>\n          {exportInProgress && (\n            <>\n              <FlexItem>\n                <Button\n                  type=\"button\"\n                  variant=\"secondary\"\n                  data-test=\"export-restart-btn\"\n                  onClick={handleRestart}\n                >\n                  {t('topology~Restart Export')}\n                </Button>\n              </FlexItem>\n              <FlexItem>\n                <ExportViewLogButton name={name} namespace={namespace} onViewLog={cancel} />\n              </FlexItem>\n            </>\n          )}\n          <FlexItem>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              data-test={\n                exportResource && exportResource.status?.completed !== true\n                  ? 'export-close-btn'\n                  : 'close-btn'\n              }\n              onClick={() =>\n                exportResource && exportResource.status?.completed !== true\n                  ? cancel()\n                  : handleStartExport()\n              }\n            >\n              {t('topology~OK')}\n            </Button>\n          </FlexItem>\n        </Flex>\n      </ModalFooter>\n    </div>\n  );\n};\n\nexport const exportApplicationModal = createModalLauncher<ExportApplicationModalProps>(\n  ExportApplicationModal,\n);\n\nexport const handleExportApplication = async (\n  name: string,\n  namespace: string,\n  toast: ToastContextType,\n) => {\n  try {\n    const exportRes = await getExportResource(name, namespace);\n    exportApplicationModal({\n      name,\n      namespace,\n      exportResource: exportRes,\n      toast,\n    });\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Error while getting export resource:', err);\n    exportApplicationModal({\n      name,\n      namespace,\n      toast,\n    });\n  }\n};\n","import { k8sCreate, k8sGet, k8sKill, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ExportModel } from '../models/gitops-primer';\n\nexport const getExportAppData = (name: string, namespace: string) => {\n  return {\n    apiVersion: `${ExportModel.apiGroup}/${ExportModel.apiVersion}`,\n    kind: ExportModel.kind,\n    metadata: {\n      name,\n      namespace,\n    },\n    spec: {\n      method: 'download',\n    },\n  };\n};\n\nexport const createExportResource = (res: K8sResourceKind) => k8sCreate(ExportModel, res);\n\nexport const getExportResource = (name: string, namespace: string) =>\n  k8sGet(ExportModel, name, namespace);\n\nexport const killExportResource = (res: K8sResourceKind) => k8sKill(ExportModel, res);\n","import * as React from 'react';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePath, history } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { JobModel, PodModel } from '@console/internal/models';\nimport { PodKind, JobKind } from '@console/internal/module/k8s';\nimport { isModifiedEvent } from '@console/shared';\nimport { EXPORT_JOB_PREFIX } from '../../const';\n\ninterface ExportViewLogButtonProps {\n  name: string;\n  namespace: string;\n  onViewLog?: () => void;\n}\n\nconst ExportViewLogButton: React.FC<ExportViewLogButtonProps> = ({\n  name,\n  namespace,\n  onViewLog,\n}) => {\n  const { t } = useTranslation();\n  const [job, jobLoaded] = useK8sWatchResource<JobKind>({\n    kind: JobModel.kind,\n    name: EXPORT_JOB_PREFIX + name,\n    namespace,\n    isList: false,\n  });\n\n  const podResource = React.useMemo(\n    () =>\n      jobLoaded && job?.metadata\n        ? {\n            kind: PodModel.kind,\n            isList: false,\n            namespace: job.metadata.namespace,\n            selector: job.spec.selector,\n          }\n        : null,\n    [job, jobLoaded],\n  );\n\n  const [podData, podLoaded] = useK8sWatchResource<PodKind>(podResource);\n\n  const path =\n    podLoaded &&\n    podData?.kind === PodModel?.kind &&\n    podData?.metadata &&\n    `${resourcePath(PodModel.kind, podData?.metadata.name, podData?.metadata.namespace)}/logs`;\n\n  const viewLog = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (isModifiedEvent(e)) {\n      return;\n    }\n    e.preventDefault();\n    history.push(path);\n    onViewLog?.();\n  };\n\n  const linkedButton = (\n    <Button\n      component=\"a\"\n      variant=\"link\"\n      data-test=\"export-view-log-btn\"\n      href={path}\n      onClick={viewLog}\n    >\n      {t('topology~View Logs')}\n    </Button>\n  );\n  const disabledButton = (\n    <Tooltip content={t('topology~Logs not available yet')}>\n      <Button component=\"a\" variant=\"link\" data-test=\"export-view-log-btn\" isAriaDisabled>\n        {t('topology~View Logs')}\n      </Button>\n    </Tooltip>\n  );\n\n  return path ? linkedButton : disabledButton;\n};\n\nexport default ExportViewLogButton;\n","import * as React from 'react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport {\n  BuildConfigModel,\n  DeploymentConfigModel,\n  ImageStreamImportsModel,\n  ImageStreamModel,\n  RouteModel,\n  SecretModel,\n  ServiceModel,\n} from '@console/internal/models';\nimport { AccessReviewResourceAttributes, K8sKind } from '@console/internal/module/k8s';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport { useFlag } from '@console/shared';\nimport { allCatalogImageResourceAccess, allImportResourceAccess } from '../actions/add-resources';\nimport { SERVICE_BINDING_ENABLED } from '../const';\n\nconst resourceAttributes = (model: K8sKind, namespace: string): AccessReviewResourceAttributes => {\n  return {\n    group: model.apiGroup || '',\n    resource: model.plural,\n    namespace,\n    verb: 'create',\n  };\n};\n\nexport const useAddToProjectAccess = (activeNamespace: string): string[] => {\n  const buildConfigsAccess = useAccessReview(resourceAttributes(BuildConfigModel, activeNamespace));\n  const imageStreamAccess = useAccessReview(resourceAttributes(ImageStreamModel, activeNamespace));\n  const deploymentConfigAccess = useAccessReview(\n    resourceAttributes(DeploymentConfigModel, activeNamespace),\n  );\n  const imageStreamImportAccess = useAccessReview(\n    resourceAttributes(ImageStreamImportsModel, activeNamespace),\n  );\n  const secretAccess = useAccessReview(resourceAttributes(SecretModel, activeNamespace));\n  const routeAccess = useAccessReview(resourceAttributes(RouteModel, activeNamespace));\n  const serviceAccess = useAccessReview(resourceAttributes(ServiceModel, activeNamespace));\n\n  const serviceBindingEnabled = useFlag(ALLOW_SERVICE_BINDING_FLAG);\n\n  return React.useMemo(() => {\n    const createResourceAccess: string[] = [];\n    if (\n      buildConfigsAccess &&\n      imageStreamAccess &&\n      deploymentConfigAccess &&\n      secretAccess &&\n      routeAccess &&\n      serviceAccess\n    ) {\n      createResourceAccess.push(allImportResourceAccess);\n      if (imageStreamImportAccess) {\n        createResourceAccess.push(allCatalogImageResourceAccess);\n      }\n    }\n    if (serviceBindingEnabled) {\n      createResourceAccess.push(SERVICE_BINDING_ENABLED);\n    }\n    return createResourceAccess;\n  }, [\n    buildConfigsAccess,\n    deploymentConfigAccess,\n    imageStreamAccess,\n    imageStreamImportAccess,\n    routeAccess,\n    secretAccess,\n    serviceAccess,\n    serviceBindingEnabled,\n  ]);\n};\n","import { Alert } from '@console/dynamic-plugin-sdk';\nimport * as _ from 'lodash';\nimport { PROMETHEUS_TENANCY_BASE_PATH } from '../graphs';\nimport { coFetchJSON } from '../../co-fetch';\nimport { getAlertsAndRules } from '../monitoring/utils';\nimport { getPrometheusURL, PrometheusEndpoint } from '../graphs/helpers';\n\nexport type MetricValuesByPod = {\n  [podName: string]: number;\n};\n\nexport type OverviewMetrics = {\n  cpu?: MetricValuesByPod;\n  memory?: MetricValuesByPod;\n};\n\n// Return codes indicating no retry\nexport const METRICS_FAILURE_CODES = [401, 403, 502, 503];\n\nexport const fetchOverviewMetrics = (\n  namespace: string,\n): Promise<{ [key: string]: MetricValuesByPod }> => {\n  if (!PROMETHEUS_TENANCY_BASE_PATH) {\n    return Promise.resolve(null);\n  }\n\n  const queries = {\n    memory: `sum(container_memory_working_set_bytes{namespace='${namespace}',container='',pod!=''}) BY (pod, namespace)`,\n    cpu: `pod:container_cpu_usage:sum{namespace=\"${namespace}\"}`,\n  };\n\n  const promises = _.map(queries, (query, name) => {\n    const url = `${PROMETHEUS_TENANCY_BASE_PATH}/api/v1/query?namespace=${namespace}&query=${encodeURIComponent(\n      query,\n    )}`;\n    return coFetchJSON(url).then(({ data: { result } }) => {\n      const byPod: MetricValuesByPod = result.reduce((acc, { metric, value }) => {\n        acc[metric.pod] = Number(value[1]);\n        return acc;\n      }, {});\n      return { [name]: byPod };\n    });\n  });\n\n  return Promise.all(promises).then((data) => {\n    return data.reduce(\n      (acc: OverviewMetrics, metric): OverviewMetrics => _.assign(acc, metric),\n      {},\n    );\n  });\n};\n\nexport const fetchMonitoringAlerts = (namespace: string): Promise<Alert[]> => {\n  if (!PROMETHEUS_TENANCY_BASE_PATH) {\n    return Promise.resolve(null);\n  }\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n  return coFetchJSON(url).then(({ data }) => {\n    const { alerts } = getAlertsAndRules(data);\n    return alerts;\n  });\n};\n","import * as React from 'react';\nimport {\n  DataList,\n  DataListCell,\n  DataListContent,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport { GraphElement, isNode, Node, observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { getTitleForNodeKind } from '@console/shared';\nimport ListElementWrapper from './ListElementWrapper';\n\ninterface TopologyListViewKindGroupProps {\n  groupLabel: string;\n  kind: string;\n  childElements: GraphElement[];\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst TopologyListViewKindGroup: React.FC<TopologyListViewKindGroupProps> = ({\n  groupLabel,\n  kind,\n  childElements,\n  selectedIds,\n  onSelect,\n}) => {\n  const { t } = useTranslation();\n  const resourceLabel = getTitleForNodeKind(kind);\n\n  const childNodes = childElements.filter((n) => isNode(n)) as Node[];\n  childNodes.sort((a, b) => a.getLabel().localeCompare(b.getLabel()));\n\n  return (\n    <DataListItem\n      key={kind}\n      aria-labelledby={`${groupLabel}-${resourceLabel}-label`.replace(' ', '-')}\n      isExpanded\n    >\n      <DataListItemRow className=\"odc-topology-list-view__kind-row\">\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell\n              key={kind}\n              className=\"odc-topology-list-view__kind-label\"\n              id={`${groupLabel}-${resourceLabel}-label`.replace(' ', '-')}\n            >\n              {resourceLabel}\n            </DataListCell>,\n          ]}\n        />\n      </DataListItemRow>\n      <DataListContent\n        aria-label={t('topology~{{groupLabel}} {{resourceLabel}}', { groupLabel, resourceLabel })}\n        id={`${groupLabel}-${resourceLabel}`}\n        isHidden={false}\n      >\n        <DataList\n          aria-label={t('topology~{{resourceLabel}} sub-resources', { resourceLabel })}\n          selectedDataListItemId={selectedIds[0]}\n          onSelectDataListItem={(_event, id) => onSelect(selectedIds[0] === id ? [] : [id])}\n        >\n          {childNodes.map((child) => (\n            <ListElementWrapper\n              key={child.getId()}\n              item={child}\n              selectedIds={selectedIds}\n              onSelect={onSelect}\n            />\n          ))}\n        </DataList>\n      </DataListContent>\n    </DataListItem>\n  );\n};\n\nexport default observer(TopologyListViewKindGroup);\n","import * as React from 'react';\nimport { DataListCell, Tooltip } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Status as TooltipStatus,\n  useBuildConfigsWatcher,\n  getBuildAlerts,\n  getResourcePausedAlert,\n  usePodsWatcher,\n  useReplicationControllersWatcher,\n  getReplicationControllerAlerts,\n  useIsMobile,\n  OverviewItemAlerts,\n} from '@console/shared';\nimport { getResource } from '../../../utils';\nimport { useResourceQuotaAlert } from '../../workload';\n\nimport './AlertsCell.scss';\n\ntype AlertsProps = {\n  item: Node;\n};\n\nconst AlertTooltip = ({ alerts, severity, isMobile }) => {\n  if (!alerts) {\n    return null;\n  }\n\n  const count = alerts.length;\n  const message = _.uniq(alerts.map((a) => a.message)).join('\\n');\n\n  const status = (\n    <span className=\"odc-topology-list-view__alert-cell--status\">\n      <TooltipStatus status={severity} title={String(count)} />\n    </span>\n  );\n\n  // No tooltip on mobile since a touch also opens the sidebar, which\n  // immediately covers the tooltip content.\n  if (isMobile) {\n    return status;\n  }\n\n  const tipContent = [\n    <span key=\"message\" className=\"co-pre-wrap\">\n      {message}\n    </span>,\n  ];\n  return (\n    <Tooltip content={tipContent} distance={10}>\n      {status}\n    </Tooltip>\n  );\n};\n\nconst AlertsCell: React.FC<AlertsProps> = ({ item }) => {\n  const { t } = useTranslation();\n  const isMobile = useIsMobile();\n  const resource = getResource(item);\n  const { podData, loaded } = usePodsWatcher(resource);\n  const { buildConfigs, loaded: buildConfigsLoaded } = useBuildConfigsWatcher(resource);\n  const { loaded: rcsLoaded, mostRecentRC } = useReplicationControllersWatcher(resource);\n  const workloadRqAlert = useResourceQuotaAlert(item);\n  const workloadRqAlerts: OverviewItemAlerts = workloadRqAlert\n    ? {\n        rqAlert: {\n          message: workloadRqAlert.content as string,\n          severity: workloadRqAlert.variant,\n        },\n      }\n    : {};\n\n  const currentAlerts = React.useMemo(() => {\n    if (loaded && podData.current) {\n      return podData.current.alerts;\n    }\n    return {};\n  }, [loaded, podData]);\n\n  const previousAlerts = React.useMemo(() => {\n    if (loaded && podData.previous) {\n      return podData.current.alerts;\n    }\n    return {};\n  }, [loaded, podData]);\n\n  const buildConfigAlerts = React.useMemo(() => {\n    if (buildConfigsLoaded && buildConfigs) {\n      return getBuildAlerts(buildConfigs);\n    }\n    return {};\n  }, [buildConfigsLoaded, buildConfigs]);\n\n  const rollOutAlerts = React.useMemo(() => {\n    if (rcsLoaded && mostRecentRC) {\n      return getReplicationControllerAlerts(mostRecentRC);\n    }\n    return {};\n  }, [mostRecentRC, rcsLoaded]);\n\n  const alerts = {\n    ...getResourcePausedAlert(resource),\n    ...rollOutAlerts,\n    ...buildConfigAlerts,\n    ...currentAlerts,\n    ...previousAlerts,\n    ...workloadRqAlerts,\n  };\n\n  if (alerts?.length) {\n    return null;\n  }\n\n  const {\n    error,\n    warning,\n    info,\n    buildNew,\n    buildPending,\n    buildRunning,\n    buildFailed,\n    buildError,\n  } = _.groupBy(alerts, 'severity');\n  return (\n    <DataListCell id={`${item.getId()}_alerts`}>\n      <div className=\"odc-topology-list-view__alert-cell\">\n        {(error || warning || info) && (\n          <div className=\"odc-topology-list-view__alert-cell__status\">\n            <span className=\"odc-topology-list-view__alert-cell__label\">\n              {t('topology~Alerts:')}\n            </span>\n            <AlertTooltip severity=\"Error\" alerts={error} isMobile={isMobile} />\n            <AlertTooltip severity=\"Warning\" alerts={warning} isMobile={isMobile} />\n            <AlertTooltip severity=\"Info\" alerts={info} isMobile={isMobile} />\n          </div>\n        )}\n        {(buildNew || buildPending || buildRunning || buildFailed || buildError) && (\n          <div className=\"odc-topology-list-view__alert-cell__status\">\n            <span className=\"odc-topology-list-view__alert-cell__label\">\n              {t('topology~Builds:')}\n            </span>\n            <AlertTooltip severity=\"New\" alerts={buildNew} isMobile={isMobile} />\n            <AlertTooltip severity=\"Pending\" alerts={buildPending} isMobile={isMobile} />\n            <AlertTooltip severity=\"Running\" alerts={buildRunning} isMobile={isMobile} />\n            <AlertTooltip severity=\"Failed\" alerts={buildFailed} isMobile={isMobile} />\n            <AlertTooltip severity=\"Error\" alerts={buildError} isMobile={isMobile} />\n          </div>\n        )}\n      </div>\n    </DataListCell>\n  );\n};\n\nexport default AlertsCell;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { truncateMiddle } from '@console/internal/components/utils';\nimport { useIsMobile } from '@console/shared';\n\ntype MetricsTooltipProps = {\n  metricLabel: string;\n  byPod: {\n    formattedValue: string;\n    name: string;\n    value: number;\n  }[];\n};\n\nconst MetricsTooltip: React.FC<MetricsTooltipProps> = ({ metricLabel, byPod, children }) => {\n  const { t } = useTranslation();\n  const isMobile = useIsMobile();\n\n  // Disable the tooltip on mobile since a touch also opens the sidebar, which\n  // immediately covers the tooltip content.\n  if (isMobile) {\n    return <>{children}</>;\n  }\n\n  const sortedMetrics = _.orderBy(byPod, ['value', 'name'], ['desc', 'asc']);\n  const content: any[] = _.isEmpty(sortedMetrics)\n    ? [\n        <React.Fragment key=\"no-metrics\">\n          {t('topology~No {{metricLabel}} metrics available.', { metricLabel })}\n        </React.Fragment>,\n      ]\n    : _.concat(\n        <div className=\"odc-topology-list-view__metrics-cell__tooltip-title\" key=\"#title\">\n          {t('topology~{{metricLabel}} usage by Pod', { metricLabel })}\n        </div>,\n        sortedMetrics.map(({ name, formattedValue }) => (\n          <div key={name} className=\"odc-topology-list-view__metrics-cell__metric-tooltip\">\n            <div className=\"odc-topology-list-view__metrics-cell__tooltip-name\">\n              <span className=\"no-wrap\">{truncateMiddle(name)}</span>\n            </div>\n            <div className=\"odc-topology-list-view__metrics-cell__metric-tooltip-value\">\n              {formattedValue}\n            </div>\n          </div>\n        )),\n      );\n\n  const keepLines = 6;\n  // Don't remove a single line to show a \"1 other\" message since there's space to show the last pod in that case.\n  // Make sure we always remove at least 2 lines if we truncate.\n  if (content.length > keepLines + 1) {\n    const numRemoved = content.length - keepLines;\n    content.splice(\n      keepLines,\n      numRemoved,\n      <div key=\"#removed-pods\">and {numRemoved} other pods</div>,\n    );\n  }\n\n  return (\n    <Tooltip content={content} distance={15}>\n      <>{children}</>\n    </Tooltip>\n  );\n};\n\nexport default MetricsTooltip;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Status from '@console/dynamic-plugin-sdk/src/app/components/status/Status';\nimport { ComputedServiceBindingStatus, ServiceBinding } from '../../types';\nimport { getComputedServiceBindingStatus, getFirstServiceBindingError } from '../../utils';\n\nconst ServiceBindingStatus = ({ serviceBinding }: { serviceBinding: ServiceBinding }) => {\n  const { t } = useTranslation();\n\n  const computedStatus = getComputedServiceBindingStatus(serviceBinding);\n\n  if (computedStatus === ComputedServiceBindingStatus.CONNECTED) {\n    return <Status status={computedStatus} title={t('service-binding-plugin~Connected')} />;\n  }\n\n  if (computedStatus === ComputedServiceBindingStatus.ERROR) {\n    const firstError = getFirstServiceBindingError(serviceBinding);\n    return (\n      <Status status=\"Error\" title={t('service-binding-plugin~Error')}>\n        {firstError ? (\n          <>\n            <pre>{firstError.reason}</pre>\n            {firstError.message}\n          </>\n        ) : null}\n      </Status>\n    );\n  }\n\n  return <Status status={computedStatus} />;\n};\n\nexport default ServiceBindingStatus;\n","export { getDevConsoleComponentFactory } from './components/devConsoleComponetFactory';\nexport {\n  providerProvidesServiceBinding,\n  providerCreateServiceBinding,\n} from './relationship-provider';\nexport * from './hpa-tab-section';\nexport * from './observe-tab-section';\nexport * from './sbr-sidebar';\nexport { default as TopologyPage } from './TopologyPage';\n","import * as React from 'react';\nimport {\n  observer,\n  Node,\n  useDndDrop,\n  WithContextMenuProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport openshiftImg from '@console/internal/imgs/logos/openshift.svg';\nimport { modelFor, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { WithCreateConnectorProps } from '@console/topology/src/behavior';\nimport { getTopologyResourceObject } from '../../../../utils';\nimport { getRelationshipProvider } from '../../../../utils/relationship-provider-utils';\nimport BaseNode from './BaseNode';\n\ntype BindableNodeProps = {\n  element: GraphElement;\n  tooltipLabel?: string;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\nconst BindableNode: React.FC<BindableNodeProps> = ({\n  element,\n  selected,\n  onSelect,\n  tooltipLabel,\n  ...rest\n}) => {\n  const nodeElement = element as Node;\n  const spec = React.useMemo(() => getRelationshipProvider(), []);\n  const { width, height } = nodeElement.getBounds();\n  const iconRadius = Math.min(width, height) * 0.25;\n  const [dndDropProps, dndDropRef] = useDndDrop(spec, { element: nodeElement, ...rest });\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconData = element.getData()?.data?.icon || openshiftImg;\n  const kind = resourceModel && referenceForModel(resourceModel);\n\n  return (\n    <BaseNode\n      className=\"bindable-node\"\n      tooltipLabel={tooltipLabel}\n      onSelect={onSelect}\n      icon={iconData}\n      kind={kind}\n      innerRadius={iconRadius}\n      selected={selected}\n      element={nodeElement}\n      {...rest}\n      dndDropRef={dndDropRef}\n      {...dndDropProps}\n    />\n  );\n};\n\nexport default observer(BindableNode);\n","import {\n  CREATE_CONNECTOR_DROP_TYPE,\n  DropTargetSpec,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n} from '@patternfly/react-topology';\nimport {\n  canDropEdgeOnNode,\n  EDGE_DRAG_TYPE,\n  NodeComponentProps,\n  nodesEdgeIsDragging,\n} from '../components/graph-view';\nimport { OdcBaseEdge, OdcBaseNode } from '../elements';\n\nexport const getRelationshipProvider = (): DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean; tooltipLabel: string },\n  NodeComponentProps\n> => {\n  const getSourceNode = (monitor) =>\n    monitor.getItem() instanceof OdcBaseEdge ? monitor.getItem().getSource() : monitor.getItem();\n\n  const isEdgeConnected = (monitor, targetNode) => {\n    const sourceNode = getSourceNode(monitor);\n    return (\n      sourceNode instanceof OdcBaseNode &&\n      sourceNode.getSourceEdges().find((e) => e.getTarget() === targetNode)\n    );\n  };\n\n  const getRelExtension = (monitor, props) => {\n    const sourceNode = getSourceNode(monitor);\n    const targetNode = props.element;\n\n    const topologyRelationshipExtensions = targetNode.getGraph()?.getData()\n      ?.relationshipProviderExtensions;\n    const relationshipExtension =\n      sourceNode instanceof OdcBaseNode &&\n      targetNode instanceof OdcBaseNode &&\n      isNode(sourceNode) &&\n      isNode(targetNode)\n        ? topologyRelationshipExtensions?.filter(({ properties: { provides } }) =>\n            provides(sourceNode, targetNode),\n          )\n        : [];\n    return (\n      relationshipExtension.length > 0 &&\n      relationshipExtension.sort((a, b) => b.properties?.priority - a.properties?.priority)[0]\n    );\n  };\n\n  return {\n    accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n    canDrop: (item, monitor, props) => {\n      const node = props.element as Node;\n      if (isEdge(item)) {\n        return canDropEdgeOnNode(monitor.getOperation()?.type, item, node);\n      }\n      if (!node || item === node) {\n        return false;\n      }\n      const relationshipExtension = getRelExtension(monitor, props);\n      return !!relationshipExtension && !isEdgeConnected(monitor, node);\n    },\n    collect: (monitor, props) => {\n      const relationshipExtension = getRelExtension(monitor, props);\n      return {\n        canDrop: !!relationshipExtension && !isEdgeConnected(monitor, props.element),\n        dropTarget: monitor.isOver({ shallow: true }),\n        edgeDragging: nodesEdgeIsDragging(monitor, props),\n        tooltipLabel: relationshipExtension?.properties?.tooltip,\n      };\n    },\n    dropHint: (item, monitor, props) => {\n      const relationshipExtension = getRelExtension(monitor, props);\n      return relationshipExtension?.uid;\n    },\n  };\n};\n","export const TYPE_BINDABLE_NODE = 'bindable-node';\n","import { Node } from '@patternfly/react-topology';\nimport { serviceBindingModal } from '@console/app/src/components/modals/service-binding';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '@console/topology/src/utils';\n\nexport const providerProvidesServiceBinding = (source: Node, target: Node) => {\n  if (!source || !target) return false;\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  return (\n    sourceObj &&\n    targetObj &&\n    sourceObj !== targetObj &&\n    source.getData()?.type === TYPE_WORKLOAD &&\n    targetObj.metadata?.labels?.['app.kubernetes.io/component'] === 'external-service'\n  );\n};\n\nexport const providerCreateServiceBinding = (source: Node, target: Node) => {\n  const sourceResource = getResource(source);\n  const targetResource = getResource(target);\n  return serviceBindingModal({\n    model: modelFor(referenceFor(sourceResource)),\n    source: sourceResource,\n    target: targetResource,\n  });\n};\n","import * as React from 'react';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionToggle,\n  AccordionContent,\n  Split,\n  SplitItem,\n  Badge,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { sortEvents } from '@console/internal/components/events';\nimport { FirehoseResult, LoadingBox } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, EventKind, PodKind } from '@console/internal/module/k8s';\nimport { getFiringAlerts } from '@console/shared';\nimport WorkloadGraphs from './MonitoringMetrics';\nimport MonitoringOverviewAlerts from './MonitoringOverviewAlerts';\nimport MonitoringOverviewEvents from './MonitoringOverviewEvents';\nimport './MonitoringOverview.scss';\n\ntype MonitoringOverviewProps = {\n  resource: K8sResourceKind;\n  pods?: PodKind[];\n  resourceEvents?: FirehoseResult<EventKind[]>;\n  monitoringAlerts: Alert[];\n};\n\nconst MonitoringOverview: React.FC<MonitoringOverviewProps> = (props) => {\n  const { t } = useTranslation();\n  const { resource, pods, resourceEvents, monitoringAlerts } = props;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const [expanded, setExpanded] = React.useState([\n    'metrics',\n    ...(firingAlerts.length > 0 ? ['monitoring-alerts'] : []),\n  ]);\n\n  if (\n    !resourceEvents ||\n    !resourceEvents.loaded ||\n    (pods && pods.find((pod) => !props[pod.metadata.uid] || !props[pod.metadata.uid].loaded))\n  ) {\n    return <LoadingBox />;\n  }\n\n  let events = [...resourceEvents.data];\n  if (pods) {\n    pods.forEach((pod) => {\n      const podData = props[pod.metadata.uid];\n      if (podData) {\n        events.push(...podData.data);\n      }\n    });\n  }\n\n  events = sortEvents(events);\n\n  const onToggle = (id: string) => {\n    const index = expanded.indexOf(id);\n    const newExpanded =\n      index >= 0\n        ? [...expanded.slice(0, index), ...expanded.slice(index + 1, expanded.length)]\n        : [...expanded, id];\n    setExpanded(newExpanded);\n  };\n\n  return (\n    <div className=\"odc-monitoring-overview\">\n      <Accordion\n        asDefinitionList={false}\n        className=\"odc-monitoring-overview__metric-accordion\"\n        headingLevel=\"h5\"\n      >\n        {firingAlerts.length > 0 && (\n          <AccordionItem>\n            <AccordionToggle\n              onClick={() => {\n                onToggle('monitoring-alerts');\n              }}\n              isExpanded={expanded.includes('monitoring-alerts')}\n              id=\"monitoring-alerts\"\n              className=\"odc-monitoring-overview__alerts-toggle\"\n            >\n              <Split>\n                <SplitItem>{t('devconsole~Alerts')}</SplitItem>\n                <SplitItem isFilled />\n                <SplitItem>\n                  <Badge>{monitoringAlerts.length}</Badge>\n                </SplitItem>\n              </Split>\n            </AccordionToggle>\n            <AccordionContent\n              className=\"odc-monitoring-overview__alerts-body\"\n              id=\"monitoring-alerts-content\"\n              isHidden={!expanded.includes('monitoring-alerts')}\n            >\n              <MonitoringOverviewAlerts alerts={firingAlerts} />\n            </AccordionContent>\n          </AccordionItem>\n        )}\n\n        <AccordionItem>\n          <AccordionToggle\n            onClick={() => {\n              onToggle('metrics');\n            }}\n            isExpanded={expanded.includes('metrics')}\n            id=\"metrics\"\n          >\n            {t('devconsole~Metrics')}\n          </AccordionToggle>\n          <AccordionContent id=\"metrics-content\" isHidden={!expanded.includes('metrics')}>\n            {resource.kind === DeploymentConfigModel.kind ? (\n              <EmptyState>\n                <EmptyStateHeader\n                  titleText={<>{t('devconsole~No metrics found')}</>}\n                  icon={\n                    <EmptyStateIcon\n                      className=\"odc-monitoring-overview__empty-state-icon\"\n                      icon={InfoCircleIcon}\n                    />\n                  }\n                  headingLevel=\"h2\"\n                />\n                <EmptyStateBody>\n                  {t('devconsole~Deployment Configuration metrics are not yet supported.')}\n                </EmptyStateBody>\n              </EmptyState>\n            ) : (\n              <>\n                <div className=\"odc-monitoring-overview__view-monitoring-dashboards\">\n                  <Link\n                    to={`/dev-monitoring/ns/${\n                      resource?.metadata?.namespace\n                    }?dashboard=grafana-dashboard-k8s-resources-workload&workload=${\n                      resource?.metadata?.name\n                    }&type=${resource?.kind?.toLowerCase()}`}\n                    data-test=\"observe-dashboards-link\"\n                  >\n                    {t('devconsole~View dashboards')}\n                  </Link>\n                </div>\n                <WorkloadGraphs resource={resource} />\n              </>\n            )}\n          </AccordionContent>\n        </AccordionItem>\n\n        <AccordionItem>\n          <AccordionToggle\n            onClick={() => {\n              onToggle('all-events');\n            }}\n            isExpanded={expanded.includes('all-events')}\n            id=\"all-events\"\n          >\n            {t('devconsole~All events')}\n          </AccordionToggle>\n          <AccordionContent id=\"all-events-content\" isHidden={!expanded.includes('all-events')}>\n            <MonitoringOverviewEvents events={events} />\n          </AccordionContent>\n        </AccordionItem>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default MonitoringOverview;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { usePrometheusGate } from '@console/shared/src/hooks/usePrometheusGate';\nimport ConnectedMonitoringDashboardGraph from '../dashboard/MonitoringDashboardGraph';\nimport { topWorkloadMetricsQueries } from '../queries';\n\nconst WorkloadGraphs = ({ resource }) => {\n  const { t } = useTranslation();\n  const prometheusIsAvailable = usePrometheusGate();\n  if (!prometheusIsAvailable) {\n    return null;\n  }\n\n  const namespace = resource?.metadata?.namespace;\n  const workloadName = resource?.metadata?.name;\n  const workloadType = resource?.kind?.toLowerCase();\n\n  return (\n    <>\n      {_.map(topWorkloadMetricsQueries(t), (q) => (\n        <ConnectedMonitoringDashboardGraph\n          key={q.title}\n          title={q.title}\n          namespace={namespace}\n          graphType={q.chartType}\n          query={q.query({ namespace, workloadName, workloadType })}\n          humanize={q.humanize}\n          byteDataType={q.byteDataType}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default WorkloadGraphs;\n","import * as React from 'react';\nimport { Card, CardBody, CardHeader, CardTitle } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { dashboardsSetEndTime, dashboardsSetTimespan } from '@console/internal/actions/observe';\nimport { Humanize } from '@console/internal/components/utils';\nimport { QueryBrowser } from '@console/shared/src/components/query-browser';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport './MonitoringDashboardGraph.scss';\n\nexport enum GraphTypes {\n  area = 'Area',\n  line = 'Line',\n}\n\nconst PrometheusGraphLink = ({ query, namespace, ariaChartLinkLabel }) => {\n  const { t } = useTranslation();\n  const queries = _.compact(_.castArray(query));\n  if (!queries.length) {\n    return null;\n  }\n  const params = new URLSearchParams();\n  queries.forEach((q, index) => params.set(`query${index}`, q));\n  return (\n    <Link\n      aria-label={ariaChartLinkLabel}\n      to={`/dev-monitoring/ns/${namespace}/metrics?${params.toString()}`}\n    >\n      {t('devconsole~Inspect')}\n    </Link>\n  );\n};\n\ntype MonitoringDashboardGraphProps = {\n  title: string;\n  query: string;\n  namespace: string;\n  graphType?: GraphTypes;\n  humanize: Humanize;\n  byteDataType: ByteDataTypes;\n  timespan?: number;\n  pollInterval?: number;\n  endTime?: number;\n};\n\nconst DEFAULT_TIME_SPAN = 30 * 60 * 1000;\nconst DEFAULT_SAMPLES = 30;\n\nexport const MonitoringDashboardGraph: React.FC<MonitoringDashboardGraphProps> = ({\n  query,\n  namespace,\n  title,\n  graphType = GraphTypes.area,\n  timespan,\n  pollInterval,\n  endTime,\n}) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const onZoom = React.useCallback(\n    (from, to) => {\n      dispatch(dashboardsSetEndTime(to, 'dev'));\n      dispatch(dashboardsSetTimespan(to - from, 'dev'));\n    },\n    [dispatch],\n  );\n  return (\n    <Card\n      className=\"monitoring-dashboards__card odc-monitoring-dashboard-graph\"\n      data-test={title.toLowerCase().replace(/\\s+/g, '-')}\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <PrometheusGraphLink\n              namespace={namespace}\n              query={query}\n              ariaChartLinkLabel={t('devconsole~View metrics for {{title}}', {\n                title,\n              })}\n            />\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{title}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <QueryBrowser\n          hideControls\n          defaultTimespan={DEFAULT_TIME_SPAN}\n          defaultSamples={DEFAULT_SAMPLES}\n          namespace={namespace}\n          queries={[query]}\n          isStack={graphType === GraphTypes.area}\n          timespan={timespan}\n          pollInterval={pollInterval}\n          fixedEndTime={endTime}\n          formatSeriesTitle={(labels) => labels.pod}\n          onZoom={onZoom}\n          showLegend\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default MonitoringDashboardGraph;\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  Humanize,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeDecimalBytesPerSec,\n} from '@console/internal/components/utils';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\n\nexport interface MonitoringQuery {\n  query: _.TemplateExecutor;\n  chartType: GraphTypes;\n  title: string;\n  humanize: Humanize;\n  byteDataType: ByteDataTypes;\n  id?: string;\n}\n\nexport enum GraphTypes {\n  area = 'Area',\n  line = 'Line',\n}\n\nexport const metricsQuery = (t: TFunction) => ({\n  PODS_BY_CPU: t('devconsole~CPU usage'),\n  PODS_BY_MEMORY: t('devconsole~Memory usage'),\n  PODS_BY_FILESYSTEM: t('devconsole~Filesystem usage'),\n  PODS_BY_NETWORK_IN: t('devconsole~Receive bandwidth'),\n  PODS_BY_NETWORK_OUT: t('devconsole~Transmit bandwidth'),\n  RATE_OF_RECEIVED_PACKETS: t('devconsole~Rate of received packets'),\n  RATE_OF_TRANSMITTED_PACKETS: t('devconsole~Rate of transmitted packets'),\n  RATE_OF_RECEIVED_PACKETS_DROPPED: t('devconsole~Rate of received packets dropped'),\n  RATE_OF_TRANSMITTED_PACKETS_DROPPED: t('devconsole~Rate of transmitted packets dropped'),\n});\n\nexport const monitoringDashboardQueries = (t: TFunction): MonitoringQuery[] => [\n  {\n    query: _.template(\n      `sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace='<%= namespace %>'}) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: t('devconsole~CPU usage'),\n    humanize: humanizeCpuCores,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    id: 'cpu_usage',\n  },\n  {\n    query: _.template(\n      `sum(container_memory_working_set_bytes{container!=\"\", namespace='<%= namespace %>'}) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: t('devconsole~Memory usage'),\n    humanize: humanizeBinaryBytes,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    id: 'memory_usage',\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_receive_bytes_total{namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: t('devconsole~Receive bandwidth'),\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    id: 'receive_bandwidth',\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_transmit_bytes_total{namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: t('devconsole~Transmit bandwidth'),\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    id: 'transmit_bandwidth',\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_receive_packets_total{namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: t('devconsole~Rate of received packets'),\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    id: 'rate_of_received_packets',\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_transmit_packets_total{namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: t('devconsole~Rate of transmitted packets'),\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    id: 'rate_of_transmitted_packets',\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_receive_packets_dropped_total{namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: t('devconsole~Rate of received packets dropped'),\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    id: 'rate_of_received_packets_dropped',\n  },\n  {\n    query: _.template(\n      `sum(irate(container_network_transmit_packets_dropped_total{namespace='<%= namespace %>'}[2h])) by (pod)`,\n    ),\n    chartType: GraphTypes.area,\n    title: t('devconsole~Rate of transmitted packets dropped'),\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    id: 'rate_of_transmitted_packets_dropped',\n  },\n];\n\nexport const topWorkloadMetricsQueries = (t: TFunction): MonitoringQuery[] => [\n  {\n    title: t('devconsole~CPU usage'),\n    chartType: GraphTypes.area,\n    humanize: humanizeCpuCores,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    query: _.template(\n      `sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace='<%= namespace %>'}\n          * on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{\n          namespace='<%= namespace %>', workload='<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: t('devconsole~Memory usage'),\n    chartType: GraphTypes.area,\n    humanize: humanizeBinaryBytes,\n    byteDataType: ByteDataTypes.BinaryBytes,\n    query: _.template(\n      `sum(container_memory_working_set_bytes{namespace='<%= namespace %>', container!=\"\"}\n          * on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{\n          namespace='<%= namespace %>', workload='<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: t('devconsole~Receive bandwidth'),\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_receive_bytes_total{namespace='<%= namespace %>'}[4h])\n          * on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{\n          namespace='<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n];\n\nexport const workloadMetricsQueries = (t: TFunction): MonitoringQuery[] => [\n  {\n    title: t('devconsole~Transmit bandwidth'),\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_receive_bytes_total{namespace=~'<%= namespace %>'}[4h])\n         * on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{\n         namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: t('devconsole~Rate of received packets'),\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_receive_packets_total{namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: t('devconsole~Rate of transmitted packets'),\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_transmit_packets_total{namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: t('devconsole~Rate of received packets dropped'),\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_receive_packets_dropped_total{namespace=~'<%= namespace %>'}[4h])* on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: t('devconsole~Rate of transmitted packets dropped'),\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `sum(irate(container_network_transmit_packets_dropped_total{namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)\n      group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)\n      `,\n    ),\n  },\n  {\n    title: t('devconsole~Average Container bandwidth by Pod: received'),\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `avg(irate(container_network_receive_bytes_total{namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n  {\n    title: t('devconsole~Average Container bandwidth by Pod: transmitted'),\n    chartType: GraphTypes.area,\n    humanize: humanizeDecimalBytesPerSec,\n    byteDataType: ByteDataTypes.DecimalBytes,\n    query: _.template(\n      `avg(irate(container_network_transmit_bytes_total{namespace=~'<%= namespace %>'}[4h])* on (namespace,pod)group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{namespace=~'<%= namespace %>', workload=~'<%= workloadName %>', workload_type='<%= workloadType %>'}) by (pod)`,\n    ),\n  },\n];\n\nconst getMetricsQuery = (id: string, t: TFunction): _.TemplateExecutor => {\n  const queryObject = _.find(monitoringDashboardQueries(t), (q) => q.id === id);\n  return queryObject?.query;\n};\n\nconst topMetricsQueries = (t: TFunction) => ({\n  PODS_BY_CPU: getMetricsQuery('cpu_usage', t),\n  PODS_BY_MEMORY: getMetricsQuery('memory_usage', t),\n  PODS_BY_FILESYSTEM: _.template(\n    `topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= namespace %>'}) BY (pod, namespace)))`,\n  ),\n  PODS_BY_NETWORK_IN: getMetricsQuery('receive_bandwidth', t),\n  PODS_BY_NETWORK_OUT: getMetricsQuery('transmit_bandwidth', t),\n  RATE_OF_RECEIVED_PACKETS: getMetricsQuery('rate_of_received_packets', t),\n  RATE_OF_TRANSMITTED_PACKETS: getMetricsQuery('rate_of_transmitted_packets', t),\n  RATE_OF_RECEIVED_PACKETS_DROPPED: getMetricsQuery('rate_of_received_packets_dropped', t),\n  RATE_OF_TRANSMITTED_PACKETS_DROPPED: getMetricsQuery('rate_of_transmitted_packets_dropped', t),\n});\n\nexport const getTopMetricsQueries = (namespace: string, t: TFunction) => ({\n  [metricsQuery(t).PODS_BY_CPU]: topMetricsQueries(t).PODS_BY_CPU({ namespace }),\n  [metricsQuery(t).PODS_BY_MEMORY]: topMetricsQueries(t).PODS_BY_MEMORY({ namespace }),\n  [metricsQuery(t).PODS_BY_FILESYSTEM]: topMetricsQueries(t).PODS_BY_FILESYSTEM({\n    namespace,\n  }),\n  [metricsQuery(t).PODS_BY_NETWORK_IN]: topMetricsQueries(t).PODS_BY_NETWORK_IN({\n    namespace,\n  }),\n  [metricsQuery(t).PODS_BY_NETWORK_OUT]: topMetricsQueries(t).PODS_BY_NETWORK_OUT({\n    namespace,\n  }),\n  [metricsQuery(t).RATE_OF_RECEIVED_PACKETS]: topMetricsQueries(t).RATE_OF_RECEIVED_PACKETS({\n    namespace,\n  }),\n  [metricsQuery(t).RATE_OF_TRANSMITTED_PACKETS]: topMetricsQueries(t).RATE_OF_TRANSMITTED_PACKETS({\n    namespace,\n  }),\n  [metricsQuery(t).RATE_OF_RECEIVED_PACKETS_DROPPED]: topMetricsQueries(\n    t,\n  ).RATE_OF_RECEIVED_PACKETS_DROPPED({\n    namespace,\n  }),\n  [metricsQuery(t).RATE_OF_TRANSMITTED_PACKETS_DROPPED]: topMetricsQueries(\n    t,\n  ).RATE_OF_TRANSMITTED_PACKETS_DROPPED({\n    namespace,\n  }),\n});\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { Alert as AlertType, useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { labelsToParams } from '@console/internal/components/monitoring/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { sortMonitoringAlerts } from '@console/shared';\nimport { getAlertType } from './monitoring-overview-alerts-utils';\nimport './MonitoringOverviewAlerts.scss';\n\ninterface MonitoringOverviewAlertsProps {\n  alerts: AlertType[];\n}\n\nconst MonitoringOverviewAlerts: React.FC<MonitoringOverviewAlertsProps> = ({ alerts }) => {\n  const [activePerspective] = useActivePerspective();\n  const sortedAlerts = sortMonitoringAlerts(alerts);\n\n  return (\n    <div className=\"odc-monitoring-overview-alerts\">\n      {_.map(sortedAlerts, (alert: AlertType) => {\n        const {\n          activeAt,\n          annotations: { message },\n          labels: { severity, alertname, namespace },\n          rule: { name, id },\n        } = alert;\n        const alertDetailsPageLink =\n          activePerspective === 'admin'\n            ? `/monitoring/alerts/${id}?${labelsToParams(alert.labels)}`\n            : `/dev-monitoring/ns/${namespace}/alerts/${id}?${labelsToParams(alert.labels)}`;\n        return (\n          <Alert\n            variant={getAlertType(severity)}\n            isInline\n            title={<Link to={alertDetailsPageLink}>{name}</Link>}\n            key={`${alertname}-${id}`}\n          >\n            {message}\n            <div className=\"odc-monitoring-overview-alerts__timestamp\">\n              <small className=\"text-secondary\">{fromNow(activeAt)}</small>\n            </div>\n          </Alert>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const InternalMonitoringOverviewAlerts = MonitoringOverviewAlerts;\nexport default MonitoringOverviewAlerts;\n","import { AlertSeverity } from '@console/dynamic-plugin-sdk';\n\nexport const getAlertType = (severity: string): 'danger' | 'warning' | 'info' => {\n  switch (severity) {\n    case AlertSeverity.Critical: {\n      return 'danger';\n    }\n    case AlertSeverity.Info:\n    case AlertSeverity.None: {\n      return 'info';\n    }\n    case AlertSeverity.Warning:\n    default: {\n      return 'warning';\n    }\n  }\n};\n","import * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { getLastTime } from '@console/internal/components/events';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { timeFormatter } from '@console/internal/components/utils/datetime';\nimport { referenceFor, EventKind } from '@console/internal/module/k8s';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport './MonitoringOverviewEvents.scss';\n\ninterface MonitoringOverviewEventsProps {\n  events: EventKind[];\n}\n\nconst MonitoringOverviewEvents: React.FC<MonitoringOverviewEventsProps> = ({ events }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-monitoring-events\">\n      {!_.isEmpty(events) ? (\n        _.map(events, (e: EventKind) => {\n          return (\n            <div className=\"odc-monitoring-events__event-item\" key={e.metadata.uid}>\n              <Flex alignSelf={{ default: 'alignSelfBaseline' }}>\n                <FlexItem title={e.lastTimestamp} className=\"text-secondary\">\n                  {timeFormatter.format(new Date(getLastTime(e)))}\n                </FlexItem>\n                {e.type === 'Warning' && (\n                  <FlexItem>\n                    <YellowExclamationTriangleIcon className=\"odc-monitoring-events__warning-icon\" />\n                  </FlexItem>\n                )}\n                <FlexItem>\n                  <ResourceLink\n                    kind={referenceFor(e.involvedObject)}\n                    namespace={e.involvedObject.namespace}\n                    name={e.involvedObject.name}\n                    title={e.involvedObject.uid}\n                  />\n                </FlexItem>\n              </Flex>\n              <div className=\"odc-monitoring-events__event-message\">{e.message}</div>\n            </div>\n          );\n        })\n      ) : (\n        <div className=\"text-secondary\">{t('devconsole~There are no recent events.')}</div>\n      )}\n    </div>\n  );\n};\n\nexport default MonitoringOverviewEvents;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink, DetailsItem, LabelList } from '@console/internal/components/utils';\nimport { useModelFinder } from '@console/internal/module/k8s';\nimport { ServiceBinding } from '../../types';\nimport ServiceBindingStatus from '../service-binding-status/ServiceBindingStatus';\n\ntype ServiceBindingSummaryProps = {\n  serviceBinding: ServiceBinding;\n};\n\nconst ServiceBindingSummary: React.FC<ServiceBindingSummaryProps> = ({ serviceBinding }) => {\n  const { findModel } = useModelFinder();\n  const { t } = useTranslation();\n\n  const model = findModel(\n    serviceBinding.spec.application.group,\n    serviceBinding.spec.application.resource,\n  );\n\n  return (\n    <dl>\n      <dt>{t('service-binding-plugin~Status')}</dt>\n      <dd>\n        <ServiceBindingStatus serviceBinding={serviceBinding} />\n      </dd>\n\n      {serviceBinding.spec?.application?.labelSelector ? (\n        <DetailsItem\n          label={t('service-binding-plugin~Label Selector')}\n          obj={serviceBinding}\n          path=\"spec.application.labelSelector\"\n        >\n          {(\n            <LabelList\n              kind={model.kind}\n              labels={serviceBinding.spec.application.labelSelector.matchLabels}\n            />\n          ) || '-'}\n        </DetailsItem>\n      ) : (\n        <DetailsItem\n          label={t('service-binding-plugin~Application')}\n          obj={serviceBinding}\n          path=\"spec.application\"\n        >\n          {serviceBinding.spec.application?.name || '-'}\n        </DetailsItem>\n      )}\n\n      <DetailsItem\n        label={t('service-binding-plugin~Services')}\n        obj={serviceBinding}\n        path=\"spec.services\"\n      >\n        {serviceBinding.spec?.services?.length\n          ? serviceBinding.spec.services.map((service, index) => (\n              <ResourceLink\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                groupVersionKind={service}\n                namespace={serviceBinding.metadata.namespace}\n                name={service.name}\n              />\n            ))\n          : '-'}\n      </DetailsItem>\n    </dl>\n  );\n};\n\nexport default ServiceBindingSummary;\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport CreateProjectListPage, {\n  CreateAProjectButton,\n} from '@console/dev-console/src/components/projects/CreateProjectListPage';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { useQueryParams, useUserSettingsCompatibility } from '@console/shared';\nimport { ErrorBoundaryFallbackPage, withFallback } from '@console/shared/src/components/error';\nimport {\n  LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY,\n  LAST_TOPOLOGY_VIEW_LOCAL_STORAGE_KEY,\n  TOPOLOGY_VIEW_CONFIG_STORAGE_KEY,\n} from '../../const';\nimport DataModelProvider from '../../data-transforms/DataModelProvider';\nimport { TOPOLOGY_SEARCH_FILTER_KEY } from '../../filters';\nimport { FilterProvider } from '../../filters/FilterProvider';\nimport { TopologyViewType } from '../../topology-types';\nimport { usePreferredTopologyView } from '../../user-preferences/usePreferredTopologyView';\nimport TopologyDataRenderer from './TopologyDataRenderer';\nimport TopologyPageToolbar from './TopologyPageToolbar';\n\ninterface TopologyPageProps {\n  activeViewStorageKey?: string;\n  hideProjects?: boolean;\n  defaultViewType?: TopologyViewType;\n}\n\ntype PageContentsProps = {\n  viewType: TopologyViewType;\n};\n\nconst PageContents: React.FC<PageContentsProps> = ({ viewType }) => {\n  const { t } = useTranslation();\n  const { name: namespace } = useParams();\n\n  return namespace ? (\n    <TopologyDataRenderer viewType={viewType} />\n  ) : (\n    <CreateProjectListPage title={t('topology~Topology')}>\n      {(openProjectModal) => (\n        <Trans t={t} ns=\"topology\">\n          Select a Project to view the topology\n          <CreateAProjectButton openProjectModal={openProjectModal} />.\n        </Trans>\n      )}\n    </CreateProjectListPage>\n  );\n};\n\nconst PageContentsWithStartGuide = withStartGuide(PageContents);\n\nexport const TopologyPage: React.FC<TopologyPageProps> = ({\n  activeViewStorageKey = LAST_TOPOLOGY_VIEW_LOCAL_STORAGE_KEY,\n  hideProjects = false,\n  defaultViewType = TopologyViewType.graph,\n}) => {\n  const [preferredTopologyView, preferredTopologyViewLoaded] = usePreferredTopologyView();\n  const [\n    topologyLastView,\n    setTopologyLastView,\n    isTopologyLastViewLoaded,\n  ] = useUserSettingsCompatibility<TopologyViewType>(\n    TOPOLOGY_VIEW_CONFIG_STORAGE_KEY,\n    activeViewStorageKey,\n    defaultViewType,\n  );\n  const params = useParams();\n\n  const loaded: boolean = preferredTopologyViewLoaded && isTopologyLastViewLoaded;\n\n  const topologyViewState = React.useMemo((): TopologyViewType => {\n    if (!loaded) {\n      return null;\n    }\n\n    if (preferredTopologyView === 'latest') {\n      return topologyLastView;\n    }\n\n    return (preferredTopologyView || topologyLastView) as TopologyViewType;\n  }, [loaded, preferredTopologyView, topologyLastView]);\n\n  const namespace = params.name;\n  const queryParams = useQueryParams();\n  const viewType =\n    (queryParams.get('view') as TopologyViewType) || topologyViewState || defaultViewType;\n\n  React.useEffect(() => {\n    const lastOverviewOpen = JSON.parse(\n      sessionStorage.getItem(LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY) ?? '{}',\n    );\n    if (loaded && namespace in lastOverviewOpen && !getQueryArgument('selectId')) {\n      setQueryArgument('selectId', lastOverviewOpen[namespace]);\n    }\n  }, [loaded, namespace]);\n\n  React.useEffect(() => {\n    if (!queryParams.get('view') && loaded) {\n      setQueryArgument('view', topologyViewState || defaultViewType);\n    }\n  }, [defaultViewType, topologyViewState, queryParams, loaded]);\n\n  const onViewChange = React.useCallback(\n    (newViewType: TopologyViewType) => {\n      setQueryArgument('view', newViewType);\n      setTopologyLastView(newViewType);\n    },\n    [setTopologyLastView],\n  );\n\n  const handleNamespaceChange = (ns: string) => {\n    if (ns !== namespace) {\n      removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n    }\n  };\n\n  const namespacedPageVariant = namespace\n    ? viewType === TopologyViewType.graph\n      ? NamespacedPageVariants.default\n      : NamespacedPageVariants.light\n    : NamespacedPageVariants.light;\n\n  return (\n    <FilterProvider>\n      <DataModelProvider namespace={namespace}>\n        <NamespacedPage\n          variant={namespacedPageVariant}\n          onNamespaceChange={handleNamespaceChange}\n          hideProjects={hideProjects}\n          toolbar={<TopologyPageToolbar viewType={viewType} onViewChange={onViewChange} />}\n          data-test-id={\n            viewType === TopologyViewType.graph ? 'topology-graph-page' : 'topology-list-page'\n          }\n        >\n          <PageContentsWithStartGuide viewType={viewType} />\n        </NamespacedPage>\n      </DataModelProvider>\n    </FilterProvider>\n  );\n};\n\nexport default withFallback(TopologyPage, ErrorBoundaryFallbackPage);\n","import { useUserSettings } from '@console/shared';\n\nconst PREFERRED_TOPOLOGY_VIEW_USER_SETTING_KEY = 'topology.preferredView';\n\nexport const usePreferredTopologyView = (): [string, boolean] => {\n  const [preferredTopologyView, , preferredTopologyViewLoaded] = useUserSettings<string>(\n    PREFERRED_TOPOLOGY_VIEW_USER_SETTING_KEY,\n  );\n  return [preferredTopologyView, preferredTopologyViewLoaded];\n};\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { StatusBox } from '@console/internal/components/utils';\nimport { ModelContext, ExtensibleModel } from '../../data-transforms/ModelContext';\nimport { TopologyViewType } from '../../topology-types';\nimport { DroppableTopologyComponent } from './DroppableTopologyComponent';\n\ninterface TopologyDataRendererProps {\n  viewType: TopologyViewType;\n}\n\nconst TopologyDataRenderer: React.FC<TopologyDataRendererProps> = observer(\n  function TopologyDataRenderer({ viewType }) {\n    const { t } = useTranslation();\n    const { namespace, model, loaded, loadError } = React.useContext<ExtensibleModel>(ModelContext);\n\n    return (\n      <StatusBox\n        skeleton={\n          viewType === TopologyViewType.list && (\n            <div className=\"co-m-pane__body skeleton-overview\">\n              <div className=\"skeleton-overview--head\" />\n              <div className=\"skeleton-overview--tile\" />\n              <div className=\"skeleton-overview--tile\" />\n              <div className=\"skeleton-overview--tile\" />\n            </div>\n          )\n        }\n        data={model}\n        label={t('topology~Topology')}\n        loaded={loaded}\n        loadError={loadError}\n      >\n        <DroppableTopologyComponent viewType={viewType} model={model} namespace={namespace} />\n      </StatusBox>\n    );\n  },\n);\n\nexport default TopologyDataRenderer;\n","import * as React from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { DropTarget, DropTargetConnector } from 'react-dnd';\nimport { NativeTypes } from 'react-dnd-html5-backend';\nimport { DropTargetMonitor } from 'react-dnd/lib/interfaces';\nimport {\n  FileUploadContextType,\n  FileUploadContext,\n} from '@console/app/src/components/file-upload/file-upload-context';\nimport withDragDropContext from '@console/internal/components/utils/drag-drop-context';\nimport { TopologyViewType } from '../../topology-types';\nimport TopologyView, { TopologyViewProps } from './TopologyView';\n\nconst boxTarget = {\n  drop(props, monitor) {\n    if (props.onDrop && monitor.isOver()) {\n      props.onDrop(monitor);\n    }\n  },\n};\n\nconst DroppableTopology = DropTarget(\n  NativeTypes.FILE,\n  boxTarget,\n  (connectObj: DropTargetConnector, monitor: DropTargetMonitor, props: TopologyViewProps) => {\n    return {\n      connectDropTarget: connectObj.dropTarget(),\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop() && props.canDropFile,\n    };\n  },\n)(TopologyView);\n\nexport const DroppableTopologyComponent = withDragDropContext<DroppableTopologyComponentProps>(\n  (props) => {\n    const { setFileUpload, extensions } = React.useContext<FileUploadContextType>(\n      FileUploadContext,\n    );\n\n    const handleFileDrop = (monitor: DropTargetMonitor) => {\n      if (!monitor) {\n        return;\n      }\n      const [file] = monitor.getItem().files;\n      if (!file) {\n        return;\n      }\n      setFileUpload(file);\n    };\n\n    return (\n      <DroppableTopology {...props} onDrop={handleFileDrop} canDropFile={extensions.length > 0} />\n    );\n  },\n);\n\nexport type DroppableTopologyComponentProps = {\n  model: Model;\n  namespace: string;\n  viewType: TopologyViewType;\n};\n","import * as React from 'react';\nimport { Drawer, DrawerContent, DrawerContentBody, Stack, StackItem } from '@patternfly/react-core';\nimport {\n  GraphElement,\n  isGraph,\n  Model,\n  TopologyQuadrant,\n  Visualization,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { ConnectDropTarget, DropTargetMonitor } from 'react-dnd';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport {\n  FileUploadContextType,\n  FileUploadContext,\n} from '@console/app/src/components/file-upload/file-upload-context';\nimport { useAddToProjectAccess } from '@console/dev-console/src/utils/useAddToProjectAccess';\nimport {\n  useResolvedExtensions,\n  isTopologyCreateConnector as isDynamicTopologyCreateConnector,\n  isTopologyDecoratorProvider as isDynamicTopologyDecoratorProvider,\n  isTopologyDisplayFilters as isDynamicTopologyDisplayFilters,\n  TopologyCreateConnector as DynamicTopologyCreateConnector,\n  TopologyDecoratorProvider as DynamicTopologyDecoratorProvider,\n  TopologyDisplayFilters as DynamicTopologyDisplayFilters,\n  TopologyRelationshipProvider,\n  isTopologyRelationshipProvider,\n} from '@console/dynamic-plugin-sdk';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { getEventSourceStatus } from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { useDeepCompareMemoize, useQueryParams } from '@console/shared';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY } from '../../const';\nimport { updateModelFromFilters } from '../../data-transforms/updateModelFromFilters';\nimport {\n  isTopologyCreateConnector,\n  isTopologyDecoratorProvider,\n  isTopologyDisplayFilters,\n  TopologyCreateConnector,\n  TopologyDecoratorProvider,\n  TopologyDisplayFilters,\n} from '../../extensions/topology';\nimport {\n  getTopologySearchQuery,\n  TOPOLOGY_LABELS_FILTER_KEY,\n  TOPOLOGY_SEARCH_FILTER_KEY,\n  useAppliedDisplayFilters,\n  useDisplayFilters,\n} from '../../filters';\nimport { FilterContext } from '../../filters/FilterProvider';\nimport TopologyFilterBar from '../../filters/TopologyFilterBar';\nimport { setSupportedTopologyFilters, setSupportedTopologyKinds } from '../../redux/action';\nimport {\n  GraphData,\n  TopologyDecorator,\n  TopologyDisplayFilterType,\n  TopologyViewType,\n} from '../../topology-types';\nimport Topology from '../graph-view/Topology';\nimport TopologyListView from '../list-view/TopologyListView';\nimport TopologyQuickSearch from '../quick-search/TopologyQuickSearch';\nimport { isSidebarRenderable, SelectedEntityDetails } from '../side-bar/SelectedEntityDetails';\nimport TopologySideBar from '../side-bar/TopologySideBar';\nimport { LimitExceededState } from './LimitExceededState';\nimport TopologyEmptyState from './TopologyEmptyState';\n\nimport './TopologyView.scss';\n\nconst FILTER_ACTIVE_CLASS = 'odc-m-filter-active';\nconst MAX_NODES_LIMIT = 300;\n\ninterface StateProps {\n  application?: string;\n  eventSourceEnabled?: boolean;\n}\n\ninterface DispatchProps {\n  onSelectTab?: (name: string) => void;\n  onSupportedFiltersChange?: (supportedFilterIds: string[]) => void;\n  onSupportedKindsChange?: (supportedKinds: { [key: string]: number }) => void;\n}\n\nexport interface TopologyViewProps {\n  model: Model;\n  namespace: string;\n  viewType: TopologyViewType;\n  connectDropTarget?: ConnectDropTarget;\n  isOver?: boolean;\n  canDrop?: boolean;\n  onDrop?: (monitor: DropTargetMonitor) => void;\n  canDropFile?: boolean;\n}\n\ntype ComponentProps = TopologyViewProps & StateProps & DispatchProps;\n\nexport const ConnectedTopologyView: React.FC<ComponentProps> = ({\n  model,\n  namespace,\n  viewType,\n  eventSourceEnabled,\n  application,\n  onSupportedFiltersChange,\n  onSupportedKindsChange,\n  connectDropTarget,\n  isOver,\n  canDrop,\n}) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [viewContainer, setViewContainer] = React.useState<HTMLElement>(null);\n  const { setTopologyFilters: onFiltersChange } = React.useContext(FilterContext);\n  const [filteredModel, setFilteredModel] = React.useState<Model>();\n  const [selectedEntity, setSelectedEntity] = React.useState<GraphElement>(null);\n  const [visualization, setVisualization] = React.useState<Visualization>();\n  const [showTopologyAnyway, setShowTopologyAnyway] = React.useState(false);\n  const displayFilters = useDisplayFilters();\n  const filters = useDeepCompareMemoize(displayFilters);\n  const applicationRef = React.useRef<string>(null);\n  const createResourceAccess: string[] = useAddToProjectAccess(namespace);\n  const [isQuickSearchOpen, setIsQuickSearchOpen] = React.useState<boolean>(\n    typeof getQueryArgument('catalogSearch') === 'string',\n  );\n  const setIsQuickSearchOpenAndFireEvent = React.useCallback(\n    (open: boolean) => {\n      if (open) {\n        fireTelemetryEvent('Quick Search Accessed');\n      }\n      setIsQuickSearchOpen(open);\n    },\n    [fireTelemetryEvent],\n  );\n  const appliedFilters = useAppliedDisplayFilters();\n  const [displayFilterExtensions, displayFilterExtensionsResolved] = useResolvedExtensions<\n    TopologyDisplayFilters\n  >(isTopologyDisplayFilters);\n\n  const [createConnectors, createConnectorsResolved] = useResolvedExtensions<\n    TopologyCreateConnector\n  >(isTopologyCreateConnector);\n  const [extensionDecorators, extensionDecoratorsResolved] = useResolvedExtensions<\n    TopologyDecoratorProvider\n  >(isTopologyDecoratorProvider);\n\n  const [\n    dynamicDisplayFilterExtensions,\n    dynamicDisplayFilterExtensionsResolved,\n  ] = useResolvedExtensions<DynamicTopologyDisplayFilters>(isDynamicTopologyDisplayFilters);\n  const [dynamicCreateConnectors, dynamicCreateConnectorsResolved] = useResolvedExtensions<\n    DynamicTopologyCreateConnector\n  >(isDynamicTopologyCreateConnector);\n  const [dynamicExtensionDecorators, dynamicExtensionDecoratorsResolved] = useResolvedExtensions<\n    DynamicTopologyDecoratorProvider\n  >(isDynamicTopologyDecoratorProvider);\n  const [relationshipProvider] = useResolvedExtensions<TopologyRelationshipProvider>(\n    isTopologyRelationshipProvider,\n  );\n\n  const [topologyDecorators, setTopologyDecorators] = React.useState<{\n    [key: string]: TopologyDecorator[];\n  }>({});\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const queryParams = useQueryParams();\n  const { extensions: supportedFileExtensions } = React.useContext<FileUploadContextType>(\n    FileUploadContext,\n  );\n\n  const searchParams = queryParams.get(TOPOLOGY_SEARCH_FILTER_KEY);\n  const labelParams = queryParams.get(TOPOLOGY_LABELS_FILTER_KEY);\n  const fileTypes = supportedFileExtensions.map((ex) => `.${ex}`).toString();\n\n  const onSelect = React.useCallback(\n    (entity?: GraphElement) => {\n      // set empty selection when selecting the graph\n      const selEntity = isGraph(entity) ? undefined : entity;\n      setSelectedEntity(selEntity);\n      if (!selEntity) {\n        removeQueryArgument('selectId');\n        sessionStorage.removeItem(LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY);\n      } else {\n        setQueryArgument('selectId', selEntity.getId());\n        sessionStorage.setItem(\n          LAST_TOPOLOGY_OVERVIEW_OPEN_STORAGE_KEY,\n          JSON.stringify({ [namespace]: selEntity.getId() }),\n        );\n      }\n    },\n    [namespace],\n  );\n\n  const graphData: GraphData = React.useMemo(\n    () => ({\n      createResourceAccess,\n      namespace,\n      eventSourceEnabled,\n      createConnectorExtensions:\n        createConnectorsResolved && dynamicCreateConnectorsResolved\n          ? [...createConnectors, ...dynamicCreateConnectors].map(\n              (creator) => creator.properties.getCreateConnector,\n            )\n          : [],\n      decorators: topologyDecorators,\n      relationshipProviderExtensions: relationshipProvider,\n    }),\n    [\n      createConnectors,\n      createConnectorsResolved,\n      createResourceAccess,\n      dynamicCreateConnectors,\n      dynamicCreateConnectorsResolved,\n      eventSourceEnabled,\n      namespace,\n      relationshipProvider,\n      topologyDecorators,\n    ],\n  );\n\n  React.useEffect(() => {\n    if (visualization) {\n      visualization.getGraph().setData(graphData);\n    }\n  }, [visualization, graphData]);\n\n  React.useEffect(() => {\n    if (extensionDecoratorsResolved && dynamicExtensionDecoratorsResolved) {\n      const allDecorators = [...extensionDecorators, ...dynamicExtensionDecorators].reduce(\n        (acc, extensionDecorator) => {\n          const decorator: TopologyDecorator = extensionDecorator.properties;\n          if (!acc[decorator.quadrant]) {\n            acc[decorator.quadrant] = [];\n          }\n          acc[decorator.quadrant].push(decorator);\n          return acc;\n        },\n        {\n          [TopologyQuadrant.upperLeft]: [],\n          [TopologyQuadrant.upperRight]: [],\n          [TopologyQuadrant.lowerLeft]: [],\n          [TopologyQuadrant.lowerRight]: [],\n        },\n      );\n      Object.keys(allDecorators).forEach((key) =>\n        allDecorators[key].sort((a, b) => a.priority - b.priority),\n      );\n      setTopologyDecorators(allDecorators);\n    }\n  }, [\n    dynamicExtensionDecorators,\n    dynamicExtensionDecoratorsResolved,\n    extensionDecorators,\n    extensionDecoratorsResolved,\n  ]);\n\n  React.useEffect(() => {\n    if (displayFilterExtensionsResolved && dynamicDisplayFilterExtensionsResolved) {\n      const updateFilters = [...filters];\n      [...displayFilterExtensions, ...dynamicDisplayFilterExtensions].forEach((extension) => {\n        const extFilters = extension.properties.getTopologyFilters();\n        extFilters?.forEach((filter) => {\n          if (!updateFilters.find((f) => f.id === filter.id)) {\n            if (appliedFilters[filter.id] !== undefined) {\n              filter.value = appliedFilters[filter.id];\n            }\n            updateFilters.push(filters.find((f) => f.id === filter.id) || filter);\n          }\n        });\n        onFiltersChange(updateFilters);\n        setFiltersLoaded(true);\n      });\n    }\n    // Only update on extension changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    displayFilterExtensionsResolved,\n    dynamicDisplayFilterExtensionsResolved,\n    displayFilterExtensions,\n    dynamicDisplayFilterExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (filtersLoaded) {\n      const newModel = updateModelFromFilters(\n        model,\n        filters,\n        application,\n        [...displayFilterExtensions, ...dynamicDisplayFilterExtensions].map(\n          (extension) => extension.properties.applyDisplayOptions,\n        ),\n        onSupportedFiltersChange,\n        onSupportedKindsChange,\n      );\n      applicationRef.current = application;\n      setFilteredModel(newModel);\n    }\n  }, [\n    model,\n    filters,\n    application,\n    filtersLoaded,\n    onSupportedFiltersChange,\n    onSupportedKindsChange,\n    displayFilterExtensions,\n    dynamicDisplayFilterExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (filters.find((f) => f.type !== TopologyDisplayFilterType.kind)) {\n      const updatedFilters = filters.filter((f) => f.type !== TopologyDisplayFilterType.kind);\n      onFiltersChange(updatedFilters);\n    }\n    // Only clear kind filters on namespace change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    const searchQuery = getTopologySearchQuery();\n    if (searchQuery.length > 0) {\n      document.body.classList.add(FILTER_ACTIVE_CLASS);\n    } else {\n      document.body.classList.remove(FILTER_ACTIVE_CLASS);\n    }\n  }, [searchParams, labelParams]);\n\n  const nodesLength = filteredModel?.nodes?.length ?? 0;\n\n  const viewContent = React.useMemo(\n    () =>\n      nodesLength <= MAX_NODES_LIMIT || showTopologyAnyway ? (\n        viewType === TopologyViewType.list ? (\n          <TopologyListView\n            model={filteredModel}\n            namespace={namespace}\n            onSelect={onSelect}\n            setVisualization={setVisualization}\n          />\n        ) : (\n          <Topology\n            model={filteredModel}\n            namespace={namespace}\n            application={applicationRef.current}\n            onSelect={onSelect}\n            setVisualization={setVisualization}\n          />\n        )\n      ) : null,\n    [filteredModel, namespace, onSelect, viewType, nodesLength, showTopologyAnyway],\n  );\n\n  const isSidebarAvailable = isSidebarRenderable(selectedEntity);\n\n  if (!filteredModel) {\n    return null;\n  }\n\n  const topologyViewComponent = (\n    <div className=\"odc-topology\">\n      <Stack>\n        <StackItem isFilled={false}>\n          <TopologyFilterBar\n            viewType={viewType}\n            visualization={visualization}\n            setIsQuickSearchOpen={setIsQuickSearchOpenAndFireEvent}\n            isDisabled={\n              !model.nodes?.length || (nodesLength > MAX_NODES_LIMIT && !showTopologyAnyway)\n            }\n          />\n        </StackItem>\n        <StackItem isFilled className=\"pf-topology-container\">\n          <div className=\"co-file-dropzone co-file-dropzone__flex\">\n            <Drawer isExpanded={isSidebarAvailable} isInline>\n              <DrawerContent\n                panelContent={\n                  <TopologySideBar onClose={() => onSelect()}>\n                    <SelectedEntityDetails selectedEntity={selectedEntity} />\n                  </TopologySideBar>\n                }\n              >\n                <DrawerContentBody>\n                  <div\n                    ref={setViewContainer}\n                    className=\"pf-topology-content ocs-quick-search-modal__no-backdrop\"\n                  >\n                    {canDrop && isOver && (\n                      <div\n                        className={classNames(\n                          'co-file-dropzone-container',\n                          'co-file-dropzone--drop-over',\n                          'odc-topology__dropzone',\n                        )}\n                      >\n                        <span className=\"co-file-dropzone__drop-text odc-topology__dropzone-text\">\n                          {t('topology~Drop file ({{fileTypes}}) here', { fileTypes })}\n                        </span>\n                      </div>\n                    )}\n                    {nodesLength > MAX_NODES_LIMIT && !showTopologyAnyway ? (\n                      <LimitExceededState\n                        onShowTopologyAnyway={() => setShowTopologyAnyway(true)}\n                      />\n                    ) : (\n                      viewContent\n                    )}\n                    {!model.nodes?.length ? (\n                      <TopologyEmptyState setIsQuickSearchOpen={setIsQuickSearchOpenAndFireEvent} />\n                    ) : null}\n                  </div>\n                </DrawerContentBody>\n              </DrawerContent>\n            </Drawer>\n          </div>\n        </StackItem>\n        <TopologyQuickSearch\n          namespace={namespace}\n          viewContainer={viewContainer}\n          isOpen={isQuickSearchOpen}\n          setIsOpen={setIsQuickSearchOpenAndFireEvent}\n        />\n      </Stack>\n    </div>\n  );\n\n  return typeof connectDropTarget === 'function'\n    ? connectDropTarget(topologyViewComponent)\n    : topologyViewComponent;\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    application: getActiveApplication(state),\n    eventSourceEnabled: getEventSourceStatus(state),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onSelectTab: (name) => dispatch(selectOverviewDetailsTab(name)),\n  onSupportedFiltersChange: (supportedFilterIds: string[]) => {\n    dispatch(setSupportedTopologyFilters(supportedFilterIds));\n  },\n  onSupportedKindsChange: (supportedKinds: { [key: string]: number }) => {\n    dispatch(setSupportedTopologyKinds(supportedKinds));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, TopologyViewProps>(\n  TopologyStateToProps,\n  TopologyDispatchToProps,\n)(ConnectedTopologyView);\n","import { createAggregateEdges, Model, NodeModel } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { ALL_APPLICATIONS_KEY, UNASSIGNED_APPLICATIONS_KEY } from '@console/shared/src';\nimport { TYPE_AGGREGATE_EDGE, TYPE_APPLICATION_GROUP } from '../const';\nimport {\n  DEFAULT_SUPPORTED_FILTER_IDS,\n  EXPAND_APPLICATION_GROUPS_FILTER_ID,\n  isExpanded,\n  showKind,\n} from '../filters';\nimport { DisplayFilters, OdcNodeModel, TopologyApplyDisplayOptions } from '../topology-types';\nimport { getTopologyResourceObject } from '../utils/topology-utils';\n\nconst getApplicationGroupForNode = (node: NodeModel, groups: NodeModel[]): NodeModel => {\n  if (node.type === TYPE_APPLICATION_GROUP) {\n    return node;\n  }\n  const group = groups.find((g) => g.group && g.children?.includes(node.id));\n  if (!group) {\n    return null;\n  }\n  if (group.type === TYPE_APPLICATION_GROUP) {\n    return group;\n  }\n  return getApplicationGroupForNode(group, groups);\n};\n\nconst getNodeKind = (node: NodeModel) => {\n  let { resource } = node as OdcNodeModel;\n  if (resource) {\n    const ref = referenceFor(resource);\n    if (ref) {\n      return ref;\n    }\n  }\n  const kind = (node as OdcNodeModel).resourceKind;\n  if (kind) {\n    return kind;\n  }\n  resource = getTopologyResourceObject(node.data);\n  if (resource) {\n    return referenceFor(resource);\n  }\n\n  return null;\n};\n\nconst isNodeShown = (node: NodeModel, filters: DisplayFilters, allNodes: NodeModel[]): boolean => {\n  let shown = showKind(getNodeKind(node), filters);\n  if (!shown) {\n    const parentNode = allNodes.find(\n      (n) => n.group && n.type !== TYPE_APPLICATION_GROUP && n.children?.includes(node.id),\n    );\n    shown = parentNode && isNodeShown(parentNode, filters, allNodes);\n  }\n  return shown;\n};\n\nexport const updateModelFromFilters = (\n  model: Model,\n  filters: DisplayFilters,\n  application: string = ALL_APPLICATIONS_KEY,\n  displayFilterers?: TopologyApplyDisplayOptions[],\n  onSupportedFiltersChange?: (supportedFilterIds: string[]) => void,\n  onSupportedKindsChange?: (supportedFilterIds: { [key: string]: number }) => void,\n): Model => {\n  const dataModel: Model = {\n    nodes: _.cloneDeep(model.nodes),\n    edges: _.cloneDeep(model.edges),\n  };\n\n  const supportedFilters = [...DEFAULT_SUPPORTED_FILTER_IDS];\n  const supportedKinds = {};\n  let appGroupFound = false;\n  const expanded = isExpanded(EXPAND_APPLICATION_GROUPS_FILTER_ID, filters);\n  dataModel.nodes.forEach((d) => {\n    d.visible = true;\n    if (displayFilterers) {\n      displayFilterers.forEach((displayFilterer) => {\n        const appliedFilters = displayFilterer(dataModel, filters);\n        supportedFilters.push(...appliedFilters.filter((f) => !supportedFilters.includes(f)));\n      });\n    }\n    if (d.type === TYPE_APPLICATION_GROUP) {\n      if (!appGroupFound) {\n        appGroupFound = true;\n        supportedFilters.push(EXPAND_APPLICATION_GROUPS_FILTER_ID);\n      }\n      d.collapsed = !expanded;\n    }\n    const kind = getNodeKind(d);\n    if (kind) {\n      if (!supportedKinds[kind]) {\n        supportedKinds[kind] = 0;\n      }\n      supportedKinds[kind]++;\n    }\n  });\n\n  dataModel.nodes = dataModel.nodes.filter((d) => isNodeShown(d, filters, dataModel.nodes));\n\n  dataModel.nodes.forEach((d) => {\n    if (d.group && d.children) {\n      d.children = d.children.filter((id) => dataModel.nodes.find((n) => n.id === id));\n    }\n  });\n\n  // Flag any nodes hidden by the application filter\n  if (application !== ALL_APPLICATIONS_KEY) {\n    dataModel.nodes.forEach((g) => {\n      const group = getApplicationGroupForNode(g, dataModel.nodes);\n      g.visible =\n        (g.visible && group?.label === application) ||\n        (!group && application === UNASSIGNED_APPLICATIONS_KEY);\n    });\n  }\n\n  // create links from data, only include those which have a valid source and target\n  const edges = dataModel.edges.filter(\n    (d) =>\n      dataModel.nodes.find((n) => n.id === d.source) &&\n      dataModel.nodes.find((n) => n.id === d.target),\n  );\n\n  // Create any aggregate edges (those create from hidden endpoints)\n  dataModel.edges = createAggregateEdges(TYPE_AGGREGATE_EDGE, edges, dataModel.nodes);\n\n  if (onSupportedFiltersChange) {\n    onSupportedFiltersChange(supportedFilters);\n  }\n\n  if (onSupportedKindsChange) {\n    onSupportedKindsChange(supportedKinds);\n  }\n\n  return dataModel;\n};\n","import * as React from 'react';\nimport {\n  Toolbar,\n  ToolbarGroup,\n  ToolbarGroupVariant,\n  ToolbarItem,\n  ToolbarContent,\n  Popover,\n  Button,\n  ToolbarFilter,\n} from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { Visualization, isNode } from '@patternfly/react-topology';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport PDBAlert from '@console/app/src/components/pdb/PDBAlert';\nimport { ResourceQuotaAlert } from '@console/dev-console/src/components/resource-quota/ResourceQuotaAlert';\nimport { ExternalLink, setQueryArgument } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { requirementFromString } from '@console/internal/module/k8s/selector-requirement';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ServiceBindingWarningForTopology } from '@console/service-binding-plugin/src/components/service-binding-utils/ServiceBindingAlerts';\nimport { useFlag, useQueryParams } from '@console/shared';\nimport ExportApplication from '../components/export-app/ExportApplication';\nimport TopologyQuickSearchButton from '../components/quick-search/TopologyQuickSearchButton';\nimport { ALLOW_EXPORT_APP } from '../const';\nimport { TopologyViewType } from '../topology-types';\nimport { getResource } from '../utils';\nimport { getNamespaceDashboardKialiLink } from '../utils/topology-utils';\nimport {\n  clearAll,\n  clearLabelFilter,\n  clearNameFilter,\n  getSupportedTopologyFilters,\n  getSupportedTopologyKinds,\n  onSearchChange,\n  NameLabelFilterValues,\n  TOPOLOGY_LABELS_FILTER_KEY,\n  TOPOLOGY_SEARCH_FILTER_KEY,\n} from './filter-utils';\nimport FilterDropdown from './FilterDropdown';\nimport { FilterContext } from './FilterProvider';\nimport KindFilterDropdown from './KindFilterDropdown';\nimport NameLabelFilterDropdown from './NameLabelFilterDropdown';\nimport './TopologyFilterBar.scss';\n\ntype StateProps = {\n  supportedFilters: string[];\n  supportedKinds: { [key: string]: number };\n  namespace: string;\n};\n\ntype OwnProps = {\n  isDisabled: boolean;\n  visualization?: Visualization;\n  viewType: TopologyViewType;\n  setIsQuickSearchOpen: (isOpen: boolean) => void;\n};\n\ntype TopologyFilterBarProps = StateProps & OwnProps;\n\nconst TopologyFilterBar: React.FC<TopologyFilterBarProps> = ({\n  supportedFilters,\n  supportedKinds,\n  isDisabled,\n  visualization,\n  viewType,\n  namespace,\n  setIsQuickSearchOpen,\n}) => {\n  const { t } = useTranslation();\n  const { filters, setTopologyFilters: onFiltersChange } = React.useContext(FilterContext);\n  const [labelFilterInput, setLabelFilterInput] = React.useState('');\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const kialiLink = getNamespaceDashboardKialiLink(consoleLinks, namespace);\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get(TOPOLOGY_SEARCH_FILTER_KEY) || '';\n  const labelsQuery = queryParams.get(TOPOLOGY_LABELS_FILTER_KEY)?.split(',') || [];\n  const isExportApplicationEnabled = useFlag(ALLOW_EXPORT_APP);\n  const updateNameFilter = (value: string) => {\n    const query = value?.trim();\n    onSearchChange(query);\n  };\n\n  const updateLabelFilter = (value: string, endOfString: boolean) => {\n    setLabelFilterInput(value);\n    if (requirementFromString(value) !== undefined && endOfString) {\n      const updatedLabels = [...new Set([...labelsQuery, value])];\n      setQueryArgument(TOPOLOGY_LABELS_FILTER_KEY, updatedLabels.join(','));\n      setLabelFilterInput('');\n    }\n  };\n\n  const updateSearchFilter = (type: string, value: string, endOfString: boolean) => {\n    type === NameLabelFilterValues.Label\n      ? updateLabelFilter(value, endOfString)\n      : updateNameFilter(value);\n  };\n\n  const removeLabelFilter = (filter: string, value: string) => {\n    const newLabels = labelsQuery.filter((keepItem: string) => keepItem !== value);\n    newLabels.length > 0\n      ? setQueryArgument(TOPOLOGY_LABELS_FILTER_KEY, newLabels.join(','))\n      : clearLabelFilter();\n  };\n\n  const resources = (visualization?.getElements() || [])\n    .filter(isNode)\n    .map(getResource)\n    .filter((r) => !!r);\n\n  return (\n    <Toolbar className=\"co-namespace-bar odc-topology-filter-bar\" clearAllFilters={clearAll}>\n      <ToolbarContent>\n        <ToolbarItem>\n          <TopologyQuickSearchButton onClick={() => setIsQuickSearchOpen(true)} />\n        </ToolbarItem>\n        <ToolbarGroup variant={ToolbarGroupVariant['filter-group']}>\n          <ToolbarItem>\n            <FilterDropdown\n              filters={filters}\n              viewType={viewType}\n              supportedFilters={supportedFilters}\n              onChange={onFiltersChange}\n              isDisabled={isDisabled}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup variant={ToolbarGroupVariant['filter-group']}>\n          <ToolbarItem data-test=\"filter-by-resource\">\n            <KindFilterDropdown\n              filters={filters}\n              supportedKinds={supportedKinds}\n              onChange={onFiltersChange}\n              isDisabled={isDisabled}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup variant={ToolbarGroupVariant['filter-group']}>\n          <ToolbarItem>\n            <ToolbarFilter\n              deleteChipGroup={clearLabelFilter}\n              chips={[...labelsQuery]}\n              deleteChip={removeLabelFilter}\n              categoryName={t('topology~Label')}\n            >\n              <ToolbarFilter\n                chips={searchQuery.length > 0 ? [searchQuery] : []}\n                deleteChip={clearNameFilter}\n                categoryName={t('topology~Name')}\n              >\n                <NameLabelFilterDropdown\n                  onChange={updateSearchFilter}\n                  nameFilterInput={searchQuery}\n                  labelFilterInput={labelFilterInput}\n                  data={resources}\n                  isDisabled={isDisabled}\n                />\n              </ToolbarFilter>\n            </ToolbarFilter>\n          </ToolbarItem>\n          {viewType === TopologyViewType.graph ? (\n            <ToolbarItem>\n              <Popover\n                aria-label={t('topology~Find by name')}\n                position=\"left\"\n                bodyContent={\n                  <Trans ns=\"topology\">\n                    Search results may appear outside of the visible area.{' '}\n                    <Button\n                      variant=\"link\"\n                      onClick={() => visualization.getGraph().fit(80)}\n                      isInline\n                    >\n                      Click here\n                    </Button>{' '}\n                    to fit to the screen.\n                  </Trans>\n                }\n              >\n                <Button\n                  variant=\"link\"\n                  className=\"odc-topology-filter-bar__info-icon\"\n                  aria-label={t('topology~Find by name')}\n                  isDisabled={isDisabled}\n                >\n                  <InfoCircleIcon />\n                </Button>\n              </Popover>\n            </ToolbarItem>\n          ) : null}\n        </ToolbarGroup>\n        <ToolbarGroup\n          variant={ToolbarGroupVariant['button-group']}\n          align={{ default: 'alignRight' }}\n        >\n          <ToolbarItem>\n            <ServiceBindingWarningForTopology namespace={namespace} />\n          </ToolbarItem>\n          <ToolbarItem>\n            <PDBAlert namespace={namespace} />\n          </ToolbarItem>\n          <ToolbarItem\n            className={\n              isExportApplicationEnabled || kialiLink\n                ? 'odc-topology-filter-bar__resource-quota-warning-block'\n                : ''\n            }\n          >\n            <ResourceQuotaAlert namespace={namespace} />\n          </ToolbarItem>\n          {kialiLink && (\n            <ToolbarItem className=\"odc-topology-filter-bar__kiali-link1\">\n              <ExternalLink href={kialiLink} text={t('topology~Kiali')} />\n            </ToolbarItem>\n          )}\n          <ExportApplication namespace={namespace} isDisabled={isDisabled} />\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  const states = {\n    supportedFilters: getSupportedTopologyFilters(state),\n    supportedKinds: getSupportedTopologyKinds(state),\n    namespace: getActiveNamespace(state),\n  };\n  return states;\n};\n\nexport default connect<StateProps>(mapStateToProps)(TopologyFilterBar);\n","import * as React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  useK8sWatchResource,\n  YellowExclamationTriangleIcon,\n} from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport { resourcePathFromModel } from '@console/internal/components/utils/resource-link';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { PodDisruptionBudgetModel } from '../../models';\nimport { PodDisruptionBudgetKind } from './types';\nimport { checkPodDisruptionBudgets } from './utils/get-pdb-resources';\n\nexport interface PDBAlertProps {\n  namespace: string;\n}\n\nexport const PDBAlert: React.FC<PDBAlertProps> = ({ namespace }) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n\n  const resource = React.useMemo(\n    () => ({\n      groupVersionKind: {\n        group: PodDisruptionBudgetModel.apiGroup,\n        kind: PodDisruptionBudgetModel.kind,\n        version: PodDisruptionBudgetModel.apiVersion,\n      },\n      isList: true,\n      namespaced: true,\n      namespace,\n    }),\n    [namespace],\n  );\n\n  const [resources, loaded, loadError] = useK8sWatchResource<PodDisruptionBudgetKind[]>(resource);\n\n  const { count: pdbCount, name: pdbName } = checkPodDisruptionBudgets(resources);\n  const getRedirectLink = () => {\n    return resourcePathFromModel(PodDisruptionBudgetModel, pdbName || null, namespace);\n  };\n\n  const onWarningLinkClick = () => {\n    fireTelemetryEvent('PodDisruptionBudget Warning Label Clicked');\n  };\n\n  return (\n    <>\n      {pdbCount > 0 && loaded && !loadError && (\n        <Label color=\"orange\" icon={<YellowExclamationTriangleIcon />}>\n          <Link to={getRedirectLink()} data-test=\"pdb-warning\" onClick={onWarningLinkClick}>\n            <Trans t={t} ns=\"console-app\" count={pdbCount}>\n              {{ count: pdbCount }} PodDisruptionBudget violated\n            </Trans>\n          </Link>\n        </Label>\n      )}\n    </>\n  );\n};\n\nexport default PDBAlert;\n","import * as React from 'react';\nimport { ToolbarItem, Button } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { useFlag, useIsMobile, useToast } from '@console/shared/src';\nimport { ALLOW_EXPORT_APP, EXPORT_CR_NAME } from '../../const';\nimport { ExportModel } from '../../models';\nimport { handleExportApplication } from './ExportApplicationModal';\n\ntype ExportApplicationProps = {\n  namespace: string;\n  isDisabled: boolean;\n};\n\nconst ExportApplication: React.FC<ExportApplicationProps> = ({ namespace, isDisabled }) => {\n  const { t } = useTranslation();\n  const isMobile = useIsMobile();\n  const toast = useToast();\n  const isExportAppAllowed = useFlag(ALLOW_EXPORT_APP);\n  const canExportApp = useAccessReview({\n    group: ExportModel.apiGroup,\n    resource: ExportModel.plural,\n    verb: 'create',\n    namespace,\n  });\n\n  const showExportAppBtn = canExportApp && isExportAppAllowed && !isMobile;\n  const name = EXPORT_CR_NAME;\n\n  return showExportAppBtn ? (\n    <ToolbarItem>\n      <Button\n        variant=\"secondary\"\n        data-test=\"export-app-btn\"\n        aria-label={t('topology~Export application')}\n        isDisabled={isDisabled}\n        onClick={() => handleExportApplication(name, namespace, toast)}\n      >\n        {t('topology~Export application')}\n      </Button>\n    </ToolbarItem>\n  ) : null;\n};\n\nexport default ExportApplication;\n","import * as React from 'react';\nimport {\n  Switch,\n  Divider,\n  Select,\n  SelectGroup,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { DisplayFilters, TopologyDisplayFilterType, TopologyViewType } from '../topology-types';\nimport { EXPAND_GROUPS_FILTER_ID } from './const';\n\nimport './FilterDropdown.scss';\n\ntype FilterDropdownProps = {\n  filters: DisplayFilters;\n  viewType: TopologyViewType;\n  supportedFilters: string[];\n  onChange: (filter: DisplayFilters) => void;\n  isDisabled?: boolean;\n  opened?: boolean; // Use only for testing\n};\n\nconst FilterDropdown: React.FC<FilterDropdownProps> = ({\n  filters,\n  viewType,\n  supportedFilters,\n  onChange,\n  isDisabled = false,\n  opened = false,\n}) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [isOpen, setIsOpen] = React.useState(opened);\n  const groupsExpanded = filters?.find((f) => f.id === EXPAND_GROUPS_FILTER_ID)?.value ?? true;\n\n  const onToggle = (_event, open: boolean): void => setIsOpen(open);\n  const onSelect = (e: React.MouseEvent, key: string) => {\n    const index = filters.findIndex((f) => f.id === key);\n    const filter = { ...filters[index], value: (e.target as HTMLInputElement).checked };\n    onChange([...filters.slice(0, index), filter, ...filters.slice(index + 1)]);\n    fireTelemetryEvent('Topology Display Option Changed', {\n      property: key,\n      value: (e.target as HTMLInputElement).checked,\n    });\n  };\n\n  const onGroupsExpandedChange = (_event, value: boolean) => {\n    const index = filters?.findIndex((f) => f.id === EXPAND_GROUPS_FILTER_ID) ?? -1;\n    if (index === -1) {\n      return;\n    }\n    const filter = {\n      ...filters[index],\n      value,\n    };\n    onChange([...filters.slice(0, index), filter, ...filters.slice(index + 1)]);\n    fireTelemetryEvent('Topology Display Option Changed', {\n      property: EXPAND_GROUPS_FILTER_ID,\n      value,\n    });\n  };\n\n  const expandFilters = filters\n    .filter(\n      (f) =>\n        f.type === TopologyDisplayFilterType.expand &&\n        f.id !== EXPAND_GROUPS_FILTER_ID &&\n        supportedFilters.includes(f.id),\n    )\n    .sort((a, b) => a.priority - b.priority);\n\n  const showFilters = filters\n    .filter((f) => f.type === TopologyDisplayFilterType.show && supportedFilters.includes(f.id))\n    .sort((a, b) => a.priority - b.priority);\n\n  const isSelectDisabled =\n    isDisabled ||\n    (viewType === TopologyViewType.graph\n      ? !expandFilters.length && !showFilters.length\n      : !expandFilters.length);\n\n  const selectContent = (\n    <div className=\"odc-topology-filter-dropdown\">\n      {expandFilters.length ? (\n        <div className=\"odc-topology-filter-dropdown__group\">\n          <span className=\"odc-topology-filter-dropdown__expand-groups-switcher\">\n            <span className=\"pf-v5-c-menu__group-title\">{t('topology~Expand')}</span>\n            <Switch\n              aria-label={t('topology~Collapse groups')}\n              isChecked={groupsExpanded}\n              onChange={onGroupsExpandedChange}\n            />\n          </span>\n          <SelectGroup className=\"odc-topology-filter-dropdown__expand-groups-label\" label={<></>}>\n            {expandFilters.map((filter) => (\n              <SelectOption\n                key={filter.id}\n                value={filter.id}\n                isDisabled={!groupsExpanded}\n                isSelected={filter.value}\n                hasCheckbox\n              >\n                {filter.labelKey ? t(filter.labelKey) : filter.label}\n              </SelectOption>\n            ))}\n          </SelectGroup>\n        </div>\n      ) : null}\n      {viewType === TopologyViewType.graph && showFilters.length ? (\n        <div>\n          <Divider />\n          <SelectGroup label={t('topology~Show')}>\n            {showFilters.map((filter) => (\n              <SelectOption key={filter.id} value={filter.id} isSelected={filter.value} hasCheckbox>\n                {filter.labelKey ? t(filter.labelKey) : filter.label}\n              </SelectOption>\n            ))}\n          </SelectGroup>\n        </div>\n      ) : null}\n    </div>\n  );\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={() => setIsOpen(!isOpen)}\n      isExpanded={isOpen}\n      isDisabled={isSelectDisabled}\n    >\n      {t('topology~Display options')}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      toggle={toggle}\n      className=\"odc-topology-filter-dropdown__select\"\n      onToggle={onToggle}\n      isOpen={isOpen}\n      onSelect={onSelect}\n      isGrouped\n      isCheckboxSelectionBadgeHidden\n      onOpenChange={(open) => setIsOpen(open)}\n    >\n      <SelectList>{selectContent}</SelectList>\n    </Select>\n  );\n};\n\nexport default FilterDropdown;\n","import * as React from 'react';\nimport {\n  Button,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { getTitleForNodeKind } from '@console/shared';\nimport { TopologyDisplayFilterType, DisplayFilters } from '../topology-types';\nimport './KindFilterDropdown.scss';\n\ntype KindFilterDropdownProps = {\n  filters: DisplayFilters;\n  supportedKinds: { [key: string]: number };\n  onChange: (filter: DisplayFilters) => void;\n  isDisabled?: boolean;\n  opened?: boolean; // Use only for testing\n};\n\nconst KindFilterDropdown: React.FC<KindFilterDropdownProps> = ({\n  filters,\n  supportedKinds,\n  onChange,\n  isDisabled = false,\n  opened = false,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState(opened);\n  const onToggle = (_event, open: boolean): void => setIsOpen(open);\n  let kindFilters = filters.filter(\n    (f) => f.type === TopologyDisplayFilterType.kind && supportedKinds[f.id],\n  );\n  const selectedFilterCount = kindFilters.filter((f) => f.value).length;\n  kindFilters = Object.keys(supportedKinds).reduce((acc, kind) => {\n    if (!filters.find((f) => f.id === kind)) {\n      acc.push({\n        type: TopologyDisplayFilterType.kind,\n        id: kind,\n        label: getTitleForNodeKind(kind),\n        value: false,\n        priority: 1,\n      });\n    }\n    return acc;\n  }, kindFilters);\n  kindFilters.sort((a, b) => a.label.localeCompare(b.label));\n\n  const onSelect = (e: React.MouseEvent, key: string) => {\n    const index = filters.findIndex((f) => f.id === key);\n    let updatedFilters;\n    if (index === -1) {\n      const newFilter = kindFilters.find((f) => f.id === key);\n      if (!newFilter) {\n        return;\n      }\n      const filter = { ...newFilter, value: (e.target as HTMLInputElement).checked };\n      updatedFilters = [...filters, filter];\n    } else {\n      const filter = { ...filters[index], value: (e.target as HTMLInputElement).checked };\n      updatedFilters = [...filters.slice(0, index), filter, ...filters.slice(index + 1)];\n    }\n    onChange(updatedFilters);\n  };\n\n  const onClearFilters = () => {\n    const updateFilters = filters.filter((f) => f.type !== TopologyDisplayFilterType.kind);\n    onChange(updateFilters);\n  };\n\n  const selectContent = (\n    <div className=\"odc-topology-filter-dropdown__group odc-kind-filter-dropdown\">\n      <span className=\"odc-kind-filter-dropdown__clear-button\">\n        <Button variant=\"link\" onClick={onClearFilters}>\n          {t('topology~Clear all filters')}\n        </Button>\n      </span>\n      {kindFilters.map((filter) => (\n        <SelectOption\n          key={filter.id}\n          value={filter.id}\n          isSelected={filter.value}\n          data-test={filter.label}\n          hasCheckbox\n        >\n          <ResourceIcon kind={filter.id} />\n          {filter.label} ({supportedKinds[filter.id]})\n        </SelectOption>\n      ))}\n    </div>\n  );\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={() => setIsOpen(!isOpen)}\n      isExpanded={isOpen}\n      isDisabled={isDisabled}\n    >\n      {t('topology~Filter by resource')}\n      {selectedFilterCount ? (\n        <span className=\"odc-kind-filter-dropdown__kind-count\">{selectedFilterCount}</span>\n      ) : null}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      toggle={toggle}\n      onToggle={onToggle}\n      isOpen={isOpen}\n      onSelect={onSelect}\n      onOpenChange={(open) => setIsOpen(open)}\n    >\n      <SelectList>{selectContent}</SelectList>\n    </Select>\n  );\n};\n\nexport default KindFilterDropdown;\n","import * as React from 'react';\nimport {\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { useTranslation } from 'react-i18next';\nimport AutocompleteInput from '@console/internal/components/autocomplete';\nimport { TextFilter } from '@console/internal/components/factory';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { NameLabelFilterValues } from './filter-utils';\n\ntype NameLabelFilterDropdownProps = {\n  isDisabled: boolean;\n  data: K8sResourceKind[];\n  onChange: (type: string, value: string, endOfString: boolean) => void;\n  nameFilterInput: string;\n  labelFilterInput: string;\n};\n\nconst NameLabelFilterDropdown: React.FC<NameLabelFilterDropdownProps> = (props) => {\n  const { data, onChange, nameFilterInput, labelFilterInput, isDisabled } = props;\n\n  const [isOpen, setOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState(NameLabelFilterValues.Name);\n\n  const { t } = useTranslation();\n\n  const onToggle = (_event, open: boolean) => setOpen(open);\n  const dropdownItems = [NameLabelFilterValues.Name, NameLabelFilterValues.Label];\n\n  const handleInputValue = (value: string) => {\n    onChange(selected, value, false);\n  };\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={(_event) => {\n        onToggle(_event, !isOpen);\n      }}\n      isDisabled={isDisabled}\n    >\n      <>\n        <FilterIcon className=\"span--icon__right-margin\" /> {t(selected)}\n      </>\n    </MenuToggle>\n  );\n\n  return (\n    <div className=\"pf-v5-c-input-group\">\n      <Select\n        onSelect={(_event, value: NameLabelFilterValues) => {\n          if (value) {\n            setSelected(value as NameLabelFilterValues);\n          }\n          setOpen(false);\n        }}\n        toggle={toggle}\n        isOpen={isOpen}\n        onOpenChange={(open) => setOpen(open)}\n      >\n        <SelectList>\n          {dropdownItems.map((item) => (\n            <SelectOption key={item} value={item} isSelected={selected === item}>\n              {t(item)}\n            </SelectOption>\n          ))}\n        </SelectList>\n      </Select>\n      {selected === NameLabelFilterValues.Label ? (\n        <AutocompleteInput\n          onSuggestionSelect={(label) => {\n            onChange(NameLabelFilterValues.Label, label, true);\n          }}\n          showSuggestions\n          textValue={labelFilterInput}\n          setTextValue={handleInputValue}\n          placeholder={t('topology~Find by label...')}\n          data={data}\n          className=\"co-text-node\"\n          labelPath={'metadata.labels'}\n        />\n      ) : (\n        <TextFilter\n          onChange={(_event, value) => handleInputValue(value)}\n          placeholder={t('topology~Find by name...')}\n          value={nameFilterInput}\n          aria-labelledby=\"toggle-id\"\n          isDisabled={isDisabled}\n          autoFocus\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NameLabelFilterDropdown;\n","import * as React from 'react';\nimport { DataList } from '@patternfly/react-core';\nimport {\n  observer,\n  isGraph,\n  Node,\n  isNode,\n  Visualization,\n  GraphElement,\n  Model,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { alertingLoaded } from '@console/internal/actions/observe';\nimport * as UIActions from '@console/internal/actions/ui';\nimport { OverviewMetrics } from '@console/internal/components/overview/metricUtils';\nimport { useQueryParams } from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TYPE_APPLICATION_GROUP } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { subscribeOverviewAlerts } from '../utils/subscribeOverviewAlerts';\nimport { subscribeOverviewMetrics } from '../utils/subscribeOverviewMetrics';\nimport { getChildKinds, sortGroupChildren } from './list-view-utils';\nimport TopologyListViewAppGroup from './TopologyListViewAppGroup';\nimport TopologyListViewUnassignedGroup from './TopologyListViewUnassignedGroup';\n\nimport './TopologyListView.scss';\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  selectedId: string;\n  onSelect: (entity?: GraphElement) => void;\n  applicationGroups: Node[];\n  unassignedItems: Node[];\n}\n\nconst TopologyListViewComponent: React.FC<TopologyGraphViewProps> = React.memo(\n  function TopologyListViewComponent({\n    visualizationReady,\n    visualization,\n    onSelect,\n    applicationGroups,\n    unassignedItems,\n    selectedId,\n  }) {\n    if (!visualizationReady) {\n      return null;\n    }\n\n    return (\n      <div className=\"odc-topology-list-view\">\n        <DataList\n          aria-label=\"Topology List View\"\n          className=\"odc-topology-list-view__data-list\"\n          selectedDataListItemId={selectedId}\n          onSelectDataListItem={(_event, id) =>\n            onSelect(selectedId === id ? undefined : visualization.getElementById(id))\n          }\n        >\n          {applicationGroups.map((g) => (\n            <TopologyListViewAppGroup\n              key={g.getId()}\n              appGroup={g}\n              selectedIds={[selectedId]}\n              onSelect={(ids) => onSelect(ids ? visualization.getElementById(ids[0]) : undefined)}\n            />\n          ))}\n          {unassignedItems.length > 0 ? (\n            <TopologyListViewUnassignedGroup\n              key=\"unassigned\"\n              showCategory={applicationGroups.length > 0}\n              items={unassignedItems}\n              selectedIds={[selectedId]}\n              onSelect={(ids) => onSelect(ids ? visualization.getElementById(ids[0]) : undefined)}\n            />\n          ) : null}\n        </DataList>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => {\n    if (\n      prevProps.visualizationReady !== nextProps.visualizationReady ||\n      prevProps.visualization !== nextProps.visualization ||\n      prevProps.onSelect !== nextProps.onSelect ||\n      prevProps.selectedId !== nextProps.selectedId\n    ) {\n      return false;\n    }\n    return (\n      _.isEqual(\n        prevProps.applicationGroups.map((g) => ({\n          label: g.getId(),\n        })),\n        nextProps.applicationGroups.map((g) => ({\n          label: g.getId(),\n        })),\n      ) &&\n      _.isEqual(\n        prevProps.unassignedItems.map((g) => ({\n          label: g.getId(),\n        })),\n        nextProps.unassignedItems.map((g) => ({\n          label: g.getId(),\n        })),\n      )\n    );\n  },\n);\n\nconst TOPOLOGY_LIST_ID = 'odc-topology-list';\nconst listModel: Model = {\n  graph: {\n    id: TOPOLOGY_LIST_ID,\n    type: 'graph',\n  },\n};\ninterface TopologyListViewPropsFromState {\n  metrics: OverviewMetrics;\n}\n\ninterface TopologyListViewPropsFromDispatch {\n  updateMetrics: (metrics: OverviewMetrics) => void;\n  updateMonitoringAlerts: (alerts: Alert[]) => void;\n}\n\ninterface TopologyListViewProps {\n  model: Model;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst ConnectedTopologyListView: React.FC<\n  TopologyListViewProps & TopologyListViewPropsFromDispatch & TopologyListViewPropsFromState\n> = observer(function TopologyListView({\n  model,\n  onSelect,\n  setVisualization,\n  namespace,\n  metrics,\n  updateMetrics,\n  updateMonitoringAlerts,\n}) {\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n\n  const createVisualization = () => {\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.fromModel(listModel);\n    return newVisualization;\n  };\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n\n  const visualization = visualizationRef.current;\n\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model) {\n      // Clear out any layout that might have been saved\n      if (model.graph?.layout) {\n        delete model.graph.layout;\n      }\n      visualization.fromModel(model);\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    setVisualizationReady(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, onSelect, visualization]);\n\n  const nodes = visualization.getElements().filter((e) => isNode(e)) as Node[];\n  const applicationGroups = nodes.filter((n) => n.getType() === TYPE_APPLICATION_GROUP);\n  applicationGroups.sort((a, b) => a.getLabel().localeCompare(b.getLabel()));\n  const unassignedItems = nodes.filter(\n    (n) => n.getType() !== TYPE_APPLICATION_GROUP && isGraph(n.getParent()) && n.isVisible(),\n  );\n\n  React.useLayoutEffect(() => {\n    if (visualizationReady && selectedId) {\n      const element = document.getElementById(selectedId);\n      if (element) {\n        element.scrollIntoView({ block: 'nearest' });\n      }\n    }\n  }, [selectedId, visualizationReady]);\n\n  React.useEffect(() => {\n    const getFlattenedItems = (): Node[] => {\n      const flattened = [];\n      const addFlattenedNode = (node: Node) => {\n        if (node) {\n          flattened.push(node);\n          const childNodes = sortGroupChildren(node.getChildren());\n          childNodes.forEach((child) => {\n            if (isNode(child)) {\n              addFlattenedNode(child);\n            }\n          });\n        }\n      };\n\n      const addFlattenedKinds = (children: GraphElement[]) => {\n        const { kindsMap, kindKeys } = getChildKinds(children);\n        kindKeys.forEach((key) => {\n          kindsMap[key]\n            .sort((a, b) => a.getLabel().localeCompare(b.getLabel()))\n            .forEach((child) => {\n              addFlattenedNode(child);\n            });\n        });\n      };\n\n      applicationGroups.forEach((appGroup) => {\n        flattened.push(appGroup);\n        addFlattenedKinds(appGroup.getChildren());\n      });\n      addFlattenedKinds(unassignedItems);\n      return flattened;\n    };\n\n    const selectPrevious = () => {\n      const flattenedItems = getFlattenedItems();\n      const index = flattenedItems.findIndex((item) => selectedId === item.getId());\n      if (index > 0) {\n        onSelect(flattenedItems[index - 1]);\n      }\n    };\n\n    const onEnter = (e: KeyboardEvent) => {\n      const target = e.target as HTMLElement;\n      const entity = target?.id && visualization.getElementById(target.id);\n      entity && onSelect(entity);\n    };\n\n    const selectNext = () => {\n      const flattenedItems = getFlattenedItems();\n      const index = flattenedItems.findIndex((item) => selectedId === item.getId());\n      if (index < flattenedItems.length - 1) {\n        onSelect(flattenedItems[index + 1]);\n      }\n    };\n\n    const stopEvent = (e: KeyboardEvent) => {\n      document.activeElement instanceof HTMLElement && document.activeElement.blur();\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    const onKeyDown = (e: KeyboardEvent) => {\n      const { nodeName } = e.target as Element;\n      if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\n        return;\n      }\n\n      switch (e.key) {\n        case 'Escape':\n          stopEvent(e);\n          onSelect();\n          break;\n        case 'Enter':\n          stopEvent(e);\n          onEnter(e);\n          break;\n        case 'k':\n        case 'ArrowUp':\n          stopEvent(e);\n          selectPrevious();\n          break;\n        case 'j':\n        case 'ArrowDown':\n          stopEvent(e);\n          selectNext();\n          break;\n        default:\n          break;\n      }\n    };\n\n    if (visualization) {\n      window.addEventListener('keydown', onKeyDown);\n    }\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, [visualization, selectedId, applicationGroups, unassignedItems, onSelect]);\n\n  React.useEffect(() => {\n    const clearMetricsInterval = subscribeOverviewMetrics(namespace, metrics, updateMetrics);\n    const clearAlertsInterval = subscribeOverviewAlerts(namespace, updateMonitoringAlerts);\n\n    return () => {\n      clearMetricsInterval();\n      clearAlertsInterval();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace, updateMetrics, updateMonitoringAlerts]);\n\n  return (\n    <TopologyListViewComponent\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      selectedId={selectedId}\n      onSelect={onSelect}\n      applicationGroups={applicationGroups}\n      unassignedItems={unassignedItems}\n    />\n  );\n});\n\nconst stateToProps = ({ UI }): TopologyListViewPropsFromState => {\n  return { metrics: UI.get('overview').toJS() };\n};\n\nconst dispatchToProps = (dispatch): TopologyListViewPropsFromDispatch => ({\n  updateMetrics: (metrics: OverviewMetrics) => dispatch(UIActions.updateOverviewMetrics(metrics)),\n  updateMonitoringAlerts: (alerts: Alert[]) => dispatch(alertingLoaded('devAlerts', alerts, 'dev')),\n});\n\nconst TopologyListView = withFallback(\n  connect<TopologyListViewPropsFromState, TopologyListViewPropsFromDispatch, TopologyListViewProps>(\n    stateToProps,\n    dispatchToProps,\n  )(React.memo(ConnectedTopologyListView)),\n  ErrorBoundaryFallbackPage,\n);\n\nexport default TopologyListView;\n","import { Alert } from '@console/dynamic-plugin-sdk';\nimport { fetchMonitoringAlerts } from '@console/internal/components/overview/metricUtils';\n\ntype UnsubscribeCallback = () => void;\n\nexport const subscribeOverviewAlerts = (\n  namespace: string,\n  updateMonitoringAlerts: (alerts: Alert[]) => void,\n  interval: number = 15 * 1000,\n): UnsubscribeCallback => {\n  let alertsInterval: any = null;\n\n  const fetchAlerts = (): void => {\n    fetchMonitoringAlerts(namespace)\n      .then((alerts) => {\n        updateMonitoringAlerts(alerts);\n      })\n      .catch((e) => {\n        console.error('Failed to fetch monitoring alerts', e); // eslint-disable-line no-console\n      })\n      .then(() => {\n        alertsInterval = setTimeout(fetchAlerts, interval);\n      })\n      .catch((e) => {\n        console.error('Failed to fetch monitoring alerts', e); // eslint-disable-line no-console\n      });\n  };\n\n  fetchAlerts();\n\n  return () => {\n    clearTimeout(alertsInterval);\n  };\n};\n","import * as _ from 'lodash';\nimport { PROMETHEUS_TENANCY_BASE_PATH } from '@console/internal/components/graphs';\nimport {\n  fetchOverviewMetrics,\n  METRICS_FAILURE_CODES,\n  OverviewMetrics,\n} from '@console/internal/components/overview/metricUtils';\nimport { METRICS_POLL_INTERVAL } from '@console/shared/src';\n\ntype UnsubscribeCallback = () => void;\n\nexport const subscribeOverviewMetrics = (\n  namespace: string,\n  metrics: OverviewMetrics,\n  updateMetrics: (metrics: OverviewMetrics) => void,\n  interval: number = METRICS_POLL_INTERVAL,\n): UnsubscribeCallback => {\n  let metricsInterval = null;\n\n  const fetchMetrics = () => {\n    if (!PROMETHEUS_TENANCY_BASE_PATH) {\n      return;\n    }\n    fetchOverviewMetrics(namespace)\n      .then((updatedMetrics) => {\n        updateMetrics(updatedMetrics);\n      })\n      .catch((res) => {\n        const status = res?.response?.status;\n        // eslint-disable-next-line no-console\n        console.error('Could not fetch metrics, status:', status);\n        // Don't retry on some status codes unless a previous request succeeded.\n        if (_.includes(METRICS_FAILURE_CODES, status) && _.isEmpty(metrics)) {\n          throw new Error(`Could not fetch metrics, status: ${status}`);\n        }\n      })\n      .then(() => {\n        metricsInterval = setTimeout(fetchMetrics, interval);\n      })\n      .catch((e) => {\n        console.error('Failed to fetch metrics', e); // eslint-disable-line no-console\n      });\n  };\n\n  fetchMetrics();\n\n  return () => {\n    clearTimeout(metricsInterval);\n  };\n};\n","import * as React from 'react';\nimport {\n  DataListCell,\n  DataList,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { showKind, useDisplayFilters, useSearchFilter } from '../../filters';\nimport { ApplicationModel } from '../../models';\nimport GroupResourcesCell from './cells/GroupResourcesCell';\nimport { getChildKinds } from './list-view-utils';\nimport TopologyListViewKindGroup from './TopologyListViewKindGroup';\n\ninterface TopologyListViewAppGroupProps {\n  appGroup: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst TopologyListViewAppGroup: React.FC<TopologyListViewAppGroupProps> = ({\n  appGroup,\n  selectedIds,\n  onSelect,\n}) => {\n  const [filtered] = useSearchFilter(appGroup.getLabel());\n  const displayFilters = useDisplayFilters();\n  const id = appGroup.getId();\n  const visible = appGroup.isVisible();\n  const label = appGroup.getLabel();\n  const collapsed = appGroup.isCollapsed();\n  const children = appGroup.getChildren();\n  const { groupResources } = appGroup.getData();\n\n  if (\n    !visible ||\n    (!collapsed && !children?.length) ||\n    (collapsed &&\n      !groupResources.find((res) =>\n        showKind(res.resourceKind || res.resource?.kind, displayFilters),\n      ))\n  ) {\n    return null;\n  }\n\n  const { kindsMap, kindKeys } = getChildKinds(children);\n\n  const cells = [];\n  cells.push(\n    <DataListCell\n      key={id}\n      className=\"odc-topology-list-view__application-label-cell\"\n      id={`${id}_label`}\n    >\n      <ResourceIcon\n        className=\"odc-topology-list-view__resource-icon co-m-resource-icon--lg\"\n        kind={ApplicationModel.kind}\n      />\n      <span className=\"odc-topology-list-view__application-label\">{label}</span>\n    </DataListCell>,\n  );\n  if (collapsed) {\n    cells.push(\n      <DataListCell key=\"resources\" id={`${id}_resources`}>\n        <GroupResourcesCell group={appGroup} />\n      </DataListCell>,\n    );\n  }\n  const className = classNames('odc-topology-list-view__application-row', {\n    'is-filtered': filtered,\n  });\n  return (\n    <DataListItem\n      className=\"odc-topology-list-view__application\"\n      key={id}\n      id={id}\n      aria-labelledby={`${id}_label`}\n      isExpanded\n    >\n      <DataListItemRow className={className} data-test={id}>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n      {!collapsed && (\n        <DataList aria-label={id} id={`${id}_kinds`}>\n          {kindKeys.map((key) => (\n            <TopologyListViewKindGroup\n              key={key}\n              groupLabel={appGroup.getLabel()}\n              kind={key}\n              childElements={kindsMap[key]}\n              selectedIds={selectedIds}\n              onSelect={onSelect}\n            />\n          ))}\n        </DataList>\n      )}\n    </DataListItem>\n  );\n};\n\nexport default observer(TopologyListViewAppGroup);\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Node, isNode } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { labelForNodeKind } from '@console/shared';\nimport { getResourceKind } from '../../utils/topology-utils';\nimport { listViewNodeComponentFactory } from './listViewComponentFactory';\n\ninterface ListElementWrapperProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\n// in a separate component so that changes to behaviors do not re-render children\nconst ListElementComponent: React.FC<ListElementWrapperProps> = observer(\n  function ListElementComponent({ item, selectedIds, onSelect, children }) {\n    const type = item.getType();\n\n    const Component = React.useMemo(() => listViewNodeComponentFactory(type), [type]);\n    return (\n      <Component key={item.getId()} item={item} selectedIds={selectedIds} onSelect={onSelect}>\n        {children}\n      </Component>\n    );\n  },\n);\n\nconst ListElementChildren: React.FC<ListElementWrapperProps> = observer(\n  function ListElementChildren({ item, selectedIds, onSelect }) {\n    return (\n      <>\n        {item\n          .getChildren()\n          .filter(isNode)\n          .sort((a, b) =>\n            labelForNodeKind(getResourceKind(a)).localeCompare(\n              labelForNodeKind(getResourceKind(b)),\n            ),\n          )\n          .map((e) => (\n            <ListElementWrapper\n              key={e.getId()}\n              item={e as Node}\n              onSelect={onSelect}\n              selectedIds={selectedIds}\n            />\n          ))}\n      </>\n    );\n  },\n);\n\nconst ListElementWrapper: React.FC<ListElementWrapperProps> = observer(function ListElementWrapper({\n  item,\n  selectedIds,\n  onSelect,\n}) {\n  if (!item.isVisible()) {\n    return null;\n  }\n\n  return (\n    <ListElementComponent item={item} onSelect={onSelect} selectedIds={selectedIds}>\n      <ListElementChildren item={item} onSelect={onSelect} selectedIds={selectedIds} />\n    </ListElementComponent>\n  );\n});\n\nexport default ListElementWrapper;\n","/* eslint-disable import/no-cycle */\nimport * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { TYPE_HELM_RELEASE } from '@console/helm-plugin/src/topology/components/const';\nimport HelmReleaseListViewNode from '@console/helm-plugin/src/topology/listView/HelmReleaseListViewNode';\nimport { knativeListViewNodeComponentFactory } from '@console/knative-plugin/src/topology/listView/knativeListViewComponentFactory';\nimport { TYPE_WORKLOAD } from '../../const';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../../operators/components/const';\nimport OperatorGroupListViewNode from '../../operators/listView/OperatorGroupListViewNode';\nimport { kubevirtListViewNodeComponentFactory } from './kubevirtListViewComponentFactory';\nimport TopologyListViewNode from './TopologyListViewNode';\n\nexport const listViewNodeComponentFactory = (\n  type,\n):\n  | React.ComponentType<{\n      item: Node;\n      selectedIds: string[];\n      onSelect: (ids: string[]) => void;\n    }>\n  | undefined => {\n  // TODO: Move to plugins\n  const knativeComponent = knativeListViewNodeComponentFactory(type);\n  if (knativeComponent) {\n    return knativeComponent;\n  }\n  const kubevirtComponent = kubevirtListViewNodeComponentFactory(type);\n  if (kubevirtComponent) {\n    return kubevirtComponent;\n  }\n\n  switch (type) {\n    case TYPE_WORKLOAD:\n      return TopologyListViewNode;\n    case TYPE_OPERATOR_BACKED_SERVICE:\n      return OperatorGroupListViewNode;\n    case TYPE_HELM_RELEASE:\n      return HelmReleaseListViewNode;\n    default:\n      return TopologyListViewNode;\n  }\n};\n","import * as React from 'react';\nimport { Node, observer } from '@patternfly/react-topology';\nimport TypedResourceBadgeCell from '@console/topology/src/components/list-view/cells/TypedResourceBadgeCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport { getResourceKind } from '@console/topology/src/utils/topology-utils';\n\ninterface HelmReleaseListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst HelmReleaseListViewNode: React.FC<HelmReleaseListViewNodeProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  children,\n}) => {\n  const { data } = item.getData();\n  const kind = getResourceKind(item);\n  const typeIconClass = data.chartIcon || 'icon-helm';\n\n  const badgeCell = (\n    <TypedResourceBadgeCell key=\"type-icon\" kind={kind} typeIconClass={typeIconClass} />\n  );\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      selectedIds={selectedIds}\n      onSelect={onSelect}\n      badgeCell={badgeCell}\n    >\n      {children}\n    </TopologyListViewNode>\n  );\n};\n\nexport default observer(HelmReleaseListViewNode);\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport {\n  TYPE_KNATIVE_SERVICE,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\nimport { KnativeRevisionListViewNode } from './KnativeRevisionListViewNode';\nimport { KnativeServiceListViewNode } from './KnativeServiceListViewNode';\nimport { NoStatusListViewNode } from './NoStatusListViewNode';\nimport { SinkUriListViewNode } from './SinkUriListViewNode';\n\nexport const knativeListViewNodeComponentFactory = (\n  type,\n):\n  | React.ComponentType<{\n      item: Node;\n      selectedIds: string[];\n      onSelect: (ids: string[]) => void;\n    }>\n  | undefined => {\n  switch (type) {\n    case TYPE_KNATIVE_SERVICE:\n      return KnativeServiceListViewNode;\n    case TYPE_KNATIVE_REVISION:\n      return KnativeRevisionListViewNode;\n    case TYPE_SINK_URI:\n      return SinkUriListViewNode;\n    case TYPE_EVENT_PUB_SUB_LINK:\n    case TYPE_EVENT_SOURCE:\n    case TYPE_EVENT_SOURCE_LINK:\n    case TYPE_EVENT_SINK_LINK:\n    case TYPE_EVENT_PUB_SUB:\n    case TYPE_EVENT_SOURCE_KAFKA:\n      return NoStatusListViewNode;\n    default:\n      return null;\n  }\n};\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { CpuCellComponent } from '@console/topology/src/components/list-view/cells/CpuCell';\nimport { MemoryCellComponent } from '@console/topology/src/components/list-view/cells/MemoryCell';\nimport { StatusCellResourceStatus } from '@console/topology/src/components/list-view/cells/StatusCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport {\n  getTopologyResourceObject,\n  useOverviewMetrics,\n  getPodMetricStats,\n} from '@console/topology/src/utils';\nimport { usePodsForRevisions } from '../../utils/usePodsForRevisions';\n\ninterface KnativeRevisionListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst ObservedKnativeRevisionListViewNode: React.FC<KnativeRevisionListViewNodeProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  children,\n}) => {\n  const resource = getTopologyResourceObject(item.getData());\n  const metrics = useOverviewMetrics();\n  const { loaded, pods } = usePodsForRevisions(resource.metadata.uid, resource.metadata.namespace);\n  const podData = React.useMemo(() => {\n    if (!loaded) {\n      return null;\n    }\n    const [current, previous] = pods;\n    const isRollingOut = !!current && !!previous;\n    return {\n      current,\n      previous,\n      obj: current?.obj || resource,\n      isRollingOut,\n      pods: [...(current?.pods || []), ...(previous?.pods || [])],\n    };\n  }, [loaded, pods, resource]);\n\n  const metricStats = React.useMemo(() => {\n    if (!podData) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [metrics, podData]);\n\n  const memoryCell = (\n    <DataListCell key=\"memory\" id={`${item.getId()}_memory`}>\n      {!metricStats || !metricStats.totalBytes || !metricStats.totalCores ? null : (\n        <MemoryCellComponent\n          totalBytes={metricStats.totalBytes}\n          memoryByPod={metricStats.memoryByPod}\n        />\n      )}\n    </DataListCell>\n  );\n  const cpuCell = (\n    <DataListCell key=\"cpu\" id={`${item.getId()}_metrics`}>\n      {!metricStats || !metricStats.totalBytes || !metricStats.totalCores ? null : (\n        <CpuCellComponent cpuByPod={metricStats.cpuByPod} totalCores={metricStats.totalCores} />\n      )}\n    </DataListCell>\n  );\n\n  const statusCell = (\n    <DataListCell key=\"status\" id={`${item.getId()}_status`}>\n      <div className=\"odc-topology-list-view__detail--status\">\n        {podData ? <StatusCellResourceStatus obj={podData.obj} podData={podData} /> : null}\n      </div>\n    </DataListCell>\n  );\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      selectedIds={selectedIds}\n      onSelect={onSelect}\n      memoryCell={memoryCell}\n      cpuCell={cpuCell}\n      statusCell={statusCell}\n    >\n      {children}\n    </TopologyListViewNode>\n  );\n};\n\nconst KnativeRevisionListViewNode = observer(ObservedKnativeRevisionListViewNode);\nexport { KnativeRevisionListViewNode };\n","import * as React from 'react';\nimport { Node, observer } from '@patternfly/react-topology';\nimport TypedResourceBadgeCell from '@console/topology/src/components/list-view/cells/TypedResourceBadgeCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport { getResource, getResourceKind } from '@console/topology/src/utils';\nimport { isServerlessFunction } from '../knative-topology-utils';\n\ninterface KnativeServiceListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst ObservedKnativeServiceListViewNode: React.FC<KnativeServiceListViewNodeProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  children,\n}) => {\n  const kind = getResourceKind(item);\n\n  const typeIconClass: string = isServerlessFunction(getResource(item))\n    ? 'icon-serverless-function'\n    : 'icon-knative';\n\n  const badgeCell = (\n    <TypedResourceBadgeCell key=\"type-icon\" kind={kind} typeIconClass={typeIconClass} />\n  );\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      selectedIds={selectedIds}\n      onSelect={onSelect}\n      badgeCell={badgeCell}\n    >\n      {children}\n    </TopologyListViewNode>\n  );\n};\n\nconst KnativeServiceListViewNode = observer(ObservedKnativeServiceListViewNode);\nexport { KnativeServiceListViewNode };\n","import * as React from 'react';\nimport TypedResourceBadgeCell from '@console/topology/src/components/list-view/cells/TypedResourceBadgeCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport { OdcBaseNode } from '@console/topology/src/elements';\nimport { getResourceKind } from '@console/topology/src/utils';\nimport { EventSourceIcon, eventIconStyle } from '../../utils/icons';\nimport { NodeType } from '../topology-types';\n\ninterface NoStatusListViewNodeProps {\n  item: OdcBaseNode;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst NoStatusListViewNode: React.FC<NoStatusListViewNodeProps> = (props) => {\n  const kind = getResourceKind(props.item);\n  const badgeCell = (\n    <TypedResourceBadgeCell\n      key=\"type-icon\"\n      kind={kind}\n      typeIcon={<EventSourceIcon style={eventIconStyle} />}\n    />\n  );\n  return (\n    <TopologyListViewNode\n      noPods\n      {...props}\n      badgeCell={props.item.getType() === NodeType.EventSource ? badgeCell : null}\n    />\n  );\n};\nexport { NoStatusListViewNode };\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { observer } from '@patternfly/react-topology';\nimport TypedResourceBadgeCell from '@console/topology/src/components/list-view/cells/TypedResourceBadgeCell';\nimport TopologyListViewNode from '@console/topology/src/components/list-view/TopologyListViewNode';\nimport { OdcBaseNode } from '@console/topology/src/elements';\n\ninterface SinkUriListViewNodeProps {\n  item: OdcBaseNode;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst ObservedSinkUriListViewNode: React.FC<SinkUriListViewNodeProps> = ({ item, ...rest }) => {\n  const sinkUri = item.getResource()?.spec?.sinkUri;\n\n  const labelCell = (\n    <DataListCell className=\"odc-topology-list-view__label-cell\" key=\"label\" id={sinkUri}>\n      <TypedResourceBadgeCell key=\"type-icon\" kind={item.getResourceKind()} />\n      {sinkUri}\n    </DataListCell>\n  );\n\n  return <TopologyListViewNode item={item} labelCell={labelCell} noPods {...rest} />;\n};\n\nconst SinkUriListViewNode = observer(ObservedSinkUriListViewNode);\nexport { SinkUriListViewNode };\n","import * as React from 'react';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { TypedResourceBadgeCell } from '../../components/list-view/cells';\nimport TopologyListViewNode from '../../components/list-view/TopologyListViewNode';\nimport { getResourceKind } from '../../utils/topology-utils';\n\ninterface OperatorGroupListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst OperatorGroupListViewNode: React.FC<OperatorGroupListViewNodeProps> = ({\n  item,\n  selectedIds,\n  onSelect,\n  children,\n}) => {\n  const { data } = item.getData();\n  const kind = data.operatorKind || getResourceKind(item);\n  const typeIconClass = data?.builderImage;\n\n  const badgeCell = (\n    <TypedResourceBadgeCell key=\"type-icon\" kind={kind} typeIconClass={typeIconClass} />\n  );\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      selectedIds={selectedIds}\n      onSelect={onSelect}\n      badgeCell={badgeCell}\n    >\n      {children}\n    </TopologyListViewNode>\n  );\n};\n\nexport default observer(OperatorGroupListViewNode);\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport VMListViewNode from './VMListViewNode';\n\nconst TYPE_VIRTUAL_MACHINE = 'virtual-machine';\n\nexport const kubevirtListViewNodeComponentFactory = (\n  type,\n):\n  | React.ComponentType<{\n      item: Node;\n      selectedIds: string[];\n      onSelect: (ids: string[]) => void;\n    }>\n  | undefined => {\n  switch (type) {\n    case TYPE_VIRTUAL_MACHINE:\n      return VMListViewNode;\n    default:\n      return null;\n  }\n};\n","import * as React from 'react';\nimport { DataListCell } from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { getPodMetricStats, getTopologyResourceObject, useOverviewMetrics } from '../../utils';\nimport { usePodsForVm } from '../../utils/usePodsForVM';\nimport { CpuCellComponent, MemoryCellComponent } from './cells';\nimport TopologyListViewNode from './TopologyListViewNode';\n\ninterface VMListViewNodeProps {\n  item: Node;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst VMListViewNode: React.FC<VMListViewNodeProps> = observer(({ item, ...rest }) => {\n  const vm = getTopologyResourceObject(item.getData());\n  const metrics = useOverviewMetrics();\n  const { podData } = usePodsForVm(vm);\n\n  const metricStats = React.useMemo(() => {\n    if (!podData) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [metrics, podData]);\n\n  const memoryCell = (\n    <DataListCell key=\"memory\" id={`${item.getId()}_memory`}>\n      {!metricStats || !metricStats.totalBytes || !metricStats.totalCores ? null : (\n        <MemoryCellComponent\n          totalBytes={metricStats.totalBytes}\n          memoryByPod={metricStats.memoryByPod}\n        />\n      )}\n    </DataListCell>\n  );\n  const cpuCell = (\n    <DataListCell key=\"cpu\" id={`${item.getId()}_metrics`}>\n      {!metricStats || !metricStats.totalBytes || !metricStats.totalCores ? null : (\n        <CpuCellComponent cpuByPod={metricStats.cpuByPod} totalCores={metricStats.totalCores} />\n      )}\n    </DataListCell>\n  );\n\n  // No status cell\n  const statusCell = <DataListCell key=\"status\" id={`${item.getId()}_status`} />;\n\n  return (\n    <TopologyListViewNode\n      item={item}\n      memoryCell={memoryCell}\n      cpuCell={cpuCell}\n      statusCell={statusCell}\n      {...rest}\n    />\n  );\n});\n\nexport default VMListViewNode;\n","import * as React from 'react';\nimport { useK8sWatchResources } from '@console/dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks';\nimport { getGroupVersionKindForModel } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { PodModel, ReplicationControllerModel } from '@console/internal/models';\nimport { K8sResourceCommon, K8sResourceKind, PodKind } from '@console/internal/module/k8s';\nimport {\n  getReplicationControllersForResource,\n  useDebounceCallback,\n  useDeepCompareMemoize,\n} from '@console/shared';\nimport { VirtualMachineInstanceModel } from './kubevirt-models';\nimport { VMIKind } from './kubevirt-types';\nimport { findVMIPod } from './kubevirt-utils';\nimport { PodRCData } from './pod-utils';\n\nexport const usePodsForVm = (\n  vm: K8sResourceKind,\n): { loaded: boolean; loadError: string; podData: PodRCData } => {\n  const { namespace } = vm.metadata;\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const [podData, setPodData] = React.useState<PodRCData>();\n  const vmName = vm.metadata.name;\n  const vmRef = React.useRef<K8sResourceKind>(vm);\n\n  const watchedResources = React.useMemo(\n    () => ({\n      replicationControllers: {\n        isList: true,\n        groupVersionKind: getGroupVersionKindForModel(ReplicationControllerModel),\n        namespace,\n      },\n      pods: {\n        isList: true,\n        groupVersionKind: getGroupVersionKindForModel(PodModel),\n        namespace,\n      },\n      virtualmachineinstances: {\n        isList: true,\n        groupVersionKind: getGroupVersionKindForModel(VirtualMachineInstanceModel),\n        namespace,\n        optional: true,\n      },\n    }),\n    [namespace],\n  );\n\n  const resources = useK8sWatchResources<{ [key: string]: K8sResourceCommon[] }>(watchedResources);\n\n  const updateResults = React.useCallback(\n    (updatedResources) => {\n      const errorKey = Object.keys(updatedResources).find((key) => updatedResources[key].loadError);\n      if (errorKey) {\n        setLoadError(updatedResources[errorKey].loadError);\n        return;\n      }\n      if (\n        Object.keys(updatedResources).length > 0 &&\n        Object.keys(updatedResources).every((key) => updatedResources[key].loaded)\n      ) {\n        const vmis = updatedResources.virtualmachineinstances.data;\n        const vmi = vmis.find((instance) => instance.metadata.name === vmName) as VMIKind;\n        const { visibleReplicationControllers } = getReplicationControllersForResource(\n          vmRef.current,\n          updatedResources,\n        );\n        const [current, previous] = visibleReplicationControllers;\n        const launcherPod = findVMIPod(vmi, updatedResources.pods.data as PodKind[]);\n        const podRCData: PodRCData = {\n          current,\n          previous,\n          isRollingOut: false,\n          pods: launcherPod ? [launcherPod] : [],\n          obj: vm,\n        };\n        setLoaded(true);\n        setLoadError(null);\n        setPodData(podRCData);\n      }\n    },\n    // Don't update on a resource change, we want the debounce callback to be consistent\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [vmName],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(updateResults, 250);\n\n  React.useEffect(() => {\n    debouncedUpdateResources(resources);\n  }, [debouncedUpdateResources, resources]);\n\n  return useDeepCompareMemoize({ loaded, loadError, podData });\n};\n","import { K8sModel } from '@console/internal/module/k8s/types';\n\nexport const VirtualMachineInstanceModel: K8sModel = {\n  label: 'Virtual Machine Instance',\n  labelPlural: 'Virtual Machine Instances',\n  apiVersion: 'v1',\n  apiGroup: 'kubevirt.io',\n  plural: 'virtualmachineinstances',\n  abbr: 'VMI',\n  namespaced: true,\n  kind: 'VirtualMachineInstance',\n  id: 'virtualmachineinstance',\n  color: '#002F5D',\n  crd: true,\n};\n\nexport const SubscriptionModel: K8sModel = {\n  kind: 'Subscription',\n  label: 'Subscription',\n  labelPlural: 'Subscriptions',\n  apiGroup: 'operators.coreos.com',\n  apiVersion: 'v1alpha1',\n  abbr: 'SUB',\n  namespaced: true,\n  crd: true,\n  plural: 'subscriptions',\n  legacyPluralURL: true,\n};\n\nexport const PackageManifestModel: K8sModel = {\n  kind: 'PackageManifest',\n  label: 'PackageManifest',\n  labelPlural: 'PackageManifests',\n  apiGroup: 'packages.operators.coreos.com',\n  apiVersion: 'v1',\n  abbr: 'PM',\n  namespaced: true,\n  crd: true,\n  plural: 'packagemanifests',\n};\n","import { PodKind } from '@console/internal/module/k8s';\nimport { getNamespace, getOwnerReferences, getUID } from '@console/shared';\nimport { VMIKind } from './kubevirt-types';\n\nconst isPodReady = (pod: PodKind): boolean =>\n  pod?.status?.phase === 'Running' && pod?.status?.containerStatuses?.every((s) => s.ready);\n\nexport const findVMIPod = (vmi?: VMIKind, pods?: PodKind[]) => {\n  if (!pods || !vmi) {\n    return null;\n  }\n\n  const vmUID = getUID(vmi);\n  const prefixedPods = pods.filter((p) => {\n    const podOwnerReferences = getOwnerReferences(p);\n    return (\n      getNamespace(p) === getNamespace(vmi) &&\n      podOwnerReferences &&\n      podOwnerReferences.some((podOwnerReference) => podOwnerReference.uid === vmUID)\n    );\n  });\n\n  // Return the newest, most ready Pod created\n  return prefixedPods\n    .sort((a: PodKind, b: PodKind) =>\n      a.metadata.creationTimestamp > b.metadata.creationTimestamp ? -1 : 1,\n    )\n    .sort((a: PodKind) => (isPodReady(a) ? -1 : 1))[0];\n};\n","import * as React from 'react';\nimport {\n  DataListCell,\n  DataList,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport { Node, observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { getChildKinds } from './list-view-utils';\nimport TopologyListViewKindGroup from './TopologyListViewKindGroup';\n\ninterface TopologyListViewUnassignedGroupProps {\n  items: Node[];\n  showCategory: boolean;\n  selectedIds: string[];\n  onSelect: (ids: string[]) => void;\n}\n\nconst TopologyListViewUnassignedGroup: React.FC<TopologyListViewUnassignedGroupProps> = ({\n  items,\n  showCategory,\n  selectedIds,\n  onSelect,\n}) => {\n  const { t } = useTranslation();\n  if (!items?.length) {\n    return null;\n  }\n\n  const { kindsMap, kindKeys } = getChildKinds(items);\n\n  const unassignedContent = (\n    <DataList aria-label=\"unassigned items\" id=\"unassigned-items\">\n      {kindKeys.map((key) => (\n        <TopologyListViewKindGroup\n          groupLabel={t('topology~unassigned')}\n          key={key}\n          kind={key}\n          childElements={kindsMap[key]}\n          selectedIds={selectedIds}\n          onSelect={onSelect}\n        />\n      ))}\n    </DataList>\n  );\n\n  if (!showCategory) {\n    return unassignedContent;\n  }\n\n  const cells = [];\n  cells.push(\n    <DataListCell\n      key=\"label\"\n      className=\"odc-topology-list-view__unassigned-label\"\n      id=\"unassigned_label\"\n    >\n      {t('topology~No application group')}\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem\n      className=\"odc-topology-list-view__application\"\n      key=\"unassigned\"\n      aria-labelledby=\"unassigned_label\"\n      isExpanded\n    >\n      <DataListItemRow className=\"odc-topology-list-view__application-row odc-topology-list-view__unassigned-group\">\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n      {unassignedContent}\n    </DataListItem>\n  );\n};\n\nexport default observer(TopologyListViewUnassignedGroup);\n","import * as React from 'react';\nimport { GraphElement, BaseEdge, isEdge, isNode } from '@patternfly/react-topology';\nimport {\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n  TYPE_EVENT_SINK_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport ConnectedTopologyEdgePanel from './TopologyEdgePanel';\nimport TopologySideBarContent from './TopologySideBarContent';\n\nexport const isSidebarRenderable = (selectedEntity: GraphElement): boolean => {\n  if (isNode(selectedEntity) || isEdge(selectedEntity)) {\n    return true;\n  }\n  return false;\n};\n\nexport const SelectedEntityDetails: React.FC<{ selectedEntity: GraphElement }> = ({\n  selectedEntity,\n}) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  if (isNode(selectedEntity)) {\n    return <TopologySideBarContent element={selectedEntity} />;\n  }\n\n  if (isEdge(selectedEntity)) {\n    if (\n      [\n        TYPE_REVISION_TRAFFIC,\n        TYPE_EVENT_SOURCE_LINK,\n        TYPE_EVENT_SINK_LINK,\n        TYPE_KAFKA_CONNECTION_LINK,\n        TYPE_SERVICE_BINDING,\n        TYPE_EVENT_PUB_SUB_LINK,\n        TYPE_CONNECTS_TO,\n      ].includes(selectedEntity.getType())\n    ) {\n      return <TopologySideBarContent element={selectedEntity} />;\n    }\n\n    return <ConnectedTopologyEdgePanel edge={selectedEntity as BaseEdge} />;\n  }\n  return null;\n};\n","/**\n * @deprecated This file needs to be removed after migrating the Traffic connector side-panel to dynamic extensions\n */\nimport * as React from 'react';\nimport { Edge, isNode, Node } from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { ActionsMenu } from '@console/internal/components/utils';\nimport { edgeActions } from '../../actions/edgeActions';\nimport { TYPE_TRAFFIC_CONNECTOR } from '../../const';\nimport TopologyEdgeResourcesPanel from './TopologyEdgeResourcesPanel';\n\ntype TopologyEdgePanelProps = {\n  edge: Edge;\n};\n\nconst connectorTypeToTitleKey = (type: string): string => {\n  switch (type) {\n    case TYPE_TRAFFIC_CONNECTOR:\n      // t('topology~Traffic connector')\n      return 'topology~Traffic connector';\n    default:\n      return '';\n  }\n};\n\nconst TopologyEdgePanel: React.FC<TopologyEdgePanelProps> = ({ edge }) => {\n  const { t } = useTranslation();\n  const nodes = edge\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n\n  return (\n    <div className=\"overview__sidebar-pane resource-overview\">\n      <div className=\"overview__sidebar-pane-head resource-overview__heading\">\n        <h1 className=\"co-m-pane__heading\">\n          <div className=\"co-m-pane__name co-resource-item\">\n            {t(connectorTypeToTitleKey(edge.getType()))}\n          </div>\n          <div className=\"co-actions\">\n            <ActionsMenu actions={edgeActions(edge, nodes)} />\n          </div>\n        </h1>\n      </div>\n      <ul\n        className={classNames(\n          'co-m-horizontal-nav__menu',\n          'co-m-horizontal-nav__menu--within-sidebar',\n          'co-m-horizontal-nav__menu--within-overview-sidebar',\n          'odc-application-resource-tab',\n        )}\n      >\n        <li className=\"co-m-horizontal-nav__menu-item\">\n          <button type=\"button\">{t('topology~Resources')}</button>\n        </li>\n      </ul>\n      <TopologyEdgeResourcesPanel edge={edge} />\n    </div>\n  );\n};\n\nexport default TopologyEdgePanel;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport SideBarBody from './components/SideBarBody';\nimport SideBarHeading from './components/SideBarHeading';\n\nconst TopologySideBarContent: React.FC<{ element: GraphElement }> = ({ element }) => {\n  return (\n    <div className=\"overview__sidebar-pane resource-overview\">\n      <SideBarHeading element={element} />\n      <SideBarBody element={element} />\n    </div>\n  );\n};\n\nexport default TopologySideBarContent;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as UIActions from '@console/internal/actions/ui';\nimport { SimpleTabNav, Tab } from '@console/internal/components/utils';\nimport { useQueryParams } from '@console/shared/src';\nimport SideBarTabLoader from '../providers/SideBarTabLoader';\n\nconst SimpleTabNavWrapper: React.FC<{ tabs: Tab[] }> = ({ tabs }) => {\n  const { t } = useTranslation();\n  const selectedTab = useSelector(({ UI }) => UI.getIn(['overview', 'selectedDetailsTab']));\n  const dispatch = useDispatch();\n  const queryParams = useQueryParams();\n  const selectTabParam = queryParams.get('selectTab');\n  const handleClickTab = React.useCallback(\n    (name) => {\n      dispatch(UIActions.selectOverviewDetailsTab(name));\n    },\n    [dispatch],\n  );\n  return (\n    <SimpleTabNav\n      selectedTab={selectTabParam || selectedTab || t('topology~Details')}\n      tabs={tabs}\n      tabProps={null}\n      onClickTab={handleClickTab}\n      additionalClassNames=\"co-m-horizontal-nav__menu--within-sidebar co-m-horizontal-nav__menu--within-overview-sidebar\"\n    />\n  );\n};\n\nconst SideBarBody: React.FC<{ element: GraphElement }> = ({ element }) => {\n  const uid = element.getId();\n  return (\n    <SideBarTabLoader key={uid} element={element}>\n      {(tabs, loaded) => (loaded ? <SimpleTabNavWrapper tabs={tabs} /> : null)}\n    </SideBarTabLoader>\n  );\n};\n\nexport default SideBarBody;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Tab } from '@console/internal/components/utils';\nimport SideBarTabHookResolver from './SideBarTabHookResolver';\nimport { useDetailsTab } from './useDetailsTab';\nimport { useDetailsTabSection } from './useDetailsTabSection';\n\ntype SideBarTabLoaderProps = {\n  element: GraphElement;\n  children: (tabs: Tab[], loaded: boolean) => React.ReactElement;\n};\n\nconst SideBarTabLoader: React.FC<SideBarTabLoaderProps> = ({ element, children }) => {\n  const tabExtensions = useDetailsTab();\n  const [tabSectionExtensions, tabSectionExtensionsResolved] = useDetailsTabSection();\n\n  if (!tabSectionExtensionsResolved) {\n    return children([], false);\n  }\n\n  return (\n    <SideBarTabHookResolver\n      element={element}\n      tabExtensions={tabExtensions}\n      tabSectionExtensions={tabSectionExtensions}\n    >\n      {children}\n    </SideBarTabHookResolver>\n  );\n};\n\nexport default SideBarTabLoader;\n","import * as React from 'react';\nimport { GraphElement, isEdge } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react-lite';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTab, DetailsTabSection, ResolvedExtension } from '@console/dynamic-plugin-sdk';\nimport { Tab } from '@console/internal/components/utils';\nimport { orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport { getResource } from '@console/topology/src/utils';\nimport { DefaultResourceSideBar } from '../DefaultResourceSideBar';\nimport TopologyEdgeResourcesPanel from '../TopologyEdgeResourcesPanel';\n\ntype ResolvedTabSection = Omit<DetailsTabSection['properties'], 'tab' | 'provider' | 'section'> & {\n  contentElement: React.ReactNode;\n};\n\ntype ResolvedTabSections = {\n  [tabId: string]: ResolvedTabSection[];\n};\n\ntype TabBarTabHookResolverProps = {\n  element: GraphElement;\n  children: (tabs: Tab[], loaded: boolean) => React.ReactElement;\n  tabSectionExtensions: ResolvedExtension<DetailsTabSection>['properties'][];\n  tabExtensions: DetailsTab['properties'][];\n};\n\nconst blamedDeprecatedPlugins: Record<string, boolean> = {};\nconst renderNullNoop = () => null;\n\nconst TabBarTabHookResolver: React.FC<TabBarTabHookResolverProps> = ({\n  element: graphElement,\n  children,\n  tabSectionExtensions,\n  tabExtensions,\n}) => {\n  const { t } = useTranslation();\n\n  // resolving hooks in loop since number of extensions will remain the same\n  // TODO: Render each hook in its own child component...\n  const resolvedTabSections = tabSectionExtensions.reduce<ResolvedTabSections>(\n    (acc, { provider, section, tab: tabId, ...rest }) => {\n      let contentElement: React.ReactNode;\n\n      if (provider) {\n        const hookResult = provider(graphElement);\n        if (!hookResult) {\n          return acc;\n        }\n        [contentElement] = hookResult;\n      } else if (section) {\n        if (!blamedDeprecatedPlugins[rest.id]) {\n          blamedDeprecatedPlugins[rest.id] = true;\n          // eslint-disable-next-line no-console\n          console.warn(\n            `TabSectionExtension \"${rest.id}\" should be updated from section to provider (hook)`,\n          );\n        }\n        // Fallback to deprecated section\n        contentElement = section(graphElement, renderNullNoop);\n      }\n\n      if (!contentElement) {\n        return acc;\n      }\n      return {\n        ...acc,\n        ...(acc[tabId]\n          ? { [tabId]: [...acc[tabId], { ...rest, contentElement }] }\n          : { [tabId]: [{ ...rest, contentElement }] }),\n      };\n    },\n    {},\n  );\n\n  const [tabs, tabsLoaded] = React.useMemo(() => {\n    if (Object.keys(resolvedTabSections).length === 0) return [[], true];\n\n    const resolvedTabs: Tab[] = tabExtensions.reduce((acc, { id: tabId, label }) => {\n      if (!resolvedTabSections[tabId]) {\n        return acc;\n      }\n\n      const orderedResolvedExtensions = orderExtensionBasedOnInsertBeforeAndAfter<{\n        id: string;\n        contentElement: React.ReactNode;\n      }>(resolvedTabSections[tabId]);\n\n      const tabContent = orderedResolvedExtensions.map(({ id: tabSectionId, contentElement }) => (\n        <React.Fragment key={tabSectionId}>{contentElement}</React.Fragment>\n      ));\n      return [...acc, { name: label, component: tabContent }];\n    }, []);\n\n    return [resolvedTabs, true];\n  }, [tabExtensions, resolvedTabSections]);\n\n  // show default side bar\n  if (tabsLoaded && tabs.length === 0) {\n    const resource = getResource(graphElement);\n    resource &&\n      tabs.push({\n        name: t('topology~Details'),\n        component: () => <DefaultResourceSideBar resource={resource} />,\n      });\n    isEdge(graphElement) &&\n      tabs.push({\n        name: t('topology~Resources'),\n        component: () => <TopologyEdgeResourcesPanel edge={graphElement} />,\n      });\n  }\n\n  return children(tabs, tabsLoaded);\n};\n\n// TODO: Replace observer for full all childs to individual observer per section content element\nexport default observer(TabBarTabHookResolver);\n","import * as React from 'react';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nexport const DefaultResourceSideBar: React.FC<{ resource: K8sResourceKind }> = ({ resource }) => {\n  return (\n    <div className=\"overview__sidebar-pane resource-overview\">\n      <div className=\"overview__sidebar-pane-body resource-overview__body\">\n        <div className=\"resource-overview__summary\">\n          <ResourceSummary resource={resource} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { DetailsTab, isDetailsTab } from '@console/dynamic-plugin-sdk';\nimport { useExtensions } from '@console/plugin-sdk';\nimport { orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\n\nexport const useDetailsTab = (): DetailsTab['properties'][] => {\n  const extensions = useExtensions<DetailsTab>(isDetailsTab);\n  const ordered = React.useMemo<DetailsTab['properties'][]>(\n    () =>\n      orderExtensionBasedOnInsertBeforeAndAfter<DetailsTab['properties']>(\n        extensions.map(({ properties }) => properties),\n      ),\n    [extensions],\n  );\n  return ordered;\n};\n","import * as React from 'react';\nimport {\n  DetailsTabSection,\n  isDetailsTabSection,\n  ResolvedExtension,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\nimport { orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\n\nexport const useDetailsTabSection = (): [\n  ResolvedExtension<DetailsTabSection>['properties'][],\n  boolean,\n] => {\n  const [extensions, resolved] = useResolvedExtensions<DetailsTabSection>(isDetailsTabSection);\n  const ordered = React.useMemo<ResolvedExtension<DetailsTabSection>['properties'][]>(\n    () =>\n      resolved\n        ? orderExtensionBasedOnInsertBeforeAndAfter<\n            ResolvedExtension<DetailsTabSection>['properties']\n          >(extensions.map(({ properties }) => properties))\n        : [],\n    [extensions, resolved],\n  );\n  return [ordered, resolved];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DeploymentConfigDeprecationAlert } from '@console/internal/components/deployment-config';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport TopologyActions from '../../../actions/TopologyActions';\nimport { useDetailsResourceLink } from '../providers/useDetailsResourceLink';\nimport SideBarAlerts from './SideBarAlerts';\nimport './SideBarHeading.scss';\n\nconst SideBarHeading: React.FC<{ element: GraphElement }> = ({ element }) => {\n  const resourceLabel = element.getLabel();\n  const resourceLink = useDetailsResourceLink(element);\n  const resourceKind = element.getData()?.resource?.kind;\n  return (\n    <div className=\"overview__sidebar-pane-head resource-overview__heading\">\n      <h1 className=\"co-m-pane__heading\">\n        <div className=\"co-m-pane__name co-resource-item\">{resourceLink ?? resourceLabel}</div>\n        <div className=\"co-actions\">\n          <TopologyActions element={element} />\n        </div>\n      </h1>\n      {resourceKind === DeploymentConfigModel.kind && (\n        <div className=\"dc-deprecation-sidebar-alert\">\n          <DeploymentConfigDeprecationAlert />\n        </div>\n      )}\n      <div className=\"odc-topology-sidebar-alert\">\n        <SideBarAlerts element={element} />\n      </div>\n    </div>\n  );\n};\n\nexport default SideBarHeading;\n","import * as React from 'react';\nimport { observer, GraphElement } from '@patternfly/react-topology';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { ActionMenu, ActionMenuVariant, ActionServiceProvider } from '@console/shared';\nimport { getResource } from '../utils';\n\ntype TopologyActionsProps = {\n  element: GraphElement;\n};\n\nconst TopologyActions: React.FC<TopologyActionsProps> = ({ element }) => {\n  const resource = getResource(element);\n  const context = React.useMemo(() => {\n    const { csvName } = element.getData()?.data ?? {};\n    return {\n      'topology-actions': element,\n      'topology-context-actions': { element },\n      ...(resource ? { [referenceFor(resource)]: resource } : {}),\n      ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n    };\n  }, [element, resource]);\n  return (\n    <ActionServiceProvider key={element.getId()} context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport default observer(TopologyActions);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  DetailsResourceLink,\n  isDetailsResourceLink,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\n\nexport const useDetailsResourceLink = (\n  element: GraphElement,\n): React.Component | null | undefined => {\n  const [resurceLinkExtension, resolved] = useResolvedExtensions<DetailsResourceLink>(\n    isDetailsResourceLink,\n  );\n  const resourceLink = React.useMemo(() => {\n    return resolved\n      ? resurceLinkExtension\n          .sort((a, b) => b.properties.priority - a.properties.priority)\n          .find(({ properties: { link } }) => !!link(element))\n          ?.properties?.link?.(element)\n      : null;\n  }, [resurceLinkExtension, resolved, element]);\n  return resourceLink;\n};\n","import * as React from 'react';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { GraphElement, observer } from '@patternfly/react-topology';\nimport {\n  DetailsResourceAlert,\n  DetailsResourceAlertContent,\n  isDetailsResourceAlert,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\nimport { USERSETTINGS_PREFIX, useUserSettings } from '@console/shared';\n\nconst SIDEBAR_ALERTS = 'sideBarAlerts';\n\nconst ResolveResourceAlerts: React.FC<{\n  id?: string;\n  useResourceAlertsContent?: (element: GraphElement) => DetailsResourceAlertContent;\n  element: GraphElement;\n}> = observer(function ResolveResourceAlerts({ id, useResourceAlertsContent, element }) {\n  const [showAlert, setShowAlert, loaded] = useUserSettings(\n    `${USERSETTINGS_PREFIX}.${SIDEBAR_ALERTS}.${id}.${element.getId()}`,\n    true,\n  );\n  const alertConfigs = useResourceAlertsContent(element);\n  if (!alertConfigs) return null;\n  const { variant, content, actionLinks, dismissible, title } = alertConfigs;\n  return loaded && showAlert ? (\n    <Alert\n      isInline\n      variant={variant}\n      title={title}\n      actionLinks={actionLinks}\n      actionClose={\n        dismissible && (\n          <AlertActionCloseButton\n            onClose={() => {\n              setShowAlert(false);\n            }}\n          />\n        )\n      }\n    >\n      {content}\n    </Alert>\n  ) : null;\n});\n\nconst SideBarAlerts: React.FC<{ element: GraphElement }> = ({ element }) => {\n  const [resourceAlertsExtension, resolved] = useResolvedExtensions<DetailsResourceAlert>(\n    isDetailsResourceAlert,\n  );\n  return resolved ? (\n    <>\n      {resourceAlertsExtension.map(({ uid, properties: { contentProvider, ...props } }) => {\n        const key = `${uid}-${element.getId()}`;\n        return (\n          <ResolveResourceAlerts\n            key={key}\n            {...props}\n            useResourceAlertsContent={contentProvider}\n            element={element}\n          />\n        );\n      })}\n    </>\n  ) : null;\n};\n\nexport default SideBarAlerts;\n","import * as React from 'react';\nimport { DrawerPanelContent } from '@patternfly/react-core';\nimport { TopologySideBar as PFTopologySideBar } from '@patternfly/react-topology';\nimport { useUserSettings } from '@console/shared';\nimport CloseButton from '@console/shared/src/components/close-button';\nimport { TOPOLOGY_SIDE_BAR_WIDTH_STORAGE_KEY } from '../../const';\nimport './TopologySideBarTabSection.scss';\n\ntype TopologySideBarProps = {\n  onClose: () => void;\n};\n\nconst DEFAULT_SIDE_BAR_SIZE = 500;\n\nconst TopologySideBar: React.FC<TopologySideBarProps> = ({ children, onClose }) => {\n  const [sideBarSize, setSideBarSize, sideBarSizeLoaded] = useUserSettings(\n    TOPOLOGY_SIDE_BAR_WIDTH_STORAGE_KEY,\n    DEFAULT_SIDE_BAR_SIZE,\n  );\n  const handleResizeCallback = React.useCallback(\n    (_event, width: number) => {\n      setSideBarSize(width);\n    },\n    [setSideBarSize],\n  );\n  return (\n    <DrawerPanelContent\n      isResizable\n      minSize=\"400px\"\n      defaultSize={`${sideBarSizeLoaded ? sideBarSize : DEFAULT_SIDE_BAR_SIZE}px`}\n      onResize={handleResizeCallback}\n      className=\"ocs-sidebar-index\"\n    >\n      <PFTopologySideBar\n        resizable\n        className=\"pf-topology-side-bar-resizable\"\n        data-test=\"topology-sidepane\"\n      >\n        <div className=\"pf-topology-side-bar__body\">\n          <div className=\"co-sidebar-dismiss clearfix\">\n            <CloseButton\n              onClick={onClose}\n              dataTestID=\"sidebar-close-button\"\n              additionalClassName=\"co-sidebar-dismiss__close-button\"\n            />\n          </div>\n          {children}\n        </div>\n      </PFTopologySideBar>\n    </DrawerPanelContent>\n  );\n};\n\nexport default TopologySideBar;\n","import * as React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateActions,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { TopologyIcon } from '@patternfly/react-icons/dist/esm/icons/topology-icon';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\ntype LimitExceededStateProps = {\n  onShowTopologyAnyway: () => void;\n};\n\nexport const LimitExceededState: React.FC<LimitExceededStateProps> = ({ onShowTopologyAnyway }) => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState>\n      <EmptyStateHeader\n        titleText={<>{t(`topology~Loading is taking longer than expected`)}</>}\n        icon={<EmptyStateIcon icon={TopologyIcon} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateBody>\n        {t(\n          `topology~We noticed that it is taking a long time to visualize your application Topology. You can use Search to find specific resources or click Continue to keep waiting.`,\n        )}\n      </EmptyStateBody>\n      <EmptyStateFooter>\n        <Button variant=\"primary\" component={(props) => <Link {...props} to=\"/search-page\" />}>\n          {t('topology~Go to Search')}\n        </Button>\n        <EmptyStateActions>\n          <Button variant=\"link\" onClick={onShowTopologyAnyway}>\n            {t('topology~Continue')}\n          </Button>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n","import * as React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  EmptyStateActions,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { TopologyIcon } from '@patternfly/react-icons/dist/esm/icons/topology-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\ntype TopologyEmptyStateProps = {\n  setIsQuickSearchOpen: (isOpen: boolean) => void;\n};\n\nconst TopologyEmptyState: React.FC<TopologyEmptyStateProps> = ({ setIsQuickSearchOpen }) => {\n  const { t } = useTranslation();\n\n  return (\n    <EmptyState\n      className=\"odc-topology__empty-state\"\n      variant={EmptyStateVariant.full}\n      data-test=\"no-resources-found\"\n    >\n      <EmptyStateHeader\n        titleText={<>{t('topology~No resources found')}</>}\n        icon={<EmptyStateIcon icon={TopologyIcon} />}\n        headingLevel=\"h3\"\n      />\n      <EmptyStateFooter>\n        <EmptyStateActions>\n          <Trans t={t} ns=\"topology\">\n            <Button\n              isInline\n              variant=\"link\"\n              data-test=\"start-building-your-application\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setIsQuickSearchOpen(true);\n              }}\n            >\n              Start building your application\n            </Button>\n            {' or visit the '}\n            <Link to=\"/add\" data-test=\"add-page\">\n              Add page\n            </Link>\n            {' for more details.'}\n          </Trans>\n        </EmptyStateActions>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nexport default React.memo(TopologyEmptyState);\n","import * as React from 'react';\nimport { Tooltip, Popover, Button, Icon } from '@patternfly/react-core';\nimport { ListIcon } from '@patternfly/react-icons/dist/esm/icons/list-icon';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport { TopologyIcon } from '@patternfly/react-icons/dist/esm/icons/topology-icon';\nimport { observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FileUploadContext,\n  FileUploadContextType,\n} from '@console/app/src/components/file-upload/file-upload-context';\nimport { allImportResourceAccess } from '@console/dev-console/src/actions/add-resources';\nimport { useAddToProjectAccess } from '@console/dev-console/src/utils/useAddToProjectAccess';\nimport { useIsMobile } from '@console/shared';\nimport { ModelContext, ExtensibleModel } from '../../data-transforms/ModelContext';\nimport { TopologyViewType } from '../../topology-types';\nimport { getTopologyShortcuts } from '../graph-view/TopologyShortcuts';\n\ninterface TopologyPageToolbarProps {\n  viewType: TopologyViewType;\n  onViewChange: (view: TopologyViewType) => void;\n}\n\nconst TopologyPageToolbar: React.FC<TopologyPageToolbarProps> = observer(\n  function TopologyPageToolbar({ viewType, onViewChange }) {\n    const { t } = useTranslation();\n    const isMobile = useIsMobile();\n    const { extensions } = React.useContext<FileUploadContextType>(FileUploadContext);\n    const showGraphView = viewType === TopologyViewType.graph;\n    const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n    const { namespace, isEmptyModel } = dataModelContext;\n    const createResourceAccess: string[] = useAddToProjectAccess(namespace);\n    const allImportAccess = createResourceAccess.includes(allImportResourceAccess);\n    const viewChangeTooltipContent = showGraphView\n      ? t('topology~List view')\n      : t('topology~Graph view');\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <>\n        {!isMobile ? (\n          <Popover\n            aria-label={t('topology~Shortcuts')}\n            bodyContent={getTopologyShortcuts(t, {\n              supportedFileTypes: extensions,\n              isEmptyModel,\n              viewType,\n              allImportAccess,\n            })}\n            position=\"left\"\n            maxWidth=\"100vw\"\n          >\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              className=\"odc-topology__shortcuts-button\"\n              icon={<QuestionCircleIcon />}\n              data-test-id=\"topology-view-shortcuts\"\n            >\n              {t('topology~View shortcuts')}\n            </Button>\n          </Popover>\n        ) : null}\n        <Tooltip position=\"left\" content={viewChangeTooltipContent}>\n          <Button\n            variant=\"link\"\n            aria-label={viewChangeTooltipContent}\n            className=\"pf-m-plain odc-topology__view-switcher\"\n            data-test-id=\"topology-switcher-view\"\n            isDisabled={isEmptyModel}\n            onClick={() =>\n              onViewChange(showGraphView ? TopologyViewType.list : TopologyViewType.graph)\n            }\n          >\n            <Icon size=\"md\">{showGraphView ? <ListIcon /> : <TopologyIcon />}</Icon>\n          </Button>\n        </Tooltip>\n      </>\n    );\n  },\n);\n\nexport default TopologyPageToolbar;\n","import * as React from 'react';\nimport { TFunction } from 'i18next';\nimport { Shortcut, ShortcutTable } from '@console/shared';\nimport { TopologyViewType } from '../../topology-types';\n\nexport type Options = {\n  supportedFileTypes: string[];\n  isEmptyModel: boolean;\n  viewType: TopologyViewType;\n  allImportAccess: boolean;\n};\nexport const getTopologyShortcuts = (t: TFunction, options: Options): React.ReactElement => {\n  const { supportedFileTypes, isEmptyModel, viewType, allImportAccess } = options;\n  return (\n    <ShortcutTable>\n      {!isEmptyModel && viewType === TopologyViewType.graph && (\n        <>\n          <Shortcut data-test-id=\"move\" drag>\n            {t('topology~Move')}\n          </Shortcut>\n          {allImportAccess && (\n            <>\n              <Shortcut data-test-id=\"edit-application-grouping\" shift drag>\n                {t('topology~Edit application grouping')}\n              </Shortcut>\n              <Shortcut data-test-id=\"context-menu\" rightClick>\n                {t('topology~Access context menu')}\n              </Shortcut>\n              <Shortcut data-test-id=\"create-connector-handle\" hover>\n                {t('topology~Access create connector handle')}\n              </Shortcut>\n            </>\n          )}\n        </>\n      )}\n      {!isEmptyModel && (\n        <Shortcut data-test-id=\"view-details\" click>\n          {t('topology~View details in side panel')}\n        </Shortcut>\n      )}\n      <Shortcut data-test-id=\"open-quick-search\" ctrl keyName=\"Spacebar\">\n        {t('topology~Open quick search modal')}\n      </Shortcut>\n      {supportedFileTypes?.length > 0 && allImportAccess && (\n        <Shortcut data-test-id=\"upload-file\" dragNdrop>\n          {t('topology~Upload file ({{fileTypes}}) to project', {\n            fileTypes: supportedFileTypes.map((ex) => `.${ex}`).toString(),\n          })}\n        </Shortcut>\n      )}\n    </ShortcutTable>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement, withDragNode, withSelection } from '@patternfly/react-topology';\nimport { contextMenuActions } from '@console/topology/src/actions';\nimport { withCreateConnector } from '@console/topology/src/behavior';\nimport {\n  createConnectorCallback,\n  nodeDragSourceSpec,\n  withContextMenu,\n  CreateConnector,\n} from '@console/topology/src/components/graph-view';\nimport BindableNode from '@console/topology/src/components/graph-view/components/nodes/BindableNode';\nimport { withEditReviewAccess } from '@console/topology/src/utils';\nimport { TYPE_BINDABLE_NODE } from '../const';\n\nexport const getDevConsoleComponentFactory = (\n  kind,\n  type,\n): React.ComponentType<{ element: GraphElement }> | undefined => {\n  switch (type) {\n    case TYPE_BINDABLE_NODE:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withEditReviewAccess('patch')(\n          withDragNode(nodeDragSourceSpec(type))(\n            withSelection({ controlled: true })(withContextMenu(contextMenuActions)(BindableNode)),\n          ),\n        ),\n      );\n    default:\n      return undefined;\n  }\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport TopologySideBarTabSection from '@console/topology/src/components/side-bar/TopologySideBarTabSection';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { HPAOverview } from '../hpa/HpaOverview';\n\nexport const useHpaTabSectionForTopologySideBar: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n  const data = element.getData();\n  const { hpas } = data?.resources ?? {};\n  const section = hpas ? (\n    <TopologySideBarTabSection>\n      <HPAOverview hpas={hpas} />\n    </TopologySideBarTabSection>\n  ) : undefined;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport { getResource } from '@console/topology/src/utils';\nimport MonitoringTab from '../monitoring/overview/MonitoringTab';\n\nexport const useObserveSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      StatefulSetModel.kind,\n      DaemonSetModel.kind,\n    ].includes(resource.kind)\n  ) {\n    return [undefined, true, undefined];\n  }\n  const { resources } = element.getData();\n  const section = resources ? <MonitoringTab item={resources} /> : undefined;\n  return [section, true, undefined];\n};\n","export * from './resource-link';\nexport * from './tab-section';\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { ResourceIcon, ResourceLink } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { TYPE_SERVICE_BINDING } from '@console/topology/src/const';\nimport { getResource } from '@console/topology/src/utils';\n\nexport const getSbrPanelResourceLink = (element: GraphElement) => {\n  if (element.getType() !== TYPE_SERVICE_BINDING) return undefined;\n  const resource = getResource(element);\n  return (\n    <>\n      <ResourceIcon kind={resource.kind} />\n      <ResourceLink\n        kind={referenceFor(resource)}\n        name={resource.metadata.name}\n        namespace={resource.metadata.namespace}\n        hideIcon\n      />\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Edge, GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary, SectionHeading } from '@console/internal/components/utils';\nimport ServiceBindingSummary from '@console/service-binding-plugin/src/components/service-binding-details/ServiceBindingSummary';\nimport { ServiceBinding } from '@console/service-binding-plugin/src/types';\nimport TopologyEdgeResourcesPanel from '@console/topology/src/components/side-bar/TopologyEdgeResourcesPanel';\nimport { TYPE_SERVICE_BINDING } from '@console/topology/src/const';\nimport { getResource } from '@console/topology/src/utils';\n\nconst DetailsSection: React.FC<{ resource: ServiceBinding }> = ({ resource }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body\">\n      <SectionHeading text={t('devconsole~Details')} />\n      <div className=\"resource-overview__body\">\n        <div className=\"resource-overview__summary\">\n          <ResourceSummary resource={resource} />\n        </div>\n        <div className=\"resource-overview__details\">\n          <ServiceBindingSummary serviceBinding={resource} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const useSbrPanelDetailsSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  if (element.getType() !== TYPE_SERVICE_BINDING) {\n    return [undefined, true, undefined];\n  }\n  const resource = getResource<ServiceBinding>(element);\n  const section = <DetailsSection resource={resource} />;\n  return [section, true, undefined];\n};\n\nexport const useSbrPanelResourceSection: DetailsTabSectionExtensionHook = (element: Edge) => {\n  if (element.getType() !== TYPE_SERVICE_BINDING) {\n    return [undefined, true, undefined];\n  }\n  const section = <TopologyEdgeResourcesPanel edge={element} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport Topology from '@console/topology/src/components/page/TopologyPage';\n\nconst TopologyPage: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Helmet>\n        <title>{t('devconsole~Topology')}</title>\n      </Helmet>\n      <Topology />\n    </>\n  );\n};\n\nexport default TopologyPage;\n","import * as React from 'react';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport { HorizontalPodAutoscalerKind } from '@console/internal/module/k8s';\n\ntype HPAOverviewProps = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nexport const HPAOverview: React.FC<HPAOverviewProps> = ({ hpas }) => {\n  if (!hpas?.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <SidebarSectionHeading text={HorizontalPodAutoscalerModel.labelPlural} />\n      <ul className=\"list-group\">\n        {hpas.map((hpa: HorizontalPodAutoscalerKind) => (\n          <li key={hpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              kind={HorizontalPodAutoscalerModel.kind}\n              name={hpa.metadata.name}\n              namespace={hpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n"],"sourceRoot":""}