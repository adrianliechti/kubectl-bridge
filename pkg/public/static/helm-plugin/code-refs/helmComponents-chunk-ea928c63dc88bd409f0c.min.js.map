{"version":3,"sources":["webpack:///./public/components/resource-quota.jsx","webpack:///./public/components/namespace.jsx","webpack:///./packages/console-shared/src/components/dashboard/inventory-card/utils.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/modals/confirm-modal.jsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard-context.tsx","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./public/components/dashboard/with-dashboard-resources.tsx","webpack:///./packages/console-app/src/components/resource-quota/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utils.ts","webpack:///./packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/health-item.tsx","webpack:///./packages/console-shared/src/promql/project-dashboard.ts","webpack:///./packages/console-shared/src/promql/cluster-dashboard.ts","webpack:///./packages/console-app/src/components/resource-quota/ResourceQuotaCharts.tsx","webpack:///./packages/console-app/src/components/resource-quota/AppliedClusterResourceQuotaCharts.tsx","webpack:///./public/components/graphs/donut.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/QuotaSummary.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/context.ts","webpack:///./packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/status-card.tsx","webpack:///./packages/dev-console/src/components/projects/CreateProjectListPage.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","webpack:///./public/components/graphs/gauge.tsx","webpack:///./public/components/dashboard/project-dashboard/project-dashboard.tsx","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.tsx","webpack:///./public/components/overview/index.tsx","webpack:///./public/components/dashboard/project-dashboard/details-card.tsx","webpack:///./public/components/dashboard/project-dashboard/status-card.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-card.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/inventory-card.tsx","webpack:///./public/components/dashboard/project-dashboard/activity-card.tsx","webpack:///./public/components/dashboard/project-dashboard/launcher-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherItem.tsx","webpack:///./public/components/dashboard/project-dashboard/resource-quota-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem.tsx","webpack:///./packages/console-app/src/components/resource-quota/ClusterResourceQuotaCharts.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/const.ts","webpack:///./packages/helm-plugin/src/utils/helm-utils.ts","webpack:///./packages/console-shared/src/components/dynamic-form/utils.ts","webpack:///./packages/console-shared/src/components/editor/yaml-download-utils.ts","webpack:///./packages/helm-plugin/src/types/helm-types.ts","webpack:///./packages/console-shared/src/components/dynamic-form/types.ts","webpack:///./packages/helm-plugin/src/catalog/utils/const.ts","webpack:///./packages/helm-plugin/src/const.ts","webpack:///./packages/helm-plugin/src/components/details-page/notes/HelmReleaseNotesEmptyState.tsx","webpack:///./packages/helm-plugin/src/components/details-page/overview/HelmReleaseOverview.tsx","webpack:///./packages/helm-plugin/src/components/details-page/overview/HelmChartSummary.tsx","webpack:///./packages/helm-plugin/src/components/list-page/HelmReleaseListPage.tsx","webpack:///./packages/helm-plugin/src/components/index.ts","webpack:///./packages/helm-plugin/src/components/forms/install-upgrade/HelmInstallUpgradePage.tsx","webpack:///./packages/helm-plugin/src/components/forms/rollback/HelmReleaseRollbackPage.tsx","webpack:///./packages/helm-plugin/src/components/forms/rollback/RevisionListHeader.tsx","webpack:///./packages/helm-plugin/src/components/details-page/HelmReleaseDetailsPage.tsx","webpack:///./packages/helm-plugin/src/components/details-page/history/HelmReleaseHistoryHeader.tsx","webpack:///./packages/helm-plugin/src/components/details-page/resources/HelmReleaseResourcesHeader.tsx","webpack:///./packages/helm-plugin/src/components/list-page/HelmReleaseList.tsx","webpack:///./packages/helm-plugin/src/components/list-page/HelmReleaseListHeader.tsx","webpack:///./packages/helm-plugin/src/components/forms/HelmChartRepository/CreateHelmChartRepositoryPage.tsx","webpack:///./packages/helm-plugin/src/components/forms/HelmChartRepository/helmchartrepository-create-utils.ts","webpack:///./packages/helm-plugin/src/components/list-page/ProjectHelmChartRepositoryListPage.tsx","webpack:///./packages/helm-plugin/src/components/list-page/ProjectHelmChartRepositoryList.tsx","webpack:///./packages/helm-plugin/src/components/list-page/RepositoriesHeader.tsx","webpack:///./packages/helm-plugin/src/components/list-page/HelmChartRepositoryListPage.tsx","webpack:///./packages/helm-plugin/src/components/list-page/HelmTabbedPage.tsx","webpack:///./packages/helm-plugin/src/utils/helm-validation-utils.ts","webpack:///./packages/helm-plugin/src/components/forms/install-upgrade/HelmChartMetaDescription.tsx","webpack:///./packages/helm-plugin/src/components/forms/install-upgrade/HelmInstallUpgradeForm.tsx","webpack:///./packages/helm-plugin/src/components/forms/install-upgrade/HelmChartVersionDropdown.tsx","webpack:///./packages/helm-plugin/src/components/forms/install-upgrade/HelmReadmeModal.tsx","webpack:///./packages/helm-plugin/src/components/forms/rollback/HelmReleaseRollbackForm.tsx","webpack:///./packages/helm-plugin/src/components/forms/rollback/RevisionListRow.tsx","webpack:///./packages/helm-plugin/src/components/details-page/HelmReleaseDetails.tsx","webpack:///./packages/helm-plugin/src/components/details-page/history/HelmReleaseHistory.tsx","webpack:///./packages/helm-plugin/src/components/details-page/history/HelmReleaseHistoryRow.tsx","webpack:///./packages/helm-plugin/src/components/details-page/notes/HelmReleaseNotes.tsx","webpack:///./packages/helm-plugin/src/components/details-page/resources/HelmReleaseResources.tsx","webpack:///./packages/helm-plugin/src/components/details-page/resources/HelmReleaseResourcesList.tsx","webpack:///./packages/helm-plugin/src/components/details-page/resources/HelmReleaseResourcesRow.tsx","webpack:///./packages/helm-plugin/src/components/list-page/HelmReleaseListRow.tsx","webpack:///./packages/helm-plugin/src/components/forms/HelmChartRepository/CreateHelmChartRepository.tsx","webpack:///./packages/helm-plugin/src/components/forms/HelmChartRepository/CreateHelmChartRepositoryForm.tsx","webpack:///./packages/helm-plugin/src/components/forms/HelmChartRepository/CreateHelmChartRepositoryFormEditor.tsx","webpack:///./packages/helm-plugin/src/components/forms/HelmChartRepository/helmchartrepository-validation-utils.ts","webpack:///./packages/helm-plugin/src/components/list-page/ProjectHelmChartRepositoryRow.tsx","webpack:///./packages/helm-plugin/src/components/list-page/RepositoriesListPage.tsx","webpack:///./packages/helm-plugin/src/components/list-page/RepositoriesList.tsx","webpack:///./packages/helm-plugin/src/components/list-page/RepositoriesRow.tsx"],"names":["common","factory","resourceQuotaMenuActions","getExtensionsActionsForKind","clusterResourceQuotaMenuActions","appliedClusterResourceQuotaMenuActions","namespace","ModifyLabels","ModifyAnnotations","kind","obj","labelKey","href","metadata","name","accessReview","group","apiGroup","resource","plural","verb","Delete","isClusterQuota","quota","clusterQuotaReference","appliedClusterQuotaReference","quotaActions","customData","getQuotaResourceTypes","specHard","sort","getACRQResourceUsage","resourceType","used","status","namespaces","filter","ns","cluster","total","totalUsed","max","hard","spec","percentNamespace","percentOtherNamespaces","percent","otherNamespaces","unused","getResourceUsage","isCluster","statusPath","specPath","usedPath","tableColumnClasses","columnClass","acrqTableColumnClasses","UsageIcon","usageIcon","className","ResourceUsageRow","QuotaScopesInline","scopes","join","QuotaScopesList","t","quotaScopes","Terminating","description","NotTerminating","BestEffort","NotBestEffort","map","scope","scopeObj","key","hasComputeResources","resourceTypes","length","Details","rq","params","reference","isACRQ","text","charts","appliedClusterResourceQuota","clusterResourceQuota","resourceQuota","canListCRQ","label","path","labels","selector","matchLabels","annotations","style","display","marginBottom","type","ResourceQuotaTableRow","actions","resourcesAtQuota","Object","keys","reduce","acc","dataTest","columnID","count","timestamp","creationTimestamp","AppliedClusterResourceQuotaTableRow","ResourceQuotasList","props","Header","title","sortField","transforms","id","Row","virtualize","AppliedClusterResourceQuotasList","quotaType","flatten","resources","data","ResourceQuotasPage","OPENSHIFT","flags","mock","showTitle","namespaced","rowFilters","push","optional","filterGroupName","reducer","items","labelPluralKey","createNS","model","canCreate","createAccessReview","createButtonText","createProps","to","ListComponent","AppliedClusterResourceQuotasPage","ResourceQuotasDetailsPage","menuActions","pages","details","editYaml","AppliedClusterResourceQuotasDetailsPage","getDisplayName","getFilters","requester","ME","USER","SYSTEM","hideIfEmpty","deleteModal","labelKind","weight","tooltip","callback","undefined","phase","content","nsMenuActions","Edit","fetchNamespaceMetrics","promises","query","url","then","result","value","Number","metric","Promise","all","catch","console","error","namespaceColumnInfo","freeze","classes","displayName","memory","cpu","created","NamespacesTableHeader","sortFunc","additional","NamespacesColumnManagementID","getNamespacesSelectedColumns","Set","column","NamespacesTableRow","tableColumns","metrics","UI","getIn","bytes","cores","columns","NamespacesNotFoundMessage","Icon","NamespacesEmptyMessage","NamespacesList","dispatch","updateMetrics","setInterval","clearInterval","selectedColumns","activeColumns","columnManagementID","EmptyMsg","NoDataEmptyMsg","NamespacesPage","createNamespaceModal","createHandler","columnLayout","projectMenuActions","projectColumnManagementID","projectTableHeader","showMetrics","showActions","ProjectLink","project","setLastNamespace","URL","window","location","URLSearchParams","search","basePath","pathname","has","delete","newUrl","toString","hash","namespacedPath","onClick","e","sessionStorage","setItem","projectHeaderWithoutActions","ProjectTableRow","ProjectLinkComponent","actionsEnabled","isColumnManagementEnabled","getProjectSelectedColumns","ProjectsTable","headerWithMetrics","headerNoMetrics","ProjectNotFoundMessage","canCreateNs","CAN_CREATE_NS","canCreateProject","CAN_CREATE_PROJECT","ProjectEmptyMessage","icon","ProjectList","tableProps","canGetNS","CAN_GET_NS","screen","width","ProjectsPage","createProjectModal","filterLabel","skipAccessReview","textFilter","PullSecret","isLoading","setIsLoading","setData","setError","canViewSecrets","serviceAccount","imagePullSecrets","err","modal","pullSecret","variant","isInline","secret","linkTo","NamespaceLineCharts","humanize","byteDataType","BinaryBytes","TopPodsBarChart","ResourceUsage","NamespaceSummary","serviceMeshEnabled","canListSecrets","showLabelEditor","NamespaceDetails","perspective","consoleLinks","isList","links","hideHeading","link","uid","RolesPage","createPath","NamespacesDetailsPage","roles","ProjectsDetailsPage","nameKey","component","workloads","POD_PHASE_GROUP_MAPPING","NOT_MAPPED","ERROR","PROGRESS","WARN","PVC_STATUS_GROUP_MAPPING","PV_STATUS_GROUP_MAPPING","NODE_STATUS_GROUP_MAPPING","VS_STATUS_GROUP_MAPPING","getStatusGroups","mapping","mapper","filterType","groups","UNKNOWN","statusIDs","forEach","find","includes","getPodStatusGroups","getNodeStatusGroups","getPVCStatusGroups","pvc","getPVStatusGroups","pv","getVSStatusGroups","ConfirmModal","super","this","_submit","bind","_cancel","cancel","event","preventDefault","handlePromise","executeFn","supressNotifications","close","titleKey","message","messageKey","btnText","btnTextKey","cancelText","cancelTextKey","submitDanger","onSubmit","errorMessage","state","inProgress","submitText","propTypes","isRequired","confirmModal","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","DroppableFileInput","loader","c","API_PROXY_URL","convertHeaders","headers","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","onCancel","navigate","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","setInProgress","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","onDataChanged","secretsData","onError","onNameChanged","newSecret","save","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","helpText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","authType","changeAuthenticationType","setState","authTypes","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","flex","flexDirection","margin","subTitle","fullWidth","children","flexLayout","extraMargin","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","when","is","deploymentValidationSchema","replicas","transform","cv","min","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","request","requestUnit","limitUnit","ensure","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","abbr","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","associateServiceAccountToSecret","isImageSecret","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","ownerReferences","some","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","ProjectDashboardContext","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","mapDispatchToProps","watchURL","stopWatchURL","watchPrometheusQuery","stopWatchPrometheusQuery","mapStateToProps","dashboards","PROMETHEUS","notificationAlerts","observe","withDashboardResources","WrappedComponent","urls","queries","watchingAlerts","watchPrometheus","queryKey","q","watchAlerts","stopWatchAlerts","watchK8sResource","k8sResources","stopWatchK8sResource","getExternalProps","nextProps","nextState","urlResultChanged","urlKey","queryResultChanged","alertsResultChanged","k8sResourcesChanged","nextExternalProps","externalProps","urlResults","prometheusResults","genericCountResources","getUsedPercentage","usedNum","hardNum","parseInt","getLabelAndUsage","resourceName","useCount","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","placeholder","dataSelector","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","opts","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","dataModelContext","extensionContext","getExtension","current","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alerts","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","app","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","uniqueResource","ConsumerPopover","consumers","top","isOpen","setOpen","onShow","onHide","headerContent","bodyContent","PopoverBody","enableFlip","maxWidth","getLimitIcon","LimitsBody","limitState","requestedState","available","requested","OK","currentConsumer","setCurrentConsumer","activePerspective","canAccessMonitoring","SERVER_FLAGS","prometheusBaseURL","fieldSelector","k8sResource","getResourceToWatch","consumerData","consumerLoaded","consumersLoadError","top5Data","bodyData","consumer","monitoringParams","set","dropdownItems","curr","onDropdownChange","monitoringURL","String","ListItem","toLowerCase","OperatorRow","operatorStatus","isResolved","Component","LoadingComponent","ResolvedComponent","operators","OperatorsPopup","operatorExtensions","dynamicOperatorSubsystems","sections","o","operatorResources","getOperatorsWithStatuses","viewAllLink","operatorRowLoader","reverse","hasGutter","OperatorHealthItem","healthStatuses","health","NOT_AVAILABLE","LOADING","operatorStatuses","importantStatuses","operatorsHealth","detailMessage","popupTitle","URLHealthItem","subsystem","modelExists","additionalResource","healthResult","healthResultError","k8sResult","healthState","healthHandler","popupBodyContent","popupComponent","hide","PrometheusHealthItem","infrastructure","queryResults","popupClassname","popupKeepOnOutsideClick","responses","ResourceHealthItem","resourcesWithNamespace","imageManifestVuln","resourcesResult","ProjectQueries","CPU_USAGE","CPU_REQUESTS","MEMORY_USAGE","MEMORY_REQUESTS","POD_COUNT","FILESYSTEM_USAGE","NETWORK_IN_UTILIZATION","NETWORK_OUT_UTILIZATION","top25Queries","PODS_BY_CPU","PODS_BY_MEMORY","PODS_BY_FILESYSTEM","PODS_BY_NETWORK_IN","PODS_BY_NETWORK_OUT","getMultilineQueries","NETWORK_UTILIZATION","desc","getUtilizationQueries","getTopConsumerQueries","OverviewQuery","PODS_BY_STORAGE","NODES_BY_CPU","NODES_BY_MEMORY","NODES_BY_STORAGE","NODES_BY_PODS","NODES_BY_NETWORK_IN","NODES_BY_NETWORK_OUT","PROJECTS_BY_CPU","PROJECTS_BY_MEMORY","PROJECTS_BY_STORAGE","PROJECTS_BY_PODS","PROJECTS_BY_NETWORK_IN","PROJECTS_BY_NETWORK_OUT","overviewQueries","MEMORY_TOTAL","MEMORY_UTILIZATION","CPU_UTILIZATION","CPU_TOTAL","STORAGE_UTILIZATION","STORAGE_TOTAL","POD_UTILIZATION","getTop25ConsumerQueries","utilization","thresholds","nsQuotas","clusterHard","clusterUsed","nsUsed","clusterUsage","nsUsage","DonutChart","ariaChartLinkLabel","ariaChartTitle","ariaDescription","usedLabel","secondaryTitle","usedLabelText","secondaryTitleText","labelText","namespaceData","datum","ariaTitle","ariaDesc","colorScale","ClusterDashboardContext","infrastructureLoaded","infrastructureError","OperatorsSection","sortedOperatorStatuses","localeCompare","operatorsHealthy","RowLoading","firstColumn","operatorStatusLength","secondColumn","cvResource","DashboardAlerts","hasCVResource","CLUSTER_VERSION","cvLoaded","showClusterUpdate","StatusCard","k8sModels","k8s","subsystemExtensions","dynamicSubsystemExtensions","subsystems","filterSubsystems","popup","operatorSubsystemIndex","findIndex","healthItems","disallowedControlPlaneTopology","controlPlaneTopology","operatorSubsystems","isClickable","isSelectable","hasNoOffset","CreateAProjectButton","openProjectModal","onCreate","setActiveNamespace","createNamespaceOrProjectModal","networkPopovers","PrometheusUtilizationItem","utilizationQuery","totalQuery","TopConsumerPopover","humanizeValue","limitQuery","requestQuery","setLimitReqState","utilizationError","totalError","limitError","requestError","PrometheusMultilineUtilizationItem","TopConsumerPopovers","stats","hasError","responseError","UtilizationCardNodeFilter","machineConfigPools","onNodeSelect","selectedNodes","setIsOpen","selectOptions","order","indexA","indexOf","indexB","mcp","mcpName","hasCheckbox","isSelected","role","onSelect","onOpenChange","open","toggle","toggleRef","isRead","UtilizationCard","machineConfigPoolsLoaded","setSelectedNodes","dynamicItemExtensions","dynamicMultilineItemExtensions","utilizationQueries","multilineQueries","selection","selectionUpdated","getUtilizationQuery","getTotalQuery","getRequestQuery","getLimitQuery","DEFAULT_THRESHOLDS","GaugeChart","invert","loading","remainderLabel","themeColor","green","ready","Gauge","QUERY","mainCards","Card","leftCards","rightCards","getNamespaceDashboardConsoleLinks","ProjectDashboard","namespaceLinks","context","hasNamespaceLinks","rc","badge","listComponent","listPageProps","OverviewListPageLoader","m","OverviewListPage","DetailsCard","labelsSubset","firstThreelabels","detailsLink","projectName","ClusterUtilizationContext","useConsumers","nsQuery","podQuery","nodeQuery","consumerQueries","CPUPopover","MemoryPopover","StoragePopover","PodPopover","NetworkInPopover","NetworkOutPopover","ProjectUtilizationContext","FilesystemPopover","ProjectInventoryItem","additionalResources","additionalDynamicResources","createFirehoseResource","resourceLoaded","resourceLoadError","additionalResourcesData","additionalResourcesLoaded","additionalResourcesLoadError","dynamicResources","dynamicResourcesError","dynamicResourcesLoaded","InventoryCard","itemExtensions","inventoryExtensions","RecentEvent","viewEvents","eventsResource","getEventsResource","moreLink","OngoingActivity","resourceActivityExtensions","dynamicResourceActivityExtensions","resourceActivities","allResourceActivities","isActivity","getTimestamp","resourcesLoaded","size","ActivityCard","LauncherCard","nl","consoleLink","additionalClassName","dataTestID","ResourceQuotaCard","quotas","rqLoaded","rqLoadError","groupVersionKind","clusterQuotas","acrqLoaded","acrqLoadError","noText","cq","isExpanded","setExpanded","isFilled","onToggle","_event","toggleContent","inline","truncate","K8S_UI_SCHEMA","JSON_SCHEMA_GROUP_TYPES","JSON_SCHEMA_NUMBER_TYPES","THOUSAND","MILLION","BILLION","HelmReleaseStatusLabels","Deployed","PendingInstall","PendingUpgrade","PendingRollback","SelectedReleaseStatuses","OtherReleaseStatuses","releaseStatus","releaseStatusReducer","release","info","helmReleasesRowFilters","filterHelmReleasesByStatus","releases","filterHelmReleasesByName","fetchHelmReleases","limitInfo","fetchString","fetchHelmRelease","helmReleaseName","getChartURL","helmChartData","chartVersion","chartRepoName","chartData","getChartRepositoryTitle","chartRepositories","chartRepository","getChartIndexEntry","chartEntries","chartName","getChartEntriesByName","annotatedName","providerName","chartRepositoryTitle","indexEntry","chart","concatVersions","appVersion","getChartVersions","getOriginRedirectURL","actionOrigin","releaseName","topology","getHelmActionConfig","helmAction","chartURL","chartIndexEntry","Create","form","yaml","helmReleaseApi","encodeURIComponent","redirectURL","Upgrade","put","Rollback","flattenReleaseResources","getChartValuesYAML","orderedValuesFile","orderedValues","atob","loadHelmManifestResources","manifest","schema","Boolean","getChartReadme","readmeFile","helmActionString","fetchHelmReleaseHistory","isGoingToTopology","UNSUPPORTED_SCHEMA_PROPERTIES","stringPathToUISchemaPath","subPath","useSchemaLabel","uiSchema","defaultLabel","options","useSchemaDescription","defaultDescription","getSchemaErrors","unsupportedProperty","hasNoFields","jsonSchema","noUIFieldOrWidget","array","object","property","propertyName","boolean","number","getUISortOrder","fallback","getControlFieldsAtPath","dependency","controlFieldPath","controlFieldName","childUISchema","getJSONSchemaPropertySortWeight","currentPath","propertyUISchema","controlFields","isControlField","siblingDependency","uiSortOrder","controlFieldOffset","offset","controlField","Infinity","getJSONSchemaOrder","descendantOrder","handleArray","propertyNames","uiOrder","sortBy","toJS","orderAccumulator","propertySchema","handleObject","pruneRecursive","sample","shouldPrune","valueIsEmpty","definedAndEmpty","prune","downloadYaml","blob","Blob","filename","HelmReleaseStatus","HelmActionType","HelmActionOrigins","JSONSchemaType","CHART_NAME_ANNOTATION","PROVIDER_TYPE_ANNOTATION","PROVIDER_NAME_ANNOTATION","SUPPORT_URL_ANNOTATION","PROVIDER_TYPE","PROVIDER_TYPE_KEYS","community","partner","redhat","FLAG_OPENSHIFT_HELM","FLAG_HELM_CHARTS_CATALOG_TYPE","HELM_CHART_CATALOG_TYPE_ID","HELM_CHART_ACTION_ID","full","titleText","headingLevel","customPathName","helmRelease","last_deployed","updated","revision","searchParams","initialChartURL","initialReleaseName","helmChartName","helmChartRepoName","helmActionOrigin","setChartData","setChartName","setChartVersion","setAppVersion","chartReadme","setChartReadme","chartHasValues","setChartHasValues","chartError","setChartError","initialYamlData","setInitialYamlData","initialFormData","setInitialFormData","initialFormSchema","setInitialFormSchema","ignore","chartValues","valuesYAML","valuesJSON","valuesSchema","initialValues","formData","formSchema","editorType","Form","YAML","chartMetaDescription","light","valuesObj","prunedFormData","setStatus","submitError","errorText","payload","chart_url","redirect","secretId","notes","onReset","goBack","formikProps","helmActionConfig","onVersionChange","releaseHistory","setReleaseHistory","input","handleNamespaceChange","newNamespace","kebab","getRowProps","secretsCountRef","releasesLoaded","setReleasesLoaded","setLoadError","setReleases","matchExpressions","operator","partialMetadata","secretsLoaded","secretsLoadError","newCount","destroyed","helmReleases","isHelmEnabled","installURL","src","alt","queryArg","sortOrder","asc","rowFilterReducer","textFilterReducer","ResourceRow","resourceHeader","isEditForm","hideNamespacedPage","canCreateHCR","canCreatePHCR","renderForm","showScopeType","existingRepoName","convertToForm","repoDisplayName","ca","connectionConfig","tlsClientConfig","repoDescription","repoUrl","convertToHelmChartRepository","formValues","getDefaultResource","kindRef","PageContentsWithStartGuide","isHelmVisible","projectHelmChartCreateAccess","loadingCreatePHCR","helmChartCreateAccess","loadingCreateHCR","projectHelmChartEditAccess","loadingEditPHCR","helmChartEditAccess","loadingEditHCR","projectHelmChartListAccess","loadingPHCR","helmChartListAccess","loadingHCR","onSelection","projectHelmChartRepository","pageData","telemetryPrefix","getHelmActionValidationSchema","imgSrc","provider","maintainers","errors","handleSubmit","handleReset","isSubmitting","dirty","theme","isSubmitDisabled","formEditor","formDescription","yamlEditor","showSamples","formSubTitle","readmeText","readme","modalClassName","formHelpText","xl","lg","md","formContext","editor","yamlContext","lastViewUserSettingKey","noMargin","submitLabel","disableSubmit","resetLabel","sticky","setFieldValue","setFieldTouched","helmChartVersions","setHelmChartVersions","helmChartEntries","setHelmChartEntries","helmChartRepos","setHelmChartRepos","resourceSelector","onChartVersionChange","chartRepoIndex","onAccept","currentVersion","newVersion","HelmReadmeModal","helmReadmeModalLauncher","fieldId","defaultSortField","defaultSortOrder","LoadedHelmReleaseDetails","sortedSecrets","latestReleaseSecret","latestSecretName","latestSecretStatus","verticalAlign","marginLeft","actionsScope","customActionMenu","DROPDOWN","breadcrumbsFor","customKind","helmReleaseData","setHelmReleaseData","helmReleaseError","setHelmReleaseError","secretLoaded","secretLoadError","mounted","secretsFirehoseResult","latestHelmRelease","revisionsLoaded","setRevisionsLoaded","revisions","setRevisions","memoizedObj","totalRevisions","latestHelmReleaseVersion","confirmModalRollbackHelmRelease","cta","HelmReleaseHistoryKebab","helmReleaseNotes","firehoseResources","HelmReleaseResourceStatus","fireTelemetryEvent","hcr","hcrLoaded","hcrLoadError","defaultResource","skipInvalid","handleCancel","HelmChartRepositoryRes","submitSuccess","resourceCall","helmChartRepositoryScope","enableReinitialize","existingRepo","formTitle","sanitizeTo","yamlDeployment","successMessage","handleDownload","autocompleteFilter","strText","isChecked","textExpanded","textCollapsed","showBadge","urlRegex","createHelmChartRepositoryValidationSchema","validate","abortEarly","objReference","resourceLists","projectHelmChartRepositoryData","helmChartRepositoryData","helmChartRepository","helmChartRepositoryReference","projectHelmChartRepositoryReference"],"mappings":"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","file":"helm-plugin/code-refs/helmComponents-chunk-ea928c63dc88bd409f0c.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { OutlinedCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-circle-icon';\nimport { ResourcesAlmostEmptyIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-empty-icon';\nimport { ResourcesAlmostFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-full-icon';\nimport { ResourcesFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport { UnknownIcon } from '@patternfly/react-icons/dist/esm/icons/unknown-icon';\n\nimport { useTranslation } from 'react-i18next';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport ClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/ClusterResourceQuotaCharts';\n\nimport { FLAGS, YellowExclamationTriangleIcon } from '@console/shared';\nimport { DetailsPage, MultiListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  SectionHeading,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  convertToBaseValue,\n  FieldLevelHelp,\n  useAccessReview,\n  LabelList,\n  Selector,\n  Timestamp,\n  DetailsItem,\n} from './utils';\nimport { connectToFlags } from '../reducers/connectToFlags';\nimport { flagPending } from '../reducers/features';\nimport { LoadingBox } from './utils/status-box';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport {\n  AppliedClusterResourceQuotaModel,\n  ResourceQuotaModel,\n  ClusterResourceQuotaModel,\n} from '../models';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\n\nconst { common } = Kebab.factory;\n\nconst resourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ResourceQuotaModel),\n  ...common,\n];\nconst clusterResourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  ...common,\n];\nconst appliedClusterResourceQuotaMenuActions = (namespace) => [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (kind, obj) => {\n    return {\n      // t('public~Edit AppliedClusterResourceQuota')\n      labelKey: 'public~Edit AppliedClusterResourceQuota',\n      href: `/k8s/ns/${namespace}/${referenceForModel(AppliedClusterResourceQuotaModel)}/${\n        obj.metadata.name\n      }/yaml`,\n      accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace,\n        verb: 'update',\n      },\n    };\n  },\n  Kebab.factory.Delete,\n];\n\nconst isClusterQuota = (quota) => !quota.metadata.namespace;\n\nconst clusterQuotaReference = referenceForModel(ClusterResourceQuotaModel);\nconst appliedClusterQuotaReference = referenceForModel(AppliedClusterResourceQuotaModel);\n\nconst quotaActions = (quota, customData = undefined) => {\n  if (quota.metadata.namespace) {\n    return resourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'ClusterResourceQuota') {\n    return clusterResourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'AppliedClusterResourceQuota') {\n    return appliedClusterResourceQuotaMenuActions(customData.namespace);\n  }\n};\n\nexport const getQuotaResourceTypes = (quota) => {\n  const specHard = isClusterQuota(quota)\n    ? _.get(quota, 'spec.quota.hard')\n    : _.get(quota, 'spec.hard');\n  return _.keys(specHard).sort();\n};\n\nexport const getACRQResourceUsage = (quota, resourceType, namespace) => {\n  let used;\n  if (namespace) {\n    const allNamespaceData = quota.status?.namespaces;\n    const currentNamespaceData = allNamespaceData.filter((ns) => ns.namespace === namespace);\n    used = {\n      namespace: currentNamespaceData[0]?.status?.used[resourceType],\n      cluster: quota.status?.total?.used[resourceType],\n    };\n  } else {\n    used = { namespace: 0, cluster: quota.status?.total?.used[resourceType] };\n  }\n  const totalUsed = quota.status?.total?.used[resourceType];\n  const max = quota.status?.total?.hard[resourceType] || quota.spec?.quota?.hard[resourceType];\n  const percentNamespace =\n    !max || !used.namespace\n      ? 0\n      : (convertToBaseValue(used.namespace) / convertToBaseValue(max)) * 100;\n  const percentCluster =\n    !max || !used.cluster ? 0 : (convertToBaseValue(used.cluster) / convertToBaseValue(max)) * 100;\n  const percentOtherNamespaces = percentCluster - percentNamespace;\n\n  return {\n    used,\n    totalUsed,\n    max,\n    percent: {\n      namespace: percentNamespace,\n      otherNamespaces: percentOtherNamespaces,\n      unused: 100 - (percentNamespace + percentOtherNamespaces),\n    },\n  };\n};\n\nexport const getResourceUsage = (quota, resourceType) => {\n  const isCluster = isClusterQuota(quota);\n  const statusPath = isCluster ? ['status', 'total', 'hard'] : ['status', 'hard'];\n  const specPath = isCluster ? ['spec', 'quota', 'hard'] : ['spec', 'hard'];\n  const usedPath = isCluster ? ['status', 'total', 'used'] : ['status', 'used'];\n  const max =\n    _.get(quota, [...statusPath, resourceType]) || _.get(quota, [...specPath, resourceType]);\n  const used = _.get(quota, [...usedPath, resourceType]);\n  const percent = !max || !used ? 0 : (convertToBaseValue(used) / convertToBaseValue(max)) * 100;\n\n  return {\n    used,\n    max,\n    percent,\n  };\n};\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst acrqTableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nexport const UsageIcon = ({ percent }) => {\n  let usageIcon = <UnknownIcon />;\n  if (percent === 0) {\n    usageIcon = <OutlinedCircleIcon className=\"co-resource-quota-empty\" />;\n  } else if (percent > 0 && percent < 50) {\n    usageIcon = <ResourcesAlmostEmptyIcon className=\"co-resource-quota-almost-empty\" />;\n  } else if (percent >= 50 && percent < 100) {\n    usageIcon = <ResourcesAlmostFullIcon className=\"co-resource-quota-almost-full\" />;\n  } else if (percent === 100) {\n    usageIcon = <ResourcesFullIcon className=\"co-resource-quota-full\" />;\n  } else if (percent > 100) {\n    usageIcon = <YellowExclamationTriangleIcon className=\"co-resource-quota-exceeded\" />;\n  }\n  return usageIcon;\n};\n\nexport const ResourceUsageRow = ({ quota, resourceType, namespace = undefined }) => {\n  const reference = referenceFor(quota);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  if (isACRQ) {\n    const { used, totalUsed, max, percent } = getACRQResourceUsage(quota, resourceType, namespace);\n    return (\n      <div className=\"row co-m-row\">\n        <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n        <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n          <UsageIcon percent={percent.namespace} />\n        </div>\n        <div className=\"col-sm-2 col-xs-2\">{used.namespace}</div>\n        <div className=\"col-sm-2 col-xs-2\">{totalUsed}</div>\n        <div className=\"col-sm-2 col-xs-2\">{max}</div>\n      </div>\n    );\n  }\n\n  const { used, max, percent } = getResourceUsage(quota, resourceType);\n  return (\n    <div className=\"row co-m-row\">\n      <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n      <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n        <UsageIcon percent={percent} />\n      </div>\n      <div className=\"col-sm-3 col-xs-3\">{used}</div>\n      <div className=\"col-sm-3 col-xs-3\">{max}</div>\n    </div>\n  );\n};\n\nexport const QuotaScopesInline = ({ scopes }) => {\n  return <span>({scopes.join(', ')})</span>;\n};\n\nexport const QuotaScopesList = ({ scopes }) => {\n  const { t } = useTranslation();\n  const quotaScopes = {\n    Terminating: {\n      description: t(\n        'public~Affects pods that have an active deadline. These pods usually include builds, deployers, and jobs.',\n      ),\n    },\n    NotTerminating: {\n      description: t(\n        'public~Affects pods that do not have an active deadline. These pods usually include your applications.',\n      ),\n    },\n    BestEffort: {\n      description: t(\n        'public~Affects pods that do not have resource limits set. These pods have a best effort quality of service.',\n      ),\n    },\n    NotBestEffort: {\n      description: t(\n        'public~Affects pods that have at least one resource limit set. These pods do not have a best effort quality of service.',\n      ),\n    },\n  };\n  return scopes.map((scope) => {\n    const scopeObj = _.get(quotaScopes, scope);\n    return scopeObj ? (\n      <dd key={scope}>\n        <div className=\"co-resource-quota-scope__label\">{scope}</div>\n        <div className=\"co-resource-quota-scope__description\">{scopeObj.description}</div>\n      </dd>\n    ) : (\n      <dd key={scope} className=\"co-resource-quota-scope__label\">\n        {scope}\n      </dd>\n    );\n  });\n};\n\nexport const hasComputeResources = (resourceTypes) => {\n  const chartResourceTypes = [\n    'requests.cpu',\n    'cpu',\n    'limits.cpu',\n    'requests.memory',\n    'memory',\n    'limits.memory',\n  ];\n  return _.intersection(resourceTypes, chartResourceTypes).length > 0;\n};\n\nconst Details = ({ obj: rq }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const resourceTypes = getQuotaResourceTypes(rq);\n  const scopes = rq.spec?.scopes ?? rq.spec?.quota?.scopes;\n  const reference = referenceFor(rq);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  const namespace = params?.ns;\n  let text;\n  let charts;\n  switch (reference) {\n    case appliedClusterQuotaReference:\n      text = t('public~AppliedClusterResourceQuota details');\n      charts = (\n        <AppliedClusterResourceQuotaCharts appliedClusterResourceQuota={rq} namespace={namespace} />\n      );\n      break;\n    case clusterQuotaReference:\n      text = t('public~ClusterResourceQuota details');\n      charts = <ClusterResourceQuotaCharts clusterResourceQuota={rq} />;\n      break;\n    default:\n      text = t('public~ResourceQuota details');\n      charts = <ResourceQuotaCharts resourceQuota={rq} />;\n  }\n  const canListCRQ = useAccessReview({\n    group: ClusterResourceQuotaModel.apiGroup,\n    resource: ClusterResourceQuotaModel.plural,\n    verb: 'list',\n  });\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} />\n        {charts}\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={rq}>\n              {canListCRQ && (\n                <DetailsItem\n                  label={t('public~ClusterResourceQuota')}\n                  obj={rq}\n                  path=\"rq.metadata.name\"\n                >\n                  <ResourceLink kind={clusterQuotaReference} name={rq.metadata.name} />\n                </DetailsItem>\n              )}\n              <DetailsItem\n                label={t('public~Label selector')}\n                obj={rq}\n                path=\"spec.selector.labels.matchLabels\"\n              >\n                <LabelList\n                  kind={appliedClusterQuotaReference}\n                  labels={rq.spec?.selector?.labels?.matchLabels}\n                />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Project annotations')}\n                obj={rq}\n                path=\"spec.selector.annotations\"\n              >\n                <Selector selector={rq.spec?.selector?.annotations} namespace={namespace} />\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          {scopes && (\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('public~Scopes')}</dt>\n                <QuotaScopesList scopes={scopes} />\n              </dl>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} style={{ display: 'block', marginBottom: '20px' }}>\n          <FieldLevelHelp>\n            <p>\n              {t(\n                'public~Requests are the amount of resources you expect to use. These are used when establishing if the cluster can fulfill your Request.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~Limits are a maximum amount of a resource you can consume. Applications consuming more than the Limit may be terminated.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~A cluster administrator can establish limits on both the amount you can request and your limits with a ResourceQuota.',\n              )}\n            </p>\n          </FieldLevelHelp>\n        </SectionHeading>\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          <div className=\"row co-m-table-grid__head\">\n            <div className=\"col-sm-4 col-xs-6\">{t('public~Resource type')}</div>\n            <div className=\"col-sm-2 hidden-xs\">{t('public~Capacity')}</div>\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Used')}\n            </div>\n            {isACRQ && <div className=\"col-sm-2 col-xs-2\">{t('public~Total used')}</div>}\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Max')}\n            </div>\n          </div>\n          <div className=\"co-m-table-grid__body\">\n            {resourceTypes.map((type) => (\n              <ResourceUsageRow key={type} quota={rq} resourceType={type} namespace={namespace} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  let resourcesAtQuota;\n  if (rq.kind === ResourceQuotaModel.kind) {\n    resourcesAtQuota = Object.keys(rq?.status?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.hard[resource], rq?.status?.used?.[resource]) >= 100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  } else {\n    resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n        100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  }\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceFor(rq)}\n          name={rq.metadata.name}\n          namespace={\n            referenceFor(rq) === appliedClusterQuotaReference\n              ? customData.namespace\n              : rq.metadata.namespace\n          }\n          className=\"co-resource-item__resource-name\"\n          dataTest=\"resource-quota-link\"\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        {rq.metadata.namespace ? (\n          <ResourceLink kind=\"Namespace\" name={rq.metadata.namespace} />\n        ) : (\n          t('public~None')\n        )}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={referenceFor(rq)}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst AppliedClusterResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  const resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n    (acc, resource) =>\n      getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n      100\n        ? acc + 1\n        : acc,\n    0,\n  );\n  return (\n    <>\n      <TableData className={acrqTableColumnClasses[0]}>\n        <ResourceLink\n          kind={appliedClusterQuotaReference}\n          name={rq.metadata.name}\n          namespace={customData.namespace}\n          className=\"co-resource-item__resource-name\"\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[1], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[2], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[3], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={acrqTableColumnClasses[4]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={acrqTableColumnClasses[5]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={appliedClusterQuotaReference}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nexport const ResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const ResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: tableColumnClasses[4] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[5] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[6] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ResourceQuotas')}\n      Header={ResourceQuotaTableHeader}\n      Row={ResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const AppliedClusterResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[0] },\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[1] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[2] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: acrqTableColumnClasses[3] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: acrqTableColumnClasses[5] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~AppliedClusterResourceQuotas')}\n      Header={AppliedClusterResourceQuotaTableHeader}\n      Row={AppliedClusterResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const quotaType = (quota) => {\n  if (!quota) {\n    return undefined;\n  }\n  return quota.metadata.namespace ? 'namespace' : 'cluster';\n};\n\n// Split each resource quota into one row per subject\nexport const flatten = (resources) => _.flatMap(resources, (resource) => _.compact(resource.data));\n\nexport const ResourceQuotasPage = connectToFlags(FLAGS.OPENSHIFT)(\n  ({ namespace, flags, mock, showTitle }) => {\n    const { t } = useTranslation();\n    const resources = [{ kind: 'ResourceQuota', namespaced: true }];\n    let rowFilters = null;\n\n    if (flagPending(flags[FLAGS.OPENSHIFT])) {\n      return <LoadingBox />;\n    }\n    if (flags[FLAGS.OPENSHIFT]) {\n      if (!namespace) {\n        resources.push({\n          kind: referenceForModel(ClusterResourceQuotaModel),\n          namespaced: false,\n          optional: true,\n        });\n      } else {\n        resources.push({\n          kind: referenceForModel(AppliedClusterResourceQuotaModel),\n          namespaced: true,\n          namespace,\n          optional: true,\n        });\n      }\n\n      rowFilters = [\n        {\n          filterGroupName: t('public~Role'),\n          type: 'role-kind',\n          reducer: quotaType,\n          items: [\n            {\n              id: 'cluster',\n              title: t('public~Cluster-wide {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n            {\n              id: 'namespace',\n              title: t('public~Namespace {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n          ],\n        },\n      ];\n    }\n    const createNS = namespace || 'default';\n    const accessReview = {\n      model: ResourceQuotaModel,\n      namespace: createNS,\n    };\n    return (\n      <MultiListPage\n        canCreate={true}\n        createAccessReview={accessReview}\n        createButtonText={t('public~Create ResourceQuota')}\n        createProps={{ to: `/k8s/ns/${createNS}/resourcequotas/~new` }}\n        ListComponent={ResourceQuotasList}\n        resources={resources}\n        label={t(ResourceQuotaModel.labelPluralKey)}\n        namespace={namespace}\n        flatten={flatten}\n        title={t(ResourceQuotaModel.labelPluralKey)}\n        rowFilters={rowFilters}\n        mock={mock}\n        showTitle={showTitle}\n      />\n    );\n  },\n);\n\nexport const AppliedClusterResourceQuotasPage = ({ namespace, mock, showTitle }) => {\n  const { t } = useTranslation();\n  const resources = [\n    {\n      kind: referenceForModel(AppliedClusterResourceQuotaModel),\n      namespaced: true,\n      namespace,\n      optional: true,\n    },\n  ];\n\n  return (\n    <MultiListPage\n      ListComponent={AppliedClusterResourceQuotasList}\n      resources={resources}\n      label={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      namespace={namespace}\n      flatten={flatten}\n      title={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      mock={mock}\n      showTitle={showTitle}\n    />\n  );\n};\n\nexport const ResourceQuotasDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={resourceQuotaMenuActions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasDetailsPage = (props) => {\n  const params = useParams();\n  const actions = appliedClusterResourceQuotaMenuActions(params?.ns);\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={actions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n","/* eslint-disable tsdoc/syntax */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Alert, Button, Tooltip } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Status,\n  getRequester,\n  getDescription,\n  FLAGS,\n  GreenCheckCircleIcon,\n  getName,\n  COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n  COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n  useUserSettingsCompatibility,\n  isModifiedEvent,\n  REQUESTER_FILTER,\n  useFlag,\n  usePrometheusGate,\n} from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport * as k8sActions from '@console/dynamic-plugin-sdk/src/app/k8s/actions/k8s';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport {\n  ConsoleLinkModel,\n  NamespaceModel,\n  ProjectModel,\n  SecretModel,\n  ServiceAccountModel,\n} from '../models';\nimport { coFetchJSON } from '../co-fetch';\nimport { k8sGet, referenceForModel } from '../module/k8s';\nimport * as UIActions from '../actions/ui';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  DetailsItem,\n  ExternalLink,\n  Kebab,\n  LabelList,\n  LoadingInline,\n  ConsoleEmptyState,\n  ResourceIcon,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  formatBytesAsMiB,\n  formatCores,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  navFactory,\n  useAccessReview,\n} from './utils';\nimport { deleteNamespaceModal, configureNamespacePullSecretModal } from './modals';\nimport { RoleBindingsPage } from './RBAC';\nimport { Bar, Area, PROMETHEUS_BASE_PATH } from './graphs';\nimport { flagPending } from '../reducers/features';\nimport { OpenShiftGettingStarted } from './start-guide';\nimport { OverviewListPage } from './overview';\nimport {\n  getNamespaceDashboardConsoleLinks,\n  ProjectDashboard,\n} from './dashboard/project-dashboard/project-dashboard';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\n\nimport {\n  isCurrentUser,\n  isOtherUser,\n  isSystemNamespace,\n} from '@console/shared/src/components/namespace';\nimport { useCreateNamespaceModal } from '@console/shared/src/hooks/useCreateNamespaceModal';\nimport { useCreateProjectModal } from '@console/shared/src/hooks/useCreateProjectModal';\n\nconst getDisplayName = (obj) =>\n  _.get(obj, ['metadata', 'annotations', 'openshift.io/display-name']);\n\n// KKD CHECK TO SEE THAT ITEMS CHANGE WHEN LANGUAGE CHANGES\nconst getFilters = () => [\n  {\n    filterGroupName: i18next.t('public~Requester'),\n    type: 'requester',\n    reducer: (namespace) => {\n      const name = namespace.metadata?.name;\n      const requester = namespace.metadata?.annotations?.['openshift.io/requester'];\n      if (isCurrentUser(requester)) {\n        return REQUESTER_FILTER.ME;\n      }\n      if (isOtherUser(requester, name)) {\n        return REQUESTER_FILTER.USER;\n      }\n      if (isSystemNamespace({ title: name })) {\n        return REQUESTER_FILTER.SYSTEM;\n      }\n    },\n    items: [\n      { id: REQUESTER_FILTER.ME, title: i18next.t('public~Me') },\n      { id: REQUESTER_FILTER.USER, title: i18next.t('public~User') },\n      { id: REQUESTER_FILTER.SYSTEM, title: i18next.t('public~System'), hideIfEmpty: true },\n    ],\n  },\n];\n\nexport const deleteModal = (kind, ns) => {\n  const { labelKey, labelKind, weight, accessReview } = Kebab.factory.Delete(kind, ns);\n  let callback = undefined;\n  let tooltip;\n  let label;\n\n  if (ns.metadata.name === 'default') {\n    tooltip = `${kind.label} default cannot be deleted`;\n  } else if (ns.status?.phase === 'Terminating') {\n    tooltip = `${kind.label} is already terminating`;\n  } else {\n    callback = () => deleteNamespaceModal({ kind, resource: ns });\n  }\n  if (tooltip) {\n    label = (\n      <div className=\"dropdown__disabled\">\n        <Tooltip content={tooltip}>\n          <span>{i18next.t(labelKey, labelKind)}</span>\n        </Tooltip>\n      </div>\n    );\n  }\n  return { label, labelKey, labelKind, weight, callback, accessReview };\n};\n\nconst nsMenuActions = [\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  Kebab.factory.Edit,\n  deleteModal,\n];\n\nconst fetchNamespaceMetrics = () => {\n  const metrics = [\n    {\n      key: 'memory',\n      query: 'sum by(namespace) (container_memory_working_set_bytes{container=\"\",pod!=\"\"})',\n    },\n    {\n      key: 'cpu',\n      query: 'namespace:container_cpu_usage:sum',\n    },\n  ];\n  const promises = metrics.map(({ key, query }) => {\n    const url = `${PROMETHEUS_BASE_PATH}/api/v1/query?&query=${query}`;\n    return coFetchJSON(url).then(({ data: { result } }) => {\n      return result.reduce((acc, data) => {\n        const value = Number(data.value[1]);\n        return _.set(acc, [key, data.metric.namespace], value);\n      }, {});\n    });\n  });\n  return (\n    Promise.all(promises)\n      .then((data) => _.assign({}, ...data))\n      // eslint-disable-next-line no-console\n      .catch(console.error)\n  );\n};\n\nconst namespaceColumnInfo = Object.freeze({\n  name: {\n    classes: '',\n    id: 'name',\n  },\n  displayName: {\n    classes: 'co-break-word',\n    id: 'displayName',\n  },\n  status: {\n    classes: '',\n    id: 'status',\n  },\n  requester: {\n    classes: '',\n    id: 'requester',\n  },\n  memory: {\n    classes: '',\n    id: 'memory',\n  },\n  cpu: {\n    classes: '',\n    id: 'cpu',\n  },\n  created: {\n    classes: '',\n    id: 'created',\n  },\n  description: {\n    classes: '',\n    id: 'description',\n  },\n  labels: {\n    classes: '',\n    id: 'labels',\n  },\n});\n\nconst NamespacesTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    {\n      title: i18next.t('public~Memory'),\n      id: namespaceColumnInfo.memory.id,\n      sortFunc: 'namespaceMemory',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.memory.classes },\n    },\n    {\n      title: i18next.t('public~CPU'),\n      id: namespaceColumnInfo.cpu.id,\n      sortFunc: 'namespaceCPU',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.cpu.classes },\n    },\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    { title: '', props: { className: Kebab.columnClass } },\n  ];\n};\nNamespacesTableHeader.displayName = 'NamespacesTableHeader';\n\nconst NamespacesColumnManagementID = referenceForModel(NamespaceModel);\n\nconst getNamespacesSelectedColumns = () => {\n  return new Set(\n    NamespacesTableHeader().reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst NamespacesTableRow = ({ obj: ns, customData: { tableColumns } }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(ns);\n  const requester = getRequester(ns);\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(ns);\n  const labels = ns.metadata.labels;\n  const columns = tableColumns?.length > 0 ? new Set(tableColumns) : getNamespacesSelectedColumns();\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        <ResourceLink kind=\"Namespace\" name={ns.metadata.name} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(ns) || <span className=\"text-muted\">{t('public~No display name')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.status.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={ns.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.memory.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.memory.id}\n      >\n        {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.cpu.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.cpu.id}\n      >\n        {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={ns.metadata.creationTimestamp} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.description.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.description.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.labels.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.labels.id}\n      >\n        <LabelList kind=\"Namespace\" labels={labels} />\n      </TableData>\n      <TableData className={Kebab.columnClass}>\n        <ResourceKebab actions={nsMenuActions} kind=\"Namespace\" resource={ns} />\n      </TableData>\n    </>\n  );\n};\n\nconst NamespacesNotFoundMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No Namespaces found')} Icon={SearchIcon}>\n      {t('public~No results were found for the requested Namespaces.')}\n    </ConsoleEmptyState>\n  );\n};\n\nconst NamespacesEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Namespaces')} Icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const NamespacesList = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    const updateMetrics = () =>\n      fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n    updateMetrics();\n    const id = setInterval(updateMetrics, 30 * 1000);\n    return () => clearInterval(id);\n  }, [dispatch]);\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : null;\n\n  const customData = React.useMemo(\n    () => ({\n      tableColumns: tableColumns?.[NamespacesColumnManagementID],\n    }),\n    [tableColumns],\n  );\n\n  return (\n    <Table\n      {...props}\n      activeColumns={selectedColumns}\n      columnManagementID={NamespacesColumnManagementID}\n      aria-label={t('public~Namespaces')}\n      Header={NamespacesTableHeader}\n      Row={NamespacesTableRow}\n      customData={customData}\n      virtualize\n      EmptyMsg={NamespacesEmptyMessage}\n      NoDataEmptyMsg={NamespacesNotFoundMessage}\n    />\n  );\n};\n\nexport const NamespacesPage = (props) => {\n  const { t } = useTranslation();\n  const createNamespaceModal = useCreateNamespaceModal();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : getNamespacesSelectedColumns();\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={NamespacesList}\n      canCreate={true}\n      createHandler={() => createNamespaceModal()}\n      columnLayout={{\n        columns: NamespacesTableHeader(null, t).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: NamespacesColumnManagementID,\n        selectedColumns,\n        type: t('public~Namespaces'),\n      }}\n    />\n  );\n};\n\nexport const projectMenuActions = [Kebab.factory.Edit, deleteModal];\n\nconst projectColumnManagementID = referenceForModel(ProjectModel);\n\nconst projectTableHeader = ({ showMetrics, showActions }) => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    ...(showMetrics\n      ? [\n          {\n            title: i18next.t('public~Memory'),\n            id: namespaceColumnInfo.memory.id,\n            sortFunc: 'namespaceMemory',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.memory.classes },\n          },\n          {\n            title: i18next.t('public~CPU'),\n            id: namespaceColumnInfo.cpu.id,\n            sortFunc: 'namespaceCPU',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.cpu.classes },\n          },\n        ]\n      : []),\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    ...(showActions ? [{ title: '', props: { className: Kebab.columnClass } }] : []),\n  ];\n};\n\nconst getProjectSelectedColumns = ({ showMetrics, showActions }) => {\n  return new Set(\n    projectTableHeader({ showMetrics, showActions }).reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst ProjectLink = ({ project }) => {\n  const dispatch = useDispatch();\n  const [, setLastNamespace] = useUserSettingsCompatibility(\n    LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n    LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  );\n  const url = new URL(window.location.href);\n  const params = new URLSearchParams(url.search);\n  const basePath = url.pathname;\n  if (params.has('project-name')) {\n    // clear project-name query param from the url\n    params.delete('project-name');\n  }\n  const newUrl = {\n    search: `?${params.toString()}`,\n    hash: url.hash,\n  };\n  const namespacedPath = UIActions.formatNamespaceRoute(project.metadata.name, basePath, newUrl);\n\n  const handleClick = (e) => {\n    // Don't set last namespace if its modified click (Ctrl+Click).\n    if (isModifiedEvent(e)) {\n      return;\n    }\n    setLastNamespace(project.metadata.name);\n    // update last namespace in session storage (persisted only for current browser tab). Used to remember/restore if\n    // \"All Projects\" was selected when returning to the list view (typically from details view) via breadcrumb or\n    // sidebar navigation\n    sessionStorage.setItem(LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY, project.metadata.name);\n    // clear project-name filter when active namespace is changed\n    dispatch(k8sActions.filterList(referenceForModel(ProjectModel), 'project-name', ''));\n  };\n\n  return (\n    <span className=\"co-resource-item co-resource-item--truncate\">\n      <ResourceIcon kind=\"Project\" />\n      <Link to={namespacedPath} className=\"co-resource-item__resource-name\" onClick={handleClick}>\n        {project.metadata.name}\n      </Link>\n    </span>\n  );\n};\nconst projectHeaderWithoutActions = () =>\n  projectTableHeader({ showMetrics: false, showActions: false });\n\nconst ProjectTableRow = ({ obj: project, customData = {} }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(project);\n  const requester = getRequester(project);\n  const {\n    ProjectLinkComponent,\n    actionsEnabled = true,\n    showMetrics,\n    showActions,\n    isColumnManagementEnabled = true,\n    tableColumns,\n  } = customData;\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(project);\n  const labels = project.metadata.labels;\n  const columns = isColumnManagementEnabled\n    ? tableColumns?.length > 0\n      ? new Set(tableColumns)\n      : getProjectSelectedColumns({ showMetrics, showActions })\n    : null;\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        {customData && ProjectLinkComponent ? (\n          <ProjectLinkComponent project={project} />\n        ) : (\n          <span className=\"co-resource-item\">\n            <ResourceLink kind=\"Project\" name={project.metadata.name} />\n          </span>\n        )}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(project) || (\n            <span className=\"text-muted\">{t('public~No display name')}</span>\n          )}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.status.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={project.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      {showMetrics && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.memory.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.memory.id}\n          >\n            {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.cpu.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.cpu.id}\n          >\n            {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n          </TableData>\n        </>\n      )}\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={project.metadata.creationTimestamp} />\n      </TableData>\n      {isColumnManagementEnabled && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.description.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.description.id}\n          >\n            <span className=\"co-break-word co-line-clamp\">\n              {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n            </span>\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.labels.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.labels.id}\n          >\n            <LabelList labels={labels} kind=\"Project\" />\n          </TableData>\n        </>\n      )}\n      {actionsEnabled && (\n        <TableData className={Kebab.columnClass}>\n          <ResourceKebab actions={projectMenuActions} kind=\"Project\" resource={project} />\n        </TableData>\n      )}\n    </>\n  );\n};\nProjectTableRow.displayName = 'ProjectTableRow';\n\nexport const ProjectsTable = (props) => {\n  const { t } = useTranslation();\n  const customData = React.useMemo(\n    () => ({\n      ProjectLinkComponent: ProjectLink,\n      actionsEnabled: false,\n      isColumnManagementEnabled: false,\n    }),\n    [],\n  );\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Projects')}\n      Header={projectHeaderWithoutActions}\n      Row={ProjectTableRow}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nconst headerWithMetrics = () => projectTableHeader({ showMetrics: true, showActions: true });\nconst headerNoMetrics = () => projectTableHeader({ showMetrics: false, showActions: true });\n\nconst ProjectNotFoundMessage = () => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const canCreate = canCreateNs || canCreateProject;\n  return (\n    <ConsoleEmptyState title={t('public~Welcome to OpenShift')}>\n      <OpenShiftGettingStarted canCreate={canCreate} />\n    </ConsoleEmptyState>\n  );\n};\n\nconst ProjectEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Projects')} icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const ProjectList = ({ data, ...tableProps }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const customData = React.useMemo(\n    () => ({\n      showMetrics,\n      tableColumns: tableColumns?.[projectColumnManagementID],\n    }),\n    [showMetrics, tableColumns],\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    if (showMetrics) {\n      const updateMetrics = () =>\n        fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n      updateMetrics();\n      const id = setInterval(updateMetrics, 30 * 1000);\n      return () => clearInterval(id);\n    }\n  }, [dispatch, showMetrics]);\n  const selectedColumns =\n    tableColumns?.[projectColumnManagementID]?.length > 0\n      ? new Set(tableColumns[projectColumnManagementID])\n      : null;\n\n  // Don't render the table until we know whether we can get metrics. It's\n  // not possible to change the table headers once the component is mounted.\n  if (flagPending(canGetNS)) {\n    return null;\n  }\n\n  return (\n    <Table\n      {...tableProps}\n      activeColumns={selectedColumns}\n      columnManagementID={projectColumnManagementID}\n      aria-label={t('public~Projects')}\n      data={data}\n      Header={showMetrics ? headerWithMetrics : headerNoMetrics}\n      Row={ProjectTableRow}\n      NoDataEmptyMsg={ProjectNotFoundMessage}\n      EmptyMsg={ProjectEmptyMessage}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nexport const ProjectsPage = (props) => {\n  const { t } = useTranslation();\n  const createProjectModal = useCreateProjectModal();\n  // Skip self-subject access review for projects since they use a special project request API.\n  // `FLAGS.CAN_CREATE_PROJECT` determines if the user can create projects.\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const showActions = showMetrics;\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={ProjectList}\n      canCreate={canCreateProject}\n      createHandler={() => createProjectModal()}\n      filterLabel={t('public~by name or display name')}\n      skipAccessReview\n      textFilter=\"project-name\"\n      kind=\"Project\"\n      columnLayout={{\n        columns: projectTableHeader({ showMetrics, showActions }).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: projectColumnManagementID,\n        selectedColumns:\n          tableColumns?.[projectColumnManagementID]?.length > 0\n            ? new Set(tableColumns[projectColumnManagementID])\n            : null,\n        type: t('public~Project'),\n      }}\n    />\n  );\n};\n\n/** @type {React.SFC<{namespace: K8sResourceKind}>} */\nexport const PullSecret = (props) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [error, setError] = React.useState(false);\n  const { t } = useTranslation();\n  const { namespace, canViewSecrets } = props;\n\n  React.useEffect(() => {\n    k8sGet(ServiceAccountModel, 'default', namespace.metadata.name, {})\n      .then((serviceAccount) => {\n        setIsLoading(false);\n        setData(serviceAccount.imagePullSecrets ?? []);\n        setError(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setData([]);\n        setError(true);\n        // eslint-disable-next-line no-console\n        console.error('Error getting default ServiceAccount', err);\n      });\n  }, [namespace.metadata.name]);\n\n  const modal = () => configureNamespacePullSecretModal({ namespace, pullSecret: undefined });\n\n  const secrets = () => {\n    if (error) {\n      return <Alert variant=\"danger\" isInline title={t('Error loading default pull Secrets')} />;\n    }\n    return data.length > 0 ? (\n      data.map((secret) => (\n        <div key={secret.name}>\n          <ResourceLink\n            kind=\"Secret\"\n            name={secret.name}\n            namespace={namespace.metadata.name}\n            linkTo={canViewSecrets}\n          />\n        </div>\n      ))\n    ) : (\n      <Button variant=\"link\" type=\"button\" isInline onClick={modal}>\n        {t('public~Not configured')}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <dt>{t('public~Default pull Secret', { count: data.length })}</dt>\n      <dd>{isLoading ? <LoadingInline /> : secrets()}</dd>\n    </>\n  );\n};\n\nexport const NamespaceLineCharts = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~CPU usage')}\n          humanize={humanizeCpuCores}\n          namespace={ns.metadata.name}\n          query={`namespace:container_cpu_usage:sum{namespace='${ns.metadata.name}'}`}\n        />\n      </div>\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~Memory usage')}\n          humanize={humanizeBinaryBytes}\n          byteDataType={ByteDataTypes.BinaryBytes}\n          namespace={ns.metadata.name}\n          query={`sum by(namespace) (container_memory_working_set_bytes{namespace=\"${ns.metadata.name}\",container=\"\",pod!=\"\"})`}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const TopPodsBarChart = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <Bar\n      title={t('public~Memory usage by pod (top 10)')}\n      namespace={ns.metadata.name}\n      query={`sort_desc(topk(10, sum by (pod)(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace=\"${ns.metadata.name}\"})))`}\n      humanize={humanizeBinaryBytes}\n      metric=\"pod\"\n    />\n  );\n};\n\nconst ResourceUsage = ({ ns }) => {\n  const { t } = useTranslation();\n  const isPrometheusAvailable = usePrometheusGate();\n  return isPrometheusAvailable ? (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('public~Resource usage')} />\n      <NamespaceLineCharts ns={ns} />\n      <TopPodsBarChart ns={ns} />\n    </div>\n  ) : null;\n};\n\nexport const NamespaceSummary = ({ ns }) => {\n  const { t } = useTranslation();\n  const displayName = getDisplayName(ns);\n  const description = getDescription(ns);\n  const requester = getRequester(ns);\n  const serviceMeshEnabled = ns.metadata?.labels?.['maistra.io/member-of'];\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    verb: 'patch',\n    namespace: ns.metadata.name,\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-xs-12\">\n        {/* Labels aren't editable on kind Project, only Namespace. */}\n        <ResourceSummary resource={ns} showLabelEditor={ns.kind === 'Namespace'}>\n          <dt>{t('public~Display name')}</dt>\n          <dd\n            className={classNames({\n              'text-muted': !displayName,\n            })}\n          >\n            {displayName || t('public~No display name')}\n          </dd>\n          <dt>{t('public~Description')}</dt>\n          <dd>\n            <p\n              className={classNames({\n                'text-muted': !description,\n                'co-pre-wrap': description,\n                'co-namespace-summary__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </p>\n          </dd>\n          {requester && <dt>Requester</dt>}\n          {requester && <dd>{requester}</dd>}\n        </ResourceSummary>\n      </div>\n      <div className=\"col-sm-6 col-xs-12\">\n        <dl className=\"co-m-pane__details\">\n          <DetailsItem label={t('public~Status')} obj={ns} path=\"status.phase\">\n            <Status status={ns.status?.phase} />\n          </DetailsItem>\n          <PullSecret namespace={ns} canViewSecrets={canListSecrets} />\n          <dt>{t('public~NetworkPolicies')}</dt>\n          <dd>\n            <Link to={`/k8s/ns/${ns.metadata.name}/networkpolicies`}>\n              {t('public~NetworkPolicies')}\n            </Link>\n          </dd>\n          {serviceMeshEnabled && (\n            <>\n              <dt>{t('public~Service mesh')}</dt>\n              <dd>\n                <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n              </dd>\n            </>\n          )}\n        </dl>\n      </div>\n    </div>\n  );\n};\n\nexport const NamespaceDetails = ({ obj: ns, customData }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const links = getNamespaceDashboardConsoleLinks(ns, consoleLinks);\n  return (\n    <div>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project details')}</title>\n        </Helmet>\n      )}\n      <div className=\"co-m-pane__body\">\n        {!customData?.hideHeading && (\n          <SectionHeading text={t('public~{{kind}} details', { kind: ns.kind })} />\n        )}\n        <NamespaceSummary ns={ns} />\n      </div>\n      {ns.kind === 'Namespace' && <ResourceUsage ns={ns} />}\n      {!_.isEmpty(links) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Launcher')} />\n          <ul className=\"pf-v5-c-list pf-m-plain\">\n            {_.map(_.sortBy(links, 'spec.text'), (link) => {\n              return (\n                <li key={link.metadata.uid}>\n                  <ExternalLink href={link.spec.href} text={link.spec.text} />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst RolesPage = ({ obj: { metadata } }) => {\n  return (\n    <RoleBindingsPage\n      createPath={`/k8s/ns/${metadata.name}/rolebindings/~new`}\n      namespace={metadata.name}\n      showTitle={false}\n    />\n  );\n};\n\nexport const NamespacesDetailsPage = (props) => (\n  <DetailsPage\n    {...props}\n    menuActions={nsMenuActions}\n    pages={[\n      navFactory.details(NamespaceDetails),\n      navFactory.editYaml(),\n      navFactory.roles(RolesPage),\n    ]}\n  />\n);\n\nexport const ProjectsDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={projectMenuActions}\n      pages={[\n        {\n          href: '',\n          // t('public~Overview')\n          nameKey: 'public~Overview',\n          component: ProjectDashboard,\n        },\n        {\n          href: 'details',\n          // t('public~Details')\n          nameKey: 'public~Details',\n          component: NamespaceDetails,\n        },\n        navFactory.editYaml(),\n        navFactory.workloads(OverviewListPage),\n        navFactory.roles(RolesPage),\n      ]}\n    />\n  );\n};\n","import { nodeStatus } from '@console/app/src/status/node';\nimport { volumeSnapshotStatus } from '@console/app/src/status/snapshot';\nimport { podPhaseFilterReducer } from '@console/internal/module/k8s';\nimport { StatusGroupMapper } from './InventoryItem';\nimport { InventoryStatusGroup } from './status-group';\n\nconst POD_PHASE_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Running', 'Succeeded'],\n  [InventoryStatusGroup.ERROR]: ['CrashLoopBackOff', 'Failed'],\n  [InventoryStatusGroup.PROGRESS]: ['Terminating', 'Pending'],\n  [InventoryStatusGroup.WARN]: ['Unknown'],\n};\n\nconst PVC_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Bound'],\n  [InventoryStatusGroup.ERROR]: ['Lost'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n};\n\nconst PV_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Available', 'Bound'],\n  [InventoryStatusGroup.PROGRESS]: ['Released'],\n  [InventoryStatusGroup.ERROR]: ['Failed'],\n};\n\nconst NODE_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Not Ready'],\n};\n\nconst VS_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n  [InventoryStatusGroup.ERROR]: ['Error'],\n};\n\nexport const getStatusGroups = (resources, mapping, mapper, filterType) => {\n  const groups = {\n    [InventoryStatusGroup.UNKNOWN]: {\n      statusIDs: [],\n      count: 0,\n    },\n  };\n  Object.keys(mapping).forEach((key) => {\n    groups[key] = {\n      statusIDs: [...mapping[key]],\n      count: 0,\n      filterType,\n    };\n  });\n\n  resources.forEach((resource) => {\n    const status = mapper(resource);\n    const group =\n      Object.keys(mapping).find((key) => mapping[key].includes(status)) ||\n      InventoryStatusGroup.UNKNOWN;\n    groups[group].count++;\n  });\n\n  return groups;\n};\n\nexport const getPodStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, POD_PHASE_GROUP_MAPPING, podPhaseFilterReducer, 'pod-status');\nexport const getNodeStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, NODE_STATUS_GROUP_MAPPING, nodeStatus, 'node-status');\nexport const getPVCStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PVC_STATUS_GROUP_MAPPING, (pvc) => pvc.status.phase, 'pvc-status');\nexport const getPVStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PV_STATUS_GROUP_MAPPING, (pv) => pv.status.phase, 'pv-status');\nexport const getVSStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, VS_STATUS_GROUP_MAPPING, volumeSnapshotStatus, 'snapshot-status');\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport * as PropTypes from 'prop-types';\n\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { PromiseComponent } from '../utils';\n\nclass ConfirmModal extends PromiseComponent {\n  constructor(props) {\n    super(props);\n    this._submit = this._submit.bind(this);\n    this._cancel = this.props.cancel.bind(this);\n  }\n\n  _submit(event) {\n    event.preventDefault();\n\n    this.handlePromise(\n      this.props.executeFn(null, {\n        supressNotifications: true,\n      }),\n    ).then(this.props.close);\n  }\n\n  render() {\n    const {\n      title,\n      titleKey,\n      message,\n      messageKey,\n      btnText,\n      btnTextKey,\n      cancelText,\n      cancelTextKey,\n      submitDanger,\n    } = this.props;\n\n    return (\n      <Translation>\n        {(t) => (\n          <form onSubmit={this._submit} name=\"form\" className=\"modal-content\">\n            <ModalTitle>{titleKey ? t(titleKey) : title}</ModalTitle>\n            <ModalBody>{messageKey ? t(messageKey) : message}</ModalBody>\n            <ModalSubmitFooter\n              errorMessage={this.state.errorMessage}\n              inProgress={this.state.inProgress}\n              submitText={btnTextKey ? t(btnTextKey) : btnText || t('Confirm')}\n              cancel={this._cancel}\n              cancelText={cancelTextKey ? t(cancelTextKey) : cancelText || t('Cancel')}\n              submitDanger={submitDanger}\n            />\n          </form>\n        )}\n      </Translation>\n    );\n  }\n}\nConfirmModal.propTypes = {\n  btnText: PropTypes.node,\n  btnTextKey: PropTypes.string,\n  cancel: PropTypes.func.isRequired,\n  cancelText: PropTypes.node,\n  cancelTextKey: PropTypes.string,\n  close: PropTypes.func.isRequired,\n  executeFn: PropTypes.func.isRequired,\n  message: PropTypes.node,\n  messageKey: PropTypes.string,\n  title: PropTypes.node,\n  titleKey: PropTypes.string,\n  submitDanger: PropTypes.bool,\n};\n\nexport const confirmModal = createModalLauncher(ConfirmModal);\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../module/k8s';\n\nexport const ProjectDashboardContext = React.createContext<ProjectDashboardContext>({});\n\n// eslint-disable-next-line no-redeclare\ntype ProjectDashboardContext = {\n  obj?: K8sResourceKind;\n  namespaceLinks?: K8sResourceKind[];\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\n\nimport { RESULTS_TYPE } from '../../reducers/dashboards';\nimport { NotificationAlerts } from '../../reducers/observe';\nimport {\n  StopWatchPrometheusAction,\n  stopWatchPrometheusQuery,\n  stopWatchURL,\n  StopWatchURLAction,\n  watchPrometheusQuery,\n  WatchPrometheusQueryAction,\n  watchURL,\n  WatchURLAction,\n  getQueryKey,\n} from '../../actions/dashboards';\nimport { RootState } from '../../redux';\nimport { Firehose, FirehoseResource, FirehoseResult } from '../utils';\nimport { K8sResourceKind, AppliedClusterResourceQuotaKind } from '../../module/k8s';\nimport { PrometheusResponse } from '../graphs';\nimport { Fetch, RequestMap } from '@console/dynamic-plugin-sdk/src/api/internal-types';\n\nconst mapDispatchToProps: DispatchToProps = (dispatch) => ({\n  watchURL: (url, fetch) => dispatch(watchURL(url, fetch)),\n  stopWatchURL: (url) => dispatch(stopWatchURL(url)),\n  watchPrometheusQuery: (query, namespace, timespan) =>\n    dispatch(watchPrometheusQuery(query, namespace, timespan)),\n  stopWatchPrometheusQuery: (query, timespan) =>\n    dispatch(stopWatchPrometheusQuery(query, timespan)),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  [RESULTS_TYPE.URL]: state.dashboards.get(RESULTS_TYPE.URL),\n  [RESULTS_TYPE.PROMETHEUS]: state.dashboards.get(RESULTS_TYPE.PROMETHEUS) as RequestMap<\n    PrometheusResponse\n  >,\n  notificationAlerts: state.observe.get('notificationAlerts'),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nexport const withDashboardResources = <P extends DashboardItemProps>(\n  WrappedComponent: React.ComponentType<P>,\n) =>\n  connect<StateProps, DispatchProps, Diff<P, DashboardItemProps>>(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(\n    class WithDashboardResources extends React.Component<\n      WithDashboardResourcesProps,\n      WithDashboardResourcesState\n    > {\n      private urls: Array<string> = [];\n      private queries: Array<string> = [];\n      private watchingAlerts: boolean = false;\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          k8sResources: [],\n        };\n      }\n\n      shouldComponentUpdate(\n        nextProps: WithDashboardResourcesProps,\n        nextState: WithDashboardResourcesState,\n      ) {\n        const urlResultChanged = this.urls.some(\n          (urlKey) =>\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'data']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'data']) ||\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']),\n        );\n        const queryResultChanged = this.queries.some(\n          (query) =>\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) ||\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']),\n        );\n        const alertsResultChanged =\n          this.props?.notificationAlerts?.data !== nextProps?.notificationAlerts?.data ||\n          this.props?.notificationAlerts?.loadError !== nextProps?.notificationAlerts?.loadError;\n        const k8sResourcesChanged = this.state.k8sResources !== nextState.k8sResources;\n\n        const nextExternalProps = this.getExternalProps(nextProps);\n        const externalProps = this.getExternalProps(this.props);\n\n        return (\n          urlResultChanged ||\n          queryResultChanged ||\n          k8sResourcesChanged ||\n          (this.watchingAlerts && alertsResultChanged) ||\n          Object.keys(nextExternalProps).length !== Object.keys(externalProps).length ||\n          Object.keys(nextExternalProps).some(\n            (key) => nextExternalProps[key] !== externalProps[key],\n          )\n        );\n      }\n\n      watchURL: WatchURL = (url, fetch) => {\n        this.urls.push(url);\n        this.props.watchURL(url, fetch);\n      };\n\n      watchPrometheus: WatchPrometheus = (query, namespace, timespan) => {\n        this.queries.push(getQueryKey(query, timespan));\n        this.props.watchPrometheusQuery(query, namespace, timespan);\n      };\n\n      stopWatchPrometheusQuery: StopWatchPrometheus = (query, timespan) => {\n        const queryKey = getQueryKey(query, timespan);\n        this.queries = this.queries.filter((q) => q !== queryKey);\n        this.props.stopWatchPrometheusQuery(query, timespan);\n      };\n\n      watchAlerts: WatchAlerts = () => {\n        this.watchingAlerts = true;\n      };\n\n      stopWatchAlerts: StopWatchAlerts = () => {\n        this.watchingAlerts = false;\n      };\n\n      watchK8sResource: WatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: [...state.k8sResources, { ...resource, optional: true }],\n        }));\n      };\n\n      stopWatchK8sResource: StopWatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: state.k8sResources.filter((r) => r.prop !== resource.prop),\n        }));\n      };\n\n      getExternalProps = (props) => {\n        return _.omit(\n          props,\n          'watchURL',\n          'stopWatchURL',\n          'watchPrometheusQuery',\n          'stopWatchPrometheusQuery',\n          'watchAlerts',\n          'stopWatchAlerts',\n          RESULTS_TYPE.URL,\n          RESULTS_TYPE.PROMETHEUS,\n          'notificationAlerts',\n        );\n      };\n\n      render() {\n        return (\n          <Firehose resources={this.state.k8sResources}>\n            <WrappedComponent\n              watchURL={this.watchURL}\n              stopWatchURL={this.props.stopWatchURL}\n              watchPrometheus={this.watchPrometheus}\n              stopWatchPrometheusQuery={this.stopWatchPrometheusQuery}\n              watchAlerts={this.watchAlerts}\n              stopWatchAlerts={this.stopWatchAlerts}\n              urlResults={this.props[RESULTS_TYPE.URL]}\n              prometheusResults={this.props[RESULTS_TYPE.PROMETHEUS]}\n              notificationAlerts={this.props.notificationAlerts}\n              watchK8sResource={this.watchK8sResource}\n              stopWatchK8sResource={this.stopWatchK8sResource}\n              {...this.getExternalProps(this.props)}\n            />\n          </Firehose>\n        );\n      }\n    },\n  );\n\ntype DispatchToProps = (\n  dispatch: any,\n) => {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheusQuery: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n};\n\ntype WatchURL = (url: string, fetch?: Fetch) => void;\ntype StopWatchURL = (url: string) => void;\ntype WatchPrometheus = (query: string, namespace?: string, timespan?: number) => void;\ntype StopWatchPrometheus = (query: string, timespan?: number) => void;\ntype WatchAlerts = () => void;\ntype StopWatchAlerts = () => void;\n\ntype WithDashboardResourcesState = {\n  k8sResources: FirehoseResource[];\n};\n\ntype WithDashboardResourcesProps = {\n  watchURL: WatchURLAction;\n  watchPrometheusQuery: WatchPrometheusQueryAction;\n  stopWatchURL: StopWatchURLAction;\n  stopWatchPrometheusQuery: StopWatchPrometheusAction;\n  [RESULTS_TYPE.PROMETHEUS]: RequestMap<PrometheusResponse>;\n  [RESULTS_TYPE.URL]: RequestMap<any>;\n  notificationAlerts: any;\n};\n\nexport type WatchK8sResource = (resource: FirehoseResource) => void;\nexport type StopWatchK8sResource = (resource: FirehoseResource) => void;\n\nexport type DashboardItemProps = {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheus: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n  watchAlerts: WatchAlerts;\n  stopWatchAlerts: StopWatchAlerts;\n  urlResults: RequestMap<any>;\n  prometheusResults: RequestMap<PrometheusResponse>;\n  notificationAlerts: NotificationAlerts;\n  watchK8sResource: WatchK8sResource;\n  stopWatchK8sResource: StopWatchK8sResource;\n  resources?: {\n    [key: string]:\n      | FirehoseResult\n      | FirehoseResult<K8sResourceKind>\n      | FirehoseResult<AppliedClusterResourceQuotaKind>;\n  };\n};\n","import { convertToBaseValue, humanizePercentage } from '@console/internal/components/utils';\n\nconst genericCountResources = [\n  'configmaps',\n  'persistentvolumeclaims',\n  'pods',\n  'replicationcontrollers',\n  'resourcequotas',\n  'services',\n  'services.loadbalancers',\n  'services.nodeports',\n  'secrets',\n  'openshift.io/imagestreams',\n];\n\nexport const getUsedPercentage = (hard: string, used: string) => {\n  let usedNum = convertToBaseValue(used);\n  let hardNum = convertToBaseValue(hard);\n\n  if (!usedNum || !hardNum) {\n    // try to get the value without unit\n    usedNum = parseInt(usedNum, 10);\n    hardNum = parseInt(hardNum, 10);\n  }\n\n  return !usedNum || !hardNum ? 0 : (usedNum / hardNum) * 100;\n};\n\nexport const getLabelAndUsage = ({\n  resourceName,\n  used,\n  hard,\n}: {\n  resourceName: string;\n  used: string;\n  hard: string;\n}) => {\n  const useCount =\n    resourceName.startsWith('count/') || genericCountResources.includes(resourceName);\n\n  const percent = getUsedPercentage(hard, used);\n\n  return {\n    label: useCount ? `${used || 0} of ${hard}` : humanizePercentage(percent).string,\n    percent,\n  };\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { FirehoseResource } from '../../../utils';\n\nexport const uniqueResource = (\n  resource: FirehoseResource,\n  prefix: string | number,\n): FirehoseResource => ({\n  ...resource,\n  prop: `${prefix}-${resource.prop}`,\n});\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useActivePerspective, LIMIT_STATE, Humanize } from '@console/dynamic-plugin-sdk';\nimport { getPrometheusQueryResponse } from '@console/internal/actions/dashboards';\nimport {\n  withDashboardResources,\n  DashboardItemProps,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, referenceForModel, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getName, getNamespace, useFlag } from '../../..';\nimport { FLAGS } from '../../../constants';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status';\nimport Status from '../status-card/StatusPopup';\n\nimport './top-consumer-popover.scss';\n\nconst ConsumerPopover: React.FC<ConsumerPopoverProps> = React.memo(\n  ({\n    current,\n    title,\n    humanize,\n    consumers,\n    namespace,\n    position = PopoverPosition.top,\n    description,\n    children,\n  }) => {\n    const { t } = useTranslation();\n    const [isOpen, setOpen] = React.useState(false);\n    const onShow = React.useCallback(() => setOpen(true), []);\n    const onHide = React.useCallback(() => setOpen(false), []);\n    if (!current) {\n      return null;\n    }\n    return (\n      <Popover\n        position={position}\n        headerContent={t('console-shared~{{title}} breakdown', { title })}\n        bodyContent={\n          <PopoverBody\n            humanize={humanize}\n            consumers={consumers}\n            namespace={namespace}\n            isOpen={isOpen}\n            description={description}\n          >\n            {children}\n          </PopoverBody>\n        }\n        enableFlip\n        onShow={onShow}\n        onHide={onHide}\n        maxWidth=\"21rem\"\n      >\n        <Button variant=\"link\" isInline>\n          {current}\n        </Button>\n      </Popover>\n    );\n  },\n);\n\nexport default ConsumerPopover;\n\nconst getLimitIcon = (state: LIMIT_STATE): React.ReactNode => {\n  switch (state) {\n    case LIMIT_STATE.ERROR:\n      return <RedExclamationCircleIcon />;\n    case LIMIT_STATE.WARN:\n      return <YellowExclamationTriangleIcon />;\n    default:\n      return null;\n  }\n};\n\nconst getResourceToWatch = (model: K8sKind, namespace: string, fieldSelector: string) => ({\n  isList: true,\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  fieldSelector,\n  namespace,\n});\n\nexport const LimitsBody: React.FC<LimitsBodyProps> = ({\n  limitState,\n  requestedState,\n  total,\n  limit,\n  current,\n  available,\n  requested,\n}) => {\n  const { t } = useTranslation();\n  return (\n    ((!!limitState && limitState !== LIMIT_STATE.OK) ||\n      (!!requestedState && requestedState !== LIMIT_STATE.OK)) && (\n      <ul className=\"co-utilization-card-popover__consumer-list\">\n        <Status value={total}>{t('console-shared~Total capacity')}</Status>\n        <Status value={limit} icon={getLimitIcon(limitState)}>\n          {t('console-shared~Total limit')}\n        </Status>\n        <Status value={current}>{t('console-shared~Current utilization')}</Status>\n        <Status value={available}>{t('console-shared~Current available capacity')}</Status>\n        <Status value={requested} icon={getLimitIcon(requestedState)}>\n          {t('console-shared~Total requested')}\n        </Status>\n      </ul>\n    )\n  );\n};\n\nexport const PopoverBody = withDashboardResources<DashboardItemProps & PopoverBodyProps>(\n  React.memo(\n    ({\n      humanize,\n      consumers,\n      namespace,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      prometheusResults,\n      isOpen,\n      description,\n      children,\n    }) => {\n      const { t } = useTranslation();\n      const [currentConsumer, setCurrentConsumer] = React.useState(consumers[0]);\n      const activePerspective = useActivePerspective()[0];\n      const canAccessMonitoring =\n        useFlag(FLAGS.CAN_GET_NS) && !!window.SERVER_FLAGS.prometheusBaseURL;\n      const { query, model, metric, fieldSelector } = currentConsumer;\n      const k8sResource = React.useMemo(\n        () => (isOpen ? getResourceToWatch(model, namespace, fieldSelector) : null),\n        [fieldSelector, isOpen, model, namespace],\n      );\n      const [consumerData, consumerLoaded, consumersLoadError] = useK8sWatchResource<\n        K8sResourceCommon[]\n      >(k8sResource);\n      React.useEffect(() => {\n        if (!isOpen) {\n          return () => {};\n        }\n        watchPrometheus(query, namespace);\n        return () => {\n          stopWatchPrometheusQuery(query);\n        };\n      }, [query, stopWatchPrometheusQuery, watchPrometheus, namespace, isOpen]);\n\n      const top5Data = [];\n\n      const [data, error] = getPrometheusQueryResponse(prometheusResults, query);\n      const bodyData = getInstantVectorStats(data, metric);\n\n      if (k8sResource && consumerLoaded && !consumersLoadError) {\n        for (const d of bodyData) {\n          const consumerExists = consumerData.some(\n            (consumer) =>\n              getName(consumer) === d.metric[metric] &&\n              (model.namespaced ? getNamespace(consumer) === d.metric.namespace : true),\n          );\n          if (consumerExists) {\n            top5Data.push({ ...d, y: humanize(d.y).string });\n          }\n          if (top5Data.length === 5) {\n            break;\n          }\n        }\n      }\n\n      const monitoringParams = React.useMemo(() => {\n        const params = new URLSearchParams();\n        params.set('query0', currentConsumer.query);\n        return params;\n      }, [currentConsumer.query]);\n\n      const dropdownItems = React.useMemo(\n        () =>\n          consumers.reduce((items, curr) => {\n            items[referenceForModel(curr.model)] = t('console-shared~By {{label}}', {\n              label: curr.model.labelKey ? t(curr.model.labelKey) : curr.model.label,\n            });\n            return items;\n          }, {}),\n        [consumers, t],\n      );\n\n      const onDropdownChange = React.useCallback(\n        (key) => setCurrentConsumer(consumers.find((c) => referenceForModel(c.model) === key)),\n        [consumers],\n      );\n\n      const monitoringURL =\n        canAccessMonitoring && activePerspective === 'admin'\n          ? `/monitoring/query-browser?${monitoringParams.toString()}`\n          : `/dev-monitoring/ns/${namespace}/metrics?${monitoringParams.toString()}`;\n\n      let body: React.ReactNode;\n      if (error || consumersLoadError) {\n        body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n      } else if (!consumerLoaded || !data) {\n        body = (\n          <ul className=\"co-utilization-card-popover__consumer-list\">\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n          </ul>\n        );\n      } else {\n        body = (\n          <>\n            <ul\n              className=\"co-utilization-card-popover__consumer-list\"\n              aria-label={t('console-shared~Top consumer by {{label}}', { label: model.label })}\n            >\n              {top5Data &&\n                top5Data.map((item) => {\n                  const title = String(item.x);\n                  return (\n                    <ListItem key={title} value={item.y}>\n                      <Link\n                        className=\"co-utilization-card-popover__consumer-name\"\n                        to={resourcePathFromModel(model, title, item.metric.namespace)}\n                      >\n                        {title}\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n            </ul>\n            <Link to={monitoringURL}>{t('console-shared~View more')}</Link>\n          </>\n        );\n      }\n\n      return (\n        <div className=\"co-utilization-card-popover__body\">\n          {description && (\n            <div className=\"co-utilization-card-popover__description\">{description}</div>\n          )}\n          {children}\n          <div className=\"co-utilization-card-popover__title\">\n            {consumers.length === 1\n              ? t('console-shared~Top {{label}} consumers', {\n                  label: currentConsumer.model.label.toLowerCase(),\n                })\n              : t('console-shared~Top consumers')}\n          </div>\n          {consumers.length > 1 && (\n            <Dropdown\n              className=\"co-utilization-card-popover__dropdown\"\n              id=\"consumer-select\"\n              name=\"selectConsumerType\"\n              aria-label={t('console-shared~Select consumer type')}\n              items={dropdownItems}\n              onChange={onDropdownChange}\n              selectedKey={referenceForModel(model)}\n            />\n          )}\n          {body}\n        </div>\n      );\n    },\n  ),\n);\n\nconst ListItem: React.FC<ListItemProps> = ({ children, value }) => (\n  <li className=\"co-utilization-card-popover__consumer-item\">\n    {children}\n    <div className=\"co-utilization-card-popover__consumer-value\">{value}</div>\n  </li>\n);\n\ntype ListItemProps = {\n  value: React.ReactText;\n};\n\ntype LimitsBodyProps = {\n  limitState?: LIMIT_STATE;\n  requestedState?: LIMIT_STATE;\n  limit?: string;\n  requested?: string;\n  available?: string;\n  total?: string;\n  current: string;\n};\n\ntype PopoverProps = {\n  humanize: Humanize;\n  consumers: { model: K8sKind; query: string; metric: string; fieldSelector?: string }[];\n  namespace?: string;\n  description?: string;\n};\n\ntype PopoverBodyProps = PopoverProps & {\n  topConsumers?: DataPoint[][];\n  error?: boolean;\n  isOpen: boolean;\n};\n\nexport type ConsumerPopoverProps = PopoverProps & {\n  position?: PopoverPosition;\n  title: string;\n  current: string;\n};\n","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\nimport { useTranslation } from 'react-i18next';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport {\n  DashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem,\n  SubsystemHealth,\n  OperatorRowProps,\n  LazyLoader,\n} from '@console/plugin-sdk';\nimport {\n  ResolvedExtension,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem as DynamicDashboardsOverviewHealthResourceSubsystem,\n  WatchK8sResources,\n  WatchK8sResults,\n  ResourcesObject,\n} from '@console/dynamic-plugin-sdk';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { OperatorsSection } from '@console/shared/src/components/dashboard/status-card/OperatorStatusBody';\nimport {\n  getOperatorsHealthState,\n  getMostImportantStatuses,\n} from '@console/shared/src/components/dashboard/status-card/state-utils';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { K8sKind } from '../../../../module/k8s';\nimport { FirehoseResourcesResult, AsyncComponent, resourcePath } from '../../../utils';\nimport { useK8sWatchResources } from '../../../utils/k8s-watch-hook';\nimport { withDashboardResources, DashboardItemProps } from '../../with-dashboard-resources';\nimport { uniqueResource } from './utils';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { ClusterDashboardContext } from './context';\n\nconst OperatorRow: React.FC<\n  OperatorRowProps & {\n    LoadingComponent: () => JSX.Element;\n    Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n    key: string;\n    isResolved: boolean;\n  }\n> = ({ operatorStatus, isResolved, key, Component, LoadingComponent }) => {\n  const ResolvedComponent = Component as React.ComponentType<OperatorRowProps>;\n  return isResolved ? (\n    <ResolvedComponent key={key} operatorStatus={operatorStatus} />\n  ) : (\n    <AsyncComponent\n      key={operatorStatus.operators[0].metadata.uid}\n      operatorStatus={operatorStatus}\n      loader={Component}\n      LoadingComponent={LoadingComponent}\n    />\n  );\n};\n\nexport const OperatorsPopup: React.FC<OperatorsPopupProps> = ({\n  resources,\n  operatorExtensions,\n  dynamicOperatorSubsystems,\n}) => {\n  const { t } = useTranslation();\n  const sections = [\n    ...operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved={false}\n          />\n        </StackItem>\n      );\n    }),\n    ...dynamicOperatorSubsystems.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved\n          />\n        </StackItem>\n      );\n    }),\n  ].reverse();\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        {t(\n          'public~Operators create, configure, and manage applications by extending the Kubernetes API.',\n        )}\n      </StackItem>\n      {sections}\n    </Stack>\n  );\n};\n\nexport const OperatorHealthItem = withDashboardResources<OperatorHealthItemProps>(\n  ({\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    operatorExtensions,\n    dynamicOperatorSubsystems,\n  }) => {\n    const { t } = useTranslation();\n    React.useEffect(() => {\n      operatorExtensions.forEach((o, index) =>\n        o.resources.forEach((r) => watchK8sResource(uniqueResource(r, index))),\n      );\n      return () => {\n        operatorExtensions.forEach((o, index) =>\n          o.resources.forEach((r) => stopWatchK8sResource(uniqueResource(r, index))),\n        );\n      };\n    }, [watchK8sResource, stopWatchK8sResource, operatorExtensions]);\n\n    const healthStatuses = operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop] || {};\n        return acc;\n      }, {});\n      if (\n        Object.keys(operatorResources).some((resource) => operatorResources[resource].loadError)\n      ) {\n        return { health: HealthState.NOT_AVAILABLE };\n      }\n      if (Object.keys(operatorResources).some((resource) => !operatorResources[resource].loaded)) {\n        return { health: HealthState.LOADING };\n      }\n      const operatorStatuses = o.getOperatorsWithStatuses(operatorResources);\n      if (!operatorStatuses.length) {\n        return { health: HealthState.OK };\n      }\n      const importantStatuses = getMostImportantStatuses(operatorStatuses);\n      return {\n        health: importantStatuses[0].status.health,\n        count: importantStatuses.length,\n      };\n    });\n\n    const operatorsHealth = getOperatorsHealthState(healthStatuses, t);\n\n    return (\n      <HealthItem\n        title={t('public~Operators')}\n        state={operatorsHealth.health}\n        details={operatorsHealth.detailMessage}\n        popupTitle={t('public~Operator status')}\n      >\n        <OperatorsPopup\n          resources={resources}\n          operatorExtensions={operatorExtensions}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      </HealthItem>\n    );\n  },\n);\n\nexport const URLHealthItem = withDashboardResources<URLHealthItemProps>(\n  ({\n    watchURL,\n    stopWatchURL,\n    urlResults,\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    subsystem,\n    models,\n  }) => {\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      watchURL(\n        subsystem.url,\n        (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          ? (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          : undefined,\n      );\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        stopWatchURL(subsystem.url);\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [watchURL, stopWatchURL, watchK8sResource, stopWatchK8sResource, subsystem, modelExists]);\n\n    const healthResult = urlResults.getIn([subsystem.url, 'data']);\n    const healthResultError = urlResults.getIn([subsystem.url, 'loadError']);\n\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(healthResult, healthResultError, k8sResult);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  healthResult={healthResult}\n                  healthResultError={healthResultError}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const PrometheusHealthItem = withDashboardResources<PrometheusHealthItemProps>(\n  ({\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    subsystem,\n    models,\n  }) => {\n    const { t } = useTranslation();\n    const { infrastructure } = React.useContext(ClusterDashboardContext);\n\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      subsystem.queries.forEach((q) => watchPrometheus(q));\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        subsystem.queries.forEach((q) => stopWatchPrometheusQuery(q));\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [\n      watchK8sResource,\n      stopWatchK8sResource,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      subsystem,\n      modelExists,\n    ]);\n\n    const queryResults = React.useMemo(\n      () =>\n        subsystem.queries.map((q) => {\n          const [response, error] = getPrometheusQueryResponse(prometheusResults, q);\n          return {\n            response,\n            error,\n          };\n        }),\n      [prometheusResults, subsystem.queries],\n    );\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(queryResults, t, k8sResult, infrastructure);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupClassname={subsystem.popupClassname}\n        popupKeepOnOutsideClick={subsystem.popupKeepOnOutsideClick}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  responses={queryResults}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const ResourceHealthItem: React.FC<ResourceHealthItemProps> = ({ subsystem, namespace }) => {\n  const { t } = useTranslation();\n\n  const { title, resources, healthHandler, popupComponent, popupTitle } = subsystem;\n\n  const resourcesWithNamespace: WatchK8sResources<ResourcesObject> = React.useMemo(() => {\n    return {\n      ...resources,\n      ...(resources.imageManifestVuln && {\n        imageManifestVuln: { ...resources.imageManifestVuln, namespace },\n      }),\n    };\n  }, [resources, namespace]);\n\n  const resourcesResult: WatchK8sResults<ResourcesObject> = useK8sWatchResources(\n    resourcesWithNamespace,\n  );\n  const healthState: SubsystemHealth = healthHandler(resourcesResult, t);\n\n  return (\n    <HealthItem\n      title={title}\n      state={healthState.state}\n      details={healthState.message}\n      popupTitle={popupTitle}\n    >\n      {popupComponent && resourcesResult && (\n        <AsyncComponent loader={popupComponent} {...resourcesResult} namespace={namespace} />\n      )}\n    </HealthItem>\n  );\n};\n\ntype OperatorHealthItemProps = DashboardItemProps & {\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n\ntype URLHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthURLSubsystem<any>['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem<any>>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype PrometheusHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthPrometheusSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype ResourceHealthItemProps = {\n  subsystem:\n    | DashboardsOverviewHealthResourceSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthResourceSubsystem>['properties'];\n  namespace?: string;\n};\n\ntype OperatorsPopupProps = {\n  resources: FirehoseResourcesResult;\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum ProjectQueries {\n  CPU_USAGE = 'CPU_USAGE',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  MEMORY_USAGE = 'MEMORY_USAGE',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  POD_COUNT = 'POD_COUNT',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_FILESYSTEM = 'PODS_BY_FILESYSTEM',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  FILESYSTEM_USAGE = 'FILESYSTEM_USAGE',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n}\n\nconst queries = {\n  [ProjectQueries.CPU_USAGE]: _.template(\n    `namespace:container_cpu_usage:sum{namespace='<%= project %>'}`,\n  ),\n  [ProjectQueries.CPU_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"cpu\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_USAGE]: _.template(\n    `sum(container_memory_working_set_bytes{namespace='<%= project %>',container=\"\",pod!=\"\"}) BY (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"memory\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.POD_COUNT]: _.template(\n    `count(kube_running_pod_ready{namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.FILESYSTEM_USAGE]: _.template(\n    `sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_IN_UTILIZATION]: _.template(\n    `sum(rate(container_network_receive_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_OUT_UTILIZATION]: _.template(\n    `sum(rate(container_network_transmit_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n};\n\nconst top25Queries = {\n  [ProjectQueries.PODS_BY_CPU]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_MEMORY]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: _.template(\n    `topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n};\n\nexport const getMultilineQueries = (\n  project: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [ProjectQueries.NETWORK_UTILIZATION]: [\n    {\n      query: queries[ProjectQueries.NETWORK_IN_UTILIZATION]({ project }),\n      desc: 'in',\n    },\n    {\n      query: queries[ProjectQueries.NETWORK_OUT_UTILIZATION]({ project }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getUtilizationQueries = (project: string) => ({\n  [ProjectQueries.CPU_USAGE]: queries[ProjectQueries.CPU_USAGE]({ project }),\n  [ProjectQueries.CPU_REQUESTS]: queries[ProjectQueries.CPU_REQUESTS]({ project }),\n  [ProjectQueries.MEMORY_USAGE]: queries[ProjectQueries.MEMORY_USAGE]({ project }),\n  [ProjectQueries.MEMORY_REQUESTS]: queries[ProjectQueries.MEMORY_REQUESTS]({ project }),\n  [ProjectQueries.POD_COUNT]: queries[ProjectQueries.POD_COUNT]({ project }),\n  [ProjectQueries.FILESYSTEM_USAGE]: queries[ProjectQueries.FILESYSTEM_USAGE]({\n    project,\n  }),\n});\n\nexport const getTopConsumerQueries = (project: string) => ({\n  [ProjectQueries.PODS_BY_CPU]: top25Queries[ProjectQueries.PODS_BY_CPU]({ project }),\n  [ProjectQueries.PODS_BY_MEMORY]: top25Queries[ProjectQueries.PODS_BY_MEMORY]({ project }),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: top25Queries[ProjectQueries.PODS_BY_FILESYSTEM]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: top25Queries[ProjectQueries.PODS_BY_NETWORK_IN]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: top25Queries[ProjectQueries.PODS_BY_NETWORK_OUT]({\n    project,\n  }),\n});\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum OverviewQuery {\n  MEMORY_TOTAL = 'MEMORY_TOTAL',\n  MEMORY_UTILIZATION = 'MEMORY_UTILIZATION',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  CPU_UTILIZATION = 'CPU_UTILIZATION',\n  CPU_TOTAL = 'CPU_TOTAL',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  STORAGE_UTILIZATION = 'STORAGE_UTILIZATION',\n  STORAGE_TOTAL = 'STORAGE_TOTAL',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_STORAGE = 'PODS_BY_STORAGE',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  NODES_BY_CPU = 'NODES_BY_CPU',\n  NODES_BY_MEMORY = 'NODES_BY_MEMORY',\n  NODES_BY_STORAGE = 'NODES_BY_STORAGE',\n  NODES_BY_NETWORK_IN = 'NODES_BY_NETWORK_IN',\n  NODES_BY_NETWORK_OUT = 'NODES_BY_NETWORK_OUT',\n  NODES_BY_PODS = 'NODES_BY_PODS',\n  PROJECTS_BY_CPU = 'PROJECTS_BY_CPU',\n  PROJECTS_BY_MEMORY = 'PROJECTS_BY_MEMORY',\n  PROJECTS_BY_STORAGE = 'PROJECTS_BY_STORAGE',\n  PROJECTS_BY_NETWORK_IN = 'PROJECTS_BY_NETWORK_IN',\n  PROJECTS_BY_NETWORK_OUT = 'PROJECTS_BY_NETWORK_OUT',\n  PROJECTS_BY_PODS = 'PROJECTS_BY_PODS',\n  POD_UTILIZATION = 'POD_UTILIZATION',\n}\n\nconst top25Queries = {\n  [OverviewQuery.PODS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        avg_over_time(instance:node_cpu:rate:sum[5m])\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum by (instance) (max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"}))\n          -\n          sum by (instance) (max by (device, instance) (node_filesystem_avail_bytes{device=~\"/.*\"}))\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(avg_over_time(kubelet_running_pods[5m])) BY (node)\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_receive_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_transmit_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n\n  [OverviewQuery.PROJECTS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        count by (namespace) (\n            topk without(uid) (1, kube_running_pod_ready)\n            *\n            ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n          *\n          on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})))\n        ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n};\n\nconst overviewQueries = {\n  [OverviewQuery.MEMORY_TOTAL]: _.template(\n    `\n      sum(\n        node_memory_MemTotal_bytes\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_UTILIZATION]: _.template(\n    `\n      sum(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"memory\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          instance:node_network_transmit_bytes_excluding_lo:rate1m\n          +\n          instance:node_network_receive_bytes_excluding_lo:rate1m\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_UTILIZATION]: _.template(\n    `\n      sum(\n        1 - sum without (mode) (rate(node_cpu_seconds_total{mode=~\"idle|iowait|steal\"}[2m]))\n        *\n        on(instance) group_left() (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\",\"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_TOTAL]: _.template(\n    `\n      sum(\n        kube_node_status_capacity{resource=\"cpu\",unit=\"core\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"cpu\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n          -\n          max by (device, instance) (node_filesystem_free_bytes{device=~\"/.*\"})\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_TOTAL]: _.template(\n    `\n      sum(\n        max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.POD_UTILIZATION]: _.template(\n    `\n      count(\n        (\n          topk without(uid) (1, kube_running_pod_ready)\n          *\n          ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n        )\n        *\n        on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_IN_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_receive_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_OUT_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_transmit_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n};\n\nexport const getMultilineQueries = (\n  nodeType: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [OverviewQuery.NETWORK_UTILIZATION]: [\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_IN_UTILIZATION]({ nodeType }),\n      desc: 'in',\n    },\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_OUT_UTILIZATION]({ nodeType }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getTop25ConsumerQueries = (nodeType: string) => ({\n  [OverviewQuery.PODS_BY_CPU]: top25Queries[OverviewQuery.PODS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PODS_BY_MEMORY]: top25Queries[OverviewQuery.PODS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PODS_BY_STORAGE]: top25Queries[OverviewQuery.PODS_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PODS_BY_NETWORK_IN]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PODS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_CPU]: top25Queries[OverviewQuery.NODES_BY_CPU]({ nodeType }),\n  [OverviewQuery.NODES_BY_MEMORY]: top25Queries[OverviewQuery.NODES_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.NODES_BY_STORAGE]: top25Queries[OverviewQuery.NODES_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.NODES_BY_PODS]: top25Queries[OverviewQuery.NODES_BY_PODS]({ nodeType }),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: top25Queries[OverviewQuery.NODES_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: top25Queries[OverviewQuery.NODES_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_CPU]: top25Queries[OverviewQuery.PROJECTS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: top25Queries[OverviewQuery.PROJECTS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: top25Queries[OverviewQuery.PROJECTS_BY_STORAGE]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_PODS]: top25Queries[OverviewQuery.PROJECTS_BY_PODS]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n});\n\nexport const getUtilizationQueries = (nodeType: string) => ({\n  [OverviewQuery.CPU_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.CPU_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.CPU_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.CPU_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.MEMORY_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.MEMORY_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.MEMORY_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.MEMORY_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.STORAGE_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.STORAGE_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.STORAGE_TOTAL]({ nodeType }),\n  },\n  [OverviewQuery.POD_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.POD_UTILIZATION]({ nodeType }),\n  },\n});\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GaugeChart } from '@console/internal/components/graphs/gauge';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ResourceQuotaChartsProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n\nconst ResourceQuotaCharts = ({ resourceQuota }: ResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(resourceQuota.status?.hard ?? {}).map((resourceName) => {\n    const hard = resourceQuota.status.hard[resourceName];\n    const used = resourceQuota.status.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({ resourceName, used, hard });\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <GaugeChart\n          data={{\n            x: `${percent}%`,\n            y: percent,\n          }}\n          thresholds={[{ value: 90 }, { value: 101 }]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ResourceQuotaCharts;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getUsedPercentage, getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype AppliedClusterResourceQuotaChartsProps = {\n  appliedClusterResourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n\nconst AppliedClusterResourceQuotaCharts = ({\n  appliedClusterResourceQuota,\n  namespace,\n}: AppliedClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const nsQuotas = appliedClusterResourceQuota.status?.namespaces?.find(\n    (ns) => ns.namespace === namespace,\n  );\n\n  const charts = Object.keys(nsQuotas?.status?.hard ?? {}).map((resourceName) => {\n    const clusterHard = appliedClusterResourceQuota.status.total?.hard?.[resourceName];\n    const clusterUsed = appliedClusterResourceQuota.status.total?.used?.[resourceName];\n    const nsUsed = nsQuotas.status.used?.[resourceName];\n    const clusterUsage = getUsedPercentage(clusterHard, clusterUsed);\n    const unused = 100 - clusterUsage;\n\n    const { label, percent: nsUsage } = getLabelAndUsage({\n      resourceName,\n      used: nsUsed,\n      hard: clusterHard,\n    });\n\n    const percentOtherNamespaces = clusterUsage - nsUsage;\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Namespace',\n              y: nsUsage,\n            },\n            {\n              x: 'Other namespaces',\n              y: percentOtherNamespaces,\n            },\n            {\n              x: 'Unused',\n              y: unused,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default AppliedClusterResourceQuotaCharts;\n","/* eslint-disable camelcase */\nimport * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport {\n  chart_color_black_100,\n  chart_color_green_300,\n  chart_color_green_500,\n  chart_color_gold_400,\n  chart_color_gold_500,\n} from '@patternfly/react-tokens';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { useRefWidth } from '../utils';\nimport { DataPoint } from '.';\n\nexport const DonutChart: React.FC<DonutChartProps> = ({\n  data,\n  query = '',\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  ariaDescription,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || t('No data');\n\n  const labels = ({ datum: { x, y } }) => t('public~{{x}}: {{y}}%', { x, y });\n\n  const namespaceData = data.filter((datum) => datum.x === 'Namespace');\n\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonut\n          ariaTitle={ariaChartTitle || title}\n          ariaDesc={ariaDescription}\n          data={data}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          labels={labels}\n          width={width}\n          subTitle={secondaryTitleText}\n          colorScale={\n            namespaceData[0]?.y === 100\n              ? [\n                  chart_color_gold_400.value,\n                  chart_color_gold_500.value,\n                  chart_color_black_100.value,\n                ]\n              : [\n                  chart_color_green_300.value,\n                  chart_color_green_500.value,\n                  chart_color_black_100.value,\n                ]\n          }\n          title={labelText}\n        />\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\ntype DonutChartProps = {\n  data: DataPoint[];\n  label: string;\n  query?: string;\n  secondaryTitle?: string;\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  ariaDescription?: string;\n  usedLabel?: string;\n  className?: string;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\nimport { YellowExclamationTriangleIcon } from '../../status';\n\nimport './quota-summary.scss';\n\ntype QuotaSummaryProps = {\n  hard: { [key: string]: string };\n  used: { [key: string]: string };\n};\n\nconst QuotaSummary = ({ hard, used }: QuotaSummaryProps): JSX.Element => {\n  const { t } = useTranslation();\n  const resourcesAtQuota = Object.keys(hard || {}).reduce(\n    (acc, resource) => (getUsedPercentage(hard[resource], used?.[resource]) >= 100 ? acc + 1 : acc),\n    0,\n  );\n\n  return (\n    <div className=\"co-resource-quota__summary\">\n      {t('console-shared~{{count}} resource', { count: Object.keys(hard || {}).length })}\n      {', '}\n      {resourcesAtQuota > 0 ? (\n        <>\n          <YellowExclamationTriangleIcon />{' '}\n          {t('console-shared~{{count}} resource reached quota', { count: resourcesAtQuota })}\n        </>\n      ) : (\n        t('console-shared~none are at quota')\n      )}\n    </div>\n  );\n};\n\nexport default QuotaSummary;\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../../module/k8s';\n\nexport const ClusterDashboardContext = React.createContext<ClusterDashboardContext>({\n  infrastructureLoaded: true,\n  infrastructureError: null,\n});\n\n// eslint-disable-next-line no-redeclare\ntype ClusterDashboardContext = {\n  infrastructure?: K8sResourceKind;\n  infrastructureLoaded: boolean;\n  infrastructureError: any;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { FirehoseResourcesResult } from '@console/internal/components/utils';\nimport { GetOperatorsWithStatuses, LazyLoader, OperatorRowProps } from '@console/plugin-sdk';\nimport { getMostImportantStatuses } from './state-utils';\nimport { HealthState } from './states';\nimport StatusItem, { StatusPopupSection } from './StatusPopup';\n\nimport './operator-body.scss';\n\nexport const OperatorsSection: React.FC<OperatorsSectionProps> = ({\n  resources,\n  getOperatorsWithStatuses,\n  title,\n  linkTo,\n  Row,\n  Component,\n  isResolved,\n}) => {\n  const { t } = useTranslation();\n  const error = _.values(resources).some((r) => r.loadError);\n  const operatorStatuses = getOperatorsWithStatuses(resources);\n  const sortedOperatorStatuses = getMostImportantStatuses(operatorStatuses).sort((a, b) =>\n    a.operators[0].metadata.name.localeCompare(b.operators[0].metadata.name),\n  );\n  const operatorsHealthy = sortedOperatorStatuses.every((o) => o.status.health === HealthState.OK);\n  const RowLoading = React.useCallback(() => <div className=\"co-status__operator-skeleton\" />, []);\n  if (!operatorStatuses.length) {\n    return null;\n  }\n\n  return (\n    <StatusPopupSection\n      firstColumn={\n        <>\n          <span>{title}</span>\n          <span className=\"text-secondary co-status__operator-detail\">\n            {' '}\n            {t('console-shared~({{operatorStatusLength}} installed)', {\n              operatorStatusLength: operatorStatuses.length,\n            })}\n          </span>\n        </>\n      }\n      secondColumn={t('console-shared~Status')}\n    >\n      {error ? (\n        <div className=\"text-secondary\">{t('console-shared~Not available')}</div>\n      ) : (\n        !operatorsHealthy &&\n        sortedOperatorStatuses.map((operatorStatus) => (\n          <Row\n            key={operatorStatus.operators[0].metadata.uid}\n            Component={Component}\n            operatorStatus={operatorStatus}\n            LoadingComponent={RowLoading}\n            isResolved={isResolved}\n          />\n        ))\n      )}\n      <StatusItem\n        value={t('console-shared~All {{status}}', {\n          status: operatorStatuses[0].status.title.toLowerCase(),\n        })}\n        icon={operatorStatuses[0].status.icon}\n      >\n        <Link to={linkTo}>{t('console-shared~View all')}</Link>\n      </StatusItem>\n    </StatusPopupSection>\n  );\n};\n\ntype OperatorsSectionProps = {\n  resources: FirehoseResourcesResult;\n  getOperatorsWithStatuses: GetOperatorsWithStatuses;\n  title: string;\n  linkTo: string;\n  Row: React.ComponentType<\n    OperatorRowProps & {\n      LoadingComponent: () => JSX.Element;\n      Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n      key: string;\n      isResolved: boolean;\n    }\n  >;\n  isResolved: boolean;\n  Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useExtensions,\n  DashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthOperator,\n} from '@console/plugin-sdk';\nimport {\n  DashboardsOverviewHealthSubsystem as DynamicDashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem as isDynamicDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem as isDynamicDashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem as isDynamicDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthURLSubsystem,\n  isResolvedDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthResourceSubsystem,\n  isResolvedDashboardsOverviewHealthOperator,\n  ResolvedExtension,\n  useResolvedExtensions,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport { Gallery, GalleryItem, Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport { BlueArrowCircleUpIcon, FLAGS, useCanClusterUpgrade } from '@console/shared';\n\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport AlertItem, {\n  StatusItem,\n} from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '../../../monitoring/utils';\nimport {\n  ClusterVersionKind,\n  referenceForModel,\n  hasAvailableUpdates,\n  K8sKind,\n  ObjectMetadata,\n} from '../../../../module/k8s';\nimport { ClusterVersionModel } from '../../../../models';\nimport { RootState } from '../../../../redux';\nimport {\n  OperatorHealthItem,\n  PrometheusHealthItem,\n  URLHealthItem,\n  ResourceHealthItem,\n} from './health-item';\nimport { useK8sWatchResource } from '../../../utils/k8s-watch-hook';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { useNotificationAlerts } from '@console/shared/src/hooks/useNotificationAlerts';\n\nconst filterSubsystems = (\n  subsystems: (\n    | DashboardsOverviewHealthSubsystem\n    | ResolvedExtension<DynamicDashboardsOverviewHealthSubsystem>\n  )[],\n  k8sModels: ImmutableMap<string, K8sKind>,\n) =>\n  subsystems.filter((s) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(s) ||\n      isDashboardsOverviewHealthPrometheusSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthURLSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthPrometheusSubsystem(s)\n    ) {\n      const subsystem = s as\n        | DashboardsOverviewHealthPrometheusSubsystem\n        | DashboardsOverviewHealthURLSubsystem\n        | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>\n        | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem>;\n      return subsystem.properties.additionalResource &&\n        !subsystem.properties.additionalResource.optional\n        ? !!k8sModels.get(subsystem.properties.additionalResource.kind)\n        : true;\n    }\n    return true;\n  });\n\nconst cvResource: WatchK8sResource = {\n  kind: referenceForModel(ClusterVersionModel),\n  namespaced: false,\n  name: 'version',\n  isList: false,\n};\n\nexport const DashboardAlerts: React.FC<DashboardAlertsProps> = ({ labelSelector }) => {\n  const { t } = useTranslation();\n  const hasCVResource = useFlag(FLAGS.CLUSTER_VERSION);\n  const [alerts, , loadError] = useNotificationAlerts(labelSelector);\n  const [cv, cvLoaded] = useK8sWatchResource<ClusterVersionKind>(\n    hasCVResource ? cvResource : ({} as WatchK8sResource),\n  );\n  const canUpgrade = useCanClusterUpgrade();\n\n  const showClusterUpdate =\n    canUpgrade && hasCVResource && cvLoaded && hasAvailableUpdates(cv) && !labelSelector;\n  return (\n    <AlertsBody error={!_.isEmpty(loadError)}>\n      {showClusterUpdate && (\n        <StatusItem\n          key=\"clusterUpdate\"\n          Icon={BlueArrowCircleUpIcon}\n          message={t('public~A cluster version update is available')}\n        >\n          <Link to=\"/settings/cluster?showVersions\">{t('public~Update cluster')}</Link>\n        </StatusItem>\n      )}\n      {alerts.map((alert) => (\n        <AlertItem key={alertURL(alert, alert.rule.id)} alert={alert} />\n      ))}\n    </AlertsBody>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  k8sModels: state.k8s.getIn(['RESOURCES', 'models']),\n});\nexport const StatusCard = connect<StatusCardProps>(mapStateToProps)(({ k8sModels }) => {\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const [dynamicSubsystemExtensions] = useResolvedExtensions<\n    DynamicDashboardsOverviewHealthSubsystem\n  >(isDynamicDashboardsOverviewHealthSubsystem);\n\n  const subsystems = React.useMemo(() => {\n    const filteredSubsystems = filterSubsystems(\n      [...subsystemExtensions, ...dynamicSubsystemExtensions],\n      k8sModels,\n    );\n    return filteredSubsystems.map((e) => {\n      if (\n        isResolvedDashboardsOverviewHealthURLSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthPrometheusSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthResourceSubsystem(e)\n      ) {\n        const popup = e.properties.popupComponent\n          ? { popupComponent: () => Promise.resolve(e.properties.popupComponent) }\n          : {};\n        return {\n          ...e,\n          properties: {\n            ...e.properties,\n            ...popup,\n          },\n        };\n      }\n      return e;\n    });\n  }, [subsystemExtensions, dynamicSubsystemExtensions, k8sModels]);\n\n  const operatorSubsystemIndex = React.useMemo(\n    () =>\n      subsystems.findIndex(\n        (e) =>\n          isDashboardsOverviewHealthOperator(e) || isResolvedDashboardsOverviewHealthOperator(e),\n      ),\n    [subsystems],\n  );\n  const { t } = useTranslation();\n  const healthItems: { title: string; Component: React.ReactNode }[] = [];\n  subsystems.forEach((subsystem) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthURLSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <URLHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthPrometheusSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthPrometheusSubsystem(subsystem)\n    ) {\n      const { disallowedControlPlaneTopology } = subsystem.properties;\n      if (\n        disallowedControlPlaneTopology?.length &&\n        disallowedControlPlaneTopology.includes(window.SERVER_FLAGS.controlPlaneTopology)\n      ) {\n        return;\n      }\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <PrometheusHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthResourceSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthResourceSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <ResourceHealthItem subsystem={subsystem.properties} />,\n      });\n    }\n  });\n\n  if (operatorSubsystemIndex !== -1) {\n    const operatorSubsystems: DashboardsOverviewHealthOperator['properties'][] = [];\n    const dynamicOperatorSubsystems: ResolvedExtension<\n      DynamicDashboardsOverviewHealthOperator\n    >['properties'][] = [];\n    subsystems.forEach((e) => {\n      if (isResolvedDashboardsOverviewHealthOperator(e)) {\n        dynamicOperatorSubsystems.push(e.properties);\n      } else if (isDashboardsOverviewHealthOperator(e)) {\n        operatorSubsystems.push(e.properties);\n      }\n    });\n    healthItems.splice(operatorSubsystemIndex, 0, {\n      title: 'Operators',\n      Component: (\n        <OperatorHealthItem\n          operatorExtensions={operatorSubsystems}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      ),\n    });\n  }\n\n  return (\n    <Card\n      data-test-id=\"status-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to=\"/monitoring/alerts\" data-test=\"status-card-view-alerts\">\n                {t('public~View alerts')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      <HealthBody>\n        <Gallery className=\"co-overview-status__health\" hasGutter>\n          {healthItems.map((item) => {\n            return (\n              <GalleryItem key={item.title} data-test={item.title}>\n                {item.Component}\n              </GalleryItem>\n            );\n          })}\n        </Gallery>\n      </HealthBody>\n      <DashboardAlerts />\n    </Card>\n  );\n});\n\ntype StatusCardProps = {\n  k8sModels: ImmutableMap<string, K8sKind>;\n};\n\ntype DashboardAlertsProps = {\n  labelSelector?: ObjectMetadata['labels'];\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FLAGS, useActiveNamespace, useFlag } from '@console/shared';\nimport { useCreateNamespaceOrProjectModal } from '@console/shared/src/hooks/useCreateNamespaceOrProjectModal';\nimport ProjectListPage, { ProjectListPageProps } from './ProjectListPage';\n\ntype LazySubTitleRender = (openProjectModal: () => void) => React.ReactNode;\nexport interface CreateProjectListPageProps extends ProjectListPageProps {\n  title: string;\n  children: LazySubTitleRender;\n  onCreate?: (project: K8sResourceKind) => void;\n}\n\ntype CreateAProjectButtonProps = {\n  openProjectModal: () => void;\n};\n\nexport const CreateAProjectButton: React.FC<CreateAProjectButtonProps> = ({ openProjectModal }) => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  if (canCreateProject) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Project\n        </Button>\n      </Trans>\n    );\n  }\n  if (canCreateNs) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Namespace\n        </Button>\n      </Trans>\n    );\n  }\n  return null;\n};\n\nconst CreateProjectListPage: React.FC<CreateProjectListPageProps> = ({\n  onCreate,\n  title,\n  children,\n  ...props\n}) => {\n  const [, setActiveNamespace] = useActiveNamespace();\n  const createNamespaceOrProjectModal = useCreateNamespaceOrProjectModal();\n  const openProjectModal = React.useCallback(() => {\n    const handleSubmit = (project: K8sResourceKind) => {\n      setActiveNamespace(project.metadata?.name);\n      onCreate && onCreate(project);\n    };\n    createNamespaceOrProjectModal({ onSubmit: handleSubmit });\n  }, [onCreate, setActiveNamespace, createNamespaceOrProjectModal]);\n  return (\n    <ProjectListPage {...props} title={title}>\n      {children(openProjectModal)}\n    </ProjectListPage>\n  );\n};\n\nexport default CreateProjectListPage;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardTitle,\n  MenuToggle,\n  MenuToggleElement,\n  Select,\n  SelectList,\n  SelectOption,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport {\n  ClusterOverviewUtilizationItem,\n  isClusterOverviewUtilizationItem,\n  ClusterOverviewMultilineUtilizationItem,\n  isClusterOverviewMultilineUtilizationItem,\n  useResolvedExtensions,\n  Humanize,\n  TopConsumerPopoverProps,\n} from '@console/dynamic-plugin-sdk';\nimport UtilizationItem, {\n  MultilineUtilizationItem,\n  QueryWithDescription,\n  LimitRequested,\n  trimSecondsXMutator,\n} from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\n\nimport { DashboardItemProps, withDashboardResources } from '../../with-dashboard-resources';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils/units';\nimport { getRangeVectorStats, getInstantVectorStats } from '../../../graphs/utils';\nimport {\n  getMultilineQueries,\n  getUtilizationQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport { MachineConfigPoolModel } from '../../../../models';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { DataPoint, PrometheusResponse } from '../../../graphs';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { MachineConfigPoolKind, referenceForModel } from '@console/internal/module/k8s';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport { useUtilizationDuration } from '@console/shared/src/hooks/useUtilizationDuration';\nimport {\n  ClusterUtilizationContext,\n  CPUPopover,\n  MemoryPopover,\n  StoragePopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  PodPopover,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const PrometheusUtilizationItem = withDashboardResources<PrometheusUtilizationItemProps>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    utilizationQuery,\n    totalQuery,\n    title,\n    TopConsumerPopover,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n    limitQuery,\n    requestQuery,\n    setLimitReqState,\n  }) => {\n    let utilization: PrometheusResponse, utilizationError: any;\n    let total: PrometheusResponse, totalError: any;\n    let max: DataPoint<number>[];\n    let limit: PrometheusResponse, limitError: any;\n    let request: PrometheusResponse, requestError: any;\n    let isLoading = false;\n    const { duration } = useUtilizationDuration();\n\n    React.useEffect(() => {\n      if (!isDisabled) {\n        watchPrometheus(utilizationQuery, namespace, duration);\n        totalQuery && watchPrometheus(totalQuery, namespace);\n        limitQuery && watchPrometheus(limitQuery, namespace, duration);\n        requestQuery && watchPrometheus(requestQuery, namespace, duration);\n        return () => {\n          stopWatchPrometheusQuery(utilizationQuery, duration);\n          totalQuery && stopWatchPrometheusQuery(totalQuery);\n          limitQuery && stopWatchPrometheusQuery(limitQuery, duration);\n          requestQuery && stopWatchPrometheusQuery(requestQuery, duration);\n        };\n      }\n    }, [\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      duration,\n      utilizationQuery,\n      totalQuery,\n      namespace,\n      isDisabled,\n      limitQuery,\n      requestQuery,\n    ]);\n\n    if (!isDisabled) {\n      [utilization, utilizationError] = getPrometheusQueryResponse(\n        prometheusResults,\n        utilizationQuery,\n        duration,\n      );\n      [total, totalError] = getPrometheusQueryResponse(prometheusResults, totalQuery);\n      [limit, limitError] = getPrometheusQueryResponse(prometheusResults, limitQuery, duration);\n      [request, requestError] = getPrometheusQueryResponse(\n        prometheusResults,\n        requestQuery,\n        duration,\n      );\n\n      max = getInstantVectorStats(total);\n      isLoading = !utilization || (totalQuery && !total) || (limitQuery && !limit);\n    }\n\n    return (\n      <UtilizationItem\n        title={title}\n        utilization={utilization}\n        limit={limit}\n        requested={request}\n        error={utilizationError || totalError || limitError || requestError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        query={[utilizationQuery, limitQuery, requestQuery]}\n        max={max && max.length ? max[0].y : null}\n        TopConsumerPopover={TopConsumerPopover}\n        setLimitReqState={setLimitReqState}\n      />\n    );\n  },\n);\n\nexport const PrometheusMultilineUtilizationItem = withDashboardResources<\n  PrometheusMultilineUtilizationItemProps\n>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    queries,\n    title,\n    TopConsumerPopovers,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n  }) => {\n    const { duration } = useUtilizationDuration();\n    React.useEffect(() => {\n      if (!isDisabled) {\n        queries.forEach((q) => watchPrometheus(q.query, namespace, duration));\n        return () => {\n          queries.forEach((q) => stopWatchPrometheusQuery(q.query, duration));\n        };\n      }\n    }, [watchPrometheus, stopWatchPrometheusQuery, duration, queries, namespace, isDisabled]);\n\n    const stats = [];\n    let hasError = false;\n    let isLoading = false;\n    if (!isDisabled) {\n      queries.forEach((query) => {\n        const [response, responseError] = getPrometheusQueryResponse(\n          prometheusResults,\n          query.query,\n          duration,\n        );\n        if (responseError) {\n          hasError = true;\n          return false;\n        }\n        if (!response) {\n          isLoading = true;\n          return false;\n        }\n        stats.push(getRangeVectorStats(response, query.desc, null, trimSecondsXMutator)?.[0] || []);\n      });\n    }\n\n    return (\n      <MultilineUtilizationItem\n        title={title}\n        data={stats}\n        error={hasError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        queries={queries}\n        TopConsumerPopovers={TopConsumerPopovers}\n      />\n    );\n  },\n);\n\nconst UtilizationCardNodeFilter: React.FC<UtilizationCardNodeFilterProps> = ({\n  machineConfigPools,\n  onNodeSelect,\n  selectedNodes,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const sortedMCPs = machineConfigPools.sort((a, b) => {\n    const order = ['worker', 'master'];\n    const indexA = order.indexOf(a.metadata.name);\n    const indexB = order.indexOf(b.metadata.name);\n    if (indexA === -1 && indexB === -1) {\n      return a.metadata.name.localeCompare(b.metadata.name);\n    }\n    if (indexA === -1) {\n      return 1;\n    }\n    if (indexB === -1) {\n      return -1;\n    }\n    return indexA - indexB;\n  });\n\n  const selectOptions = sortedMCPs.map((mcp) => {\n    const mcpName = mcp.metadata.name === 'master' ? 'control plane' : mcp.metadata.name;\n    return (\n      <SelectOption\n        hasCheckbox\n        key={mcp.metadata.name}\n        value={mcpName}\n        isSelected={selectedNodes.includes(mcp.metadata.name)}\n      >\n        {mcpName}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle ref={toggleRef} onClick={(open) => setIsOpen(open)} variant=\"plainText\">\n      {t('public~Filter by Node type')}\n      {selectedNodes.length > 0 && (\n        <Badge className=\"pf-v5-u-ml-sm\" isRead>\n          {selectedNodes.length}\n        </Badge>\n      )}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      role=\"menu\"\n      aria-label={t('public~Filter by Node type')}\n      onSelect={onNodeSelect}\n      isOpen={isOpen}\n      selected={selectedNodes}\n      onOpenChange={(open) => setIsOpen(open)}\n      toggle={toggle}\n    >\n      <SelectList>{selectOptions}</SelectList>\n    </Select>\n  );\n};\n\nexport const UtilizationCard = () => {\n  const { t } = useTranslation();\n  const [machineConfigPools, machineConfigPoolsLoaded] = useK8sWatchResource<\n    MachineConfigPoolKind[]\n  >({\n    isList: true,\n    kind: referenceForModel(MachineConfigPoolModel),\n  });\n  // TODO: add `useUserSettings` to get default selected\n  const [selectedNodes, setSelectedNodes] = React.useState<string[]>([]);\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ClusterOverviewUtilizationItem>(\n    isClusterOverviewUtilizationItem,\n  );\n  const [dynamicMultilineItemExtensions] = useResolvedExtensions<\n    ClusterOverviewMultilineUtilizationItem\n  >(isClusterOverviewMultilineUtilizationItem);\n\n  // TODO: add `useUserSettingsCompatibility` to store selectedNodes\n  const onNodeSelect = (event: React.MouseEvent, selection: string) => {\n    const selectionUpdated = selection === 'control plane' ? 'master' : selection;\n    if (selectedNodes.includes(selectionUpdated)) {\n      setSelectedNodes(selectedNodes.filter((item) => item !== selectionUpdated));\n    } else {\n      setSelectedNodes([...selectedNodes, selectionUpdated]);\n    }\n  };\n  // if no filter is applied, show all nodes using regex\n  const nodeType = _.isEmpty(selectedNodes) ? '.+' : selectedNodes.join('|');\n  const [utilizationQueries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(nodeType), getMultilineQueries(nodeType)],\n    [nodeType],\n  );\n  return (\n    machineConfigPoolsLoaded && (\n      <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n        <CardHeader\n          actions={{\n            actions: (\n              <>\n                <Split>\n                  <SplitItem>\n                    <UtilizationCardNodeFilter\n                      machineConfigPools={machineConfigPools}\n                      onNodeSelect={onNodeSelect}\n                      selectedNodes={selectedNodes}\n                    />\n                  </SplitItem>\n                  <SplitItem>\n                    <UtilizationDurationDropdown />\n                  </SplitItem>\n                </Split>\n              </>\n            ),\n            hasNoOffset: false,\n            className: undefined,\n          }}\n        >\n          <CardTitle data-test=\"utilization-card__title\">\n            {t('public~Cluster utilization')}\n          </CardTitle>\n        </CardHeader>\n        <UtilizationBody>\n          <ClusterUtilizationContext.Provider value={nodeType}>\n            <PrometheusUtilizationItem\n              title={t('public~CPU')}\n              utilizationQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].requests}\n              TopConsumerPopover={CPUPopover}\n              humanizeValue={humanizeCpuCores}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Memory')}\n              utilizationQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].requests}\n              TopConsumerPopover={MemoryPopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Filesystem')}\n              utilizationQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].total}\n              TopConsumerPopover={StoragePopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusMultilineUtilizationItem\n              title={t('public~Network transfer')}\n              queries={multilineQueries[OverviewQuery.NETWORK_UTILIZATION]}\n              humanizeValue={humanizeDecimalBytesPerSec}\n              TopConsumerPopovers={networkPopovers}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Pod count')}\n              utilizationQuery={utilizationQueries[OverviewQuery.POD_UTILIZATION].utilization}\n              TopConsumerPopover={PodPopover}\n              humanizeValue={humanizeNumber}\n            />\n            {dynamicItemExtensions.map(({ uid, properties }) => (\n              <PrometheusUtilizationItem\n                key={uid}\n                title={properties.title}\n                utilizationQuery={properties.getUtilizationQuery(selectedNodes)}\n                totalQuery={properties.getTotalQuery?.(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopover={properties.TopConsumerPopover}\n                requestQuery={properties.getRequestQuery?.(selectedNodes)}\n                limitQuery={properties.getLimitQuery?.(selectedNodes)}\n              />\n            ))}\n            {dynamicMultilineItemExtensions.map(({ uid, properties }) => (\n              <PrometheusMultilineUtilizationItem\n                key={uid}\n                title={properties.title}\n                queries={properties.getUtilizationQueries(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopovers={properties.TopConsumerPopovers}\n              />\n            ))}\n          </ClusterUtilizationContext.Provider>\n        </UtilizationBody>\n      </Card>\n    )\n  );\n};\n\ntype PrometheusCommonProps = {\n  title: string;\n  humanizeValue: Humanize;\n  byteDataType?: ByteDataTypes;\n  namespace?: string;\n  isDisabled?: boolean;\n};\n\ntype PrometheusUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    utilizationQuery: string;\n    totalQuery?: string;\n    limitQuery?: string;\n    requestQuery?: string;\n    TopConsumerPopover?: React.ComponentType<TopConsumerPopoverProps>;\n    setLimitReqState?: (state: LimitRequested) => void;\n  };\n\ntype PrometheusMultilineUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    queries: QueryWithDescription[];\n    TopConsumerPopovers?: React.ComponentType<TopConsumerPopoverProps>[];\n  };\n\ntype UtilizationCardNodeFilterProps = {\n  machineConfigPools: MachineConfigPoolKind[];\n  onNodeSelect: (event: React.MouseEvent, selection: string) => void;\n  selectedNodes: string[];\n};\n","import * as React from 'react';\nimport {\n  ChartDonutThreshold,\n  ChartDonutUtilization,\n  ChartThemeColor,\n} from '@patternfly/react-charts';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { usePrometheusPoll } from './prometheus-poll-hook';\nimport { PrometheusEndpoint } from './helpers';\nimport { useRefWidth, humanizePercentage, Humanize } from '../utils';\nimport { getInstantVectorStats } from './utils';\nimport { DataPoint } from '.';\n\nconst DEFAULT_THRESHOLDS = [{ value: 67 }, { value: 92 }];\n\nexport const GaugeChart: React.FC<GaugeChartProps> = ({\n  data,\n  error,\n  humanize = humanizePercentage,\n  invert = false,\n  loading,\n  query = '',\n  remainderLabel,\n  themeColor = ChartThemeColor.green,\n  thresholds = DEFAULT_THRESHOLDS,\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n  const ready = !error && !loading;\n\n  const status = loading ? t('Loading') : error;\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || (data ? humanize(data.y).string : undefined) || t('No data');\n\n  const labels = ({ datum: { x, y } }) =>\n    x ? `${x} ${usedLabelText}` : `${y} ${remainderLabel || t('available')}`;\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonutThreshold\n          ariaTitle={ariaChartTitle || title}\n          data={thresholds}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          width={width}\n          y=\"value\"\n        >\n          <ChartDonutUtilization\n            labels={labels}\n            data={ready ? data : { y: 0 }}\n            invert={invert}\n            padding={0}\n            subTitle={ready ? secondaryTitleText : ''}\n            themeColor={themeColor}\n            thresholds={thresholds}\n            title={status || labelText}\n          />\n        </ChartDonutThreshold>\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\nexport const Gauge: React.FC<GaugeProps> = ({\n  humanize = humanizePercentage,\n  invert,\n  namespace,\n  percent = 0,\n  query,\n  remainderLabel,\n  secondaryTitle,\n  thresholds,\n  title,\n  usedLabel,\n}) => {\n  const { t } = useTranslation();\n\n  const [response, error, loading] = usePrometheusPoll({\n    endpoint: PrometheusEndpoint.QUERY,\n    namespace,\n    query,\n  });\n\n  const [data] = response\n    ? getInstantVectorStats(response, null, humanize).map(({ label, y }) => ({ x: label, y }))\n    : [{ x: humanize(percent).string, y: percent }];\n  return (\n    <GaugeChart\n      data={data}\n      error={!!error && t('No data')}\n      invert={invert}\n      label={data.x}\n      loading={loading}\n      query={query}\n      remainderLabel={remainderLabel}\n      secondaryTitle={secondaryTitle}\n      thresholds={thresholds}\n      title={title}\n      usedLabel={usedLabel}\n    />\n  );\n};\n\ntype GaugeChartProps = {\n  data: DataPoint;\n  error?: string;\n  humanize?: Humanize;\n  invert?: boolean;\n  isLoaded?: boolean;\n  label?: string;\n  loading?: boolean;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  themeColor?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  usedLabel?: string;\n  className?: string;\n};\n\ntype GaugeProps = {\n  humanize?: Humanize;\n  invert?: boolean;\n  namespace?: string;\n  percent?: number;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  usedLabel?: string;\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, LabelSelector, referenceForModel, Selector } from '../../../module/k8s';\nimport { DetailsCard } from './details-card';\nimport { StatusCard } from './status-card';\nimport { UtilizationCard } from './utilization-card';\nimport { InventoryCard } from './inventory-card';\nimport { ActivityCard } from './activity-card';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { LauncherCard } from './launcher-card';\nimport { ResourceQuotaCard } from './resource-quota-card';\n\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }, { Card: ResourceQuotaCard }];\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst rightCards = [{ Card: ActivityCard }];\n\nexport const getNamespaceDashboardConsoleLinks = (\n  ns: K8sResourceKind,\n  consoleLinks: K8sResourceKind[],\n): K8sResourceKind[] => {\n  return _.filter(consoleLinks, (link: K8sResourceKind): boolean => {\n    if (link.spec.location !== 'NamespaceDashboard') {\n      return false;\n    }\n\n    const namespaces: string[] = _.get(link, 'spec.namespaceDashboard.namespaces');\n    const selector: Selector = _.get(link, 'spec.namespaceDashboard.namespaceSelector');\n\n    // If neither namespaces or selector was provided, show the link for all namespaces.\n    if (_.isEmpty(namespaces) && _.isEmpty(selector)) {\n      return true;\n    }\n\n    // Show the link if either namespaces or the selector matches this namespace.\n    if (_.includes(namespaces, ns.metadata.name)) {\n      return true;\n    }\n\n    return !_.isEmpty(selector) && new LabelSelector(selector).matches(ns);\n  });\n};\n\nexport const ProjectDashboard: React.FC<ProjectDashboardProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const namespaceLinks = getNamespaceDashboardConsoleLinks(obj, consoleLinks);\n  const context = {\n    obj,\n    namespaceLinks,\n  };\n\n  const hasNamespaceLinks = !!namespaceLinks.length;\n\n  const rc = React.useMemo(\n    () => (hasNamespaceLinks ? [{ Card: LauncherCard }, ...rightCards] : rightCards),\n    [hasNamespaceLinks],\n  );\n\n  return (\n    <>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project overview')}</title>\n        </Helmet>\n      )}\n      <ProjectDashboardContext.Provider value={context}>\n        <Dashboard>\n          <DashboardGrid mainCards={mainCards} leftCards={leftCards} rightCards={rc} />\n        </Dashboard>\n      </ProjectDashboardContext.Provider>\n    </>\n  );\n};\n\ntype ProjectDashboardProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { Divider } from '@patternfly/react-core';\nimport { ListPage } from '@console/internal/components/factory';\nimport { ProjectsTable } from '@console/internal/components/namespace';\nimport { PageHeading } from '@console/internal/components/utils';\nimport './ProjectListPage.scss';\n\nexport type ProjectListPageProps = {\n  title: string;\n  listComponent?: React.ComponentType<any>;\n  children?: React.ReactNode;\n  badge?: React.ReactNode;\n};\nconst ProjectListPage: React.FC<ProjectListPageProps> = ({\n  badge,\n  title,\n  children,\n  listComponent,\n  ...listPageProps\n}) => (\n  <div className=\"odc-project-list-page\">\n    <PageHeading title={title} badge={badge}>\n      {children}\n    </PageHeading>\n    <Divider className=\"co-divider\" />\n    <ListPage\n      {...listPageProps}\n      showTitle={false}\n      kind=\"Project\"\n      ListComponent={listComponent || ProjectsTable}\n      canCreate={false}\n      filterLabel=\"by name or display name\"\n      textFilter=\"project-name\"\n    />\n  </div>\n);\n\nexport default ProjectListPage;\n","import * as React from 'react';\nimport { AsyncComponent } from '../utils';\n\nexport const OverviewListPageLoader = () =>\n  import('./OverviewListPage' /* webpackChunkName: \"overview-list-page\" */).then(\n    (m) => m.OverviewListPage,\n  );\n\nexport const OverviewListPage: React.FC = (props) => {\n  return <AsyncComponent loader={OverviewListPageLoader} {...props} />;\n};\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle, Button } from '@patternfly/react-core';\nimport DetailsBody from '@console/shared/src/components/dashboard/details-card/DetailsBody';\nimport { OverviewDetailItem } from '@openshift-console/plugin-shared/src';\nimport { getName, getRequester, GreenCheckCircleIcon } from '@console/shared';\nimport { LabelList, resourcePathFromModel } from '../../utils';\nimport { ProjectModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { Link } from 'react-router-dom-v5-compat';\n\nexport const DetailsCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const keys = _.keys(obj.metadata.labels).sort();\n  const labelsSubset = _.take(keys, 3);\n  const firstThreelabels = _.pick(obj.metadata.labels, labelsSubset);\n  const description = obj.metadata.annotations?.['openshift.io/description'];\n  const detailsLink = `${resourcePathFromModel(ProjectModel, obj.metadata.name)}/details`;\n  const serviceMeshEnabled = obj.metadata?.labels?.['maistra.io/member-of'];\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"details-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={detailsLink} data-test=\"details-card-view-all\">\n                {t('public~View all')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Details')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <DetailsBody>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Name')}>\n            {getName(obj)}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Requester')}>\n            {getRequester(obj) || <span className=\"text-muted\">{t('public~No requester')}</span>}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Labels')}>\n            <div className=\"co-project-dashboard__details-labels\">\n              <LabelList kind={ProjectModel.kind} labels={firstThreelabels} />\n              {keys.length > 3 && (\n                <Button variant=\"link\">\n                  <Link to={detailsLink}>{t('public~View all')}</Link>\n                </Button>\n              )}\n            </div>\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Description')}>\n            <span\n              className={cx({\n                'text-muted': !description,\n                'co-project-dashboard-details-card__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </span>\n          </OverviewDetailItem>\n          {serviceMeshEnabled && (\n            <OverviewDetailItem isLoading={!obj} title={t('public~Service mesh')}>\n              <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n            </OverviewDetailItem>\n          )}\n        </DetailsBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle, Gallery } from '@patternfly/react-core';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport { Status } from '@console/shared';\nimport { LoadingInline } from '@console/internal/components/utils/status-box';\nimport {\n  DashboardsOverviewHealthResourceSubsystem,\n  DashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthSubsystem,\n  useExtensions,\n} from '@console/plugin-sdk';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceHealthItem } from '../dashboards-page/cluster-dashboard/health-item';\n\nimport { DashboardAlerts } from '../dashboards-page/cluster-dashboard/status-card';\n\nexport const StatusCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const filterSubsystems = (subsystems: DashboardsOverviewHealthSubsystem[]) =>\n    subsystems.filter(isDashboardsOverviewHealthResourceSubsystem);\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const subsystem: DashboardsOverviewHealthResourceSubsystem = React.useMemo(\n    () =>\n      filterSubsystems(subsystemExtensions).find(\n        (s) => s.properties.title === 'Image Vulnerabilities',\n      ),\n    [subsystemExtensions],\n  );\n  const {\n    metadata: { name: namespace },\n  } = obj;\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"status-card\" className=\"co-overview-card--gradient\">\n      <CardHeader>\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      {obj ? (\n        <>\n          <HealthBody>\n            <Gallery className=\"co-overview-status__health\" hasGutter>\n              <div className=\"co-status-card__health-item\" data-test=\"project-status\">\n                <Status status={obj.status?.phase} className=\"co-icon-and-text--lg\" />\n              </div>\n              {subsystem && (\n                <ResourceHealthItem subsystem={subsystem.properties} namespace={namespace} />\n              )}\n            </Gallery>\n          </HealthBody>\n          <DashboardAlerts labelSelector={{ namespace }} />\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport {\n  isProjectOverviewUtilizationItem,\n  ProjectOverviewUtilizationItem,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeDecimalBytesPerSec,\n  humanizeNumber,\n} from '../../utils';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  getUtilizationQueries,\n  ProjectQueries,\n  getMultilineQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport {\n  PrometheusUtilizationItem,\n  PrometheusMultilineUtilizationItem,\n} from '../dashboards-page/cluster-dashboard/utilization-card';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport {\n  CPUPopover,\n  FilesystemPopover,\n  MemoryPopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  ProjectUtilizationContext,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const UtilizationCard: React.FC = () => {\n  const { t } = useTranslation();\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = obj?.metadata?.name;\n  const [queries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(projectName), getMultilineQueries(projectName)],\n    [projectName],\n  );\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ProjectOverviewUtilizationItem>(\n    isProjectOverviewUtilizationItem,\n  );\n\n  return (\n    <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <UtilizationDurationDropdown />\n            </>\n          ),\n          hasNoOffset: false,\n          className: undefined,\n        }}\n      >\n        <CardTitle>{t('public~Utilization')}</CardTitle>\n      </CardHeader>\n      <UtilizationBody>\n        <ProjectUtilizationContext.Provider value={projectName}>\n          <PrometheusUtilizationItem\n            title={t('public~CPU')}\n            humanizeValue={humanizeCpuCores}\n            utilizationQuery={queries[ProjectQueries.CPU_USAGE]}\n            requestQuery={queries[ProjectQueries.CPU_REQUESTS]}\n            TopConsumerPopover={CPUPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Memory')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.MEMORY_USAGE]}\n            requestQuery={queries[ProjectQueries.MEMORY_REQUESTS]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={MemoryPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Filesystem')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.FILESYSTEM_USAGE]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={FilesystemPopover}\n            namespace={projectName}\n          />\n          <PrometheusMultilineUtilizationItem\n            title={t('public~Network transfer')}\n            humanizeValue={humanizeDecimalBytesPerSec}\n            queries={multilineQueries[ProjectQueries.NETWORK_UTILIZATION]}\n            TopConsumerPopovers={networkPopovers}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Pod count')}\n            humanizeValue={humanizeNumber}\n            utilizationQuery={queries[ProjectQueries.POD_COUNT]}\n            namespace={projectName}\n          />\n          {dynamicItemExtensions.map(({ uid, properties }) => (\n            <PrometheusUtilizationItem\n              key={uid}\n              title={properties.title}\n              humanizeValue={properties.humanize}\n              utilizationQuery={properties.getUtilizationQuery(projectName)}\n              requestQuery={properties.getRequestQuery?.(projectName)}\n              limitQuery={properties.getLimitQuery?.(projectName)}\n              totalQuery={properties.getTotalQuery?.(projectName)}\n              namespace={projectName}\n              TopConsumerPopover={properties.TopConsumerPopover}\n            />\n          ))}\n        </ProjectUtilizationContext.Provider>\n      </UtilizationBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport {\n  getTop25ConsumerQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport { ProjectModel, PodModel, NodeModel } from '../../../../models';\nimport {\n  humanizeCpuCores,\n  humanizeBinaryBytes,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils';\n\nexport const ClusterUtilizationContext = React.createContext('.+');\n\nconst useConsumers = (\n  nsQuery: OverviewQuery,\n  podQuery: OverviewQuery,\n  nodeQuery: OverviewQuery,\n) => {\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  return React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[nsQuery],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[podQuery],\n        model: PodModel,\n        metric: 'pod',\n      },\n      {\n        query: consumerQueries[nodeQuery],\n        model: NodeModel,\n        metric: 'instance',\n      },\n    ];\n  }, [nodeQuery, nodeType, nsQuery, podQuery]);\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_CPU,\n    OverviewQuery.PODS_BY_CPU,\n    OverviewQuery.NODES_BY_CPU,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeCpuCores}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_MEMORY,\n    OverviewQuery.PODS_BY_MEMORY,\n    OverviewQuery.NODES_BY_MEMORY,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const StoragePopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_STORAGE,\n    OverviewQuery.PODS_BY_STORAGE,\n    OverviewQuery.NODES_BY_STORAGE,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const PodPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  const consumers = React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[OverviewQuery.PROJECTS_BY_PODS],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[OverviewQuery.NODES_BY_PODS],\n        model: NodeModel,\n        metric: 'node',\n      },\n    ];\n  }, [nodeType]);\n  return (\n    <ConsumerPopover\n      title={t('public~Pod count')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeNumber}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_IN,\n    OverviewQuery.PODS_BY_NETWORK_IN,\n    OverviewQuery.NODES_BY_NETWORK_IN,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_OUT,\n    OverviewQuery.PODS_BY_NETWORK_OUT,\n    OverviewQuery.NODES_BY_NETWORK_OUT,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport {\n  ProjectQueries,\n  getTopConsumerQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport { PodModel } from '../../../models';\nimport { humanizeCpuCores, humanizeBinaryBytes, humanizeDecimalBytesPerSec } from '../../utils';\n\nexport const ProjectUtilizationContext = React.createContext('');\n\nconst useConsumers = (query: ProjectQueries) => {\n  const namespace = React.useContext(ProjectUtilizationContext);\n  const consumers = React.useMemo(\n    () => [\n      {\n        query: getTopConsumerQueries(namespace)[query],\n        model: PodModel,\n        metric: 'pod',\n      },\n    ],\n    [query, namespace],\n  );\n  return {\n    consumers,\n    namespace,\n  };\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_CPU);\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      humanize={humanizeCpuCores}\n      {...consumers}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_MEMORY);\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const FilesystemPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_FILESYSTEM);\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_IN);\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_OUT);\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport {\n  PodModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  PersistentVolumeClaimModel,\n  ServiceModel,\n  StatefulSetModel,\n  RouteModel,\n  ConfigMapModel,\n  SecretModel,\n  VolumeSnapshotModel,\n} from '../../../models';\nimport {\n  ResourceInventoryItem,\n  StatusGroupMapper,\n} from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport {\n  getPodStatusGroups,\n  getPVCStatusGroups,\n  getVSStatusGroups,\n} from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { FirehoseResult, FirehoseResource, useAccessReview } from '../../utils';\nimport { K8sKind, referenceForModel } from '../../../module/k8s';\nimport { getName } from '@console/shared';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  useExtensions,\n  ProjectDashboardInventoryItem,\n  isProjectDashboardInventoryItem,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsProjectOverviewInventoryItem as DynamicProjectDashboardInventoryItem,\n  isDashboardsProjectOverviewInventoryItem as isDynamicProjectDashboardInventoryItem,\n  K8sResourceCommon,\n  WatchK8sResources,\n  ProjectOverviewInventoryItem,\n  isProjectOverviewInventoryItem,\n} from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\n\nconst createFirehoseResource = (model: K8sKind, projectName: string): FirehoseResource => ({\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  isList: true,\n  prop: 'resource',\n  namespace: projectName,\n});\n\nconst ProjectInventoryItem = withDashboardResources(\n  ({\n    projectName,\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    model,\n    mapper,\n    additionalResources,\n    additionalDynamicResources,\n  }: ProjectInventoryItemProps) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const resource = createFirehoseResource(model, projectName);\n        watchK8sResource(resource);\n        if (additionalResources) {\n          additionalResources.forEach((r) => watchK8sResource({ ...r, namespace: projectName }));\n        }\n        return () => {\n          stopWatchK8sResource(resource);\n          if (additionalResources) {\n            additionalResources.forEach(stopWatchK8sResource);\n          }\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName, model, additionalResources]);\n\n    const resourceData = _.get(resources.resource, 'data', []) as FirehoseResult['data'];\n    const resourceLoaded = _.get(resources.resource, 'loaded');\n    const resourceLoadError = _.get(resources.resource, 'loadError');\n\n    const additionalResourcesData = additionalResources\n      ? additionalResources.reduce((acc, r) => {\n          acc[r.prop] = _.get(resources[r.prop], 'data');\n          return acc;\n        }, {})\n      : {};\n    const additionalResourcesLoaded = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .every((r) => _.get(resources[r.prop], 'loaded'))\n      : true;\n    const additionalResourcesLoadError = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .some((r) => !!_.get(resources[r.prop], 'loadError'))\n      : false;\n\n    const dynamicResources = useK8sWatchResources(additionalDynamicResources || {});\n    const dynamicResourcesError = Object.values(dynamicResources).find((r) => r.loadError)\n      ?.loadError;\n    const dynamicResourcesLoaded = Object.keys(dynamicResources).every(\n      (key) => dynamicResources[key].loaded,\n    );\n\n    return (\n      <StackItem>\n        <ResourceInventoryItem\n          kind={model}\n          isLoading={\n            !projectName || !resourceLoaded || !additionalResourcesLoaded || !dynamicResourcesLoaded\n          }\n          namespace={projectName}\n          error={!!resourceLoadError || additionalResourcesLoadError || dynamicResourcesError}\n          resources={resourceData}\n          additionalResources={additionalResourcesData}\n          mapper={mapper}\n          dataTest=\"resource-inventory-item\"\n        />\n      </StackItem>\n    );\n  },\n);\n\nexport const InventoryCard = () => {\n  const itemExtensions = useExtensions<ProjectDashboardInventoryItem>(\n    isProjectDashboardInventoryItem,\n  );\n  const [dynamicItemExtensions] = useResolvedExtensions<DynamicProjectDashboardInventoryItem>(\n    isDynamicProjectDashboardInventoryItem,\n  );\n  const [inventoryExtensions] = useResolvedExtensions<ProjectOverviewInventoryItem>(\n    isProjectOverviewInventoryItem,\n  );\n\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    namespace: projectName,\n    verb: 'list',\n  });\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"inventory-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Inventory')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Stack hasGutter>\n          <ProjectInventoryItem projectName={projectName} model={DeploymentModel} />\n          <ProjectInventoryItem projectName={projectName} model={DeploymentConfigModel} />\n          <ProjectInventoryItem projectName={projectName} model={StatefulSetModel} />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PodModel}\n            mapper={getPodStatusGroups}\n          />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PersistentVolumeClaimModel}\n            mapper={getPVCStatusGroups}\n          />\n          <ProjectInventoryItem projectName={projectName} model={ServiceModel} />\n          <ProjectInventoryItem projectName={projectName} model={RouteModel} />\n          <ProjectInventoryItem projectName={projectName} model={ConfigMapModel} />\n          {canListSecrets && <ProjectInventoryItem projectName={projectName} model={SecretModel} />}\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={VolumeSnapshotModel}\n            mapper={getVSStatusGroups}\n          />\n          {itemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalResources={item.properties.additionalResources}\n            />\n          ))}\n          {dynamicItemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalDynamicResources={item.properties.additionalResources}\n            />\n          ))}\n          {inventoryExtensions.map(({ uid, properties: { component: Component } }) => (\n            <ErrorBoundary key={uid}>\n              <StackItem>\n                <Component projectName={projectName} />\n              </StackItem>\n            </ErrorBoundary>\n          ))}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\ntype ProjectInventoryItemProps = DashboardItemProps & {\n  projectName: string;\n  model: K8sKind;\n  mapper?: StatusGroupMapper;\n  additionalResources?: FirehoseResource[];\n  additionalDynamicResources?: WatchK8sResources<{\n    [key: string]: K8sResourceCommon[];\n  }>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport ActivityBody, {\n  RecentEventsBody,\n  OngoingActivityBody,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { FirehoseResource, FirehoseResult } from '../../utils';\nimport { EventModel } from '../../../models';\nimport { EventKind, K8sKind } from '../../../module/k8s';\nimport {\n  useExtensions,\n  DashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsOverviewResourceActivity as DynamicDashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity as isDynamicDashboardsOverviewResourceActivity,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { uniqueResource } from '../dashboards-page/cluster-dashboard/utils';\nimport { RootState } from '../../../redux';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { getName } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\nconst getEventsResource = (projectName: string): FirehoseResource => ({\n  isList: true,\n  kind: EventModel.kind,\n  prop: 'events',\n  namespace: projectName,\n});\n\nconst RecentEvent = withDashboardResources<RecentEventProps>(\n  ({ watchK8sResource, stopWatchK8sResource, resources, projectName, viewEvents }) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const eventsResource = getEventsResource(projectName);\n        watchK8sResource(eventsResource);\n        return () => {\n          stopWatchK8sResource(eventsResource);\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName]);\n    return (\n      <RecentEventsBody\n        events={resources.events as FirehoseResult<EventKind[]>}\n        moreLink={viewEvents}\n      />\n    );\n  },\n);\n\nconst mapStateToProps = (state: RootState): OngoingActivityReduxProps => ({\n  models: state.k8s.getIn(['RESOURCES', 'models']) as ImmutableMap<string, K8sKind>,\n});\n\nconst OngoingActivity = connect(mapStateToProps)(\n  withDashboardResources(\n    ({\n      watchK8sResource,\n      stopWatchK8sResource,\n      resources,\n      projectName,\n      models,\n    }: DashboardItemProps & OngoingActivityProps) => {\n      const resourceActivityExtensions = useExtensions<DashboardsOverviewResourceActivity>(\n        isDashboardsOverviewResourceActivity,\n      );\n      const [dynamicResourceActivityExtensions] = useResolvedExtensions<\n        DynamicDashboardsOverviewResourceActivity\n      >(isDynamicDashboardsOverviewResourceActivity);\n\n      const resourceActivities = React.useMemo(\n        () =>\n          [...resourceActivityExtensions, ...dynamicResourceActivityExtensions].filter((e) => {\n            const model = models.get(e.properties.k8sResource.kind);\n            return model && model.namespaced;\n          }),\n        [resourceActivityExtensions, dynamicResourceActivityExtensions, models],\n      );\n\n      React.useEffect(() => {\n        if (projectName) {\n          resourceActivities.forEach((a, index) => {\n            watchK8sResource(\n              uniqueResource({ ...a.properties.k8sResource, namespace: projectName }, index),\n            );\n          });\n          return () => {\n            resourceActivities.forEach((a, index) => {\n              stopWatchK8sResource(uniqueResource(a.properties.k8sResource, index));\n            });\n          };\n        }\n      }, [watchK8sResource, stopWatchK8sResource, projectName, resourceActivities]);\n\n      const allResourceActivities = React.useMemo(\n        () =>\n          _.flatten(\n            resourceActivities.map((a, index) => {\n              const k8sResources = _.get(\n                resources,\n                [uniqueResource(a.properties.k8sResource, index).prop, 'data'],\n                [],\n              ) as FirehoseResult['data'];\n              return k8sResources\n                .filter((r) => (a.properties.isActivity ? a.properties.isActivity(r) : true))\n                .map((r) => ({\n                  resource: r,\n                  timestamp: a.properties.getTimestamp ? a.properties.getTimestamp(r) : null,\n                  loader: (a as DashboardsOverviewResourceActivity)?.properties?.loader,\n                  component: (a as ResolvedExtension<DynamicDashboardsOverviewResourceActivity>)\n                    ?.properties?.component,\n                }));\n            }),\n          ),\n        [resourceActivities, resources],\n      );\n\n      const resourcesLoaded = React.useMemo(\n        () =>\n          resourceActivities.every((a, index) =>\n            _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'loaded']),\n          ),\n        [resourceActivities, resources],\n      );\n\n      return (\n        <OngoingActivityBody\n          loaded={projectName && resourcesLoaded && models.size !== 0}\n          resourceActivities={allResourceActivities}\n        />\n      );\n    },\n  ),\n);\n\nexport const ActivityCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const viewEvents = `/k8s/ns/${projectName}/events`;\n  const { t } = useTranslation();\n  return (\n    <Card\n      data-test-id=\"activity-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={viewEvents} data-test=\"view-events-link\">\n                {t('public~View events')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Activity')}</CardTitle>\n      </CardHeader>\n      <ActivityBody className=\"co-project-dashboard__activity-body\">\n        <OngoingActivity projectName={projectName} />\n        <RecentEvent projectName={projectName} viewEvents={viewEvents} />\n      </ActivityBody>\n    </Card>\n  );\n};\n\ntype RecentEventProps = DashboardItemProps & {\n  projectName: string;\n  viewEvents: string;\n};\n\ntype OngoingActivityReduxProps = {\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype OngoingActivityProps = OngoingActivityReduxProps & {\n  projectName: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle } from '@patternfly/react-core';\nimport LauncherBody from '@console/shared/src/components/dashboard/launcher-card/LauncherBody';\nimport LauncherItem from '@console/shared/src/components/dashboard/launcher-card/LauncherItem';\nimport { ProjectDashboardContext } from './project-dashboard-context';\n\nexport const LauncherCard: React.FC = () => {\n  const { namespaceLinks } = React.useContext(ProjectDashboardContext);\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"launcher-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Launcher')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <LauncherBody>\n          {_.sortBy(namespaceLinks, 'spec.text').map((nl) => (\n            <LauncherItem key={nl.metadata.uid} consoleLink={nl} />\n          ))}\n        </LauncherBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\n\nimport './launcher-card.scss';\n\nconst LauncherBody: React.FC = ({ children }) => (\n  <div className=\"co-launcher-card__body\">{children}</div>\n);\n\nexport default LauncherBody;\n","import * as React from 'react';\nimport { ExternalLink } from '@console/internal/components/utils/link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nconst LauncherItem: React.FC<LauncherItemProps> = ({ consoleLink }) => (\n  <ExternalLink\n    additionalClassName=\"co-launcher-card__item\"\n    href={consoleLink.spec.href}\n    text={consoleLink.spec.text}\n    dataTestID=\"launcher-item\"\n  />\n);\n\nexport default LauncherItem;\n\ntype LauncherItemProps = {\n  consoleLink: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport ResourceQuotaBody from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody';\nimport ResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem';\nimport AppliedClusterResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem';\nimport { AppliedClusterResourceQuotaModel, ResourceQuotaModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceQuotaKind, AppliedClusterResourceQuotaKind } from '../../../module/k8s';\n\nexport const ResourceQuotaCard = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n\n  const [quotas, rqLoaded, rqLoadError] = useK8sWatchResource<ResourceQuotaKind[]>({\n    groupVersionKind: {\n      kind: ResourceQuotaModel.kind,\n      version: ResourceQuotaModel.apiVersion,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const [clusterQuotas, acrqLoaded, acrqLoadError] = useK8sWatchResource<\n    AppliedClusterResourceQuotaKind[]\n  >({\n    groupVersionKind: {\n      kind: AppliedClusterResourceQuotaModel.kind,\n      version: AppliedClusterResourceQuotaModel.apiVersion,\n      group: AppliedClusterResourceQuotaModel.apiGroup,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"resource-quotas-card\">\n      <CardHeader>\n        <CardTitle>{t('public~ResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody error={!!rqLoadError} isLoading={!rqLoaded}>\n          {quotas.length ? (\n            <Stack hasGutter>\n              {quotas.map((rq) => (\n                <StackItem key={rq.metadata.uid}>\n                  <ResourceQuotaItem resourceQuota={rq} />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n      <CardHeader>\n        <CardTitle>{t('public~AppliedClusterResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody\n          error={!!acrqLoadError}\n          isLoading={!acrqLoaded}\n          noText={t('public~No AppliedClusterResourceQuotas')}\n        >\n          {clusterQuotas.length ? (\n            <Stack hasGutter>\n              {clusterQuotas.map((cq) => (\n                <StackItem key={cq.metadata.uid}>\n                  <AppliedClusterResourceQuotaItem\n                    resourceQuota={cq}\n                    namespace={obj.metadata.name}\n                  />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './resource-quota-card.scss';\n\nconst ResourceQuotaBody: React.FC<ResourceQuotaBodyProps> = ({\n  error,\n  isLoading,\n  noText,\n  children,\n}) => {\n  let body: React.ReactNode;\n  const { t } = useTranslation();\n  if (error) {\n    body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n  } else if (isLoading) {\n    body = <div className=\"skeleton-quota\" />;\n  } else if (!React.Children.count(children)) {\n    body = <div className=\"text-secondary\">{noText || t('console-shared~No ResourceQuotas')}</div>;\n  }\n\n  return <>{body || children}</>;\n};\n\nexport default ResourceQuotaBody;\n\ntype ResourceQuotaBodyProps = {\n  error: boolean;\n  isLoading: boolean;\n  noText?: string;\n};\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { ResourceQuotaModel } from '@console/internal/models';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst ResourceQuotaItem: React.FC<ResourceQuotaItemProps> = ({ resourceQuota }) => {\n  const resources = Object.keys(resourceQuota.status?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n\n  const scopes = resourceQuota.spec?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: ResourceQuotaModel.kind,\n                  version: ResourceQuotaModel.apiVersion,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={resourceQuota.metadata.namespace}\n                inline\n                truncate\n                dataTest=\"resource-quota-link\"\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary hard={resourceQuota.status?.hard} used={resourceQuota.status?.used} />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <ResourceQuotaCharts resourceQuota={resourceQuota} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ResourceQuotaItem;\n\ntype ResourceQuotaItemProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { ClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ClusterResourceQuotaChartsProps = {\n  clusterResourceQuota: ClusterResourceQuotaKind;\n};\n\nconst ClusterResourceQuotaCharts = ({\n  clusterResourceQuota,\n}: ClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(clusterResourceQuota.status?.total?.hard ?? {}).map((resourceName) => {\n    const clusterHard = clusterResourceQuota.status.total.hard[resourceName];\n    const clusterUsed = clusterResourceQuota.status.total.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({\n      resourceName,\n      used: clusterUsed,\n      hard: clusterHard,\n    });\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Used',\n              y: percent,\n            },\n            {\n              x: 'Unused',\n              y: 100 - percent,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ClusterResourceQuotaCharts;\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { AppliedClusterResourceQuotaModel } from '@console/internal/models';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst AppliedClusterResourceQuotaItem: React.FC<AppliedClusterResourceQuotaItemProps> = ({\n  resourceQuota,\n  namespace,\n}) => {\n  const resources = Object.keys(resourceQuota.status?.total?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n  const scopes = resourceQuota?.spec?.quota?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen: boolean) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: AppliedClusterResourceQuotaModel.kind,\n                  version: AppliedClusterResourceQuotaModel.apiVersion,\n                  group: AppliedClusterResourceQuotaModel.apiGroup,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={namespace}\n                inline\n                truncate\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary\n            hard={resourceQuota.status?.total?.hard}\n            used={resourceQuota.status?.total?.used}\n          />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <AppliedClusterResourceQuotaCharts\n            appliedClusterResourceQuota={resourceQuota}\n            namespace={namespace}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AppliedClusterResourceQuotaItem;\n\ntype AppliedClusterResourceQuotaItemProps = {\n  resourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n","export const K8S_UI_SCHEMA = {\n  apiVersion: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  kind: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  spec: {\n    'ui:options': {\n      label: false,\n    },\n  },\n  status: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  'ui:order': ['metadata', 'spec', '*'],\n};\n\nexport const JSON_SCHEMA_GROUP_TYPES: string[] = ['object', 'array'];\nexport const JSON_SCHEMA_NUMBER_TYPES: string[] = ['number', 'integer'];\n\nexport const THOUSAND = 10 ** 3;\nexport const MILLION = 10 ** 6;\nexport const BILLION = 10 ** 9;\n","import * as fuzzy from 'fuzzysearch';\nimport { TFunction } from 'i18next';\nimport { loadAll, safeDump, DEFAULT_SAFE_SCHEMA } from 'js-yaml';\nimport * as _ from 'lodash';\nimport { coFetchJSON } from '@console/internal/co-fetch';\nimport { Flatten } from '@console/internal/components/factory/list-page';\nimport { RowFilter } from '@console/internal/components/filter-toolbar';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { toTitleCase, WORKLOAD_TYPES } from '@console/shared';\nimport { CHART_NAME_ANNOTATION, PROVIDER_NAME_ANNOTATION } from '../catalog/utils/const';\nimport {\n  HelmRelease,\n  HelmChart,\n  HelmReleaseStatus,\n  HelmChartMetaData,\n  HelmActionType,\n  HelmActionConfigType,\n  HelmActionOrigins,\n  HelmChartEntries,\n} from '../types/helm-types';\n\nexport const HelmReleaseStatusLabels = {\n  [HelmReleaseStatus.Deployed]: 'Deployed',\n  [HelmReleaseStatus.Failed]: 'Failed',\n  [HelmReleaseStatus.PendingInstall]: 'PendingInstall',\n  [HelmReleaseStatus.PendingUpgrade]: 'PendingUpgrade',\n  [HelmReleaseStatus.PendingRollback]: 'PendingRollback',\n  [HelmReleaseStatus.Other]: 'Other',\n};\n\nexport const SelectedReleaseStatuses = [\n  HelmReleaseStatus.Deployed,\n  HelmReleaseStatus.Failed,\n  HelmReleaseStatus.PendingInstall,\n  HelmReleaseStatus.PendingUpgrade,\n  HelmReleaseStatus.PendingRollback,\n  HelmReleaseStatus.Other,\n];\n\nexport const OtherReleaseStatuses = ['unknown', 'uninstalled', 'superseded', 'uninstalling'];\n\nexport const releaseStatus = (status: string) => {\n  if (!status) {\n    return 'Unknown';\n  }\n  return status\n    .split('-')\n    .map((s) => toTitleCase(s))\n    .join('');\n};\n\nexport const releaseStatusReducer = (release: HelmRelease) => {\n  if (OtherReleaseStatuses.includes(release.info.status)) {\n    return HelmReleaseStatus.Other;\n  }\n  return release.info.status;\n};\n\nexport const helmReleasesRowFilters = (t: TFunction): RowFilter[] => {\n  return [\n    {\n      filterGroupName: t('helm-plugin~Status'),\n      type: 'helm-release-status',\n      reducer: releaseStatusReducer,\n      items: SelectedReleaseStatuses.map((status) => ({\n        id: status,\n        title: HelmReleaseStatusLabels[status],\n      })),\n    },\n  ];\n};\n\nexport const filterHelmReleasesByStatus = (releases: HelmRelease[], filter: string | string[]) => {\n  return releases.filter((release: HelmRelease) => {\n    return OtherReleaseStatuses.includes(release.info.status)\n      ? filter.includes(HelmReleaseStatus.Other)\n      : filter.includes(release.info.status);\n  });\n};\n\nexport const filterHelmReleasesByName = (releases: HelmRelease[], filter: string) => {\n  return releases.filter((release: HelmRelease) => fuzzy(filter, release.name));\n};\n\nexport const fetchHelmReleases = (\n  namespace: string,\n  limitInfo?: boolean,\n): Promise<HelmRelease[]> => {\n  const fetchString = `/api/helm/releases?ns=${namespace}&limitInfo=${limitInfo || false}`;\n  return coFetchJSON(fetchString);\n};\n\nexport const fetchHelmRelease = (\n  namespace: string,\n  helmReleaseName: string,\n): Promise<HelmRelease> => {\n  const fetchString = `/api/helm/release?ns=${namespace}&name=${helmReleaseName}`;\n  return coFetchJSON(fetchString);\n};\n\nexport const getChartURL = (\n  helmChartData: HelmChartMetaData[],\n  chartVersion: string,\n  chartRepoName: string,\n): string => {\n  const chartData: HelmChartMetaData = helmChartData.find(\n    (obj) => obj.version === chartVersion && obj.repoName === chartRepoName,\n  );\n  return chartData?.urls[0];\n};\n\nexport const getChartRepositoryTitle = (\n  chartRepositories: K8sResourceKind[],\n  chartRepoName: string,\n) => {\n  const chartRepository = chartRepositories?.find((repo) => repo.metadata.name === chartRepoName);\n  if (chartRepository?.spec?.name) {\n    return chartRepository.spec.name;\n  }\n  if (chartRepoName) {\n    return toTitleCase(chartRepoName);\n  }\n  return null;\n};\n\nexport const getChartIndexEntry = (\n  chartEntries: HelmChartEntries,\n  chartName: string,\n  chartRepoName: string,\n) => {\n  const repoName = chartRepoName.toLowerCase().split(' ').join('-');\n  const indexEntry = Object.keys(chartEntries).find((val) =>\n    val.includes(`${chartName}--${repoName}`),\n  );\n  return indexEntry;\n};\n\nexport const getChartEntriesByName = (\n  chartEntries: HelmChartEntries,\n  chartName: string,\n  chartRepoName?: string,\n  chartRepositories?: K8sResourceKind[],\n  annotatedName?: string,\n  providerName?: string,\n): HelmChartMetaData[] => {\n  if (chartName && chartRepoName) {\n    const chartRepositoryTitle = getChartRepositoryTitle(chartRepositories, chartRepoName);\n    const indexEntry = getChartIndexEntry(chartEntries, chartName, chartRepoName);\n    return (\n      chartEntries?.[indexEntry]?.map((e) => ({\n        ...e,\n        repoName: chartRepositoryTitle,\n      })) ?? []\n    );\n  }\n  const entries = _.reduce(\n    chartEntries,\n    (acc, charts, key) => {\n      const repoName = key.split('--').pop();\n      const chartRepositoryTitle = getChartRepositoryTitle(chartRepositories, repoName);\n      charts.forEach((chart: HelmChartMetaData) => {\n        if (\n          chart.name === chartName ||\n          (annotatedName &&\n            providerName &&\n            chart?.annotations?.[CHART_NAME_ANNOTATION] === annotatedName &&\n            chart?.annotations?.[PROVIDER_NAME_ANNOTATION] === providerName)\n        ) {\n          acc.push({ ...chart, repoName: chartRepositoryTitle });\n        }\n      });\n      return acc;\n    },\n    [],\n  );\n  return entries;\n};\n\nexport const concatVersions = (\n  chartVersion: string,\n  appVersion: string,\n  t: TFunction,\n  chartRepoName?: string,\n): string => {\n  let title = chartVersion.split('--')[0];\n  if (appVersion) {\n    title += t('helm-plugin~ / App Version {{appVersion}}', { appVersion });\n  }\n  if (chartRepoName) {\n    title += t('helm-plugin~ (Provided by {{chartRepoName}})', {\n      chartRepoName: toTitleCase(chartRepoName),\n    });\n  }\n  return title;\n};\n\nexport const getChartVersions = (chartEntries: HelmChartMetaData[], t: TFunction) => {\n  const chartVersions = _.reduce(\n    chartEntries,\n    (obj, chart) => {\n      obj[`${chart.version}--${chart.repoName}`] = concatVersions(\n        chart.version,\n        chart.appVersion,\n        t,\n        chart.repoName,\n      );\n      return obj;\n    },\n    {},\n  );\n  return chartVersions;\n};\n\nexport const getOriginRedirectURL = (\n  actionOrigin: string,\n  namespace: string,\n  releaseName?: string,\n) => {\n  switch (actionOrigin) {\n    case HelmActionOrigins.topology:\n      return `/topology/ns/${namespace}`;\n    case HelmActionOrigins.list:\n      return `/helm-releases/ns/${namespace}`;\n    case HelmActionOrigins.details:\n      return `/helm-releases/ns/${namespace}/release/${releaseName}`;\n    default:\n      return `/helm-releases/ns/${namespace}`;\n  }\n};\n\nexport const getHelmActionConfig = (\n  helmAction: HelmActionType,\n  releaseName: string,\n  namespace: string,\n  t: TFunction,\n  actionOrigin?: HelmActionOrigins,\n  chartURL?: string,\n  chartIndexEntry?: string,\n): HelmActionConfigType | undefined => {\n  switch (helmAction) {\n    case HelmActionType.Create:\n      return {\n        type: HelmActionType.Create,\n        title: t('helm-plugin~Create Helm Release'),\n        subTitle: {\n          form: t(\n            'helm-plugin~The Helm Release can be created by completing the form. Default values may be provided by the Helm chart authors.',\n          ),\n          yaml: t(\n            'helm-plugin~The Helm Release can be created by manually entering YAML or JSON definitions.',\n          ),\n        },\n        helmReleaseApi: `/api/helm/chart?url=${encodeURIComponent(\n          chartURL,\n        )}&namespace=${namespace}&indexEntry=${encodeURIComponent(chartIndexEntry)}`,\n        fetch: coFetchJSON.post,\n        redirectURL: getOriginRedirectURL(HelmActionOrigins.topology, namespace, releaseName),\n      };\n    case HelmActionType.Upgrade:\n      return {\n        type: HelmActionType.Upgrade,\n        title: t('helm-plugin~Upgrade Helm Release'),\n        subTitle: {\n          form: t(\n            'helm-plugin~Upgrade by selecting a new chart version or manually changing the form values.',\n          ),\n          yaml: t(\n            'helm-plugin~Upgrade by selecting a new chart version or manually changing YAML.',\n          ),\n        },\n        helmReleaseApi: `/api/helm/release?ns=${namespace}&name=${releaseName}`,\n        fetch: coFetchJSON.put,\n        redirectURL: getOriginRedirectURL(actionOrigin, namespace, releaseName),\n      };\n\n    case HelmActionType.Rollback:\n      return {\n        type: HelmActionType.Rollback,\n        title: t('helm-plugin~Rollback Helm Release'),\n        subTitle: ``,\n        helmReleaseApi: `/api/helm/release/history?ns=${namespace}&name=${releaseName}`,\n        fetch: coFetchJSON.patch,\n        redirectURL: getOriginRedirectURL(actionOrigin, namespace, releaseName),\n      };\n    default:\n      return undefined;\n  }\n};\n\nexport const flattenReleaseResources: Flatten = (resources) =>\n  Object.keys(resources).reduce((acc, kind) => {\n    if (!_.isEmpty(resources[kind].data)) {\n      acc.push(resources[kind].data);\n    }\n    return acc;\n  }, []);\n\nexport const getChartValuesYAML = (chart: HelmChart): string => {\n  const orderedValuesFile = chart?.files?.find((file) => file.name === 'ordered-values.yaml');\n  const orderedValues = orderedValuesFile ? atob(orderedValuesFile.data) : '';\n\n  if (orderedValues) return orderedValues;\n\n  return !_.isEmpty(chart?.values) ? safeDump(chart?.values) : '';\n};\n\nexport const loadHelmManifestResources = (release: HelmRelease): K8sResourceKind[] => {\n  if (!release || !release.manifest) {\n    return [];\n  }\n  const manifests = loadAll(release.manifest, null, { schema: DEFAULT_SAFE_SCHEMA, json: true });\n  return manifests.filter(Boolean);\n};\n\nexport const getChartReadme = (chart: HelmChart): string => {\n  const readmeFile = chart?.files?.find((file) => file.name === 'README.md');\n  return (readmeFile?.data && atob(readmeFile?.data)) ?? '';\n};\n\nexport const helmActionString = (t: TFunction) => ({\n  Create: t('helm-plugin~Create'),\n  Upgrade: t('helm-plugin~Upgrade'),\n  Rollback: t('helm-plugin~Rollback'),\n});\n\nexport const fetchHelmReleaseHistory = (\n  releaseName: string,\n  namespace: string,\n): Promise<HelmRelease[]> => {\n  const helmReleaseApi: string = `/api/helm/release/history?ns=${namespace}&name=${releaseName}`;\n  return coFetchJSON(helmReleaseApi);\n};\n\nexport const isGoingToTopology = (resources: K8sResourceKind[]) =>\n  !!resources.find((resource) =>\n    WORKLOAD_TYPES.includes(_.lowerFirst(_.get(modelFor(referenceFor(resource)), 'labelPlural'))),\n  );\n","import { UiSchema } from '@rjsf/core';\nimport { getSchemaType, getUiOptions } from '@rjsf/core/dist/cjs/utils';\nimport * as Immutable from 'immutable';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { THOUSAND, MILLION, BILLION } from './const';\nimport { DynamicFormSchemaError, JSONSchemaType } from './types';\n\nconst UNSUPPORTED_SCHEMA_PROPERTIES = ['allOf', 'anyOf', 'oneOf'];\n\n// Transform a path string to a JSON schema path array\nexport const stringPathToUISchemaPath = (path: string): string[] =>\n  (_.toPath(path) ?? []).map((subPath) => {\n    return /^\\d+$/.test(subPath) ? 'items' : subPath;\n  });\n\nexport const useSchemaLabel = (schema: JSONSchema7, uiSchema: UiSchema, defaultLabel?: string) => {\n  const options = getUiOptions(uiSchema ?? {});\n  const showLabel = options?.label ?? true;\n  const label = (options?.title || schema?.title) as string;\n  return [showLabel, label || defaultLabel] as [boolean, string];\n};\n\nexport const useSchemaDescription = (\n  schema: JSONSchema7,\n  uiSchema: UiSchema,\n  defaultDescription?: string,\n) =>\n  (getUiOptions(uiSchema ?? {})?.description ||\n    schema?.description ||\n    defaultDescription) as string;\n\nexport const getSchemaErrors = (schema: JSONSchema7): DynamicFormSchemaError[] => {\n  return [\n    ...(_.isEmpty(schema)\n      ? [\n          {\n            title: 'Empty Schema',\n            message: 'Schema is empty.',\n          },\n        ]\n      : []),\n    ..._.map(\n      _.intersection(_.keys(schema), UNSUPPORTED_SCHEMA_PROPERTIES),\n      (unsupportedProperty) => ({\n        title: 'Unsupported Property',\n        message: `Cannot generate form fields for JSON schema with ${unsupportedProperty} property.`,\n      }),\n    ),\n  ];\n};\n\n// Determine if a schema will produce no form fields.\nexport const hasNoFields = (jsonSchema: JSONSchema7 = {}, uiSchema: UiSchema = {}): boolean => {\n  // If schema is empty or has unsupported properties, it will not render any fields on the form\n  if (getSchemaErrors(jsonSchema).length > 0) {\n    return true;\n  }\n\n  const type = getSchemaType(jsonSchema) ?? '';\n  const noUIFieldOrWidget = !uiSchema?.['ui:field'] && !uiSchema?.['ui:widget'];\n  switch (type) {\n    case JSONSchemaType.array:\n      return noUIFieldOrWidget && hasNoFields(jsonSchema.items as JSONSchema7, uiSchema?.items);\n    case JSONSchemaType.object:\n      return (\n        noUIFieldOrWidget &&\n        _.every(jsonSchema?.properties, (property, propertyName) =>\n          hasNoFields(property as JSONSchema7, uiSchema?.[propertyName]),\n        )\n      );\n    case JSONSchemaType.boolean:\n    case JSONSchemaType.integer:\n    case JSONSchemaType.number:\n    case JSONSchemaType.string:\n      return false;\n    default:\n      return noUIFieldOrWidget;\n  }\n};\n\n// Recursively find the minimum ui:sortOrder property found within this uiSchema or it's children.\nconst getUISortOrder = (uiSchema: UiSchema, fallback: number): number => {\n  return Number(\n    uiSchema?.['ui:sortOrder'] ??\n      _.min(\n        _.keys(uiSchema).map((key) => {\n          return !key.includes(':') && _.isObject(uiSchema?.[key])\n            ? getUISortOrder(uiSchema?.[key], fallback)\n            : fallback;\n        }),\n      ) ??\n      fallback,\n  );\n};\n\n// Return an array of dependency control field names that exist within uiSchema at the specified\n// path.\nconst getControlFieldsAtPath = (uiSchema: UiSchema, path: string[]): string[] => {\n  if (!_.isObject(uiSchema)) {\n    return [];\n  }\n  const { 'ui:dependency': dependency } = uiSchema;\n  const dependencyMatchesPath =\n    dependency && _.isEqual(dependency.controlFieldPath.slice(0, -1), path ?? []);\n  return [\n    ...(dependencyMatchesPath ? [dependency.controlFieldName] : []),\n    ..._.flatMap(uiSchema, (childUISchema) => getControlFieldsAtPath(childUISchema, path)),\n  ];\n};\n\n/**\n * Give a property name a sort wieght based on whether it has ui schema, is required, or is a\n * control field for a property with a field dependency. A lower weight means higher sort order.\n * Fields are weighted according to the following tiers:\n *  Tier 1 (negative 10^9 - 10^6 magnitude):  Required fields with ui schema\n *  Tier 2 (negative 10^9 magnitude):         Required fields without ui schema\n *  Tier 3 (negative 10^6 magnitude):         Optional fields with ui schema\n *  Tier 4 (positive 10^3 maginitude):        Control fields that don't fit any above\n *  Tier 5 (Infinity):                        All other fields\n *\n * Within each of the above tiers, fields are further weighted based on field dependency and ui\n * schema defined sort order:\n *   - Fields without dependency: base weight + ui schema sort order\n *   - Control field:             base weight + ui schema sort order * 1000\n *   - Dependent field:           control field weight + ui schema sort order\n *\n * These weight numbers are arbitrary, but spaced far enough apart to prevent collisions.\n */\nconst getJSONSchemaPropertySortWeight = (\n  property: string,\n  jsonSchema: JSONSchema7,\n  uiSchema: UiSchema,\n  currentPath?: string[],\n): number => {\n  const isRequired = (jsonSchema?.required ?? []).includes(property);\n  const propertyUISchema = uiSchema?.[property];\n\n  // All control fields that exist within uiSchema and match this path\n  const controlFields = getControlFieldsAtPath(propertyUISchema, currentPath);\n\n  // Any sibling has a dependency with this as the control field.\n  const isControlField = _.some(uiSchema, ({ 'ui:dependency': siblingDependency }) =>\n    _.isEqual(siblingDependency?.controlFieldPath, [...(currentPath ?? []), property]),\n  );\n\n  // Minimum'ui:sortOrder' for this property and it's children. Use propertyNames.length as a fallback,\n  // which ensures that properties without a \"ui:sortOrder\" have highest weight.\n  const uiSortOrder = getUISortOrder(propertyUISchema, _.keys(jsonSchema?.properties).length);\n\n  // A small offset that is added to the base weight so that control fields get sorted\n  // below other fields in the same 'tier', and allows for depenendt fields to be sorted\n  // directly after their control field.\n  const controlFieldOffset = isControlField ? uiSortOrder * THOUSAND : 0;\n\n  // Total offset to be added to base tier\n  const offset = controlFieldOffset + uiSortOrder;\n\n  // If this property or it's children have a control field at the current path, it's weight is\n  // based on the highest weight control field.\n  if (controlFields?.length) {\n    return (\n      Math.max(\n        ...controlFields.map((controlField) =>\n          getJSONSchemaPropertySortWeight(controlField, jsonSchema, uiSchema, currentPath),\n        ),\n      ) + offset\n    );\n  }\n\n  // Tier 1 = -1001000000 (negative one billion one million) + offset\n  // Tier 2 = -1000000000 (negagive one billion) + offset\n  // Tier 3 = -1000000 (negative one million) + offset\n  // Tier 4 = 0 + offset\n  // Tier 5 = Infinity\n  return (\n    // Doesn't meet any sorting criteria, set to infinity\n    (!isRequired && !propertyUISchema && !controlFieldOffset ? Infinity : 0) -\n    (isRequired ? BILLION : 0) -\n    (propertyUISchema ? MILLION : 0) +\n    offset\n  );\n};\n\n// Given a JSONSchema and associated uiSchema, create the appropriate ui schema order property.\n// Orders properties according to the following rules:\n//  - required properties with an associated ui schema come first,\n//  - required properties without an associated ui schema next,\n//  - optional fields with an associated ui schema next,\n//  - field dependency properties (control then dependent)\n//  - all other properties\nexport const getJSONSchemaOrder = (\n  jsonSchema: JSONSchema7,\n  uiSchema: UiSchema,\n  currentPath?: string[],\n) => {\n  const type = getSchemaType(jsonSchema ?? {});\n  const handleArray = () => {\n    const descendantOrder = getJSONSchemaOrder(jsonSchema?.items as JSONSchema7, uiSchema?.items, [\n      ...(currentPath ?? []),\n      'items',\n    ]);\n    return !_.isEmpty(descendantOrder) ? { items: descendantOrder } : {};\n  };\n\n  const handleObject = () => {\n    const propertyNames = _.keys(jsonSchema?.properties ?? {});\n    if (_.isEmpty(propertyNames)) {\n      return {};\n    }\n\n    const uiOrder = Immutable.Set(propertyNames)\n      .sortBy((property) =>\n        getJSONSchemaPropertySortWeight(property, jsonSchema, uiSchema, currentPath ?? []),\n      )\n      .toJS();\n\n    return {\n      ...(uiOrder.length > 1 && { 'ui:order': uiOrder }),\n      ..._.reduce(\n        jsonSchema?.properties ?? {},\n        (orderAccumulator, propertySchema, propertyName) => {\n          const descendantOrder = getJSONSchemaOrder(\n            propertySchema as JSONSchema7,\n            uiSchema?.[propertyName],\n            [...(currentPath ?? []), propertyName],\n          );\n          if (_.isEmpty(descendantOrder)) {\n            return orderAccumulator;\n          }\n          return {\n            ...orderAccumulator,\n            [propertyName]: descendantOrder,\n          };\n        },\n        {},\n      ),\n    };\n  };\n\n  switch (type) {\n    case JSONSchemaType.array:\n      return handleArray();\n    case JSONSchemaType.object:\n      return handleObject();\n    default:\n      return {};\n  }\n};\n\n// Returns true if a value is not nil and is empty\nconst definedAndEmpty = (value) => !_.isNil(value) && _.isEmpty(value);\n\n// Helper function for prune\n// TODO (jon) Make this pure\nconst pruneRecursive = (current: any, sample: any): any => {\n  const valueIsEmpty = (value, key) =>\n    _.isNil(value) ||\n    _.isNaN(value) ||\n    (_.isString(value) && _.isEmpty(value)) ||\n    (_.isObject(value) && _.isEmpty(pruneRecursive(value, sample?.[key])));\n\n  // Value should be pruned if it is empty and the correspondeing sample is not explicitly\n  // defined as an empty value.\n  const shouldPrune = (value, key) => valueIsEmpty(value, key) && !definedAndEmpty(sample?.[key]);\n\n  // Prune each property of current value that meets the pruning criteria\n  _.forOwn(current, (value, key) => {\n    if (shouldPrune(value, key)) {\n      delete current[key];\n    }\n  });\n\n  // remove any leftover undefined values from the delete operation on an array\n  if (_.isArray(current)) {\n    _.pull(current, undefined);\n  }\n\n  return current;\n};\n\n// Deeply remove all empty, NaN, null, or undefined values from an object or array. If a value meets\n// the above criteria, but the corresponding sample is explicitly defined as an empty vaolue, it\n// will not be pruned.\n// Based on https://stackoverflow.com/a/26202058/8895304\nexport const prune = (obj: any, sample?: any): any => {\n  return pruneRecursive(_.cloneDeep(obj), sample);\n};\n","import { saveAs } from 'file-saver';\nimport { safeLoad } from 'js-yaml';\n\nexport const downloadYaml = (data: BlobPart) => {\n  const blob = new Blob([data], { type: 'text/yaml;charset=utf-8' });\n  let filename = 'k8s-object.yaml';\n  try {\n    const obj = safeLoad(data);\n    if (obj.kind) {\n      filename = `${obj.kind.toLowerCase()}-${obj.metadata.name}.yaml`;\n    }\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error('Could not parse YAML file:', e);\n  }\n  saveAs(blob, filename);\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\n\nexport interface HelmRelease {\n  name: string;\n  namespace: string;\n  chart: HelmChart;\n  info: {\n    description: string;\n    deleted: string;\n    first_deployed: string;\n    last_deployed: string;\n    status: string;\n    notes: string;\n  };\n  version: number | string;\n  hooks?: object[];\n  manifest?: string;\n}\n\nexport interface HelmChart {\n  files: { name: string; data: string }[];\n  metadata: HelmChartMetaData;\n  templates: object[];\n  values: object;\n  lock?: object;\n  schema?: string;\n}\n\nexport interface HelmChartMetaData {\n  name: string;\n  version: string;\n  created?: string;\n  description?: string;\n  digest?: string;\n  apiVersion: string;\n  appVersion?: string;\n  annotations?: {\n    [key: string]: string;\n  };\n  keywords?: string[];\n  home?: string;\n  icon?: string;\n  sources?: string[];\n  maintainers?: { name: string; email?: string; url?: string }[];\n  dependencies?: object[];\n  type?: string;\n  urls: string[];\n  kubeVersion?: string;\n  repoName?: string;\n}\n\nexport type HelmChartEntries = {\n  [name: string]: HelmChartMetaData[];\n};\n\nexport interface HelmReleaseResourcesData {\n  releaseName: string;\n  releaseVersion: number | string;\n  chartIcon: string;\n  manifestResources: K8sResourceKind[];\n  releaseNotes: string;\n  status: string;\n}\n\nexport interface HelmReleaseResourcesMap {\n  [name: string]: HelmReleaseResourcesData;\n}\n\nexport enum HelmReleaseStatus {\n  Deployed = 'deployed',\n  Failed = 'failed',\n  PendingInstall = 'pending-install',\n  PendingUpgrade = 'pending-upgrade',\n  PendingRollback = 'pending-rollback',\n  Other = 'other',\n}\n\nexport enum HelmActionType {\n  Create = 'Create',\n  Upgrade = 'Upgrade',\n  Rollback = 'Rollback',\n}\n\nexport interface HelmActionConfigType {\n  type: HelmActionType;\n  title: string;\n  subTitle: string | { form: string; yaml: string };\n  helmReleaseApi: string;\n  fetch: (url: string, json: any, options?: {}, timeout?: number) => Promise<any>;\n  redirectURL: string;\n}\n\nexport enum HelmActionOrigins {\n  details = 'details',\n  list = 'list',\n  topology = 'topology',\n}\n\nexport interface HelmChartRepositoryType {\n  apiVersion: string;\n  kind: string;\n  metadata: {\n    name: string;\n    namespace?: string;\n    labels?: { [key: string]: string };\n    annotations?: { [key: string]: string };\n  };\n  spec: {\n    connectionConfig: {\n      url: string;\n      ca?: { name: string };\n      tlsClientConfig?: { name: string };\n    };\n    description?: string;\n    disabled?: boolean;\n    name?: string;\n  };\n}\n\nexport interface HelmChartRepositoryFormData {\n  repoName: string;\n  repoUrl: string;\n  repoDisplayName?: string;\n  scope: string;\n  repoDescription?: string;\n  ca?: string;\n  tlsClientConfig?: string;\n  disabled?: boolean;\n  metadata?: object;\n}\n\nexport interface HelmChartRepositoryData {\n  editorType: string;\n  yamlData: string;\n  formData: HelmChartRepositoryFormData;\n  formReloadCount?: number;\n}\n","export enum JSONSchemaType {\n  string = 'string',\n  number = 'number',\n  integer = 'integer',\n  boolean = 'boolean',\n  null = 'null',\n  array = 'array',\n  object = 'object',\n}\n\nexport type DynamicFormFieldOptionsList = {\n  label: string;\n  value: string;\n}[];\n\nexport type DynamicFormFieldDependency = {\n  controlFieldPath: string;\n  controlFieldValue: string;\n  controlFieldName: string;\n};\n\nexport type UiSchemaOptionsWithDependency = {\n  dependency?: DynamicFormFieldDependency;\n};\n\nexport type DynamicFormSchemaError = {\n  title: string;\n  message: string;\n};\n","// Annotation for human readable chart name, ready to be displayed in UI\nexport const CHART_NAME_ANNOTATION = 'charts.openshift.io/name';\n// Annotation for chart category, e.g. redhat, partner, community\nexport const PROVIDER_TYPE_ANNOTATION = 'charts.openshift.io/providerType';\n// Annotation for provider name, e.g. Fortanix, HashiCorp, etc\nexport const PROVIDER_NAME_ANNOTATION = 'charts.openshift.io/provider';\n// Annotation for support URL by the provider\nexport const SUPPORT_URL_ANNOTATION = 'charts.openshift.io/supportURL';\n\nexport enum PROVIDER_TYPE {\n  redhat = 'redhat',\n  partner = 'partner',\n  community = 'community',\n}\n\nexport const PROVIDER_TYPE_KEYS = {\n  // t('helm-plugin~Community')\n  community: 'helm-plugin~Community',\n  // t('helm-plugin~Partner')\n  partner: 'helm-plugin~Partner',\n  // t('helm-plugin~Red Hat')\n  redhat: 'helm-plugin~Red Hat',\n};\n","export const FLAG_OPENSHIFT_HELM = 'OPENSHIFT_HELM';\nexport const FLAG_HELM_CHARTS_CATALOG_TYPE = 'HELM_CHARTS_CATALOG_TYPE';\nexport const HELM_CHART_CATALOG_TYPE_ID = 'HelmChart';\nexport const HELM_CHART_ACTION_ID = 'helm';\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\n\nconst HelmReleaseNotesEmptyState: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateHeader\n        titleText={<>{t('helm-plugin~No release notes available')}</>}\n        icon={<EmptyStateIcon icon={InfoCircleIcon} />}\n        headingLevel=\"h2\"\n      />\n      <EmptyStateBody>\n        {t('helm-plugin~Release notes are not available for this Helm Chart.')}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default HelmReleaseNotesEmptyState;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceSummary } from '@console/internal/components/utils/details-page';\nimport { SectionHeading } from '@console/internal/components/utils/headings';\nimport { K8sResourceKind } from '@console/internal/module/k8s/types';\nimport { HelmRelease } from '../../../types/helm-types';\nimport HelmChartSummary from './HelmChartSummary';\n\nexport interface HelmReleaseOverviewProps {\n  obj: K8sResourceKind;\n  customData: HelmRelease;\n}\n\nconst HelmReleaseOverview: React.FC<HelmReleaseOverviewProps> = ({ obj, customData }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('helm-plugin~Helm Release details')} />\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={obj} customPathName={'metadata.labels.name'} />\n        </div>\n        <div className=\"col-sm-6\">\n          <HelmChartSummary helmRelease={customData} obj={obj} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelmReleaseOverview;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Timestamp } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { HelmRelease } from '../../../types/helm-types';\nimport { HelmReleaseStatusLabels, releaseStatus } from '../../../utils/helm-utils';\n\ninterface HelmChartSummaryProps {\n  obj: K8sResourceKind;\n  helmRelease: HelmRelease;\n}\n\nconst HelmChartSummary: React.FC<HelmChartSummaryProps> = ({ obj, helmRelease }) => {\n  const { t } = useTranslation();\n  if (!helmRelease) return null;\n\n  const {\n    chart: {\n      metadata: { name: chartName, version: chartVersion, appVersion },\n    },\n    info: { last_deployed: updated },\n  } = helmRelease;\n\n  const {\n    metadata: {\n      labels: { version: revision },\n    },\n  } = obj;\n\n  return (\n    <dl className=\"co-m-pane__details\">\n      <dt>{t('helm-plugin~Status')}</dt>\n      <dd data-test=\"helm-release-status-details\">\n        <Status\n          status={releaseStatus(helmRelease?.info?.status)}\n          title={HelmReleaseStatusLabels[helmRelease?.info?.status]}\n        />\n      </dd>\n      <dt>{t('helm-plugin~Chart name')}</dt>\n      <dd>{chartName}</dd>\n      <dt>{t('helm-plugin~Chart version')}</dt>\n      <dd>{chartVersion}</dd>\n      <dt>{t('helm-plugin~App version')}</dt>\n      <dd>{appVersion || '-'}</dd>\n      <dt>{t('helm-plugin~Revision')}</dt>\n      <dd>{revision}</dd>\n      <dt>{t('helm-plugin~Updated')}</dt>\n      <dd>\n        <Timestamp timestamp={updated} />\n      </dd>\n    </dl>\n  );\n};\n\nexport default HelmChartSummary;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageHeading } from '@console/internal/components/utils';\nimport HelmReleaseList from './HelmReleaseList';\n\nconst HelmReleaseListPage: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div>\n      <PageHeading title={t('helm-plugin~Helm Releases')} />\n      <HelmReleaseList />\n    </div>\n  );\n};\n\nexport default HelmReleaseListPage;\n","export { NamespaceRedirect } from '@console/internal/components/utils/namespace-redirect';\nexport { default as HelmInstallUpgradePage } from './forms/install-upgrade/HelmInstallUpgradePage';\nexport { default as HelmReleaseRollbackPage } from './forms/rollback/HelmReleaseRollbackPage';\nexport { default as HelmReleaseDetailsPage } from './details-page/HelmReleaseDetailsPage';\nexport { default as HelmReleaseListPage } from './list-page/HelmReleaseListPage';\nexport { default as HelmChartRepositoryForm } from './forms/HelmChartRepository/CreateHelmChartRepositoryPage';\nexport { default as ProjectHelmChartRepositoryListPage } from './list-page/ProjectHelmChartRepositoryListPage';\nexport { default as HelmChartRepositoryListPage } from './list-page/HelmChartRepositoryListPage';\nexport { default as HelmTabbedPage } from './list-page/HelmTabbedPage';\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { safeDump, safeLoad } from 'js-yaml';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { coFetchJSON } from '@console/internal/co-fetch';\nimport { history, LoadingBox } from '@console/internal/components/utils';\nimport { prune } from '@console/shared/src/components/dynamic-form/utils';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { CHART_NAME_ANNOTATION, PROVIDER_NAME_ANNOTATION } from '../../../catalog/utils/const';\nimport {\n  HelmActionType,\n  HelmChart,\n  HelmRelease,\n  HelmActionConfigType,\n  HelmActionOrigins,\n} from '../../../types/helm-types';\nimport {\n  getHelmActionConfig,\n  getChartValuesYAML,\n  getChartReadme,\n  fetchHelmRelease,\n  loadHelmManifestResources,\n  isGoingToTopology,\n} from '../../../utils/helm-utils';\nimport { getHelmActionValidationSchema } from '../../../utils/helm-validation-utils';\nimport HelmChartMetaDescription from './HelmChartMetaDescription';\nimport HelmInstallUpgradeForm, { HelmInstallUpgradeFormData } from './HelmInstallUpgradeForm';\n\nconst HelmInstallUpgradePage: React.FunctionComponent = () => {\n  const location = useLocation();\n  const params = useParams();\n  const searchParams = new URLSearchParams(location.search);\n\n  const namespace = params.ns || searchParams.get('preselected-ns');\n  const initialChartURL = searchParams.get('chartURL');\n  const indexEntry = searchParams.get('indexEntry');\n  const initialReleaseName = params.releaseName || '';\n  const helmChartName = searchParams.get('chartName');\n  const helmChartRepoName = searchParams.get('chartRepoName');\n  const helmActionOrigin = searchParams.get('actionOrigin') as HelmActionOrigins;\n\n  const { t } = useTranslation();\n  const [chartData, setChartData] = React.useState<HelmChart>(null);\n  const [chartName, setChartName] = React.useState<string>('');\n  const [chartVersion, setChartVersion] = React.useState<string>('');\n  const [appVersion, setAppVersion] = React.useState<string>('');\n  const [chartReadme, setChartReadme] = React.useState<string>('');\n  const [chartHasValues, setChartHasValues] = React.useState<boolean>(false);\n  const [chartError, setChartError] = React.useState<Error>(null);\n\n  const [initialYamlData, setInitialYamlData] = React.useState<string>('');\n  const [initialFormData, setInitialFormData] = React.useState<object>();\n  const [initialFormSchema, setInitialFormSchema] = React.useState<JSONSchema7>();\n  const helmAction: HelmActionType = initialChartURL\n    ? HelmActionType.Create\n    : HelmActionType.Upgrade;\n\n  const config = React.useMemo<HelmActionConfigType>(\n    () =>\n      getHelmActionConfig(\n        helmAction,\n        initialReleaseName,\n        namespace,\n        t,\n        helmActionOrigin,\n        initialChartURL,\n        indexEntry,\n      ),\n    [helmAction, helmActionOrigin, indexEntry, initialChartURL, initialReleaseName, namespace, t],\n  );\n\n  React.useEffect(() => {\n    let ignore = false;\n\n    const fetchHelmChart = async () => {\n      let res;\n      let error: Error = null;\n      try {\n        res = await coFetchJSON(config.helmReleaseApi);\n      } catch (e) {\n        error = e;\n      }\n      if (ignore) return;\n      const chart: HelmChart = res?.chart || res;\n      const chartValues = getChartValuesYAML(chart);\n      const releaseValues = !_.isEmpty(res?.config) ? safeDump(res?.config) : '';\n      const valuesYAML = releaseValues || chartValues;\n      const valuesJSON = (res?.config || chart?.values) ?? {};\n      const valuesSchema = chart?.schema && JSON.parse(atob(chart?.schema));\n      setInitialYamlData(valuesYAML);\n      setInitialFormData(valuesJSON);\n      setInitialFormSchema(valuesSchema);\n      setChartName(chart?.metadata.name);\n      setChartVersion(chart?.metadata.version);\n      setAppVersion(chart?.metadata.appVersion);\n      setChartReadme(getChartReadme(chart));\n      setChartHasValues(!!valuesYAML);\n      setChartData(chart);\n      setChartError(error);\n    };\n\n    fetchHelmChart();\n\n    return () => {\n      ignore = true;\n    };\n  }, [config.helmReleaseApi, helmAction]);\n\n  const initialValues: HelmInstallUpgradeFormData = {\n    releaseName: initialReleaseName || helmChartName || '',\n    chartURL: initialChartURL,\n    chartIndexEntry: indexEntry,\n    chartName,\n    chartRepoName: helmChartRepoName || '',\n    appVersion,\n    chartVersion,\n    chartReadme,\n    yamlData: initialYamlData,\n    formData: initialFormData,\n    formSchema: initialFormSchema,\n    editorType: initialFormSchema ? EditorType.Form : EditorType.YAML,\n  };\n\n  const handleSubmit = (values, actions) => {\n    const {\n      releaseName,\n      chartURL,\n      chartIndexEntry,\n      yamlData,\n      formData,\n      editorType,\n    }: HelmInstallUpgradeFormData = values;\n    let valuesObj;\n\n    if (editorType === EditorType.Form) {\n      try {\n        const prunedFormData = prune(formData);\n        if (prunedFormData) {\n          valuesObj = prunedFormData;\n        } else {\n          actions.setStatus({\n            submitError: t('helm-plugin~Errors in the form data.'),\n          });\n          return Promise.resolve();\n        }\n      } catch (err) {\n        actions.setStatus({\n          submitError: t('helm-plugin~Invalid Form Schema - {{errorText}}', {\n            errorText: err.toString(),\n          }),\n        });\n        return Promise.resolve();\n      }\n    } else if (yamlData) {\n      try {\n        valuesObj = safeLoad(yamlData);\n      } catch (err) {\n        actions.setStatus({\n          submitError: t('helm-plugin~Invalid YAML - {{errorText}}', { errorText: err.toString() }),\n        });\n        return Promise.resolve();\n      }\n    }\n\n    const payload = {\n      namespace,\n      name: releaseName,\n      ...(chartURL ? { chart_url: chartURL } : {}), // eslint-disable-line @typescript-eslint/naming-convention\n      ...(indexEntry ? { indexEntry } : { indexEntry: chartIndexEntry }),\n      ...(valuesObj ? { values: valuesObj } : {}),\n    };\n\n    return config\n      .fetch('/api/helm/release/async', payload, null, -1)\n      .then(async (res?: { metadata?: { uid?: string } }) => {\n        let redirect = config.redirectURL;\n        let helmRelease: HelmRelease;\n        try {\n          helmRelease = await fetchHelmRelease(namespace, releaseName);\n        } catch (err) {\n          console.error('Could not fetch the helm release', err); // eslint-disable-line no-console\n        }\n        const resources = loadHelmManifestResources(helmRelease);\n        if (isGoingToTopology(resources)) {\n          const secretId = res?.metadata?.uid;\n          redirect = helmRelease?.info?.notes\n            ? `${config.redirectURL}?selectId=${secretId}&selectTab=${t(\n                'helm-plugin~Release notes',\n              )}`\n            : config.redirectURL;\n        } else {\n          redirect = `/helm-releases/ns/${namespace}/release/${releaseName}`;\n        }\n\n        history.push(redirect);\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  if (!chartData && !chartError) {\n    return <LoadingBox />;\n  }\n  const annotatedName = chartData?.metadata?.annotations?.[CHART_NAME_ANNOTATION] ?? '';\n  const providerName = chartData?.metadata?.annotations?.[PROVIDER_NAME_ANNOTATION] ?? '';\n\n  const chartMetaDescription = <HelmChartMetaDescription chart={chartData} />;\n\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} disabled hideApplications>\n      <Helmet>\n        <title>{config.title}</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        onReset={history.goBack}\n        validationSchema={getHelmActionValidationSchema(helmAction, t)}\n      >\n        {(formikProps) => (\n          <HelmInstallUpgradeForm\n            {...formikProps}\n            chartHasValues={chartHasValues}\n            chartMetaDescription={chartMetaDescription}\n            helmActionConfig={config}\n            onVersionChange={setChartData}\n            chartError={chartError}\n            namespace={namespace}\n            chartIndexEntry={indexEntry}\n            annotatedName={annotatedName}\n            providerName={providerName}\n          />\n        )}\n      </Formik>\n    </NamespacedPage>\n  );\n};\n\nexport default HelmInstallUpgradePage;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { history, getQueryArgument } from '@console/internal/components/utils';\nimport { HelmRelease, HelmActionType, HelmActionOrigins } from '../../../types/helm-types';\nimport { fetchHelmReleaseHistory, getHelmActionConfig } from '../../../utils/helm-utils';\nimport HelmReleaseRollbackForm from './HelmReleaseRollbackForm';\n\ntype HelmRollbackFormData = {\n  revision: number;\n};\n\nconst HelmReleaseRollbackPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { releaseName, ns: namespace } = useParams();\n  const actionOrigin = getQueryArgument('actionOrigin') as HelmActionOrigins;\n  const [releaseHistory, setReleaseHistory] = React.useState<HelmRelease[]>(null);\n\n  const config = React.useMemo(\n    () => getHelmActionConfig(HelmActionType.Rollback, releaseName, namespace, t, actionOrigin),\n    [actionOrigin, namespace, releaseName, t],\n  );\n\n  React.useEffect(() => {\n    let ignore = false;\n\n    const getReleaseHistory = async () => {\n      let res: HelmRelease[];\n      try {\n        res = await fetchHelmReleaseHistory(releaseName, namespace);\n      } catch {} // eslint-disable-line no-empty\n      if (ignore) return;\n\n      res?.length > 0 && setReleaseHistory(res);\n    };\n\n    getReleaseHistory();\n\n    return () => {\n      ignore = true;\n    };\n  }, [namespace, releaseName]);\n\n  const initialValues: HelmRollbackFormData = {\n    revision: -1,\n  };\n\n  const handleSubmit = (values, actions) => {\n    const payload = {\n      namespace,\n      name: releaseName,\n      version: values.revision,\n    };\n\n    return config\n      .fetch('/api/helm/release', payload, null, -1)\n      .then(() => {\n        history.push(config.redirectURL);\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} disabled hideApplications>\n      <Helmet>\n        <title>{config.title}</title>\n      </Helmet>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} onReset={history.goBack}>\n        {(props) => (\n          <HelmReleaseRollbackForm\n            {...props}\n            releaseName={releaseName}\n            releaseHistory={releaseHistory}\n            helmActionConfig={config}\n          />\n        )}\n      </Formik>\n    </NamespacedPage>\n  );\n};\n\nexport default HelmReleaseRollbackPage;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = {\n  input: Kebab.columnClass,\n  revision: 'pf-v5-u-w-8-on-xl pf-v5-u-w-25-on-xs',\n  updated: 'pf-v5-u-w-16-on-xl pf-v5-u-w-25-on-lg pf-v5-u-w-40-on-xs',\n  status: 'pf-m-hidden pf-m-visible-on-lg pf-v5-u-w-8-on-xl pf-v5-u-w-16-on-lg',\n  chartName: 'pf-m-hidden pf-m-visible-on-xl',\n  chartVersion: 'pf-m-hidden pf-m-visible-on-xl',\n  appVersion: 'pf-m-hidden pf-m-visible-on-xl',\n  description: 'pf-m-hidden pf-m-visible-on-xl',\n};\n\nconst RevisionListHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: '',\n      props: { className: tableColumnClasses.input },\n    },\n    {\n      title: t('helm-plugin~Revision'),\n      sortField: 'version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.revision },\n    },\n    {\n      title: t('helm-plugin~Updated'),\n      sortField: 'info.last_deployed',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.updated },\n    },\n    {\n      title: t('helm-plugin~Status'),\n      sortField: 'info.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.status },\n    },\n    {\n      title: t('helm-plugin~Chart name'),\n      sortField: 'chart.metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.chartName },\n    },\n    {\n      title: t('helm-plugin~Chart version'),\n      sortField: 'chart.metadata.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.chartVersion },\n    },\n    {\n      title: t('helm-plugin~App version'),\n      sortField: 'chart.metadata.appVersion',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.appVersion },\n    },\n    {\n      title: t('helm-plugin~Description'),\n      props: { className: tableColumnClasses.description },\n    },\n  ];\n};\n\nexport default RevisionListHeader;\n","import * as React from 'react';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { history } from '@console/internal/components/utils';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nimport HelmReleaseDetails from './HelmReleaseDetails';\n\nconst handleNamespaceChange = (newNamespace: string): void => {\n  if (newNamespace === ALL_NAMESPACES_KEY) {\n    history.push('/helm-releases/all-namespaces');\n  } else {\n    history.push('/helm-releases/ns/:ns');\n  }\n};\n\nconst HelmReleaseDetailsPage: React.FC = () => {\n  return (\n    <NamespacedPage\n      variant={NamespacedPageVariants.light}\n      hideApplications\n      onNamespaceChange={handleNamespaceChange}\n    >\n      <HelmReleaseDetails />\n    </NamespacedPage>\n  );\n};\n\nexport default HelmReleaseDetailsPage;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = {\n  revision: '',\n  updated: '',\n  status: 'pf-m-hidden pf-m-visible-on-lg',\n  chartName: 'pf-m-hidden pf-m-visible-on-xl',\n  chartVersion: 'pf-m-hidden pf-m-visible-on-xl',\n  appVersion: 'pf-m-hidden pf-m-visible-on-xl',\n  description: 'pf-m-hidden pf-m-visible-on-xl',\n  kebab: Kebab.columnClass,\n};\n\nconst HelmReleaseHistoryHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('helm-plugin~Revision'),\n      sortField: 'version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.revision },\n    },\n    {\n      title: t('helm-plugin~Updated'),\n      sortField: 'info.last_deployed',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.updated },\n    },\n    {\n      title: t('helm-plugin~Status'),\n      sortField: 'info.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.status },\n    },\n    {\n      title: t('helm-plugin~Chart name'),\n      sortField: 'chart.metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.chartName },\n    },\n    {\n      title: t('helm-plugin~Chart version'),\n      sortField: 'chart.metadata.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.chartVersion },\n    },\n    {\n      title: t('helm-plugin~App version'),\n      sortField: 'chart.metadata.appVersion',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.appVersion },\n    },\n    {\n      title: t('helm-plugin~Description'),\n      props: { className: tableColumnClasses.description },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses.kebab },\n    },\n  ];\n};\n\nexport default HelmReleaseHistoryHeader;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\n\nexport const tableColumnClasses = {\n  name: '',\n  type: '',\n  status: 'pf-m-hidden pf-m-visible-on-md',\n  created: 'pf-m-hidden pf-m-visible-on-lg',\n};\n\nconst HelmReleaseResourcesHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('helm-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.name },\n    },\n    {\n      title: t('helm-plugin~Type'),\n      sortField: 'kind',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.type },\n    },\n    {\n      title: t('helm-plugin~Status'),\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.status },\n    },\n    {\n      title: t('helm-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.created },\n    },\n  ];\n};\n\nexport default HelmReleaseResourcesHeader;\n","import * as React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  EmptyStateActions,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, Link } from 'react-router-dom-v5-compat';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { StatusBox } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { SecretModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { isCatalogTypeEnabled, CustomResourceList } from '@console/shared';\nimport { HELM_CHART_CATALOG_TYPE_ID } from '../../const';\nimport {\n  helmReleasesRowFilters,\n  filterHelmReleasesByName,\n  filterHelmReleasesByStatus,\n  fetchHelmReleases,\n} from '../../utils/helm-utils';\nimport HelmReleaseListHeader from './HelmReleaseListHeader';\nimport HelmReleaseListRow from './HelmReleaseListRow';\nimport './HelmReleaseList.scss';\n\nconst getRowProps = (obj) => ({\n  id: obj.name,\n});\n\nconst HelmReleaseList: React.FC = () => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const namespace = params.ns;\n  const secretsCountRef = React.useRef<number>(0);\n  const [releasesLoaded, setReleasesLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>();\n  const [releases, setReleases] = React.useState([]);\n  const secretResource = React.useMemo(\n    () => ({\n      isList: true,\n      namespace,\n      kind: SecretModel.kind,\n      namespaced: true,\n      optional: true,\n      selector: {\n        matchLabels: { owner: 'helm' },\n        matchExpressions: [{ key: 'status', operator: 'NotEquals', values: ['superseded'] }],\n      },\n      partialMetadata: true,\n    }),\n    [namespace],\n  );\n  const [secretsData, secretsLoaded, secretsLoadError] = useK8sWatchResource<K8sResourceKind[]>(\n    secretResource,\n  );\n  const newCount = secretsData?.length ?? 0;\n\n  React.useEffect(() => {\n    setReleasesLoaded(false);\n    secretsCountRef.current = 0;\n  }, [namespace]);\n\n  React.useEffect(() => {\n    let destroyed = false;\n    if (secretsLoaded && !secretsLoadError) {\n      if (newCount === 0) {\n        setLoadError(null);\n        setReleasesLoaded(true);\n        setReleases([]);\n      } else if (newCount !== secretsCountRef.current) {\n        setReleasesLoaded(false);\n        fetchHelmReleases(namespace, true)\n          .then((helmReleases) => {\n            if (!destroyed) {\n              setReleases(helmReleases);\n              setReleasesLoaded(true);\n              setLoadError(null);\n            }\n          })\n          .catch((err) => {\n            if (!destroyed) {\n              setReleasesLoaded(true);\n              setLoadError(err.message || t('helm-plugin~Unable to load Helm Releases'));\n            }\n          });\n      }\n      secretsCountRef.current = newCount;\n    }\n    return () => {\n      destroyed = true;\n    };\n  }, [namespace, newCount, secretsLoadError, secretsLoaded, t]);\n\n  if (secretsLoadError || loadError) {\n    return (\n      <StatusBox\n        loaded\n        loadError={secretsLoadError || loadError}\n        label={t('helm-plugin~Helm Releases')}\n      />\n    );\n  }\n\n  const emptyState = () => {\n    const isHelmEnabled = isCatalogTypeEnabled(HELM_CHART_CATALOG_TYPE_ID);\n    const helmImage = () => (\n      <img\n        className=\"odc-helm-release__empty-list__image\"\n        src={getImageForIconClass('icon-helm')}\n        alt=\"\"\n      />\n    );\n    const installURL = { pathname: `/catalog/ns/${namespace}`, search: '?catalogType=HelmChart' };\n    return (\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateHeader\n          titleText={<>{t('helm-plugin~No Helm Releases found')}</>}\n          icon={<EmptyStateIcon icon={helmImage} />}\n          headingLevel=\"h3\"\n        />\n        <EmptyStateFooter>\n          {isHelmEnabled ? (\n            <EmptyStateActions>\n              <Link to={installURL}>\n                {t('helm-plugin~Browse the catalog to discover available Helm Charts')}\n              </Link>\n            </EmptyStateActions>\n          ) : null}\n        </EmptyStateFooter>\n      </EmptyState>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('helm-plugin~Helm Releases')}</title>\n      </Helmet>\n      <CustomResourceList\n        resources={releases}\n        loaded={secretsLoaded && releasesLoaded && newCount === secretsCountRef.current}\n        EmptyMsg={emptyState}\n        queryArg=\"rowFilter-helm-release-status\"\n        textFilter=\"name\"\n        rowFilters={helmReleasesRowFilters(t)}\n        sortBy=\"name\"\n        sortOrder={SortByDirection.asc}\n        rowFilterReducer={filterHelmReleasesByStatus}\n        textFilterReducer={filterHelmReleasesByName}\n        ResourceRow={HelmReleaseListRow}\n        resourceHeader={HelmReleaseListHeader(t)}\n        getRowProps={getRowProps}\n      />\n    </>\n  );\n};\n\nexport default HelmReleaseList;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = {\n  name: '',\n  revision: '',\n  updated: '',\n  status: 'pf-m-hidden pf-m-visible-on-lg',\n  chartName: 'pf-m-hidden pf-m-visible-on-xl',\n  chartVersion: 'pf-m-hidden pf-m-visible-on-xl',\n  appVersion: 'pf-m-hidden pf-m-visible-on-xl pf-v5-u-w-8-on-xl',\n  kebab: Kebab.columnClass,\n};\n\nconst HelmReleaseListHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('helm-plugin~Name'),\n      sortField: 'name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.name },\n    },\n    {\n      title: t('helm-plugin~Revision'),\n      sortField: 'version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.revision },\n    },\n    {\n      title: t('helm-plugin~Updated'),\n      sortField: 'info.last_deployed',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.updated },\n    },\n    {\n      title: t('helm-plugin~Status'),\n      sortField: 'info.status',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.status },\n    },\n    {\n      title: t('helm-plugin~Chart name'),\n      sortField: 'chart.metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.chartName },\n    },\n    {\n      title: t('helm-plugin~Chart version'),\n      sortField: 'chart.metadata.version',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.chartVersion },\n    },\n    {\n      title: t('helm-plugin~App version'),\n      sortField: 'chart.metadata.appVersion',\n      transforms: [sortable],\n      props: { className: tableColumnClasses.appVersion },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses.kebab },\n    },\n  ];\n};\n\nexport default HelmReleaseListHeader;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { K8sResourceKindReference, useAccessReview } from '@console/dynamic-plugin-sdk/src';\nimport {\n  HelmChartRepositoryModel,\n  ProjectHelmChartRepositoryModel,\n} from '@console/helm-plugin/src/models';\nimport { kindForReference } from '@console/internal/module/k8s';\nimport { useQueryParams } from '@console/shared/src';\nimport CreateHelmChartRepository from './CreateHelmChartRepository';\n\nconst CreateHelmChartRepositoryPage: React.FC = () => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const queryParams = useQueryParams();\n  const resourceKind: K8sResourceKindReference = queryParams.get('kind');\n  const existingRepo = params.name;\n  const isEditForm = !!existingRepo;\n  const hideNamespacedPage =\n    isEditForm && resourceKind && kindForReference(resourceKind) === HelmChartRepositoryModel.kind;\n  const [canCreateHCR] = useAccessReview({\n    group: HelmChartRepositoryModel.apiGroup,\n    resource: HelmChartRepositoryModel.plural,\n    verb: 'create',\n  });\n\n  const [canCreatePHCR] = useAccessReview({\n    group: ProjectHelmChartRepositoryModel.apiGroup,\n    resource: ProjectHelmChartRepositoryModel.plural,\n    verb: 'create',\n  });\n\n  const renderForm = () => (\n    <>\n      <Helmet data-test={`form-title ${isEditForm ? 'Edit' : 'Create'} Helm Chart Repository`}>\n        <title>\n          {isEditForm\n            ? t('helm-plugin~Edit Helm Chart Repository')\n            : t('helm-plugin~Create Helm Chart Repository')}\n        </title>\n      </Helmet>\n      <CreateHelmChartRepository\n        showScopeType={canCreateHCR && canCreatePHCR}\n        existingRepoName={params.name}\n      />\n    </>\n  );\n\n  return hideNamespacedPage ? (\n    renderForm()\n  ) : (\n    <NamespacedPage variant={NamespacedPageVariants.light} hideApplications disabled>\n      {renderForm()}\n    </NamespacedPage>\n  );\n};\n\nexport default CreateHelmChartRepositoryPage;\n","import * as _ from 'lodash';\nimport { getGroupVersionKindForReference } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  K8sResourceKindReference,\n  kindForReference,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { HelmChartRepositoryModel, ProjectHelmChartRepositoryModel } from '../../../models';\nimport { HelmChartRepositoryFormData, HelmChartRepositoryType } from '../../../types/helm-types';\n\nexport const convertToForm = (resource: HelmChartRepositoryType) => {\n  return {\n    scope: resource?.kind,\n    repoName: resource?.metadata?.name ?? '',\n    repoDisplayName: resource?.spec?.name ?? '',\n    ca: resource?.spec?.connectionConfig?.ca?.name ?? '',\n    disabled: resource?.spec?.disabled ?? false,\n    tlsClientConfig: resource?.spec?.connectionConfig?.tlsClientConfig?.name ?? '',\n    repoDescription: resource?.spec?.description ?? '',\n    repoUrl: resource?.spec?.connectionConfig?.url ?? '',\n    metadata: _.omit(resource?.metadata, ['name', 'namespace']) ?? {},\n  };\n};\n\nexport const convertToHelmChartRepository = (\n  formValues: HelmChartRepositoryFormData,\n  namespace: string,\n): HelmChartRepositoryType => {\n  const {\n    repoName,\n    ca,\n    disabled,\n    tlsClientConfig,\n    repoDescription,\n    repoUrl,\n    metadata,\n    scope,\n    repoDisplayName,\n  } = formValues;\n\n  const newResource: HelmChartRepositoryType = {\n    apiVersion:\n      scope === 'ProjectHelmChartRepository'\n        ? `${ProjectHelmChartRepositoryModel.apiGroup}/${ProjectHelmChartRepositoryModel.apiVersion}`\n        : `${HelmChartRepositoryModel.apiGroup}/${HelmChartRepositoryModel.apiVersion}`,\n    kind: scope,\n    metadata: {\n      ...(repoName ? { name: repoName } : { name: '' }),\n      ...(scope === 'ProjectHelmChartRepository' ? { namespace } : {}),\n      ...metadata,\n    },\n    spec: {\n      connectionConfig: {\n        url: repoUrl,\n        ...(ca ? { ca: { name: ca } } : {}),\n        ...(tlsClientConfig ? { tlsClientConfig: { name: tlsClientConfig } } : {}),\n      },\n      ...(repoDescription ? { description: repoDescription } : {}),\n      ...(disabled ? { disabled } : {}),\n      ...(repoDisplayName ? { name: repoDisplayName } : {}),\n    },\n  };\n\n  return newResource;\n};\n\nexport const getDefaultResource = (\n  namespace: string,\n  kindRef?: K8sResourceKindReference,\n): HelmChartRepositoryType => {\n  const newResource: HelmChartRepositoryType = {\n    apiVersion: kindRef\n      ? `${getGroupVersionKindForReference(kindRef).group}/${\n          getGroupVersionKindForReference(kindRef).version\n        }`\n      : `${ProjectHelmChartRepositoryModel.apiGroup}/${ProjectHelmChartRepositoryModel.apiVersion}`,\n    kind: kindRef ? kindForReference(kindRef) : ProjectHelmChartRepositoryModel.kind,\n    metadata: {\n      name: '',\n      ...(kindRef === referenceForModel(ProjectHelmChartRepositoryModel) ? { namespace } : {}),\n    },\n    spec: {\n      connectionConfig: {\n        url: '',\n      },\n      name: '',\n    },\n  };\n\n  return newResource;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ProjectHelmChartRepositoryModel } from '../../models';\nimport ProjectHelmChartRepositoryList from './ProjectHelmChartRepositoryList';\n\nconst ProjectHelmChartRepositoryListPage: React.FC<React.ComponentProps<typeof ListPage>> = (\n  props,\n) => {\n  const { t } = useTranslation();\n  const createProps = {\n    to: `/ns/${\n      props.namespace || 'default'\n    }/helmchartrepositories/~new/form?kind=${referenceForModel(ProjectHelmChartRepositoryModel)}`,\n  };\n  return (\n    <ListPage\n      {...props}\n      canCreate\n      createProps={createProps}\n      aria-label={t('helm-plugin~Project Helm Chart Repositories')}\n      kind={referenceForModel(ProjectHelmChartRepositoryModel)}\n      ListComponent={ProjectHelmChartRepositoryList}\n    />\n  );\n};\nexport default ProjectHelmChartRepositoryListPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport ProjectHelmChartRepositoryRow from './ProjectHelmChartRepositoryRow';\nimport RepositoriesHeader from './RepositoriesHeader';\n\nconst ProjectHelmChartRepositoryList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      Header={RepositoriesHeader(t)}\n      Row={ProjectHelmChartRepositoryRow}\n      virtualize\n    />\n  );\n};\n\nexport default ProjectHelmChartRepositoryList;\n","import { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { TFunction } from 'i18next';\nimport { Kebab } from '@console/internal/components/utils';\n\nconst tableColumnClasses = [\n  '', // Name\n  '', // Display Name\n  '', // Namespace\n  '', // Disabled\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // Repo URL\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // Created\n  Kebab.columnClass,\n];\n\nconst RepositoriesHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('helm-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('helm-plugin~Display Name'),\n      sortField: 'spec.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('helm-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('helm-plugin~Disabled'),\n      sortField: 'spec.disabled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('helm-plugin~Repo URL'),\n      sortField: 'spec.connectionConfig.url',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('helm-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nexport default RepositoriesHeader;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { HelmChartRepositoryModel } from '../../models';\nimport ProjectHelmChartRepositoryList from './ProjectHelmChartRepositoryList';\n\nconst HelmChartRepositoryListPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { t } = useTranslation();\n  const createProps = {\n    to: `/ns/${\n      props.namespace || 'default'\n    }/helmchartrepositories/~new/form?kind=${referenceForModel(\n      HelmChartRepositoryModel,\n    )}&actionOrigin=search`,\n  };\n  return (\n    <ListPage\n      {...props}\n      aria-label={t('helm-plugin~Helm Chart Repositories')}\n      canCreate\n      createProps={createProps}\n      kind={referenceForModel(HelmChartRepositoryModel)}\n      ListComponent={ProjectHelmChartRepositoryList}\n    />\n  );\n};\nexport default HelmChartRepositoryListPage;\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport CreateProjectListPage, {\n  CreateAProjectButton,\n} from '@console/dev-console/src/components/projects/CreateProjectListPage';\nimport { useAccessReview } from '@console/dynamic-plugin-sdk/src';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport { LoadingBox, Page } from '@console/internal/components/utils';\nimport { MenuActions, MultiTabListPage, useFlag } from '@console/shared';\nimport { HelmChartRepositoryModel, ProjectHelmChartRepositoryModel } from '../../models';\nimport HelmReleaseList from './HelmReleaseList';\nimport HelmReleaseListPage from './HelmReleaseListPage';\nimport RepositoriesPage from './RepositoriesListPage';\n\nexport const PageContents: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const isHelmVisible = useFlag('HELM_CHARTS_CATALOG_TYPE');\n  const [showTitle, canCreate] = [false, false];\n  const [projectHelmChartCreateAccess, loadingCreatePHCR] = useAccessReview({\n    group: ProjectHelmChartRepositoryModel.apiGroup,\n    resource: ProjectHelmChartRepositoryModel.plural,\n    verb: 'create',\n    namespace,\n  });\n  const [helmChartCreateAccess, loadingCreateHCR] = useAccessReview({\n    group: HelmChartRepositoryModel.apiGroup,\n    resource: HelmChartRepositoryModel.plural,\n    verb: 'create',\n  });\n  const [projectHelmChartEditAccess, loadingEditPHCR] = useAccessReview({\n    group: ProjectHelmChartRepositoryModel.apiGroup,\n    resource: ProjectHelmChartRepositoryModel.plural,\n    verb: 'update',\n    namespace,\n  });\n  const [helmChartEditAccess, loadingEditHCR] = useAccessReview({\n    group: HelmChartRepositoryModel.apiGroup,\n    resource: HelmChartRepositoryModel.plural,\n    verb: 'update',\n  });\n  const [projectHelmChartListAccess, loadingPHCR] = useAccessReview({\n    group: ProjectHelmChartRepositoryModel.apiGroup,\n    resource: ProjectHelmChartRepositoryModel.plural,\n    verb: 'list',\n    namespace,\n  });\n\n  const [helmChartListAccess, loadingHCR] = useAccessReview({\n    group: HelmChartRepositoryModel.apiGroup,\n    resource: HelmChartRepositoryModel.plural,\n    verb: 'list',\n  });\n\n  const menuActions: MenuActions = {\n    helmRelease: {\n      label: isHelmVisible ? t('helm-plugin~Helm Release') : null,\n      onSelection: () => `/catalog/ns/${namespace}?catalogType=HelmChart`,\n    },\n    projectHelmChartRepository: {\n      label:\n        projectHelmChartCreateAccess || helmChartCreateAccess ? t('helm-plugin~Repository') : null,\n      onSelection: () => `/ns/${namespace}/helmchartrepositories/~new/form`,\n    },\n  };\n\n  const pages: Page[] = [\n    {\n      href: '',\n      // t('helm-plugin~Helm Releases')\n      nameKey: 'helm-plugin~Helm Releases',\n      component: HelmReleaseList,\n    },\n    {\n      href: 'repositories',\n      // t('helm-plugin~Repositories')\n      nameKey: 'helm-plugin~Repositories',\n      component: RepositoriesPage,\n      pageData: {\n        showTitle,\n        canCreate,\n      },\n    },\n  ];\n\n  if (\n    loadingCreatePHCR ||\n    loadingEditPHCR ||\n    loadingCreateHCR ||\n    loadingEditHCR ||\n    loadingPHCR ||\n    loadingHCR\n  ) {\n    return <LoadingBox />;\n  }\n\n  return namespace ? (\n    (projectHelmChartListAccess && projectHelmChartCreateAccess && projectHelmChartEditAccess) ||\n    (helmChartListAccess && helmChartCreateAccess && helmChartEditAccess) ? (\n      <MultiTabListPage\n        pages={pages}\n        title={t('helm-plugin~Helm')}\n        menuActions={menuActions}\n        telemetryPrefix=\"Helm\"\n      />\n    ) : (\n      <HelmReleaseListPage />\n    )\n  ) : (\n    <CreateProjectListPage title={t('helm-plugin~Helm')}>\n      {(openProjectModal) => (\n        <Trans t={t} ns=\"helm-plugin\">\n          Select a Project to view its details\n          <CreateAProjectButton openProjectModal={openProjectModal} />.\n        </Trans>\n      )}\n    </CreateProjectListPage>\n  );\n};\n\nconst PageContentsWithStartGuide = withStartGuide(PageContents);\n\nconst HelmTabbedPage: React.FC = (props) => {\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} hideApplications>\n      <PageContentsWithStartGuide {...props} />\n    </NamespacedPage>\n  );\n};\n\nexport default HelmTabbedPage;\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { HelmActionType } from '../types/helm-types';\n\nexport const getHelmActionValidationSchema = (helmAction: HelmActionType, t: TFunction) => {\n  switch (helmAction) {\n    case HelmActionType.Create:\n      return yup.object().shape({\n        releaseName: nameValidationSchema(t),\n      });\n    case HelmActionType.Upgrade:\n      return yup.object().shape({\n        chartVersion: yup.string().required(t('helm-plugin~Required')),\n      });\n    default:\n      return null;\n  }\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { HelmChart } from '../../../types/helm-types';\n\ntype HelmChartMetaDescriptionProps = {\n  chart: HelmChart;\n};\n\nconst HelmChartMetaDescription: React.FC<HelmChartMetaDescriptionProps> = ({ chart }) => {\n  const { t } = useTranslation();\n  const chartVersion = chart?.metadata?.version;\n  const displayName = _.startCase(chart?.metadata?.name);\n  const imgSrc = chart?.metadata?.icon || getImageForIconClass('icon-helm');\n  const provider = chart?.metadata?.maintainers?.[0]?.name;\n  return (\n    <div style={{ marginBottom: '30px' }}>\n      <div className=\"co-clusterserviceversion-logo\">\n        <div className=\"co-clusterserviceversion-logo__icon\">\n          <span className=\"co-catalog-item-icon__bg\">\n            <img\n              className=\"co-catalog-item-icon__img co-catalog-item-icon__img--large\"\n              src={imgSrc}\n              alt={displayName}\n              aria-hidden\n            />\n          </span>\n        </div>\n        <div className=\"co-clusterserviceversion-logo__name\">\n          <h1 className=\"co-clusterserviceversion-logo__name__clusterserviceversion\">\n            {displayName}\n          </h1>\n          {provider && (\n            <span className=\"co-clusterserviceversion-logo__name__provider text-muted\">\n              {t('helm-plugin~{{chartVersion}} provided by {{provider}}', {\n                chartVersion: chartVersion || '',\n                provider,\n              })}\n            </span>\n          )}\n        </div>\n      </div>\n      {chart?.metadata?.description}\n    </div>\n  );\n};\n\nexport default HelmChartMetaDescription;\n","import * as React from 'react';\nimport { TextInputTypes, Grid, GridItem, Button, Alert } from '@patternfly/react-core';\nimport { FormikProps } from 'formik';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { ThemeContext } from '@console/internal/components/ThemeProvider';\nimport {\n  InputField,\n  FormFooter,\n  FormBody,\n  CodeEditorField,\n  DynamicFormField,\n  SyncedEditorField,\n  FormHeader,\n  FlexForm,\n} from '@console/shared';\nimport { getJSONSchemaOrder, prune } from '@console/shared/src/components/dynamic-form/utils';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { HelmActionType, HelmChart, HelmActionConfigType } from '../../../types/helm-types';\nimport { helmActionString } from '../../../utils/helm-utils';\nimport HelmChartVersionDropdown from './HelmChartVersionDropdown';\nimport { helmReadmeModalLauncher } from './HelmReadmeModal';\n\nexport type HelmInstallUpgradeFormData = {\n  releaseName: string;\n  chartURL?: string;\n  chartName: string;\n  chartIndexEntry?: string;\n  chartRepoName: string;\n  chartVersion: string;\n  chartReadme: string;\n  appVersion: string;\n  yamlData: string;\n  formData: any;\n  formSchema: JSONSchema7;\n  editorType: EditorType;\n};\n\nexport interface HelmInstallUpgradeFormProps {\n  chartHasValues: boolean;\n  helmActionConfig: HelmActionConfigType;\n  chartMetaDescription: React.ReactNode;\n  onVersionChange: (chart: HelmChart) => void;\n  chartError: Error;\n  namespace: string;\n  chartIndexEntry?: string;\n  annotatedName?: string;\n  providerName?: string;\n}\n\nconst HelmInstallUpgradeForm: React.FC<\n  FormikProps<HelmInstallUpgradeFormData> & HelmInstallUpgradeFormProps\n> = ({\n  chartHasValues,\n  errors,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n  helmActionConfig,\n  values,\n  dirty,\n  chartMetaDescription,\n  onVersionChange,\n  chartError,\n  namespace,\n  chartIndexEntry,\n  annotatedName,\n  providerName,\n}) => {\n  const { t } = useTranslation();\n  const theme = React.useContext(ThemeContext);\n  const { chartName, chartVersion, chartReadme, formData, formSchema, editorType } = values;\n  const { type: helmAction, title, subTitle } = helmActionConfig;\n\n  const isSubmitDisabled =\n    (helmAction === HelmActionType.Upgrade && !dirty) ||\n    isSubmitting ||\n    !_.isEmpty(errors) ||\n    !!chartError;\n\n  const uiSchema = React.useMemo(() => getJSONSchemaOrder(formSchema, {}), [formSchema]);\n\n  const LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY = 'helm.installUgradeForm.editor.lastView';\n\n  const formEditor = formData && formSchema && (\n    <DynamicFormField\n      name=\"formData\"\n      schema={formSchema}\n      uiSchema={uiSchema}\n      formDescription={chartMetaDescription}\n    />\n  );\n\n  const yamlEditor = chartHasValues && (\n    <CodeEditorField\n      name=\"yamlData\"\n      label={t('helm-plugin~Helm Release')}\n      schema={formSchema}\n      showSamples={false}\n      onSave={handleSubmit}\n    />\n  );\n\n  const formSubTitle = _.isString(subTitle) ? subTitle : subTitle?.[editorType];\n\n  const readmeText = chartReadme && (\n    <Trans t={t} ns=\"helm-plugin\">\n      For more information on the chart, refer to this{' '}\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-test-id=\"helm-readme-modal\"\n        onClick={() =>\n          helmReadmeModalLauncher({\n            readme: chartReadme,\n            modalClassName: 'modal-lg',\n            theme,\n          })\n        }\n        isInline\n      >\n        README\n      </Button>\n    </Trans>\n  );\n\n  const formHelpText = (\n    <>\n      {chartHasValues && <>{formSubTitle} &nbsp;</>}\n      {readmeText}\n    </>\n  );\n\n  return (\n    <FlexForm onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        <FormHeader title={title} helpText={formHelpText} marginBottom=\"lg\" />\n        {chartError && (\n          <Alert variant=\"danger\" isInline title={t('helm-plugin~Helm Chart cannot be installed')}>\n            {t('helm-plugin~The Helm Chart is currently unavailable. {{chartError}}', {\n              chartError,\n            })}\n          </Alert>\n        )}\n        <FormSection fullWidth>\n          <Grid hasGutter>\n            <GridItem xl={7} lg={8} md={12}>\n              <InputField\n                type={TextInputTypes.text}\n                name=\"releaseName\"\n                label={t('helm-plugin~Release name')}\n                helpText={t('helm-plugin~A unique name for the Helm Release.')}\n                required\n                isDisabled={!!chartError || helmAction === HelmActionType.Upgrade}\n              />\n            </GridItem>\n            <GridItem xl={5} lg={4} md={12}>\n              <HelmChartVersionDropdown\n                chartName={chartName}\n                chartVersion={chartVersion}\n                helmAction={helmAction}\n                onVersionChange={onVersionChange}\n                namespace={namespace}\n                chartIndexEntry={chartIndexEntry}\n                annotatedName={annotatedName}\n                providerName={providerName}\n              />\n            </GridItem>\n          </Grid>\n        </FormSection>\n        {!chartError &&\n          (!formSchema && !chartHasValues ? (\n            <Alert\n              variant=\"info\"\n              title={t(\n                \"helm-plugin~Helm release is not configurable since the Helm Chart doesn't define any values.\",\n              )}\n              isInline\n            />\n          ) : (\n            <SyncedEditorField\n              name=\"editorType\"\n              formContext={{ name: 'formData', editor: formEditor, isDisabled: !formSchema }}\n              yamlContext={{ name: 'yamlData', editor: yamlEditor }}\n              lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n              prune={prune}\n              noMargin\n            />\n          ))}\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status?.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={helmActionString(t)[helmAction]}\n        disableSubmit={isSubmitDisabled}\n        resetLabel={t('helm-plugin~Cancel')}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default HelmInstallUpgradeForm;\n","import * as React from 'react';\nimport { GridItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { safeLoad } from 'js-yaml';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { coFetchJSON, coFetch } from '@console/internal/co-fetch';\nimport { confirmModal } from '@console/internal/components/modals/confirm-modal';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { DropdownField } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { HelmChartRepositoryModel } from '../../../models';\nimport {\n  HelmChartMetaData,\n  HelmChart,\n  HelmActionType,\n  HelmChartEntries,\n} from '../../../types/helm-types';\nimport {\n  getChartURL,\n  getChartVersions,\n  getChartValuesYAML,\n  getChartReadme,\n  concatVersions,\n  getChartEntriesByName,\n  getChartRepositoryTitle,\n  getChartIndexEntry,\n} from '../../../utils/helm-utils';\n\nexport type HelmChartVersionDropdownProps = {\n  chartVersion: string;\n  chartName: string;\n  helmAction: string;\n  onVersionChange: (chart: HelmChart) => void;\n  namespace: string;\n  chartIndexEntry: string;\n  annotatedName?: string;\n  providerName?: string;\n};\ntype ModalCallback = () => void;\n\nconst HelmChartVersionDropdown: React.FunctionComponent<HelmChartVersionDropdownProps> = ({\n  chartVersion,\n  chartName,\n  helmAction,\n  onVersionChange,\n  namespace,\n  chartIndexEntry,\n  annotatedName,\n  providerName,\n}) => {\n  const { t } = useTranslation();\n  const {\n    setFieldValue,\n    values: { chartRepoName, yamlData, formData, appVersion },\n    setFieldTouched,\n  } = useFormikContext<FormikValues>();\n  const [helmChartVersions, setHelmChartVersions] = React.useState({});\n  const [helmChartEntries, setHelmChartEntries] = React.useState<HelmChartMetaData[]>([]);\n  const [initialYamlData, setInitialYamlData] = React.useState<string>('');\n  const [initialFormData, setInitialFormData] = React.useState<object>();\n  const [helmChartRepos, setHelmChartRepos] = React.useState<HelmChartEntries>({});\n  const resourceSelector: WatchK8sResource = {\n    isList: true,\n    kind: referenceForModel(HelmChartRepositoryModel),\n  };\n  const [chartRepositories] = useK8sWatchResource<K8sResourceKind[]>(resourceSelector);\n\n  const warnOnChartVersionChange = (\n    onAccept: ModalCallback,\n    currentVersion: string,\n    newVersion: string,\n  ) => {\n    confirmModal({\n      title: t('helm-plugin~Change chart version?'),\n      message: (\n        <>\n          <p>\n            <Trans t={t} ns=\"helm-plugin\">\n              Are you sure you want to change the chart version from{' '}\n              <strong>{{ currentVersion }}</strong> to <strong>{{ newVersion }}</strong>?{' '}\n            </Trans>\n          </p>\n          <p>\n            <InfoCircleIcon color=\"var(--pf-v5-global--info-color--100)\" />{' '}\n            <Trans t={t} ns=\"helm-plugin\">\n              All data entered for version <strong>{{ currentVersion }}</strong> will be reset\n            </Trans>\n          </p>\n        </>\n      ),\n      submitDanger: false,\n      btnText: t('helm-plugin~Proceed'),\n      cancelText: t('helm-plugin~Cancel'),\n      executeFn: () => {\n        onAccept();\n        return Promise.resolve();\n      },\n      cancel: () => {\n        setFieldValue('chartVersion', currentVersion);\n        setFieldTouched('chartVersion', false);\n      },\n    });\n  };\n\n  React.useEffect(() => {\n    setInitialYamlData(yamlData);\n    setInitialFormData(formData);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    let ignore = false;\n\n    const fetchChartVersions = async () => {\n      let json: { entries: HelmChartEntries };\n\n      try {\n        const response = await coFetch(`/api/helm/charts/index.yaml?namespace=${namespace}`);\n        const yaml = await response.text();\n        json = safeLoad(yaml);\n      } catch {\n        if (ignore) return;\n      }\n      if (ignore) return;\n      const chartEntries = getChartEntriesByName(\n        json?.entries,\n        chartName,\n        chartRepoName,\n        chartRepositories,\n        annotatedName,\n        providerName,\n      );\n      if (!chartIndexEntry) {\n        setFieldValue(\n          'chartIndexEntry',\n          getChartIndexEntry(json?.entries, chartName, chartEntries[0].repoName),\n        );\n      }\n      setHelmChartRepos(json?.entries);\n      setHelmChartEntries(chartEntries);\n      setHelmChartVersions(getChartVersions(chartEntries, t));\n    };\n    fetchChartVersions();\n    return () => {\n      ignore = true;\n    };\n  }, [\n    chartName,\n    chartRepoName,\n    chartRepositories,\n    t,\n    namespace,\n    chartIndexEntry,\n    setFieldValue,\n    annotatedName,\n    providerName,\n  ]);\n\n  const onChartVersionChange = (value: string) => {\n    const [version, repoName] = value.split('--');\n    const chartURL = getChartURL(helmChartEntries, version, repoName);\n    const chartRepoIndex = getChartIndexEntry(helmChartRepos, chartName, repoName);\n\n    setFieldValue('chartVersion', value);\n    setFieldValue('chartURL', chartURL);\n    coFetchJSON(\n      `/api/helm/chart?url=${encodeURIComponent(\n        chartURL,\n      )}&namespace=${namespace}&indexEntry=${encodeURIComponent(chartRepoIndex)}`,\n    )\n      .then((res: HelmChart) => {\n        onVersionChange(res);\n\n        const chartReadme = getChartReadme(res);\n        const valuesYAML = getChartValuesYAML(res);\n        const valuesJSON = res?.values;\n        const valuesSchema = res?.schema && JSON.parse(atob(res?.schema));\n        const editorType = valuesSchema ? EditorType.Form : EditorType.YAML;\n        setFieldValue('editorType', editorType);\n        setFieldValue('formSchema', valuesSchema);\n        setFieldValue('yamlData', valuesYAML);\n        setFieldValue('formData', valuesJSON);\n        setFieldValue('chartReadme', chartReadme);\n        setInitialYamlData(valuesYAML);\n        setInitialFormData(valuesJSON);\n      })\n      .catch((err) => {\n        console.error(`Could not fetch helm chart with chart URL ${chartURL}:`, err); // eslint-disable-line no-console\n      });\n  };\n\n  const handleChartVersionChange = (val: string) => {\n    if (val !== chartVersion) {\n      const isDirty =\n        !_.isEqual(initialYamlData, yamlData) || !_.isEqual(initialFormData, formData);\n      if (isDirty) {\n        warnOnChartVersionChange(() => onChartVersionChange(val), chartVersion, val);\n      } else {\n        onChartVersionChange(val);\n      }\n    }\n  };\n\n  const isDisabled = _.isEmpty(helmChartVersions) || _.keys(helmChartVersions).length === 1;\n\n  const helpText =\n    helmAction === HelmActionType.Upgrade && t('helm-plugin~Select the version to upgrade to.');\n\n  const title =\n    _.isEmpty(helmChartVersions) && !chartVersion\n      ? t('helm-plugin~No versions available')\n      : helmChartVersions[`${chartVersion}`] ||\n        concatVersions(\n          chartVersion,\n          appVersion,\n          t,\n          getChartRepositoryTitle(chartRepositories, chartRepoName),\n        );\n\n  return (\n    <GridItem span={6}>\n      <DropdownField\n        name=\"chartVersion\"\n        label={t('helm-plugin~Chart version')}\n        items={helmChartVersions}\n        helpText={!isDisabled ? helpText : ''}\n        disabled={isDisabled}\n        title={title}\n        onChange={handleChartVersionChange}\n        required\n        fullWidth\n      />\n    </GridItem>\n  );\n};\n\nexport default HelmChartVersionDropdown;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ModalTitle,\n  ModalBody,\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory';\nimport { SyncMarkdownView } from '@console/internal/components/markdown-view';\n\ntype HelmReadmeModalProps = {\n  readme: string;\n  theme?: string;\n};\ntype Props = HelmReadmeModalProps & ModalComponentProps;\n\nconst HelmReadmeModal: React.FunctionComponent<Props> = ({ readme, theme, close }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"modal-content\">\n      <ModalTitle close={close}>{t('helm-plugin~README')}</ModalTitle>\n      <ModalBody>\n        <SyncMarkdownView content={readme} theme={theme} />\n      </ModalBody>\n    </div>\n  );\n};\n\nexport const helmReadmeModalLauncher = createModalLauncher<Props>(HelmReadmeModal);\nexport default HelmReadmeModal;\n","import * as React from 'react';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Table } from '@console/internal/components/factory';\nimport { FormFooter, FormHeader, FormBody } from '@console/shared';\nimport { HelmRelease, HelmActionConfigType } from '../../../types/helm-types';\nimport { helmActionString } from '../../../utils/helm-utils';\nimport RevisionListHeader from './RevisionListHeader';\nimport RevisionListRow from './RevisionListRow';\n\ninterface HelmReleaseRollbackFormProps {\n  releaseName: string;\n  releaseHistory: HelmRelease[];\n  helmActionConfig: HelmActionConfigType;\n}\n\ntype Props = FormikProps<FormikValues> & HelmReleaseRollbackFormProps;\n\nconst getRowProps = (obj) => ({\n  id: obj.revision,\n});\n\nconst HelmReleaseRollbackForm: React.FC<Props> = ({\n  errors,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n  dirty,\n  releaseHistory,\n  releaseName,\n  helmActionConfig,\n}) => {\n  const { t } = useTranslation();\n  const { type: helmAction, title } = helmActionConfig;\n\n  const formHelpText = (\n    <Trans t={t} ns=\"helm-plugin\">\n      {'Select the version to rollback '}\n      <strong style={{ color: 'var(--pf-v5-global--Color--100)' }}>{{ releaseName }}</strong> to,\n      from the table below:\n    </Trans>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormBody>\n        <FormHeader title={title} helpText={formHelpText} />\n        <FormGroup\n          fieldId=\"revision-list-field\"\n          label={t('helm-plugin~Revision history')}\n          isRequired\n        >\n          <Table\n            data={releaseHistory}\n            defaultSortField=\"version\"\n            defaultSortOrder={SortByDirection.desc}\n            aria-label={t('helm-plugin~CustomResources')}\n            Header={RevisionListHeader(t)}\n            Row={RevisionListRow}\n            loaded={!!releaseHistory}\n            virtualize\n            getRowProps={getRowProps}\n          />\n        </FormGroup>\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status?.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={helmActionString(t)[helmAction]}\n        disableSubmit={isSubmitting || !dirty || !_.isEmpty(errors)}\n        resetLabel={t('helm-plugin~Cancel')}\n        sticky\n      />\n    </Form>\n  );\n};\n\nexport default HelmReleaseRollbackForm;\n","import * as React from 'react';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { Timestamp } from '@console/internal/components/utils';\nimport { Status, RadioButtonField } from '@console/shared';\nimport { HelmReleaseStatusLabels, releaseStatus } from '../../../utils/helm-utils';\nimport { tableColumnClasses } from './RevisionListHeader';\n\nconst RevisionListRow: React.FC<RowFunctionArgs> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses.input}>\n        <RadioButtonField value={obj.version} name=\"revision\" />\n      </TableData>\n      <TableData className={tableColumnClasses.revision}>{obj.version}</TableData>\n      <TableData className={tableColumnClasses.updated}>\n        <Timestamp timestamp={obj.info.last_deployed} />\n      </TableData>\n      <TableData className={tableColumnClasses.status}>\n        <Status\n          status={releaseStatus(obj.info.status)}\n          title={HelmReleaseStatusLabels[obj.info.status]}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses.chartName}>{obj.chart.metadata.name}</TableData>\n      <TableData className={tableColumnClasses.chartVersion}>\n        {obj.chart.metadata.version}\n      </TableData>\n      <TableData className={tableColumnClasses.appVersion}>\n        {obj.chart.metadata.appVersion || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses.description}>{obj.info.description}</TableData>\n    </>\n  );\n};\n\nexport default RevisionListRow;\n","import * as React from 'react';\nimport { Badge } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport {\n  navFactory,\n  LoadingBox,\n  StatusBox,\n  FirehoseResult,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { SecretModel } from '@console/internal/models';\nimport { K8sResourceKindReference, SecretKind } from '@console/internal/module/k8s';\nimport { ActionMenu, ActionMenuVariant, Status, ActionServiceProvider } from '@console/shared';\nimport { HelmRelease, HelmActionOrigins } from '../../types/helm-types';\nimport { fetchHelmRelease, HelmReleaseStatusLabels, releaseStatus } from '../../utils/helm-utils';\nimport HelmReleaseHistory from './history/HelmReleaseHistory';\nimport HelmReleaseNotes from './notes/HelmReleaseNotes';\nimport HelmReleaseOverview from './overview/HelmReleaseOverview';\nimport HelmReleaseResources from './resources/HelmReleaseResources';\n\nconst SecretReference: K8sResourceKindReference = 'Secret';\nconst HelmReleaseReference = 'HelmRelease';\ninterface HelmReleaseDetailsProps {\n  secrets?: FirehoseResult<SecretKind[]>;\n}\n\ninterface LoadedHelmReleaseDetailsProps extends HelmReleaseDetailsProps {\n  helmRelease: {\n    loaded: boolean;\n    loadError: Error;\n    data: HelmRelease;\n  };\n}\n\nexport const LoadedHelmReleaseDetails: React.FC<LoadedHelmReleaseDetailsProps> = ({\n  helmRelease,\n  secrets,\n}) => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n\n  if (helmRelease.loadError) {\n    return <StatusBox loadError={helmRelease.loadError} />;\n  }\n  if (helmRelease.loaded && secrets.loadError) {\n    return <StatusBox loadError={secrets.loadError} />;\n  }\n  if (!helmRelease.loaded || !secrets.loaded) {\n    return <LoadingBox />;\n  }\n  if (!helmRelease.data || _.isEmpty(secrets.data)) {\n    return <ErrorPage404 />;\n  }\n\n  const sortedSecrets = _.orderBy(secrets.data, (o) => Number(o.metadata.labels.version), 'desc');\n\n  const releaseName = helmRelease.data?.name;\n  const latestReleaseSecret = sortedSecrets[0];\n  const latestSecretName = latestReleaseSecret?.metadata.name;\n  const latestSecretStatus = latestReleaseSecret?.metadata?.labels?.status;\n\n  const title = (\n    <>\n      {releaseName}\n      <Badge\n        isRead\n        style={{ verticalAlign: 'middle', marginLeft: 'var(--pf-v5-global--spacer--md)' }}\n      >\n        <Status\n          status={releaseStatus(latestSecretStatus)}\n          title={HelmReleaseStatusLabels[latestSecretStatus]}\n        />\n      </Badge>\n    </>\n  );\n\n  const actionsScope = {\n    release: {\n      name: releaseName,\n      namespace,\n      version: helmRelease.data?.version,\n      info: { status: latestSecretStatus },\n    },\n    actionOrigin: HelmActionOrigins.details,\n  };\n\n  const customActionMenu = (\n    <ActionServiceProvider context={{ 'helm-actions': actionsScope }}>\n      {({ actions, options, loaded }) =>\n        loaded && (\n          <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n        )\n      }\n    </ActionServiceProvider>\n  );\n\n  return (\n    <DetailsPage\n      kindObj={SecretModel}\n      customActionMenu={customActionMenu}\n      name={latestSecretName}\n      namespace={namespace}\n      customData={helmRelease.data}\n      breadcrumbsFor={() => [\n        {\n          name: t('helm-plugin~Helm Releases'),\n          path: `/helm-releases/ns/${namespace}`,\n        },\n        { name: t('helm-plugin~Helm Release details'), path: `${location.pathname}` },\n      ]}\n      title={title}\n      kind={SecretReference}\n      pages={[\n        navFactory.details(HelmReleaseOverview),\n        {\n          href: 'resources',\n          // t('helm-plugin~Resources')\n          nameKey: 'helm-plugin~Resources',\n          component: HelmReleaseResources,\n        },\n        {\n          href: 'history',\n          // t('helm-plugin~Revision history')\n          nameKey: 'helm-plugin~Revision history',\n          component: HelmReleaseHistory,\n        },\n        {\n          href: 'releasenotes',\n          // t('helm-plugin~Release notes')\n          nameKey: 'helm-plugin~Release notes',\n          component: HelmReleaseNotes,\n        },\n      ]}\n      customKind={HelmReleaseReference}\n    />\n  );\n};\n\nconst HelmReleaseDetails: React.FC<HelmReleaseDetailsProps> = () => {\n  const params = useParams();\n  const namespace = params.ns;\n  const helmReleaseName = params.name;\n\n  const [helmReleaseData, setHelmReleaseData] = React.useState<HelmRelease>();\n  const [helmReleaseError, setHelmReleaseError] = React.useState<Error>();\n\n  const [secrets, secretLoaded, secretLoadError] = useK8sWatchResource<SecretKind[]>(\n    helmReleaseData\n      ? {\n          namespace,\n          groupVersionKind: {\n            version: 'v1',\n            kind: SecretModel.kind,\n          },\n          selector: { matchLabels: { name: helmReleaseData.name } },\n          isList: true,\n        }\n      : {\n          isList: true,\n        },\n  );\n\n  React.useEffect(() => {\n    let mounted = true;\n\n    const getHelmRelease = async () => {\n      try {\n        const helmRelease = await fetchHelmRelease(namespace, helmReleaseName);\n        if (mounted) {\n          setHelmReleaseData(helmRelease);\n        }\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log('Error while loading helm release', err);\n        setHelmReleaseError(err);\n      }\n    };\n\n    // Implementation note: secretLoaded is initially true also when no helmReleaseData\n    // is available and NO SECRETS are yet loaded. See helmReleaseData condition above.\n    // It jumps to false when the data are loading... and back to true as soon as\n    // the initial or updated data are fetched.\n    // This if statement helps a little bit (there are still 2 calls) to reduce unneccessary API calls.\n    if (secretLoaded) {\n      getHelmRelease();\n    }\n\n    return () => {\n      mounted = false;\n    };\n    // On upgrading/rolling back to another version a new helm release is created.\n    // For fetching and showing the details of the new release adding secrets and\n    // secretLoaded as dependency here since they are updated when a new release is created.\n  }, [namespace, helmReleaseName, secrets, secretLoaded]);\n\n  const helmRelease = {\n    loaded: !!(helmReleaseData || helmReleaseError),\n    loadError: helmReleaseError,\n    data: helmReleaseData,\n  };\n\n  const secretsFirehoseResult: FirehoseResult<SecretKind[]> = {\n    loaded: secretLoaded,\n    loadError: secretLoadError,\n    data: secrets,\n  };\n\n  return <LoadedHelmReleaseDetails helmRelease={helmRelease} secrets={secretsFirehoseResult} />;\n};\n\nexport default HelmReleaseDetails;\n","import * as React from 'react';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { StatusBox } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { CustomResourceList, useDeepCompareMemoize } from '@console/shared';\nimport { HelmRelease } from '../../../types/helm-types';\nimport { fetchHelmReleaseHistory } from '../../../utils/helm-utils';\nimport HelmReleaseHistoryHeader from './HelmReleaseHistoryHeader';\nimport HelmReleaseHistoryRow from './HelmReleaseHistoryRow';\n\ninterface HelmReleaseHistoryProps {\n  obj: K8sResourceKind;\n  customData: HelmRelease;\n}\n\nconst getRowProps = (obj) => ({\n  id: obj.revision,\n});\n\nconst HelmReleaseHistory: React.FC<HelmReleaseHistoryProps> = ({\n  obj,\n  customData: latestHelmRelease,\n}) => {\n  const params = useParams();\n  const namespace = params.ns;\n  const helmReleaseName = params.name;\n  const [revisionsLoaded, setRevisionsLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>();\n  const [revisions, setRevisions] = React.useState([]);\n  const memoizedObj = useDeepCompareMemoize(obj);\n  const { t } = useTranslation();\n\n  React.useEffect(() => {\n    let destroyed = false;\n    fetchHelmReleaseHistory(helmReleaseName, namespace)\n      .then((items) => {\n        if (!destroyed) {\n          setLoadError(null);\n          setRevisionsLoaded(true);\n          setRevisions(items);\n        }\n      })\n      .catch((err) => {\n        if (!destroyed) {\n          setRevisionsLoaded(true);\n          setLoadError(err.message || t('helm-plugin~Unable to load Helm Release history'));\n        }\n      });\n    return () => {\n      destroyed = true;\n    };\n  }, [helmReleaseName, namespace, memoizedObj, t]);\n\n  const totalRevisions = revisions?.length;\n  const latestHelmReleaseVersion = latestHelmRelease?.version;\n\n  const customData = React.useMemo(\n    () => ({\n      totalRevisions,\n      latestHelmReleaseVersion,\n    }),\n    [latestHelmReleaseVersion, totalRevisions],\n  );\n\n  if (loadError) {\n    return <StatusBox loaded loadError={loadError} label={t('helm-plugin~Helm Release history')} />;\n  }\n\n  return (\n    <CustomResourceList\n      resources={revisions}\n      loaded={revisionsLoaded}\n      sortBy=\"version\"\n      sortOrder={SortByDirection.desc}\n      customData={customData}\n      ResourceRow={HelmReleaseHistoryRow}\n      resourceHeader={HelmReleaseHistoryHeader(t)}\n      getRowProps={getRowProps}\n    />\n  );\n};\n\nexport default HelmReleaseHistory;\n","import * as React from 'react';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { coFetchJSON } from '@console/internal/co-fetch';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { confirmModal } from '@console/internal/components/modals';\nimport { Timestamp } from '@console/internal/components/utils';\nimport { ActionMenu, Status } from '@console/shared';\nimport { HelmRelease } from '../../../types/helm-types';\nimport { HelmReleaseStatusLabels, releaseStatus } from '../../../utils/helm-utils';\nimport { tableColumnClasses } from './HelmReleaseHistoryHeader';\n\ntype HelmReleaseHistoryKebabProps = {\n  obj: HelmRelease;\n};\n\nconst confirmModalRollbackHelmRelease = (\n  releaseName: string,\n  namespace: string,\n  revision: number | string,\n  t: TFunction,\n) => {\n  const message = (\n    <Trans t={t} ns=\"helm-plugin\">\n      Are you sure you want to rollback <strong>{{ releaseName }}</strong> to{' '}\n      <strong>Revision {{ revision }}</strong>?\n    </Trans>\n  );\n\n  const payload = {\n    namespace,\n    name: releaseName,\n    version: revision,\n  };\n\n  const executeFn = () => coFetchJSON.patch('/api/helm/release', payload);\n\n  return {\n    id: 'helm-rollback-modal-action',\n    label: t('helm-plugin~Rollback to Revision {{revision}}', { revision }),\n    cta: () => {\n      confirmModal({\n        title: t('helm-plugin~Rollback'),\n        btnText: t('helm-plugin~Rollback'),\n        message,\n        executeFn,\n      });\n    },\n  };\n};\n\nconst HelmReleaseHistoryKebab: React.FC<HelmReleaseHistoryKebabProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const menuActions = [confirmModalRollbackHelmRelease(obj.name, obj.namespace, obj.version, t)];\n  return <ActionMenu actions={menuActions} />;\n};\n\nconst HelmReleaseHistoryRow: React.FC<RowFunctionArgs> = ({ obj, customData }) => (\n  <>\n    <TableData className={tableColumnClasses.revision}>{obj.version}</TableData>\n    <TableData className={tableColumnClasses.updated}>\n      <Timestamp timestamp={obj.info.last_deployed} />\n    </TableData>\n    <TableData className={tableColumnClasses.status}>\n      <Status\n        status={releaseStatus(obj.info.status)}\n        title={HelmReleaseStatusLabels[obj.info.status]}\n      />\n    </TableData>\n    <TableData className={tableColumnClasses.chartName}>{obj.chart.metadata.name}</TableData>\n    <TableData className={tableColumnClasses.chartVersion}>{obj.chart.metadata.version}</TableData>\n    <TableData className={tableColumnClasses.appVersion}>{obj.chart.metadata.appVersion}</TableData>\n    <TableData className={tableColumnClasses.description}>{obj.info.description}</TableData>\n    <TableData className={tableColumnClasses.kebab}>\n      {customData?.totalRevisions > 1 && customData?.latestHelmReleaseVersion !== obj.version && (\n        <HelmReleaseHistoryKebab obj={obj} />\n      )}\n    </TableData>\n  </>\n);\n\nexport default HelmReleaseHistoryRow;\n","import * as React from 'react';\nimport { SyncMarkdownView } from '@console/internal/components/markdown-view';\nimport { HelmRelease } from '../../../types/helm-types';\nimport HelmReleaseNotesEmptyState from './HelmReleaseNotesEmptyState';\n\nexport interface HelmReleaseNotesProps {\n  customData: HelmRelease;\n}\n\nconst HelmReleaseNotes: React.FC<HelmReleaseNotesProps> = ({ customData }) => {\n  const helmReleaseNotes = customData?.info?.notes ?? '';\n  return helmReleaseNotes ? (\n    <div className=\"co-m-pane__body\">\n      <SyncMarkdownView content={helmReleaseNotes} />\n    </div>\n  ) : (\n    <HelmReleaseNotesEmptyState />\n  );\n};\n\nexport default HelmReleaseNotes;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { MultiListPage } from '@console/internal/components/factory';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  referenceFor,\n  modelFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { HelmRelease } from '../../../types/helm-types';\nimport { flattenReleaseResources, loadHelmManifestResources } from '../../../utils/helm-utils';\nimport HelmReleaseResourcesList from './HelmReleaseResourcesList';\n\nexport interface HelmReleaseResourcesProps {\n  customData: HelmRelease;\n}\n\nconst HelmReleaseResources: React.FC<HelmReleaseResourcesProps> = ({ customData }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const namespace = params.ns;\n  const helmManifestResources = loadHelmManifestResources(customData);\n  const firehoseResources: FirehoseResource[] = helmManifestResources.map(\n    (resource: K8sResourceKind) => {\n      const resourceKind = referenceFor(resource);\n      const model = modelFor(resourceKind);\n      return {\n        ...(model.namespaced ? { namespace } : {}),\n        kind: model.crd ? referenceForModel(model) : model.kind,\n        name: resource.metadata.name,\n        prop: `${resource.metadata.name}-${resource.kind.toLowerCase()}`,\n        isList: false,\n        optional: true,\n      };\n    },\n  );\n  return (\n    <MultiListPage\n      filterLabel={t('helm-plugin~Resources by name')}\n      resources={firehoseResources}\n      flatten={flattenReleaseResources}\n      label={t('helm-plugin~Resources')}\n      ListComponent={HelmReleaseResourcesList}\n    />\n  );\n};\n\nexport default HelmReleaseResources;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TableProps, Table } from '@console/internal/components/factory';\nimport { ConsoleEmptyState } from '@console/internal/components/utils';\nimport HelmReleaseResourcesHeader from './HelmReleaseResourcesHeader';\nimport HelmReleaseResourcesRow from './HelmReleaseResourcesRow';\n\nconst HelmReleaseResourcesList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('helm-plugin~Resources')}\n      defaultSortField=\"kind\"\n      Header={HelmReleaseResourcesHeader(t)}\n      Row={HelmReleaseResourcesRow}\n      EmptyMsg={() => <ConsoleEmptyState title={t('helm-plugin~No resources found')} />}\n      virtualize\n    />\n  );\n};\n\nexport default HelmReleaseResourcesList;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp, resourcePath } from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { tableColumnClasses } from './HelmReleaseResourcesHeader';\n\ntype HelmReleaseResourceStatusProps = {\n  resource: K8sResourceKind;\n};\n\nexport const HelmReleaseResourceStatus: React.FC<HelmReleaseResourceStatusProps> = ({\n  resource,\n}) => {\n  const { t } = useTranslation();\n  const kind = referenceFor(resource);\n  return resource.status?.replicas ? (\n    <Link\n      to={`${resourcePath(kind, resource.metadata.name, resource.metadata.namespace)}/pods`}\n      title={t('helm-plugin~Pods')}\n    >\n      {resource.status.replicas || 0} of {resource.spec.replicas} pods\n    </Link>\n  ) : (\n    <Status status={_.get(resource.status, 'phase', 'Created')} />\n  );\n};\n\nconst HelmReleaseResourcesRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: resource }) => {\n  const kind = referenceFor(resource);\n  return (\n    <>\n      <TableData className={tableColumnClasses.name}>\n        <ResourceLink\n          kind={kind}\n          name={resource.metadata.name}\n          namespace={resource.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses.type}>{resource.kind}</TableData>\n      <TableData className={tableColumnClasses.status}>\n        <HelmReleaseResourceStatus resource={resource} />\n      </TableData>\n      <TableData className={tableColumnClasses.created}>\n        <Timestamp timestamp={resource.metadata.creationTimestamp} />\n      </TableData>\n    </>\n  );\n};\n\nexport default HelmReleaseResourcesRow;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { Timestamp, ResourceIcon } from '@console/internal/components/utils';\nimport { LazyActionMenu, Status } from '@console/shared';\nimport { HelmRelease, HelmActionOrigins } from '../../types/helm-types';\nimport { HelmReleaseStatusLabels, releaseStatus } from '../../utils/helm-utils';\nimport { tableColumnClasses } from './HelmReleaseListHeader';\n\nconst HelmReleaseListRow: React.FC<RowFunctionArgs<HelmRelease>> = ({ obj }) => {\n  const actionsScope = {\n    release: obj,\n    actionOrigin: HelmActionOrigins.list,\n  };\n  return (\n    <>\n      <TableData className={tableColumnClasses.name}>\n        <ResourceIcon kind={'Helm Release'} />\n        <Link\n          to={`/helm-releases/ns/${obj.namespace}/release/${obj.name}`}\n          title={obj.name}\n          className=\"co-resource-item__resource-name\"\n        >\n          {obj.name}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses.revision}>{obj.version}</TableData>\n      <TableData className={tableColumnClasses.updated}>\n        <Timestamp timestamp={obj.info.last_deployed} />\n      </TableData>\n      <TableData className={tableColumnClasses.status}>\n        <Status\n          status={releaseStatus(obj.info.status)}\n          title={HelmReleaseStatusLabels[obj.info.status]}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses.chartName}>{obj.chart.metadata.name}</TableData>\n      <TableData className={tableColumnClasses.chartVersion}>\n        {obj.chart.metadata.version}\n      </TableData>\n      <TableData className={tableColumnClasses.appVersion}>\n        {obj.chart.metadata.appVersion || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses.kebab}>\n        <LazyActionMenu context={{ 'helm-actions': actionsScope }} />\n      </TableData>\n    </>\n  );\n};\n\nexport default HelmReleaseListRow;\n","import * as React from 'react';\nimport { Formik, FormikHelpers } from 'formik';\nimport { safeLoad } from 'js-yaml';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { k8sCreateResource, k8sUpdateResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { HELM_CHART_CATALOG_TYPE_ID } from '@console/helm-plugin/src/const';\nimport { ErrorPage404 } from '@console/internal/components/error';\nimport { history, StatusBox } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  K8sResourceKindReference,\n  kindForReference,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { isCatalogTypeEnabled, useActiveNamespace, useQueryParams } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { HelmChartRepositoryModel, ProjectHelmChartRepositoryModel } from '../../../models';\nimport { HelmChartRepositoryData, HelmChartRepositoryType } from '../../../types/helm-types';\nimport CreateHelmChartRepositoryForm from './CreateHelmChartRepositoryForm';\nimport {\n  getDefaultResource,\n  convertToForm,\n  convertToHelmChartRepository,\n} from './helmchartrepository-create-utils';\nimport { validationSchema } from './helmchartrepository-validation-utils';\n\ninterface CreateHelmChartRepositoryProps {\n  showScopeType: boolean;\n  existingRepoName: string;\n}\n\nconst CreateHelmChartRepository: React.FC<CreateHelmChartRepositoryProps> = ({\n  showScopeType,\n  existingRepoName,\n}) => {\n  const queryParams = useQueryParams();\n  const resourceKind: K8sResourceKindReference = queryParams.get('kind');\n  const isEditForm = !!existingRepoName;\n  const actionOrigin = queryParams.get('actionOrigin');\n  const { t } = useTranslation();\n  const [namespace] = useActiveNamespace();\n  const fireTelemetryEvent = useTelemetry();\n  const isHelmEnabled = isCatalogTypeEnabled(HELM_CHART_CATALOG_TYPE_ID);\n  const [hcr, hcrLoaded, hcrLoadError] = useK8sWatchResource<HelmChartRepositoryType>(\n    isEditForm\n      ? {\n          groupVersionKind: {\n            group: 'helm.openshift.io',\n            version: 'v1beta1',\n            kind: resourceKind ? kindForReference(resourceKind) : HelmChartRepositoryModel.kind,\n          },\n          name: existingRepoName,\n          ...(resourceKind &&\n          kindForReference(resourceKind) === ProjectHelmChartRepositoryModel.kind\n            ? { namespace }\n            : {}),\n        }\n      : null,\n  );\n\n  const defaultResource: HelmChartRepositoryType = React.useMemo(\n    () =>\n      hcrLoaded && _.isEmpty(hcrLoadError) && !_.isEmpty(hcr)\n        ? hcr\n        : getDefaultResource(namespace, resourceKind),\n    [hcrLoadError, hcrLoaded, hcr, namespace, resourceKind],\n  );\n\n  const initialValues = React.useMemo(\n    () => ({\n      editorType: EditorType.Form,\n      yamlData: safeJSToYAML(isEditForm ? hcr : defaultResource, 'yamlData', {\n        skipInvalid: true,\n      }),\n      formData: convertToForm(isEditForm ? hcr : defaultResource),\n    }),\n    [isEditForm, hcr, defaultResource],\n  );\n\n  const handleSubmit = async (\n    values: HelmChartRepositoryData,\n    actions: FormikHelpers<HelmChartRepositoryData>,\n  ) => {\n    let HelmChartRepositoryRes: HelmChartRepositoryType;\n\n    if (values.editorType === EditorType.YAML) {\n      try {\n        HelmChartRepositoryRes = safeLoad(values.yamlData);\n        if (\n          HelmChartRepositoryRes &&\n          HelmChartRepositoryRes.kind === 'ProjectHelmChartRepository' &&\n          !HelmChartRepositoryRes?.metadata?.namespace\n        ) {\n          HelmChartRepositoryRes.metadata.namespace = namespace;\n        }\n      } catch (err) {\n        actions.setStatus({\n          submitSuccess: '',\n          submitError: t('helm-plugin~Invalid YAML - {{err}}', { err }),\n        });\n        return null;\n      }\n    } else {\n      HelmChartRepositoryRes = convertToHelmChartRepository(values.formData, namespace);\n    }\n\n    const resourceCall = isEditForm\n      ? k8sUpdateResource({\n          model: modelFor(referenceFor(HelmChartRepositoryRes)),\n          data: HelmChartRepositoryRes,\n          name: existingRepoName,\n        })\n      : k8sCreateResource({\n          model: modelFor(referenceFor(HelmChartRepositoryRes)),\n          data: HelmChartRepositoryRes,\n        });\n\n    const redirectURL =\n      actionOrigin && isHelmEnabled\n        ? `/catalog/ns/${\n            HelmChartRepositoryRes.metadata.namespace ?? namespace\n          }?catalogType=HelmChart`\n        : HelmChartRepositoryRes.kind === ProjectHelmChartRepositoryModel.kind\n        ? `/k8s/ns/${HelmChartRepositoryRes.metadata.namespace}/${referenceFor(\n            HelmChartRepositoryRes,\n          )}/${HelmChartRepositoryRes.metadata.name}`\n        : `/k8s/cluster/${referenceFor(HelmChartRepositoryRes)}/${\n            HelmChartRepositoryRes.metadata.name\n          }`;\n\n    return resourceCall\n      .then(() => {\n        fireTelemetryEvent('Helm Chart Repository', {\n          helmChartRepositoryScope:\n            values.formData?.scope === ProjectHelmChartRepositoryModel.kind\n              ? 'namespace'\n              : 'cluster',\n        });\n        actions.setStatus({\n          submitError: '',\n          submitSuccess: t('helm-plugin~{{hcr}} has been created', {\n            hcr: HelmChartRepositoryRes.kind,\n          }),\n        });\n        history.push(redirectURL);\n      })\n      .catch((err) => {\n        actions.setStatus({\n          submitSuccess: '',\n          submitError: err?.message || t('helm-plugin~Unknown error submitting'),\n        });\n      });\n  };\n\n  const handleCancel = () => history.goBack();\n\n  if (isEditForm && hcrLoaded && !hcr) {\n    return <ErrorPage404 />;\n  }\n\n  return (\n    <StatusBox\n      loaded={hcrLoaded}\n      loadError={hcrLoadError}\n      data={initialValues}\n      label={defaultResource.kind}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema(t)}\n        onSubmit={handleSubmit}\n        enableReinitialize\n      >\n        {(formikProps) => {\n          return (\n            <CreateHelmChartRepositoryForm\n              {...formikProps}\n              namespace={namespace}\n              handleCancel={handleCancel}\n              showScopeType={showScopeType}\n              existingRepo={existingRepoName && hcr}\n            />\n          );\n        }}\n      </Formik>\n    </StatusBox>\n  );\n};\n\nexport default CreateHelmChartRepository;\n","import * as React from 'react';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormFooter,\n  FormBody,\n  FormHeader,\n  FlexForm,\n  SyncedEditorField,\n  CodeEditorField,\n} from '@console/shared/src';\nimport { downloadYaml } from '@console/shared/src/components/editor/yaml-download-utils';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { HelmChartRepositoryModel, ProjectHelmChartRepositoryModel } from '../../../models';\nimport { HelmChartRepositoryType } from '../../../types/helm-types';\nimport CreateHelmChartRepositoryFormEditor from './CreateHelmChartRepositoryFormEditor';\nimport { convertToForm, convertToHelmChartRepository } from './helmchartrepository-create-utils';\n\nconst CreateHelmChartRepositoryForm: React.FC<\n  FormikProps<FormikValues> & {\n    namespace: string;\n    handleCancel: () => void;\n    showScopeType: boolean;\n    existingRepo: HelmChartRepositoryType;\n  }\n> = ({\n  namespace,\n  errors,\n  handleSubmit,\n  handleCancel,\n  status,\n  isSubmitting,\n  dirty,\n  showScopeType,\n  values: { editorType, formData, yamlData },\n  existingRepo,\n}) => {\n  const { t } = useTranslation();\n\n  const LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY =\n    'helm-plugin.createHelmChartRepository.editor.lastView';\n\n  const formEditor = (\n    <CreateHelmChartRepositoryFormEditor\n      showScopeType={showScopeType}\n      existingRepo={existingRepo}\n    />\n  );\n\n  const yamlEditor = (\n    <CodeEditorField\n      name=\"yamlData\"\n      model={\n        formData.scope === ProjectHelmChartRepositoryModel.kind\n          ? ProjectHelmChartRepositoryModel\n          : HelmChartRepositoryModel\n      }\n      showSamples={!existingRepo}\n      onSave={handleSubmit}\n    />\n  );\n\n  const sanitizeToForm = (yamlDeployment: HelmChartRepositoryType) => {\n    const formDetails = convertToForm(yamlDeployment);\n    return formDetails;\n  };\n\n  const sanitizeToYaml = () =>\n    safeJSToYAML(convertToHelmChartRepository(formData, namespace), 'yamlData', {\n      skipInvalid: true,\n    });\n\n  const formTitle =\n    !showScopeType && formData.scope === ProjectHelmChartRepositoryModel.kind\n      ? existingRepo\n        ? t('helm-plugin~Edit ProjectHelmChartRepository')\n        : t('helm-plugin~Create ProjectHelmChartRepository')\n      : existingRepo\n      ? t('helm-plugin~Edit {{label}}', { label: existingRepo.kind })\n      : t('helm-plugin~Create Helm Chart Repository');\n\n  const formDescription =\n    !showScopeType && formData.scope === ProjectHelmChartRepositoryModel.kind\n      ? existingRepo\n        ? t('helm-plugin~Update helm chart repository in the namespace.')\n        : t('helm-plugin~Add helm chart repository in the namespace.')\n      : existingRepo\n      ? existingRepo.kind === ProjectHelmChartRepositoryModel.kind\n        ? t('helm-plugin~Update helm chart repository in the namespace.')\n        : t('helm-plugin~Update the helm chart repository.')\n      : t('helm-plugin~Add helm chart repository.');\n\n  return (\n    <FlexForm onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        <FormHeader title={formTitle} helpText={formDescription} />\n        <SyncedEditorField\n          name=\"editorType\"\n          formContext={{\n            name: 'formData',\n            editor: formEditor,\n            sanitizeTo: sanitizeToForm,\n          }}\n          yamlContext={{\n            name: 'yamlData',\n            editor: yamlEditor,\n            sanitizeTo: sanitizeToYaml,\n          }}\n          lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n          noMargin\n        />\n      </FormBody>\n      <FormFooter\n        errorMessage={status?.submitError}\n        successMessage={status?.submitSuccess}\n        isSubmitting={isSubmitting}\n        submitLabel={existingRepo ? t('helm-plugin~Save') : t('helm-plugin~Create')}\n        disableSubmit={\n          (editorType === EditorType.YAML ? !dirty : !dirty || !_.isEmpty(errors)) || isSubmitting\n        }\n        handleCancel={handleCancel}\n        handleDownload={editorType === EditorType.YAML && (() => downloadYaml(yamlData))}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default CreateHelmChartRepositoryForm;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { HelmChartRepositoryType } from '@console/helm-plugin/src/types/helm-types';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport {\n  InputField,\n  ResourceDropdownField,\n  CheckboxField,\n  RadioGroupField,\n} from '@console/shared/src';\n\nexport type FormData = {\n  formData: {\n    repoName?: string;\n    repoUrl?: string;\n    repoDescription?: string;\n    ca?: string;\n    tlsClientConfig?: string;\n    disabled?: boolean;\n  };\n};\n\ntype CreateHelmChartRepositoryFormEditorProps = {\n  showScopeType: boolean;\n  existingRepo: HelmChartRepositoryType;\n};\n\nconst CreateHelmChartRepositoryFormEditor: React.FC<CreateHelmChartRepositoryFormEditorProps> = ({\n  showScopeType,\n  existingRepo,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: { formData },\n  } = useFormikContext<FormikValues>();\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n  return (\n    <FormSection>\n      {showScopeType && !existingRepo && (\n        <RadioGroupField\n          name=\"formData.scope\"\n          label={t('helm-plugin~Scope type')}\n          options={[\n            {\n              label: t('helm-plugin~Namespaced scoped  (ProjectHelmChartRepository)'),\n              value: 'ProjectHelmChartRepository',\n              children: t('helm-plugin~Add Helm Chart Repository in the selected namespace.'),\n              isChecked: formData.scope === 'ProjectHelmChartRepository',\n            },\n            {\n              label: t('helm-plugin~Cluster scoped (HelmChartRepository)'),\n              value: 'HelmChartRepository',\n              children: t(\n                'helm-plugin~Add Helm Chart Repository at the cluster level and in all namespaces.',\n              ),\n              isChecked: formData.scope === 'HelmChartRepository',\n            },\n          ]}\n        />\n      )}\n      <InputField\n        type={TextInputTypes.text}\n        name=\"formData.repoName\"\n        label={t('helm-plugin~Name')}\n        helpText={\n          !existingRepo ? t('helm-plugin~A unique name for the Helm Chart repository.') : null\n        }\n        isDisabled={!!existingRepo}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"formData.repoDisplayName\"\n        label={t('helm-plugin~Display name')}\n        helpText={t('helm-plugin~A display name for the Helm Chart repository.')}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"formData.repoDescription\"\n        label={t('helm-plugin~Description')}\n        helpText={t('helm-plugin~A description for the Helm Chart repository.')}\n      />\n      <CheckboxField\n        name=\"formData.disabled\"\n        label={t('helm-plugin~Disable usage of the repo in the developer catalog.')}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"formData.repoUrl\"\n        label={t('helm-plugin~URL')}\n        helpText={t('helm-plugin~Helm Chart repository URL.')}\n        required\n      />\n      <ExpandCollapse\n        textExpanded={t('helm-plugin~Hide advanced options')}\n        textCollapsed={t('helm-plugin~Show advanced options')}\n      >\n        <FormSection>\n          <p className=\"pf-v5-c-form__helper-text\">\n            {t(\n              'helm-plugin~Add credentials and custom certificate authority (CA) certificates to connect to private helm chart repository.',\n            )}\n          </p>\n          <ResourceDropdownField\n            name=\"formData.ca\"\n            label={t('helm-plugin~CA certificate')}\n            resources={[\n              {\n                isList: true,\n                kind: ConfigMapModel.kind,\n                namespace: 'openshift-config',\n                optional: true,\n                prop: ConfigMapModel.id,\n              },\n            ]}\n            dataSelector={['metadata', 'name']}\n            fullWidth\n            placeholder={t('helm-plugin~Select ConfigMap')}\n            showBadge\n            autocompleteFilter={autocompleteFilter}\n          />\n\n          <ResourceDropdownField\n            name=\"formData.tlsClientConfig\"\n            label={t('helm-plugin~TLS Client config')}\n            resources={[\n              {\n                isList: true,\n                kind: SecretModel.kind,\n                namespace: 'openshift-config',\n                optional: true,\n                prop: SecretModel.id,\n              },\n            ]}\n            dataSelector={['metadata', 'name']}\n            fullWidth\n            placeholder={t('helm-plugin~Select Secret')}\n            showBadge\n            autocompleteFilter={autocompleteFilter}\n          />\n        </FormSection>\n      </ExpandCollapse>\n    </FormSection>\n  );\n};\n\nexport default CreateHelmChartRepositoryFormEditor;\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport { nameRegex } from '@console/shared/src';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { HelmChartRepositoryData } from '../../../types/helm-types';\n\nconst urlRegex = /^https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,}/;\n\nexport const createHelmChartRepositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    repoName: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'helm-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(100, t('helm-plugin~The repository name cannot exceed than 100 characters.'))\n      .required(t('helm-plugin~Required')),\n    repoDescription: yup\n      .string()\n      .max(2048, t('helm-plugin~The repository name cannot exceed than 2048 characters.')),\n    repoUrl: yup\n      .string()\n      .matches(urlRegex, {\n        message: t('helm-plugin~Invalid Repo URL.'),\n      })\n      .max(2048, t('helm-plugin~Please enter a URL that is less then 2048 characters.'))\n      .required(t('helm-plugin~Required')),\n  });\n\nexport const validationSchema = (t: TFunction) =>\n  yup.mixed().test({\n    test(formValues: HelmChartRepositoryData) {\n      const formYamlDefinition = yup.object({\n        editorType: yup.string().oneOf(Object.values(EditorType)),\n        yamlData: yup.string(),\n        formData: yup.mixed().when('editorType', {\n          is: EditorType.Form,\n          then: createHelmChartRepositoryValidationSchema(t),\n        }),\n      });\n\n      return formYamlDefinition.validate(formValues, { abortEarly: false });\n    },\n  });\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { LazyActionMenu } from '@console/dynamic-plugin-sdk/src/lib-internal';\nimport { RowFunctionArgs, TableData } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp, Kebab, ExternalLink } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { ProjectHelmChartRepositoryModel } from '../../models';\n\nconst tableColumnClasses = [\n  '', // Name\n  '', // Display Name\n  '', // Namespace\n  '', // Disabled\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // Repo URL\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // Created\n  Kebab.columnClass,\n];\n\nconst ProjectHelmChartRepositoryRow: React.FC<RowFunctionArgs> = ({ obj }) => {\n  const { t } = useTranslation();\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={objReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        {obj.spec?.name ? obj.spec.name : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {obj.kind === ProjectHelmChartRepositoryModel.kind ? (\n          <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n        ) : (\n          t('helm-plugin~All Namespaces')\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {obj.spec?.disabled ? t('helm-plugin~True') : t('helm-plugin~False')}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {obj.spec?.connectionConfig?.url ? (\n          <ExternalLink\n            href={obj.spec.connectionConfig.url}\n            text={obj.spec.connectionConfig.url}\n            additionalClassName=\"co-external-link--block\"\n          />\n        ) : (\n          '-'\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={Kebab.columnClass}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default ProjectHelmChartRepositoryRow;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { useAccessReview } from '@console/dynamic-plugin-sdk/src';\nimport { MultiListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { HelmChartRepositoryModel, ProjectHelmChartRepositoryModel } from '../../models';\nimport RepositoriesList from './RepositoriesList';\n\nconst RepositoriesPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const [projectHelmChartListAccess] = useAccessReview({\n    group: ProjectHelmChartRepositoryModel.apiGroup,\n    resource: ProjectHelmChartRepositoryModel.plural,\n    verb: 'list',\n    namespace,\n  });\n\n  const [helmChartListAccess] = useAccessReview({\n    group: HelmChartRepositoryModel.apiGroup,\n    resource: HelmChartRepositoryModel.plural,\n    verb: 'list',\n  });\n  const [projectHelmChartEditAccess] = useAccessReview({\n    group: ProjectHelmChartRepositoryModel.apiGroup,\n    resource: ProjectHelmChartRepositoryModel.plural,\n    verb: 'update',\n    namespace,\n  });\n\n  const [helmChartEditAccess] = useAccessReview({\n    group: HelmChartRepositoryModel.apiGroup,\n    resource: HelmChartRepositoryModel.plural,\n    verb: 'update',\n  });\n\n  let resources = [];\n  if (\n    projectHelmChartListAccess &&\n    projectHelmChartEditAccess &&\n    helmChartListAccess &&\n    helmChartEditAccess\n  ) {\n    resources = [\n      {\n        prop: 'helmChartRepository',\n        kind: referenceForModel(HelmChartRepositoryModel),\n        namespaced: false,\n        isList: true,\n      },\n      {\n        prop: 'projectHelmChartRepository',\n        kind: referenceForModel(ProjectHelmChartRepositoryModel),\n        namespaced: true,\n        namespace,\n        isList: true,\n      },\n    ];\n  } else if (projectHelmChartListAccess && projectHelmChartEditAccess) {\n    resources = [\n      {\n        prop: 'projectHelmChartRepository',\n        kind: referenceForModel(ProjectHelmChartRepositoryModel),\n        namespaced: true,\n        namespace,\n        isList: true,\n      },\n    ];\n  } else if (helmChartListAccess && helmChartEditAccess) {\n    resources = [\n      {\n        prop: 'helmChartRepository',\n        kind: referenceForModel(HelmChartRepositoryModel),\n        namespaced: false,\n        isList: true,\n      },\n    ];\n  }\n\n  const flatten = (resourceLists) => {\n    const projectHelmChartRepositoryData = _.get(\n      resourceLists?.projectHelmChartRepository,\n      'data',\n      [],\n    );\n    const helmChartRepositoryData = _.get(resourceLists?.helmChartRepository, 'data', []);\n    const repositoriesListData = _.concat(projectHelmChartRepositoryData, helmChartRepositoryData);\n    return repositoriesListData;\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('helm-plugin~Helm Repositories')}</title>\n      </Helmet>\n      <MultiListPage\n        namespace={namespace}\n        flatten={flatten}\n        resources={resources}\n        label={t('helm-plugin~Repositories')}\n        ListComponent={RepositoriesList}\n      />\n    </>\n  );\n};\nexport default RepositoriesPage;\n","import * as React from 'react';\nimport { EmptyState, EmptyStateVariant, EmptyStateHeader } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport RepositoriesHeader from './RepositoriesHeader';\nimport RepositoriesRow from './RepositoriesRow';\n\nconst RepositoriesList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n\n  const EmptyMsg = () => (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader\n        titleText={<>{t('helm-plugin~No repositories found')}</>}\n        headingLevel=\"h4\"\n      />\n    </EmptyState>\n  );\n  return (\n    <Table\n      {...props}\n      EmptyMsg={EmptyMsg}\n      aria-label={t('helm-plugin~Helm Chart Repositories')}\n      Header={RepositoriesHeader(t)}\n      Row={RepositoriesRow}\n      virtualize\n    />\n  );\n};\n\nexport default RepositoriesList;\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { LazyActionMenu } from '@console/dynamic-plugin-sdk/src/lib-internal';\nimport { RowFunctionArgs, TableData } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp, Kebab, ExternalLink } from '@console/internal/components/utils';\nimport { referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { HelmChartRepositoryModel, ProjectHelmChartRepositoryModel } from '../../models';\n\nconst helmChartRepositoryReference = referenceForModel(HelmChartRepositoryModel);\nconst projectHelmChartRepositoryReference = referenceForModel(ProjectHelmChartRepositoryModel);\n\nconst tableColumnClasses = [\n  '', // Name\n  '', // Display Name\n  '', // Namespace\n  '', // Disabled\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // Repo URL\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // Created\n  Kebab.columnClass,\n];\n\nconst RepositoriesRow: React.FC<RowFunctionArgs> = ({ obj }) => {\n  const { t } = useTranslation();\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={\n            obj.kind === HelmChartRepositoryModel.kind\n              ? helmChartRepositoryReference\n              : projectHelmChartRepositoryReference\n          }\n          name={obj.metadata.name}\n          namespace={obj.metadata?.namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        {obj.spec?.name ? obj.spec.name : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {obj.metadata.namespace ? (\n          <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n        ) : (\n          t('helm-plugin~All Namespaces')\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {obj.spec?.disabled ? t('helm-plugin~True') : t('helm-plugin~False')}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {obj.spec?.connectionConfig?.url ? (\n          <ExternalLink\n            href={obj.spec.connectionConfig.url}\n            text={obj.spec.connectionConfig.url}\n            additionalClassName=\"co-external-link--block\"\n          />\n        ) : (\n          '-'\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={Kebab.columnClass}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default RepositoriesRow;\n"],"sourceRoot":""}