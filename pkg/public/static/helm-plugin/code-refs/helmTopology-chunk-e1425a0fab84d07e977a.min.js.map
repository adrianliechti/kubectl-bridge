{"version":3,"sources":["webpack:///./packages/helm-plugin/src/topology/index.ts","webpack:///./packages/topology/src/components/workload/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/topology/src/actions/provider.ts","webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./public/components/replicaset.jsx","webpack:///./public/components/daemon-set.tsx","webpack:///./public/components/deployment.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarTabSection.tsx","webpack:///./packages/topology/src/topology-types.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/Decorator.tsx","webpack:///./packages/topology/src/filters/index.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/BaseEdge.tsx","webpack:///./packages/topology/src/components/workload/utils.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/topology/src/filters/const.ts","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/topology/src/actions/edgeActions.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/topology/src/actions/modify-application.ts","webpack:///./packages/topology/src/filters/filter-utils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/topology/src/actions/contextMenuActions.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/BaseNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecoratorBubble.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNode.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./packages/topology/src/components/graph-view/components/index.ts","webpack:///./packages/topology/src/components/graph-view/components/componentUtils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodeContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/index.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/index.ts","webpack:///./packages/topology/src/filters/useDisplayFilters.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNodeAnchor.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/ResourceKindsInfo.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/PodSet.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./packages/topology/src/elements/OdcBaseEdge.ts","webpack:///./packages/topology/src/components/graph-view/index.ts","webpack:///./packages/topology/src/filters/FilterProvider.tsx","webpack:///./packages/topology/src/actions/index.ts","webpack:///./packages/topology/src/filters/useShowLabel.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/nodeUtils.ts","webpack:///./packages/topology/src/components/workload/CronJobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DaemonSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentConfigSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/JobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/pods-tab-section.tsx","webpack:///./packages/topology/src/components/workload/ResolveAdapter.ts","webpack:///./packages/topology/src/components/workload/StatefulSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/workload-resource-link.tsx","webpack:///./packages/topology/src/components/workload/build-tab-section.tsx","webpack:///./packages/topology/src/components/workload/network-tab-section.tsx","webpack:///./packages/topology/src/components/workload/jobs-tab-section.tsx","webpack:///./packages/topology/src/components/workload/PodSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/resource-alert.tsx","webpack:///./packages/topology/src/components/workload/vpa-tab-section.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/EditDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/MonitoringAlertsDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/UrlDecorator.tsx","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/topology/src/actions/nodeActions.ts","webpack:///./packages/topology/src/behavior/useHover.ts","webpack:///./packages/topology/src/behavior/withCreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/componentFactory.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/AggregateEdge.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ConnectsTo.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/CreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ServiceBinding.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/TrafficConnector.tsx","webpack:///./packages/topology/src/filters/useAppliedDisplayFilters.ts","webpack:///./packages/topology/src/filters/useSearchFilter.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/Application.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/WorkloadNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/index.ts","webpack:///./packages/topology/src/components/graph-view/components/NodeShadows.tsx","webpack:///./packages/topology/src/components/graph-view/Topology.tsx","webpack:///./packages/topology/src/elements/odcElementFactory.ts","webpack:///./packages/dev-console/src/components/import/render-utils.tsx","webpack:///./packages/dev-console/src/components/import/CheIcon.tsx","webpack:///./packages/helm-plugin/src/utils/helm-utils.ts","webpack:///./packages/topology/src/components/modals/MoveConnectionModal.tsx","webpack:///./packages/topology/src/components/modals/index.ts","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx","webpack:///./packages/topology/src/elements/index.ts","webpack:///./packages/topology/src/redux/action.ts","webpack:///./packages/console-shared/src/components/pod/PodsOverview.tsx","webpack:///./packages/topology/src/components/workload/BuildOverview.tsx","webpack:///./packages/topology/src/components/workload/NetworkingOverview.tsx","webpack:///./packages/topology/src/components/workload/JobsOverview.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/getNodeDecorators.tsx","webpack:///./packages/topology/src/data-transforms/useRoutesURL.ts","webpack:///./packages/helm-plugin/src/types/helm-types.ts","webpack:///./packages/topology/src/components/graph-view/components/withTopologyContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/GraphComponent.tsx","webpack:///./packages/topology/src/redux/const.ts","webpack:///./packages/topology/src/components/graph-view/components/RegroupHint.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/ApplicationGroupExpanded.tsx","webpack:///./packages/topology/src/components/graph-view/layouts/layoutFactory.ts","webpack:///./packages/topology/src/components/graph-view/layouts/TopologyColaLayout.ts","webpack:///./packages/knative-plugin/src/topology/layouts/layoutConstraints.ts","webpack:///./packages/topology/src/components/graph-view/TopologyControlBar.tsx","webpack:///./packages/helm-plugin/src/topology/components/const.ts","webpack:///./packages/helm-plugin/src/catalog/utils/const.ts","webpack:///./packages/topology/src/behavior/index.ts","webpack:///./packages/helm-plugin/src/topology/helmFilters.ts","webpack:///./packages/helm-plugin/src/topology/components/helmComponentFactory.ts","webpack:///./packages/helm-plugin/src/topology/isHelmResource.ts","webpack:///./packages/helm-plugin/src/topology/components/getHelmReleaseStatusDecorator.tsx","webpack:///./packages/helm-plugin/src/topology/helm-data-transformer.ts","webpack:///./packages/helm-plugin/src/topology/components/HelmRelease.tsx","webpack:///./packages/helm-plugin/src/topology/components/HelmReleaseGroup.tsx","webpack:///./packages/helm-plugin/src/topology/components/HelmReleaseStatusDecorator.tsx"],"names":["getHelmTopologyDataModel","useTopologyWorkloadActionProvider","element","resource","actions","getType","k8sKind","undefined","useTopologyVisualConnectorActionProvider","getSource","kindObj","inFlight","ModifyCount","AddStorage","common","factory","menuActions","kind","obj","labelKey","callback","dc","req","apiVersion","name","metadata","latest","force","opts","ns","namespace","path","rollout","catch","err","error","message","accessReview","group","apiGroup","plural","subresource","verb","spec","paused","getDeploymentConfigStatus","conditions","progressingFailure","type","reason","status","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","t","timeout","updatePeriod","interval","triggers","join","className","label","hideEmpty","strategy","count","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","isInline","variant","title","href","deprecatedDeploymentConfig","text","additionalClassName","DeploymentConfigsDetails","model","key","uid","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","props","loader","then","c","envPath","pages","details","editYaml","nameKey","component","showTitle","selector","canCreate","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","context","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","displayName","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","Header","Row","virtualize","DeploymentConfigsPage","createProps","to","ListComponent","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","annotations","replicationController","revision","phase","tableColumnClasses","columnClass","ReplicationControllerTableRow","columnID","statusReplicas","specReplicas","timestamp","creationTimestamp","ReplicationControllersList","sortField","transforms","id","sortFunc","ReplicationControllersPage","Details","replicaSet","ReplicaSetPods","ReplicaSetsDetailsPage","ReplicaSetTableRow","count1","count2","labels","ReplicaSetsList","ReplicaSetsPage","getExtensionsActionsForKind","DaemonSetDetailsList","ds","DaemonSetDetails","daemonset","podData","resourceKind","enableScaling","EnvironmentTab","DaemonSetTableRow","currentNumber","currentNumberScheduled","desiredNumber","desiredNumberScheduled","DaemonSets","DaemonSetsPage","DaemonSetPods","DaemonSetsDetailsPage","prometheusIsAvailable","metrics","deployment","DeploymentDetailsList","rollingUpdate","progressDeadlineSeconds","DeploymentDetails","ReplicaSetsTab","DeploymentsDetailsPage","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","push","groupResources","groupResource","nextResource","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","labelPluralKey","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","edges","targetNode","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","deploymentData","inProgressDeploymentData","completedDeploymentData","previous","progressRC","completedRC","hasGutter","rc","isRollingOut","size","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","editAccess","canEdit","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","TopologyViewType","TopologyDisplayFilterType","SHOW_GROUPING_HINT_EVENT","radius","ariaLabel","external","rest","decorator","showBackground","rel","stopPropagation","role","endTerminalType","directional","onShowRemoveConnector","onHideRemoveConnector","targetDragRef","sourceDragRef","onSelect","controlled","getDataFromAdapter","resolvedExtensions","properties","adapt","usePodsAdapterForWorkloads","podsAdapterForWorkloads","provider","buildsAdapterForWorkloads","networkAdapterForWorkloads","usePodsAdapterForCronJobWorkloads","setPods","setLoaded","setLoadError","watchedResources","errorKey","updatedPods","podsAdapterForCronJobWorkload","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","SHOW_POD_COUNT_FILTER_ID","SHOW_LABELS_FILTER_ID","EXPAND_APPLICATION_GROUPS_FILTER_ID","EXPAND_GROUPS_FILTER_ID","DEFAULT_TOPOLOGY_FILTERS","expand","DEFAULT_SUPPORTED_FILTER_IDS","healthChecksAdded","healthChecksUrl","AddHealthChecks","hidden","EditHealthChecks","CommonActionFactory","Delete","cta","Edit","ModifyLabels","blocking","ModifyAnnotations","ModifyPodSelector","ModifyTolerations","modalClassName","getCommonResourceActions","NodeType","EdgeType","KameletType","dx","dy","stdDeviation","floodColor","floodOpacity","window","navigator","userAgent","in","in2","operator","getAvailableTargetForEdge","currentTargets","getSourceEdges","getId","n1","n2","localeCompare","MoveConnectorAction","getElements","availableTargets","DeleteConnectorAction","edgeActions","moveConnection","resourceLimitsModal","m","getModifyApplicationAction","insertBefore","initialApplication","TOPOLOGY_SEARCH_FILTER_KEY","TOPOLOGY_LABELS_FILTER_KEY","NameLabelFilterValues","onSearchChange","searchQuery","clearNameFilter","clearLabelFilter","clearAll","getSupportedTopologyFilters","topology","plugins","devconsole","getSupportedTopologyKinds","getTopologySearchQuery","getFilterById","isExpanded","showKind","WorkloadTableRow","customData","WorkloadTableHeader","createContextMenuItems","option","SUB_MENU","GROUP_MENU","action","graphActionContext","graph","connectorSource","groupActionContext","contextMenuActions","csvName","innerRadius","icon","hoverRef","onShowCreateConnector","onContextMenu","contextMenuOpen","createConnectorAccessVerb","createConnectorDrag","alertVariant","hoverChange","setHoverChange","hover","internalHoverRef","nodeHoverRefs","cx","cy","iconRadius","filtered","showLabel","kindData","detailsLevel","getDetailsLevel","showDetails","low","badgeClassName","kindStr","toLowerCase","kindColor","prev","truncateLength","scaleNode","high","badge","kindAbbr","badgeColor","showStatusBackground","fill","xlinkHref","otherDecoratorProps","fontSize","truncateOptions","bgClassName","emptyValue","typeIconClass","textHover","textHoverRef","iconSize","iconRef","iconWidth","iconHeight","groupSize","groupRef","getCustomShape","rx","ry","iconClass","TOP_MARGIN","top","triggerRef","textAnchor","EditResourceLimits","hasHPAs","mapOfResources","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","actionOptions","MOVE_CONNECTOR_DROP_TYPE","NODE_DRAG_TYPE","EDGE_DRAG_TYPE","canDropEdgeOnNode","operation","getTargetEdges","highlightNode","monitor","getOperation","isDragging","getItem","canDropOnNode","nodeDragSourceSpec","allowRegroup","SHIFT","edit","canCancel","begin","dropResult","isCancelled","didDrop","controller","getNodeById","appendChild","collect","dragging","regrouping","noRegroupDragSourceSpec","nodesEdgeIsDragging","nodeDropTargetSpec","accept","canDrop","dropTarget","isOver","edgeDragging","graphDropTargetSpec","hitTest","getItemType","hasParent","dragInProgress","dragEditInProgress","dragCreate","hasDropTarget","dropHint","applicationGroupDropTargetSpec","droppable","dragRegroupable","edgeDragSourceSpec","failureTitle","raise","drag","setEndPoint","showIcon","noDropTargetSpec","withNoDrop","withContextMenu","document","getElementById","createVisualConnector","createConnectorCallback","dropHints","relationshipProviders","relationshipProviderExtensions","curRelProvider","create","createConnectors","createConnectorExtensions","creator","getter","isWorkloadRegroupable","groupContextMenu","graphContextMenu","useDisplayFilters","FILTER_ID","circleRef","typedIconSize","typedIconRef","GroupNodeAnchor","offset","center","offset2x","resourcesData","resourceTypes","RESOURCE_INFO_PADDING","calculateInnerPodStatusRadius","outerPodStatusInnerRadius","outerPodStatusWidth","innerPodStatusOuterRadius","innerPodStatusInnerRadius","podSetInnerRadius","podStatusInnerRadius","podStatusStrokeWidth","innerStrokeWidth","podStatusInset","PodSet","showPodCount","podStatusOuterRadius","hpaControlledScaling","ownerKind","subTitle","titleComponent","outerRadius","xmlns","viewBox","OdcBaseEdge","getAppliedFilters","useFilterContextValues","appliedFilters","setAppliedFilters","appliedFiltersLoaded","filtersLoaded","setFiltersLoaded","setFilters","getTopologyFilters","setTopologyFilters","displayFilters","FilterContext","FilterProvider","Provider","useShowLabel","showLabelsFilter","getKindStringAndAbbreviation","CronJobSideBarDetails","cronjob","startingDeadlineSeconds","lastScheduleTime","useCronJobSideBarDetails","DaemonSetSideBarDetails","useDaemonSetSideBarDetails","DeploymentConfigSideBarDetails","useDeploymentConfigSideBarDetails","DeploymentSideBarDetails","useDeploymentSideBarDetails","JobSideBarDetails","job","activeDeadlineSeconds","useJobSideBarDetails","PodsTabSection","podAdapter","podAdapterExtensionResolved","podsData","podsDataLoaded","setPodData","handleAdapterResolved","setTimeout","useAdapterHook","onAdapterDataResolved","usePodsSideBarTabSection","podAdapterExtension","StatefulSetSideBarDetails","ss","useStatefulSetSideBarDetails","getWorkloadResourceLink","kindReference","BuildTabSection","buildAdapter","extensionsResolved","buildConfigsDataLoaded","setBuildConfigsData","useBuildsSideBarTabSection","buildAdapterExtensions","NetworkTabSection","networkAdapter","useNetworkingSideBarTabSection","networkAdapterExtensions","extensionsLoaded","JobsTabSection","useJobsSideBarTabSection","PodSideBarDetails","pod","usePodSideBarDetails","addHealthChecksRefs","useHealthChecksAlert","kindForCRDResource","canAddHealthChecks","canAddHealthChecksLoading","containersName","showAlert","addHealthChecksLink","alertMessage","dismissible","useResourceQuotaAlert","fireTelemetryEvent","canUseAlertAction","canUseAlertActionLoading","replicaFailureMsg","resourceQuotaRequested","alertAction","showAlertActionLink","alertActionCta","alertActionLink","actionLinks","VPATabSection","vpas","vpa","groupVersionKind","useVpaSideBarTabSection","verticalPodAutoscalers","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","link","left","iconOnly","noTooltip","workloadData","cheEnabled","editUrl","repoIcon","right","dispatch","showMonitoringOverview","firingAlerts","severityAlertType","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","deploymentConfigRollout","CreateServiceBinding","EMPTY","delayIn","delayOut","setHover","mountRef","unsetHandle","delayHandle","delayedStateChange","newState","delay","clearTimeout","onMouseEnter","onMouseLeave","addEventListener","removeEventListener","DEFAULT_HANDLE_ANGLE","PI","DEFAULT_HANDLE_ANGLE_TOP","DEFAULT_HANDLE_LENGTH","CreateConnectorWidget","onKeepAlive","onCreate","ConnectorComponent","handleAngle","handleAngleTop","handleLength","contextMenuClass","dragItem","dragOperation","hideConnectorMenu","prompt","setPrompt","setActive","hintsRef","dragProps","getDragEvent","choices","getDropHints","hints","dragRef","refs","dragEvent","startPoint","endPoint","getAnchor","getLocation","isRightLabel","getLabelPosition","referencePoint","tan","cos","sin","translateFromParent","topologyDefaultCreateConnector","fillOpacity","pageX","pageY","open","onRequestClose","withCreateConnector","setShow","alive","setKeepAlive","onHideCreateConnector","isAlive","componentFactory","others","bidirectional","none","directionalAlt","tipContents","sbr","hasError","ERROR","errorCross","getStartPoint","getEndPoint","centerX","centerY","angleDeg","atan2","classNames","topologyEdge","danger","topologyConnectorArrow","x1","y1","x2","y2","strokeWidth","endTerminalStatus","useAppliedDisplayFilters","EMPTY_QUERY_PARAMS","useSearchFilter","labelsQuery","labelsMatched","labelsString","fuzzyCaseInsensitive","dragNodeRef","needsHintRef","needsHint","groupClasses","StatusSeverities","warning","normal","getAggregateStatus","donutStatus","alertSeverity","buildStatus","pipelineStatus","workloadRqAlertVariant","worstPodStatus","podStatus","CrashLoopBackOff","Warning","getNodePodStatus","Critical","WorkloadPodsNode","urlAnchorRef","dropTooltip","decoratorRadius","tipContent","showPodCountFilter","decorators","iconImageUrl","nodeDecorators","workloadRqAlert","animationDuration","nodeStatus","attachments","WorkloadNode","NODE_SHADOW_FILTER_ID","NODE_SHADOW_FILTER_ID_HOVER","NodeShadows","STORED_NODE_LAYOUT_FIELDS","TopologyGraphView","visualizationReady","visualization","controlsDisabled","selectedId","dragHint","selectedIds","layout","layers","getStoredGraphModel","onGraphModelChange","setVisualization","userSettingState","topologyLayoutDataJson","setUserSettingState","setTopologyLayoutData","applicationRef","setVisualizationReady","setDragHint","storedLayoutApplied","componentFactoryExtensions","isStaticResolved","dynamicComponentFactoryExtensions","isDynamicResolved","createVisualization","storedLayout","newVisualization","registerElementFactory","registerLayoutFactory","onCurrentGraphModelChange","visModel","saveGraphModel","scale","scaleExtent","onVisualizationLayoutChange","updatedLayoutData","currentStore","setTopologyLayout","prevState","fromModel","ids","selectedEntity","visualizationRef","storedGraphModel","storedNode","sn","oldNode","oldEdge","getEdgeById","isNodeInView","graphBounds","viewNode","closestNode","closestDistance","nextNode","distance","nodeBounds","nodeX","nodeY","sqrt","nodeDistanceToBounds","panIntoView","selectedItem","registerComponentFactory","getFactory","hint","reset","resizeTimeout","visibleEntity","minimumVisible","routeDecoratorIcon","routeURL","fillRule","stroke","HelmReleaseStatusLabels","Deployed","PendingInstall","PendingUpgrade","PendingRollback","SelectedReleaseStatuses","OtherReleaseStatuses","releaseStatus","releaseStatusReducer","release","info","helmReleasesRowFilters","filterGroupName","reducer","filterHelmReleasesByStatus","releases","filterHelmReleasesByName","fetchHelmReleases","limitInfo","fetchString","fetchHelmRelease","helmReleaseName","getChartURL","helmChartData","chartVersion","chartRepoName","chartData","urls","getChartRepositoryTitle","chartRepositories","chartRepository","getChartIndexEntry","chartEntries","chartName","getChartEntriesByName","annotatedName","providerName","chartRepositoryTitle","indexEntry","charts","chart","concatVersions","appVersion","getChartVersions","getOriginRedirectURL","actionOrigin","releaseName","getHelmActionConfig","helmAction","chartURL","chartIndexEntry","Create","form","yaml","helmReleaseApi","redirectURL","Upgrade","put","Rollback","flattenReleaseResources","getChartValuesYAML","orderedValuesFile","orderedValues","atob","loadHelmManifestResources","manifest","schema","Boolean","getChartReadme","readmeFile","helmActionString","fetchHelmReleaseHistory","isGoingToTopology","nodeItem","MoveConnectionForm","handleSubmit","isSubmitting","setTranslator","isOpen","setOpen","isDirty","headingLevel","fieldId","_","toggle","toggleRef","isFullWidth","onOpenChange","isSelected","submitDisabled","submitError","MoveConnectionModal","newTarget","handlePromise","setStatus","initialValues","formikProps","moveConnectionModal","editApplicationModal","Recommendations","recommendations","recommendation","containerRecommendations","VerticalPodAutoscalerRecommendations","Actions","setSupportedTopologyFilters","supportedFilters","supportedTopologyFilters","setSupportedTopologyKinds","supportedKinds","supportedTopologyKinds","setTopologyGraphModel","topologyGraphModel","getTopologyGraphModel","podUpdateTime","allStatuses","updateTimes","times","nextStatus","running","errorPhases","isPodError","isEvicted","podCompare","pod1","pod2","error1","evicted1","runtime1","runtime2","PodOverviewItem","podName","tooltipFlag","PodsOverviewList","PodsOverviewContent","allPodsLink","emptyText","showWaitingPods","setShowWaitingPods","shipwrightBuilds","buildRunBeta","buildRunAlpha","watchedBuildRuns","allBuildRuns","useGetShipwrightBuilds","waitingForBuildConfig","completionTimestamp","isComplete","waitingForShipwright","buildRun","buildRunIsComplete","showWaitingForBuildAlert","isDeploymentGeneratedByWebConsole","filteredPods","containerStatuses","containerStatus","imageID","isPodWithoutImageId","errorPodCount","podsShown","linkTo","emptyMessage","podAlert","podSize","StatusTitle","Complete","New","BuildStatus","logSnippet","BuildOverviewItem","startTimestamp","lastUpdated","spin","BuildOverviewList","canStartBuild","inline","buildsLength","BuildOverview","ServicePortList","service","ports","protocol","targetPort","ServicesOverviewListItem","ServicesOverviewList","RoutesOverviewListItem","RoutesOverviewList","NetworkingOverview","serviceResources","routeResources","JobOverviewItem","podsLink","standalone","showTooltip","JobsOverviewList","JobsOverview","allJobsLink","jobCount","getNodeDecorators","nodeRadius","nodeWidth","nodeHeight","location","deltaX","deltaY","upperRight","lowerRight","upperLeft","lowerLeft","retDecorator","getExtensionDecoratorForQuadrant","useRoutesURL","annotationURL","watchedURL","HelmReleaseStatus","HelmActionType","HelmActionOrigins","actionContext","atPoint","setReference","graphClasses","setRenderConstraint","addClassList","removeClassList","classList","add","remove","TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY","shift","collapsible","secondaryLabel","dndDropRef","badgeTextColor","badgeBorderColor","badgeLocation","labelIconClass","labelIcon","labelIconPadding","onCollapseChange","hovered","labelHover","labelHoverRef","dragLabelRef","isHover","anchorRef","outlineRef","labelLocation","pathRef","altGroup","hullPadding","getNodes","points","getNodeShape","hullPoints","lowPoints","delta","Infinity","computeLabelLocation","groupClassName","topologyGroup","innerGroupClassName","topologyGroupBackground","topologyGroupLabel","paddingX","paddingY","getNodeStatus","actionIcon","onActionIconClick","DEFAULT_LAYOUT","SUPPORTED_LAYOUTS","layoutFactory","layoutOnDrag","TopologyColaLayout","groups","initialRun","addingNodes","startLayout","getNodeTimeStamp","nodeSorter","node1","node2","alignNodeConnector","filteredNode","constraints","connectorLinks","isFixed","l1","l2","nextLink","serviceDistance","linkNodeConstraint","axis","offsets","nextOffset","gap","linkDistance","equality","layoutConstraints","leafNodes","leaves","serviceConstraint","eventSourceLinksConnector","pubSubLinksConnector","eventSinkLinksConnector","TopologyControlBar","controlButtons","zoomInCallback","scaleBy","zoomInTip","zoomInAriaLabel","zoomInDisabled","zoomOutCallback","zoomOutTip","zoomOutAriaLabel","zoomOutDisabled","fitToScreenCallback","fit","fitToScreenTip","fitToScreenAriaLabel","fitToScreenDisabled","resetViewCallback","resetViewTip","resetViewAriaLabel","resetViewDisabled","legend","TYPE_HELM_RELEASE","TYPE_HELM_WORKLOAD","HELM_GROUP_WIDTH","HELM_GROUP_HEIGHT","HELM_GROUP_PADDING","CHART_NAME_ANNOTATION","PROVIDER_TYPE_ANNOTATION","PROVIDER_NAME_ANNOTATION","SUPPORT_URL_ANNOTATION","PROVIDER_TYPE","PROVIDER_TYPE_KEYS","community","partner","redhat","applyHelmDisplayOptions","found","expanded","getHelmComponentFactory","isHelmResourceInModel","getHelmReleaseStatusDecorator","getHelmReleaseKey","getHelmGraphModelFromMap","helmResourcesMap","helmDataModel","helmResources","typedDataModel","hasOwnProperty","isHelmReleaseNode","helmResourcesData","nodeIcon","chartIcon","releaseNotes","returnData","nextSecret","appGroup","helmGroup","manifestResources","getTopologyHelmReleaseGroupItem","secretCount","mapNamespace","helmSecrets","helmReleaseCount","retrieveNewReleaseMap","resourceKindName","releaseVersion","notes","getHelmReleaseMap","innerHover","innerHoverRef","labelDragging","nodeRefs","hasChildren"],"mappings":"uHAAA,maAOO,MAAMA,EAA2B,e,iCCPxC,g4C,kCCAA,snD,kCCAA,qNASO,MAAMC,EAAqCC,IAChD,MAAMC,EAAW,YAAYD,GACvBE,EAAU,kBAAQ,KACtB,GAAIF,EAAQG,YAAc,IAAe,OACzC,IAAKF,EACH,MAAO,GAET,MAAMG,EAAU,aAAS,aAAaH,IACtC,MAAO,CAAC,YAA2BG,EAASH,KAC3C,CAACD,EAASC,IAEb,OAAO,kBAAQ,IACRC,EACE,CAACA,GAAS,OAAMG,GADF,CAAC,IAAI,OAAMA,GAE/B,CAACH,KAGOI,EAA4CN,I,MACvD,MAAMC,EAAW,YAA6B,QAAjB,EAAAD,EAAQO,iBAAS,oBAAjBP,KACtBQ,EAASC,GAAY,YAAY,aAAaR,UAAY,KAC3DC,EAAU,kBAAQ,KACtB,GAAKM,GAAWR,EAAQG,YAAc,IACtC,MAAO,CAAC,YAAoBK,EAASR,GAAU,YAAsBQ,EAASR,KAC7E,CAACA,EAASQ,IAEb,OAAO,kBAAQ,IACRN,EACE,CAACA,GAAUO,OAAUJ,GADP,CAAC,IAAI,OAAMA,GAE/B,CAACH,EAASO,M,o8BCmBf,MAkDM,YAAEC,EAAW,WAAEC,EAAU,OAAEC,GAAW,IAAMC,QAErCC,EAA6B,CAlCP,CAACC,EAAeC,KAAyB,CAE1EC,SAAU,uBACVC,SAAU,IAnBI,CAACC,IACf,MAAMC,EAAM,CACVL,KAAM,oBACNM,WAAY,uBACZC,KAAMH,EAAGI,SAASD,KAClBE,QAAQ,EACRC,OAAO,GAEHC,EAAO,CACXJ,KAAMH,EAAGI,SAASD,KAClBK,GAAIR,EAAGI,SAASK,UAChBC,KAAM,eAER,OAAO,aAAU,wBAAuBT,EAAKM,IAO3CI,CAAQd,GAAKe,MAAOC,IAClB,MAAMC,EAAQD,EAAIE,QAClB,YAAW,CAAED,YAEjBE,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfC,YAAa,cACbjB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,YAIuB,CAACzB,EAAeC,KAAyB,CAGxEC,SAAUD,EAAIyB,KAAKC,OAAS,yBAA2B,wBACvDxB,SAAU,IAAM,aAAaH,EAAMC,GAAKe,MAAOC,GAAQ,YAAW,CAAEC,MAAOD,EAAIE,WAC/EC,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,WASR,YAAkB9B,GAClB,IACA,IACA,IACAC,EACA,IACA,OACG,aAAiC,yBACpC,OACGC,GAGC+B,EAA6BxB,IACjC,MAAMyB,EAAa,IAAMzB,EAAI,qBACvB0B,EAAqB,IAAOD,EAAY,CAC5CE,KAAM,cACNC,OAAQ,2BACRC,OAAQ,UAEJC,EAAiB,IAAOL,EAAY,CAAEE,KAAM,iBAAkBE,OAAQ,SAC5E,OAAIH,GAAsBI,EACjB,SAIP9B,EAAG6B,OAAOE,oBAAsB/B,EAAG6B,OAAOG,iBAC1ChC,EAAGsB,KAAKW,WAAajC,EAAG6B,OAAOE,kBAExB,aAEF,YAGIG,EAA8B,EAAGlC,S,QAC5C,MAAM,EAAEmC,GAAM,2BACRC,EAAU,IAAMpC,EAAI,8CACpBqC,EAAe,IAAMrC,EAAI,mDACzBsC,EAAW,IAAMtC,EAAI,+CACrBuC,EAAW,IAAMvC,EAAGsB,KAAKiB,SAAU,QAAQC,KAAK,MACtD,OACE,sBAAIC,UAAU,sBACZ,gBAAC,IAAW,CAACC,MAAOP,EAAE,yBAA0BtC,IAAKG,EAAIU,KAAK,yBAC9D,gBAAC,IAAW,CAACgC,MAAOP,EAAE,kBAAmBtC,IAAKG,EAAIU,KAAK,yBAAyBiC,WAAS,IACzF,gBAAC,IAAW,CAACD,MAAOP,EAAE,0BAA2BtC,IAAKG,EAAIU,KAAK,uBACpC,YAA1BV,EAAGsB,KAAKsB,SAASjB,MAChB,gCACE,gBAAC,IAAW,CACVe,MAAOP,EAAE,kBACTtC,IAAKG,EACLU,KAAK,6CACLiC,WAAS,GAERR,EAAE,0BAA2B,CAAEU,MAAOT,KAEzC,gBAAC,IAAW,CACVM,MAAOP,EAAE,wBACTtC,IAAKG,EACLU,KAAK,kDACLiC,WAAS,GAERR,EAAE,0BAA2B,CAAEU,MAAOR,KAEzC,gBAAC,IAAW,CACVK,MAAOP,EAAE,mBACTtC,IAAKG,EACLU,KAAK,8CACLiC,WAAS,GAERR,EAAE,0BAA2B,CAAEU,MAAOP,KAEzC,gBAAC,IAAW,CACVI,MAAOP,EAAE,0BACTtC,IAAKG,EACLU,KAAK,8CAEJyB,EAAE,6CAA8C,CAC/CW,eAA6D,QAA7C,EAAA9C,EAAGsB,KAAKsB,SAASG,cAAcD,sBAAc,QAAI,EACjED,MAAO7C,EAAGsB,KAAKW,YAGnB,gBAAC,IAAW,CACVS,MAAOP,EAAE,oBACTtC,IAAKG,EACLU,KAAK,wCAEJyB,EAAE,iDAAkD,CACnDa,SAAiD,QAAvC,EAAAhD,EAAGsB,KAAKsB,SAASG,cAAcC,gBAAQ,QAAI,EACrDH,MAAO7C,EAAGsB,KAAKW,aAKvB,gBAAC,IAAW,CAACS,MAAOP,EAAE,4BAA6BtC,IAAKG,EAAIU,KAAK,wBAC9DV,EAAGsB,KAAK2B,gBACLd,EAAE,0BAA2B,CAAEU,MAAO7C,EAAGsB,KAAK2B,kBAC9Cd,EAAE,0BAER,gBAAC,IAAW,CAACO,MAAOP,EAAE,mBAAoBtC,IAAKG,EAAIU,KAAK,gBAAgBiC,WAAS,GAC9EJ,GAEH,gBAAC,KAAY,CAAC1C,IAAKG,IACnB,gBAAC,IAAwB,CAACH,IAAKG,MAKxBkD,EAA6C,KACxD,MAAM,EAAEf,GAAM,2BACd,OACE,gBAAC,IAAK,CACJgB,UAAQ,EACRC,QAAQ,OACRC,MAAOlB,EAAE,oEAET,yBACGA,EACC,6GAGJ,yBACGA,EACC,4JAGF,gBACA,gBAAC,IAAY,CACXmB,KAAM,aAAoB,KAAkBC,4BAC5CC,KAAMrB,EAAE,uCACRsB,oBAAoB,oBAOjBC,EAA+D,EAAG7D,IAAKG,MAClF,MAAM,EAAEmC,GAAM,2BACd,OACE,gCACE,uBAAKM,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,qCACvBnC,EAAGsB,KAAKC,QAAU,gBAAC,KAAmB,CAAC1B,IAAKG,EAAI2D,MAAO,0BACxD,gBAAC,IAAU,CAACC,IAAK5D,EAAGI,SAASyD,IAAKhE,IAAKG,EAAIU,KAAK,mBAChD,uBAAK+B,UAAU,yBACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,KAAe,CAAC3D,SAAUkB,EAAI8D,iBAAe,EAACC,kBAAgB,EAACC,iBAAe,GAC7E,0BAAK7B,EAAE,kBACP,0BACE,gBAAC,KAAM,CAACN,OAAQL,EAA0BxB,QAIhD,uBAAKyC,UAAU,YACb,gBAACP,EAA2B,CAAClC,GAAIA,QAKzC,uBAAKyC,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,uBACxB,gBAAC,IAAc,CAAC8B,WAAYjE,EAAGsB,KAAK4C,SAAS5C,KAAK2C,cAEpD,uBAAKxB,UAAU,mBACb,gBAAC,IAAY,CAAC3D,SAAUkB,EAAImE,QAAShC,EAAE,qBAEzC,uBAAKM,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,uBACxB,gBAAC,IAAU,CAACV,WAAYzB,EAAG6B,OAAOJ,gBAMpC2C,EAAmBC,GACvB,gBAAC,IAAc,eACbC,OAAQ,IAAM,sDAA4BC,KAAMC,GAAMA,EAAEJ,kBACpDC,IAIFI,EAAU,CAAC,OAAQ,WAAY,OAAQ,cA4BvCC,EAAQ,CACZ,KAAWC,QAAQjB,GACnB,KAAWkB,WACX,CACEtB,KAAM,yBACNuB,QAAS,gCACTC,UAxBwE,EAAGjF,UAC7E,MACEO,UAAU,UAAEK,EAAS,KAAEN,IACrBN,EAGJ,OACE,gBAAC,6BAA0B,CACzBkF,WAAW,EACXtE,UAAWA,EACXuE,SAAU,CACR,sCAAuC7E,GAEzC8E,WAAW,MAaf,KAAWC,OACX,KAAWC,UApCiBd,GAC5B,gBAACD,EAAe,CACdvE,IAAKwE,EAAMxE,IACXuF,WAAYf,EAAMxE,IAAIyB,KAAK4C,SAAS5C,KACpCmD,QAASA,EACTY,UAAU,KAgCZ,KAAWC,OAAO,wBAGdC,EAAsD,EAAGlG,UAASQ,UACtE,MACM2F,EAAU,CAAE,CADG,aAAkBnG,IACLQ,GAElC,OACE,gBAAC,IAAqB,CAAC2F,QAASA,GAC7B,EAAGzG,UAAS0G,UAASC,YAElBA,GACE,gBAAC,IAAU,CAAC3G,QAASA,EAAS0G,QAASA,EAASrC,QAAS,IAAkBuC,aAQ1EC,EAA0CvB,GAKnD,gBAAC,IAAW,iBACNA,EAAK,CACTzE,KA7SuD,mBA8SvDiG,iBAPqB,CAACxG,EAASQ,IAC1B,gBAAC0F,EAAiB,CAAClG,QAASA,EAASQ,IAAKA,IAO/C6E,MAAOA,IAEP,gBAACxB,EAAgC,MACjC,4BAIN0C,EAA6BE,YAAc,+BAE3C,MAEMC,EAAwE,I,IAAA,IAC5ElG,GAAG,EACAwE,EAAK,IAFoE,SAI5E,MACMmB,EAAU,CAAE,CADG,aAAa3F,IACAA,GAC5BgG,EAAmB,gBAAC,KAAc,CAACL,QAASA,IAClD,OAAO,gBAAC,IAAgB,eAAC3F,IAAKA,EAAKgG,iBAAkBA,EAAkBjG,KAT5D,oBAS4EyE,KAGnF2B,EAA8B,IAC3B,cAETA,EAA4BF,YAAc,8BAEnC,MAAMG,EAAmC5B,IAC9C,MAAM,EAAElC,GAAM,2BACd,OACE,gBAAC,IAAK,iBACAkC,EAAK,cACGlC,EAAE,4BACd+D,OAAQF,EACRG,IAAKJ,EACLK,YAAU,MAIhBH,EAAsBH,YAAc,wBAE7B,MAAMO,EAA+DhC,IAC1E,MAAMiC,EAAc,CAClBC,GAAI,WAAWlC,EAAM5D,WAAa,yCAEpC,OACE,gBAAC,IAAQ,eACPb,KA7VuD,mBA8VvD4G,cAAeP,EACfK,YAAaA,EACbrB,WAAW,EACXwB,SAAU,gBAACvD,EAAgC,OACvCmB,KAIVgC,EAAsBP,YAAc,6B,kCC9ZpC,4SAkCA,MAAM1B,EAAmBC,GACvB,gBAAC,IAAc,eACbC,OAAQ,IAAM,sDAA4BC,KAAMC,GAAMA,EAAEJ,kBACpDC,IAIFI,EAAU,CAAC,OAAQ,WAAY,OAAQ,cACvCiC,EAAwBrC,GAC5B,gBAACD,EAAe,CACdvE,IAAKwE,EAAMxE,IACXuF,WAAYf,EAAMxE,IAAIyB,KAAK4C,SAAS5C,KACpCmD,QAASA,EACTY,UAAU,KAIR,QAAEV,EAAO,SAAEC,EAAQ,KAAEM,EAAI,UAAEC,EAAS,OAAEG,GAAW,KAEjDqB,EAA6BtC,GAAU,gBAAC,KAAa,iBAAKA,EAAK,CAAEuC,WAAS,KAEnEC,EAAqCxC,IAChD,MAAM,EAAElC,GAAM,2BA0Ed,OACE,gBAAC,IAAW,iBACNkC,EAAK,CACTyC,kBAAoBhI,IAAY,QAC9B,OAA+B,QAA/B,EAAkB,QAAlB,EAAAA,aAAQ,EAARA,EAAUsB,gBAAQ,eAAE2G,mBAAW,eAAG,mCAAoC,MAExElB,iBApBqB,CAACxG,EAASQ,KACjC,MACM2F,EAAU,CAAE,CADG,aAAkBnG,IACLQ,GAClC,OACE,gBAAC,IAAqB,CAAC2F,QAASA,GAC7B,EAAGzG,UAAS0G,UAASC,YACpBA,GACE,gBAAC,IAAU,CAAC3G,QAASA,EAAS0G,QAASA,EAASrC,QAAS,IAAkBuC,aAcjFjB,MAAO,CACLC,EAjFU,EAAG9E,IAAKmH,MACtB,MAAMC,EAAW,IAAMD,EAAuB,CAC5C,WACA,cACA,kDAEIE,EAAQ,IAAMF,EAAuB,CACzC,WACA,cACA,kCAEF,OACE,gCACE,uBAAKvE,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,0CACxB,uBAAKM,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,KAAe,CACd3D,SAAUkI,EACVlD,iBAAe,EACfC,kBAAgB,EAChBC,iBAAe,GAEdiD,GACC,gCACE,0BAAK9E,EAAE,+BACP,0BAAK8E,MAKb,uBAAKxE,UAAU,YACb,sBAAIA,UAAU,sBACXyE,GACC,gCACE,0BAAK/E,EAAE,iBACP,0BACE,gBAAC,KAAM,CAACN,OAAQqF,MAItB,gBAAC,KAAgB,CAACpI,SAAUkI,IAC5B,gBAAC,KAAY,CAACnH,IAAKmH,IACnB,gBAAC,IAAwB,CAACnH,IAAKmH,QAKvC,uBAAKvE,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,uBACxB,gBAAC,IAAc,CAAC8B,WAAY+C,EAAsB1F,KAAK4C,SAAS5C,KAAK2C,cAEvE,uBAAKxB,UAAU,mBACb,gBAAC,IAAY,CAAC3D,SAAUkI,EAAuB7C,QAAShC,EAAE,wBA6B5DyC,IACAM,EAAKyB,GACLxB,EAAUuB,GACVpB,EAAO,4BAMT1F,EAAO,wBAEPuH,EAAqB,CACzB,GACA,GACA,iCACA,iCACA,iCACA,iCACA,IAAMC,aAGFC,EAAgC,EAAGxH,U,QACvC,MAAM,EAAEsC,GAAM,2BACR+E,EAAkC,QAA1B,EAAa,QAAb,EAAArH,aAAG,EAAHA,EAAKO,gBAAQ,eAAE2G,mBAAW,eAAG,iCAErCvB,EAAU,CAAE,CADG,aAAa3F,IACAA,GAElC,OACE,gCACE,gBAAC,IAAS,CAAC4C,UAAW0E,EAAmB,IACvC,gBAAC,KAAY,CAACvH,KAAMA,EAAMO,KAAMN,EAAIO,SAASD,KAAMM,UAAWZ,EAAIO,SAASK,aAE7E,gBAAC,IAAS,CACRgC,UAAW,EAAW0E,EAAmB,GAAI,iBAC7CG,SAAS,aAET,gBAAC,KAAY,CAAC1H,KAAK,YAAYO,KAAMN,EAAIO,SAASK,aAEpD,gBAAC,IAAS,CAACgC,UAAW0E,EAAmB,IACvC,gBAAC,OAAI,CACHZ,GAAO,aAAa3G,EAAMC,EAAIO,SAASD,KAAMN,EAAIO,SAASK,WAAtD,QACJ4C,MAAM,QAELlB,EAAE,qDAAsD,CACvDoF,eAAgB1H,EAAIgC,OAAOI,UAAY,EACvCuF,aAAc3H,EAAIyB,KAAKW,aAI7B,gBAAC,IAAS,CAACQ,UAAW0E,EAAmB,IACvC,gBAAC,KAAM,CAACtF,OAAQqF,KAElB,gBAAC,IAAS,CAACzE,UAAW0E,EAAmB,IACvC,gBAAC,IAAe,CAACrI,SAAUe,KAE7B,gBAAC,IAAS,CAAC4C,UAAW0E,EAAmB,IACvC,gBAAC,KAAS,CAACM,UAAW5H,EAAIO,SAASsH,qBAErC,gBAAC,IAAS,CAACjF,UAAW0E,EAAmB,IACvC,gBAAC,KAAc,CAAC3B,QAASA,OAMpBmC,EAA8BtD,IACzC,MAAM,EAAElC,GAAM,2BA8Cd,OACE,gBAAC,IAAK,iBACAkC,EAAK,cACGlC,EAAE,iCACd+D,OAhDqC,IAAM,CAC7C,CACE7C,MAAOlB,EAAE,eACTyF,UAAW,gBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,oBACTyF,UAAW,qBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,IACvCW,GAAI,aAEN,CACEzE,MAAOlB,EAAE,iBACT4F,SAAU,cACVF,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,gBACTyF,UAAW,wDACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,gBACTyF,UAAW,mCACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,kBACTyF,UAAW,6BACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAO,GACPgB,MAAO,CAAE5B,UAAW0E,EAAmB,MASvChB,IAAKkB,EACLjB,YAAU,MAKH4B,EAA8B3D,IACzC,MAAM,UAAEY,GAAY,GAASZ,EAC7B,OACE,gBAAC,IAAQ,eACPY,UAAWA,EACXrF,KAAK,wBACL4G,cAAemB,GACXtD,M,kCC7QV,2QAqCA,MAAM4D,EAAU,EAAGpI,IAAKqI,MACtB,MAAMjB,EAAW,IAAMiB,EAAY,CACjC,WACA,cACA,uCAEI,EAAE/F,GAAM,2BACd,OACE,gCACE,uBAAKM,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,+BACxB,uBAAKM,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,KAAe,CAAC3D,SAAUoJ,EAAYpE,iBAAe,EAACC,kBAAgB,EAACC,iBAAe,GACpFiD,GACC,gCACE,0BAAK9E,EAAE,+BACP,0BAAK8E,MAKb,uBAAKxE,UAAU,YACb,sBAAIA,UAAU,sBACZ,gBAAC,KAAgB,CAAC3D,SAAUoJ,IAC5B,gBAAC,KAAY,CAACrI,IAAKqI,IACnB,gBAAC,IAAwB,CAACrI,IAAKqI,QAKvC,uBAAKzF,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,uBACxB,gBAAC,IAAc,CAAC8B,WAAYiE,EAAW5G,KAAK4C,SAAS5C,KAAK2C,cAE5D,uBAAKxB,UAAU,mBACb,gBAAC,IAAY,CAAC3D,SAAUoJ,EAAY/D,QAAShC,EAAE,uBAMjDiC,EAAmBC,GACvB,gBAAC,IAAc,eACbC,OAAQ,IAAM,sDAA4BC,KAAMC,GAAMA,EAAEJ,kBACpDC,IAIFI,EAAU,CAAC,OAAQ,WAAY,OAAQ,cACvCiC,EAAwBrC,GAC5B,gBAACD,EAAe,CACdvE,IAAKwE,EAAMxE,IACXuF,WAAYf,EAAMxE,IAAIyB,KAAK4C,SAAS5C,KACpCmD,QAASA,EACTY,UAAU,IAIR8C,EAAkB9D,GAAU,gBAAC,KAAa,iBAAKA,EAAK,CAAEuC,WAAS,MAE/D,QAAEjC,EAAO,SAAEC,EAAQ,KAAEM,EAAI,UAAEC,EAAS,OAAEG,GAAW,KACjD8C,EAA0B/D,GAgB5B,gBAAC,IAAW,iBACNA,EAAK,CACTwB,iBAjBqB,CAACxG,EAASQ,KACjC,MACM2F,EAAU,CAAE,CADG,aAAkBnG,IACLQ,GAClC,OACE,gBAAC,IAAqB,CAAC2F,QAASA,GAC7B,EAAGzG,UAAS0G,UAASC,YACpBA,GACE,gBAAC,IAAU,CAAC3G,QAASA,EAAS0G,QAASA,EAASrC,QAAS,IAAkBuC,aAWjFjB,MAAO,CACLC,EAAQsD,GACRrD,IACAM,EAAKiD,GACLhD,EAAUuB,GACVpB,EAAO,2BAMT1F,EAAO,aAEPuH,EAAqB,CACzB,GACA,GACA,EAAW,cAAe,qBAAsB,sBAChD,EAAW,cAAe,sBAC1B,EAAW,cAAe,sBAC1B,EAAW,cAAe,sBAC1B,IAAMC,aAGFiB,EAAqB,EAAGxI,UAC5B,MAAM,EAAEsC,GAAM,2BAERqD,EAAU,CAAE,CADG,aAAa3F,IACAA,GAClC,OACE,gCACE,gBAAC,IAAS,CAAC4C,UAAW0E,EAAmB,IACvC,gBAAC,KAAY,CAACvH,KAAMA,EAAMO,KAAMN,EAAIO,SAASD,KAAMM,UAAWZ,EAAIO,SAASK,aAE7E,gBAAC,IAAS,CACRgC,UAAW,EAAW0E,EAAmB,GAAI,iBAC7CG,SAAS,aAET,gBAAC,KAAY,CAAC1H,KAAK,YAAYO,KAAMN,EAAIO,SAASK,aAEpD,gBAAC,IAAS,CAACgC,UAAW0E,EAAmB,IACvC,gBAAC,OAAI,CACHZ,GAAO,aAAa3G,EAAMC,EAAIO,SAASD,KAAMN,EAAIO,SAASK,WAAtD,QACJ4C,MAAM,QAELlB,EAAE,uCAAwC,CACzCmG,OAAQzI,EAAIgC,OAAOI,UAAY,EAC/BsG,OAAQ1I,EAAIyB,KAAKW,aAIvB,gBAAC,IAAS,CAACQ,UAAW0E,EAAmB,IACvC,gBAAC,IAAS,CAACvH,KAAMA,EAAM4I,OAAQ3I,EAAIO,SAASoI,UAE9C,gBAAC,IAAS,CAAC/F,UAAW0E,EAAmB,IACvC,gBAAC,IAAe,CAACrI,SAAUe,KAE7B,gBAAC,IAAS,CAAC4C,UAAW0E,EAAmB,IACvC,gBAAC,KAAS,CAACM,UAAW5H,EAAIO,SAASsH,qBAErC,gBAAC,IAAS,CAACjF,UAAW0E,EAAmB,IACvC,gBAAC,KAAc,CAAC3B,QAASA,OAM3BiD,EAAmBpE,IACvB,MAAM,EAAElC,GAAM,2BA6Cd,OACE,gBAAC,IAAK,iBACAkC,EAAK,cACGlC,EAAE,sBACd+D,OAhD0B,IAAM,CAClC,CACE7C,MAAOlB,EAAE,eACTyF,UAAW,gBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,oBACTyF,UAAW,qBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,IACvCW,GAAI,aAEN,CACEzE,MAAOlB,EAAE,iBACT4F,SAAU,cACVF,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,iBACTyF,UAAW,kBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,gBACTyF,UAAW,mCACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,kBACTyF,UAAW,6BACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAO,GACPgB,MAAO,CAAE5B,UAAW0E,EAAmB,MASvChB,IAAKkC,EACLjC,YAAU,MAIVsC,EAAmBrE,IACvB,MAAM,UAAEY,GAAY,GAASZ,EAC7B,OACE,gBAAC,IAAQ,eAACY,UAAWA,EAAWrF,KAAK,aAAa4G,cAAeiC,GAAqBpE,M,kCClP1F,+WAsCO,MAAM1E,EAA6B,CACxC,IACA,IAAMD,QAAQF,cACX,IAAMmJ,4BAA4B,kBACrC,OACG,IAAMjJ,QAAQD,QAGbG,EAAO,YAEPuH,EAAqB,CACzB,GACA,GACA,EAAW,cAAe,qBAAsB,sBAChD,EAAW,cAAe,sBAC1B,EAAW,cAAe,sBAC1B,IAAMC,aAGKwB,EAA4D,EAAGC,SAC1E,MAAM,EAAE1G,GAAM,2BACd,OACE,sBAAIM,UAAU,sBACZ,gBAAC,IAAW,CACVC,MAAOP,EAAE,wBACTtC,IAAKgJ,EACLnI,KAAK,kCAEP,gBAAC,IAAW,CACVgC,MAAOP,EAAE,wBACTtC,IAAKgJ,EACLnI,KAAK,kCAEP,gBAAC,IAAwB,CAACb,IAAKgJ,MAK/BC,EAAoD,EAAGjJ,IAAKkJ,MAChE,MAAM,EAAE5G,GAAM,4BACR,QAAE6G,EAAO,OAAEtD,GAAW,aAAeqD,GAC3C,OACE,gCACE,uBAAKtG,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,8BACvBuD,EACC,gBAAC,KAAO,CACN9B,IAAKmF,EAAU3I,SAASyD,IACxBqB,MAAM8D,aAAO,EAAPA,EAAS9D,OAAQ,GACvBrF,IAAKkJ,EACLE,aAAc,iBACdC,eAAe,IAGjB,gBAAC,IAAa,MAEhB,uBAAKzG,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,KAAe,CACd3D,SAAUiK,EACVjF,iBAAe,EACfC,kBAAgB,EAChBC,iBAAe,KAGnB,uBAAKvB,UAAU,YACb,gBAACmG,EAAoB,CAACC,GAAIE,OAIhC,uBAAKtG,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,uBACxB,gBAAC,IAAc,CAAC8B,WAAY8E,EAAUzH,KAAK4C,SAAS5C,KAAK2C,cAE3D,uBAAKxB,UAAU,mBACb,gBAAC,IAAY,CAAC3D,SAAUiK,EAAW5E,QAAShC,EAAE,uBAMhDiC,EAAmDC,GACvD,gBAAC,IAAc,eACbC,OAAQ,IAAM,sDAA4BC,KAAMC,GAAMA,EAAEJ,kBACpDC,IAIFI,EAAU,CAAC,OAAQ,WAAY,OAAQ,cACvC0E,EAAiD9E,GACrD,gBAACD,EAAe,CACdvE,IAAKwE,EAAMxE,IACXuF,WAAYf,EAAMxE,IAAIyB,KAAK4C,SAAS5C,KACpCmD,QAASA,EACTY,UAAU,IAIR+D,EAAgE,EAAGvJ,IAAKkJ,MAC5E,MAAM,EAAE5G,GAAM,2BAERqD,EAAU,CAAE,CADG,aAAauD,IACAA,GAClC,OACE,gCACE,gBAAC,IAAS,CAACtG,UAAW0E,EAAmB,IACvC,gBAAC,KAAY,CACXvH,KAAMA,EACNO,KAAM4I,EAAU3I,SAASD,KACzBM,UAAWsI,EAAU3I,SAASK,aAGlC,gBAAC,IAAS,CACRgC,UAAW,EAAW0E,EAAmB,GAAI,iBAC7CG,SAAS,aAET,gBAAC,KAAY,CAAC1H,KAAK,YAAYO,KAAM4I,EAAU3I,SAASK,aAE1D,gBAAC,IAAS,CAACgC,UAAW0E,EAAmB,IACvC,gBAAC,OAAI,CACHZ,GAAI,WAAWwC,EAAU3I,SAASK,wBAAwBsI,EAAU3I,SAASD,YAC7EkD,MAAM,QAELlB,EAAE,qDAAsD,CACvDkH,cAAeN,EAAUlH,OAAOyH,uBAChCC,cAAeR,EAAUlH,OAAO2H,2BAItC,gBAAC,IAAS,CAAC/G,UAAW0E,EAAmB,IACvC,gBAAC,IAAS,CAACvH,KAAMA,EAAM4I,OAAQO,EAAU3I,SAASoI,UAEpD,gBAAC,IAAS,CAAC/F,UAAW0E,EAAmB,IACvC,gBAAC,KAAQ,CAACnC,SAAU+D,EAAUzH,KAAK0D,SAAUvE,UAAWsI,EAAU3I,SAASK,aAE7E,gBAAC,IAAS,CAACgC,UAAW0E,EAAmB,IACvC,gBAAC,KAAc,CAAC3B,QAASA,OAMpBiE,EAAwBpF,IACnC,MAAM,EAAElC,GAAM,2BAuCd,OACE,gBAAC,IAAK,iBACAkC,EAAK,cACGlC,EAAE,qBACd+D,OA1CyB,IAAM,CACjC,CACE7C,MAAOlB,EAAE,eACTyF,UAAW,gBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,oBACTyF,UAAW,qBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,IACvCW,GAAI,aAEN,CACEzE,MAAOlB,EAAE,iBACT4F,SAAU,wBACVF,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,iBACTyF,UAAW,kBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAOlB,EAAE,uBACTyF,UAAW,gBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAO,GACPgB,MAAO,CAAE5B,UAAW0E,EAAmB,MASvChB,IAAKiD,EACLhD,YAAU,MAKHsD,EAAiDrF,GAC5D,gBAAC,IAAQ,eAACY,WAAW,EAAMuB,cAAeiD,EAAY7J,KAAMA,GAAUyE,IAGlEsF,EAA+CtF,GACnD,gBAAC,KAAa,iBAAKA,EAAK,CAAEuC,WAAS,KAGxBgD,EAAmCvF,IAC9C,MAAMwF,EAAwB,eAc9B,OACE,gBAAC,IAAW,iBACNxF,EAAK,CACTzE,KAAMA,EACNiG,iBAjBqB,CAACxG,EAASQ,KACjC,MACM2F,EAAU,CAAE,CADG,aAAkBnG,IACLQ,GAClC,OACE,gBAAC,IAAqB,CAAC2F,QAASA,GAC7B,EAAGzG,UAAS0G,UAASC,YACpBA,GACE,gBAAC,IAAU,CAAC3G,QAASA,EAAS0G,QAASA,EAASrC,QAAS,IAAkBuC,aAWjFjB,MAAO,CACL,KAAWC,QAAQ,aAAYmE,OAC3Be,EAAwB,CAAC,KAAWC,WAAa,GACrD,KAAWlF,WACX,KAAWM,KAAKyE,GAChB,KAAWxE,UAAUgE,GACrB,KAAW7D,OAAO,6B,2xBCtN1B,MACM,YAAE/F,EAAW,WAAEC,EAAU,OAAEC,GAAW,IAAMC,QA6BrCC,EAAc,CACzB,YAAkBJ,GAfa,CAACK,EAAeC,KAAwB,CAGvEC,SAAUD,EAAIyB,KAAKC,OAAS,yBAA2B,wBACvDxB,SAAU,IAAM,aAAaH,EAAMC,GAAKe,MAAOC,GAAQ,YAAW,CAAEC,MAAOD,EAAIE,WAC/EC,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,WAOR,IACA,IACA,IACA7B,EAjCkC,CAACI,EAAemK,KAA+B,CAEjFjK,SAAU,8BACVC,SAAU,IAAM,YAA6B,CAAEgK,eAC/C/I,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfhB,KAAM4J,EAAW3J,SAASD,KAC1BM,UAAWsJ,EAAW3J,SAASK,UAC/BY,KAAM,WA0BR,IACA,OACG,IAAMsH,4BAA4B,mBACrC,OACGlJ,GAGQuK,EAA8D,EAAGD,iB,QAC5E,MAAM,EAAE5H,GAAM,2BACd,OACE,sBAAIM,UAAU,sBACZ,gBAAC,IAAW,CAACC,MAAOP,EAAE,0BAA2BtC,IAAKkK,EAAYrJ,KAAK,uBACpC,kBAAlCqJ,EAAWzI,KAAKsB,SAASjB,MACxB,gCACE,gBAAC,IAAW,CACVe,MAAOP,EAAE,0BACTtC,IAAKkK,EACLrJ,KAAK,8CAEJyB,EAAE,6CAA8C,CAC/CW,eAAqE,QAArD,EAAAiH,EAAWzI,KAAKsB,SAASqH,cAAcnH,sBAAc,QAAI,EACzED,MAAOkH,EAAWzI,KAAKW,YAG3B,gBAAC,IAAW,CACVS,MAAOP,EAAE,oBACTtC,IAAKkK,EACLrJ,KAAK,wCAEJyB,EAAE,iDAAkD,CACnDa,SAAyD,QAA/C,EAAA+G,EAAWzI,KAAKsB,SAASqH,cAAcjH,gBAAQ,QAAI,EAC7DH,MAAOkH,EAAWzI,KAAKW,aAK/B,gBAAC,IAAW,CACVS,MAAOP,EAAE,oCACTtC,IAAKkK,EACLrJ,KAAK,gCAEJqJ,EAAWzI,KAAK4I,wBACb/H,EAAE,0BAA2B,CAAEU,MAAOkH,EAAWzI,KAAK4I,0BACtD/H,EAAE,0BAER,gBAAC,IAAW,CACVO,MAAOP,EAAE,4BACTtC,IAAKkK,EACLrJ,KAAK,wBAEJqJ,EAAWzI,KAAK2B,gBACbd,EAAE,0BAA2B,CAAEU,MAAOkH,EAAWzI,KAAK2B,kBACtDd,EAAE,0BAER,gBAAC,KAAY,CAACtC,IAAKkK,IACnB,gBAAC,IAAwB,CAAClK,IAAKkK,IAC/B,gBAAC,IAAoC,CAAClK,IAAKkK,MAIjDC,EAAsBlE,YAAc,wBAEpC,MAAMqE,EAAsD,EAAGtK,IAAKkK,MAClE,MAAM,EAAE5H,GAAM,2BAEd,OACE,gCACE,uBAAKM,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,+BACvB4H,EAAWzI,KAAKC,QAAU,gBAAC,KAAmB,CAAC1B,IAAKkK,EAAYpG,MAAO,oBACxE,gBAAC,IAAU,CAACC,IAAKmG,EAAW3J,SAASyD,IAAKhE,IAAKkK,EAAYrJ,KAAK,mBAChE,uBAAK+B,UAAU,yBACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,KAAe,CACd3D,SAAUiL,EACVjG,iBAAe,EACfC,kBAAgB,EAChBC,iBAAe,GAEf,0BAAK7B,EAAE,kBACP,0BACG4H,EAAWlI,OAAOE,oBAAsBgI,EAAWlI,OAAOG,iBAC3D+H,EAAWzI,KAAKW,WAAa8H,EAAWlI,OAAOE,kBAC7C,gBAAC,KAAM,CAACF,OAAO,eAEf,gBAAC,KAAM,CAACA,OAAO,gBAKvB,uBAAKY,UAAU,YACb,gBAACuH,EAAqB,CAACD,WAAYA,QAK3C,uBAAKtH,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,uBACxB,gBAAC,IAAc,CAAC8B,WAAY8F,EAAWzI,KAAK4C,SAAS5C,KAAK2C,cAE5D,uBAAKxB,UAAU,mBACb,gBAAC,IAAY,CAAC3D,SAAUiL,EAAY5F,QAAShC,EAAE,qBAEjD,uBAAKM,UAAU,mBACb,gBAAC,KAAc,CAACe,KAAMrB,EAAE,uBACxB,gBAAC,IAAU,CAACV,WAAYsI,EAAWlI,OAAOJ,gBAKlD0I,EAAkBrE,YAAc,oBAEhC,MAAM1B,EAAmBC,GACvB,gBAAC,IAAc,eACbC,OAAQ,IAAM,sDAA4BC,KAAMC,GAAMA,EAAEJ,kBACpDC,IAIFI,EAAU,CAAC,OAAQ,WAAY,OAAQ,cACvCiC,EAAwBrC,GAC5B,gBAACD,EAAe,CACdvE,IAAKwE,EAAMxE,IACXuF,WAAYf,EAAMxE,IAAIyB,KAAK4C,SAAS5C,KACpCmD,QAASA,EACTY,UAAU,IAIR+E,EAAgD,EAAGvK,UACvD,MACEO,UAAU,UAAEK,GACZa,MAAM,SAAE0D,IACNnF,EAGJ,OACE,gBAAC,kBAAe,CACdkF,WAAW,EACXtE,UAAWA,EACXuE,SAAUA,EACVC,WAAW,KAKJoF,EAAoChG,IAC/C,MAAMwF,EAAwB,eAgB9B,OACE,gBAAC,IAAW,iBACNxF,EAAK,CACTzE,KA7MiD,aA8MjDiG,iBAnBqB,CAACxG,EAASQ,KACjC,MACM2F,EAAU,CAAE,CADG,aAAkBnG,IACLQ,GAClC,OACE,gBAAC,IAAqB,CAAC2F,QAASA,GAC7B,EAAGzG,UAAS0G,UAASC,YACpBA,GACE,gBAAC,IAAU,CAAC3G,QAASA,EAAS0G,QAASA,EAASrC,QAAS,IAAkBuC,aAajFjB,MAAO,CACL,KAAWC,QAAQwF,MACfN,EAAwB,CAAC,KAAWC,WAAa,GACrD,KAAWlF,WACX,CACEtB,KAAM,cACNuB,QAAS,qBACTC,UAAWsF,GAEb,KAAWlF,OACX,KAAWC,UAAUuB,GACrB,KAAWpB,OAAO,4BAK1B+E,EAAuBvE,YAAc,yBAUrC,MAEMwE,EAAiE,I,IAAA,IAAEzK,GAAG,EAAKwE,EAAK,IAAf,SACrE,MACMmB,EAAU,CAAE,CADG,aAAa3F,IACAA,GAC5BgG,EAAmB,gBAAC,KAAc,CAACL,QAASA,IAClD,OAAO,gBAAC,IAAgB,eAAC3F,IAAKA,EAAKgG,iBAAkBA,EAAkBjG,KAN5D,cAM4EyE,KAGnFkG,EAAwB,IACrB,cAETA,EAAsBzE,YAAc,wBAE7B,MAAM0E,EAA6BnG,IACxC,MAAM,EAAElC,GAAM,2BACd,OACE,gBAAC,IAAK,iBACAkC,EAAK,cACGlC,EAAE,sBACd+D,OAAQqE,EACRpE,IAAKmE,EACLlE,YAAU,MAIhBoE,EAAgB1E,YAAc,kBAEvB,MAAM2E,EAAmDpG,IAC9D,MAAMiC,EAAc,CAClBC,GAAI,WAAWlC,EAAM5D,WAAa,mCAEpC,OACE,gBAAC,IAAQ,eACPb,KA3QiD,aA4QjDqF,WAAW,EACXqB,YAAaA,EACbE,cAAegE,GACXnG,KAIVoG,EAAgB3E,YAAc,mB,kCCrU9B,4iC,kCCAA,2Q,kCCAA,IAAY4E,EAGAC,EAGAC,EAOAC,EAMAC,EAIAC,EAOAC,EAOAC,EASAC,EA9CZ,63BAAYR,GACV,+CADF,CAAYA,MAAc,KAG1B,SAAYC,GACV,0CADF,CAAYA,MAAmB,KAG/B,SAAYC,GACV,gDACA,yBACA,qCACA,8CACA,wCALF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,mBACA,wBACA,wBACA,4BAJF,CAAYA,MAAa,KAMzB,SAAYC,GACV,mDACA,sCAFF,CAAYA,MAAe,KAI3B,SAAYC,GACV,iCACA,uCACA,+BACA,yCAJF,CAAYA,MAAmB,KAO/B,SAAYC,GACV,YACA,gBACA,oBACA,oBAJF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,4BACA,kCACA,wBACA,kBACA,YACA,4CANF,CAAYA,MAAW,KASvB,SAAYC,GACV,YACA,iBAFF,CAAYA,MAAkB,KAM3BA,EAAmBC,IACnBD,EAAmBE,MAFf,MAKMC,EAAsB,QACtBC,EAAsB,QACtBC,EAAwC,QACxCC,EAA2B,WAC3BC,EAAiC,wCAEjCC,EAAuB,IACvBC,EAA8B,IAG9BC,EAAkB,GAGlBC,EAA0B,sCAC1BC,EAAyB,2BAEzBC,EAAqB,sBACrBC,EAAiC,YACjCC,EAAuB,SAEpC,IAAYC,GAAZ,SAAYA,GACV,sCACA,kDACA,kCACA,4CAJF,CAAYA,MAAoB,KAOzB,MAAMC,EAAyB,yBACzBC,EACX,2CACWC,EACX,4C,kCCtFF,4jBAmBO,MAAMC,EAAiB,CAC5B,cACA,oBACA,aACA,eACA,OACA,WACA,QAQWC,EAA0B,EAAGC,WACxCA,EAAMC,IAAI,KAECC,EAAuBC,I,UAClC,MAAMC,EAAiB,IAAOD,EAAc,CAAC,gBAAiB,QAC9D,MAAO,CACLE,OAA4B,QAApB,EAAAD,aAAc,EAAdA,EAAgBtL,YAAI,eAAEgC,KAC9BwJ,WAAiD,QAArC,EAAoB,QAApB,EAAAF,aAAc,EAAdA,EAAgBtL,YAAI,eAAEyL,uBAAe,eAAEC,WA2B1CC,EAAa,CACxBC,EACAC,EACAN,EACAO,KAEA,IAAKF,EACH,OAAO,KAET,MAAMG,EAhCc,EAACC,EAA4BC,EAAiBH,KAClE,MAAMI,EAAU,WAAWF,EAAOxO,YAAYwO,EAAOG,SAASH,EAAOnN,OACrE,IAAKoN,EACH,OAAOC,EAET,MAAME,EAAcN,EAAa,IAAIA,EAAWO,QAAQ,MAAO,IAAQ,GACvE,OAAIL,EAAOxO,SAAS8O,SAAS,UACpB,GAAGJ,UAAgBD,IAASG,IAEjCJ,EAAOxO,SAAS8O,SAAS,UACpB,GAAGJ,YAAkBD,IAASG,IAEnCJ,EAAOxO,SAAS8O,SAAS,SACpB,GAAGJ,gBAAsBD,IAASG,IAIvCJ,EAAOxO,SAAS8O,SAAS,eAAiBL,EAAOK,SAAS,KACrD,GAAGJ,SAAeD,IAASG,IAE7BF,GAYYK,CAAc,EAAYX,GAASC,EAAWC,GACjE,OAAOP,EAAS,GAAGA,WAAgBQ,4BAAuCA,GAG/DS,EAAiC,CAC5CnB,EACAlM,K,QAIA,OAF+F,QAA7E,EAAuE,QAAvE,MAAOkM,EAAc,CAAC,gBAAiB,mBAAmBlM,WAAa,eAAEa,YAAI,eAC3FgC,OACgB,IAMTyK,EAAiC,CAC5CC,EACAC,IAGKA,EAGED,EAAKE,OAAQlO,GACX,IAAMA,EAAI,CAAC,WAAY,SALhB,gCAKwCiO,GAH/CD,EAUEG,EAAe,CAACrP,EAA2BsP,IAClDA,EAAOC,OAAS,IAAM,IAAUD,EAAO,GAAG9M,MACrC,YAAe8M,EAAO,IAExB,KAGIE,EAA6BC,I,MACxC,OAAKA,EAGEA,EAAezP,WAAoC,QAAxB,EAAAyP,EAAeC,iBAAS,eAAE3O,KAFnD,MAKE4O,EAAoCC,I,MAE/C,OADsC,QAApB,EAAAA,SAAoB,eAAED,gBACbH,EAA0BI,aAAI,EAAJA,EAAMC,YAGhDC,EAAmBF,GACvBA,aAAgB,IAClBA,EAAqBE,kBACtB,aAAaN,EAA0BI,aAAI,EAAJA,EAAMC,YAGtCE,EAAoC,CAC/CC,EACAb,KAEA,MAAMc,EAAWD,aAAI,EAAJA,EAAMH,UACjB7P,EAAW2P,EAAYK,GAC7B,IAAKA,IAAShQ,IAAa,IAAOiQ,EAASP,WACzC,OAAOQ,QAAQC,SAGjB,MAAMT,EAA+B,GAC/BU,EAA0B,GAEhCV,EAAUW,KAAKrQ,GAEXgQ,EAAK9P,YAAc,KACrB,IAAU+P,EAASK,eAAiBC,IAClCb,EAAUW,KAAKE,EAAcvQ,YAIjC,IAAK,MAAMwQ,KAAgBd,EAAW,CACpC,MAAMvF,EAAe,aAAS,aAAaqG,IAC3C,IAAKrG,EACH,OAAO+F,QAAQC,OACb,IAAIM,MACF,IAAQpN,EAAE,yEAA0E,CAClFvC,KAAM0P,EAAa1P,SAK3BsP,EAAQC,KAAK,YAA0BlG,EAAcqG,EAAcrB,IAGrE,OAAOe,QAAQQ,IAAIN,IAGRO,EAAmC,CAC9CC,EACAC,EACAC,EAAiC,OAE5BF,GAAWC,GAAUD,IAAWC,EAM9B,YAAyBD,EAAQC,EAAQC,GALvCZ,QAAQC,OACb,IAAIM,MAAM,IAAQpN,EAAE,iEAOb0N,EAAoCC,IAC/C,MAAMJ,EAASjB,EAAYqB,EAAK1Q,aAC1BuQ,EAASlB,EAAYqB,EAAKC,aAEhC,OAAKL,GAAWC,EAIT,YAAyBD,EAAQC,GAH/BX,QAAQC,W,kCChMnB,uSAKO,MAAMe,EAAuBC,IAClC,OAAQA,GACN,KAAK,IAAsBP,OACzB,OAAO,IAAWQ,UACpB,KAAK,IAAsBC,MACzB,OAAO,IAAWC,iBACpB,QACE,OAAO,IAAWC,SAIXC,EAAqBC,IAChC,MAAM,KAAEvC,EAAI,KAAErM,GAAS4O,EACvB,OAAQ5O,GACN,KAAK,IAAWuO,UAChB,KAAK,IAAWM,QACd,OAAO,IAAsBd,OAC/B,KAAK,IAAWU,iBAChB,KAAK,IAAWK,UACd,OAAO,IAAsBN,MAC/B,QACE,OAAInC,aAAI,EAAJA,EAAO,sBAAsC,IAAjB,IAAOA,GAC9B,IAAsB0C,QAExB,IAAsBC,UAItBC,EAAiB,KAE5B,MAAMC,EAAK,IACTC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAClBC,SAAS,IACTC,UAAU,GACf,OAAOL,IAAOA,IAAOA,IAAOA,KAGjBM,EAAuBC,IAClC,MAAMC,EAAW,IAAOD,GAAYE,OACpC,OAAI,IAAUD,EAAU,CAAC,UAAW,YAC3B,IAAWE,IACT,IAAUF,EAAU,CAAC,SAAU,YAAa,iBAAkB,UAChE,IAAWG,oBACT,IAAUH,EAAU,CAAC,eACvB,IAAWZ,UACT,IAAUY,EAAU,CAAC,sBACvB,IAAWjB,iBACT,IAAUiB,EAAU,CAAC,WAAY,aACnC,IAAWnB,UACT,IAAUmB,EAAU,CAAC,mBACvB,IAAWb,QAEb,IAAWH,QAGPoB,EAAqBC,IAChC,OAAQA,GACN,KAAK,IAAWjB,UACd,MAAO,aACT,KAAK,IAAWL,iBACd,MAAO,oBACT,QACE,OAAOsB,IAIAC,EAAiB,CAC5BC,EACA3B,KAEA,MAAM,EAAE9N,GAAM,2BACd,OAAQ8N,GACN,KAAK,IAAsBU,QACzB,OAAkBxO,EAAXyP,EAAa,iCAAsC,gCAC5D,KAAK,IAAsBzB,MACzB,OAAkBhO,EAAXyP,EAAa,kCAAuC,iCAC7D,QACE,OACIzP,EADGyP,EACD,sCACA,oCADuC,CAAEF,WAAYzB,MAKpD4B,EAAwB5B,IACnC,MAAM,EAAE9N,GAAM,2BACd,OAAQ8N,GACN,KAAK,IAAsBU,QACzB,OAAOxO,EACL,mHAEJ,KAAK,IAAsBuN,OACzB,OAAOvN,EAAE,oEACX,KAAK,IAAsBgO,MACzB,OAAOhO,EAAE,oFACX,KAAK,IAAsBuO,QACzB,OAAOvO,EAAE,kEACX,QACE,OAAO,Q,kCCtGb,+N,wXCWO,MAAe2P,EAGpB,YAAYC,GACVC,KAAKD,UAAYA,EA+Fb,mB,yCACJ,IACE,MAAME,QAAiBD,KAAKE,kBACtBC,EAAa,YAAiBF,EAASG,OAC7C,GAAIH,EAASG,MAAMxE,SAAS,gBAAiB,CAC3C,MAAMyE,QAA2BL,KAAKM,wBACtC,GAAI,YAAeD,GACjB,OAAOF,EAAWb,KAAK,CAACiB,EAAGC,IACL,kBAAhBA,EAAEC,UAAsC,EACxB,kBAAhBF,EAAEE,WAAuC,EACtC,GAIb,OAAON,EACP,MAAOO,GACP,MAAO,U,kCC9Hb,sDAIO,MAAMC,EAAsBtO,GACjC,gBAAC,IAAc,eACbC,OAAQ,IAAM,0CAAiCC,KAAMC,GAAMA,EAAEmO,qBACzDtO,K,kCCPR,qlB,kCCAA,yS,8eCIO,MAAMuO,EAAgB,kCA2BhBC,EAAkBC,GACtBC,OAAOC,KAAKF,GAASG,OAAO,CAACC,EAAQtP,KAC1CsP,EAAOtP,GAAO,CAACkP,EAAQlP,IAChBsP,GACN,IAMQC,EAA2BC,GAAuD,OAAD,6BAC5F,MAAMC,QAAqC,mBAAiBC,KAAKV,EAAeQ,GAChF,IAAKC,EAAcE,WACjB,MAAM,IAAIhE,MAAM,sDAElB,GAAI8D,EAAcE,WAAa,KAAOF,EAAcE,YAAc,IAChE,MAAM,IAAI,IACR,2BAA2BF,EAAcE,WACzCF,EAAcE,WACd,KACAF,GAGJ,OAAOA,KAGIG,EAA4BJ,GAChCD,EAAkBC,GAAc7O,KAAMkP,GApC1B,CAACC,IACpB,IACEC,KAAKC,MAAMF,GACX,MAAOhB,GACP,OAAO,EAET,OAAO,GA+BEmB,CAAaJ,EAASK,MAAQH,KAAKC,MAAMH,EAASK,MAAQ,mBAASL,EAASK,Q,kCC3DvF,yMAoBO,MAAMC,EAAqD1P,IAChE,MAAM,SAAEuN,EAAQ,MAAEoC,EAAK,SAAEC,GAAa5P,GAChC,EAAElC,GAAM,2BACR+R,EAAW,wBACXC,EAAS,sBAETC,EAAiB,IAAO/P,EAAMxE,IAAK,CAAC,WAAY,SAChDwU,EAAoB,YAAoBhQ,EAAMiQ,uBAC9CC,EAAgB,IAAe,GAAIlQ,EAAMmQ,MAAOJ,EAAgB,CACpElU,WAAY,KACZ8N,KAAM,GACNpO,KAAM,SACNQ,SAAU,CACRD,KAAM,IAERwB,KAAM0S,KAGDC,GAAyB,WAAejQ,EAAMiQ,wBAC9C/D,EAAQkE,GAAa,WAAeF,IACpCG,EAAYC,GAAiB,YAAe,IAC5C7T,EAAO8T,GAAY,cACnBxD,EAAYyD,GAAiB,WAClC,IAAY,IAAMxQ,EAAMxE,IAAK,QAAUiV,GAC9BA,EAAQ,SAAOC,OAAOD,GAAS,MAGnCE,EAAkBC,GAAuB,WAAe,KACxDC,EAAaC,GAAkB,YAAe,GAC/C9R,EAAQ,YAAeuO,EAAU0C,GACjCc,EAAW,YAAqBd,GAChCe,EAAS,IAAMnB,EAAS,WAAWC,EAAO3T,qBAE1C8U,EAAiBC,IACrBV,EAAc,OAAD,UAAMU,aAAW,EAAXA,EAAanE,aAChC6D,EAAoB,OAAD,UAAMM,aAAW,EAAXA,EAAaP,oBAGlCQ,EAAW3U,IACf+T,EAAS/T,GACT8T,GAAc,IAGVc,EAAiBC,IACrB,MAAMvV,EAAOuV,EAAM/F,OAAOmF,MACpBa,EAAY,IAAYpF,GAC9BoF,EAAUvV,SAASD,KAAOA,EAC1BsU,EAAUkB,IAGNC,EAAQlD,IACZA,EAAEmD,iBACF,MAAM,SAAEzV,GAAamQ,EACrBoE,GAAc,GACd,MAAM3G,EAAO,OAAH,wBACL,IAAYoD,EAAa0D,GACnB,SAAOgB,OAAOhB,KAEpBE,GAECW,EAAY,IAChB,GACApF,EACA,CACEvC,QAIF4D,EAAW,CAAEjQ,KAAM,YAAoByP,IAAgB,KAExDQ,EACG,aAAU,cAAa+D,GACvB,aAAU,cAAaA,EAAWvV,EAASK,UAAWkV,EAAUvV,SAASD,OAC3EoE,KACCwR,IACCpB,GAAc,GACVtQ,EAAM2R,QACR3R,EAAM2R,OAAOD,EAAE3V,SAASD,MAErBkE,EAAM2P,OACTE,EAAS,aAAgB6B,EAAG,aAAaA,MAG5ClV,IACC+T,EAAS/T,EAAIE,SACb4T,GAAc,MAKdsB,EAAa,K,MAGjB,OACE,gCACE,4BAAUC,UAAWtE,GACnB,uBAAKnP,UAAU,cACb,yBAAOA,UAAU,4BAA4B0T,QAAQ,eAClDhU,EAAE,uBAEL,2BACE,yBACEM,UAAU,uBACVd,KAAK,OACLyU,SAAUX,EACVX,MAAuB,QAAhB,EAAAvE,aAAM,EAANA,EAAQnQ,gBAAQ,eAAED,KAAI,mBACZ,mBACjB2H,GAAG,cAAa,YACN,cACVuO,UAAQ,IAEV,qBAAG5T,UAAU,aAAaqF,GAAG,oBAC1B3F,EAAE,6CAKX,gBAAC,IAAa,CACZ8N,gBAAiB5L,EAAMiQ,sBACvB8B,SAAUd,EACVE,QAASA,EACTc,cAAgBC,GAAYpB,EAAeoB,GAC3CnF,WAAYA,EACZM,WAAYnB,EAAO5O,KACnBiQ,SAAUA,MAMlB,OAAOoC,EACL,wBAAMvR,UAAU,sCAAsC+T,SAAUZ,GAC9D,gBAAC,IAAU,KAAEvS,GACb,gBAAC,IAAS,KAAE4S,KACZ,gBAAC,IAAiB,CAChBQ,aAAc3V,GAAS,GACvB4T,WAAYA,EACZgC,WAAYvU,EAAE,iBACdkT,OAAQpB,GAAYoB,KAIxB,uBAAK5S,UAAU,mBACb,gBAAC,IAAM,KACL,6BAAQY,IAEV,gBAAC,IAAW,CAACA,MAAOA,EAAOoD,SAAU2O,IACrC,uBAAK3S,UAAU,mBACb,wBAAMA,UAAU,8CAA8C+T,SAAUZ,GACrEK,IACD,gBAAC,IAAS,CAACQ,aAAc3V,EAAO4T,WAAYA,GAC1C,gBAAC,IAAW,CAACjS,UAAU,gBACrB,gBAAC,IAAM,CACLd,KAAK,SAAQ,YACH,eACVgV,WAAYzB,EACZ9R,QAAQ,UACR0E,GAAG,gBAEFzD,EAAMuS,gBAAkBzU,EAAE,kBAE7B,gBAAC,IAAM,CAACR,KAAK,SAASyB,QAAQ,YAAY0E,GAAG,SAAS+O,QAAS5C,GAAYoB,GACxElT,EAAE,yB,kCCpLnB,geAuBY2U,EAvBZ,mBAuBA,SAAYA,GACV,sCACA,0BACA,kDAHF,CAAYA,MAAkB,KAqQvB,MAAMC,EAAmB,CAC9B,CAAC,IAAYC,QAAS,SACtB,CAAC,IAAYC,QAAS,SACtB,CAAC,IAAYC,OAAQ,QACrB,CAAC,IAAYC,WAAY,YACzB,CAAC,IAAYC,QAAS,SAGxB,IAAYC,EAOAC,EAMAC,EAOAC,GApBZ,SAAYH,GACV,YACA,oBACA,kBACA,YAJF,CAAYA,MAAW,KAOvB,SAAYC,GACV,wBACA,0BACA,2BAHF,CAAYA,MAAS,KAMrB,SAAYC,GACV,kBACA,sCACA,wBACA,sBAJF,CAAYA,MAAY,KAOxB,SAAYC,GAEV,sBACA,oBACA,kBACA,kBACA,cACA,2BAPF,CAAYA,MAAa,KAUlB,MAAMC,EAAoD,CAC/D,CAACH,EAAUI,WAAY,wBAAsB5X,SAC7C,CAACwX,EAAUK,YAAa,kBAAgB7X,SAExC,CAACwX,EAAUM,gBAAiB,oCAGjBC,EAAqD,CAChE,CAACN,EAAaO,QAAS,yBAEvB,CAACP,EAAaQ,kBAAmB,+CAEjC,CAACR,EAAaS,WAAY,mCAC1B,CAACT,EAAaU,UAAW,uBAGdC,EAA4C,CACvD,CAACZ,EAAUI,WAAY,wBAAsB9X,KAC7C,CAAC0X,EAAUK,YAAa,kBAAgB/X,KACxC,CAAC0X,EAAUM,gBAAiB,WAU9B,IAAYO,EAMAC,EAMAC,EAYAC,EAMAC,EAKAC,GAnCZ,SAAYL,GACV,cACA,4BACA,wBAHF,CAAYA,MAAe,KAM3B,SAAYC,GACV,cACA,gBACA,sBAHF,CAAYA,MAAmB,KAM/B,SAAYC,GACV,cACA,sBAFF,CAAYA,MAA8B,KAY1C,SAAYC,GACV,iBAEA,cAHF,CAAYA,MAAQ,KAMpB,SAAYC,GACV,UACA,UAFF,CAAYA,MAAW,KAKvB,SAAYC,GACV,YACA,wBACA,oBACA,0BACA,oBACA,sBACA,4BACA,4BACA,kCACA,0BACA,oBACA,8BACA,4BACA,wBAdF,CAAYA,MAAa,M,4cC5XlB,MAAMC,EAAoE,I,IAAA,gBAC/ExI,GAAe,EACZ5L,EAAK,IAFuE,qBAI/E,OAAQ4L,GACN,KAAK,IAAsBP,OACzB,OAAO,gBAAC,IAAgB,iBAAKrL,IAC/B,KAAK,IAAsB8L,MACzB,OAAO,gBAAC,IAAc,iBAAK9L,IAC7B,KAAK,IAAsBqM,QACzB,OAAO,gBAAC,IAAiB,iBAAKrM,IAChC,QACE,OAAO,gBAAC,IAAiB,iBAAKA,O,kCCpBpC,wFASA,MAAMqU,UAAwC,YAI5C,YAAYrU,GACVsU,MAAMtU,GACN2N,KAAK4G,MAAQ,CACXjX,KAAMqQ,KAAK3N,MAAMqN,WACjBN,WAAYY,KAAK3N,MAAM+M,YAAc,GACrCyH,SAAU,IAAW3I,WAEvB8B,KAAK8G,yBAA2B9G,KAAK8G,yBAAyBC,KAAK/G,MACnEA,KAAKsD,cAAgBtD,KAAKsD,cAAcyD,KAAK/G,MAE/C,yBAAyBrQ,GACvBqQ,KAAKgH,SACH,CACErX,QAEF,IAAMqQ,KAAK3N,MAAM+R,SAASpE,KAAK4G,QAGnC,cAAcrD,GACZvD,KAAKgH,SACH,CACE5H,WAAY,OAAF,UAAOmE,IAEnB,IAAMvD,KAAK3N,MAAM+R,SAASpE,KAAK4G,QAGnC,SACE,MAAM,EAAEzW,GAAM6P,KAAK3N,MACb4U,EAAY,CAChB,CAAC,IAAW/I,WAAY/N,EAAE,+BAC1B,CAAC,IAAWqO,SAAUrO,EAAE,mBAE1B,OACE,gCACG6P,KAAK3N,MAAMuN,SACV,uBAAKnP,UAAU,cACb,yBAAOA,UAAU,gBAAgB0T,QAAQ,eACtChU,EAAE,+BAEL,uBAAKM,UAAU,8BACb,gBAAC,IAAQ,CACPyW,MAAOD,EACPE,kBAAkB,uBAClBrR,GAAG,qBACHsR,YAAapH,KAAK4G,MAAMC,SACxBzC,SAAUpE,KAAK8G,6BAInB,KACH9G,KAAK4G,MAAMjX,OAAS,IAAWuO,UAC9B,gBAAC,IAAgB,CAACkG,SAAUpE,KAAKsD,cAAelE,WAAYY,KAAK4G,MAAMxH,aAEvE,gBAAC,IAAc,CAACgF,SAAUpE,KAAKsD,cAAelE,WAAYY,KAAK4G,MAAMxH,eAOxE,MAAMiI,EAAmB,4BAAkBX,I,kCCzElD,oDAKA,MAAMY,UAAwC,YAI5C,YAAYjV,GACVsU,MAAMtU,GACN2N,KAAK4G,MAAQ,CACXW,SAAUvH,KAAK3N,MAAM+M,WAAWmI,UAAY,GAC5CC,SAAUxH,KAAK3N,MAAM+M,WAAWoI,UAAY,IAE9CxH,KAAKyH,WAAazH,KAAKyH,WAAWV,KAAK/G,MAEzC,WAAW0D,GACT1D,KAAKgH,SACH,CACE,CAACtD,EAAM/F,OAAOxP,MAAOuV,EAAM/F,OAAOmF,OAEpC,IAAM9C,KAAK3N,MAAM+R,SAASpE,KAAK4G,QAInC,SACE,MAAM,EAAEzW,GAAM6P,KAAK3N,MACnB,OACE,gCACE,uBAAK5B,UAAU,cACb,yBAAOA,UAAU,gBAAgB0T,QAAQ,YACtChU,EAAE,oBAEL,2BACE,yBACEM,UAAU,uBACVqF,GAAG,WAAU,YACH,kBAAiB,mBACV,gBACjBnG,KAAK,OACLxB,KAAK,WACLiW,SAAUpE,KAAKyH,WACf3E,MAAO9C,KAAK4G,MAAMW,WAEpB,qBAAG9W,UAAU,aAAaqF,GAAG,iBAC1B3F,EAAE,uDAIT,uBAAKM,UAAU,cACb,yBAAOA,UAAU,4BAA4B0T,QAAQ,YAClDhU,EAAE,6BAEL,2BACE,yBACEM,UAAU,uBACVqF,GAAG,WAAU,YACH,kBAAiB,mBACV,gBACjBnG,KAAK,WACLxB,KAAK,WACLiW,SAAUpE,KAAKyH,WACf3E,MAAO9C,KAAK4G,MAAMY,SAClBnD,UAAQ,IAEV,qBAAG5T,UAAU,aAAaqF,GAAG,iBAC1B3F,EACC,mHAUT,MAAMuX,EAAmB,4BAAkBJ,I,kCC9ElD,8DAKO,MAAMK,EAAgD,EAAGvD,WAAUhF,iBACxE,MAAM,EAAEjP,GAAM,2BAKd,OACE,gBAAC,IAAkB,CACjBiU,SANkBwD,IACpB,MAAM9E,EAAQ8E,EAASC,SAAS,MAAQD,EAAcA,EAAH,KACnDxD,EAAS,CAAE,iBAAkBtB,KAK3BgF,cAAe1I,EAAW,mBAAqB,GAC/CtJ,GAAG,iBACHpF,MAAOP,EAAE,0BACT4X,mBAAoB5X,EAClB,oFAEF6X,sBAAuB7X,EAAE,uDACzB8X,YAAY,M,kCCrBlB,4GAUO,MAAMC,EAA+C,EAC1D9D,WACAZ,UACAc,gBACAlF,aACAM,aACAE,eAEA,MAAOiH,EAAUsB,GAAe,WAAe,gBACzC,EAAEhY,GAAM,2BAERiY,EAAiB,UAA8B,K,MACnD,IACE,MAAMxW,EAAM,YAAkB8N,GACxB2I,EAA6B,QAAf,EAAAjJ,EAAWxN,UAAI,QAAI,KACvC,OAAO+P,KAAKC,MAAMyG,GAClB,MAAOxZ,GAEP,OADA2U,EAAQ,gCAAgC3U,EAAIE,SACrC,KAER,CAACqQ,EAAYM,IAEV4D,EAAgB,cACnBgF,IACM,IAAUA,IACbhE,GAAc,GAEhB,MAAMiE,EAAaD,EAAW,KAAa,oBAAsB,aACjElE,EAAS,CACPhF,WAAY,CACV,CAACmJ,GAAa5G,KAAK6G,UAAUF,IAE/BtF,iBAAkB,MAGtB,CAACsB,EAAemE,WAGZxB,EAAY,CAChByB,YAAavY,EAAE,qCACf,cAAeA,EAAE,qCAGnB,OACE,gCACGyP,GACC,uBAAKnP,UAAU,cACb,yBAAOA,UAAU,gBAAgB0T,QAAQ,eACtChU,EAAE,+BAEL,uBAAKM,UAAU,8BACb,gBAAC,IAAQ,CACPyW,MAAOD,EACPE,kBAAkB,uBAClBrR,GAAG,qBACHsR,YAAaP,EACbzC,SAAU+D,MAKJ,gBAAbtB,EACC,gBAAC,IAAmB,CAACzC,SAAUd,EAAelE,WAAYgJ,IAE1D,gBAAC,IAAmB,CAClBhE,SAAUd,EACVlE,WAAYgJ,EACZO,UAAWrE,O,kCC7ErB,mMAWA,MAAMsE,UAA2C,YAI/C,YAAYvW,G,MACVsU,MAAMtU,GACN2N,KAAK4G,MAAQ,CAEXiC,mBAAoB,IAAU7I,KAAK3N,MAAM+M,eAAiBY,KAAK3N,MAAM+M,WAAW,KAChF0J,mBAAoB9I,KAAK+I,0BACF,QAArB,EAAA/I,KAAK3N,MAAM+M,kBAAU,eAAG,OAAcY,KAAK3N,MAAM+M,YAEnD4J,cAAc,GAEhBhJ,KAAKsD,cAAgBtD,KAAKsD,cAAcyD,KAAK/G,MAE/C,sBACE,MAAO,CACLiJ,MAAO,CACLC,QAAS,GACT3B,SAAU,GACVC,SAAU,GACV2B,MAAO,GACPC,KAAM,IAERvX,IAAK,OAGT,yBAAyBwX,GACvB,MAAMC,EAAmB,GACzB,OAAI,IAAUD,GACL,IAASC,EAAkBtJ,KAAKuJ,wBAEzC,IAAOF,EAAmB,CAACG,EAAGC,KAE5B,MAAMC,EAAc,SAAO3G,OAAO,IAAMyG,EAAG,OAAQ,KAC7CG,EAAa,IAAUD,GAAe,IAAOE,MAAM,GAAI,IAAM,IAAQF,EAAa,KACxFJ,EAAiBnM,KAAK,CACpB8L,MAAO,CACLC,QAASO,EACTlC,SAAU,IAAMiC,EAAG,WAAYG,EAAW,IAC1CnC,SAAU,IAAMgC,EAAG,WAAYG,EAAW,IAC1CR,MAAO,IAAMK,EAAG,QAAS,IACzBJ,KAAM,IAAMI,EAAG,OAAQ,KAEzB3X,IAAK,IAAM2X,EAAG,MAAO,WAGlBF,GAET,yBAAyBA,GACvB,MAAMO,EAAqB,GAS3B,OARA,IAAOP,EAAmBxG,IACxB+G,EAAmB/G,EAAMmG,MAAMC,SAAW,IAAOpG,EAAMmG,MAAO,CAC5D,WACA,WACA,OACA,YAGGY,EAET,qBAAqBf,GACnB,MAAMO,EAAoBrJ,KAAK8J,yBAAyBhB,GACxD9I,KAAK3N,MAAM+R,SACTpE,KAAK4G,MAAMiC,mBAAqB,CAAE,CAAC,KAAYQ,GAAsBA,GAGzE,cAAcU,EAAcC,GAC1BhK,KAAKgH,SACFJ,IACC,MAAMkC,EAAqB,IAAIlC,EAAMkC,oBAC/BmB,EAAmB,CACvBpY,IAAKiX,EAAmBkB,GAAYnY,IACpCoX,MAAOc,EACPX,KAAM,SAAOtF,OAAO,GAAGiG,EAAaxC,YAAYwC,EAAavC,aAG/D,OADAsB,EAAmBkB,GAAcC,EAC1B,CACLnB,uBAGJ,IAAM9I,KAAKkK,qBAAqBlK,KAAK4G,MAAMkC,qBAG/C,YAAYkB,GACVhK,KAAKgH,SACFJ,IACC,MAAMkC,EAAqB,IAAIlC,EAAMkC,oBAErC,OADAA,EAAmBqB,OAAOH,EAAY,GAC/B,CAAElB,uBAEX,IAAM9I,KAAKkK,qBAAqBlK,KAAK4G,MAAMkC,qBAG/C,WACE9I,KAAKgH,SACH,CACE8B,mBAAoB,IAAS9I,KAAK4G,MAAMkC,mBAAoB9I,KAAKuJ,wBAEnE,KACEvJ,KAAKkK,qBAAqBlK,KAAK4G,MAAMkC,sBAI3C,SACE,MAAM,EAAE3Y,GAAM6P,KAAK3N,MACb+X,EAAoB,IAAMpK,KAAK4G,MAAMkC,mBAAoB,CAACuB,EAAWC,KACzE,MAAM,IAAEzY,EAAG,MAAEoX,GAAUoB,UAAa,IAC9B,QAAEnB,EAAO,MAAEC,EAAK,SAAE3B,EAAQ,SAAED,GAAa0B,UAAS,GACxD,OACE,uBAAKxY,UAAU,4BAA4BmB,IAAKC,GAC7C,IAAOmO,KAAK4G,MAAMkC,oBAAsB,GACvC,uBAAKrY,UAAU,0CACb,gBAAC,IAAM,CACLoU,QAAS,IAAM7E,KAAKuK,YAAYD,GAChC3a,KAAK,SACLyB,QAAQ,OAAM,YACJ,uBAEV,gBAAC,IAAe,CAACX,UAAU,oBAC1BN,EAAE,+BAIT,gBAAC,IAAyB,CACxB2F,GAAIwU,EACJpB,QAASA,EACTC,MAAOA,EACP3B,SAAUA,EACVD,SAAUA,EACVnD,SAAUpE,KAAKsD,mBAKvB,OACE,gCACG8G,EACD,gBAAC,IAAM,CACL3Z,UAAU,+DACVoU,QAAS,IAAM7E,KAAKwK,WACpB7a,KAAK,SACLyB,QAAQ,OAAM,YACJ,0BAEV,gBAAC,IAAc,CAACX,UAAU,oBACzBN,EAAE,6BAON,MAAMsa,EAAsB,4BAAkB7B,I,kCCrKrD,6DAIO,MAAM8B,EAAsE,EACjF5U,KACAoT,UACAC,QACA3B,WACAD,WACAnD,eAEA,MAAM,EAAEjU,GAAM,2BAERwa,EAAc,CAACxc,EAAc2U,KACjC,MAAM8H,EAAkBrD,EAASsD,OAC3BC,EAAkBtD,EAASqD,OAC3BzB,EAAO7B,GAAYC,EAAW,SAAO1D,OAAO,GAAG8G,KAAmBE,KAAqB,GAC7F1G,EAAS,OAAD,QAEJ8E,UACA3B,WACAC,WACA2B,QACA,CAAChb,GAAO2U,GACJsG,EAAO,CAAEA,QAAS,IAExBtT,IAIEiV,EAAmBrK,GACvBiK,EAAYjK,EAAEsK,cAAc7c,KAAMuS,EAAEsK,cAAclI,MAAM+H,QAEpDI,EAAqBvK,GACzBiK,EAAYjK,EAAEsK,cAAc7c,KAAMuS,EAAEsK,cAAclI,OAEpD,OACE,uBAAKrS,UAAU,wBAAuB,eAAc,4BAClD,uBAAKA,UAAU,cACb,yBAAOA,UAAU,4BAA4B0T,QAAYrO,EAAH,YACnD3F,EAAE,mCAEL,2BACE,yBACEM,UAAU,uBACVqF,GAAOA,EAAH,WAAe,mBACEA,EAAH,gBAClBnG,KAAK,OACLxB,KAAK,UACLiW,SAAU6G,EACVnI,MAAOoG,EACPgC,OAAQH,EAAe,YACb,uBACV1G,UAAQ,KAGZ,qBAAG5T,UAAU,aAAaqF,GAAOA,EAAH,iBAC3B3F,EAAE,6CAGP,uBAAKM,UAAU,cACb,yBAAOA,UAAU,4BAA4B0T,QAAYrO,EAAH,aACnD3F,EAAE,oBAEL,2BACE,yBACEM,UAAU,uBACVqF,GAAOA,EAAH,YACJnG,KAAK,OACLxB,KAAK,WACLiW,SAAU6G,EACVnI,MAAOyE,EACP2D,OAAQH,EAAe,YACb,wBACV1G,UAAQ,MAId,uBAAK5T,UAAU,cACb,yBAAOA,UAAU,4BAA4B0T,QAAYrO,EAAH,aACnD3F,EAAE,oBAEL,2BACE,yBACEM,UAAU,uBACVqF,GAAOA,EAAH,YACJnG,KAAK,WACLxB,KAAK,WACLiW,SAAU6G,EACVnI,MAAO0E,EACP0D,OAAQH,EAAe,YACb,wBACV1G,UAAQ,MAId,uBAAK5T,UAAU,cACb,yBAAOA,UAAU,gBAAgB0T,QAAYrO,EAAH,UACvC3F,EAAE,iBAEL,2BACE,yBACEM,UAAU,uBACVqF,GAAOA,EAAH,SACJnG,KAAK,OACLxB,KAAK,QACLiW,SAAU6G,EACVnI,MAAOqG,EACP+B,OAAQH,EAAe,YACb,4B,kCC9GtB,0FAMA,MAAMI,UAA2C,YAI/C,YAAY9Y,GACVsU,MAAMtU,GACN2N,KAAK4G,MAAQ,CACXwE,WAAY,IAAUpL,KAAK3N,MAAM+M,YAAc,GAAKuC,KAAK6G,UAAUxI,KAAK3N,MAAM+M,YAC9EiM,YAAY,GAEdrL,KAAKyH,WAAazH,KAAKyH,WAAWV,KAAK/G,MACvCA,KAAKsL,aAAetL,KAAKsL,aAAavE,KAAK/G,MAE7C,WAAW0D,GACT1D,KAAKuL,YAAY,IAAU5J,KAAKC,MAAO8B,EAAM/F,OAAOmF,OAAQY,EAAM/F,OAAOmF,OAE3E,aAAa8E,GACX5H,KAAKuL,YAAY,IAAU5J,KAAKC,MAAOgG,GAAWA,GAEpD,YAAY4D,EAAYpM,GACtBY,KAAKgH,SACH,CACEoE,WAAYhM,EACZiM,WAAY,IAAUG,IAExB,KACExL,KAAK3N,MAAM+R,SAASoH,GACpBxL,KAAK3N,MAAMsW,UAAU3I,KAAK4G,MAAMyE,cAItC,SACE,MAAM,EAAElb,GAAM6P,KAAK3N,MACnB,OACE,gCACE,gBAAC,IAAkB,CACjB+R,SAAUpE,KAAKsL,aACfxD,cAAe9H,KAAK4G,MAAMwE,WAC1BtV,GAAG,gBACHpF,MAAOP,EAAE,6BACT4X,mBAAoB5X,EAAE,2DACtB6X,sBAAuB7X,EACrB,oGAEF8X,YAAY,IAEbjI,KAAK4G,MAAMyE,YACV,uBAAK5a,UAAU,4BACZN,EAAE,0DAQR,MAAMsb,EAAsB,4BAAkBN,I,kCC9DrD,8DAMA,MAAMO,UAAyC,YAI7C,YAAYrZ,GACVsU,MAAMtU,GACN2N,KAAK4G,MAAQ,CACXxH,WAAY,CAAEuM,iBAAkB3L,KAAK3N,MAAM+M,WAAWuM,kBAAoB,KAE5E3L,KAAK4L,uBAAyB5L,KAAK4L,uBAAuB7E,KAAK/G,MAC/DA,KAAK6L,sBAAwB7L,KAAK6L,sBAAsB9E,KAAK/G,MAE/D,uBAAuB0D,GACrB1D,KAAKgH,SACH,CACE5H,WAAY,CAAEuM,iBAAkBjI,EAAM/F,OAAOmF,QAE/C,IAAM9C,KAAK3N,MAAM+R,SAASpE,KAAK4G,QAGnC,wBACE5G,KAAKgH,SACH,CACE5H,WAAY,CAAEuM,iBAAkB,gBAElC,IAAM3L,KAAK3N,MAAM+R,SAASpE,KAAK4G,QAGnC,SACE,MAAM,EAAEzW,GAAM6P,KAAK3N,MACnB,OACE,uBAAK5B,UAAU,cACb,yBAAOA,UAAU,4BAA4B0T,QAAQ,sBAClDhU,EAAE,8BAEL,uBAAKM,UAAU,uBACb,yBACEA,UAAU,uBACVqF,GAAG,qBAAoB,YACb,aACVnG,KAAK,OACLxB,KAAK,mBACLiW,SAAUpE,KAAK4L,uBACf9I,MAAO9C,KAAK4G,MAAMxH,WAAWuM,iBAAgB,mBAC5B,sBACjBtH,UAAQ,IAEV,0BACE1U,KAAK,SACLkV,QAAS7E,KAAK6L,sBACdpb,UAAU,+BAA8B,YAC9B,2BAETN,EAAE,qBAGP,qBAAGM,UAAU,aAAaqF,GAAG,uBAC1B3F,EAAE,6EAON,MAAM2b,EAAoB,4BAAkBJ,I,kCCtEnD,yKAYA,MAAMK,UAAyC,YAI7C,YAAY1Z,GACVsU,MAAMtU,GACN2N,KAAK4G,MAAQ,CACXkC,mBAAoB9I,KAAKgM,2BAA2BhM,KAAK3N,MAAM+M,aAEjEY,KAAKsD,cAAgBtD,KAAKsD,cAAcyD,KAAK/G,MAE/C,wBACE,MAAO,CACLiJ,MAAO,CACLrX,IAAK,GACLkR,MAAO,IAETjR,IAAK,OAGT,2BAA2Boa,GACzB,OAAI,IAAUA,GACL,CAACjM,KAAKkM,yBAER,IAAMD,EAAqB,CAACnJ,EAAOlR,KACxC,MAAMua,EAAW,WAAc,KAAMrJ,GACrC,MAAO,CACLjR,IAAK,MACLoX,MAAO,CACLrX,MACAkR,MAAOqJ,EAAW,SAAOrI,OAAOhB,GAASA,EACzCsJ,SAAUD,EACVA,eAKR,2BAA2BE,GACzB,OAAO,IACLA,EACA,CAACC,EAAK7C,K,QACJ,WAAS6C,EAAK,CACZ,CAAC7C,EAAER,MAAMrX,MACA,QAAP,EAAA6X,EAAER,aAAK,eAAEmD,YAAmB,QAAP,EAAA3C,EAAER,aAAK,eAAEkD,UAAW1C,EAAER,MAAMnG,MAAQ,SAAOgB,OAAO2F,EAAER,MAAMnG,UAErF,IAGJ,cAAciH,EAAcwC,GAC1B,MAAMC,EAA4B,IAAIxM,KAAK4G,MAAMkC,oBAC3CmB,EAAmB,CACvBpY,IAAK2a,EAA0BD,GAAS1a,IACxCoX,MAAOc,GAETyC,EAA0BD,GAAWtC,EACrCjK,KAAKgH,SACH,CACE8B,mBAAoB0D,GAEtB,IACExM,KAAK3N,MAAM+R,SAAS,CAClBpB,iBAAkBhD,KAAKyM,2BAA2BzM,KAAK4G,MAAMkC,uBAIrE,YAAYyD,GACV,MAAMC,EAA4B,IAAIxM,KAAK4G,MAAMkC,oBACjD0D,EAA0BrC,OAAOoC,EAAS,GAC1CvM,KAAKgH,SACH,CACE8B,mBAAoB0D,GAEtB,IACExM,KAAK3N,MAAM+R,SAAS,CAClBpB,iBAAkBhD,KAAKyM,2BAA2BzM,KAAK4G,MAAMkC,uBAIrE,WACE9I,KAAKgH,SACH,CACE8B,mBAAoB,IAAS9I,KAAK4G,MAAMkC,mBAAoB9I,KAAKkM,0BAEnE,IACElM,KAAK3N,MAAM+R,SAAS,CAClBpB,iBAAkBhD,KAAKyM,2BAA2BzM,KAAK4G,MAAMkC,uBAIrE,SACE,MAAM,EAAE3Y,GAAM6P,KAAK3N,MACb+X,EAAoB,IAAMpK,KAAK4G,MAAMkC,mBAAoB,CAACuB,EAAWC,IAEvE,uBAAK7Z,UAAU,4BAA4BmB,IAAKyY,EAAUxY,KACvD,IAAOmO,KAAK4G,MAAMkC,oBAAsB,GACvC,uBAAKrY,UAAU,0CACb,gBAAC,IAAM,CACLd,KAAK,SACLkV,QAAS,IAAM7E,KAAKuK,YAAYD,GAChClZ,QAAQ,OAAM,YACJ,uBAEV,gBAAC,IAAe,CAACX,UAAU,oBAC1BN,EAAE,6BAIT,gBAAC,IAAiB,CAAC2F,GAAIwU,EAAOrB,MAAOoB,EAAUpB,MAAO7E,SAAUpE,KAAKsD,kBAI3E,OACE,gCACG8G,EACD,gBAAC,IAAM,CACL3Z,UAAU,+DACVoU,QAAS,IAAM7E,KAAKwK,WACpB7a,KAAK,SACLyB,QAAQ,OAAM,YACJ,0BAEV,gBAAC,IAAc,CAACX,UAAU,oBACzBN,EAAE,2BAON,MAAMuc,EAAoB,4BAAkBX,I,kCC7InD,gGAMO,MAAMY,UAAyC,YAIpD,YAAYta,GACVsU,MAAMtU,GACN2N,KAAK4G,MAAQ,CACXhV,IAAKS,EAAM4W,MAAMrX,IACjBkR,MAAOzQ,EAAM4W,MAAMnG,MACnBqJ,SAAU9Z,EAAM4W,MAAMkD,UAExBnM,KAAK4M,cAAgB5M,KAAK4M,cAAc7F,KAAK/G,MAC7CA,KAAK6M,YAAc7M,KAAK6M,YAAY9F,KAAK/G,MAE3C,cAAc4H,EAAUuE,GACtBnM,KAAKgH,SACH,CACElE,MAAO8E,EACPwE,SAAUD,GAEZ,IAAMnM,KAAK3N,MAAM+R,SAASpE,KAAK4G,MAAO5G,KAAK3N,MAAMyD,KAGrD,YAAY4N,GACV1D,KAAKgH,SACH,CACEpV,IAAK8R,EAAM/F,OAAOmF,OAEpB,IAAM9C,KAAK3N,MAAM+R,SAASpE,KAAK4G,MAAO5G,KAAK3N,MAAMyD,KAGrD,SACE,MAAM,EAAE3F,GAAM6P,KAAK3N,MACnB,OACE,uBAAK5B,UAAU,kCACb,uBAAKA,UAAU,cACb,yBAAOA,UAAU,4BAA4B0T,QAAYnE,KAAK3N,MAAMyD,GAAd,QACnD3F,EAAE,eAEL,2BACE,yBACEM,UAAU,uBACVqF,GAAOkK,KAAK3N,MAAMyD,GAAd,OACJnG,KAAK,OACLxB,KAAK,MACLiW,SAAUpE,KAAK6M,YACf/J,MAAO9C,KAAK4G,MAAMhV,IAAG,YACX,aACVyS,UAAQ,MAId,uBAAK5T,UAAU,cACb,2BACE,gBAAC,IAAkB,CACjB2T,SAAUpE,KAAK4M,cACf9E,cAAe9H,KAAK4G,MAAM9D,MAC1BhN,GAAOkK,KAAK3N,MAAMyD,GAAd,SACJpF,MAAOP,EAAE,gBACT4X,mBAAoB5X,EAClB,0EAEF2c,kBAAmB9M,KAAK4G,MAAMuF,eASrC,MAAMY,EAAoB,4BAAkBJ,I,kCC7EnD,IAAYK,EAkBAC,EASAC,EA3BZ,+GAAYF,GACV,yBACA,+BACA,iBACA,qDACA,qBALF,CAAYA,MAAU,KAkBtB,SAAYC,GACV,kBACA,wBACA,kBACA,gBACA,iBACA,aANF,CAAYA,MAAW,KASvB,SAAYC,GACV,iBACA,+BACA,yBACA,iDAJF,CAAYA,MAAc,M,8bCXnB,MAAMC,UAAsB,IAKjC,YAAYpN,GACV4G,MAAM5G,GAQE,KAAAqN,gBAAkB,KAC1B,OAAQpN,KAAKD,UAAUL,YACrB,KAAK,IAAW2N,sBAChB,KAAK,IAAWC,WAChB,KAAK,IAAWC,MACd,MAAO,CAAEnE,KAAM,SAAOrG,OAAO/C,KAAKD,UAAUyN,cAAchG,WAC5D,QACE,OAAO,OAIH,KAAAiG,gBAAkB,K,MAC1B,MAAM,KAAEtf,EAAI,MAAEsN,EAAK,OAAEiC,GAAW,EAAYsC,KAAKD,UAAU2N,KACrDtS,GAAsC,QAAzB,EAAA4E,KAAKD,UAAU3E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GACpE,MAAO,CACLgS,SAAUxf,EACVsN,QACAmS,KAAMlQ,EACNmQ,cAAe7N,KAAKD,UAAU+N,IAC9B1S,aACA2S,YAAa/N,KAAKD,UAAUgO,YAC5BC,eAAgBhO,KAAKD,UAAUiO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,IAME,GAAoB,aALDjO,KAAKkO,OAAOC,MAAM1T,IAAI,CACvCgB,MAAOuE,KAAK5R,SAASqN,MACrB2S,KAAMpO,KAAK5R,SAASuf,YAGb9d,OACP,OAAO,IAAWwe,UAEpB,MAAO3N,GACP,OAAQA,EAAE7Q,QACR,KAAK,IACH,OAAO,IAAWye,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWC,uBAEpB,QACE,OAAO,IAAWC,aAIxB,OAAO,IAAWA,eAGpB,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,IACE,MAAMC,QAAa3O,KAAKkO,OAAOC,MAAMS,aAAa,CAChDnT,MAAOuE,KAAK5R,SAASqN,MACrB2S,KAAMpO,KAAK5R,SAASuf,WAKtB,MAAO,CAAEkB,SAHIF,EAAK3S,KAAK8S,IAAKC,GACnBA,EAAE5gB,OAGX,MAAOuS,GACP,MAAO,CAAEmO,SAAU,QAIvB,KAAA3O,gBAAyBiC,GAA8D,EAAD,gCACpF,IACE,MAAMwM,QAAa3O,KAAKkO,OAAOC,MAAMa,YAAY,OAAD,sBAC9CvT,MAAOuE,KAAK5R,SAASqN,MACrB2S,KAAMpO,KAAK5R,SAASuf,UAChBxL,IAAUA,aAAM,EAANA,EAAQ8M,cAClB,CAAEvgB,KAAM,GAAGsR,KAAK5R,SAASgN,cAAc+G,EAAO8M,gBAC9C,CAAEvgB,KAAMsR,KAAK5R,SAASgN,aACtB4E,KAAK5R,SAASyf,cAAgB,CAAEC,IAAK9N,KAAK5R,SAASyf,eAAkB,KAE3E,IAAIzN,EAAQ,GAIZ,OAHoB,MAAhBuO,EAAK9e,QAAkB+Z,MAAMsF,QAAQP,EAAK3S,QAC5CoE,EAAQuO,EAAK3S,KAAK8S,IAAK3e,GAAMA,EAAEhC,OAE1B,CAAEiS,SACT,MAAOM,GACP,MAAO,CAAEN,MAAO,QAIpB,KAAA+O,oBAAsB,IAAuC,EAAD,gCAC1D,IACE,MAAMR,QAAa3O,KAAKkO,OAAOC,MAAMiB,cAAc,CACjD3T,MAAOuE,KAAK5R,SAASqN,MACrB2S,KAAMpO,KAAK5R,SAASuf,WAEtB,OAAoB,MAAhBgB,EAAK9e,OACA,CAAEwf,UAAWtO,OAAOC,KAAK2N,EAAK3S,OAEhC,CAAEqT,UAAW,IACpB,MAAO3O,GACP,MAAO,CAAE2O,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAM5O,EAAU,CACd6O,OAAQ,CAAC,+BACTC,cAAe,CAAC,UAAUL,GAC1B,uBAAwB,CAAC,eAErBzN,EAAO,CACX3T,KAAM,MACN0hB,QAAQ,EACRC,OAAQ,CACNpC,IAAK8B,EACLO,aAAc,OACdC,aAAcP,EAAkB,IAAM,IACtClR,OAAQmR,GAEVpc,OAAQ,CAAC,OAAQ,iBAEb2c,EACmB,eAAvBjQ,KAAK5R,SAASwf,KACV,yBACA,WAAW5N,KAAK5R,SAASwf,cAS/B,OAAsC,aAPO,mBAAiBtM,KAAK,IAAe,CAChFoM,IAAK,GAAGuC,WAA2BjQ,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,iBACxEuC,OAAQ,OACRpP,UACAgB,KAAMH,KAAK6G,UAAU1G,MAGAP,cAGzB,KAAA4O,cAAuBzhB,GAAmC,EAAD,gCACvD,IAOE,OAAuB,aANJsR,KAAKkO,OAAOC,MAAMa,YAAY,OAAD,QAC9CvT,MAAOuE,KAAK5R,SAASqN,MACrB2S,KAAMpO,KAAK5R,SAASuf,SACpBjf,QACIsR,KAAK5R,SAASyf,cAAgB,CAAEC,IAAK9N,KAAK5R,SAASyf,eAAkB,MAE/Dhe,OACZ,MAAO6Q,GACP,OAAO,MAIX,KAAA0P,eAAwB1hB,GAAyC,EAAD,gCAC9D,IACE,MAAMigB,QAAa3O,KAAKkO,OAAOC,MAAMa,YAAY,OAAD,QAC9CvT,MAAOuE,KAAK5R,SAASqN,MACrB2S,KAAMpO,KAAK5R,SAASuf,SACpBjf,QACIsR,KAAK5R,SAASyf,cAAgB,CAAEC,IAAK9N,KAAK5R,SAASyf,eAAkB,KAE3E,OAAoB,MAAhBc,EAAK9e,OAEAwgB,EAAOC,KAAK3B,EAAK3S,KAAc,QAAG,UAAUiD,WAE9C,KACP,MAAOyB,GACP,OAAO,SAIX,KAAA6P,oBAAsB,IACpBvQ,KAAKmQ,cAAc,GAAGnQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS4f,kBAElE,KAAAwC,sBAAwB,IAAMxQ,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,YAEjD,KAAAqV,qBAAuB,IACrBzQ,KAAKoQ,eAAe,GAAGpQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS4f,kBAEnE,KAAA0C,kBAAoB,IAClB1Q,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,eACnB4E,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,aAErB,KAAAuV,mBAAqB,IACnB3Q,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,eACpB4E,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,aAEtB,KAAAwV,iBAAmB,IACjB5Q,KAAKmQ,cAAc,GAAGnQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS2f,eAElE,KAAA8C,kBAAoB,IAClB7Q,KAAKoQ,eAAe,GAAGpQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS2f,eAEnE,KAAAzN,sBAAwB,IAAMN,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,iBA1MhD,MAAM0V,EAAW9Q,KAAKoN,kBACtBpN,KAAK5R,SAAW4R,KAAKyN,kBACrB,MAAMjS,EACmB,eAAvBwE,KAAK5R,SAASwf,KAAwB,KAAO,WAAW5N,KAAK5R,SAASwf,cACxE5N,KAAKkO,OAAS,IAAI,EAAQ,OAAD,wBAAM4C,GAAQ,CAAEtV,iB,2cCNtC,MAAMuV,UAAyB,IAOpC,YAAYhR,GACV4G,MAAM5G,GALA,KAAAiR,QAAU,gCAEV,KAAAC,UAAW,EAWT,KAAA7D,gBAAkB,KAC1B,OAAQpN,KAAKD,UAAUL,YACrB,KAAK,IAAW4N,WAAY,CAC1B,MAAM,SAAE/F,EAAQ,SAAEC,GAAaxH,KAAKD,UAAUyN,cAE9C,MAAO,CAAEoC,cAAe,SADJ,SAAO9L,OAAO,GAAG,SAAOf,OAAOwE,MAAa,SAAOxE,OAAOyE,OAGhF,QACE,OAAO,OAIH,KAAA0J,UAAY,CACpBxD,EACAyD,EACArQ,EACAgB,IACG,EAAD,gCACF,MAAMsP,EAAcpR,KAAKoN,kBAEnBiE,EAAiB,OAAH,sBAClB1B,OAAQ,oBACLyB,GACAtQ,GAGL,GAAId,KAAKiR,SACP,OAAO,YAAsB,OAAD,QAC1BvD,MACAwC,OAAQiB,GAAiB,MACzBrQ,QAAS,YAAeuQ,IACpBvP,GAAQ,CAAEA,KAAMH,KAAK6G,UAAU1G,MAIvC,MAAML,QAAiB6P,MAAM5D,EAAK,OAAF,QAC9BwC,OAAQiB,GAAiB,MACzBrQ,QAASuQ,GACLvP,GAAQ,CAAEA,KAAMH,KAAK6G,UAAU1G,MAErC,IAAKL,EAAS8P,GACZ,MAAM9P,EAER,MAA6C,eAAzCA,EAASX,QAAQrG,IAAI,gBAChBgH,EAASjQ,OAEXiQ,EAAS+P,UAGlB,KAAA/D,gBAAkB,K,MAChB,MAAM,KAAEtf,EAAI,MAAEsN,EAAK,KAAEmS,GAAS,EAAkB5N,KAAKD,UAAU2N,KACzDtS,GAAsC,QAAzB,EAAA4E,KAAKD,UAAU3E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GACpE,MAAO,CACLgS,SAAUxf,EACVsN,QACAmS,OACAC,cAAe7N,KAAKD,UAAU+N,KAAO,OACrC1S,aACA2S,YAAa/N,KAAKD,UAAUgO,YAC5BC,eAAgBhO,KAAKD,UAAUiO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,MAAMP,EAAM1N,KAAKiR,SACb,GAAGjR,KAAKgR,oBAAoBhR,KAAK5R,SAASqN,eAAeuE,KAAK5R,SAASuf,WACvE,GAAG3N,KAAKgR,wBAAwBhR,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,WACzE,IAEE,UADmB3N,KAAKkR,UAAUxD,IACzB+D,OAASzR,KAAK5R,SAASuf,SAC9B,OAAO,IAAWU,UAEpB,MAAO3N,GACP,OAAQA,EAAE7Q,QACR,KAAK,IACH,OAAO,IAAWye,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWmD,iBAEpB,QACE,OAAO,IAAWlD,wBAIxB,OAAO,IAAWC,eAGpB,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,MAAMhB,EAAM1N,KAAKiR,SACb,GAAGjR,KAAKgR,oBAAoBhR,KAAK5R,SAASqN,eAAeuE,KAAK5R,SAASuf,oBACvE,GAAG3N,KAAKgR,wBAAwBhR,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,yBACzE,IACE,MAAM3R,QAAagE,KAAKkR,UAAUxD,GAElC,MAAO,CAAEmB,SADI7S,EAAK2V,OAAO7C,IAAKtO,GAAMA,EAAErS,OAEtC,MAAOuS,GACP,MAAO,CAAEmO,SAAU,QAIvB,KAAA+C,YAAc,CAACX,EAAmBhC,KAChC,IAAIvB,EAAM,GAUV,OAREA,EADEuB,EACIgC,EACF,GAAGjR,KAAKgR,oBAAoBhR,KAAK5R,SAASqN,eAAeuE,KAAK5R,SAASuf,kBAAkB3N,KAAK5R,SAASgN,cAAc6T,iBAA4BjP,KAAK5R,SAASyf,gBAC/J,GAAG7N,KAAKgR,wBAAwBhR,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,gBAAgB3N,KAAK5R,SAASyf,iBAAiB7N,KAAK5R,SAASgN,cAAc6T,eAE9IgC,EACF,GAAGjR,KAAKgR,oBAAoBhR,KAAK5R,SAASqN,eAAeuE,KAAK5R,SAASuf,kBAAkB3N,KAAK5R,SAASgN,0BAA0B4E,KAAK5R,SAASyf,gBAC/I,GAAG7N,KAAKgR,wBAAwBhR,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,gBAAgB3N,KAAK5R,SAASyf,iBAAiB7N,KAAK5R,SAASgN,wBAEjIsS,GAGT,KAAAxN,gBAAyBiC,GAA8D,EAAD,gC,MACpF,MAAMuL,GAAMvL,aAAM,EAANA,EAAQ8M,cAChBjP,KAAK4R,YAAY5R,KAAKiR,SAAU9O,EAAO8M,cACvCjP,KAAK4R,YAAY5R,KAAKiR,UAC1B,IACE,MAAMjV,QAAagE,KAAKkR,UAAUxD,GAElC,MAAO,CAAEtN,MADKJ,KAAKiR,SAAWjV,EAAK2V,QAAoB,QAAX,EAAA3V,EAAK2V,cAAM,eAAE7C,IAAK+C,GAAMA,EAAEnjB,QAAS,IAE/E,MAAOgS,GACP,MAAO,CAAEN,MAAO,QAIpB,KAAA+O,oBAAsB,IAAuC,EAAD,gCAC1D,MAAMzB,EAAM1N,KAAKiR,SACb,GAAGjR,KAAKgR,oBAAoBhR,KAAK5R,SAASqN,eAAeuE,KAAK5R,SAASuf,WACvE,GAAG3N,KAAKgR,wBAAwBhR,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,WACzE,IAEE,MAAO,CAAE0B,UAAW,QADDrP,KAAKkR,UAAUxD,IACRoE,WAC1B,MAAOpR,GACP,MAAO,CAAE2O,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAM3O,EAAU,CACd,eAAgB,CAAC,oBACjB8O,cAAe,CAAC,SAASL,IAErBzN,EAAO,CACX4L,IAAK8B,EACLlc,OAAQ,CAAC,YAAa,sBAAuB,uBAC7Cye,wBAAyBtC,EACzBI,QAAQ,GAEJnC,EAAM1N,KAAKiR,SACb,GAAGjR,KAAKgR,oBAAoBhR,KAAK5R,SAASqN,eAAeuE,KAAK5R,SAASuf,iBACvE,GAAG3N,KAAKgR,wBAAwBhR,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,iBAUzE,OAAsC,aAPO,mBAAiBrM,KAAK,IAAe,CAChFoM,MACAwC,OAAQ,OACRpP,UACAgB,KAAMH,KAAK6G,UAAU1G,MAGAP,cAGzB,KAAA4O,cAAuBzhB,GAAmC,EAAD,gCACvD,MAAMsjB,EAAWtjB,EAAKiN,QAAQ,MAAO,IAC/B+R,EAAM1N,KAAKiR,SACb,GAAGjR,KAAKgR,oBAAoBhR,KAAK5R,SAASqN,eAAeuE,KAAK5R,SAASuf,gBAAgBqE,QAAehS,KAAK5R,SAASyf,gBACpH,GAAG7N,KAAKgR,wBAAwBhR,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,gBAAgB3N,KAAK5R,SAASyf,iBAAiBmE,IACxH,IAEE,aADMhS,KAAKkR,UAAUxD,IACd,EACP,MAAOhN,GACP,OAAO,MAIX,KAAA0P,eAAwB1hB,GAAyC,EAAD,gCAC9D,MAAMsjB,EAAWtjB,EAAKiN,QAAQ,MAAO,IAC/B+R,EAAM1N,KAAKiR,SACb,GAAGjR,KAAKgR,oBAAoBhR,KAAK5R,SAASqN,eAAeuE,KAAK5R,SAASuf,gBAAgBqE,QAAehS,KAAK5R,SAASyf,gBACpH,GAAG7N,KAAKgR,wBAAwBhR,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,gBAAgB3N,KAAK5R,SAASyf,iBAAiBmE,IACxH,IAEE,aADmBhS,KAAKkR,UAAUxD,GAElC,MAAOhN,GACP,OAAO,SAIX,KAAA6P,oBAAsB,IACpBvQ,KAAKmQ,cAAc,GAAGnQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS4f,kBAElE,KAAAwC,sBAAwB,IAAMxQ,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,YAEjD,KAAAqV,qBAAuB,IACrBzQ,KAAKoQ,eAAe,GAAGpQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS4f,kBAEnE,KAAA0C,kBAAoB,IAClB1Q,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,eACnB4E,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,aAErB,KAAAuV,mBAAqB,IACnB3Q,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,eACpB4E,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,aAEtB,KAAAwV,iBAAmB,IACjB5Q,KAAKmQ,cAAc,GAAGnQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS2f,eAElE,KAAA8C,kBAAoB,IAClB7Q,KAAKoQ,eAAe,GAAGpQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS2f,eAEnE,KAAAzN,sBAAwB,IAAMN,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,iBApOhD4E,KAAK5R,SAAW4R,KAAKyN,kBACM,kBAAvBzN,KAAK5R,SAASwf,OAChB5N,KAAKgR,QAAU,WAAWhR,KAAK5R,SAASwf,oBACxC5N,KAAKiR,UAAW,M,ybCTf,MAAMgB,UAAsB,IAOjC,YAAYlS,GACV4G,MAAM5G,GAUA,KAAAmS,QAAU,IAAiC,EAAD,gCAChD,GAAIlS,KAAKoO,KACP,OAAOpR,QAAQmV,QAAQnS,KAAKoO,MAE9B,MAAMA,QAAyBpO,KAAKkO,OAAOkE,SAASC,KAAKrS,KAAK5R,SAASkkB,UACvE,IAAKlE,EACH,MAAM,IAAI7Q,MAAM,IAAKpN,EAAE,0CAClB,GAAIie,EAAKmE,sBAAwBvS,KAAK5R,SAASkkB,SACpD,MAAM,IAAI/U,MACR,IAAKpN,EAAE,6EAA8E,CACnFzB,KAAM0f,EAAKmE,oBACXpkB,KAAM6R,KAAK5R,SAASkkB,YAM1B,OADAtS,KAAKoO,KAAOA,EACLpR,QAAQmV,QAAQnS,KAAKoO,SAmB9B,KAAAhB,gBAAkB,KAChB,OAAQpN,KAAKD,UAAUL,YACrB,KAAK,IAAW2N,sBAChB,KAAK,IAAWE,MAChB,KAAK,IAAWD,WACd,OAAO,SAAOvK,OAAO/C,KAAKD,UAAUyN,cAAchG,UACpD,QACE,OAAO,OAIb,KAAAgL,aAAe,IAA0B,EAAD,gCACtC,IAEE,aADmBxS,KAAKkS,WACZpc,GACZ,MAAO4K,GACP,MAAMA,MAIV,KAAAuN,gBAAkB,IAAiC,EAAD,gCAChD,IAEE,aADMjO,KAAKkS,UACJ,IAAW7D,UAClB,MAAO3N,GACP,OAAQA,EAAE7Q,QACR,KAAK,IACH,OAAO,IAAWye,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWmD,iBAEpB,KAAK,IACH,OAAO,IAAWlD,uBAEpB,QACE,OAAO,IAAWC,iBAM1B,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,IACE,MAAM+D,QAAkBzS,KAAKwS,eACvB7D,QAAa3O,KAAKkO,OAAOwE,SAASlV,IAAIiV,GAE5C,MAAO,CAAE5D,SADIF,EAAKG,IAAKtO,GAAMA,EAAErS,OAE/B,MAAOuS,GACP,MAAO,CAAEmO,SAAU,QAIvB,KAAA3O,gBAAyBiC,GAGI,EAAD,gCAC1B,IACE,MAAMsQ,QAAkBzS,KAAKwS,eACvB7D,QAAa3O,KAAKkO,OAAOyE,aAAaC,KAAKH,EAAW,OAAF,WACpDtQ,aAAM,EAANA,EAAQ8M,cACR,CAAEvgB,KAAMsR,KAAKgS,SAAS7P,EAAO8M,eAC7B,CAAEvgB,KAAMsR,KAAK5R,SAASgN,cAO5B,MAAO,CAAEgF,MALKuO,EAAK1N,OAAO,CAACqL,EAAKuG,MACZ,SAAdA,EAAKljB,OAAoBwS,aAAM,EAANA,EAAQ2Q,gBAA+B,SAAdD,EAAKljB,OACzD2c,EAAInP,KAAK0V,EAAKnkB,MACT4d,GACN,KAEH,MAAO5L,GACP,MAAO,CAAEN,MAAO,QAIpB,KAAA+O,oBAAsB,IAAuC,EAAD,gCAC1D,IACE,MAAMsD,QAAkBzS,KAAKwS,eACvB7D,QAAa3O,KAAKkO,OAAOkE,SAAS/C,UAAUoD,GAClD,MAAO,CAAEpD,UAAWtO,OAAOC,KAAK2N,IAChC,MAAOjO,GACP,MAAO,CAAE2O,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAM+C,QAAkBzS,KAAKwS,eACvB1R,EAAU,CACd,eAAgB,CAAC,oBACjB,gBAAiB,CAACyO,IAEdzN,EAAO,CACX4L,IAAK8B,EACLuD,aAAa,EACbC,uBAAuB,EACvBC,wBAAyBxD,EACzBF,MAAOG,GAUT,OAAsC,aAPO,mBAAiBpO,KAAK,IAAe,CAChFoM,IAAK,GAAG1N,KAAK5R,SAASwf,wBAAwB6E,UAC9CvC,OAAQ,OACRpP,UACAgB,KAAMH,KAAK6G,UAAU1G,MAGAP,cAGzB,KAAA4O,cAAuBzhB,GAAmC,EAAD,gC,MACvD,IACE,MAAM+jB,QAAkBzS,KAAKwS,eACvB1E,EAAM9N,KAAK5R,SAASyf,gBAAmC,QAAjB,EAAA7N,KAAKoO,YAAY,eAAE8E,gBAE/D,aADMlT,KAAKkO,OAAOiF,gBAAgBC,QAAQX,EAAW/jB,EAAMof,IACpD,EACP,MAAOpN,GACP,OAAO,MAIX,KAAA0P,eAAwB1hB,GAAyC,EAAD,gC,MAC9D,IACE,MAAM+jB,QAAkBzS,KAAKwS,eACvB1E,EAAM9N,KAAK5R,SAASyf,gBAAmC,QAAjB,EAAA7N,KAAKoO,YAAY,eAAE8E,gBACzDlB,EAAWtjB,EAAKiN,QAAQ,OAAQ,IACtC,aAAaqE,KAAKkO,OAAOiF,gBAAgBC,QAAQX,EAAWT,EAAUlE,GACtE,MAAOpN,GACP,OAAO,SAIX,KAAAsR,SAAYa,GACH7S,KAAK5R,SAASgN,WAAa,GAAG4E,KAAK5R,SAASgN,cAAcyX,IAASA,EAG5E,KAAAtC,oBAAsB,IAAMvQ,KAAKmQ,cAAcnQ,KAAKgS,SAAS,GAAGhS,KAAK5R,SAAS4f,iBAE9E,KAAAwC,sBAAwB,IAA8B,EAAD,gCACnD,IACE,MAAMiC,QAAkBzS,KAAKwS,eACvB7D,QAAa3O,KAAKkO,OAAOyE,aAAaC,KAAKH,EAAW,CAC1D/jB,KAAMsR,KAAK5R,SAASgN,aAKtB,QAH4BuT,EAAK0E,KAC9BR,GAAuB,SAAdA,EAAKljB,MAAiC,YAAdkjB,EAAK1kB,MAGzC,MAAOuS,GACP,OAAO,MAIX,KAAA+P,qBAAuB,IACrBzQ,KAAKoQ,eAAepQ,KAAKgS,SAAS,GAAGhS,KAAK5R,SAAS4f,iBAErD,KAAA0C,kBAAoB,IAClB1Q,KAAKmQ,cAAcnQ,KAAKgS,SAAS,eAAiBhS,KAAKmQ,cAAcnQ,KAAKgS,SAAS,aAErF,KAAArB,mBAAqB,IACnB3Q,KAAKoQ,eAAepQ,KAAKgS,SAAS,eAClChS,KAAKoQ,eAAepQ,KAAKgS,SAAS,aAEpC,KAAApB,iBAAmB,IAAM5Q,KAAKmQ,cAAcnQ,KAAKgS,SAAS,GAAGhS,KAAK5R,SAAS2f,cAE3E,KAAA8C,kBAAoB,IAAM7Q,KAAKoQ,eAAepQ,KAAKgS,SAAS,GAAGhS,KAAK5R,SAAS2f,cAE7E,KAAAzN,sBAAwB,IAAMN,KAAKoQ,eAAepQ,KAAKgS,SAAS,iBA3N9DhS,KAAK5R,SAAW4R,KAAKyN,kBACrB,MAAM8B,EAAQvP,KAAKoN,kBACnBpN,KAAKkO,OAAS,IAAI,SAAO,CACvBN,KAAM5N,KAAK5R,SAASwf,KACpB2B,UAEFvP,KAAKoO,KAAO,KAuBd,kBACE,MAAM,KAAEjgB,EAAI,MAAEsN,EAAK,SAAE3O,EAAUwmB,UAAWhB,GAAa,EAAYtS,KAAKD,UAAU2N,KAC5EtS,GA1CkCsG,OAAhBA,EA0Cc1B,KAAKD,UAAU3E,iBA1CV,EAAHsG,EAAK/F,QAAQ,MAAO,MAAO,GAA5C,IAAC+F,EA4CxB,MAAO,CACLiM,SAAUxf,EACVsN,QACAmS,KAJW,WAAW9gB,EAKtB+gB,cAAe7N,KAAKD,UAAU+N,IAC9BwE,WACAlX,aACA2S,YAAa/N,KAAKD,UAAUgO,YAC5BC,eAAgBhO,KAAKD,UAAUiO,mB,ybCnD9B,MAAMuF,UAAqB,IAKhC,YAAYxT,GACV4G,MAAM5G,GAHA,KAAAkR,UAAW,EAUT,KAAA7D,gBAAkB,KAC1B,GAAIpN,KAAKD,UAAUL,aAAe,IAAW4N,WAAY,CACvD,MAAM,SAAE/F,EAAQ,SAAEC,GAAaxH,KAAKD,UAAUyN,cAC9C,IAAK,IAAUjG,GAAW,CAExB,MAAO,CAAEiM,cAAe,SADJ,SAAO1P,OAAO,GAAG,SAAOf,OAAOwE,MAAa,SAAOxE,OAAOyE,OAGhF,MAAO,CAAEoI,cAAe,SAAS,SAAO7M,OAAOyE,IAEjD,OAAO,MAGC,KAAA0J,UAAY,CACpBxD,EACAyD,EACArQ,EACAgB,IACG,EAAD,gCACF,MAAMsP,EAAcpR,KAAKoN,kBACnBiE,EAAiB,OAAH,sBAClB1B,OAAQ,oBACLyB,GACAtQ,GAEL,GAAId,KAAKiR,SACP,OAAO,YAAsB,OAAD,QAC1BwC,eAAe,EACf/F,MACAwC,OAAQiB,GAAiB,MACzBrQ,QAAS,YAAeuQ,IACpBvP,GAAQ,CAAEA,KAAMH,KAAK6G,UAAU1G,MAIvC,MAAML,QAAiB6P,MAAM5D,EAAK,OAAF,QAC9BwC,OAAQiB,GAAiB,MACzBrQ,QAASuQ,GACLvP,GAAQ,CAAEA,KAAMH,KAAK6G,UAAU1G,MAErC,IAAKL,EAAS8P,GACZ,MAAM9P,EAER,MAA6C,eAAzCA,EAASX,QAAQrG,IAAI,gBAChBgH,EAASjQ,OAEXiQ,EAAS+P,UAGlB,KAAA/D,gBAAkB,K,MAChB,MAAM,KAAEtf,EAAI,MAAEsN,EAAK,SAAE3O,EAAUwmB,UAAWhB,GAAa,EAAYtS,KAAKD,UAAU2N,KAC5EtS,GAAsC,QAAzB,EAAA4E,KAAKD,UAAU3E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GAEpE,MAAO,CACLgS,SAAUxf,EACVsN,QACAmS,KAJW,WAAW9gB,EAKtB+gB,cAAe7N,KAAKD,UAAU+N,IAC9BwE,WACAlX,aACA2S,YAAa/N,KAAKD,UAAUgO,YAC5BC,eAAgBhO,KAAKD,UAAUiO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,MAAMP,EAAM,GAAG1N,KAAK5R,SAASwf,qBAAqB5N,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,WACvF,IACE,MAAM3R,QAAwCgE,KAAKkR,UAAUxD,GAC7D,IAAI1R,aAAI,EAAJA,EAAM7N,QAAS6R,KAAK5R,SAASuf,SAC/B,OAAO,IAAWU,UAEpB,MAAO3N,GACP,OAAO,IAAWgT,qBAEpB,OAAO,IAAWA,wBAGpB,KAAAhF,kBAAoB,IAAiC,EAAD,gCAClD,MAAMhB,EAAM,GAAG1N,KAAK5R,SAASwf,qBAAqB5N,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,oBACvF,IACE,MAAM3R,QAAsCgE,KAAKkR,UAAUxD,GAE3D,MAAO,CAAEmB,UADI7S,aAAI,EAAJA,EAAM8S,IAAKtO,GAAMA,EAAErS,QAAS,IAEzC,MAAOuS,GACP,MAAO,CAAEmO,SAAU,QAIvB,KAAA3O,gBAAyBiC,GAA8D,EAAD,gCACpF,MAAMuL,GAAMvL,aAAM,EAANA,EAAQ8M,cAChB,GAAGjP,KAAK5R,SAASwf,qBAAqB5N,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,qBAAqB3N,KAAK5R,SAASgN,cAAc+G,EAAO8M,eACnI,GAAGjP,KAAK5R,SAASwf,qBAAqB5N,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,qBAAqB3N,KAAK5R,SAASgN,aAElH,IACE,MAAMY,QAAgDgE,KAAKkR,UAAUxD,GAErE,MAAO,CAAEtN,OADIpE,aAAI,EAAJA,EAAM8S,IAAK+C,GAAMA,EAAE1jB,QAAS,IAEzC,MAAOuS,GACP,MAAO,CAAEN,MAAO,QAIpB,KAAA+O,oBAAsB,IAAuC,EAAD,gCAC1D,MAAMzB,EAAM,GAAG1N,KAAK5R,SAASwf,qBAAqB5N,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,qBACvF,IACE,MAAM3R,QAAwCgE,KAAKkR,UAAUxD,GAE7D,MAAO,CAAE2B,WADItO,kBAAM,EAANA,OAAQC,KAAKhF,KAAS,IAEnC,MAAO0E,GACP,MAAO,CAAE2O,UAAW,QAKxB,KAAAC,kBAAoB,CAAOC,EAAeC,IAAyC,EAAD,gCAChF,MAAM1O,EAAU,CACd,eAAgB,CAAC,oBACjB8O,cAAe,CAAC,SAASL,IAErBzN,EAAO,CACX+N,QAAQ,EACR8D,qBAAsB,GACtBC,cAAe,IACf9D,OAAQ,CACNC,aAAc,OACdrC,IAAK8B,GAEPlc,OAAQ,CAAC,OAAQ,gBACjB3D,KAAM,SAEF+d,EAAM,GAAG1N,KAAK5R,SAASwf,qBAAqB5N,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,iBAUvF,OAAsC,aAPO,mBAAiBrM,KAAK,IAAe,CAChFoM,MACAwC,OAAQ,OACRpP,UACAgB,KAAMH,KAAK6G,UAAU1G,MAGAP,cAGzB,KAAA4O,cAAuBzhB,GAAmC,EAAD,gCACvD,MAAMsjB,EAAWtjB,EAAKiN,QAAQ,MAAO,IAC/B+R,EAAM,GAAG1N,KAAK5R,SAASwf,qBAAqB5N,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,qBAAqBqE,SAAgBhS,KAAK5R,SAASyf,gBAC1I,IAEE,aADM7N,KAAKkR,UAAUxD,IACd,EACP,MAAOhN,GACP,OAAO,MAIX,KAAA0P,eAAwB1hB,GAAyC,EAAD,gCAC9D,MAAMsjB,EAAWtjB,EAAKiN,QAAQ,MAAO,IAC/B+R,EAAM,GAAG1N,KAAK5R,SAASwf,qBAAqB5N,KAAK5R,SAASqN,SAASuE,KAAK5R,SAASuf,gBAAgBqE,SAAgBhS,KAAK5R,SAASyf,gBACrI,IAEE,aADmB7N,KAAKkR,UAAUxD,GAElC,MAAOhN,GAGP,OADAmT,QAAQC,KAAK,8BAA+BpT,GACrC,SAIX,KAAA6P,oBAAsB,IACpBvQ,KAAKmQ,cAAc,GAAGnQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS4f,kBAElE,KAAAwC,sBAAwB,IAAMxQ,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,YAEjD,KAAAqV,qBAAuB,IACrBzQ,KAAKoQ,eAAe,GAAGpQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS4f,kBAEnE,KAAA0C,kBAAoB,IAClB1Q,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,eACnB4E,KAAKmQ,cAAiBnQ,KAAK5R,SAASgN,WAAjB,aAErB,KAAAuV,mBAAqB,IACnB3Q,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,eACpB4E,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,aAEtB,KAAAwV,iBAAmB,IACjB5Q,KAAKmQ,cAAc,GAAGnQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS2f,eAElE,KAAA8C,kBAAoB,IAClB7Q,KAAKoQ,eAAe,GAAGpQ,KAAK5R,SAASgN,cAAc4E,KAAK5R,SAAS2f,eAEnE,KAAAzN,sBAAwB,IAAMN,KAAKoQ,eAAkBpQ,KAAK5R,SAASgN,WAAjB,iBAnMhD4E,KAAK5R,SAAW4R,KAAKyN,kBAChBzN,KAAK5R,SAASwf,KAAKhS,SAAS,eAC/BoE,KAAKiR,UAAW,M,wXCpBtB,MAAM8C,EAA0B,CAC9B,CACE5lB,KAAM,QACNwB,KAAM,OACNmiB,SAAU,OACVkC,eAAgB,UAChBC,SAAU,GAEZ,CACE9lB,KAAM,SACNwB,KAAM,OACNmiB,SAAU,OACVkC,eAAgB,aAChBC,SAAU,GAEZ,CACE9lB,KAAM,SACNwB,KAAM,SACNmiB,SAAU,KACVkC,eAAgBE,OAAO,CAAC,WAAY,aAAc,cAAc1jB,KAAK,MACrEyjB,SAAU,GAEZ,CACE9lB,KAAM,OACNwB,KAAM,OACNmiB,SAAU,OACVkC,eAAgBE,OAAO,CAAC,UAAW,WAAY,aAAa1jB,KAAK,MACjEyjB,SAAU,GAEZ,CACE9lB,KAAM,SACNwB,KAAM,SACNmiB,SAAU,aACVkC,eAAgBE,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgB1jB,KAAK,MACxFyjB,SAAU,GAEZ,CACE9lB,KAAM,iBACNwB,KAAM,gBACNmiB,SAAU,aACVkC,eAAgB,gBAChBC,SAAU,EACVE,gBAAwBC,GAAe,OAAD,6BACpC,MAAMC,QAAoBD,EAAW9T,wBACrC,OAAO,YAAe+T,GAAe,CAAC,gBAAkB,OAG5D,CACElmB,KAAM,MACNwB,KAAM,MACNmiB,SAAU,MACVkC,eAAgBE,OAAO,CAAC,YAAa,iBAAiB1jB,KAAK,MAC3DyjB,SAAU,GAEZ,CACE9lB,KAAM,SACNwB,KAAM,SACNmiB,SAAU,SACVkC,eAAgBE,OAAO,CAAC,mBAAoB,YAAY1jB,KAAK,MAC7DyjB,SAAU,GAEZ,CACE9lB,KAAM,OACNwB,KAAM,OACNmiB,SAAU,OACVkC,eAAgBE,OAAO,CAAC,WAAY,YAAY1jB,KAAK,MACrDyjB,SAAU,GAEZ,CACE9lB,KAAM,SACNwB,KAAM,SACNmiB,SAAU,KACVkC,eAAgBE,OAAO,CAAC,eAAgB,aAAa1jB,KAAK,MAC1DyjB,SAAU,IAYDK,EAA0BF,GAA0D,OAAD,6BAC9F,MAAM,MAAEhU,SAAgBgU,EAAWlU,kBAkBnC,aAhByBlD,QAAQQ,IAC/BuW,EAAWjF,IAAuC3e,GAAM,OAAD,6BACrD,IAAIokB,EAAgBnU,EAAMlE,OAAQ2V,GAAM1hB,EAAE6jB,eAAeQ,KAAK3C,IAI9D,OAHI0C,EAAclY,OAAS,GAAKlM,EAAEgkB,kBAChCI,QAAsBpkB,EAAEgkB,gBAAgBC,IAEnC,CACLjmB,KAAMgC,EAAEhC,KACRwB,KAAMQ,EAAER,KACRmiB,SAAU3hB,EAAE2hB,SACZmC,SAAU9jB,EAAE8jB,SACZM,uBAMHrY,OAAQ/L,KAAQA,EAAEokB,cAAclY,QAChCiD,KAAK,CAACmV,EAAIC,IAAOA,EAAGT,SAAWQ,EAAGR,c,kCCtHvC,wVAIYU,EAJZ,oCAIA,SAAYA,GACV,2CACA,2CACA,sCACA,wBACA,4CACA,0CACA,oCACA,0DACA,gDACA,gDACA,8CAXF,CAAYA,MAAsB,KAc3B,MAAMC,EAAqBC,I,MAChC,MAAMplB,EAAa,IAAMolB,EAAa,CAAC,SAAU,cAAe,IAChE,GAA0B,IAAtBplB,EAAW4M,OAAc,OAAO,KAEpC,MAAMyY,EAAmBrlB,EAAW4jB,KAAM7gB,GAAiB,cAAXA,EAAE7C,MAC5ColB,EAAqBtlB,EAAW4jB,KAAM7gB,GAAmB,cAAbA,EAAE5C,QAEpD,GACE,CACE+kB,EAAuBK,mBACvBL,EAAuBM,sBACvBrZ,SAAyB,QAAhB,EAAAiZ,EAAYvlB,YAAI,eAAEO,UAC5BklB,EAED,OAAO,IAAeG,WAGxB,IAAKJ,IAAqBA,EAAiBjlB,OACzC,OAAO,KAGT,MAAMA,EACwB,SAA5BilB,EAAiBjlB,OACb,IAAeslB,UACa,UAA5BL,EAAiBjlB,OACjB,IAAeulB,OACf,IAAeC,QAErB,GAAIP,EAAiBllB,QAAUklB,EAAiBllB,SAAWC,EACzD,OAAQilB,EAAiBllB,QACvB,KAAK+kB,EAAuBM,qBAC5B,KAAKN,EAAuBW,iBAC5B,KAAKX,EAAuBY,UAC5B,KAAKZ,EAAuBK,mBAC1B,OAAO,IAAeO,UACxB,KAAKZ,EAAuBa,oBAC5B,KAAKb,EAAuBc,gBAC1B,OAAO,IAAeL,OACxB,KAAKT,EAAuBe,2BAC5B,KAAKf,EAAuBgB,sBAC5B,KAAKhB,EAAuBiB,sBAC5B,KAAKjB,EAAuBkB,mBAC1B,OAAO,IAAeC,QACxB,KAAKnB,EAAuBoB,qBAC1B,OAAO,IAAeC,QACxB,QACE,OAAOnmB,EAGb,OAAOA,GAKIomB,EAA0BpB,IACrC,MAAMhlB,EAAS+kB,EAAkBC,GACjC,IAAKhlB,EAAQ,MAAO,IACpB,OAAQA,GACN,KAAK,IAAe0lB,UAClB,OAAO,IAAQplB,EAAE,8BACnB,KAAK,IAAeilB,OAClB,OAAO,IAAQjlB,EAAE,2BACnB,KAAK,IAAeglB,UAClB,OAAO,IAAQhlB,EAAE,8BACnB,KAAK,IAAe2lB,QAClB,OAAO,IAAQ3lB,EAAE,4BACnB,KAAK,IAAeklB,QAClB,OAAO,IAAQllB,EAAE,4BACnB,KAAK,IAAe6lB,QAClB,OAAO,IAAQ7lB,EAAE,4BACnB,KAAK,IAAe+kB,WAClB,OAAO,IAAQ/kB,EAAE,+BACnB,QACE,OAAON,IAIAqmB,EAAyBC,GAC/BA,EAASC,WACPxB,EAAkBuB,EAASC,YADF,IAAeC,MAIpCC,EAA8BH,GACpCA,EAASC,WACPH,EAAuBE,EAASC,YADP,IAIrBG,EAAiC1B,GAC7BoB,EAAuBpB,IACrB,IAEN2B,EAA4B3B,GACxBD,EAAkBC,IAChB,IAAewB,MAGrBI,EAAuB,CAACC,EAASP,K,MAC5C,IAAKO,IAAYA,EAAQC,WAAaD,EAAQC,SAASta,OACrD,OAAO,EAET,MAAMxM,EAASqmB,EAAsBC,GACrC,OAAuB,QAAhB,EAAAO,EAAQC,gBAAQ,eAAE/a,SAAS/L,MAAY,IAAW6mB,EAAQlZ,IAAK3N,IAG3D+mB,EAA0B,CAACC,EAAQV,K,MAC9C,IAAKU,IAAWA,EAAOF,WAAaE,EAAOF,SAASta,OAClD,OAAO,EAGT,MAAMxM,EAAS2mB,EAAyBL,GACxC,OAAsB,QAAf,EAAAU,EAAOF,gBAAQ,eAAE/a,SAAS/L,MAAY,IAAWgnB,EAAOrZ,IAAK3N,IAezDinB,EAAwBC,GACpBnC,EAAkBmC,IAChB,IAAeV,MAGrBW,EAA6BD,GACzBd,EAAuBc,IACrB,K,kCCpJnB,IAAYE,EAAZ,2CAAYA,GACV,YACA,sBAFF,CAAYA,MAAY,M,kCCDxB,8kBASA,MAAMC,EAAgB,oEAChBC,EAAY,SAGLC,EAAc,8JAgBdC,EAA8B,WAAaC,MAAM,CAC5DnpB,KAAM,WAEHopB,QArBoB,kCAuBnB,yHAEDlT,SAAS,cAGDmT,EAAkC,WAAaF,MAAM,CAChElQ,YAAa,WACbjZ,KAAM,WAEHspB,IAAI,GAAI,wCACRC,KAAK,cAAe,CACnBC,GAAI,IACJplB,KAAM,WAAa8R,SAAS,gBAIrBuT,EAA8BznB,GACzC,WAAamnB,MAAM,CACjBrnB,SAAU,WAEP4nB,UAAWC,GAAQ,IAAQA,QAAM5qB,EAAY4qB,GAC7CtD,KAAK,YAAUrkB,EAAE,6CACjB4nB,IAAI,EAAG5nB,EAAE,4DACTsnB,IACCO,OAAOC,iBACP9nB,EAAE,0EAA2E,CAC3E+nB,eAAgBF,OAAOC,oBAG1BzD,KAAK,CACJrmB,KAAM,UACNqmB,KAAO1R,QAAoB5V,IAAV4V,EACjB/T,QAASoB,EAAE,8CAINgoB,EAA4B,WAEtCC,MAAM,CAAC,IAAU1S,UAAW,IAAUC,WAAY,IAAUC,iBAC5DvB,WAEUgU,EAA8BloB,GACzC,WAAaunB,KAAK,YAAa,CAC7BC,GAAI,IAAU/R,eACdrT,KAAM,WAAa+kB,MAAM,CACvBgB,QAAS,SAAW,CAClBC,QAAS,WAENV,UAAWC,GAAQ,IAAQA,QAAM5qB,EAAY4qB,GAC7CtD,KAAK,YAAUrkB,EAAE,6CACjB4nB,IAAI,EAAG5nB,EAAE,4DACTsnB,IACCO,OAAOC,iBACP9nB,EAAE,0EAA2E,CAC3E+nB,eAAgBF,OAAOC,oBAG7BO,QAAS,WAENX,UAAWC,GAAQ,IAAQA,QAAM5qB,EAAY4qB,GAC7CtD,KAAK,YAAUrkB,EAAE,6CACjB4nB,IAAI,EAAG5nB,EAAE,4DACTsnB,IACCO,OAAOC,iBACP9nB,EAAE,0EAA2E,CAC3E+nB,eAAgBF,OAAOC,oBAG1BzD,KAAK,CACJ,KAAKiE,GACH,MAAM,QAAEF,GAAYvY,KAAK0Y,OACzB,OAAOD,GAAQA,GAASF,GAE1BxpB,QAASoB,EAAE,oEAEfwoB,kBAAmB,WAEhBd,UAAWC,GAAQ,IAAQA,QAAM5qB,EAAY4qB,GAC7CtD,KAAK,YAAUrkB,EAAE,uDACjB4nB,IAAI,EAAG5nB,EAAE,sEACTsnB,IACCO,OAAOC,iBACP9nB,EAAE,oFAAqF,CACrF+nB,eAAgBF,OAAOC,oBAG7BW,iBAAkB,WAEff,UAAWC,GAAQ,IAAQA,QAAM5qB,EAAY4qB,GAC7CtD,KAAK,YAAUrkB,EAAE,sDACjB4nB,IAAI,EAAG5nB,EAAE,qEACTsnB,IACCO,OAAOC,iBACP9nB,EAAE,mFAAoF,CACpF+nB,eAAgBF,OAAOC,oBAG7BY,uBAAwB,WAErBhB,UAAWC,GAAQ,IAAQA,QAAM5qB,EAAY4qB,GAC7CC,IAAI,EAAG5nB,EAAE,kEACTsnB,IAAI,IAAKtnB,EAAE,kEACd2oB,UAAW,WAAaxB,MAAM,CAC5ByB,gBAAiB,WAEdlB,UAAWC,GAAQ,IAAQA,QAAM5qB,EAAY4qB,GAC7CtD,KAAK,CACJ,KAAKuE,GACH,GAAIA,EAAiB,CACnB,MAAM,oBAAEC,GAAwBhZ,KAAK0Y,OAC/B5V,EAjIH,EAACA,EAAemW,KACnC,OAAQA,GACN,IAAK,IACH,OAAe,GAARnW,EAET,IAAK,IACH,OAAe,KAARA,EAET,QACE,OAAOA,IAwHmBoW,CAAaH,EAAiBC,GAC5C,OAAOlW,GAAS,GAAKA,GAAS,KAEhC,OAAO,GAET/T,QAASoB,EAAE,gEAInBgpB,cAAe,UAAYC,GACzB,WAEGvB,UAAU,KACVN,QAAQL,EAAe,CACtBnoB,QAASoB,EACP,4IAEFkpB,oBAAoB,IAErB7E,KACC,2BACArkB,EAAE,oFACF,SAAUmpB,GACR,OAAOA,EAAWC,MAAM,KAAKld,QAAU,UAOxCmd,EAAyBrpB,GACpC,WAAamnB,MAAM,CACjBmC,OAAQ,YACRla,IAAK,WAAamY,KAAK,SAAU,CAC/BC,IAAI,EACJplB,KAAM,SAAW,CACfmnB,YAAa,WAAarV,SAASlU,EAAE,qDAGzCwpB,SAAU,WAEPpC,QAAQL,EAAe,CACtBnoB,QAASoB,EACP,yIAEFkpB,oBAAoB,IAErB5B,IAAI,IAAKtnB,EAAE,qDACdzB,KAAM,WAAa6oB,QAAQJ,EAAW,CACpCpoB,QAASoB,EAAE,sCACXkpB,oBAAoB,IAEtBO,kBAAmB,WAEhBC,UAAU1pB,EAAE,wCACZ2pB,QAAQ3pB,EAAE,wCACV4nB,IAAI,EAAG5nB,EAAE,iDACTsnB,IAAI,MAAOtnB,EAAE,mDAGP4pB,EAA0B5pB,GACrC,WAAamnB,MAAM,CACjB0C,IAAK,WAAa1C,MAAM,CACtB2C,QAAS,WAENpC,UAAWoC,GAAa,IAAQA,QAAW/sB,EAAY+sB,GACvDlC,IAAI,EAAG5nB,EAAE,2DACTqkB,KAAK,CACJ,KAAKyF,GACH,MAAM,YAAEC,EAAW,MAAEzB,EAAK,UAAE0B,GAAcna,KAAK0Y,OAC/C,YAAcxrB,IAAVurB,GAEA,aAAmB,GAAGwB,IAAUC,MAChC,aAAmB,GAAGzB,IAAQ0B,MAKpCprB,QAASoB,EAAE,iEAEf+pB,YAAa,SAAW/pB,EAAE,iDAAiDiqB,SAC3ED,UAAW,SAAWhqB,EAAE,iDAAiDiqB,SACzE3B,MAAO,WAEJZ,UAAWY,GAAW,IAAQA,QAASvrB,EAAYurB,GACnDV,IAAI,EAAG5nB,EAAE,yDACTqkB,KAAK,CACJ,KAAKiE,GACH,MAAM,QAAEwB,EAAO,YAAEC,EAAW,UAAEC,GAAcna,KAAK0Y,OACjD,YAAcxrB,IAAVurB,GAEA,aAAmB,GAAGA,IAAQ0B,MAC9B,aAAmB,GAAGF,IAAUC,MAKtCnrB,QAASoB,EAAE,sEAGjBkqB,OAAQ,WAAa/C,MAAM,CACzB2C,QAAS,WAENpC,UAAWoC,GAAa,IAAQA,QAAW/sB,EAAY+sB,GACvDlC,IAAI,EAAG5nB,EAAE,2DACTqkB,KAAK,CACJ,KAAKyF,GACH,MAAM,YAAEC,EAAW,MAAEzB,EAAK,UAAE0B,GAAcna,KAAK0Y,OAC/C,YAAcxrB,IAAVurB,GAEA,aAAmB,GAAGwB,IAAUC,MAChC,aAAmB,GAAGzB,IAAQ0B,MAKpCprB,QAASoB,EAAE,oEAEf+pB,YAAa,SAAW/pB,EAAE,sCAC1BsoB,MAAO,WAEJZ,UAAWY,GAAW,IAAQA,QAASvrB,EAAYurB,GACnDV,IAAI,EAAG5nB,EAAE,yDACTqkB,KAAK,CACJ,KAAKiE,GACH,MAAM,QAAEwB,EAAO,YAAEC,EAAW,UAAEC,GAAcna,KAAK0Y,OACjD,YAAcxrB,IAAVurB,GAEA,aAAmB,GAAGwB,IAAUC,MAChC,aAAmB,GAAGzB,IAAQ0B,MAKpCprB,QAASoB,EAAE,uEAEfgqB,UAAW,SAAWhqB,EAAE,0CAIjBmqB,EAAyBnqB,GACpC,WAAaunB,KAAK,QAAS,CACzBC,GAAK4C,GAA6B,WAAnBA,EAAM3pB,SACrB2B,KAAM,WAAa+kB,MAAM,CACvBX,SAAU,WAAatS,SAASlU,EAAE,wBAClCqqB,IAAK,WAAanW,SAASlU,EAAE,4BAItBsqB,EAAuBtqB,GAClC,WAAamnB,MAAM,CACjB5J,IAAK,WAEF+J,IAAI,IAAMtnB,EAAE,qEACZonB,QAAQH,EAAajnB,EAAE,gCACvBkU,SAASlU,EAAE,wBACdR,KAAM,WAAa+nB,KAAK,cAAe,CACrCC,IAAI,EACJplB,KAAM,WAEH8R,SAASlU,EAAE,6EAEhBuqB,YAAa,cAGJC,EAA0BxqB,GACrC,WAAaunB,KAAK,QAAS,CACzBC,GAAK4C,GAA6B,WAAnBA,EAAM3pB,SACrB2B,KAAM,WAAa+kB,MAAM,CACvBsD,cAAe,WAEZpG,KAAK,YAAUrkB,EAAE,oDACpB6d,eAAgB,WAAa3J,SAASlU,EAAE,4BAIjC0qB,EAA2B1qB,GACtC,WAAaunB,KAAK,QAAS,CACzBC,GAAK4C,GAA6B,YAAnBA,EAAM3pB,SACrB2B,KAAM,WAAa+kB,MAAM,CACvBvJ,YAAa,WAAa1J,SAASlU,EAAE,wBACrC2qB,eAAgB,WAEb/C,IAAI,EAAG5nB,EAAE,wBACTkU,SAASlU,EAAE,wBACd4qB,gBAAiB,YAAc3C,MAAM,EAAC,IACtC4C,0BAA2B,WAAa3W,SAASlU,EAAE,4BAI5C8qB,EAAwB,WAAa3D,MAAM,CACtD1mB,SAAU,aAMCsqB,EAAuB/qB,GAClC,WAAamnB,MAAM,CACjBnpB,KAAM,WAAakW,SAASlU,EAAE,wBAC9BgO,MAAO,WAAakG,SAASlU,EAAE,wBAC/BqqB,IAAK,WACL3qB,OAAQ,WAAawU,SAASlU,EAAE,0BAGvBgrB,EAA6C,WAEvDzD,KAAK,CAAC,UAAW,eAAgB,QAAS,CACzCC,GAAI,CAACyD,EAAmBC,EAAaC,KAClCF,GAAqBC,IAAgB,IAAarV,YACnDsV,IAAiB,IAAaC,IAChChpB,KAAM,WAAa+kB,MAAM,CACvBkE,iBAAkB,WAAanX,gB,kCCrWrC,srBAGA,MAAMoX,EAAQ,wBAAiB3Y,MAElB4Y,EAAyB,CACpCxsB,SAAU,aACVhB,WAAY,KACZwC,MAAO,WAEP5C,SAAU,4BAEV6tB,eAAgB,6BAChBxsB,OAAQ,YACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,WACNkI,GAAI,WACJgmB,YAAa,YACbC,KAAK,EACLN,SAGWO,EAAgC,CAC3C9sB,SAAU,aACVhB,WAAY,UACZwC,MAAO,WAEP5C,SAAU,4BAEV6tB,eAAgB,6BAChBxsB,OAAQ,YACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,WACNkI,GAAI,WACJgmB,YAAa,YACbC,KAAK,EACLN,SAGWQ,EAA4B,CACvC/sB,SAAU,aACVhB,WAAY,KACZwC,MAAO,cAEP5C,SAAU,+BAEV6tB,eAAgB,gCAChBxsB,OAAQ,eACRysB,KAAM,MACNC,YAAY,EACZjuB,KAAM,cACNkI,GAAI,cACJgmB,YAAa,eACbC,KAAK,EACLN,SAGWS,EAAmC,CAC9ChtB,SAAU,aACVhB,WAAY,UACZwC,MAAO,cAEP5C,SAAU,+BAEV6tB,eAAgB,gCAChBxsB,OAAQ,eACRysB,KAAM,MACNC,YAAY,EACZjuB,KAAM,cACNkI,GAAI,cACJgmB,YAAa,eACbC,KAAK,EACLN,SAGWU,EAAqB,CAChCjtB,SAAU,aACVhB,WAAY,KACZwC,MAAO,OAEP5C,SAAU,wBAEV6tB,eAAgB,yBAChBxsB,OAAQ,QACRysB,KAAM,IACNC,YAAY,EACZjuB,KAAM,OACNkI,GAAI,OACJgmB,YAAa,QACbC,KAAK,EACLN,SAGWW,EAA4B,CACvCltB,SAAU,aACVhB,WAAY,UACZwC,MAAO,OAEP5C,SAAU,wBAEV6tB,eAAgB,yBAChBxsB,OAAQ,QACRysB,KAAM,IACNC,YAAY,EACZjuB,KAAM,OACNkI,GAAI,OACJgmB,YAAa,QACbC,KAAK,EACLN,SAGWY,EAAwB,CACnCntB,SAAU,aACVhB,WAAY,KACZwC,MAAO,UAEP5C,SAAU,2BAEV6tB,eAAgB,4BAChBxsB,OAAQ,WACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,UACNkI,GAAI,UACJgmB,YAAa,WACbC,KAAK,EACLN,SAGWa,EAA+B,CAC1CptB,SAAU,aACVhB,WAAY,UACZwC,MAAO,UAEP5C,SAAU,2BAEV6tB,eAAgB,4BAChBxsB,OAAQ,WACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,UACNkI,GAAI,UACJgmB,YAAa,WACbC,KAAK,EACLN,SAGWc,EAAiC,CAC5CrtB,SAAU,aACVhB,WAAY,UACZwC,MAAO,YAEP5C,SAAU,6BAEV6tB,eAAgB,8BAChBxsB,OAAQ,aACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,YACNkI,GAAI,YACJgmB,YAAa,aACbC,KAAK,EACLN,SAGWe,EAAiC,CAC5CttB,SAAU,aACVhB,WAAY,WACZwC,MAAO,mBAEP5C,SAAU,oCAEV6tB,eAAgB,qCAChBxsB,OAAQ,oBACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,mBACNkI,GAAI,mBACJgmB,YAAa,oBACbC,KAAK,EACLN,SAGWgB,EAA4B,CACvCvtB,SAAU,aACVhB,WAAY,UACZwC,MAAO,cAEP5C,SAAU,+BAEV6tB,eAAgB,gCAChBxsB,OAAQ,eACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,cACNkI,GAAI,cACJgmB,YAAa,eACbC,KAAK,EACLN,SAGWiB,EAA0B,CACrCxtB,SAAU,aACVhB,WAAY,WACZwC,MAAO,YAEP5C,SAAU,6BAEV6tB,eAAgB,8BAChBxsB,OAAQ,aACRysB,KAAM,IACNC,YAAY,EACZjuB,KAAM,YACNkI,GAAI,YACJgmB,YAAa,aACbC,KAAK,EACLN,SAGWkB,EAA+B,CAC1CztB,SAAU,sBACVhB,WAAY,UACZwC,MAAO,iBAEP5C,SAAU,kCAEV6tB,eAAgB,mCAChBxsB,OAAQ,kBACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,iBACNkI,GAAI,iBACJgmB,YAAa,kBACbC,KAAK,EACLN,SAGWmB,EAAsC,CACjD1tB,SAAU,sBACVhB,WAAY,UACZwC,MAAO,wBAEP5C,SAAU,yCAEV6tB,eAAgB,0CAChBxsB,OAAQ,yBACRysB,KAAM,MACNC,YAAY,EACZjuB,KAAM,wBACNkI,GAAI,wBACJgmB,YAAa,yBACbC,KAAK,EACLN,SAGWoB,EAAgC,CAC3C3tB,SAAU,sBACVhB,WAAY,UACZwC,MAAO,kBAEP5C,SAAU,mCAEV6tB,eAAgB,oCAChBxsB,OAAQ,mBACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,kBACNkI,GAAI,kBACJgmB,YAAa,mBACbC,KAAK,EACLN,SAGWqB,EAA8B,CACzC5tB,SAAU,sBACVhB,WAAY,UACZwC,MAAO,gBAEP5C,SAAU,iCAEV6tB,eAAgB,kCAChBxsB,OAAQ,iBACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,gBACNkI,GAAI,gBACJgmB,YAAa,iBACbC,KAAK,EACLN,SAGWsB,EAA2B,CACtC7tB,SAAU,6BACVhB,WAAY,WACZwC,MAAO,aAEP5C,SAAU,8BAEV6tB,eAAgB,gCAChBxsB,OAAQ,eACRysB,KAAM,IACNC,YAAY,EACZjuB,KAAM,aACNkI,GAAI,aACJgmB,YAAa,eACbC,KAAK,EACLN,SAGWuB,EAA6B,CACxC9tB,SAAU,sBACVhB,WAAY,WACZwC,MAAO,eAEP5C,SAAU,gCAEV6tB,eAAgB,iCAChBxsB,OAAQ,gBACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,eACNkI,GAAI,eACJgmB,YAAa,gBACbC,KAAK,GAGMkB,EAA0B,CACrC/tB,SAAU,sBACVhB,WAAY,WACZwC,MAAO,YAEP5C,SAAU,6BAEV6tB,eAAgB,8BAChBxsB,OAAQ,aACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,YACNkI,GAAI,YACJgmB,YAAa,aACbC,KAAK,GAGMmB,EAA6B,CACxChuB,SAAU,sBACVhB,WAAY,WACZwC,MAAO,eAEP5C,SAAU,gCAEV6tB,eAAgB,iCAChBxsB,OAAQ,gBACRysB,KAAM,KACNC,YAAY,EACZjuB,KAAM,eACNkI,GAAI,eACJgmB,YAAa,gBACbC,KAAK,I,kCCvWP,slCA6EO,MAOMtsB,EACS0tB,GAClBA,EAAK3gB,WACL2gB,EAAK3gB,UAAU4gB,QACfD,EAAK3gB,UAAU4gB,OAAO/gB,OAAS,KAC7B8gB,EAAK3gB,UAAU4gB,OAAO,GAAG9M,KALlB7gB,EAMa0tB,GAAgCA,EAAKE,UAAYF,EAAKE,SAAShhB,OAAS,EAGlG,IAAYihB,GAAZ,SAAYA,GACV,oBACA,kBACA,wBACA,wBACA,YALF,CAAYA,MAAY,KAQjB,MAAMC,EAAmB,CAC9B,CAACD,EAAajI,SAAU,IAAQllB,EAAE,4BAClC,CAACmtB,EAAalI,QAAS,IAAQjlB,EAAE,2BACjC,CAACmtB,EAAanI,WAAY,IAAQhlB,EAAE,8BACpC,CAACmtB,EAAa/H,WAAY,IAAQplB,EAAE,8BACpC,CAACmtB,EAAajH,OAAQ,IAAQlmB,EAAE,2BAGlC,IAAYqtB,GAAZ,SAAYA,GACV,YACA,4BACA,gBACA,oBACA,oBACA,0BANF,CAAYA,MAA4B,KAUrCA,EAA6BrkB,IAC7BqkB,EAA6BC,YAC7BD,EAA6BpkB,MAC7BokB,EAA6BE,QAC7BF,EAA6BG,QAC7BH,EAA6BI,WANzB,MAeMC,EAA0B,CACrC1H,EACAtB,EACAiJ,EACAC,GAAiB,MAEFA,EAAiB5H,EAAS7mB,KAAK0uB,QAAU7H,EAAS7mB,KAAK2uB,QAAU,IAEnEnP,IAAKqO,I,MAChB,IAAKtI,EAAYhlB,OACf,OAAOstB,EAET,IAAKW,GAAgC,IAApBA,EAASzhB,OACxB,OAAIwY,EAAYvlB,KAAKO,SAAW,IAAuBolB,qBAC9C,IAAQkI,EAAM,CAAEttB,OAAQ,CAAED,OAAQ,IAAe2lB,aAEtDV,EAAYvlB,KAAKO,SAAW,IAAuBgmB,mBAC9C,IAAQsH,EAAM,CAAEttB,OAAQ,CAAED,OAAQ,IAAesuB,QAEnD,IAAQf,EAAM,CAAEttB,OAAQ,CAAED,OAAQ,IAAewlB,UAG1D,MAAM2B,EAAU,IACd+G,EACCK,GAAOA,EAAG/vB,SAASoI,OAAO,IAAoB4nB,gBAAkBjB,EAAKhvB,MAElEkwB,EAA4BtH,aAAO,EAAPA,EAASlnB,OAErCyuB,EAAQ,IAAQnB,EAAM,CAC1BttB,QAA2B,QAAnB,EAAAglB,aAAW,EAAXA,EAAahlB,cAAM,eAAEiuB,UACzB,IAAM,IAAOjJ,EAAYhlB,OAAOiuB,SAAU,CAAES,iBAAkBpB,EAAKhvB,OAAS,UAC5EkwB,IAGN,GAAIC,EAAMzuB,QAAUyuB,EAAMzuB,OAAO2uB,gBAAkBF,EAAMzuB,OAAO4uB,UAAW,CACzE,MAAMC,EACJ,IAAIC,KAAKL,EAAMzuB,OAAO2uB,gBAAgBI,UACtC,IAAID,KAAKL,EAAMzuB,OAAO4uB,WAAWG,UACnCN,EAAMzuB,OAAOgvB,SAAW,YAAyBH,GAUnD,OAPKJ,EAAMzuB,OAEAyuB,EAAMzuB,QAAUyuB,EAAMzuB,OAAOJ,WACtC6uB,EAAMzuB,OAAOD,OAAS,YAAkB0uB,IAAU,IAAexI,QACxDwI,EAAMzuB,SAAWyuB,EAAMzuB,OAAOD,SACvC0uB,EAAMzuB,OAAOD,OAAS,IAAekmB,SAJrCwI,EAAMzuB,OAAS,CAAED,OAAQ,IAAekmB,SAMnCwI,IAIEQ,EAAmB,CAC9B3I,EACAtB,EAA+B,CAC7B3mB,WAAY,GACZE,SAAU,GACVR,KAAM,cACN0B,KAAM,IAERwuB,K,MAGA,MAAMiB,EAAM,GACZ,KAAkB,QAAb,EAAA5I,EAAS7mB,YAAI,eAAE2uB,QAAS,IAAU9H,EAAS7mB,KAAK2uB,OACnD,OAAOc,EAET,MAAMC,EAAWnB,EAAwB1H,EAAUtB,EAAaiJ,GAoEhE,OAjEAkB,EAASC,QAAS9B,IACX1tB,EAA6B0tB,IAAU1tB,EAAiC0tB,KACxD,IAAf4B,EAAI1iB,QACN0iB,EAAI5hB,KAAK,IAEX4hB,EAAI,GAAG5hB,KAAKggB,MAKhB6B,EAASC,QAAS9B,I,MAChB,IAAK1tB,EAAiC0tB,IAAS1tB,EAA6B0tB,GAAO,CACjF,IAAI+B,EAAOH,EAAI1iB,OAAS,EACxB,IAAK,IAAI8iB,EAAI,EAAGA,EAAIJ,EAAI1iB,OAAQ8iB,IAC9B,IAAK,MAAMhvB,KAAK4uB,EAAII,IAEP,QAAT,EAAAhvB,EAAEivB,eAAO,eAAEjxB,QAASgvB,EAAK3gB,UAAU4gB,OAAO,GAAG9M,KAAK,IAClDngB,EAAEhC,OAASgvB,EAAK3gB,UAAU4gB,OAAO,GAAG9M,KAAK,KAEzC4O,EAAOC,GAIb,MAAME,EAAaN,EAAIG,EAAO,GAAKH,EAAIG,EAAO,GAAK,KAEjDG,GACAA,EAAW,IACXA,EAAW,GAAG7iB,WACd6iB,EAAW,GAAG7iB,UAAU4gB,QACxBiC,EAAW,GAAG7iB,UAAU4gB,OAAO,IAC/BiC,EAAW,GAAG7iB,UAAU4gB,OAAO,GAAG9M,MAClC+O,EAAW,GAAG7iB,UAAU4gB,OAAO,GAAG9M,KAAK,IACvC+O,EAAW,GAAG7iB,UAAU4gB,OAAO,GAAG9M,KAAK,KAAO6M,EAAK3gB,UAAU4gB,OAAO,GAAG9M,KAAK,GAE5E+O,EAAWliB,KAAKggB,GAEhB4B,EAAI5U,OAAO+U,EAAO,EAAG,EAAG,CAAC/B,OAM/B6B,EAASC,QAAS9B,I,MAChB,GAAI1tB,EAAiC0tB,GAAO,CAC1C,IAAI+B,EAAOH,EAAI1iB,OAAS,EACxB,IAAK,IAAI8iB,EAAI,EAAGA,EAAIJ,EAAI1iB,OAAQ8iB,IAC9B,IAAK,MAAMhvB,KAAK4uB,EAAII,IACL,QAAT,EAAAhvB,EAAEivB,eAAO,eAAEjxB,QAASgvB,EAAKE,SAAS,IAAMltB,EAAEhC,OAASgvB,EAAKE,SAAS,KACnE6B,EAAOC,GAIb,MAAME,EAAaN,EAAIG,EAAO,GAAKH,EAAIG,EAAO,GAAK,KAEjDG,GACAA,EAAW,GAAGhC,UACdgC,EAAW,GAAGhC,SAAS,IACvBgC,EAAW,GAAGhC,SAAS,KAAOF,EAAKE,SAAS,GAE5CgC,EAAWliB,KAAKggB,GAEhB4B,EAAI5U,OAAO+U,EAAO,EAAG,EAAG,CAAC/B,OAIxB4B,GAGIO,EAA4B,CACvCnJ,EACAtB,EACAiJ,IACGD,EAAwB1H,EAAUtB,EAAaiJ,GAAU,GAEjDyB,EAA8BC,IACzC,IAAKA,EACH,OAAO,IAET,MAAM,MAAE5Y,EAAK,UAAE6Y,GAAcD,EAC7B,OAAI5Y,EAAM8Y,UAAY,IAAUD,GACvB,IAEL7Y,EAAM8Y,QACD,IAEL9Y,EAAM+Y,WACD,IAEF,KAWIC,EACXC,IAEA,IAAKA,GAAwC,IAAxBA,EAAaxjB,OAEhC,MAAO,CAAEyjB,kBAAmB,KAAMjwB,OAAQ,IAAekwB,oBAG3D,MAAMD,EAAoB,YAAaD,EAAc,qBAErD,IAAKC,EAEH,MAAO,CAAEA,kBAAmB,KAAMjwB,OAAQ,IAAekwB,oBAG3D,IAAIlwB,EAAiB,YAAyBiwB,GAK9C,MAJe,MAAXjwB,IACFA,EAAS,IAAeimB,SAGnB,CACLgK,oBACAjwB,WAISmwB,EAAwBC,GAEjCA,GACAA,EAAenR,IAAKoR,IAAU,CAC5B/xB,KAAM+xB,EAAM/xB,KACZ2U,MAAOod,EAAMC,WAKNC,EACXC,GAGEA,GACAA,EAAmBvR,IAAKwR,GAAe,OAAD,QACpCnyB,KAAMmyB,EAAUnyB,MACbmyB,EAAUtkB,OAKNukB,EAAoB,CAAC9B,EAAmB+B,EAAkBC,KACrE,MAAMC,EAAQ,IAAI/B,KAAKF,GAAWG,UAE5B+B,IADMH,EAAU,IAAI7B,KAAK6B,GAAS5B,WAAY,IAAID,MAAOC,WAC9B8B,GAAS,IAC1C,OAAO,YAAYC,EAAmBF,IAG3BG,EAAuBC,I,YAClC,MAAMpC,EAAkC,QAAtB,EAAW,QAAX,EAAAoC,aAAG,EAAHA,EAAKhxB,cAAM,eAAE4uB,iBAAS,QAAI,KACtCD,EAA4C,QAA3B,EAAW,QAAX,EAAAqC,aAAG,EAAHA,EAAKhxB,cAAM,eAAE2uB,sBAAc,QAAI,KAGtD,OAAKC,IAAeD,GAA6C,YAA3B,YAAkBqC,GAC/C,IAEFN,EAAkB9B,EAAWD,GAAgB,IAGzCsC,EAAuB,CAClCC,EACAC,EACAC,KAEA,MAAMC,EAAwB,IAAYF,GAQ1C,OAPAE,EAAsBC,QAAU,IAAID,EAAsBC,QAAS,CAAEhzB,KAAM4yB,IACvEE,IACFC,EAAsBE,iBAAmB,IACpCF,EAAsBE,iBACzB,CAAEjzB,KAAM4yB,KAGL,aAAU,sBAAqBG,IAG3BG,EAAkC,CAC7C9iB,EACA9P,EACA6yB,KAEA,aAAO,sBAAqB,IAA0B7yB,GACnD8D,KAAMgvB,SAC0Er0B,IAA3E,IAAOq0B,EAAeJ,QAAUpd,GAAMA,EAAE5V,OAASoQ,EAAOnQ,SAASD,OACnE2yB,EAAqBviB,EAAOnQ,SAASD,KAAMozB,EAAgBD,KAG9D1yB,MAAOC,IACN,qBAAW,CAAEC,MAAOD,EAAIE,aASxByyB,EAAmB,CAAC9hB,EAAoB+hB,IAExC/hB,IAAe,IAAmBvG,IAC7B,cAAuB,IAAmBA,OAAOsoB,IAEtD/hB,IAAe,IAAmBtG,MAC7B,cAAuB,IAAmBA,SAASqoB,IAErD,KAGIC,EAAuB,CAClCC,EACAC,EAAiD,MAEjD,IAAI/wB,EAAQ,EACRgxB,EAAgBL,EAAiBG,aAAU,EAAVA,EAAY/vB,IAAKf,GACtD,IAAKgxB,EACH,OAAOD,EAET,KACEA,EAAoBC,IACpBD,EAAoBC,MAAmBF,aAAU,EAAVA,EAAY7e,QAEnD+e,EAAgBL,EAAiBG,aAAU,EAAVA,EAAY/vB,MAAOf,GAGtD,OAAO,OAAP,wBAAY+wB,GAAmB,CAAE,CAACC,GAAgBF,aAAU,EAAVA,EAAY7e,SAGnDgf,EAAgBz0B,IAC3B,OAAQA,EAAQO,MACd,KAAK,gBAAcA,KACnB,KAAK,YAAUA,KACf,KAAK,qBAAmBA,KACtB,MAAO,GACT,KAAK,mBAAiBA,KACpB,MAAO,gBACT,KAAK,wBAAsBA,KACzB,MAAO,qBACT,KAAK,iBAAeA,KAClB,MAAO,aACT,KAAK,eAAaA,KAChB,MAAO,YACT,KAAK,mBAAiBA,KACpB,MAAO,gBACT,KAAK,uBAAqBA,KACxB,MAAO,oBACT,KAAK,sBAAoBA,KACvB,MAAO,mBACT,KAAK,6BAA2BA,KAC9B,MAAO,2BACT,KAAK,kBAAgBA,KACnB,MAAO,eACT,QACE,OAAO,OAIAm0B,EAAiB,CAC5BC,EACAC,EACAC,IAEOF,EAAa9lB,OAAQimB,IAC1B,MAAM,gBAAEC,EAAkB,IAAOD,EAAI/zB,SAErC,OAAOg0B,EAAgBC,KACpBC,GAAcA,EAAUn0B,OAAS8zB,GAAqBK,EAAU10B,OAASs0B,KAKnEK,EAAc,CAACz1B,EAA2B01B,IACpCA,EAAUnP,KAAMoP,GAAoBA,EAAEr0B,SAASD,OAASrB,EAASsB,SAASD,MAIhFu0B,EAAsB,CACjCvM,EACAwM,IAEwBA,EAAiBzmB,OACtC0mB,KACGA,EAAGtzB,KAAKuzB,kBAAkBxP,KACzByP,IAAM,MAAC,OAAmB,QAAnB,EAAAA,EAAGxzB,KAAKyzB,mBAAW,eAAE50B,QAASgoB,EAAS/nB,SAASD,QAMnD60B,EAAoB,CAC/BL,EACAM,IAE+BA,EAAehiB,OAAO,CAACqL,EAAK4W,KACxCA,EAAG5zB,KAAKiB,SAAS2L,OAAQ/L,GACxCwyB,EAAiBtP,KAAMuP,IAAM,MAAC,OAAAA,aAAE,EAAFA,EAAIx0B,SAASD,SAAoB,QAAX,EAAAgC,aAAC,EAADA,EAAG+B,gBAAQ,eAAE4b,QAEtDzR,OAAS,GACpBiQ,EAAInP,KAAK+lB,GAEJ5W,GACN,IAIQ6W,EAA4BhN,GACX,uBAAxBA,EAASjoB,WACJ,uBAEF,gBAGIk1B,EAA+BvO,GACX,uBAA3BA,EAAY3mB,WACP,0BAEF,mBAGIm1B,EAAwBlG,GACX,uBAApBA,EAAKjvB,WACA,mBAEF,YAGT,IAAYo1B,EAKAC,EAIAC,GATZ,SAAYF,GACV,yBACA,2BAFF,CAAYA,MAAyB,KAKrC,SAAYC,GACV,gCADF,CAAYA,MAA6B,KAIzC,SAAYC,GACV,+BACA,sBACA,4BACA,4BAJF,CAAYA,MAAc,KAOnB,MAAMC,EAAkBC,GAC7BA,aAAQ,EAARA,EAAUrQ,KACP8K,IAAM,QAAC,OAAyB,QAAzB,EAAY,QAAZ,EAAAA,aAAE,EAAFA,EAAI/vB,gBAAQ,eAAE2G,mBAAW,eAAGuuB,EAA0BK,QAASH,EAAeI,OAG7EC,EAAmBC,I,QAC9B,OAAkC,QAAlC,EAAqB,QAArB,EAAAA,aAAW,EAAXA,EAAa11B,gBAAQ,eAAE2G,mBAAW,eAAGuuB,EAA0BS,SAC/DR,EAA8BS,eAEnBC,EAAeH,I,YAC1B,OAEC,QAFD,EAAkE,QAAlE,GAAoB,QAAnB,EAAAA,aAAW,EAAXA,EAAaj0B,cAAM,eAAEq0B,WAA8B,QAAnB,EAAAJ,aAAW,EAAXA,EAAaj0B,cAAM,eAAEs0B,oBAAY,eAAE9Q,KACjEtE,GAAMA,EAAE5gB,OAASq1B,EAAeI,aAClC,eAAE9gB,OAEQshB,EAAeC,I,YAC1B,OAEC,QAFD,EAAsE,QAAtE,GAAoB,QAAnB,EAAAA,aAAW,EAAXA,EAAax0B,cAAM,eAAEq0B,WAA8B,QAAnB,EAAAG,aAAW,EAAXA,EAAax0B,cAAM,eAAEy0B,wBAAgB,eAAEjR,KACrEtE,GAAMA,EAAE5gB,OAASq1B,EAAee,yBAClC,eAAEzhB,OAEQ0hB,EAAiBzN,I,QAC5B,KAAgC,QAA3B,EAAe,QAAf,EAAAA,aAAO,EAAPA,EAASlnB,cAAM,eAAEJ,kBAAU,eAAE4M,QAChC,OAAO,IAAeyZ,QAGxB,OAD+B,YAAkBiB,IAItC0N,GAAwB5P,I,UACnC,MAAM6P,EAEL,QAFyB,EAA+B,QAA/B,EAAmB,QAAnB,EAAA7P,aAAW,EAAXA,EAAahlB,cAAM,eAAEJ,kBAAU,eAAE4jB,KACxDsR,GAAkC,eAApBA,aAAS,EAATA,EAAWh1B,cAC3B,eAAEZ,QAGGwoB,EAAUmN,aAAiB,EAAjBA,EAAmBE,MAAM,2BAEnCC,EAAgC,GACtCtN,WAAS0H,QAAS2F,IAChB,MAAOhzB,EAAKkR,GAAS8hB,EAAMrL,MAAM,gBACjCsL,EAAOjzB,EAAIiZ,QAAUmN,OAAOlV,EAAM+H,UAGpC,MAAMia,IACHD,aAAM,EAANA,EAAQE,YAAa,KAAMF,aAAM,EAANA,EAAQzP,SAAU,KAAMyP,aAAM,EAANA,EAAQtP,YAAa,GAc3E,MAZqC,CACnCF,SAASwP,aAAM,EAANA,EAAQG,aAAc,EAC/B7P,UAAW2P,GAAkB,EAC7BvP,WAAWsP,aAAM,EAANA,EAAQtP,YAAa,EAChCH,QAAQyP,aAAM,EAANA,EAAQzP,SAAU,EAC1BY,SAAS6O,aAAM,EAANA,EAAQ7O,UAAW,EAC5B+O,WAAWF,aAAM,EAANA,EAAQE,YAAa,EAChC7P,YAAY2P,aAAM,EAANA,EAAQtP,YAAa,EACjCwK,mBAAoB,EACpBjK,QAAS,K,kCC1lBb,oEAAO,MAAMmP,EAAal2B,IAAY,CACpCylB,KAAK1R,GACa,MAATA,GAAiBkV,OAAOiN,UAAUniB,GAE3C/T,YAGWm2B,EAAyB,iC,4jBCgD/B,MAAMC,EAA2B,CACtClpB,EACAmpB,EAA0BnpB,KAE1B,OAAQmpB,GACN,KAAK,IACL,KAAK,IACH,MAAO,GACT,QACE,OAAOnpB,IAKPopB,EAAqB,CACzBpuB,EACA6F,EACAb,KAEA,MAAMzF,EAAS,OAAH,wBAAQsG,EAAK1O,SAASoI,QAAM,CAAE,4BAA6ByF,QAAe/O,IAEtF,IAAK+J,EACH,OAAO+F,QAAQC,SAGjB,MAAMqoB,EAAQ,CACZ,CACEC,GAAI,IAAU/uB,GAAU,MAAQ,UAChC9H,KAAM,mBACNoU,MAAOtM,IAIX,OAAO,aAASS,EAAc6F,EAAMwoB,IAIzBE,EAA4B,CACvCvuB,EACAnK,EACAmP,KAEA,IAAKnP,EACH,OAAOkQ,QAAQC,OACb,IAAIM,MAAM,IAAQpN,EAAE,qEAGxB,IAAK8G,EACH,OAAO+F,QAAQC,OACb,IAAIM,MACF,IAAQpN,EAAE,8EAKhB,MAAMs1B,EAAe,IAAM34B,EAAU,CAAC,WAAY,SAAU,+BACtD44B,EAAkB,IAAM54B,EAAU,CAAC,WAAY,SAAU,8BAEzD64B,EAA0B,CAACN,EAAmBpuB,EAAcnK,EAAUmP,IAG5E,IAAKwpB,EACH,OAAOzoB,QAAQQ,IAAImoB,GAYrB,OALID,IAHkB,CACpB,6BAA8BD,GAGhB,6BAA+BC,GAIxC,YAAsB54B,EAASsB,SAASK,UAAWg3B,EAAc,CACtE,4BAA6BC,IAC5BnzB,KAAMqzB,IACP,IAAUA,EAAaC,IACrB,IAAUA,EAAO/oB,KAEX4oB,GAAoB,IAAM5oB,EAAM,CAAC,WAAY,SAAU,+BACzD6oB,EAAQxoB,KAAKkoB,EAAmB,aAASvoB,EAAKlP,MAAOkP,EAAMb,QAK1De,QAAQQ,IAAImoB,MAIjBG,EAAe,CACnBn0B,EACAo0B,EAAsC,GACtCC,IACG,OAAD,6B,QACF,IACE,GAAIA,EAAqB,CACvB,MAAMC,QAAwB,aAAY,CACxCh3B,MAAO0C,EAAMzC,SACbpC,SAAU6E,EAAMxC,OAChBE,KAAM,OACNZ,UAAWs3B,aAAW,EAAXA,EAAav3B,KAE1B,KAA4B,QAAvB,EAAAy3B,aAAe,EAAfA,EAAiBp2B,cAAM,eAAEq2B,SAC5B,MAAO,GAGX,aAAa,aAAQv0B,EAAOo0B,GAC5B,MAAOj3B,GAEP,GAAgC,OAAb,QAAf,EAAAA,aAAK,EAALA,EAAO2S,gBAAQ,eAAE5R,QAGnB,OADAgkB,QAAQC,KAAK,qBAAqBniB,EAAMxC,wBAAyBL,GAC1D,GAIT,MADA+kB,QAAQC,KAAK,6BAA6BniB,EAAMxC,UAAWL,GACrDA,MAIJq3B,EAAW,CAAOx0B,EAAiB9D,IAAyB,OAAD,6B,MAQ/D,WAPmB,aAAY,CAC7BoB,MAAO0C,EAAMzC,SACbpC,SAAU6E,EAAMxC,OAChBE,KAAM,SACNlB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,aAEhBoB,OAAOq2B,QAGf,OADArS,QAAQC,KAAK,0CAA0CniB,EAAMxC,UAAUtB,EAAIO,SAASD,SAC7E,KAET,IACE,aAAa,aAAQwD,EAAO9D,GAC5B,MAAOiB,GAEP,GAAgC,OAAb,QAAf,EAAAA,aAAK,EAALA,EAAO2S,gBAAQ,eAAE5R,QAMnB,OAJAgkB,QAAQC,KACN,YAAYniB,EAAMxC,UAAUtB,EAAIO,SAASD,yCACzCW,GAEK,KAIT,MADA+kB,QAAQC,KAAK,iCAAiCniB,EAAMxC,UAAUtB,EAAIO,SAASD,QAASW,GAC9EA,MAIJs3B,EAAiB,CAAOt5B,EAA2Bu5B,IAAqC,OAAD,6B,QAC3F,MAAMC,EAAuD,QAA9B,EAAiB,QAAjB,EAAAx5B,EAASsB,gBAAQ,eAAE2G,mBAAW,QAAI,GAC3DwxB,EAAU,YAAcD,EAAuB,6BAC/CE,QAAmB,aAAQ,cAAa,CAC5Ch4B,GAAI1B,EAASsB,SAASK,YAExB,IAAIg4B,EACJ,IAAIJ,aAAY,EAAZA,EAAchqB,QAAS,EACzBoqB,EAAWJ,aAAY,EAAZA,EAAcplB,OAAO,CAACylB,EAAUC,K,QAgBzC,MAAO,IAAID,MAfuB,QAAjB,EAAO,QAAP,EAAAC,EAAGr3B,YAAI,eAAEiB,gBAAQ,QAAI,IAChB0Q,OAAO,CAACV,EAAGpQ,K,QAC/B,IAAIy2B,EACJ,MAAMC,EAAc12B,EAAEwO,QAAU,UAAY4nB,EACtCO,EAAiB32B,EAAEwO,SAAWxO,EAAEo2B,GACtC,GAAIO,EAAgB,CAClB,MAAM/F,EACgC,QAApC,EAA8B,QAA9B,EAAA+F,EAAeC,uBAAe,eAAE54B,YAAI,QACpC,GAAGrB,EAASsB,SAASD,QAAQ04B,mBAC/BD,EAAiBJ,EAAWnT,KACzB9U,GAA4BA,EAAOnQ,SAASD,OAAS4yB,GAG1D,OAAO6F,EAAiB,IAAIrmB,EAAG4lB,EAAS,cAAaS,IAAmBrmB,GACvE,MAEF,QACE,CACL,MAAMymB,EAAwBR,EAAWnT,KACtC9U,GACCA,EAAOnQ,SAASD,OAAYrB,EAASsB,SAASD,KAArB,2BAEvB84B,EAAwBT,EAAWnT,KACtC9U,GACCA,EAAOnQ,SAASD,OAAS,GAAGrB,EAASsB,SAASD,QAAQo4B,oBAE1DE,EAAW,CACTN,EAAS,cAAaa,GACtBb,EAAS,cAAac,IAG1B,OAAOR,KAGIS,EAAyBp6B,GAA0D,OAAD,6BAC7F,MAAMq6B,EAAO,GAEPd,QAAqBP,EAAa,mBAAkB,CAAEt3B,GAAI1B,EAASsB,SAASK,YAC5E24B,QAAetB,EAAa,aAAY,CAAEt3B,GAAI1B,EAASsB,SAASK,YAChE+zB,QAAkBsD,EAAa,gBAAe,CAAEt3B,GAAI1B,EAASsB,SAASK,YAAa,GACnFk0B,QAAyBmD,EAC7B,uBACA,CACEt3B,GAAI1B,EAASsB,SAASK,YAExB,GAEIw0B,QAAuB6C,EAC3B,qBACA,CACEt3B,GAAI1B,EAASsB,SAASK,YAExB,GAEI44B,QAAsB,6BAEtBC,EAAgB,aAAS,aAAax6B,IACtC0P,EAAY,CAChB6pB,aAAc,CACZrqB,KAAMqqB,EACN3yB,QAAQ,EACR6zB,UAAW,MAEbH,OAAQ,CACNprB,KAAMorB,EACN1zB,QAAQ,EACR6zB,UAAW,OAGTC,EAAuB,aAA2B16B,EAAU0P,GAC5DirB,GAAwB,IAAUD,GAClCrR,EAAW,YAAYrpB,EAAU01B,GACvC,IAAIkF,EAAkD,GAClDC,EAA8C,GAElD,MAAMC,EAAe,CAAC,eAAc,aAAY,oBAC1CC,EAAsB,CAAC,IAAqB,oBAE7C,IAAU1R,KACbyR,EAAazqB,KAAK,iBAClB0qB,EAAoB1qB,KAAK,iBACzBuqB,EAA2B,YAAoBvR,EAAUwM,GACzDgF,EAAyB,YAAkBD,EAA0BzE,IAEvE,MAAM6E,EAAe,IAAYh7B,GAC3Bi7B,EAAgB,CAACp2B,EAAiBq2B,KACtC,MAAM/5B,EAAMk4B,EAASx0B,EAAOq2B,GAC5B/5B,GAAOk5B,EAAKhqB,KAAKlP,IAEfw5B,GACFD,EAAqBvI,QAAS0H,IAC5BoB,EAAc,mBAAkBpB,KAGpC,MAAMsB,EAAsB,CAACC,EAAoBF,KAC/CE,EAAOjJ,QAASttB,GAAUo2B,EAAcp2B,EAAOq2B,KAejD,OAbI,qCAA2B,aAAal7B,KAC1Ci7B,EAAc,aAAS,aAAaj7B,IAAYA,GAC9Cu6B,EAAchU,KAAM8U,GAAYA,EAAQv6B,OAASd,EAASc,OAC5Dm6B,EAAcT,EAAex6B,GAE3B46B,EAAyBrrB,OAAS,GACpCqrB,EAAyBzI,QAAS2D,GAAOmF,EAAc,uBAAsBnF,IAG3E+E,EAAuBtrB,OAAS,GAClCsrB,EAAuB1I,QAASiE,GAAO6E,EAAc,qBAAoB7E,IAGnEp2B,EAASc,MACf,KAAK,iBAAeA,KACpB,KAAK,mBAAiBA,KACtB,KAAK,WAASA,KACd,KAAK,eAAaA,KAClB,KAAK,IAAoBA,KACvBm6B,EAAcT,EAAex6B,GAC7B,MACF,KAAK,kBAAgBc,KACrB,KAAK,wBAAsBA,KACzBm6B,EAAcT,EAAex6B,GAC7Bm7B,EAAoBL,EAAc96B,GAClC,MACF,KAAK,IAAoBc,KACvBq6B,EAAoBJ,EAAqBC,GACzC,MACF,KAAK,IAAyBl6B,KAC9B,KAAK,IAAeA,KAClBm6B,EAAcT,EAAex6B,GAajC,OAPI26B,GACFN,EAAKhqB,cAAeipB,EAAet5B,EAAU06B,IAE3CrR,GACFgR,EAAKhqB,cAAeipB,EAAet5B,IAG9BkQ,QAAQQ,IAAI2pB,O,kCCzRrB,IAAYiB,EAOAC,EAOAC,EAdZ,+GAAYF,GACV,wEACA,wDACA,gEACA,gDAJF,CAAYA,MAAY,KAOxB,SAAYC,GACV,sBACA,4BACA,cACA,oBAJF,CAAYA,MAAU,KAOtB,SAAYC,GACV,wBACA,wBACA,wBAHF,CAAYA,MAAa,M,yDCyFzB,kCAAO,MAAMC,EAAmD,CAC9Dt5B,MAAO,aACPu5B,QAAS,KACT56B,KAAM,gB,gFCtIR,kCAAO,MAAM66B,EAA+C,CAC1Dx5B,MAAO,aACPu5B,QAAS,KACT56B,KAAM,Y,kCCnDR,IAAY86B,EAgBAC,EAhBZ,2CAAYD,GACV,0BACA,wBACA,kBACA,oBAEA,+BACA,gCACA,0CACA,oBACA,wBACA,oBACA,cACA,YAbF,CAAYA,MAAc,KAgB1B,SAAYC,GACV,8BADF,CAAYA,MAAe,M,sZCF3B,MAAMC,EAA2C,CAC/C,CACEz6B,KAAM,UACNwB,KAAM,IAAek5B,QACrB7U,eAAgB,qBAChBC,SAAU,GAEZ,CACE9lB,KAAM,aACNwB,KAAM,IAAem5B,WACrB9U,eAAgB,gCAChBC,SAAU,GAEZ,CACE9lB,KAAM,sBACNwB,KAAM,IAAeo5B,oBACrB/U,eAAgB,qBAChBC,SAAU,GAEZ,CACE9lB,KAAM,gBACNwB,KAAM,IAAeq5B,IACrBhV,eAAgB,IAChBC,SAAU,EACVE,gBAAiB,MAmBR8U,EAAyB,CACpCC,EACA9U,EACA+U,GAA+B,IACE,OAAD,6BAChC,IACIC,EADAC,EAAyC,GAEzC31B,GAAkB,EAClB6zB,EAAY,KAEhB,MAAM+B,EAAmBlV,QACfA,EAAWnG,kBACjB,IAAWsb,mBACf,IACIC,EADAjV,EAA0B,GAG9B,GAAI+U,IAAqB,IAAWjb,UAClC,IACE,MAAM,MAAEjO,SAAgBgU,EAAWlU,gBAAgB,CAAE4S,eAAe,IACpEsW,QAAgC,YAAyBD,EAAqB/U,GAE9EiV,QAA2BrsB,QAAQQ,IACjCorB,EAAmB9Z,IAAsCle,GAAa,OAAD,6BAKnE,OAJA2jB,EAAgBnU,EAAMlE,OAAQ2V,GAAMjhB,EAASojB,eAAeQ,KAAK3C,IAC7D0C,EAAclY,OAAS,GAAKzL,EAASujB,kBACvCqV,QAA2B54B,EAASujB,gBAAgBC,IAE/C,CACLjmB,KAAMyC,EAASzC,KACfwB,KAAMiB,EAASjB,KACfskB,SAAUrjB,EAASqjB,SACnBM,gBACAiV,2BAIN91B,GAAS,EACT,MAAO7E,GACP6E,GAAS,EACT6zB,EAAY14B,EAAIE,aAGlB2E,GAAS,EAaX,OAVK01B,IACHC,EAAqBA,EAAmBntB,OACrCtL,GAAaA,EAASjB,OAAS,IAAeo5B,sBAInDM,EAAqBA,EAClBntB,OAAQtL,IAAY,MAAC,QAAEA,EAAS2jB,cAAclY,WAAuC,QAA3B,EAAAzL,EAAS44B,0BAAkB,eAAEntB,UACvFiD,KAAK,CAACmV,EAAIC,IAAOA,EAAGT,SAAWQ,EAAGR,UAE9B,CACLvgB,SACA6zB,YACA+B,mBACAG,WAAYJ,O,kCCpHhB,knBAEO,MAAMK,EAAoB,eACpBC,EAAkB,aAClBC,EAAkB,aAClBC,EAA0B,qBAC1BC,EAAyB,oBACzBC,EAAuB,kBACvBC,EAA6B,0BAC7BC,EAAqB,eACrBC,EAA0B,oBAC1BC,EAAuB,kBACvBC,EAAwB,mBACxBC,EAAwB,mBACxBC,EAAgB,WAEhBC,EAA2B,IAC3BC,EAA4B,IAC5BC,EAA6B,CACxC,IACA,IACA,IAAoB,GACpB,KAGWC,EAAsB,EAGtBC,EAAW,O,kCC5BxB,ijBAmDO,MAAMC,EAAe,CAACC,EAAyBC,KACpD,KAAKD,GAAUA,EAAKxuB,OAAS,GAAOyuB,GAClC,OAAO,KAET,IAAI1U,EAAYyU,EAAK,GACrB,GAAc,sBAAVC,EACF,IAAK,IAAI3L,EAAI,EAAGA,EAAI0L,EAAKxuB,OAAQ8iB,IAC/B/I,EACEyU,EAAK1L,IACL0L,EAAK1L,GAAG/wB,UACRy8B,EAAK1L,GAAG/wB,SAAS08B,IACjB,IAAInM,KAAKkM,EAAK1L,GAAG/wB,SAAS08B,IAAU,IAAInM,KAAKvI,EAAUhoB,SAAS08B,IAC5DD,EAAK1L,GACL/I,OAEH,GAAc,cAAV0U,GAAmC,mBAAVA,EAClC,IAAK,IAAI3L,EAAI,EAAGA,EAAI0L,EAAKxuB,OAAQ8iB,IAC/B/I,EACEyU,EAAK1L,IACL0L,EAAK1L,GAAGtvB,QACRg7B,EAAK1L,GAAGtvB,OAAOi7B,IACf,IAAInM,KAAKkM,EAAK1L,GAAGtvB,OAAOi7B,IAAU,IAAInM,KAAKvI,EAAUvmB,OAAOi7B,IACxDD,EAAK1L,GACL/I,OAGRA,EAAYyU,EAAKA,EAAKxuB,OAAS,GASjC,OAPK+Z,EAAUvmB,SACbumB,EAAY,OAAH,wBAAQA,GAAS,CAAEvmB,OAAQ,CAAEk7B,aAAc,CAAE9M,MAAO,QAE1D7H,EAAUvmB,OAAOm7B,qBACpB5U,EAAUvmB,OAAS,OAAH,wBAAQumB,EAAUvmB,QAAM,CAAEm7B,mBAAoB,MAEhE5U,EAAUvmB,OAAOm7B,mBAAqB,YAAyB5U,GACxDA,GAGI6U,EAAoB,CAC/BzI,EACA0I,IAEO1I,EAAU1T,IAAKqH,IACpB,MAAMgV,EAAiBD,EAAahvB,OACjCkvB,IAAM,MAAC,OAAkB,QAAlB,EAAAA,EAAGh9B,SAASoI,cAAM,eAAG,0BAA2B2f,EAAS/nB,SAASD,OAG5E,OADAgoB,EAASC,UAAYwU,EAAaO,EAAgB,qBAC3ChV,IAIEkV,EAAqBx7B,IAChC,OAAQA,GACN,KAAK,IAAeslB,UAClB,MAAO,CAAEpmB,QAAS,IAAQoB,EAAE,8BAA+Bm7B,QAAS,yBACtE,KAAK,IAAelW,OAClB,MAAO,CAAErmB,QAAS,IAAQoB,EAAE,2BAA4Bm7B,QAAS,2BACnE,KAAK,IAAeC,cAClB,MAAO,CACLx8B,QAAS,IAAQoB,EAAE,gDACnBm7B,QAAS,2BAEb,KAAK,IAAejW,QAEpB,KAAK,IAAe,eAClB,MAAO,CAAEtmB,QAAS,IAAQoB,EAAE,4BAA6Bm7B,QAAS,wBAEpE,KAAK,IAAetV,QAClB,MAAO,CAAEjnB,QAAS,IAAQoB,EAAE,4BAA6Bm7B,QAAS,yBACpE,KAAK,IAAe/V,UAClB,MAAO,CAAExmB,QAAS,IAAQoB,EAAE,8BAA+Bm7B,QAAS,yBACtE,KAAK,IAAepW,WAClB,MAAO,CAAEnmB,QAAS,IAAQoB,EAAE,+BAAgCm7B,QAAS,yBACvE,KAAK,IAAepN,KACpB,KAAK,IAAepI,QAClB,MAAO,CAAE/mB,QAAS,IAAQoB,EAAE,4BAA6Bm7B,QAAS,wBACpE,QACE,MAAO,CACLv8B,QAAS,IAAQoB,EAAE,gDACnBm7B,QAAS,0BAQJE,EAA8B3W,I,cACzC,MAAM4W,GACyB,QAA7B,EAAqB,QAArB,EAAA5W,aAAW,EAAXA,EAAazmB,gBAAQ,eAAEoI,cAAM,eAAG,IAAoB2f,aAAkC,QAArB,EAAAtB,aAAW,EAAXA,EAAazmB,gBAAQ,eAAED,MACpF48B,GAAkC,QAAnB,EAAAlW,aAAW,EAAXA,EAAahlB,cAAM,eAAEk7B,gBAAiC,QAAjB,EAAAlW,aAAW,EAAXA,EAAavlB,YAAI,eAAEy7B,cAC7E,OAAKU,GAAiBV,EAGf,CACL78B,WAAY,YAAmB,iBAC/BN,KAAM,gBAAcA,KACpBQ,SAAU,CACRD,KAAMs9B,EACNh9B,UAAWomB,EAAYzmB,SAASK,WAElCa,KAAMy7B,GATC,MAqCEW,EAAgB,CAC3BC,EACAxV,EACA2H,K,cAEA,MAAM8N,EA7B6B,CAACC,I,YACpC,IAAKA,EACH,OAAO,EAIT,OAF8D,QAA1C,IAAqB,QAArB,EAAAA,EAAiBv8B,YAAI,eAAE2uB,QAAS,IAAI5hB,cAAM,QAAI,IACA,QAA5C,IAAqB,QAArB,EAAAwvB,EAAiBv8B,YAAI,eAAE0uB,UAAW,IAAI3hB,cAAM,QAAI,IAwBnDyvB,CAAsB3V,GApBA,CAAC0V,I,YAC1C,IAAKA,EACH,OAAO,EAUT,OALU,QAFP,IAAqB,QAArB,EAAAA,EAAiBv8B,YAAI,eAAE2uB,QAAS,IAAI/hB,OAClCihB,IAAQ,QAAC,MAAuB,UAAX,QAAZ,EAAAA,EAAKiC,eAAO,eAAExxB,OAA0C,iBAAX,QAAZ,EAAAuvB,EAAKiC,eAAO,eAAExxB,QACzDyO,cAAM,QAAI,IAIJ,QAFP,IAAqB,QAArB,EAAAwvB,EAAiBv8B,YAAI,eAAE0uB,UAAW,IAAI9hB,OACpCihB,IAAQ,QAAC,MAAuB,UAAX,QAAZ,EAAAA,EAAKiC,eAAO,eAAExxB,OAA0C,iBAAX,QAAZ,EAAAuvB,EAAKiC,eAAO,eAAExxB,QACzDyO,cAAM,QAAI,IASuC0vB,CAA4B5V,GAC3E6V,EAAW,K,MACf,OAAuB,QAAnB,EAAAL,aAAW,EAAXA,EAAa97B,cAAM,eAAEiuB,UAChB/c,OAAOC,KAAK2qB,EAAY97B,OAAOiuB,UAEpCA,EACKA,aAAQ,EAARA,EAAUhP,IAAKmd,GAASA,EAAK79B,SAASD,MAExC,IAEH+9B,EAAgBF,IAAW3vB,OAC3B8vB,IAAwC,QAAnB,EAAAR,aAAW,EAAXA,EAAa97B,cAAM,eAAEu8B,eAAgB,IAAI/vB,OAC9DgiB,EAAyB,CAC7B0B,mBAAoB,EACpBjK,QAAS,EACTT,QAAS,EACTF,UAAW,EACXC,OAAQ,EACRG,UAAW,EACXS,QAASmW,GAGX,IAAuB,QAAnB,EAAAR,aAAW,EAAXA,EAAa97B,cAAM,eAAEiuB,WAAYA,EAAU,CAC7CkO,IAAW/M,QAASlI,IAClB,MAAMlnB,EAAS,aACbiuB,aAAQ,EAARA,EAAUzK,KAAM4Y,GAASA,EAAK79B,SAASD,OAAS4oB,KAC9C4U,EAAY97B,OAAOiuB,SAAS/G,IAEjB,cAAXlnB,EACFwuB,EAAW,IAAelJ,aACN,YAAXtlB,EACTwuB,EAAW,IAAehJ,WACN,WAAXxlB,EACTwuB,EAAW,IAAejJ,UACN,cAAXvlB,EACTwuB,EAAW,IAAe9I,aAE1B8I,EAAW,IAAevI,aAI9B,MAAMuW,EAAwBhO,EAAW,IAAejJ,QAAU,EAC5DkX,EACJ,YAAyBX,KAAiB,IAAepW,UACrDgX,EACJX,GAAcM,EAAgBN,EAAaM,EAAgBC,EAAoBP,EAE7ES,GAAyBC,EAC3BjO,EAAW,IAAe9I,YAAcgX,EAExClO,EAAW,IAAevI,UAAYyW,MAGS,WAAb,QAApC,EAA+B,QAA/B,EAAmB,QAAnB,EAAAZ,aAAW,EAAXA,EAAa97B,cAAM,eAAEJ,kBAAU,eAAG,UAAE,eAAEI,UACtC87B,aAAW,EAAXA,EAAar8B,KAAKO,UAAW,IAAuBolB,qBAEpDoJ,EAAW,IAAe9I,WAAaqW,GAC9BD,aAAW,EAAXA,EAAar8B,KAAKO,UAAW,IAAuBgmB,mBAC7DwI,EAAW,IAAevI,UAAY8V,EAEtCvN,EAAW,IAAe0B,sBAE5B,OAAO1B,GAGImO,EAAgC5+B,GACvCA,IAAS,mBAAiBA,KACrB,mBAELA,IAAS,YAAUA,WAAiBV,IAATU,EACtB,YAEF,KAGI6+B,EAA2B7+B,IACrC4+B,EAA6B5+B,IAAS,aAAWA,KAEvC8+B,EAAmC9+B,GAC1CA,IAAS,6BAA2BA,KAC/B,6BAELA,IAAS,sBAAoBA,WAAiBV,IAATU,EAChC,sBAEF,KAGI++B,EAA8B/+B,IACxC8+B,EAAgC9+B,IAAS,uBAAqBA,KAapDg/B,EAAiCh/B,IAC5C,MAAM+D,EAAQ66B,EAA6B5+B,GAC3C,OAAO,aAAkB+D,IAGdk7B,EAAoB,CAC/BhY,EACAiJ,KAEA,MAAMgP,EAAehP,GAAY4N,EAAc7W,OAAa3nB,EAAW4wB,GACvE,OAAOgP,aAAY,EAAZA,EAAczX,SAGV0X,EAA4B,CACvClY,EACAiJ,MAGEjJ,IACCgY,EAAkBhY,EAAaiJ,GAAY,GAC1C,YAAyBjJ,KAAiB,IAAeQ,UAGlD2X,EAA4C,CACvDnY,EACAoY,MAGEpY,KACCoY,aAAgB,EAAhBA,EAAkB5X,SAAU,GAC3B,YAAyBR,KAAiB,IAAeQ,UAGlD6X,EAA8B,CACzCrY,EACAiJ,MAGEjJ,GACAgY,EAAkBhY,EAAaiJ,GAAY,GAC3C,YAAyBjJ,KAAiB,IAAeU,WAGhD4X,EAA8C,CACzDtY,EACAoY,MAGEpY,IACAoY,aAAgB,EAAhBA,EAAkB5X,SAAU,GAC5B,YAAyBR,KAAiB,IAAeU,Y,kCCjV7D,0IAWO,MAAM6X,EAAuB,4BAClC,cAAmC,YAAnC,c,oBAIW,KAAAxmB,MAAmC,CAC1CtE,sBAAuB,IAAsB3D,SAE/C,qBACE,IAAK,IAAUqB,KAAK3N,MAAMxE,IAAImO,MAAO,CACnC,MAAMsG,EAAwB,YAAkBtC,KAAK3N,MAAMxE,IAAImO,MAC3DgE,KAAK4G,MAAMtE,wBAA0BA,GACvCtC,KAAKgH,SAAS,CACZ1E,2BAKR,SACE,MAAM,IAAEzU,EAAG,UAAEw/B,GAAcrtB,KAAK3N,OAC1B,sBAAEiQ,GAA0BtC,KAAK4G,MACvC,IAAKtE,EACH,OAAO,gBAAC,IAAU,MAEpB,MAAME,EAAQ6qB,aAAS,EAATA,EAAWpsB,OAAO,CAACqL,EAAK7C,KAAK,MAAC,sCAAM6C,GAAG,CAAE,CAAC7C,IAAY,QAAR,EAAA5b,EAAImO,YAAI,eAAGyN,KAAM,MAAO,IAEpF,OACE,gBAAC,KAAS,iBAAK5b,GACb,gBAAC,IAAiB,iBACZmS,KAAK3N,MAAK,CACdiQ,sBAAuBA,EACvBzU,IAAKA,EAAImO,KACTwG,MAAOA,SAQN8qB,EAAa,EAAG1/B,WAC3B,MAAMuU,EAAS,uBACT,EAAEhS,GAAM,2BACd,OACE,gBAAC,IAAQ,CACPqM,UAAW,CAAC,CAAE5O,OAAMO,KAAMgU,EAAOhU,KAAMM,UAAW0T,EAAO3T,GAAI++B,QAAQ,EAAOC,KAAM,SAElF,gBAACJ,EAAoB,CAACC,UAAW,CAAC,OAAQ,YAAazoB,eAAgBzU,EAAE,oB,kCC1D/E,+DAKO,MAAMs9B,EAAe,KAC1B,MAAMtrB,EAAS,sBACTG,EAAwBH,EAAOxS,KACrC,OACE,gBAAC,IAAiB,CAChB6S,MAAO,CAAEpU,SAAU,CAAEK,UAAW0T,EAAO3T,KACvC8T,sBAAuBA,EACvB1C,UAAU,M,gFCWhB,IAAY8tB,EAAZ,2CAAYA,GACV,6BACA,iCACA,6CACA,+CACA,uDACA,iCACA,2CACA,mDARF,CAAYA,MAAU,M,kCCTtB,oEAAO,MAAMC,EAAmB,CAC9Bx/B,KAAM,QACNwB,KAAM,OACNmiB,SAAU,OACV8b,gBAAiB1Z,OAAO,CAAC,WAAW1jB,KAAK,MACzCq9B,cAAe,CAAC,YAGLC,EAAoB,CAC/B3/B,KAAM,SACNwB,KAAM,OACNmiB,SAAU,OACV8b,gBAAiB1Z,OAAO,CAAC,cAAc1jB,KAAK,MAC5Cq9B,cAAe,CAAC,eAAgB,UAAW,gBAGhCE,EAAoB,CAC/B5/B,KAAM,SACNwB,KAAM,SACNmiB,SAAU,KACV8b,gBAAiB1Z,OAAO,CAAC,WAAY,aAAc,cAAc1jB,KAAK,MACtEq9B,cAAe,CAAC,UAAW,aAAc,eAG9BG,EAAkB,CAC7B7/B,KAAM,OACNwB,KAAM,OACNmiB,SAAU,OACV8b,gBAAiB1Z,OAAO,CAAC,UAAW,WAAY,aAAa1jB,KAAK,MAClEq9B,cAAe,CAAC,UAAW,WAAY,cAG5BI,EAAoB,CAC/B9/B,KAAM,SACNwB,KAAM,SACNmiB,SAAU,aACV8b,gBAAiB1Z,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgB1jB,KAAK,MACzFq9B,cAAe,CAAC,WAAY,eAAgB,cAAe,iBAGhDK,EAA0B,CACrC//B,KAAM,iBACNwB,KAAM,gBACNmiB,SAAU,aACV8b,gBAAiB1Z,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgB1jB,KAAK,MACzFq9B,cAAe,CAAC,WAAY,eAAgB,cAAe,iBAGhDM,EAAiB,CAC5BhgC,KAAM,MACNwB,KAAM,MACNmiB,SAAU,MACV8b,gBAAiB1Z,OAAO,CAAC,YAAa,iBAAiB1jB,KAAK,MAC5Dq9B,cAAe,CAAC,YAAa,kBAGlBO,EAAoB,CAC/BjgC,KAAM,SACNwB,KAAM,SACNmiB,SAAU,SACV8b,gBAAiB1Z,OAAO,CAAC,mBAAoB,YAAY1jB,KAAK,MAC9Dq9B,cAAe,CAAC,mBAAoB,aAGzBQ,EAAkB,CAC7BlgC,KAAM,OACNwB,KAAM,OACNmiB,SAAU,OACV8b,gBAAiB1Z,OAAO,CAAC,WAAY,YAAY1jB,KAAK,MACtDq9B,cAAe,CAAC,WAAY,aAWjB9Z,EAAa,CARO,CAC/B5lB,KAAM,SACNwB,KAAM,SACNmiB,SAAU,KACV8b,gBAAiB1Z,OAAO,CAAC,eAAgB,aAAa1jB,KAAK,MAC3Dq9B,cAAe,CAAC,eAAgB,eAKhCE,EACAD,EACAH,EACAM,EACAC,EACAG,EACAF,EACAC,EACAJ,GAGWM,EAAqB,CAChC,QACA,UACA,gBACA,MACA,WACA,c,kCCjHF,2F,kCCAA,kFAEO,SAASha,EAAiBlU,GAK/B,OAJmB,IAAW0O,IAAK3e,IACjC,MAAMo+B,EAAenuB,EAAMlE,OAAQ2V,GAAc1hB,EAAEy9B,gBAAgBpZ,KAAK3C,IACxE,MAAO,CAAEpR,UAAWtQ,EAAER,KAAMmiB,SAAU3hB,EAAE2hB,SAAU1R,MAAOmuB,KAGxDryB,OAAQsE,GAAiBA,EAAEJ,MAAM/D,OAAS,GAC1CiD,KAAK,CAACiB,EAAGC,IAAMA,EAAEJ,MAAM/D,OAASkE,EAAEH,MAAM/D,QAGtC,SAASmyB,EAAenuB,GAC7B,IACE,MAAMgU,EAAc1S,KAAKC,MAAMvB,GAC/B,OAAO,IAAmBgiB,KAAMoM,GAAQA,KAAOpa,EAAYqa,cAC3D,SACA,OAAO,K,kCCjBX,kGASO,SAASC,EACdzF,EACA0F,EACA9gB,EACA1S,EACAmD,EACAwP,EACAC,GAEA,IAAItO,EACA8N,EACJ,OAAQjP,aAAM,EAANA,EAAQ5O,MACd,KAAK,aAAWuO,UACdwB,EAAa,IAAc4N,WAC3BE,EAAgBjP,EAAOvC,KACvB,MACF,KAAK,aAAWwC,QACdkB,EAAa,IAAcmvB,IAC3BrhB,EAAgBjP,EAAO,kBACvB,MACF,QACEmB,EAAa,IAAcovB,QAE/B,MAAMC,EAAuB,CAC3BrhB,IAAKwb,EACLpb,MACA1S,aACAsE,aACA8N,gBACAO,cACAC,kBAGF,OAAQ4gB,GACN,KAAK,IAAY5pB,OACf,OAAO,IAAI,IAAc+pB,GAC3B,KAAK,IAAY5pB,UACf,OAAO,IAAI,IAAiB4pB,GAC9B,KAAK,IAAY9pB,OACf,OAAO,IAAI,IAAc8pB,GAC3B,KAAK,IAAY7pB,MACf,OAAO,IAAI,IAAa6pB,GAC1B,QACE,OAAO,Q,kCCpDb,mE,kCCAA,gDAEO,MAAMC,EAKX,YAAYC,GACVjvB,KAAKivB,QAAUA,EACfjvB,KAAKkvB,eAAiBlvB,KAAK4B,QAG7B,QACE,IAAIutB,EAAgC,GACpC,IACEA,EAAgB,gBAAMnvB,KAAKivB,SAC3B,UACF,OAAOE,EAGT,mBACE,MAAMC,EAAMpvB,KAAKkvB,eAAehzB,OAAQ1J,GAA+B,WAAXA,EAAErE,MAC9D,GAAIihC,EAAI/yB,OAAS,EAAG,CAClB,MAAMgzB,EAAgBD,EAAI,GAC1B,GAAKC,EAAcC,KAAKjzB,OAAoB,EAAG,OAAO2b,OAAOqX,EAAcC,KAAK,IAElF,OAAO,Q,kCCzBX,6eAwCO,MAWMC,EAAsB,CAACvzB,EAAM7N,K,oBACxC,KAAK6N,aAAI,EAAJA,EAAMorB,WAAWprB,aAAI,EAAJA,EAAMqqB,iBAAiBrqB,aAAI,EAAJA,EAAMwmB,WACjD,OAAO,KAGT,MAAMgN,EAAqB1yB,IAAQ,UAAC,OAA6B,QAA7B,EAAiB,QAAjB,EAAS,QAAT,EAAAA,EAAKxN,YAAI,eAAEoO,cAAM,eAAEtC,kBAAU,QAAI,MAC/Dq0B,EAA+B,QAAlB,EAAY,QAAZ,EAAAzzB,aAAI,EAAJA,EAAMorB,cAAM,eAAEprB,YAAI,eAAEqX,KACpCkH,GAA2BA,EAAMnsB,SAASD,OAASA,GAEtD,GAAIshC,EAAY,CAEd,OADmBD,EAAkBC,GAIvC,MAAMC,EAA0C,QAAxB,EAAkB,QAAlB,EAAA1zB,aAAI,EAAJA,EAAMqqB,oBAAY,eAAErqB,YAAI,eAAEqX,KAC/Csc,GAAiCA,EAAYvhC,SAASD,OAASA,GAElE,GAAIuhC,EAAiB,CAEnB,OADmBF,EAAkBE,GAIvC,MAAME,EAAqC,QAArB,EAAe,QAAf,EAAA5zB,aAAI,EAAJA,EAAMwmB,iBAAS,eAAExmB,YAAI,eAAEqX,KAC1C8C,GAA8BA,EAAS/nB,SAASD,OAASA,GAE5D,GAAIyhC,EAAe,CACjB,MAAMC,EAA8C,QAA3B,EAAmB,QAAnB,EAAAD,aAAa,EAAbA,EAAetgC,YAAI,eAAE6S,cAAM,eAAEkR,KACnD6M,GAAyB,iBAAfA,EAAM/xB,MAEnB,GAAI0hC,EACF,OAAOA,EAAiB1P,QAG5B,OAAO,MAMI2P,EAAyB,CACpChjC,EACAijC,EACApgC,EACAqgC,EACAC,GAAiC,EACjCzzB,KAEA,MAAM,iBAAE0zB,EAAmB,IAAOH,EAC5BI,EAAQ,IAAMrjC,EAAU,gBACxBsjC,EAAoB,IAAMtjC,EAAU,kBAAmB,IACvDw5B,EAAyB,IAAMx5B,EAAU,uBAAwB,IACjEujC,EAAkB,IAAMvjC,EAAU,gBAAiB,IACnDsO,EAAam0B,EAAoB/yB,EAAW6zB,GAC5CC,EACJ,YAAqB,QAAQF,EAAkB,8BAC/C,YAAqB,QAAQA,EAAkB,2BACjD,MAAO,CACLt6B,GAAIq6B,EACJhiC,MAAMrB,aAAQ,EAARA,EAAUsB,SAASD,OAAQiiC,EAAkB,8BACnDzgC,OACA7C,WACA0P,UAAW,OAAF,wBAAOuzB,GAAY,CAAEQ,wBAAyBN,IACvDj0B,KAAM,CACJk0B,mBACAtiC,KAAM,aAAad,GACnB0jC,QAASlK,EAAuB,6BAChCprB,OAAQorB,EAAuB,4BAC/BmK,OAAQnK,EAAuB,4BAC/BlrB,aACAs1B,aAAcJ,GAAoBN,EAClCW,qBACEhhC,GACCA,IAAS,KACRA,IAAS,KACTA,IAAS,MAEP,aAAiB7C,EAAU,sBAQ1B8jC,EAAsB,CACjC9jC,EACA6C,EACAqM,EACA60B,EACAC,EACA75B,EACAqgB,K,MAEA,MAAMzlB,EAAM/E,aAAQ,EAARA,EAAUsB,SAASyD,IACzB1D,EAAOrB,aAAQ,EAARA,EAAUsB,SAASD,KAC1BuC,EAAiC,QAAzB,EAAA5D,aAAQ,EAARA,EAAUsB,SAASoI,cAAM,eAAG,6BACpC5I,EAAOqJ,GAAgB,aAAanK,GAC1C,OAAO,OAAP,sBACEgJ,GAAIjE,EACJlC,OACAe,MAAOA,GAASvC,EAChBmpB,QACAxqB,WACAmK,aAAcrJ,EACdoO,QACI80B,GAAYA,EAASz0B,QAAU,CAAEy0B,aACjCD,GAAa,KAIRE,EAAqB,CAChCC,MAAO,IACPC,OAAQ,IACRhiC,OAAO,EACPiiC,SAAS,EACTC,MAAO,CACLC,QAAS,MAOAC,EAAuB,CAClCrjC,EACAwO,KAEA,MAAMzH,EAAc,IAAM/G,EAAI,wBACxBsjC,EAAQ,GAoCd,OAlCA,IAAU,YAAqBv8B,GAAe+I,IAE5C,MAAMyzB,EAAa,IACjB,IAAO/0B,EAAYzE,I,cACjB,IAAI5J,EACJ,GAAoB,iBAAT2P,EAIT,OAHA3P,EAC6D,QAA3D,EAA2B,QAA3B,EAAmB,QAAnB,EAAA4J,EAAW3J,gBAAQ,eAAEoI,cAAM,eAAG,qCAA6B,QACxC,QAAnB,EAAAuB,EAAW3J,gBAAQ,eAAED,KAChBA,IAAS2P,EAElB3P,EAA0B,QAAnB,EAAA4J,EAAW3J,gBAAQ,eAAED,KAC5B,MAAQD,WAAYsjC,EAAgB5jC,KAAM6jC,EAAUtjC,KAAMujC,GAAa5zB,GACjE,KAAElQ,EAAI,WAAEM,GAAe6J,EAC7B,IAAI45B,EAAaxjC,IAASujC,GAAY9jC,IAAS6jC,EAI/C,OAHIvjC,IACFyjC,EAAaA,GAAczjC,IAAesjC,GAErCG,IAET,CAAC,WAAY,QAET9/B,EAAM,IAAM7D,EAAI,CAAC,WAAY,QAC/BujC,GACFD,EAAMn0B,KAAK,CACTrH,GAAI,GAAGjE,KAAO0/B,IACd5hC,KAAM,IACNe,MAAO,IAAQP,EAAE,6BACjBuN,OAAQ7L,EACR8L,OAAQ4zB,MAKPD,GAMIM,EAAyB5jC,IACpC,MAAM6jC,EAAY,IAAM7jC,EAAI,CAAC,WAAY,SAAU,8BACnD,OAAK6jC,EAIE,CACL/7B,GAAI,SAAS+7B,EACbliC,KAAM,IACNV,OAAO,EACPyB,MAAOmhC,EACPf,SAAU,CAAC,IAAM9iC,EAAI,CAAC,WAAY,SAClCgjC,MAAO,IACPC,OAAQ,IACRj1B,KAAM,GACNk1B,SAAS,EACTY,WAAW,EACXX,MAAO,CACLC,QAAS,MAfJ,MAqCEW,EAAa,CAACC,EAAqBC,K,MAC9C,IAAKD,EACH,OAIFA,EAASlB,SAA4B,QAAjB,EAAAkB,EAASlB,gBAAQ,eAAE50B,OACpC1J,KAAOy/B,aAAc,EAAdA,EAAgB5e,KAAM6e,IAAK,MAAC,OAAU,QAAV,EAAAA,EAAEpB,gBAAQ,eAAEl1B,SAASpJ,OAI3D,MAAM2/B,EAAgBF,EAAe5e,KAAM6e,GAAMA,EAAEjjC,OAASijC,EAAEp8B,KAAOk8B,EAASl8B,IACzEq8B,EAGHH,EAASlB,SAAS7R,QAASnpB,IACpBq8B,EAAcrB,SAASl1B,SAAS9F,IACnCq8B,EAAcrB,SAAS3zB,KAAKrH,GAlCb,EAACk8B,EAAqBG,K,cACpB,QAAlB,EAAAA,EAAcn2B,YAAI,eAAEoB,kBAAgC,QAAb,EAAA40B,EAASh2B,YAAI,eAAEoB,oBAIpC,QAAlB,EAAA+0B,EAAcn2B,YAAI,eAAEoB,kBACvB+0B,EAAcn2B,KAAKoB,eAAiB,KAEpB,QAAd,EAAA40B,aAAQ,EAARA,EAAUh2B,YAAI,eAAEoB,iBAClB40B,EAASh2B,KAAKoB,eAAe6hB,QAASpxB,IAC/BskC,EAAcn2B,KAAKoB,eAAexB,SAAS/N,IAC9CskC,EAAcn2B,KAAKoB,eAAeD,KAAKtP,OAyBzCukC,CAAeJ,EAAUG,KAN3BF,EAAe90B,KAAK60B,IAWXK,EAAc,CAACC,EAAwBL,KAC7CK,GAAcA,EAAUj2B,QAG7Bi2B,EAAUrT,QAAS+S,IACjBD,EAAWC,EAAUC,MAIZM,EAAyB,CACpCC,EACAC,EACAC,EAAkD,OAE9CF,aAAQ,EAARA,EAAUlB,QACZmB,EAAWnB,MAAMn0B,QAAQq1B,EAASlB,QAEhCkB,aAAQ,EAARA,EAAUG,SACZF,EAAWE,MAAMx1B,QACZq1B,EAASG,MAAMz2B,OACf02B,IACEA,EAAE3jC,QACFwjC,EAAWE,MAAMtf,KAAMwf,IACtB,GAAID,EAAE98B,KAAO+8B,EAAS/8B,GACpB,OAAO,EAET,MAAM,SAAEhJ,GAAa8lC,EACrB,OACG9lC,KAAc4lC,EAAmBrf,KAAMyf,GAAaA,EAAShmC,EAAU2lC,QAKlFJ,EACEG,EAASG,MAAMz2B,OAAQ02B,GAAMA,EAAE3jC,OAC/BwjC,EAAWE,SAYJI,EAAuB,CAClCv2B,EACAw2B,EACAC,EAA0B,MAEnB,IACLA,EAAcnkB,IAAK7X,GACVuF,EAAUvF,GACbuF,EAAUvF,GAAc+E,KAAK8S,IAAKokB,IAChC,MAAMC,EAAUD,EAAItlC,MAAQolC,EAAS/7B,GACrC,IACI/I,EADAN,EAAOulC,EAMX,OAJIA,GAAW,aAAmBA,KAChCvlC,EAAO,aAAiBulC,GACxBjlC,EAAa,YAAuBilC,IAE/B,OAAP,QACEvlC,OACAM,cACGglC,KAGP,KAKGE,EAA2B3kC,IAC/B,CACL4kC,kBAAmB,CACjB9F,QAAQ,EACR3/B,KAAM,mBACNa,YACA6kC,UAAU,GAEZC,YAAa,CACXhG,QAAQ,EACR3/B,KAAM,aACNa,YACA6kC,UAAU,GAEZE,WAAY,CACVjG,QAAQ,EACR3/B,KAAM,YACNa,YACA6kC,UAAU,GAEZpgC,KAAM,CACJq6B,QAAQ,EACR3/B,KAAM,MACNa,YACA6kC,UAAU,GAEZG,KAAM,CACJlG,QAAQ,EACR3/B,KAAM,MACNa,YACA6kC,UAAU,GAEZI,SAAU,CACRnG,QAAQ,EACR3/B,KAAM,UACNa,YACA6kC,UAAU,GAEZK,aAAc,CACZpG,QAAQ,EACR3/B,KAAM,cACNa,YACA6kC,UAAU,GAEZM,SAAU,CACRrG,QAAQ,EACR3/B,KAAM,UACNa,YACA6kC,UAAU,GAEZO,KAAM,CACJtG,QAAQ,EACR3/B,KAAM,+BAA6BA,KACnCa,YACA6kC,UAAU,GAEZjN,aAAc,CACZkH,QAAQ,EACR3/B,KAAM,mBAAiBA,KACvBa,YACA6kC,UAAU,M,kCCpahB,wVAGYQ,EAQAC,EAOAC,EAlBZ,WAGA,SAAYF,GACV,0BACA,qBACA,oBACA,YACA,yBALF,CAAYA,MAAgB,KAQ5B,SAAYC,GACV,4BACA,oBACA,sBACA,kBAJF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,cACA,kBACA,kBACA,cAJF,CAAYA,MAAkB,KAOvB,MAAMC,EAAqD,CAChE,CAACH,EAAiBI,YAAa,wCAC/B,CAACJ,EAAiBK,UAAW,4CAC7B,CAACL,EAAiBM,SAAU,qCAC5B,CAACN,EAAiBO,KAAM,iCACxB,CAACP,EAAiBQ,YAAa,yCAGpBC,EAA8D,CACzE,CAACR,EAAqBS,aAAc,uCACpC,CAACT,EAAqBU,SAAU,qCAChC,CAACV,EAAqBW,UAAW,sCACjC,CAACX,EAAqBY,QAAS,qCAKjC,IAAYC,GAAZ,SAAYA,GACV,kBACA,oBAFF,CAAYA,MAAqB,KAK1B,MAAMC,EAAoD,CAC/Dv5B,OAAQ,GACRw5B,oBAAoB,EACpBlG,YAAa,IAAYmG,QACzB5mC,KAAM,GACN+hB,OAAQ,SACR8kB,kBAAkB,EAClBC,SAAU,GACVv2B,QAAS,CACP6Q,MAAO,GACPW,OAAQ,QACR3R,OAAQ,GACRmP,IAAK,GACLwnB,KAAM,GACNC,YAAY,IAIHC,EAAsB,CACjC,CAAC,IAAYpwB,QACX,kHACF,CAAC,IAAYC,QAAS,sEACtB,CAAC,IAAYE,WAAY,qEAGdkwB,EAAkB,CAC7B,CAAC,IAAYrwB,QACX,uFACF,CAAC,IAAYC,QACX,mGACF,CAAC,IAAYE,WAAY,uEAGdmwB,EAAwB,CAAC,aAAc,gBAAiB,e,kCC/ErE,+MAuBO,MAAMC,EAAoBplC,GAC/B,WAAamnB,MAAM,CACjBnpB,KAAM,aAAqBgC,GAC3BqlC,QAAS,IACTv5B,YAAa,IACbkC,MAAO,YAAsBhO,GAC7BslC,IAAK,YAAoBtlC,GACzBulC,OAAQ,YAAuBvlC,GAC/BwlC,QAAS,YAAwBxlC,GACjC4H,WAAY,YAA2B5H,GACvCylC,WAAY,YAA2BzlC,GACvC0lC,MAAO,YAAsB1lC,GAC7B2lC,OAAQ,YAAuB3lC,GAC/BoqB,MAAO,IACP/d,UAAW,IACXu5B,aAAc,YAAmC5lC,GACjD6lC,IAAK,YAAqC7lC,GAC1CgmB,SAAU,MAGR8f,EAAY,CAACvoB,EAAawoB,IAE5BxoB,EAAIyoB,WAAW,WAAWD,OAC1BxoB,EAAIyoB,WAAW,eAAeD,OAC9BxoB,EAAI9R,SAAS,IAAIs6B,MAIRE,EAAiB1oB,GACvB,IAAY8G,KAAK9G,GAIlBuoB,EAAUvoB,EAAK,cACV,IAAY1I,OAEjBixB,EAAUvoB,EAAK,iBACV,IAAYvI,UAEjB8wB,EAAUvoB,EAAK,cACV,IAAYzI,OAEjBgxB,EAAUvoB,EAAK,cAAgBA,EAAI9R,SAAS,SACvC,IAAYsJ,MAGd,IAAYE,OAfV,IAAY2vB,QAkBVsB,EAAuBC,IAClC,GAAI,KAAU9hB,KAAK8hB,GACjB,OAAOA,EAGT,MAAMC,EAAe,IAAYD,GACjC,OAAOA,EAAW1R,MAAM,QAAU2R,EAAa3R,MAAM,OACjD,OAAO2R,EACPA,GAGOC,EAAqB9oB,IAChC,IAAK,IAAY8G,KAAK9G,GACpB,OAEF,MAAMvf,EAAOuf,EAAI/R,QAAQ,MAAO,IAAI4d,MAAM,KAAKkd,MAC/C,OAAOJ,EAAoBloC,K,kCCzF7B,0XA4BYuoC,EAOAC,EAnCZ,iGA4BA,SAAYD,GACV,oDACA,gDACA,kEACA,kDAJF,CAAYA,MAAa,KAOzB,SAAYC,GACV,kBACA,4DAFF,CAAYA,MAAkB,KAKvB,MAAMC,EAAiB,CAC5BC,EAAiBF,EAAmBG,+BACjC,CACH,CAAC,IAAqBC,qBAAsB,CAC1C,CAACL,EAAcM,wBAAyB,IACnCH,EAAH,4FAEF,CAACH,EAAcO,yBAA0B,IACvC,OAAOJ,+FAGX,CAAC,IAAqBK,2BAA4B,CAChD,CAACR,EAAcO,yBAA0B,IACvC,+BAA+BJ,yFAEjC,CAACH,EAAcS,gCAAiC,IAC9C,OAAON,wHAET,CAACH,EAAcU,uBAAwB,IACrC,OAAOP,0GAET,CAACH,EAAcM,wBAAyB,IACtC,mBAAmBH,qGAGvB,CAAC,IAAqBQ,4BAA6B,CACjD,CAACX,EAAcO,yBAA0B,IACvC,+BAA+BJ,wGAEjC,CAACH,EAAcS,gCAAiC,IAC9C,OAAON,qIAET,CAACH,EAAcU,uBAAwB,IACrC,OAAOP,uHAET,CAACH,EAAcM,wBAAyB,IACtC,mBAAmBH,sHAOZS,EAAe9tB,IACzBA,EAAI,EAAI,IAAM,IAHW,CAACA,GACrB,IAANA,GAAYA,GAAK,MAASA,EAAI,KAAQ,aAAiBA,GAAG+tB,OAAS/tB,EAAEguB,cAAc,GAE9DC,CAAoB34B,KAAK44B,IAAIluB,IACvCmuB,EAAcjZ,GAClB,IAAoBkZ,OAAOlZ,GAEvBmZ,EAAyB,CAAChT,EAA0BiT,EAAiBC,KAChF,MAAM,OAAEC,EAAM,OAAErmB,GAAWkT,EACrBoT,EAAY,IAAMtmB,EAASnI,IAC/B,MAAM0uB,EAAIlgB,OAAOxO,EAAE,IACnB,MAAO,CACL2uB,EAAG,IAAIxZ,KAAK,IAAIA,KAAY,IAAPnV,EAAE,IAAW4uB,SAAS,EAAG,EAAG,EAAG,IACpDF,EAAGlgB,OAAOqgB,MAAMH,GAAK,KAAOA,EAC5BF,YAMEtX,EAAQ1I,OAAO,IAAMigB,EAAW,UAChCK,EAAMtgB,OAAO,IAAM,IAAOigB,GAAY,MACtCM,EAAOR,EAAOD,EAQpB,OAPA,IAAQpX,EAAO4X,EAAKC,GAAMtZ,QAAQ,CAAC9uB,EAAGgvB,KACpC,MAAMgZ,EAAI,IAAIxZ,KAAKxuB,GACf,IAAM8nC,EAAW,CAAC9Y,EAAG,MAAQgZ,GAC/BF,EAAU9tB,OAAOgV,EAAG,EAAG,CAAEgZ,IAAGD,EAAG,KAAMF,aAIlCC,GAKIO,EAAqB,CAChC/2B,EACAg3B,EACAC,K,MAEA,MAAMxU,GAAwB,QAAd,EAAAziB,aAAQ,EAARA,EAAUzF,YAAI,eAAE6oB,SAAU,GAC1C,OAAOX,aAAO,EAAPA,EAASpV,IAAKC,I,MACnB,OAAgB,QAAT,EAAAA,aAAC,EAADA,EAAG4C,cAAM,eAAE7C,IAAI,EAAEqpB,EAAGD,M,QACzB,MAAO,CACLC,EAAgB,QAAb,EAAAM,aAAQ,EAARA,EAAW1pB,UAAE,QAAI,IAAI4P,KAAS,IAAJwZ,GAC7BD,EAAgB,QAAb,EAAAQ,aAAQ,EAARA,EAAWR,UAAE,QAAIS,WAAWT,GAC/BF,OAAQjpB,aAAC,EAADA,EAAGipB,OACXY,KAAMT,QAMDU,EAAkBC,IAC7B,MAAMC,EAAU,GAChB,IAAKD,EAAU,OAAOC,EACtB,MAAMC,EAAiB,YAAwB,MACzCC,EAAUn6B,KAAKo6B,MAAMJ,EAAWE,GAChCG,EAAI,IAAIxa,KAAKA,KAAKya,OAExB,IADAD,EAAEf,SAAS,EAAG,EAAG,EAAG,GACbW,EAAQ18B,OAAS,EAAI48B,GAC1BF,EAAQ57B,KAAKg8B,EAAEva,WACfua,EAAEE,QAAQF,EAAEG,UAAY,GAE1B,OAAOP,EAAQQ,MAAM,EAAGN,IAGbO,EAAc,CAACC,EAAiBhZ,KAC3C,GAAgB,IAAZgZ,EACF,OAAO,IAAQtpC,EAAE,oCAEnB,IAAIupC,EAAM56B,KAAKo6B,MAAMO,GACjB1hB,EAAM,EACN4hB,EAAK,EACL9a,EAAW,GA2Bf,OA1BI6a,GAAO,KACT3hB,EAAMjZ,KAAKC,MAAM26B,EAAM,IACvBA,GAAO,IAEL3hB,GAAO,KACT4hB,EAAK76B,KAAKC,MAAMgZ,EAAM,IACtBA,GAAO,IAEL4hB,EAAK,IACP9a,GAAY4B,EACR,IAAQtwB,EAAE,kCAAmC,CAAEU,MAAO8oC,IACtD,IAAQxpC,EAAE,2BAA4B,CAAEwpC,OAC5C9a,GAAY,KAEV9G,EAAM,IACR8G,GAAY4B,EACR,IAAQtwB,EAAE,oCAAqC,CAAEU,MAAOknB,IACxD,IAAQ5nB,EAAE,4BAA6B,CAAE4nB,QAC7C8G,GAAY,KAEV6a,EAAM,IACR7a,GAAY4B,EACR,IAAQtwB,EAAE,oCAAqC,CAAEU,MAAO6oC,IACxD,IAAQvpC,EAAE,4BAA6B,CAAEupC,SAGxC7a,EAAShU,QAGL+uB,EAAkC,KAAM,CACnD,KAAM,IAAQzpC,EAAE,0BAChB,KAAM,IAAQA,EAAE,2BAChB,KAAM,IAAQA,EAAE,2BAChB,KAAM,IAAQA,EAAE,4BAChB,KAAM,IAAQA,EAAE,4BAChB,KAAM,IAAQA,EAAE,8BAGL0pC,EAA4B79B,IACvC,IAAI89B,EAAgB,EACpB,OAAO,IAAS99B,EAAM,KAAK8S,IAAKirB,IAC9B,MAAMC,EAAeD,EAAI7B,EAAI4B,EAE7B,OADAA,GAAiBC,EAAI7B,EACd,OAAP,wBAAY6B,GAAG,CAAE7B,EAAG8B,Q,kCCvMxB,iOAIO,MAAMC,EAAsBC,IACjC,MACOH,EAAK9gB,GAAQihB,aAAc,EAAdA,EAAgBtV,MADhB,sBAEpB,MAAO,CACL7L,gBAAiBf,OAAO+hB,IAAQ,GAChC/gB,oBAAqBC,GAAQ,IAC7BkhB,2BAA4BlhB,GAAQ,MAIlCmhB,EAAiC,iBAE1BC,EAAmCC,GAC9CA,EAAG3+B,QAAQy+B,EAAgC,IAEhCG,EAAgC,CAC3CD,EACAE,K,MAEA,KAAY,QAAP,EAAAF,EAAGhrC,YAAI,eAAEwe,KAAK,OAAO,KAC1B,MAAM,WAAE5f,EAAU,KAAEN,EAAI,KAAEO,GAASmsC,EAAGhrC,KAAKwe,IAC3C,OAAO,YAAmB,OAAkB5f,GAC1CN,IAAS,IAAaA,MACtBO,IAASqsC,EACPrsC,EACA,MAGOssC,EAAgC,CAC3CC,EACAC,IAEO,IACF,IAAIC,IACLF,aAAiB,EAAjBA,EACIx+B,OAAQo+B,MACRK,aAAuB,EAAvBA,EAAyBt+B,QAAS,KAC9Bs+B,aAAuB,EAAvBA,EAAyB/+B,SAASy+B,EAAgCC,MAGvExrB,IAAK8jB,GAAMyH,EAAgCzH,MAKvCiI,EAA8B1hB,GACzCA,EAAckJ,KAAMiY,GAAO,IAAIpmB,OAAOkmB,GAAgC5lB,KAAK8lB,IAEhEQ,EAAgC,CAC3CC,EACA/+B,EAA0B,GAC1Bg/B,IAEAD,EACG7+B,OAAQi9B,GAAM0B,EAA2B,CAAC1B,KAC1CrqB,IAAKwrB,I,QACJ,MAAMW,EAAiBj/B,aAAI,EAAJA,EAAMqX,KAC1B8lB,GAAMA,EAAE/qC,SAASD,OAASksC,EAAgCC,IAE7D,OAAOW,IAA0C,QAAxB,EAAmB,QAAnB,EAAAA,EAAe3rC,YAAI,eAAEwe,WAAG,eAAE3f,QAAS6sC,EACxDC,EACA,OAEL/+B,OAAQi9B,KAAQA,I,kCCnErB,+BAYA,MAAM+B,UAAoB,IAKxB,cACEv0B,QALK,KAAA7Z,cAAyCI,EAEzC,KAAA+J,kBAAsD/J,EAK3D,YAAe8S,KAAM,CACnBlT,SAAU,IAAWghB,IACrB7W,aAAc,MAIlB,cACE,OAAO+I,KAAKlT,SAGd,YAAYA,GACVkT,KAAKlT,SAAWA,EAGlB,kBACE,OAAOkT,KAAK/I,cAAgB,aAAa+I,KAAKlT,UAGhD,gBAAgBc,GACdoS,KAAK/I,aAAerJ,EAGtB,SAAS+D,GACPgV,MAAMw0B,SAASxpC,GAEX,aAAcA,IAChBqO,KAAKlT,SAAW6E,EAAM7E,UAEpB,iBAAkB6E,IACpBqO,KAAK/I,aAAetF,EAAMsF,eAKjB,O,ktBC7BR,MAAMmkC,EAAY,CAAEC,OAAQ,OAEtBC,EAA8BnrC,GACzC,WAAamnB,MAAM,CACjBnpB,KAAM,WAEHopB,QAAQ,KAAW,CAClBxoB,QAASoB,EACP,+IAEFkpB,oBAAoB,IAErBhV,SAASlU,EAAE,8BACdmL,OAAQ,WAELic,QAAQ,IAAapnB,EAAE,sCACvBkU,SAASlU,EAAE,8BACdorC,YAAa,WACb78B,QAAS,WAENgZ,KAAK,cAAe,CACnBC,GAAI,IAAYxS,UAChB5S,KAAM,WAAa+kB,MAAM,CACvB4d,KAAM,WAEH3d,QAAQ,IAAwB,CAC/BxoB,QAASoB,EACP,4JAEFkpB,oBAAoB,IAErBhV,SAASlU,EAAE,kCAGjBunB,KAAK,CAAC,SAAU,cAAe,UAAW,CACzCC,GAAI,CAACzH,EAAQ0e,EAAatzB,IACxBA,KAAYszB,IAAgB,IAAY5pB,QAAUkL,IAAW,IAAYlL,QAC3EzS,KAAM,WAAa+kB,MAAM,CACvB/H,MAAO,WAAaiF,KAAK,gBAAiB,YAAY,WACpD,OAAOxU,KAAK0Y,OAAOnJ,OAASvP,KAAK0Y,OAAO8iB,aAE1CA,UAAW,WAAahnB,KAAK,gBAAiB,YAAY,WACxD,OAAOxU,KAAK0Y,OAAOnJ,OAASvP,KAAK0Y,OAAO8iB,mBAMvCC,EAAwCtrC,GACnD,WAAamnB,MAAM,CACjB5Y,QAAS,WAENgZ,KAAK,cAAe,CACnBC,GAAI,IAAYxS,UAChB5S,KAAM,WAAa+kB,MAAM,CACvB4d,KAAM,WAEH3d,QAAQ,KAAW,CAClBxoB,QAASoB,EACP,+IAEFkpB,oBAAoB,IAErBhV,SAASlU,EAAE,kCAGjBunB,KAAK,CAAC,SAAU,cAAe,UAAW,CACzCC,GAAI,CAACzH,EAAQ0e,EAAatzB,IACxBA,GACAszB,KACEA,IAAgB,IAAY5pB,QAAUkL,IAAW,IAAYlL,QACjEzS,KAAM,WAAa+kB,MAAM,CACvB/H,MAAO,WAAaiF,KAAK,gBAAiB,YAAY,WACpD,OAAOxU,KAAK0Y,OAAOnJ,OAASvP,KAAK0Y,OAAO8iB,aAE1CA,UAAW,WAAahnB,KAAK,gBAAiB,YAAY,WACxD,OAAOxU,KAAK0Y,OAAOnJ,OAASvP,KAAK0Y,OAAO8iB,mBAMvCE,EAAwCvrC,GAC5C,WAAamnB,MAAM,CACxB4R,WAAY,WAAaxR,KAAK,CAAC,eAAgB,mBAAoB,CACjEC,GAAI,CAAC2D,EAAcqgB,IAAoBrgB,IAAiB,IAAaC,KAAOogB,EAC5EppC,KAAMkpC,EAAqCtrC,OAK3C8lC,EAAY,CAACvoB,EAAawoB,IAE5BxoB,EAAIyoB,WAAW,WAAWD,OAC1BxoB,EAAIyoB,WAAW,eAAeD,OAC9BxoB,EAAI9R,SAAS,IAAIs6B,MAIRE,EAAiB1oB,GACvB,IAAY8G,KAAK9G,GAIlBuoB,EAAUvoB,EAAK,cACV,IAAY1I,OAEjBixB,EAAUvoB,EAAK,iBACV,IAAYvI,UAEjB8wB,EAAUvoB,EAAK,cACV,IAAYzI,OAGd,IAAYG,OAZV,IAAY2vB,QAiDV6G,EAA4B,CACvCjqB,EACAljB,EACA+H,EAAoC,GACpC6kC,IAC6B,OAAD,6B,UAC5B,MAAM,KACJltC,EAAI,OACJmN,EACAoD,SAAS,UAAEm9B,EAAS,OAAE3rB,EAAM,MAAEX,EAAOhR,OAAQmR,EAAa,KAAEwlB,IAC1DvjB,EACEmqB,EAAgB,SAAOh4B,OAAO4L,GAC9BqsB,EAAkB3F,EAAc96B,GACtC,IAAIiD,EACAgR,GAAoB,UAAXW,EACX3R,OAjDsB,EACxBy9B,EACA9G,EACA3lB,EACA9gB,EACAstC,EACArsB,EACA2rB,IACG,OAAD,6BACF,MAAMr/B,EAAmB,CACvB9N,WAAY,cAAYA,WACxBN,KAAM,cAAYA,KAClBQ,SAAU,CACR6tC,aAAiBD,EAAH,UACdvtC,aAEFkB,KAAM,aAAW0O,OACjBe,WAAY,OAAF,sBACR,iBAAkBmQ,GACdG,GAAiB,CAAE,iBAAkBA,IACrCqsB,IAAoB,IAAY52B,WAAa,CAC/C,eAAgB,SAAOrB,OAAO,GAAGoxB,KAAQ3lB,QAK/C,OAAO,YAAkB,CACvB5d,MAAO,cACPqK,OACAxN,GAAIC,EACJs3B,YAAasV,EAASD,EAAY,QAmBnBc,CACb/tC,EACA+mC,EACA3lB,EACA9gB,EACAstC,EACArsB,EACA2rB,GAGS,WAAXnrB,GACA2rB,IACe,QAAf,EAAAA,aAAS,EAATA,EAAW7/B,YAAI,eAAG,qBAAsB8/B,UAElC,YAAiB,CACrBnqC,MAAO,cACP7E,SAAU+uC,EACV7/B,KAAM,CAAC,CAAEupB,GAAI,UAAW72B,KAAM,uBAAwBoU,MAAO,SAAOgB,OAAO4L,QAG/E,MAAMysB,EAAU,EAAY7gC,GAAQoC,OAC9B89B,EAAYj9B,GAAUs9B,EACtB7/B,EAAO,CACXpO,KAAM,kBAAgBA,KACtBM,WAAY,sCACZE,SAAU,OAAF,QACND,OACAM,aACI+H,GAAU,IAEhBlH,KAAM,OAAF,QACFoe,IAAKpS,GACDkgC,GAAyB,eAAZW,EACb,CAEEC,aAAc,OAAF,sCACL,IAAsBxgC,SAASugC,GAA8B,GAAnB,CAAEzuB,IAAKyuB,IACtC,kBAAZA,EACA,CACEjH,QAEF,IACAsG,EACA,CACEj9B,OAAQ,CACNpQ,KAAyB,QAAnB,EAAAqtC,aAAS,EAATA,EAAWptC,gBAAQ,eAAED,KAC3ByD,IAAK,kBAGPyqC,eAAgB,CACdluC,KAAyB,QAAnB,EAAAqtC,aAAS,EAATA,EAAWptC,gBAAQ,eAAED,KAC3ByD,IAAK,mBAGT,KAGR,KAWR,aAPuB,YAAkB,CACvCD,MAAO,kBACPqK,OACAxN,GAAIC,EACJs3B,YAAasV,EAASD,EAAY,QAMzBkB,EAAsB,CACjC3qB,EACAqkB,EACAtiC,IACqB,OAAD,6B,UACpB,MAAM,OACJ4H,EACAoD,SAAS,OAAEwR,EAAM,MAAEX,EAAOhR,OAAQmR,EAAehC,IAAK8B,EAAU,UAAEqsB,EAAS,KAAE3G,IAC3EvjB,EACEoqB,EAAkB3F,EAAc96B,GAChC8Y,EAAa,YAAc9Y,EAAQygC,GAEzC,IAKIQ,EALA9sB,GAAkB,EAClB/b,GAAsD,WAAnC,QAAT,EAAAsiC,aAAG,EAAHA,EAAKh6B,YAAI,eAAG,+BACxByT,GAAkB,GAKlB8sB,EADER,IAAoB,IAAY52B,UAErB,UAAX+K,EACI,SAAOpM,OAAO,GAAGoxB,KAAQ3lB,KACzB,SAAOxM,OAAsB,QAAf,EAAA84B,aAAS,EAATA,EAAW7/B,YAAI,eAAG,iBAEf,UAAXkU,EAAqBX,EAAQ,SAAOxM,OAAsB,QAAf,EAAA84B,aAAS,EAATA,EAAW7/B,YAAI,eAAG,mBAU3E,aAPoCoY,EAAW9E,kBAC7CitB,EACA/sB,EACAC,EACAC,MAaS8sB,EAA2B9uB,IACtC,IAAK,IAAY8G,KAAK9G,GACpB,OAEF,MAAMvf,EAAOuf,EAAI/R,QAAQ,MAAO,IAAI4d,MAAM,KAAKkd,MAC/C,OAZmCH,EAYPnoC,EAXxB,KAAUqmB,KAAK8hB,GACV,OAAOA,EAET,OAAO,IAAYA,GAJQ,IAACA,GAsHxBmG,EAAyB,CACpCC,EACA/uB,IACoB,OAAD,6B,MACnB,IAAIgvB,EACJ,IACE,MAAOC,SAAgC,YAAoC,CACzEjrC,MAAO,iBACPo0B,YAAa,CACXv3B,GAAI,IACJquC,cAAe,CACbC,YAAa,CACX,uCAAwC,IAAmBJ,IAAYA,OAK/EC,EAA8C,QAA5B,EAAAC,aAAsB,EAAtBA,EAAwB5gC,YAAI,eAAE9J,SAChD,MAAOwO,GACPmT,QAAQkpB,IAAI,oCAAqCr8B,GAGnD,OAD4Bi8B,eAvCe,CAAOhvB,GAAsC,OAAD,6B,MACvF,IAAIqvB,EAtF6B,CAACrvB,GAA6B,yEAGvDA,UAAY,sgFAmFMsvB,CAAoBtvB,GAC9C,IACE,MAAMzb,QAAiB,YAA8B,CACnDP,MAAO,iBACPnD,GAAI,IACJL,KAAM,OAEU,QAAd,EAAA+D,aAAQ,EAARA,EAAU8J,YAAI,eAAE9J,YAClB8qC,EAAsB9qC,EAAS8J,KAAK9J,UAEtC,MAAOwO,GACPmT,QAAQkpB,IAAI,oCAAqCr8B,GAGnD,OAAOs8B,KAwB+CE,CAA8BvvB,O,kCCrbtF,+CAEA,MAAMwJ,EAAY,SAILgmB,EAAgChtC,GAC3C,WAAamnB,MAAM,CACjB8lB,cAAe,WACfC,SAAU,YACVC,QAAS,YACTC,SAAU,YACVvhC,KAAM,WAAa0b,KAAK,WAAY,CAClCC,IAAI,EACJplB,KAAM,WAAa+kB,MAAM,CACvBkmB,cAAe,WAEZ1jB,QAAQ3pB,EAAE,yCACV4nB,IAAI,EAAG5nB,EAAE,0DACTsnB,IAfc,WAeCtnB,EAAE,2DACpBstC,oBAAqB,WAElB3jB,QAAQ3pB,EAAE,yCACV4nB,IAAI,EAAG5nB,EAAE,iEACTsnB,IApBc,WAoBCtnB,EAAE,2DACpButC,iBAAkB,WAEf5jB,QAAQ3pB,EAAE,yCACV4nB,IAAI,EAAG5nB,EAAE,qEACZwtC,eAAgB,WAEb7jB,QAAQ3pB,EAAE,yCACV4nB,IAAI,EAAG5nB,EAAE,2DACTsnB,IA7Bc,WA6BCtnB,EAAE,2DACpBytC,iBAAkB,WAEf9jB,QAAQ3pB,EAAE,yCACV4nB,IAAI,EAAG5nB,EAAE,qEACTsnB,IAlCc,WAkCCtnB,EAAE,2DACpB0tC,YAAa,WACbC,QAAS,WAAapmB,KAAK,cAAe,CACxCC,GAAI,UACJplB,KAAM,SAAW,CACf7D,KAAM,WAAa6oB,QAAQJ,EAAW,CACpCpoB,QAASoB,EAAE,sCACXkpB,oBAAoB,IAEtB0kB,KAAM,WAAa15B,SAASlU,EAAE,4BAGlC6tC,UAAW,WAAatmB,KAAK,cAAe,CAC1CC,GAAI,YACJplB,KAAM,SAAW,CACfwrC,KAAM,WAAa15B,SAASlU,EAAE,4BAGlC8tC,KAAM,WAAavmB,KAAK,cAAe,CACrCC,GAAI,UACJplB,KAAM,SAAW,CACf2rC,QAAS,UAAY9kB,GAAG,WAAa/U,SAASlU,EAAE,mCAO/CguC,EAAsChuC,GACjD,WAAamnB,MAAM,CACjB8mB,eAAgBjB,EAA6BhtC,GAC7CkuC,cAAelB,EAA6BhtC,GAC5CmuC,aAAcnB,EAA6BhtC,M,kCCvE/C,gRAAO,MAAMouC,EAAiB,uCACjBC,EACX,oGACWC,EAA0B,uCAC1BC,EAAqB,gCACrBC,EAAkB,2BAClBC,EAAkB,2BAClBC,EAAW,yBACXC,EAAuB,yC,kCC2EpC,0KAAO,MAAMC,EAA8Br+B,GACvB,8BAAXA,EAAE/Q,KAGEqvC,EAA8Bt+B,GACvB,8BAAXA,EAAE/Q,KAGEsvC,EAA6Bv+B,GACtB,6BAAXA,EAAE/Q,KAGEuvC,EAA4Bx+B,GACrB,4BAAXA,EAAE/Q,KAGEwvC,EAA+Bz+B,GACxB,uBAAXA,EAAE/Q,M,kCCpGX,sJAEO,MAAMyvC,EAA+B,0BAE/BC,EAAuB,IACvBC,EAAwB,IACxBC,EAAyB,K,maCO/B,MAAMC,EAAsBprB,GAA+C,OAAD,6B,UAG/E,WAFgCA,EAAW1D,qBAGzC,MAAO,CACLiB,OAAQ,IAIZ,MAAM8tB,QAAwBrrB,EAAWzD,qBAEzC,IACE,MAAM+uB,EAAY,IAAWD,GAAqC,YAAaA,GAA/BA,EAE1CE,EAAyB,QAAf,EAAAD,aAAQ,EAARA,EAAUnlB,aAAK,eAAEolB,QAC3BC,EAA6B,QAAf,EAAAF,aAAQ,EAARA,EAAUnlB,aAAK,eAAEslB,UAC/BnD,EAAUgD,aAAQ,EAARA,EAAUhD,QAE1B,MAAO,CACL/qB,OAAQ,CACNguB,UACAjD,UACAkD,cACAE,YAN6B,QAAb,EAAAJ,aAAQ,EAARA,EAAU7e,WAAG,eAAEkf,OASnC,SACA,MAAO,CACLpuB,OAAQ,QAKDquB,EAA2B,CACtC7W,EACA/U,IACqB,OAAD,6B,QAGpB,UAFgCA,EAAW1D,sBAElByY,EAAqB,CAC5C,MAAM8F,QAAgB7a,EAAWzD,qBAC3B+uB,EAAW,YAAazQ,GAC9B,KAAoB,QAAf,EAAAyQ,aAAQ,EAARA,EAAUnlB,aAAK,eAAEolB,UAAwC,SAAd,QAAf,EAAAD,aAAQ,EAARA,EAAUnlB,aAAK,eAAEolB,SAChD,OAAO,EAGX,OAAO,M,kCC3DT,wBA6BA,MAAMM,EAAkB,CAAC3H,EAAiB,YAAU4H,KAAMvwC,EAAe,KACvE,GAAG2oC,KAAO3oC,IAEZ,MAAMwwC,UAA2D,cAkC/D,cACEx5B,QAjCM,KAAAy5B,QAAsC,CAC5C,CAACH,KAAoB,IAAI,eAAajgC,OAGhC,KAAAqgC,WAAa,IAAI,aAEjB,KAAAC,uBAAwB,EAExB,KAAAC,YAAa,EAEb,KAAAC,kBAA2B,KAE3B,KAAAC,SAAW,IAAI,QAUf,KAAAxxC,OAAQ,EAER,KAAA6iC,WAAY,EAEZ,KAAA4O,cAAgB,gBAAcC,OAE9B,KAAArpB,WAA+BpqB,EAE/B,KAAA2C,YAAiC3C,EAKvC,YAkBE8S,KAAM,CACNogC,QAAS,IAAWQ,QACpBP,WAAY,IAAWvyB,IACvBwyB,sBAAuB,IACvBG,SAAU,IAAW3yB,IACrB6kB,MAAO,IACP1jC,MAAO,IACP6iC,UAAW,IACX4O,cAAe,IACfppB,MAAO,IACPznB,OAAQ,IACRgxC,YAAa,IACbC,YAAa,IACbC,YAAa,IACbC,cAAe,IACfC,UAAW,IACXC,YAAa,MAvDjB,YACE,OAAIlhC,KAAKmhC,cACA,GAGFnhC,KAAKohC,cAAcllC,OAAO,UAsDnC,kBACE,MAAM40B,EAAW9wB,KAAKohC,cACnBllC,OAAO,UACPA,OAAQ02B,GAAMA,EAAEyO,aACnB,IAAKvQ,EAASz0B,OACZ,OAAO2D,KAAKshC,oBAGd,IAAIC,EACJzQ,EAAS7R,QAASzsB,IAChB,GAAI,iBAAOA,GAAI,CACb,MAAM,QAAE4+B,GAAY5+B,EAAEgvC,WAChBhhC,EAAIhO,EAAEivC,aAEPjvC,EAAEkvC,WAAatQ,GAClB5wB,EAAE4wB,QAAQ5+B,EAAEgvC,WAAsBpQ,SAE/BmQ,EAGHA,EAAKI,MAAMnhC,GAFX+gC,EAAO/gC,EAAEohC,WAOVL,IACHA,EAAO,IAAI,QAGb,MAAM,QAAEnQ,GAAYpxB,KAAKwhC,WAEzB,OAAOD,EAAKnQ,QAAQA,GAGtB,kBACE,OAAOpxB,KAAK6hC,WACTC,WACA5lC,OAAQwE,GAAMA,EAAEtT,cAAgB4S,MAGrC,kBACE,OAAOA,KAAK6hC,WACTC,WACA5lC,OAAQwE,GAAMA,EAAE3C,cAAgBiC,MAGrC,cACE,OAAIA,KAAKmhC,cACAx6B,MAAMy6B,cAAcllC,OAAO,UAE7ByK,MAAMy6B,cAIf,qBACE,OAAOz6B,MAAMy6B,cAAcngC,OAAO,CAAC8gC,EAAOC,KACpC,iBAAOA,IACTD,EAAM5kC,KAAK6kC,EAASN,UAAYM,EAASC,qBAAuBD,GAE3DD,GACN,IAGL,UACE,OAAO,YAAUrlC,KAGX,oBACN,MAAM,SAAE+jC,EAAQ,WAAEJ,GAAergC,KACjC,OAAO,IAAI,OAAKygC,EAAStI,EAAGsI,EAASvI,EAAGmI,EAAWrP,MAAOqP,EAAWpP,QAGvE,YACE,OAAOjxB,KAAK/Q,QAAU+Q,KAAK8xB,UAAY9xB,KAAK6gC,YAAc7gC,KAAKshC,oBAGjE,UAAUY,GACR,MAAM,MAAElR,EAAK,OAAEC,GAAWjxB,KAAKqgC,WAC3B6B,EAAOlR,QAAUA,GAASkR,EAAOjR,SAAWA,IAC9CjxB,KAAKqgC,WAAa,IAAI,aAAW6B,EAAOlR,MAAOkR,EAAOjR,SAExD,MAAM,EAAEkH,EAAC,EAAED,GAAMl4B,KAAKygC,SAClByB,EAAO/J,IAAMA,GAAK+J,EAAOhK,IAAMA,GACjCl4B,KAAKkhC,YAAY,IAAI,QAAMgB,EAAO/J,EAAG+J,EAAOhK,IAIhD,cACE,OAAIl4B,KAAK0hC,WAAa1hC,KAAKohC,cAAc/kC,SAAW2D,KAAK8xB,UAChD9xB,KAAKyhC,YAAYU,YAEnBniC,KAAKygC,SAGd,wBAAwB2B,EAAcC,GACpC,MAAMC,EAAUF,EAAMjK,EAAIkK,EAAalK,EACjCoK,EAAUH,EAAMlK,EAAImK,EAAanK,EACvCl4B,KAAKohC,cAAcniB,QAASujB,IAC1B,GAAI,iBAAOA,GAAQ,CACjB,MAAM9lC,EAAO8lC,EACP/B,EAAW/jC,EAAK+lC,cAChBC,EAAc,IAAI,QAAMjC,EAAStI,EAAImK,EAAS7B,EAASvI,EAAIqK,GACjE7lC,EAAKwkC,YAAYwB,MAKvB,YAAYN,GACV,GAAIpiC,KAAK0hC,WAAa1hC,KAAKohC,cAAc/kC,SAAW2D,KAAK8xB,UAAzD,CACE,MAAMuQ,EAAeriC,KAAKyhC,YAAYU,YACtCniC,KAAK2iC,wBAAwBP,EAAOC,OAFtC,CAKAriC,KAAKygC,SAAW2B,EAChBpiC,KAAKugC,YAAa,EAClB,IACEvgC,KAAK4iC,gBAAgBC,UAAU,wBAAuB,CAAEnmC,KAAMsD,OAE9D,MAAOU,MAGX,eACE,OAAOV,KAAKugC,WAGd,gBACE,OAAOvgC,KAAKqgC,WAGd,cAAcA,GACZrgC,KAAKqgC,WAAaA,EAClBrgC,KAAKsgC,uBAAwB,EAG/B,0BACE,IAAKtgC,KAAKsgC,uBAAyBtgC,KAAK0hC,UAAW,CACjD,MAAM/O,EAAQ3yB,KAAKohC,cAAcllC,OAAO,UACxC,GAAqB,IAAjBy2B,EAAMt2B,OACR,OAAO2D,KAAKsgC,sBAEC3N,EAAMmQ,MAAOtwC,GAAMA,EAAEuwC,6BAElC/iC,KAAKsgC,uBAAwB,GAGjC,OAAOtgC,KAAKsgC,sBAGd,UAAUhI,EAAiB3oC,GACzB,IAAIqzC,EAAShjC,KAAKogC,QAAQH,EAAgB3H,EAAK3oC,IAU/C,OATKqzC,GAAUrzC,IACbqzC,EAAShjC,KAAKogC,QAAQH,EAAgB3H,KAEnC0K,GAAW1K,IAAQ,YAAU56B,QAAU46B,IAAQ,YAAU36B,SAC5DqlC,EAAShjC,KAAKogC,QAAQH,EAAgB,YAAUC,KAAMvwC,KACjDqzC,GAAUrzC,IACbqzC,EAAShjC,KAAKogC,QAAQH,EAAgB,YAAUC,SAG7C8C,EAGT,UAAUA,EAAgB1K,EAAiB3oC,GACzC,MAAMiC,EAAMquC,EAAgB3H,EAAK3oC,GAC7BqzC,EACFhjC,KAAKogC,QAAQxuC,GAAOoxC,SAEbhjC,KAAKogC,QAAQxuC,GAIxB,WACE,OAAOoO,KAAK2yB,MAGd,UACE,OAAO3yB,KAAK/Q,MAGd,SAASA,GACP+Q,KAAK/Q,MAAQA,EAGf,cACE,OAAO+Q,KAAK8xB,UAGd,aAAaA,GACX,GAAIA,IAAc9xB,KAAK8xB,UAAW,CAKhC,MAAMmR,EAAajjC,KAAKyhC,YAAYU,aAC/BrQ,GAAa9xB,KAAKwgC,mBACrBxgC,KAAK2iC,wBAAwBM,EAAYjjC,KAAKwgC,mBAC9CxgC,KAAKwgC,kBAAoB,KACzBxgC,KAAK8xB,UAAYA,IAEjB9xB,KAAKwgC,kBAAoB1O,EAAYmR,EAAa,KAClDjjC,KAAK8xB,UAAYA,EACjB9xB,KAAKihC,UAAUjhC,KAAKyhC,YAAYyB,UAAUD,EAAW9K,EAAG8K,EAAW/K,KAErEl4B,KAAK4iC,gBAAgBC,UAAU,6BAA4B,CAAEnmC,KAAMsD,QAIvE,mBACE,OAAOA,KAAK0gC,cAGd,iBAAiBD,GACfzgC,KAAK0gC,cAAgBD,EAGvB,eACE,OAAOzgC,KAAKsX,QAAUtX,KAAK/Q,MAAQ,YAAUsyC,KAAO,YAAU4B,SAGhE,aAAa7rB,GACXtX,KAAKsX,MAAQA,EAGf,gBACE,OAAOtX,KAAKnQ,QAAU,aAAWswB,QAGnC,cAActwB,GACZmQ,KAAKnQ,OAASA,EAGhB,iBACE,OAAOmQ,KAAK8gC,YAGd,iBACE,OAAO9gC,KAAK+gC,YAGd,YACE,OAAOp6B,MAAM06B,aAAerhC,KAAK+iC,0BAGnC,SAASpxC,GAGP,IAAIwnC,EACA1W,EAHJ9b,MAAMw0B,SAASxpC,GAKX,UAAWA,GAAwB,MAAfA,EAAMq/B,OAAiBr/B,EAAMq/B,QAAUhxB,KAAKqgC,WAAWrP,QACxEmI,IACHA,EAAIn5B,KAAKqgC,WAAWuB,SAEtBzI,EAAEnI,MAAQr/B,EAAMq/B,OAEd,WAAYr/B,GAAyB,MAAhBA,EAAMs/B,QAAkBt/B,EAAMs/B,SAAWjxB,KAAKqgC,WAAWpP,SAC3EkI,IACHA,EAAIn5B,KAAKqgC,WAAWuB,SAEtBzI,EAAElI,OAASt/B,EAAMs/B,QAEfkI,GACFn5B,KAAKghC,cAAc7H,GAGjB,MAAOxnC,GAAoB,MAAXA,EAAMwmC,GAAaxmC,EAAMwmC,IAAMn4B,KAAKygC,SAAStI,IAC1D1V,IACHA,EAAIziB,KAAKygC,SAASmB,SAEpBnf,EAAE0V,EAAIxmC,EAAMwmC,GAEV,MAAOxmC,GAAoB,MAAXA,EAAMumC,GAAavmC,EAAMumC,IAAMl4B,KAAKygC,SAASvI,IAC1DzV,IACHA,EAAIziB,KAAKygC,SAASmB,SAEpBnf,EAAEyV,EAAIvmC,EAAMumC,GAEVzV,GACFziB,KAAKkhC,YAAYze,GAGf,UAAW9wB,GACbqO,KAAKojC,WAAWzxC,EAAM1C,OAEpB,kBAAmB0C,IACrBqO,KAAK0gC,cAAgB/uC,EAAM+uC,eAEzB,UAAW/uC,IACbqO,KAAKsX,MAAQ3lB,EAAM2lB,OAEjB,WAAY3lB,IACdqO,KAAKnQ,OAAS8B,EAAM9B,QAElB,cAAe8B,GACjBqO,KAAKqjC,eAAe1xC,EAAMmgC,WAI9B,UACE,OAAO,OAAP,wBACKnrB,MAAM28B,WAAS,CAClBnL,EAAGn4B,KAAKujC,eAAiBvjC,KAAKyiC,cAActK,OAAIjrC,EAChDgrC,EAAGl4B,KAAKujC,eAAiBvjC,KAAKyiC,cAAcvK,OAAIhrC,EAChD8jC,MAAOhxB,KAAK+iC,0BAA4B/iC,KAAKwjC,gBAAgBxS,WAAQ9jC,EACrE+jC,OAAQjxB,KAAK+iC,0BAA4B/iC,KAAKwjC,gBAAgBvS,YAAS/jC,EACvE4kC,UAAW9xB,KAAKmhC,cAChBlyC,MAAO+Q,KAAK0hC,UACZhB,cAAe1gC,KAAK0gC,cACpBppB,MAAOtX,KAAKsX,MACZznB,OAAQmQ,KAAKnQ,SAIjB,kBAAkBM,GAChB,IAAK6P,KAAK/Q,OAAS+Q,KAAKmhC,cAAe,CACrC,MAAM,EAAEhJ,EAAC,EAAED,GAAMl4B,KAAKyiC,cACtBtyC,EAAEszC,UAAUtL,EAAGD,IAInB,oBAAoB/nC,GAClB,IAAK6P,KAAK/Q,OAAS+Q,KAAKmhC,cAAe,CACrC,MAAM,EAAEhJ,EAAC,EAAED,GAAMl4B,KAAKyiC,cACtBtyC,EAAEszC,WAAWtL,GAAID,KAKR,O,kCCnbf,8CAKO,MAAMwL,EAAqB,IACzB,sBAAa98B,GAAqBA,EAAM+8B,GAAGC,MAAM,CAAC,WAAY,c,kCCLvE,6CAiBO,MAAMC,EAAoB,CAAC/rC,EAA2Bd,KAC3D,MAAM8sC,EAAc9sC,EAAQ+sC,QAAU/sC,EAAQ+sC,QAAQ7wC,KAAO8D,EAAQ9D,KACrE,IAAI8wC,EAAa,EACbC,EAAa,EACjB,MAAMC,EAAc,GACdC,EAAW,GAmBjB,OAlBIL,aAAW,EAAXA,EAAaznC,SACfynC,EAAY7kB,QAAQ,EAAG7wB,UAAYD,Y,QACjC,MAAMi2C,EAAuB,QAAf,EAAAtsC,aAAO,EAAPA,EAASuiB,cAAM,eAAGlsB,GAChC,GAAI6pB,OAAOqsB,SAASD,GAAQ,CAC1BJ,GAAcI,EACd,MAAME,EAAoB,aAAiBF,GAApB,OACvBF,EAAY/mC,KAAK,CAAEhP,OAAM2U,MAAOshC,EAAOE,mBAGzC,MAAMC,EAAoB,QAAZ,EAAAzsC,aAAO,EAAPA,EAASkiB,WAAG,eAAG7rB,GAC7B,GAAI6pB,OAAOqsB,SAASE,GAAQ,CAC1BN,GAAcM,EACdJ,EAASh2C,GAAW,aAAYo2C,GAAf,SACjB,MAAMD,EAAoB,aAAYC,GAAf,SACvBJ,EAAShnC,KAAK,CAAEhP,OAAM2U,MAAOyhC,EAAOD,sBAInC,CAAEN,aAAYC,aAAYC,cAAaC,c,kCC1ChD,6GAwEe,IAxD+B,EAAGt2C,MAAKa,W,MACpD,MAAM,QAAEsI,EAAO,UAAEuwB,EAAS,OAAE7zB,GAAW,YAAe7F,GAChDoJ,EAAe,aAASpJ,aAAG,EAAHA,EAAKD,MAE7B42C,EAAiB,UAAc,IAC5B9wC,IAAW6zB,EACd,YAAW,OAAD,wBAAMvwB,GAAO,CAAEnJ,SACzB,CAAE42C,yBAA0B,KAAMC,wBAAyB,MAC9D,CAACnd,EAAW7zB,EAAQsD,EAASnJ,IAE1Bk2C,GAAU/sC,aAAO,EAAPA,EAAS+sC,WAAW/sC,aAAO,EAAPA,EAAS+sC,QAAQl2C,KAC/C82C,GAAW3tC,aAAO,EAAPA,EAAS2tC,YAAY3tC,aAAO,EAAPA,EAAS2tC,SAAS92C,MAClD,yBAAE42C,EAAwB,wBAAEC,GAA4BF,EACxDI,EAAaH,GAA4BV,EACzCc,EAAgBJ,GAA4BC,EAA0BC,EAAWZ,EAEvF,OAAOrwC,EACL,gBAAC,IAAK,CAACoxC,WAAS,GACd,gBAAC,IAAS,KACR,gBAAC,IAAO,CACNlzC,IAAK6yC,EAA2B,SAAW,YAC3CvxC,KAAMwxC,EACNK,IAAI/tC,aAAO,EAAPA,EAASguC,cAAeH,EAA8B,QAAhB,EAAA7tC,aAAO,EAAPA,EAAS+sC,eAAO,eAAEl2C,IAC5DoJ,aAAcA,EACdpJ,IAAKA,EACLa,KAAMA,EACNwI,gBAAgBF,aAAO,EAAPA,EAASguC,iBAG5BP,GACC,gCACE,gBAAC,IAAS,KACR,gBAAC,IAAQ,KACP,gBAAC,IAAI,CAACQ,KAAK,MACT,gBAAC,IAAqB,CAACxpB,MAAO,mBAAS3Y,WAI7C,gBAAC,IAAS,KACR,gBAAC,IAAO,CACN5P,KAAMuxC,EACNM,GAAIH,EACJ3tC,aAAcA,EACdpJ,IAAKA,EACLa,KAAMA,EACNwI,eAAe,OAOzB,gBAAC,IAAa,Q,kCClElB,gDAEO,MAAMguC,EAAmB,CAC9BC,EACA5T,EACA6T,EAA0B,OAEnB,YACL,YAAYD,GACZ,YAAY5T,GACZ6T,EAAoB,YAAYA,GAAqB,O,kCCZzD,+EAWO,MAAMC,EAAwBh2C,GAAmBi2C,IACtD,MAAMC,EAAuClzC,IAC3C,MAAM21B,EAAc,YAAY31B,EAAMxF,SAChCy6B,EAAgB,aAAS,aAAaU,IACtCwd,EAAa,aAAgB,CACjCv2C,MAAOq4B,EAAcp4B,SACrBG,OACAvC,SAAUw6B,EAAcn4B,OACxBhB,KAAM65B,EAAY55B,SAASD,KAC3BM,UAAWu5B,EAAY55B,SAASK,YAElC,OAAO,gBAAC62C,EAAgB,iBAAMjzC,EAAa,CAAEozC,QAASD,MAKxD,OAHAD,EAAUzxC,YAAc,wBACtBwxC,EAAiBxxC,aAAewxC,EAAiBn3C,QAE5C,YAASo3C,K,kCC3BlB,iFAOO,MAAMG,EAAkB54C,IAC7B,MAAMgL,EAAU,eACV,QAAEd,EAAO,OAAEtD,GAAW,aAAe5G,EAAUA,EAASc,KAAMd,EAASsB,SAASK,WAQtF,OAPoB,UAAc,IAC5B,IAAUqJ,KAAapE,EAClB,KAEF,YAAkBoE,EAASd,GACjC,CAACtD,EAAQoE,EAASd,M,kCCfvB,+EAOO,MAAM2uC,EAAoB7nC,GAIxB,YAAa,CAClBzM,MACE,gCACE,gBAAC,KAA6B,CAACZ,UAAU,oBAAqB,IAC9D,gBAAC,QAAK,CAACjC,GAAG,YAAU,sBAGxBo3C,WARA,wJAUAC,WAAY,kBACZC,cAAc,EACdC,UAAW,IACF,YAAiCjoC,GAAMlP,MAAOC,IACnDA,GAAO,YAAW,CAAEC,MAAOD,EAAIE,e,kCCxBvC,uEAMO,MAAMi3C,EAAkB,CAACtpC,EAAYupC,KAC1C,MAAMC,EAAcxpC,EAAKypC,cAAgBzpC,EAAKmlC,WAAcnlC,EAAKypC,iBAAuBj5C,EACxF,GAAIg5C,IAAgBD,EAClB,OAAOjpC,QAAQC,SAGjB,GAAIipC,EAAa,CAGf,MAAME,EAAWH,EACb,+BACA,kDACEI,EAAY3pC,EAAK4pC,WACjBC,EAAcL,EAAYI,WAC1BE,EAAcP,aAAW,EAAXA,EAAaK,WAC3Bv3C,EAAUk3C,EACd,gBAAC,QAAK,CAACz3C,GAAG,Y,iCACsB,8BAAS,CAAE63C,c,SAA4B,CAAEE,e,MAAkB,IACxF,CAAEC,e,KAGL,gBAAC,QAAK,CAACh4C,GAAG,Y,mCACwB,8BAAS,CAAE63C,c,SAA4B,CAAEE,e,KAKvEV,EAAaI,EAAc,gBAAkB,kBAEnD,OAAO,IAAIjpC,QAAQ,CAACmV,EAASlV,KAC3B,YAAa,CACXmpC,WACAr3C,UACA82C,aACAY,MAAO,KACLxpC,KAEFoG,OAAQ,KACNpG,KAEF8oC,UAAW,IACF,YACLrpC,EACAupC,EAAcA,EAAYK,WAAa,MAEtC/zC,KAAK4f,GACLvjB,MAAOC,IACN,MAAMC,EAAQD,EAAIE,QAClB,YAAW,CAAED,UACbmO,EAAOpO,SAOnB,OAAO,YAAkC6N,EAAMupC,EAAYK,YAAY13C,MAAOC,IAC5E,MAAMC,EAAQD,EAAIE,QAClB,YAAW,CAAED,c,kCChEjB,mBAOe,IAJ6B,EAAGgiC,cACtC,uBAAKrgC,UAAU,0BAA0BqgC,I,kCCkClD,IAAY4V,EAyBAC,EAzBZ,+GAAYD,GACV,gBACA,cAFF,CAAYA,MAAgB,KAyB5B,SAAYC,GACV,cACA,kBACA,cAHF,CAAYA,MAAyB,KA+F9B,MAAMC,EAA2B,qB,qZCvGzB,IAtC6C,I,IAAA,EAC1DzO,EAAC,EACDD,EAAC,OACD2O,EAAM,KACNv1C,EAAI,UACJw1C,EAAS,SACTC,GAAQ,EACLC,EAAI,IAPmD,kDAS1D,MAAMC,EACJ,gBAAC,YAAW,eAAC9O,EAAGA,EAAGD,EAAGA,EAAG2O,OAAQA,EAAQp2C,UAAU,gBAAgBy2C,gBAAc,GAAKF,IAGxF,OAAI11C,EACKy1C,EAEL,qBACEt2C,UAAU,sBACVa,KAAMA,EACNqM,OAAO,SACPwpC,IAAI,sBACJtiC,QAAUnE,IACRA,EAAE0mC,mBAEJC,KAAK,SAAQ,aACDP,GAEXG,GAGH,gBAAC,OAAI,CAACx2C,UAAU,sBAAsB8D,GAAIjD,EAAM+1C,KAAK,SAAQ,aAAaP,GACvEG,GAIAA,I,kCCpDT,+f,8aC6Ee,uBAtC4B,I,IAAA,UACzCx2C,EAAS,QACT5D,EAAO,gBACPy6C,EAAkB,mBAAiBC,YAAW,sBAC9CC,EAAqB,sBACrBC,EAAqB,cACrBC,EAAa,cACbC,GAAa,EACVX,EAAI,IARkC,2HAUzC,MAAMhf,EAAc,YAAan7B,EAAiBO,aAC5Ck6B,EAAgBU,GAAe,aAAS,aAAaA,KACpDrR,EAAUixB,GAAY,uBAAa,CAAEC,YAAY,IAElDrC,EAAa,aAAuB,CACxCv2C,MAAOq4B,aAAa,EAAbA,EAAep4B,SACtBG,KAAM,QACNvC,SAAUw6B,aAAa,EAAbA,EAAen4B,OACzBhB,KAAM65B,aAAW,EAAXA,EAAa55B,SAASD,KAC5BM,UAAWu5B,aAAW,EAAXA,EAAa55B,SAASK,YAGnC,OACE,gBAAC,cAAW,eACVgC,UAAW,EAAW,gBAAiBA,GACvC5D,QAASA,EACT26C,sBAAuBhC,EAAagC,OAAwBt6C,EAC5Du6C,sBAAuBjC,EAAaiC,OAAwBv6C,EAC5Dw6C,cAAelC,EAAakC,OAAgBx6C,EAC5Cy6C,cAAenC,EAAamC,OAAgBz6C,EAC5Co6C,gBAAiBA,EACjB3wB,SAAUA,EACVixB,SAAUA,GACNZ,O,kCCxEV,wNA8BO,MAAMc,EAAqB,CAChCj7C,GACCk7C,EAAoBr0C,KAErBA,EACIq0C,EAAmB9mC,OAAU,CAACqL,GAAO07B,YAAcC,aACjD,MAAMt2B,EAAUs2B,EAAuCp7C,GACvD,OAAO8kB,UAAUrF,QAChBpf,QACHA,EAEAg7C,EAA8Bp7C,IAClC,MAAM4iC,EAAkB,aAAuB5iC,IACzC,QAAEkK,EAAO,OAAEtD,EAAM,UAAE6zB,GAAc,aAAez6B,GACtD,OAAO,UAAc,KAAM,CAAGoG,KAAM8D,aAAO,EAAPA,EAAS9D,KAAMQ,SAAQ6zB,YAAWmI,oBAAoB,CACxFA,EACAnI,EACA7zB,EACAsD,KAISmxC,EACXt7C,IAEA,MAAMC,EAAW,YAAYD,GAC7B,GAAKC,GAIFA,GACA,CACC,wBAAsBc,KACtB,kBAAgBA,KAChB,iBAAeA,KACf,mBAAiBA,KACjB,WAASA,KACT,WAASA,MACTgO,SAAS9O,EAASc,MAGtB,MAAO,CAAEd,WAAUs7C,SAAUF,IAGlBG,EACXx7C,IAEA,MAAMC,EAAW,YAAYD,GAC7B,GAAKC,GAIFA,GACA,CACC,wBAAsBc,KACtB,kBAAgBA,KAChB,iBAAeA,KACf,mBAAiBA,KACjB,eAAaA,MACbgO,SAAS9O,EAASc,MAGtB,MAAO,CAAEd,WAAUs7C,SAAU,OAGlBE,EACXz7C,IAEA,MAAMC,EAAW,YAAYD,GAC7B,GAAKC,GAIFA,GACA,CACC,wBAAsBc,KACtB,kBAAgBA,KAChB,iBAAeA,KACf,mBAAiBA,KACjB,WAASA,MACTgO,SAAS9O,EAASc,MAGtB,MAAO,CAAEd,aAGLy7C,EAAqCz7C,IACzC,MAAM,KAAE2mC,GAAS,aAAyB3mC,IAExCsB,UAAU,UAAEK,IACV3B,GAEGoG,EAAMs1C,GAAW,WAAe,KAChC90C,EAAQ+0C,GAAa,YAAwB,IAC7ClhB,EAAWmhB,GAAgB,WAAuB,IACnDC,EAAmB,UAAc,IAAM,aAA2B,UAAWl6C,GAAY,CAC7FA,IAGI+N,EAAY,YAAqBmsC,GAuBvC,OArBA,YAAgB,KACd,MAAMC,EAAW7nC,OAAOC,KAAKxE,GAAW6W,KAAMzhB,GAAQ4K,EAAU5K,GAAK21B,WACrE,GAAIqhB,EACFF,EAAalsC,EAAUosC,GAAUrhB,gBAInC,GADAmhB,EAAa,IAEX3nC,OAAOC,KAAKxE,GAAWH,OAAS,GAChC0E,OAAOC,KAAKxE,GAAWsmC,MAAOlxC,GAAQ4K,EAAU5K,GAAK8B,QACrD,CACA,MAAMm1C,GAAcpV,aAAI,EAAJA,EAAMp3B,QACtBo3B,EAAKxyB,OAAO,CAACqL,EAAK4mB,KAChB5mB,EAAInP,QAAQ,aAAmB+1B,EAAK12B,IAC7B8P,GACN,IACH,GACJk8B,EAAQK,GACRJ,GAAU,KAEX,CAAChV,EAAMj3B,IACH,CAAEtJ,OAAMQ,SAAQ6zB,cAGZuhB,EACXj8C,IAEA,MAAMC,EAAW,YAAYD,GAC7B,GAAKC,GAAYA,EAASc,OAAS,eAAaA,KAChD,MAAO,CAAEd,WAAUs7C,SAAUG,K,kCChK/B,0tBA0EO,MAAMQ,EAAuBp5C,IAClC,OAAQA,GACN,KAAK,IAASq5C,YACd,KAAK,IAASC,UACd,KAAK,IAASC,iBACd,KAAK,IAASC,UACZ,MAAO,CACLnY,MAAO,IACPC,OAAQ,IACRC,SAAS,EACT5Z,MAAO,IAAU8xB,QACjBjY,MAAO,CACLC,QAAS,MAGf,KAAK,IAASiY,UACZ,MAAO,CACLrY,MAAO,IACPC,OAAQ,IACRC,SAAS,EACTY,WAAW,EACX7iC,OAAO,EACPqoB,MAAO,IAAUiqB,KACjBpQ,MAAO,CACLC,QAAS,MAGf,KAAK,IAASkY,OACZ,MAAO,CACLtY,MAAO,IACPC,OAAQ,IAAc,EACtBC,SAAS,EACT5Z,MAAO,IAAUiyB,QACjBpY,MAAO,CACLC,QAAS,MAGf,KAAK,IAASoY,QACZ,MAAO,CACLxY,MAAoB,IAAb,IACPC,OAAsB,IAAd,IACRC,SAAS,EACT5Z,MAAO,IAAUmyB,OACjBtY,MAAO,CACLC,QAAS,MAGf,QACE,OAAO,MAQAsY,EAAuB,EAAGlvC,WACrCA,EAAMC,IAAI,KA+CCkvC,EAAsB78C,I,MACjC,OAAOA,EAASc,OAAS,IAAoBA,SAA2B,QAAjB,EAAAd,EAASsB,gBAAQ,eAAEg0B,kBAGtEwnB,EAAe,CACnB98C,EACA+8C,EACAC,K,UAEA,MAAMC,EAAiD,QAAjC,EAAqB,QAArB,EAAAF,aAAe,EAAfA,EAAiBv6C,YAAI,eAAE06C,kBAAU,eAAEl8B,IAEnDm8B,EAAkC,QAArB,EAAAJ,aAAe,EAAfA,EAAiBv6C,YAAI,eAAE64B,QAC1C,QACE8hB,GACCH,EAAa17C,SAASD,OAAS87C,EAAW97C,MACzC27C,EAAal8C,OAASq8C,EAAWr8C,MACjCk8C,EAAa57C,aAAe+7C,EAAW/7C,cAKzC67C,GACA,YAAuB,aAAaj9C,MAAei9C,EAAc77C,YACjEpB,EAASsB,SAASD,OAAS47C,EAAc57C,OAIvC+7C,EAAc,CAClBL,EACAM,EACAL,K,YAEA,MAAM,KAAE37C,EAAI,KAAEP,EAAI,WAAEM,IAAoD,QAArC,EAAyB,QAAzB,EAAAi8C,EAAqB76C,YAAI,eAAE06C,kBAAU,eAAEl8B,MAAO,GACjF,GACEg8B,EAAa17C,SAASD,OAASA,GAC/B27C,EAAal8C,OAASA,GACtBk8C,EAAa57C,aAAeA,EAE5B,OAAO,EAET,GAAIi8C,EAAqBv8C,OAAS,IAAqBA,KACrD,OAAgC,QAAzB,EAAAu8C,EAAqB76C,YAAI,eAAE86C,UAAWP,EAAgBz7C,SAASD,KAExE,MAAMg6B,EAAmC,QAAzB,EAAAgiB,EAAqB76C,YAAI,eAAE64B,QAC3C,OACEA,GACAA,EAAQh6B,OAAS07C,EAAgBz7C,SAASD,MAC1Cg6B,EAAQv6B,OAASi8C,EAAgBj8C,MACjCu6B,EAAQj6B,aAAe27C,EAAgB37C,YAI9Bm8C,EAAqBv9C,I,QAChC,MAAMkP,EAAO,CACX0a,QAAS,IAEL4zB,EAAmC,QAAtB,EAAc,QAAd,EAAAx9C,aAAQ,EAARA,EAAUwC,YAAI,eAAE4M,cAAM,eAAEouC,WAC3C,GAAIA,IAAe,IAAUA,GAC3B,IAAK,MAAO14C,EAAKkR,KAAU/B,OAAOwpC,QAAQD,GACxCtuC,EAAK0a,QAAQvZ,KAAK,CAAEvL,MAAKkR,UAG7B,OAAO9G,GAGIwuC,EAA6B,CACxChuC,EACAiuC,IAEOA,EAAaxpC,OAAO,CAACqL,EAAKo+B,K,QAE/B,MAAO,IAAIp+B,KADuC,QAAzB,EAAmB,QAAnB,EAAA9P,EAAUkuC,UAAS,eAAE1uC,YAAI,QAAI,KAErD,IAGQ2uC,EAA4B,CACvCC,EACApuC,KAEA,MAAMquC,EAAmB,IAAI,4CAAmC,IAAyB17C,QACzF,OAAO,IACLq7C,EAA2BhuC,EAAWquC,GACtC,CAACv+B,EAAKw+B,K,QACJ,MAAMC,GAA2B,QAAjB,EAAW,QAAX,EAAAD,aAAK,EAALA,EAAOx7C,YAAI,eAAE07C,YAAI,eAAEl9B,MAAO,GAQ1C,OANE88B,EAAeh9C,OAASm9C,EAAQn9C,MAChCg9C,EAAex8C,SAASD,OAAS48C,EAAQ58C,MACzCy8C,EAAe18C,aAAe68C,EAAQ78C,YAEtCoe,EAAInP,KAAK2tC,GAEJx+B,GAET,KASS2+B,EAAuB,CAClCn+C,EACA0P,KAEA,MAAM0uC,EAAuB,uCAEvBC,EAAkB,CACtBC,OAAQ,CACN,CACEvB,gBAAiB,aACjBM,qBAAsB,WACtBkB,kBAAmBzB,GAErB,CACEC,gBAAiB,WACjBM,qBAAsB,WACtBkB,kBAAmBzB,GAErB,CACEC,gBAAiB,aACjBM,qBAAsB,WACtBkB,kBAAmBzB,IAGvB0B,QAAS,CACP,CACEzB,gBAAiB,UACjBM,qBAAsB,WACtBkB,kBAAmBnB,KAIzB,IAAUgB,EAAuB/iB,IAC/BgjB,EAAgBG,QAAQnuC,KAAK,CAC3B0sC,gBAAiB1hB,EACjBgiB,qBAAsB,uBACtBkB,kBAAmBnB,IAErBiB,EAAgBhjB,GAAW,CACzB,CACE0hB,gBAAiB,aACjBM,qBAAsB,uBACtBkB,kBAAmBzB,GAErB,CACEC,gBAAiB,WACjBM,qBAAsB,uBACtBkB,kBAAmBzB,GAErB,CACEC,gBAAiB,aACjBM,qBAAsB,uBACtBkB,kBAAmBzB,MAKzB,IAAI2B,EAAc,GAClB,GAAIJ,EAAgBr+C,EAASc,OAASu9C,EAAgB,aAAar+C,IAAY,CAC7E,MAAM0+C,EAAYL,EAAgBr+C,EAASc,OAASu9C,EAAgB,aAAar+C,IACjF,IAAU0+C,EAAY1Y,I,MACpB,MAAM,gBAAE+W,EAAe,qBAAEM,EAAoB,kBAAEkB,GAAsBvY,EACjEt2B,EAAUqtC,KAAmD,QAA/B,EAAArtC,EAAUqtC,GAAiB7tC,YAAI,eAAEK,QAAS,IAC1EkvC,EAAcA,EAAYE,OACxB,IACEjvC,EAAUqtC,GAAiB7tC,KAC3B,CAACsQ,EAAKo/B,KACJ,GACG,aAAaA,KAAY,aAAa,iBACrC/B,EAAmB+B,KACpBL,EAED,OAAO/+B,EAET,MAKMq/B,GALyBnvC,EAAU2tC,GAAsBnuC,MAAQ,IAAIE,OACxE0vC,GACQP,EAAkBK,EAAQE,EAAiB9+C,IAGPgiB,IAAKokB,GAC3C,OAAP,QACEtlC,KAAM,aAAaslC,GACnB/kC,KAAM+kC,EAAI9kC,SAASD,KACnBM,UAAWykC,EAAI9kC,SAASK,WACrB47C,EAAkBnX,KAGzB,GAAIyY,EAAiBtvC,OAAS,EAAG,CAC/B,MAAMxO,EAAM,CACVD,KAAM,aAAa89C,GACnBv9C,KAAMu9C,EAAOt9C,SAASD,KACtBM,UAAWi9C,EAAOt9C,SAASK,UAC3BuN,KAAM2vC,GAERr/B,EAAInP,KAAKtP,GAEX,OAAOye,GAET,QAMV,OAAOi/B,GAMIM,EAAsB,CACjCN,EAA4B,MAE5B,GAA2B,IAAvBA,EAAYlvC,OACd,MAAO,CAAC,GAAI,IAEd,MAAM6uC,EAAuB,uCAC7B,OAAO,IAAYK,EAAcO,GAAQZ,EAAqBtvC,SAASkwC,EAAIl+C,QAkBhEm+C,EAA2B,CACtCC,EACAxvC,KAEA,MACMyvC,EAA2B,CAAEC,SAAU,GAAIC,QAAS,IADjC,CAAC,WAAY,wBAErBltB,QAASmtB,IACxB,GAAI5vC,EAAU4vC,IAAc5vC,EAAU4vC,GAAWpwC,KAAKK,OAAS,EAAG,CAChE,MAAMgwC,EAA2B7vC,EAAU4vC,GAAWpwC,KACtD,IAAMqwC,EAA2BC,I,YAC/B,IAAK3C,EAAmB2C,GAAe,CACrC,MAAMtC,EAA0C,QAA7B,EAAiB,QAAjB,EAAAsC,EAAah9C,YAAI,eAAE06C,kBAAU,eAAEl8B,IAClD,GAAIk8B,EAAY,CACd,MAAMuC,EACJP,EAAKp+C,OAASo8C,EAAWp8C,MAAQo+C,EAAK59C,SAASD,OAAS67C,EAAW77C,KACrE,GAAIo+C,GAAqBD,EAAa1+C,OAAS,IAAqBA,KAAM,CACxE,MAAMw8C,EAA0B,QAAjB,EAAAkC,EAAah9C,YAAI,eAAE86C,OAC7B6B,EAAYE,QAAQvwC,SAASwuC,IAChC6B,EAAYE,QAAQhvC,KAAKitC,QAEtB,GAAImC,EAAmB,CAC5B,MAAMpkB,EAA2B,QAAjB,EAAAmkB,EAAah9C,YAAI,eAAE64B,SAC7B,WAAEj6B,EAAU,KAAEC,EAAI,KAAEP,GAASu6B,GAAW,GAExCqkB,EAAe,IAAOP,EAAYC,SAAU,CAChDh+C,aACAC,OACAP,SAEEu6B,IAAYqkB,GACdP,EAAYC,SAAS/uC,KAAKgrB,WAQxC,MAAMskB,EAAe,GACfC,EAAmBC,IACJ,IAAOF,EAAc,CACtC7+C,KAAM++C,EAAM/+C,KACZQ,SAAU,CAAED,KAAMw+C,EAAMv+C,SAASD,SAGjCs+C,EAAatvC,KAAKwvC,IA8BtB,OA3BAV,EAAYE,QAAQltB,QAASmrB,IAC3B,MAAMwC,EAAc,IAAOpwC,EAAU2vC,QAAQnwC,KAAM,CACjD5N,SAAU,CAAED,KAAMi8C,MAELwC,EAAcjC,EAA0BiC,EAAapwC,GAAa,IAC1EyiB,QAAS0tB,IACdD,EAAgBC,OAGpBV,EAAYC,SAASjtB,QAASkJ,IAC5B,MAAM0kB,EAtEY,CAACj/C,IACrB,MAAMs9C,EAAuB,uCAC7B,OAAO,IAAOA,EAAuB/iB,GAC5Bv6B,IAAS,aAAiBu6B,KAmEb2kB,CAAc3kB,EAAQv6B,MACpCm/C,EAAmBvwC,EAAUqwC,GACnC,GAAIE,EAAkB,CACpB,MAAMC,EAAkB,IAAOD,EAAiB/wC,KAAM,CACpD5N,SAAU,CAAED,KAAMg6B,EAAQh6B,MAC1BP,KAAMu6B,EAAQv6B,QAEDo/C,EAAkBrC,EAA0BqC,EAAiBxwC,GAAa,IAClFyiB,QAAS0tB,IACdD,EAAgBC,QAKtBhC,EAA0BqB,EAAMxvC,GAAWyiB,QAAS0tB,IAClDD,EAAgBC,KAEXF,GAGIQ,EAA0B,CACrCngD,EACA0P,K,QAEA,MAAM0wC,EAAiB,aAAkBpgD,EAAkC,QAAxB,EAAA0P,EAAU0wC,sBAAc,eAAElxC,MAK7E,OAHEkxC,GAAkBA,EAAe7wC,OAC7B,aAAkB6wC,EAAe,GAAuB,QAAnB,EAAA1wC,EAAU2wC,iBAAS,eAAEnxC,MAC1D,IAOKoxC,EAAwB,CACnCtgD,EACA0P,EACA6wC,K,QAEA,MAAMH,EAAiB,aAAkBpgD,EAAkC,QAAxB,EAAA0P,EAAU0wC,sBAAc,eAAElxC,MAMvE+zB,EAA4B,CAChCod,UANgBF,EAAwBngD,EAAU0P,GAOlD0wC,iBACAI,SAPe9wC,EAAU8wC,SACvB,aAAkBxgD,EAA4B,QAAlB,EAAA0P,EAAU8wC,gBAAQ,eAAEtxC,WAChD9O,EAMFu/C,aALmBV,EAAyBj/C,EAAU0P,IAOxD,OAAI6wC,EACKA,EAAMpsC,OAAO,CAACqL,EAAKihC,IACjB,OAAP,wBAAYjhC,GAAQihC,EAAKzgD,EAAU0P,IAClCuzB,GAEEA,GAGIyd,EAA2B,CACtC1gD,EACA0P,K,MAEA,GACE,CAAC,IAAyB,IAAyB5O,MAAMgO,SAAS9O,EAASc,OAC3E4O,EAAUixC,aACV,CACA,MAAMC,EAAsB,aAAkB5gD,EAAU0P,EAAUixC,aAAazxC,MAK/E,OAHE0xC,aAAmB,EAAnBA,EAAqBrxC,QAAS,EAC1B,aAAkBqxC,EAAoB,GAAyB,QAArB,EAAAlxC,EAAU+2B,mBAAW,eAAEv3B,MACjE,GAGR,MAAO,IAMI2xC,EAA+B,CAC1C7gD,EACA0P,EACA6wC,KAEA,IAAIO,EAAuB,aAAkB9gD,EAAU0P,EAAU+2B,YAAYv3B,MAK7E,GAJA4xC,EAAuB,IAClBA,KACAJ,EAAyB1gD,EAAU0P,KAEnC,IAAUoxC,GAAuB,CACpC,MAAMC,EAAM,+BACPD,EAAqB,IAAE,CAC1B1/C,WAAY,YAAmB,mBAC/BN,KAAM,kBAAgBA,OAElBkgD,EAA4C,CAChDjgD,IAAKf,EACL8gD,qBAAsBC,GAGxB,OAAIR,EACKA,EAAMpsC,OAAO,CAACqL,EAAKihC,IACjB,OAAP,wBAAYjhC,GAAQihC,EAAKzgD,EAAU0P,IAClCsxC,GAGEA,EAET,MAAMvC,EAAcN,EAAqBn+C,EAAU0P,GAC7CuxC,EAAcX,EAAsBtgD,EAAU0P,EAAW6wC,GAC/D,OAAO,OAAP,QACEx/C,IAAKf,EACLy+C,eACGwC,IAwGMC,EAA8B,CACzClhD,EACA6C,EACAqM,EACAQ,KAEA,MAAMm2B,EAAQ,GACR7B,EAAqB,GAC3B,GAAInhC,IAAS,IAAS05C,WAAa7sC,GAAaA,EAAU0wC,eAAgB,CACxE,MAAMA,EAAiB,aAAkBpgD,EAAU0P,EAAU0wC,eAAelxC,MACtEiyC,EAAgB,IAAMf,EAAe,GAAI,CAAC,WAAY,QACtDgB,EAAY,IAAS1xC,EAAU2wC,UAAUnxC,KAAM,CACnD5N,SAAU,CACRg0B,gBAAiB,CAAC,CAAEvwB,IAAKo8C,OAG7B,IA9B8C,EAChDnhD,EACAqgD,KAEA,GAAK,IAAMrgD,EAAU,iBAAkB,MACvC,OAAOA,EAAS+C,OAAOs+C,QAAQltC,OAAO,CAACqL,EAAK8hC,KAC1C,MAAMC,EAAKlB,EAAU95B,KAAMi7B,GAAQF,EAAKG,eAAiBD,EAAIlgD,SAASD,MACtE,OAAOkgD,EAAK,IAAI/hC,EAAK+hC,GAAM/hC,GAC1B,KAsBSkiC,CAAmC1hD,EAAUohD,GAAa17C,IAClE,MAAMi8C,EAASj8C,EAAEpE,SAASyD,IAC1Bi/B,EAAS3zB,KAAKsxC,GACd9b,EAAMx1B,KACJ,YAAoB3K,EAAG,IAASk8C,SAAU,KAAM3F,EAAoB,IAAS2F,cAKnF,OADA/b,EAAMx1B,KAAK,YAAoBrQ,EAAU6C,EAAMqM,EAAM+sC,EAAoBp5C,GAAOmhC,IACzE6B,GA+DHgc,EAAezgD,IAAsB,MAAC,OAA2B,QAA3B,eAAgBA,UAAW,eAAEe,OA+B5D2/C,EAA4B,CAAC9hD,GAA6BkP,W,MACrE,MAAMnK,EAAwB,QAAlB,EAAA/E,aAAQ,EAARA,EAAUsB,gBAAQ,eAAEyD,IAC1Bg9C,EAAa,IAAM/hD,EAAU,gBAAiB,OAAS,IAAMA,EAAU,YAAa,MACpFwkC,EAAQ,GAuBd,OAtBIud,GACF,IAAU7yC,EAAOk3B,IACf,MAAM,WACJhlC,EAAU,KACVN,EACAQ,UAAYyD,IAAKi9C,EAAQ3gD,KAAM4gD,IAC7B7b,EAEF6b,IAAYF,EAAW1gD,MACvBP,IAASihD,EAAWjhD,MACpB+gD,EAAYzgD,KAAgBygD,EAAYE,EAAW3gD,aAEnDojC,EAAMn0B,KAAK,CACTrH,GAAI,GAAGjE,KAAOi9C,IACdn/C,KAAM,IAASq5C,YACft4C,MAAO,IAAQP,EAAE,yCACjBuN,OAAQ7L,EACR8L,OAAQmxC,MAKTxd,GA0OIn1B,EAAe,CAACrP,EAA2BwgD,KACtD,GAAIA,GAAYA,EAASjxC,OAAS,IAAM,IAAUixC,EAAS,GAAGz9C,QAAS,CACrE,MAAMm/C,EAAoC,IAAO1B,EAAS,GAAGz9C,OAAOs+C,QAAS,CAC3EI,aAAczhD,EAASsB,SAASD,OAElC,OAAO6gD,aAAW,EAAXA,EAAathC,IAEtB,OAAO,MA+CHuhC,EAAmB,CACvBniD,EACA0P,EACAR,EACAkzC,K,QAGA,MAAMC,EAA6B,QAAnB,EAAa,QAAb,EAAAriD,EAASwC,YAAI,eAAE07C,YAAI,eAAEoE,IACrC,IAAIC,EAxXmB,EAACC,EAAuBH,K,MAC/C,MAAMI,EAAe,IAAOD,EAAU,EAAGtzC,KAAMwzC,M,MAC7C,OAAOL,KAA6B,QAAjB,EAAAK,aAAW,EAAXA,EAAaxzC,YAAI,eAAEmzC,WAGxC,OAAuB,QAAhB,EAAAI,aAAY,EAAZA,EAAcz5C,UAAE,QAAI,IAmXP25C,CAAiBP,EAAYvc,MAAOwc,GACxD,GAAIA,EAAS,CACX,IAAKE,EAAe,CAClBA,EAAgBK,mBAAmBP,GACnC,MAAMQ,EApXgB,EAACR,EAAiB3yC,KAC5C,MAAMquC,EAAmB,IAAI,4CAAmC,IAAyB17C,QACzF,OAAO,IACLq7C,EAA2BhuC,EAAWquC,GACtC,CAACv+B,EAAKw+B,K,QACJ,MAAM8E,GAA+B,QAAhB,EAAU,QAAV,EAAA9E,EAAMx7C,YAAI,eAAE07C,YAAI,eAAEoE,MAAO,GAI9C,OAHID,IAAYS,GACdtjC,EAAInP,KAAK2tC,GAEJx+B,GAET,KAyW2BujC,CAAoBV,EAAS3yC,GAChDszC,EAAa,CACjB1hD,SAAU,CACRyD,IAAKw9C,EACL5gD,UAAWuN,EAAKQ,UAAU3O,IAAIO,SAASK,WAAa,IAEtDa,KAAM,CAAE6/C,WACRvhD,KAAM,KAEFmiD,EAAkE,CACtEj6C,GAAIu5C,EACJlhD,KAAM,MACNwB,KAAM,IAAS65C,QACfhtC,UAAW,OAAF,wBAAOR,EAAKQ,WAAS,CAAE3O,IAAKiiD,EAAYrD,aAAckD,IAC/D3zC,KAAM,OAAF,wBAAOA,EAAKA,MAAI,CAAEmzC,YACtBriD,SAAUgjD,GAEZZ,EAAYvc,MAAMx1B,QAlbmB,EACzCxN,EACAmG,EACAkG,KAEA,MAAM22B,EAAQ,GACR9B,EAAYkY,EAAoBp5C,GAStC,OARAgjC,EAAMx1B,KAAK,OAAD,QACRrH,KACAnG,OACA7C,SAAUkP,EAAKlP,SACfmK,aAAc,MACd+E,QACI60B,GAAa,KAEZ8B,GAoaEqd,CAA4B,IAASxG,QAAS6F,EAAeU,IAGpEb,EAAY5d,MAAMn0B,QApaqB,EACzCrQ,EACAmjD,K,UAEA,MAAMp+C,EAAwB,QAAlB,EAAA/E,aAAQ,EAARA,EAAUsB,gBAAQ,eAAEyD,IAE1By/B,EAAQ,GAUd,OAXoC,QAApB,EAAc,QAAd,EAAAxkC,aAAQ,EAARA,EAAUwC,YAAI,eAAE07C,YAAI,eAAEoE,MAEvBv9C,GACby/B,EAAMn0B,KAAK,CACTrH,GAAI,GAAGjE,KAAOo+C,IACdtgD,KAAM,IAASq5C,YACft4C,MAAO,IAAQP,EAAE,yCACjBuN,OAAQ7L,EACR8L,OAAQsyC,IAGL3e,GAoZqB4e,CAA4BpjD,EAAUuiD,IAGlE,IAAK1F,EAAmB78C,GAAW,CACjC,MAAMo+C,EAAuB,uCAC7B,IAAUA,EAAuBiF,IAC/B3zC,EAAU2zC,IACRjB,EAAY5d,MAAMn0B,QAAQyxC,EAA0B9hD,EAAU0P,EAAU2zC,OAG9EjB,EAAY5d,MAAMn0B,QAAQyxC,EAA0B9hD,EAAU0P,EAAU2vC,WAwB7DiE,EAAsB,CACjCC,EACA1gD,EACA6M,EACA6wC,KAEA,MAAM6B,EAAqB,CAAEvc,MAAO,GAAIrB,MAAO,IAsF/C,OArFA,IAAU+e,EAAkBnd,I,MAC1B,MAAMp2B,EAAO6wC,EAA6Bza,EAAK12B,EAAW6wC,GAC1D,OAAQ19C,GACN,KAAK,IAASw5C,UACd,KAAK,IAASF,UAAW,CACvB,MACMlsC,EAvGgB,EAACjQ,EAA2BkP,EAA0BQ,K,UAClF,MAAM8zC,EAAuB,aAAkBxjD,EAAgC,QAAtB,EAAA0P,EAAUixC,oBAAY,eAAEzxC,MAC3Eu0C,EAAmB,aAAkBD,EAAqB,GAAwB,QAApB,EAAA9zC,EAAUg0C,kBAAU,eAAEx0C,MACpFy0C,EAAsB,aAC1BH,EAAqB,GACA,QAArB,EAAA9zC,EAAU+2B,mBAAW,eAAEv3B,MAEzB,IAAI00C,EAAgB,GAIpB,OAHIH,EAAiBl0C,OAAS,IAC5Bq0C,EAAgBtD,EAAsBmD,EAAiB,GAAI/zC,IAEtD,OAAP,wBACKR,GAAI,CACPQ,UAAW,OAAF,sCACJR,EAAKQ,WAAS,CACjBixC,aAAc6C,EACd1c,SAAU2c,EACVhd,YAAakd,IACVC,MAqFgBC,CAAsBzd,EAlCA,EAC7CpmC,EACAijC,EACApgC,EACAsgC,GAAiC,KAG1B,CACLn6B,GAFY,IAAMhJ,EAAU,gBAG5BqB,KAAMrB,aAAQ,EAARA,EAAUsB,SAASD,KACzBwB,OACA7C,WACA0P,UAAW,OAAF,wBAAOuzB,GAAY,CAAEQ,wBAAyBN,IACvDj0B,KAAM,CACJpO,KAAM,aAAad,GACnB6jC,kBAAmBhhC,IAAS,IAASs5C,UACrC2H,YAAa,IAAYC,QAiBVC,CAAgC5d,EAAKp2B,EAAMnN,GACN6M,GAClD0yC,EAAYvc,MAAMx1B,QAAQ6wC,EAA4B9a,EAAKvjC,EAAMoN,EAAUP,IAC3E0yC,EAAY5d,MAAMn0B,QAzamB,EAACrQ,EAA2B0P,K,cACvE,MAAMyzC,EAA8B,QAAlB,EAAAnjD,aAAQ,EAARA,EAAUsB,gBAAQ,eAAEyD,IAChC6L,EAA+B,QAAtB,EAAc,QAAd,EAAA5Q,aAAQ,EAARA,EAAUwC,YAAI,eAAEoO,cAAM,eAAEoQ,IACvC,IAAKmiC,IAAcvyC,EAAQ,MAAO,GAClC,IAAIqzC,EACJ,MAAMC,EAAY,aAAatzC,GAO/B,OALEqzC,GADErzC,aAAM,EAANA,EAAQ9P,QAAS,IAAoBA,KAC1B4O,EAAU2vC,QAAQnwC,KAAKqX,KAAM+2B,GAAWA,EAAOh8C,SAASD,OAASuP,EAAOvP,MAE9C,QAA1B,EAAoB,QAApB,EAAAqO,EAAUw0C,UAAU,eAAEh1C,YAAI,eAAEqX,KAAM6f,GAAQA,EAAI9kC,SAASD,OAASuP,EAAOvP,MAGlF4iD,EACK,CACL,CACEj7C,GAAI,GAAGi7C,EAAW3iD,SAASyD,OAAOo+C,IAClCtgD,KAAM,IAASs5C,UACfv4C,MAAO,IAAQP,EAAE,uCACjBwN,OAAQsyC,EACRvyC,OAAQqzC,EAAW3iD,SAASyD,MAI3B,IAkZyBo/C,CAA8B/d,EAAK12B,IAC7D,MAAMw1B,EAAW,YAAsBkB,GACvC,YAAWlB,EAAUkd,EAAYvc,OACjC,MAEF,KAAK,IAASqW,YAAa,CACzB,MAAMhtC,EAAO,YACXk3B,EACAp2B,EACAnN,EACA,YAAqB,mBAQvB,GANI,aAAaujC,KAAS,aAAkB,OAC1Cl3B,EAAKA,KAAO,OAAH,wBACJA,EAAKA,MAAI,CACZ40C,YAAa,IAAYM,UAGvBhe,EAAItlC,OAAS,OAA8C,QAAZ,EAAAslC,EAAI9kC,gBAAQ,eAAEg0B,iBAAkB,CACnF,MAAMrlB,EAjJgB,EAC9BjQ,EACAkP,EACAQ,K,QAEA,MAAMquC,EAAmB,IAAI,4CAAmC,IAAyB17C,QACnFwgD,EAAmBnF,EAA2BhuC,EAAWquC,GAC/D,IAAIsG,EAAkB,aAAkBrkD,EAAU6iD,GAClD,GAAI7iD,EAASc,OAAS,IAAyBA,OAAoC,QAA5B,EAAsB,QAAtB,EAAA4O,EAAUixC,oBAAY,eAAEzxC,YAAI,eAAEK,QAAS,EAAG,CAC/F,MAAMi0C,EAAuB,aAAkBxjD,EAAU0P,EAAUixC,aAAazxC,MAChFm1C,EAAkBb,aAAoB,EAApBA,EAAsBrvC,OAAO,CAACqL,EAAK4mB,IAE5C,IAAI5mB,KADI,aAAkB4mB,EAAKyc,IAErC,IAEL,OAAO,OAAP,wBACK3zC,GAAI,CACPQ,UAAW,OAAF,wBAAOR,EAAKQ,WAAS,CAAEiwC,aAAc0E,OAgIvBC,CAAwBle,EAAKl3B,EAAMQ,GACpD0yC,EAAYvc,MAAMx1B,QAAQ6wC,EAA4B9a,EAAKvjC,EAAMoN,EAAUP,IAC3E0yC,EAAY5d,MAAMn0B,QACZX,EAAUg0C,WAAa5B,EAA0B1b,EAAK12B,EAAUg0C,YAAc,MAC9Eh0C,EAAU60C,WAAazC,EAA0B1b,EAAK12B,EAAU60C,YAAc,IAEpFpC,EAAiB/b,EAAK12B,EAAWR,EAAMkzC,GACvC,MAAMld,EAAW,YAAsBkB,GACvC,YAAWlB,EAAUkd,EAAYvc,OAEnC,MAEF,KAAK,IAAS0W,UAAW,CACvB,MAAMrtC,EAhO+B,EAC3ClP,EACAwkD,EACA3hD,EACA6M,K,MAEA,MAAQ3O,IAAK0jD,GAAeD,EACtBz/C,EAAM,IAAM0/C,EAAY,gBACxB/6C,EAAS,IAAM+6C,EAAY,kBAAmB,IAC9Cx8C,EAAc,IAAMw8C,EAAY,uBAAwB,IACxDvW,EAAc,IAAMuW,EAAY,iBAChCn2C,EAAa,YAAoBoB,EAAWw+B,GAClD,MAAO,CACLllC,GAAIjE,EACJ1D,KAAM,IAAMojD,EAAY,kBAAoB/6C,EAAO,8BACnD7G,OACA7C,WACA0P,UAAW,OAAF,UAAO80C,GAChBt1C,KAAM,CACJ0R,KAAsB,QAAjB,EAAA6jC,EAAW1hD,cAAM,eAAE6d,MAAO,GAC/B9f,KAAM,aAAa2jD,GACnB/gB,QAASz7B,EAAY,6BACrBmG,OAAQnG,EAAY,4BACpB07B,OAAQ17B,EAAY,4BACpB47B,mBAAmB,EACnBv1B,gBAuMeo2C,CAA8Bte,EAAKp2B,EAAMnN,EAAM6M,GAC5D0yC,EAAYvc,MAAMx1B,QAAQ6wC,EAA4B9a,EAAKvjC,EAAMqM,EAAMQ,IACvE0yC,EAAY5d,MAAMn0B,QApQiB,EAACrQ,GAA6BkP,WACvE,MAAMnK,EAAM,IAAM/E,EAAU,CAAC,WAAY,QACnC2kD,EAAa,IAAM3kD,EAAU,CAAC,SAAU,WAAY,IACpDwkC,EAAQ,GAyBd,OAxBA,IAAUmgB,EAAave,IACrB,MAAMwe,EAAU,IAAMxe,EAAK,CAAC,iBACtBye,EAAiB,IAAMze,EAAK,CAAC,YAC7B0e,EAAc,IAAO51C,EAAOsyC,GAChB,IAAMA,EAAK,CAAC,WAAY,WACrBoD,GAEf5C,EAAS,IAAM8C,EAAa,CAAC,WAAY,OAAQ,MACvD,GAAI9C,EAAQ,CACV,MAAM+C,EAAgB,IAAYvgB,EAAQxzB,GAASA,EAAKhI,KAAO,GAAGjE,KAAOi9C,KACrE+C,GAAiB,EACnBvgB,EAAMugB,GAAe71C,KAAK81C,SAAWH,EAErCrgB,EAAMn0B,KAAK,CACTrH,GAAI,GAAGjE,KAAOi9C,IACdn/C,KAAM,IAASoiD,QACfrhD,MAAO,IAAQP,EAAE,iDACjBuN,OAAQ7L,EACR8L,OAAQmxC,EACR9yC,KAAM,CAAE81C,QAASH,QAKlBrgB,GAwOyB0gB,CAA4B9e,EAAK12B,EAAU2wC,YACrE,MAAMnb,EAAW,YAAsBkB,GACvC,YAAWlB,EAAUkd,EAAYvc,OACjC,MAEF,KAAK,IAAS2W,OACZ,IAAKK,EAAmBzW,GAAM,CAC5B,MACMl3B,EA5M4B,EAC1ClP,EACAomC,EACAvjC,KAEA,MACE9B,KACEO,UAAU,KAAED,EAAI,IAAE0D,EAAG,OAAE2E,KAEvB08B,EACJ,MAAO,CACLp9B,GAAIjE,EACJ1D,KAAMA,IAAQqI,aAAM,EAANA,EAAS,+BACvB7G,OACA7C,WACA0P,UAAW,OAAF,UAAO02B,GAChBl3B,KAAM,CACJpO,KAAM,aAAaslC,EAAIrlC,KACvB8iC,mBAAmB,KA0LFshB,CAA6B/e,EAjpBf,EACnCpmC,EACA0P,K,YAEA,MACE5O,KAAMulC,EACN/kC,UAAU,KAAED,GAAM,KAClBmB,GACExC,EACEolD,EAAe,uCACfC,EAAsB,aAC1BrlD,EACA09C,EAA2BhuC,EAAW01C,IAElCE,EAAwD,QAArC,EAA+B,QAA/B,EAAA51C,aAAS,EAATA,EAAW61C,4BAAoB,eAAEr2C,YAAI,QAAI,GAC5Ds2C,EAAuC,QAAzB,EAAmB,QAAnB,EAAA91C,aAAS,EAATA,EAAWjM,gBAAQ,eAAEyL,YAAI,QAAI,GACjD,IAAIu2C,EAAe,GACnB,MAAM9F,EAAe9B,EAA0B79C,EAAU0P,GACnDg2C,EAAkB,IACtBJ,EACA,CAAC9lC,EAAKmmC,K,QACJ,MAAMC,EAAS,IAAMD,EAAM,gBACrBlH,GAAgC,QAAlB,EAAAj8C,aAAI,EAAJA,EAAMqjD,oBAAY,eAAEpH,eAAej8C,aAAI,EAAJA,EAAMi8C,aAI7D,IAA4B,IAHD,IAAYA,GAAa,UAAU,IAAE15C,IAC9D,OAAOA,IAAQ6gD,KAEc,CAC7BpmC,EAAI+lC,qBAAqBl1C,KAAKs1C,GAC9B,MAAMG,EAAkB,IAAMH,EAAM,sBAAuB,MAC3D,IAA+B,QAArB,EAAAj2C,aAAS,EAATA,EAAWg0C,kBAAU,eAAEx0C,KAAO62C,IAClCA,EAAIjlD,QAASglD,aAAe,EAAfA,EAAiBhlD,OAAQilD,EAAIzkD,SAASD,QAASykD,aAAe,EAAfA,EAAiBzkD,OAC/Eme,EAAIkkC,WAAWrzC,KAAK01C,KAI1B,OAAOvmC,GAET,CAAE+lC,qBAAsB,GAAI7B,WAAY,KAoC1C,OAjCIrd,IAAY,IAAoBvlC,OAClC2kD,EAAe,IACbD,EACA,CAACQ,EAAOC,K,4BACN,MAAMC,EAA0B,QAAb,EAAAD,aAAO,EAAPA,EAASzjD,YAAI,eAAE86C,OAC5B6I,EAAY,IAA4B,QAArB,EAAAz2C,aAAS,EAATA,EAAWg0C,kBAAU,eAAEx0C,KAAM,CACpD5N,SAAU,CAAED,KAAoC,QAA9B,EAAyB,QAAzB,EAAa,QAAb,EAAA4kD,aAAO,EAAPA,EAASzjD,YAAI,eAAE06C,kBAAU,eAAEl8B,WAAG,eAAE3f,MAClDP,KAAoC,QAA9B,EAAyB,QAAzB,EAAa,QAAb,EAAAmlD,aAAO,EAAPA,EAASzjD,YAAI,eAAE06C,kBAAU,eAAEl8B,WAAG,eAAElgB,KACtCM,WAA0C,QAA9B,EAAyB,QAAzB,EAAa,QAAb,EAAA6kD,aAAO,EAAPA,EAASzjD,YAAI,eAAE06C,kBAAU,eAAEl8B,WAAG,eAAE5f,aAExCglD,EACJD,IACgB,QAAhB,EAAAH,EAAMtC,kBAAU,eAAEt0C,OAAQ8vC,GAASA,EAAK59C,SAASD,OAAS8kD,EAAU7kD,SAASD,MAC1EkO,QAAS,EAOd,OANIlO,IAAS6kD,IACXF,EAAMviD,SAAW,IAAIuiD,EAAMviD,SAAUwiD,GACrCD,EAAMtC,WACJyC,IAAcC,EAAiB,IAAIJ,EAAMtC,WAAYyC,GAAaH,EAAMtC,YAGrEsC,GAET,CAAEtC,WAAY,GAAIjgD,SAAU,GAAI2C,KAAM,GAAIqgC,YAAa,KAEzD,CAAC,WAAU,mBAAiBtU,QAAQ,EAAGrxB,OAAMuB,OAAQgkD,M,MACnDZ,EAAaY,GAA+B,QAApB,EAAA32C,aAAS,EAATA,EAAY22C,UAAQ,eAAEn3C,KAC3CE,OAAQk3C,I,QACP,OAAuC,QAAhC,EAAwB,QAAxB,EAAAA,aAAc,EAAdA,EAAgBhlD,gBAAQ,eAAEoI,cAAM,eAAG,kCAAmCrI,IAE9E2gB,IAAKjhB,GAAS,OAAD,wBAAMA,GAAQ,CAAED,aAI7B,OAAP,gEACEC,IAAKf,GACDqlD,GAAuB,CAAEjG,SAAUiG,IAAsB,CAC7D1F,iBACG+F,GACAD,GAAY,CACfhH,YAAaN,EAAqBn+C,EAAU0P,MAikBrB62C,CAAsBngB,EAAK12B,GACa7M,GACzDu/C,EAAYvc,MAAMx1B,QAAQ6wC,EAA4B9a,EAAKvjC,EAAMqM,EAAMQ,IACnE02B,EAAItlC,OAAS,IAAoBA,KACnCshD,EAAY5d,MAAMn0B,QAxZa,EAACitC,EAAyB5tC,KACnE,MACEpO,UAAU,IAAEyD,EAAG,KAAE1D,IACfi8C,GACE,SAAE75C,EAAQ,WAAEigD,EAAU,WAAEa,GAAe70C,EACvC82C,EAA0B,KAC1B9C,aAAU,EAAVA,EAAYx0C,KAAKK,QAAS,EAAIm0C,EAAWx0C,KAAO,OAChDq1C,aAAU,EAAVA,EAAYr1C,KAAKK,QAAS,EAAIg1C,EAAWr1C,KAAO,IAEhDs1B,EAAQ,GAkCd,OAjCA,IAAU/gC,aAAQ,EAARA,EAAUyL,KAAO+2C,I,UACzB,MAAMC,EAA0B,QAAb,EAAAD,aAAO,EAAPA,EAASzjD,YAAI,eAAE86C,OAC5BmJ,EAA4C,QAAxB,EAAY,QAAZ,EAAAR,EAAQzjD,YAAI,eAAE06C,kBAAU,eAAEl8B,IACpD,GAAI3f,IAAS6kD,GAAcM,EAAwBj3C,OAAS,EAAG,CAC7D,MAAMm3C,EAAiB,IAAOF,EAA8C,CAC1EllD,SAAU,CAAED,KAAMolD,EAAkBplD,QAEtC,GACEqlD,GACA7E,EAAY4E,EAAkBrlD,cAC5B,YAAqB,aAAaslD,IACpC,CACA,MACEplD,UAAYyD,IAAKo+C,IACfuD,EACJliB,EAAMn0B,KAAK,CACTrH,GAAI,GAAGjE,KAAOo+C,IACdtgD,KAAM,IAAS8jD,gBACf/1C,OAAQ7L,EACR8L,OAAQsyC,EACRj0C,KAAM,CACJQ,UAAW,CACT3O,IAAKklD,EACLtG,aAAc9B,EAA0BP,EAAQ5tC,GAChD2vC,QAAS,CAAC/B,GACVsJ,cAAe,CAACF,GAChB98B,QAAS2zB,EAAkB0I,GAASr8B,gBAOzC4a,GA6W6BqiB,CAA4BzgB,EAAK12B,IAE3D0yC,EAAY5d,MAAMn0B,QA5WkB,EAC9CrQ,EACA0P,KAEA,MAAM,KACJ5O,EACAQ,UAAU,IAAEyD,EAAG,KAAE1D,IACfrB,GACE,qBAAEulD,EAAoB,WAAE7B,EAAU,WAAEa,GAAe70C,EACnD82C,EAA0B,KAC1B9C,aAAU,EAAVA,EAAYx0C,KAAKK,QAAS,EAAIm0C,EAAWx0C,KAAO,OAChDq1C,aAAU,EAAVA,EAAYr1C,KAAKK,QAAS,EAAIg1C,EAAWr1C,KAAO,IAEhDs1B,EAAQ,GAoCd,OAnCA,IAAU+gB,aAAoB,EAApBA,EAAsBr2C,KAAO43C,I,UACrC,MAAMC,EAA0B,QAAZ,EAAAD,aAAM,EAANA,EAAQtkD,YAAI,eAAE64B,QAClC,GACEh6B,KAAS0lD,aAAW,EAAXA,EAAa1lD,OACtBP,KAASimD,aAAW,EAAXA,EAAajmD,OACtB0lD,EAAwBj3C,OAAS,EACjC,CACA,MAAMy3C,EAAkC,QAAxB,EAAY,QAAZ,EAAAF,aAAM,EAANA,EAAQtkD,YAAI,eAAE06C,kBAAU,eAAEl8B,IAC1CgmC,GACE,IAAUR,EAA0BpgB,IAClC,MACE9kC,UAAYyD,IAAKi9C,EAAQ3gD,KAAM4gD,IAC7B7b,EAEF6b,IAAY+E,EAAQ3lD,MACpB,aAAgB2lD,EAAQ5lD,YAAYe,QAAU,YAAqB,aAAaikC,KAEhF5B,EAAMn0B,KAAK,CACTrH,GAAI,GAAGjE,KAAOi9C,IACdn/C,KAAM,IAAS8jD,gBACf/1C,OAAQ7L,EACR8L,OAAQmxC,EACR9yC,KAAM,CACJQ,UAAW,CACT3O,IAAK+lD,EACLnH,aAAc9B,EAA0B79C,EAAU0P,GAClD0vC,SAAU,CAACp/C,GACX4mD,cAAe,CAACxgB,YAQzB5B,GA2T6ByiB,CAAiC7gB,EAAK12B,IAElE,MAAMw1B,EAAW,YAAsBkB,GACvC,YAAWlB,EAAUkd,EAAYvc,OAEnC,MAEF,KAAK,IAASuW,iBAAkB,CAC9B,MAAMltC,EAAO,YACXk3B,EACAp2B,EACAnN,EACA,YAAqB,mBAEvBu/C,EAAYvc,MAAMx1B,QAAQ6wC,EAA4B9a,EAAKvjC,EAAMqM,EAAMQ,IACvE0yC,EAAY5d,MAAMn0B,QAvUuB,EAC/C62C,EACAC,KAEA,KAAKA,aAAgB,EAAhBA,EAAkBj4C,MACrB,MAAO,GAET,MAAM,KAAEA,GAASi4C,EA0BjB,OAzBcj4C,EAAKiF,OAAO,CAACqL,EAAK4nC,K,wCAC9B,MAAMC,EAA+D,QAAlC,EAAqB,QAArB,EAAAD,aAAe,EAAfA,EAAiB5kD,YAAI,eAAEoZ,mBAAW,eAAE0rC,yBACjEC,EAC+C,QAAnD,EAAqC,QAArC,EAA2B,QAA3B,EAAqB,QAArB,EAAgB,QAAhB,EAAAL,EAAY1kD,YAAI,eAAEglD,WAAG,eAAEC,YAAI,eAAE/sC,gBAAQ,eAAEgtC,oBAAY,eAAErmD,KACjDsmD,EAAiF,QAA/C,EAAiC,QAAjC,EAA2B,QAA3B,EAAqB,QAArB,EAAgB,QAAhB,EAAAT,EAAY1kD,YAAI,eAAEglD,WAAG,eAAEC,YAAI,eAAErf,YAAI,eAAEsf,oBAAY,eAAErmD,KACnFumD,EAA8C,QAAtB,EAAAR,EAAgBrkD,cAAM,eAAE8kD,oBACtD,GACER,GACAA,IAA+BE,GAC/BF,IAA+BM,GAC/BC,IACgB,QAAhB,EAAAV,EAAY1kD,YAAI,eAAEslD,iBAAiBh5C,SAAS84C,IAC5C,CACA,MAAMG,EAAS,GAAwB,QAArB,EAAAb,aAAW,EAAXA,EAAa5lD,gBAAQ,eAAEyD,OAAgC,QAAzB,EAAAqiD,aAAe,EAAfA,EAAiB9lD,gBAAQ,eAAEyD,MAC3Eya,EAAInP,KAAK,CACPrH,GAAI++C,EACJllD,KAAM,IAASmlD,qBACfC,UAAW,IAAUC,SACrBtkD,MAAO,IAAQP,EAAE,kCACjBuN,OAA4B,QAApB,EAAAs2C,EAAY5lD,gBAAQ,eAAEyD,IAC9B8L,OAAgC,QAAxB,EAAAu2C,EAAgB9lD,gBAAQ,eAAEyD,MAGtC,OAAOya,GACN,KAwSQ2oC,CAAkC/hB,EAAK12B,EAAUy3C,qBACjDrF,EAA0B1b,EAAK12B,EAAUg0C,eACzC5B,EAA0B1b,EAAK12B,EAAU60C,aAE9CpC,EAAiB/b,EAAK12B,EAAWR,EAAMkzC,GACvC,MAAMld,EAAW,YAAsBkB,GACvC,YAAWlB,EAAUkd,EAAYvc,OACjC,UAOCuc,GAOIgG,EAAmB,CAC9B7E,EACA7zC,EACA6wC,KAEA,MAAM8H,EAAe,GAarB,OAXA,IAAU9E,EAAkBnd,IAC1B,MAAM,IAAErhC,GAAQqhC,EAAI9kC,SACd0O,EAAO6wC,EAA6Bza,EAAK12B,EAAW6wC,GAC1D8H,EAAatjD,GAAO,YAClBqhC,EACAp2B,EACA,IAAS4xC,SACT,YAAqB,qBAIlByG,GAiCIC,EAA6B,CACxCvnD,EACA2O,KAEA,MAAMquC,EAAmB,4CACzB,QAAS,IAAOL,EAA2BhuC,EAAWquC,GAAoB8B,IAAS,UACjF,OAAgD,QAAhD,EAAoB,QAApB,EAAY,QAAZ,EAAA9+C,EAAIO,gBAAQ,eAAEoI,cAAM,eAAG,YAAyB,eAAE2/B,WAAWwW,EAAMv+C,SAASD,SAInEknD,EAAmC74C,I,gBAC9C,MAAM84C,EAAkF,QAAhC,EAA0B,QAA1B,EAAA94C,aAAS,EAATA,EAAW+4C,uBAAe,eAAEv5C,YAAI,QAAI,GAKtFw5C,IAHqB,QAAzB,EAAmB,QAAnB,EAAAh5C,aAAS,EAATA,EAAWi5C,gBAAQ,eAAEz5C,YAAI,eAAEK,QAAS,EAChCG,EAAUi5C,SAASz5C,KACa,QAAhC,EAA0B,QAA1B,EAAAQ,aAAS,EAATA,EAAWk5C,uBAAe,eAAE15C,YAAI,QAAI,IACiCE,OACxEy5C,GAAmF,SAAlEA,EAAavnD,SAASoI,OAAO,kCAEjD,OAAO8+C,EAA6Br0C,OAClC,EAAG20C,yBAA0B5K,EAAM6K,2BAA4Bn4C,GAAUo4C,K,UACvE,MAAMC,EAAuC,QAAxB,EAAmB,QAAnB,EAAa,QAAb,EAAAD,aAAO,EAAPA,EAASxmD,YAAI,eAAE07C,YAAI,eAAEl9B,WAAG,eAAE3f,KAM/C,OALAqnD,EAA0BQ,UACvBC,GAAgBA,EAAY7nD,SAASD,OAAS4nD,IAC5C,EACD/K,EAAK7tC,KAAK24C,GACVp4C,EAAOP,KAAK24C,GACT,CAAEF,yBAA0B5K,EAAM6K,2BAA4Bn4C,IAEvE,CAAEk4C,yBAA0B,GAAIC,2BAA4B,MAInDK,EAAgC,CAC3CroD,EACAsoD,MAES,IAAOA,EAAexJ,IAAS,UACtC,OAAgD,QAAhD,EAAoB,QAApB,EAAY,QAAZ,EAAA9+C,EAAIO,gBAAQ,eAAEoI,cAAM,eAAG,YAAyB,eAAE2/B,WAAWwW,EAAMv+C,SAASD,QAInEioD,EAAuB,CAAC14C,EAAcC,KACjD,IAAKD,IAAWC,GAAUD,IAAWC,EACnC,OAAOX,QAAQC,SAKjB,MA/E0C,EAC1CS,EACAC,K,MAEA,IAAKD,IAAWC,GAAUD,IAAWC,EACnC,OAAOX,QAAQC,SAEjB,MAAMo5C,EAAiB,IAAO34C,EAAQ,UACtC,IAAIstC,EAAO,GACX,GAAIrtC,EAAO/P,OAAS,IAClBo9C,EAAO,CACLoE,IAAiB,QAAZ,EAAAzxC,aAAM,EAANA,EAAQrO,YAAI,eAAE6/C,aAEhB,CACL,MAAMmH,EAAa,IAAM34C,EAAQ,iBACjCqtC,EAAO,CACLl9B,IAAK,CACH5f,WAAYyP,EAAOzP,WACnBN,KAAM+P,EAAO/P,KACbO,KAAMmoD,IAIZ,MAAMC,EAAgB,OAAH,wBACdF,GAAc,CACjB/mD,KAAM,OAAF,wBAAO+mD,EAAe/mD,MAAI,CAAE07C,WAElC,OAAO,aAAU,aAAS,aAAattC,IAAU64C,IAoD1CC,CAHW,YAAY94C,GACZ,YAAYC,KAyBnB84C,EAAmC,CAC9C/4C,EACAC,K,UAEA,IAAKD,IAAWC,GAAUD,IAAWC,EACnC,OAAOX,QAAQC,SAEjB,MAAMy5C,EAAY,YAAYh5C,GACxBi5C,EAAY,YAAYh5C,GACxBi5C,EAAqC,QAAjB,EAAAD,aAAS,EAATA,EAAW9mD,cAAM,eAAE8kD,oBACvCkC,EAA0D,QAA5B,EAAe,QAAf,EAAAF,aAAS,EAATA,EAAWrnD,YAAI,eAAEoZ,mBAAW,eAAE0rC,yBAC5D0C,EAAmB,IAAOJ,EAAW,UAE3C,IAAKE,IAAsBC,EACzB,OAAO75C,QAAQC,OACb,IAAIM,MACF,IAAQpN,EACN,2HAMR,MAAM4mD,EAAoB,OAAH,wBAClBD,GAAgB,CACnBxnD,KAAM,OAAF,wBACCwnD,EAAiBxnD,MAAI,CACxBslD,iBAAkB,CAACgC,GACnBtC,IAAK,CACHC,KAAM,CACJyC,QAAQ,EACR9hB,KAAM,CAAEsf,aAAc,CAAErmD,KAAM0oD,EAA6BjlD,IAAK,cAChE4V,SAAU,CAAEgtC,aAAc,CAAErmD,KAAM0oD,EAA6BjlD,IAAK,mBAEtE2N,IAAK,CAAEy3C,QAAQ,QAIrB,OAAO,aAAU,aAAS,aAAaF,IAAoBC,IAGhDE,GAA6B,CACxC7K,EACA7a,KAEA,MAAM,UAAE/0B,GAAc4vC,EAAUzvC,UAC1BgB,EAAS4zB,EAAW50B,UAC1B,IAAKgB,KAAWnB,aAAS,EAATA,EAAW3O,KACzB,OAAOmP,QAAQC,SAEjB,MAAM05C,EAAY,YAA0Bh5C,GAC5C,MAvEsC,EAACu5C,EAAyBv5C,K,MAChE,IAAKu5C,IAAWv5C,EACd,OAAOX,QAAQC,SAEjB,MAAMk6C,EAAkB,IAAOD,EAAQ,UACjClM,EAAO,CACXl9B,IAAK,CACH5f,WAAYyP,EAAOzP,WACnBN,KAAM+P,EAAO/P,KACbO,KAAqB,QAAf,EAAAwP,EAAOvP,gBAAQ,eAAED,OAGrBooD,EAAgB,OAAH,wBACdY,GAAe,CAClB7nD,KAAM,OAAF,wBAAO6nD,EAAgB7nD,MAAI,CAAE06C,WAAY,OAAF,UAAOgB,OAGpD,OAAO,aAAU,aAAS,aAAamM,IAAmBZ,IAsDnDa,CAAyB56C,EAAU3O,IAAK8oD,IAGpCU,GAAwBxqD,IACnC,IAAKA,EACH,OAAO,EAET,MACEuB,UAAU,OAAEoI,IACV3J,EAGJ,UAAU2J,aAAM,EAANA,EAAS,SAA8BA,aAAM,EAANA,EAAS,U,kCCr8C5D,0NAEO,MAAM8gD,EAA2B,iBAC3BC,EAAwB,cACxBC,EAAsC,oBACtCC,EAA0B,gBAE1BC,EAA2B,CACtC,CACE/nD,KAAM,IAA0BgoD,OAChC7hD,GAAI2hD,EAEJ3pD,SAAU,yBACVmmB,SAAU,EACVnR,OAAO,GAET,CACEnT,KAAM,IAA0B0iB,KAChCvc,GAAIwhD,EAEJxpD,SAAU,qBACVmmB,SAAU,GACVnR,OAAO,GAET,CACEnT,KAAM,IAA0B0iB,KAChCvc,GAAIyhD,EAEJzpD,SAAU,kBACVmmB,SAAU,IACVnR,OAAO,GAET,CACEnT,KAAM,IAA0BgoD,OAChC7hD,GAAI0hD,EAEJ1pD,SAAU,iCACVmmB,SAAU,GACVnR,OAAO,IAIE80C,EAA+B,CAACN,EAA0BC,I,kCC1CvE,wFAIA,MAAMM,EAAqB/qD,I,UACzB,MAAMmF,EAA2C,QAA9B,EAAwB,QAAxB,EAAc,QAAd,EAAAnF,aAAQ,EAARA,EAAUwC,YAAI,eAAE4C,gBAAQ,eAAE5C,YAAI,eAAE2C,WACnD,OAAO,IACLA,EACCutB,GAAcA,EAAU4e,gBAAkB5e,EAAU6e,eAAiB7e,EAAU8e,eAI9EwZ,EAAkB,CAACnmD,EAAgB9D,K,YACvC,MAAM,KACJD,EACAQ,UAAU,KAAED,EAAI,UAAEM,IAChBZ,EACEoJ,EAAetF,EAAMoqB,IAAM,aAAaluB,GAAOD,EAC/CqE,EAAsC,QAAzB,EAAmB,QAAnB,EAAS,QAAT,EAAApE,aAAG,EAAHA,EAAKyB,YAAI,eAAE4C,gBAAQ,eAAE5C,YAAI,eAAE2C,WAE9C,MAAO,WAAWxD,KAAawI,KAAgB9I,gBADV,QAAf,EAAA8D,aAAU,EAAVA,EAAa,UAAE,eAAE9D,sBAK5B4pD,EAAkB,CAACpmD,EAAgB9D,KACvC,CAELC,SAAU,gCACVkqD,OAAQH,EAAkBhqD,GAC1ByD,KAAMwmD,EAAgBnmD,EAAO9D,GAC7BmB,aAAc,CACZC,MAAO0C,EAAMzC,SACbpC,SAAU6E,EAAMxC,OAChBhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,YAMC4oD,EAAmB,CAACtmD,EAAgB9D,KACxC,CAELC,SAAU,iCACVkqD,QAASH,EAAkBhqD,GAC3ByD,KAAMwmD,EAAgBnmD,EAAO9D,GAC7BmB,aAAc,CACZC,MAAO0C,EAAMzC,SACbpC,SAAU6E,EAAMxC,OAChBhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,U,kCCpDZ,uGAsBO,MAAM6oD,EAA6C,CACxDC,OAAQ,CACNvqD,EACAC,EACAg8C,EACA96C,KACW,CACX+G,GAAI,kBACJpF,MAAO,IAAQP,EAAE,8BAA+B,CAAEvC,KAAMA,EAAKA,OAC7DwqD,IAAK,IACH,YAAY,CACVxqD,OACAd,SAAUe,EACVkB,YAEJC,aAAc,aAAepB,EAAMC,EAAK,YAE1CwqD,KAAM,CAACzqD,EAAeC,KAAiC,CACrDiI,GAAI,gBACJpF,MAAO,IAAQP,EAAE,4BAA6B,CAAEvC,KAAMA,EAAKA,OAC3DwqD,IAAK,CACH9mD,KAAS,aAAgBzD,EAAKD,EAAKmuB,IAAM,aAAkBnuB,GAAQA,EAAKA,MAAlE,SAGRoB,aAAc,aAAepB,EAAMC,EAAK,YAE1CyqD,aAAc,CAAC1qD,EAAeC,KAAiC,CAC7DiI,GAAI,cACJpF,MAAO,IAAQP,EAAE,2BACjBioD,IAAK,IACH,YAAoB,CAClBxqD,OACAd,SAAUe,EACV0qD,UAAU,IAEdvpD,aAAc,aAAepB,EAAMC,EAAK,WAE1C2qD,kBAAmB,CAAC5qD,EAAeC,KAAiC,CAClEiI,GAAI,mBACJpF,MAAO,IAAQP,EAAE,gCACjBioD,IAAK,IACH,YAAyB,CACvBxqD,OACAd,SAAUe,EACV0qD,UAAU,IAEdvpD,aAAc,aAAepB,EAAMC,EAAK,WAE1CN,YAAa,CAACK,EAAeC,KAAiC,CAC5DiI,GAAI,iBACJpF,MAAO,IAAQP,EAAE,8BACjBioD,IAAK,IACH,YAA2B,CACzBnhD,aAAcrJ,EACdd,SAAUe,IAEdmB,aAAc,aAAepB,EAAMC,EAAK,QAAS,WAEnD4qD,kBAAmB,CAAC7qD,EAAeC,KAAiC,CAClEiI,GAAI,oBACJpF,MAAO,IAAQP,EAAE,iCACjBioD,IAAK,IACH,YAAiB,CACfxqD,OACAd,SAAUe,EACV0qD,UAAU,IAEdvpD,aAAc,aAAepB,EAAMC,EAAK,WAE1C6qD,kBAAmB,CAAC9qD,EAAeC,KAAiC,CAClEiI,GAAI,kBACJpF,MAAO,IAAQP,EAAE,gCACjBioD,IAAK,IACH,YAAiB,CACfnhD,aAAcrJ,EACdd,SAAUe,EACV8qD,eAAgB,aAEpB3pD,aAAc,aAAepB,EAAMC,EAAK,WAE1CL,WAAY,CAACI,EAAeC,KAAiC,CAC3DiI,GAAI,cACJpF,MAAO,IAAQP,EAAE,2BACjBioD,IAAK,CACH9mD,KAAS,aACPzD,EACAD,EAAKmuB,IAAM,aAAkBnuB,GAAQA,EAAKA,MAFtC,mBAKRoB,aAAc,aAAepB,EAAMC,EAAK,YAI/B+qD,EAA2B,CACtChrD,EACAC,EACAkB,IAEO,CACLmpD,EAAoBI,aAAa1qD,EAAMC,GACvCqqD,EAAoBM,kBAAkB5qD,EAAMC,GAC5CqqD,EAAoBG,KAAKzqD,EAAMC,GAC/BqqD,EAAoBC,OAAOvqD,EAAMC,OAAKX,EAAW6B,K,kCCvHrD,IAAY8pD,EAYAC,EAQAC,EApBZ,+GAAYF,GACV,6BACA,yBACA,8BACA,8BACA,wBACA,qBACA,wCACA,wBACA,yBATF,CAAYA,MAAQ,KAYpB,SAAYC,GACV,6BACA,kCACA,8BACA,sCACA,iDALF,CAAYA,MAAQ,KAQpB,SAAYC,GACV,cACA,kBAFF,CAAYA,MAAW,M,kCCzBvB,+BAoEe,IArDiD,EAC9DjjD,KACAkjD,KAAK,EACLC,KAAK,EACLC,eAAe,EACfC,aAAa,4BAAgBr2C,MAC7Bs2C,eAAe,MAEXC,OAAOC,UAAUC,UAAU39C,SAAS,QAGpC,gBAAC,UAAO,CAAC9F,GAAIA,GACX,0BACEA,GAAIA,EACJqiC,EAAG,IAAmB,KAAf+gB,KACPhhB,EAAG,IAAmB,KAAfghB,KACPloB,MAAU,IAAqB,GAAfkoB,EAAT,IACPjoB,OAAW,IAAqB,GAAfioB,EAAT,KAER,kCAAgBM,GAAG,cAAcN,aAAcA,IAC/C,4BAAUF,GAAIA,EAAIC,GAAIA,EAAIp0B,OAAO,eACjC,2BAASs0B,WAAYA,EAAYC,aAAcA,IAC/C,+BAAaK,IAAI,aAAaC,SAAS,OACvC,+BACE,oCACA,+BAAaF,GAAG,qBAQxB,gBAAC,UAAO,CAAC1jD,GAAIA,GACX,0BACEA,GAAIA,EACJqiC,EAAG,IAAmB,KAAf+gB,KACPhhB,EAAG,IAAmB,KAAfghB,KACPloB,MAAU,IAAqB,GAAfkoB,EAAT,IACPjoB,OAAW,IAAqB,GAAfioB,EAAT,KAER,gCACEF,GAAIA,EACJC,GAAIA,EACJC,aAAcA,EACdC,WAAYA,EACZC,aAAcA,O,kCC7DxB,sMAwBA,MAeMO,EAA4B,CAAC77C,EAAY60B,KAC7C,MAAMinB,EAAiB97C,EACpB1Q,YACAysD,iBACA/qC,IAAKpO,GAAMA,EAAE3C,YAAY+7C,SAE5B,OAAOnnB,EACJz2B,OAAQ02B,IACP,GAAIA,EAAEknB,UAAYh8C,EAAK1Q,YAAY0sD,QACjC,OAAO,EAET,GAAIlnB,EAAEknB,UAAYh8C,EAAKC,YAAY+7C,SAAWF,EAAeh+C,SAASg3B,EAAEknB,SACtE,OAAO,EAET,GAAIlnB,EAAE5lC,YAAc,IAClB,OAAO,EAET,OAAQ8Q,EAAK9Q,WACX,KAAK,IACH,OAAO4lC,EAAE5lC,YAAc,KAAyB4lC,EAAE5lC,YAAc,IAClE,KAAK,IACH,OAAO,EACT,KAAK,IACH,OAAO4lC,EAAE5lC,YAAc,KAAwB4lC,EAAE5lC,YAAc,IACjE,KAAK,IAEL,KAAK,IACH,OAAO,EACT,KAAK,IACH,OAAO4lC,EAAE5lC,YAAc,IACzB,QACE,OAAO,KAGZsS,KAAK,CAACy6C,EAAIC,IAAOD,EAAGzT,WAAW2T,cAAcD,EAAG1T,cAGxC4T,EAAsB,CAAC7sD,EAAmBR,KACrD,MAAMm7B,EAAc,YAAYn7B,EAAQO,aAElCulC,EAAQ9lC,EACX+1C,gBACAuX,cACAj+C,OAAQwE,GAAM,iBAAOA,KAAOA,EAAEghC,WAC3B0Y,EAAmBT,EAA0B9sD,EAAS8lC,GAE5D,MAAO,CACL78B,GAAI,wBACJpF,MAAO,IAAQP,EAAE,2BACjBioD,IAAK,KACH,YAAoB,CAAEt6C,KAAMjR,EAASutD,sBAEvCl2C,SAAUk2C,EAAiB/9C,QAAU,EACrCrN,aAAc,aAAe3B,EAAS26B,EAAa,YAI1CqyB,EAAwB,CAAChtD,EAAmBR,KACvD,MAAMm7B,EAAc,YAAYn7B,EAAQO,aACxC,MAAO,CACL0I,GAAI,mBACJpF,MAAO,IAAQP,EAAE,6BACjBioD,IAAK,KACH,YAAiBvrD,IAEnBmC,aAAc,aAAe3B,EAAS26B,EAAa,YAO1CsyB,EAAc,CAACx8C,EAAY60B,KACtC,MAAM5lC,EAAyB,GACzBqtD,EAAmBT,EAA0B77C,EAAM60B,GAEzD,OADA5lC,EAAQoQ,KA1Fa,EAACW,EAAYs8C,KAClC,MAAMpyB,EAAc,YAAYlqB,EAAK1Q,aAC/Bk6B,EAAgB,aAAS,aAAaU,IAE5C,MAAO,CAELl6B,SAAU,0BACVC,SAAU,KACR,YAAoB,CAAE+P,OAAMs8C,sBAE9Bz1C,WAAYy1C,EAAiB/9C,QAAU,EACvCrN,aAAc,aAAes4B,EAAeU,EAAa,YA+E9CuyB,CAAez8C,EAAMs8C,IAC3BrtD,I,kCCnHT,kCAAO,MAAMytD,EAAuBnoD,GAClC,sEAEEE,KAAMkoD,GAAMA,EAAED,oBAAoBnoD,K,kCCHtC,wDAKO,MAAMqoD,EAA6B,CACxC9sD,EACAC,EACA8sD,K,MAEA,MAAO,CACL7kD,GAAI,qBACJpF,MAAO,IAAQP,EAAE,sCACjBwqD,aAAcA,UAAgB,iBAC9BvC,IAAK,IACH,YAAqB,CACnBnhD,aAAcrJ,EACdd,SAAUe,EACV0qD,UAAU,EACVqC,mBAAoB,KAExB5rD,aAAc,CACZK,KAAM,QACNJ,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfV,UAAwB,QAAb,EAAAZ,aAAG,EAAHA,EAAKO,gBAAQ,eAAEK,c,kCCzBhC,ydAcO,MAAMosD,EAA6B,cAC7BC,EAA6B,SAE1C,IAAYC,GAAZ,SAAYA,GAEV,cAEA,gBAJF,CAAYA,MAAqB,KAO1B,MAAMC,EAAkBC,IACzBA,EAAY5+C,OAAS,EACvB,aAAiBw+C,EAA4BI,GAE7C,aAAoBJ,IAIXK,EAAkB,KAC7BF,EAAe,KAEJG,EAAmB,KAC9B,aAAoBL,IAGTM,EAAW,KACtBF,IACAC,KAGWE,EAA+Bz0C,I,QAC1C,MAAM00C,EAAqC,QAA1B,EAAc,QAAd,EAAA10C,aAAK,EAALA,EAAO20C,eAAO,eAAEC,kBAAU,eAAEF,SAC7C,OAAOA,EAAWA,EAAS7gD,IAAI,oBAAsB,IAAyBqU,IAAK+C,GAAMA,EAAE/b,KAGhF2lD,EAA6B70C,I,QACxC,MAAM00C,EAAqC,QAA1B,EAAc,QAAd,EAAA10C,aAAK,EAALA,EAAO20C,eAAO,eAAEC,kBAAU,eAAEF,SAC7C,OAAOA,EAAWA,EAAS7gD,IAAI,kBAAoB,IAGxCihD,EAAyB,K,QACpC,OAC4C,QAD5C,EAA4C,QAA5C,eAAiBb,UAA2B,QAC5C,aAAiBC,UAA2B,QAC5C,IAEWa,EAAgB,CAAC7lD,EAAY4gB,IACnCA,EAGEA,EAAQrD,KAAMxB,GAAMA,EAAE/b,KAAOA,GAF3B,KAKE8lD,EAAa,CAAC9lD,EAAY4gB,K,QACrC,IAAKA,EACH,OAAO,EAGT,KAD6E,QAAtD,EAA+C,QAA/C,EAAAilC,EAAc,IAAyBjlC,UAAQ,eAAE5T,aAAK,UAE3E,OAAO,EAET,MAAM5G,EAASy/C,EAAc7lD,EAAI4gB,GACjC,OAAIxa,GAAUA,EAAOvM,OAAS,IAA0BgoD,QAC/Cz7C,EAAO4G,OAgBL+4C,EAAW,CAACjuD,EAAgC8oB,K,QACvD,IAAKA,IAAY9oB,EACf,OAAO,EAIT,OAA0B,IADP8oB,EAAQxa,OAAQ2V,GAAMA,EAAEliB,OAAS,IAA0B/B,MAAQikB,EAAE/O,OACzEzG,QAK2B,QAAnC,EAA4B,QAA5B,EAAAs/C,EAAc/tD,EAAM8oB,UAAQ,eAAE5T,aAAK,W,kCCvG5C,iR,kCCAA,qIAkBA,MAAM3N,EAAqB,CACzB,GACA,GACA,EAAW,cAAe,qBAAsB,sBAChD,EAAW,cAAe,sBAC1B,EAAW,cAAe,sBAC1B,IAAMC,aAGK0mD,EAAoD,EAC/DjuD,MACAD,OACAD,cACAkG,mBACAkoD,iBAEA,MAAM,EAAE5rD,GAAM,2BACd,OACE,gCACE,gBAAC,IAAS,CAACM,UAAW0E,EAAmB,IACvC,gBAAC,KAAY,CAACvH,KAAMA,EAAMO,KAAMN,EAAIO,SAASD,KAAMM,UAAWZ,EAAIO,SAASK,aAE7E,gBAAC,IAAS,CACRgC,UAAW,EAAW0E,EAAmB,GAAI,iBAC7CG,SAAS,aAET,gBAAC,KAAY,CAAC1H,KAAK,YAAYO,KAAMN,EAAIO,SAASK,aAEpD,gBAAC,IAAS,CAACgC,UAAW0E,EAAmB,IACvC,gBAAC,OAAI,CACHZ,GAAO,aAAa3G,EAAMC,EAAIO,SAASD,KAAMN,EAAIO,SAASK,WAAtD,QACJ4C,MAAM,QAELlB,EAAE,qDAAsD,CACvDoF,eAAgB1H,EAAIgC,OAAOI,UAAY,EACvCuF,aAAc3H,EAAIyB,KAAKW,aAI7B,gBAAC,IAAS,CAACQ,UAAW0E,EAAmB,IACvC,gBAAC,IAAS,CAACvH,KAAMA,EAAM4I,OAAQ3I,EAAIO,SAASoI,UAE9C,gBAAC,IAAS,CAAC/F,UAAW0E,EAAmB,IACvC,gBAAC,KAAQ,CAACnC,SAAUnF,EAAIyB,KAAK0D,SAAUvE,UAAWZ,EAAIO,SAASK,aAEjE,gBAAC,IAAS,CAACgC,UAAW0E,EAAmB,IACtCtB,GACC,gBAAC,KAAa,CAAC9G,QAASY,EAAaC,KAAMA,EAAMd,SAAUe,EAAKkuD,WAAYA,OAMtFD,EAAiBhoD,YAAc,mBASxB,MAAMkoD,EAAsB,IAC1B,CACL,CACE3qD,MAAO,IAAQlB,EAAE,eACjByF,UAAW,gBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAO,IAAQlB,EAAE,oBACjByF,UAAW,qBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,IACvCW,GAAI,aAEN,CACEzE,MAAO,IAAQlB,EAAE,iBACjB4F,SAAU,cACVF,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAO,IAAQlB,EAAE,iBACjByF,UAAW,kBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAO,IAAQlB,EAAE,uBACjByF,UAAW,gBACXC,WAAY,CAAC,KACbxD,MAAO,CAAE5B,UAAW0E,EAAmB,KAEzC,CACE9D,MAAO,GACPgB,MAAO,CAAE5B,UAAW0E,EAAmB,MAI7C6mD,EAAoBloD,YAAc,uB,kCCvHlC,wMAmBO,MAAMmoD,EAA0BlvD,GACf,aAA0CA,GAC3C+hB,IAAKotC,IAExB,OADmB,aAAkBA,IAEnC,KAAK,IAAeC,SAClB,OACE,gBAAC,qBAAkB,CAACzrD,MAAOwrD,EAAOxrD,MAAOkB,IAAKsqD,EAAOpmD,IAClDmmD,EAAwBC,EAA6BprB,WAG5D,KAAK,IAAesrB,WAClB,OACE,gBAAC,WAAc,CAACxqD,IAAKsqD,EAAOpmD,IACzBomD,EAAOxrD,OAAS,sBAAID,UAAU,iCAAiCyrD,EAAOxrD,OACtEurD,EAAwBC,EAA6BprB,WAG5D,QACE,OACE,gBAAC,IAAc,CAACl/B,IAAKsqD,EAAOpmD,GAAIumD,OAAQH,EAAkBppD,UAAW,uBAMlEwpD,EAAqB,CAACC,EAAcC,KAA2B,CAC1E,2BAA4B,CAAE3vD,QAAS0vD,EAAOC,qBAGnCC,EAAqB,CAAC5vD,EAAe2vD,KAA2B,CAC3E,2BAA4B,CAAE3vD,UAAS2vD,qBAG5BE,EAAsB7vD,I,QACjC,MAAMC,EAAW,YAAYD,IACvB,QAAE8vD,GAAmC,QAAvB,EAAiB,QAAjB,EAAA9vD,EAAQ8P,iBAAS,eAAEX,YAAI,QAAI,GAC/C,OAAO,OAAP,sBACE,mBAAoBnP,GAChBC,EAAW,CAAE,CAAC,aAAaA,IAAYA,GAAa,IACpD6vD,EAAU,CAAE,cAAe,CAAEA,UAAS7vD,aAAe,M,8eCyG9C,uBArG4B,I,OAAA,UACzC2D,EAAS,YACTmsD,EAAW,KACXC,EAAI,KACJjvD,EAAI,QACJf,EAAO,SACPiwD,EAAQ,SACRhsB,EAAQ,sBACRisB,EAAqB,cACrBC,EAAa,gBACbC,EAAe,0BACfC,EAA4B,QAAO,oBACnCC,EAAmB,aACnBC,GAAY,EACTpW,EAAI,IAdkC,sMAgBzC,MAAOqW,EAAaC,GAAkB,YAAwB,IACvDC,EAAOC,GAAoB,YAAS,IAAK,IAAK,CAACH,IAChDI,EAAgB,yBAAeD,EAAkBV,IACjD,MAAE9rB,EAAK,OAAEC,GAAWpkC,EAAQ22C,gBAC5Bka,EAAK1sB,EAAQ,EACb2sB,EAAK1sB,EAAS,EACdjJ,EAAc,YAA0Bn7B,EAAQ8P,WAChD2qB,EAAgB,aAAS,aAAaU,IACtC41B,EAA2B,GAAdhB,EACbpX,EAAa,aAAgB,CACjCv2C,MAAOq4B,aAAa,EAAbA,EAAep4B,SACtBG,KAAM6tD,EACNpwD,SAAUw6B,aAAa,EAAbA,EAAen4B,OACzBhB,KAAM65B,EAAY55B,SAASD,KAC3BM,UAAWu5B,EAAY55B,SAASK,aAE3BovD,GAAY,YAAgBhxD,EAAQy5C,WAAiC,QAArB,EAAAte,aAAW,EAAXA,EAAa55B,gBAAQ,eAAEoI,QACxEsnD,EAAY,YAAaP,GAASN,GAClCc,EAAWnwD,GAAQ,YAA6BA,GAEhDowD,EAAenxD,EAAQ+1C,gBAAgBf,WAAWoc,kBAClDC,EAAcX,GAASN,GAAmBe,IAAiB,oBAAkBG,IAC7EC,EAAiBL,EACnB,IAAW,oBAAqB,CAC9B,CAAC,qBAAqBA,EAASM,QAAQC,gBAAmBP,EAASQ,YAErE,GAMJ,OALA,YAAgB,KACTpB,GACHG,EAAgBkB,IAAUA,IAE3B,CAACrB,IAEF,gBAAC,QAAK,CAACrnD,GAAIynD,GAASN,EAAkB,YAAY,iBAChD,qBAAGnvC,IAAK2vC,EAAa,eAAgB5wD,EAAQy5C,YAC3C,gBAAC,cAAW,eACV71C,UAAW,IACT,gBACAA,EACA2sD,GAAgB,iBAAeA,GAC/B,CACE,cAAeS,IAGnBY,eAAgB,KAChB5xD,QAASA,EACTixD,UAAWA,EACXY,WAAYnB,GAASN,IAAoBe,IAAiB,oBAAkBW,KAC5E5B,sBACEvX,GAAcwY,IAAiB,oBAAkBG,KAAOpB,EAE1DC,cAAeA,EACfC,gBAAiBA,EACjB2B,MAAOb,aAAQ,EAARA,EAAUc,SACjBC,WAAYf,aAAQ,EAARA,EAAUQ,UACtBH,eAAgBA,EAChBW,sBAAuBb,GACnBlX,GAEJ,oCAAgB,qBACb6V,GAAQqB,GACP,gCACE,0BACEc,KAAK,sCACLtB,GAAIA,EACJC,GAAIA,EACJ5uC,EAAG6tC,EAAc,IAEnB,yBACEzkB,EAAGulB,EAAKE,EACR1lB,EAAGylB,EAAKC,EACR5sB,MAAoB,EAAb4sB,EACP3sB,OAAqB,EAAb2sB,EACRqB,UAAWpC,KAIhBqB,GAAeptB,S,mYClIb,IAhBoD,I,IAAA,SACjEA,EAAQ,OACR+V,EAAM,EACN1O,EAAC,EACDD,GAAC,EACEgnB,EAAmB,IAL2C,+BAM7D,OACJ,gBAAC,IAAS,eAAC/mB,EAAGA,EAAGD,EAAGA,EAAG2O,OAAQA,GAAYqY,GACzC,qBAAGrnC,UAAW,cAAcgvB,EAAS,OAAOA,EAAS,MACnD,iCAAe7V,MAAO6V,EAAQ5V,OAAQ4V,EAAQ1V,MAAO,CAAEguB,SAAUtY,IAC9D/V,O,odCUT,MAIMsuB,EAAmC,CACvC/iD,OAAQ,MA+HK,uBA5G8B,I,IAAA,QAC3CxP,EAAO,YACPwyD,EAAW,MACXT,EAAK,WACLE,EAAU,eACVV,EAAc,SACdttB,EAAQ,WACRwuB,EAAU,cACVC,GAAa,EACVvY,EAAI,IAToC,yGAW3C,MAAMl5B,EAAM,YACL+vC,GAAY,YAAgBhxD,EAAQy5C,aACpCkZ,EAAWC,GAAgB,sBAC3BC,EAAUC,GAAW,kBAAQ,CAACf,IAC/BgB,EAAYF,EAAWA,EAAS1uB,MAAQ,EACxC6uB,EAAaH,EAAWA,EAASzuB,OAAS,EAC1C5/B,EAAQxE,EAAQy5C,YAChB,eAAElpC,GAAmBvQ,EAAQ8P,WAC5BmjD,EAAWC,GAAY,kBAAQ,CAAC3iD,IACjC4zB,EAAQ8uB,EAAYA,EAAU9uB,MAAQ,EACtCC,EAAS6uB,EAAYA,EAAU7uB,OAAS,EAC9C,oBACE,cAAmBv0B,GAAe,IAAI,IAAgBA,EAAMs0B,EAAOC,EAAQ,KAAM,CAC/ED,EACAC,KAgBJ,OACE,gBAAC,cAAW,eACVpkC,QAASA,EACT4D,UAAW,EAAW,iBAAkB,CAAE,cAAeotD,IACzDe,MAAOA,EACPE,WAAYA,EACZV,eAAgBA,EAChBN,WAAW,EACXkC,eApBmB,IAAM,IAC3B,wBACEvvD,UAAW,EAAW,qBAAsB4uD,GAC5ClnB,EAAG,EACHD,EAAG,EACHlH,MAAOA,EACPC,OAAQA,EACRgvB,GAAG,IACHC,GAAG,OAaClZ,GAEJ,qBAAGl5B,IAAKiyC,GACLR,GACC,gBAAC,IAAc,CACb9uD,UAAU,4BACV0nC,EAAG,GACHD,GAAI,GACJlH,MAAO,GACPC,OAAQ,GACRkvB,UAAWZ,IAGf,qBAAGzxC,IAAKiyC,GACN,gBAAC,aAAU,CACTjyC,IAAK6xC,EACLxnB,EAzFQ,GA0FRD,EAAGkoB,GACHxB,MAAOA,EACPR,eAAgBA,EAChBU,WAAYA,IAEbztD,GACC,qBAAGyc,IAAK2xC,GACN,gBAAC,IAAO,CACNxwB,QAAS59B,EACTovC,SAAU,IAAgB4f,IAC1BtN,QAAQ,SACR1R,UAAWme,GAAa,aAAenuD,EAAO+tD,GAC9CkB,WAAYxyC,GAEZ,wBACEA,IAAKA,EACLrd,UAAU,wBACV0nC,EA3GE,GA2GeynB,EA1Gf,GA2GF1nB,EA7GC,GA6Ge2nB,EAChBU,WAAW,QACXtH,GAAG,WAEF,aAAe5nD,EAAO+tD,OAK7BtuB,GAAY1zB,GAAkBkiD,IAC9B,qBAAGznC,UAAW,iBAvHP,GAuHiDgoC,OACpDziD,GAAkBkiD,IAClB,gBAAC,IAAiB,CAACliD,eAAgBA,EAAgBkiD,WAAYA,IAEhExuB,S,kCCvJf,gDAGO,MAAM0vB,EAAqB,CAAC5yD,EAAeC,KAAsC,CAEtFC,SAAU,mCACVC,SAAU,IACR,YAAoB,CAClB4D,MAAO/D,EACPd,SAAUe,IAEdmB,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,Y,kCCjBV,mKAaA,MAAMoxD,EAAWC,GACf92C,MAAMsF,QAAQwxC,aAAc,EAAdA,EAAgB7sB,OAAS6sB,EAAe7sB,KAAKx3B,OAAS,EAEhEskD,EAAW,EAAGvyD,UAAYD,OAAMM,cAAkCb,IACtE,oBAAoBa,KAAa,aAAkBb,MAASO,IAOxDyyD,EAAgB,CAAC/yD,EAAwBkuD,IAC7C,aAAeluD,IANgB,EAC/BA,EACAkuD,KACYA,aAAU,EAAVA,EAAY8E,mBAAoB,aAAwBhzD,EAAKkuD,aAAU,EAAVA,EAAY+E,MAG9DC,CAAyBlzD,EAAKkuD,GAG1CiF,EAA0C,CACrDpzD,EACAC,EACA2O,EACAu/C,KACG,CAEHjuD,SAAU,0CACVwD,KAAMqvD,EAAS9yD,EAAKD,GACpBoqD,OAAQyI,EAAQjkD,IAAcokD,EAAc/yD,EAAKkuD,GACjD/sD,aAAc,CACZC,MAAO,+BAA6BC,SACpCpC,SAAU,+BAA6BqC,OACvCV,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,YAKG4xD,EAA2C,CACtDrzD,EACAC,EACA2O,EACAu/C,KACG,CAEHjuD,SAAU,2CACVwD,KAAMqvD,EAAS9yD,EAAKD,GACpBoqD,QAASyI,EAAQjkD,IAAcokD,EAAc/yD,EAAKkuD,GAClD/sD,aAAc,CACZC,MAAO,+BAA6BC,SACpCpC,SAAU,+BAA6BqC,OACvCV,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,YAKG6xD,EAA6C,CACxDtzD,EACAC,EACA2O,EACAu/C,KACG,CAEHjuD,SAAU,6CACVC,SAAU,K,MACR,aAAe,CACbozD,SAAUtzD,EACVuzD,IAAoB,QAAf,EAAA5kD,aAAS,EAATA,EAAWq3B,YAAI,eAAG,MAG3BmkB,QAASyI,EAAQjkD,IAAcokD,EAAc/yD,EAAKkuD,GAClD/sD,aAAc,CACZC,MAAO,+BAA6BC,SACpCpC,SAAU,+BAA6BqC,OACvCV,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,YAIGgyD,EAAqBhF,GAAqC,CACrEzuD,EACAC,EACA2O,KAEA,MAAM8kD,EAAgBjF,EAAOzuD,EAAMC,GACnC,OAAO,OAAP,wBACKyzD,GAAa,CAChBtJ,OAAQyI,EAAQjkD,IAAc8kD,EAActJ,W,kCClGhD,i+B,u5BC+BA,MAAMuJ,EAA2B,kBAE3BC,EAAiB,SACjBC,EAAiB,SAgCjBC,EAAoB,CAACC,EAAmB7jD,EAAYpB,IACpDoB,EAAK1Q,cAAgBsP,IAIrBoB,EAAKC,cAAgBrB,IAIjBA,EAAKklD,iBAAiBvuC,KAAM3S,GAAMA,EAAEtT,cAAgB0Q,EAAK1Q,cAG7Dy0D,EAAgB,CAACC,EAA4Bj1D,KACjD,MAAM80D,EAAYG,EAAQC,eAC1B,SAAKD,EAAQE,eAAiBL,KAI1BA,EAAUhyD,OAAS,6BAEnBmyD,EAAQG,YAAcp1D,GACtBi1D,EAAQG,UAAU9b,cAAgBt5C,IACjCi1D,EACEG,UACApI,iBACAxmC,KAAM3S,GAAMA,EAAE3C,cAAgBlR,GAKnC80D,EAAUO,eAAiBP,EAAUO,cAAcP,EAAUhyD,KAAMmyD,EAAQG,UAAWp1D,KAepFs1D,EAAqB,CACzBxyD,EACAyyD,GAAwB,EACxB3c,GAAmB,KACQ,CAC3B3oC,KAAM,CAAEnN,KAAM6xD,GACdG,UAAW,CAACG,EAASzvD,KACXozC,GAAWpzC,EAAMozC,UACvB2c,GACA,YAAsB/vD,EAAMxF,SAC1B,CACE,CAAC,YAAUw1D,OAAQ,CAAE1yD,KArFL,UAqF8B2yD,MAAM,SAEtDp1D,EAENq1D,UAAYT,IAAW,MAAC,MAzFA,aAyFsB,QAAtB,EAAAA,EAAQC,sBAAc,eAAEpyD,OAChD6yD,MAAO,CAACV,EAASzvD,KACR,CACLxF,QAASwF,EAAMxF,QACfu1D,cACG3c,GAAWpzC,EAAMozC,UAAY2c,GAAgB,YAAsB/vD,EAAMxF,WAGhFyrC,IAAK,CAAOmqB,EAAYX,EAASzvD,IAAU,OAAD,6B,MACxC,IAAKyvD,EAAQY,eAlGS,aAkG8B,QAAtB,EAAAZ,EAAQC,sBAAc,eAAEpyD,MAA4B,CAChF,KAAImyD,EAAQa,WAAaF,GAAcpwD,GAASA,EAAMxF,QAAQs5C,cAAgBsc,GAgB5E,OAAOzlD,QAAQC,SAhByE,CACxF,MAAM2lD,EAAavwD,EAAMxF,QAAQ+1C,sBAC3B,YACJvwC,EAAMxF,QACN,iBAAO41D,GAAeA,EAAsB,MAI9C,YAAO,KAEDG,EAAWC,YAAYxwD,EAAMxF,QAAQitD,UACvC2I,EAAWK,YAAYzwD,EAAMxF,UAHjC,QAaNk2D,QAAUjB,I,MAAY,OACpBkB,SAAUlB,EAAQE,aAClBiB,WA1HsB,aA0HY,QAAtB,EAAAnB,EAAQC,sBAAc,eAAEpyD,UAIlCuzD,EAQF,CACFpmD,KAAM,CAAEnN,KAAM6xD,GACduB,QAAUjB,IAAY,CACpBkB,SAAUlB,EAAQE,gBAIhBmB,EAAsB,CAACrB,EAASzvD,K,QACpC,QAAKyvD,EAAQE,eA/IkB,mBAkJL,QAAtB,EAAAF,EAAQC,sBAAc,eAAEpyD,MACnBmyD,EAAQG,UAAU70D,cAAgBiF,EAAMxF,SAEvB,QAAtB,EAAAi1D,EAAQC,sBAAc,eAAEpyD,QAAS,8BAC5BmyD,EAAQG,YAAc5vD,EAAMxF,UAKjCu2D,EAKF,CACFC,OAAQ,CAAC5B,EAAgB,8BACzB6B,QAAS,CAACxmD,EAAMglD,EAASzvD,K,MACvB,OAAI,iBAAOyK,GACF4kD,EAAwC,QAAtB,EAAAI,EAAQC,sBAAc,eAAEpyD,KAAMmN,EAAczK,EAAMxF,YAExEwF,EAAMxF,SAAWiQ,IAASzK,EAAMxF,WAG5BwF,EAAMxF,QAAiB+0D,iBAAiBvuC,KAAM3S,GAAMA,EAAEtT,cAAgB0P,IAEjFimD,QAAS,CAACjB,EAASzvD,KAAU,CAC3BixD,QAASzB,EAAcC,EAASzvD,EAAMxF,SACtC02D,WAAYzB,EAAQ0B,OAAO,CAAE5iB,SAAS,IACtC6iB,aAAcN,EAAoBrB,EAASzvD,MAIzCqxD,EAKF,CACFL,OAAQ,CAAC7B,EAAgBC,EAAgB,8BACzCkC,QAAS,KAAM,EACfL,QAAS,CAACxmD,EAAMglD,EAASzvD,K,MACvB,OACEyvD,EAAQ0B,OAAO,CAAE5iB,QAASkhB,EAAQ8B,gBAAkB,iCA3LhC,aA4LI,QAAtB,EAAA9B,EAAQC,sBAAc,eAAEpyD,OAExBmN,EAAKjQ,QAAQg3D,aACb/mD,EAAKjQ,QAAQs5C,cAAgB9zC,EAAMxF,SACnCi1D,EAAQ8B,gBAAkB,+BAGhCb,QAAUjB,IACR,MAAMH,EAAYG,EAAQC,eACpB+B,EAAiBhC,EAAQE,aACzB+B,EACJjC,EAAQE,gBAAiBL,aAAS,EAATA,EAAWhyD,QAAS,+BAA8BgyD,aAAS,EAATA,EAAWW,OAKxF,MAAO,CACLwB,iBACAC,qBACAC,WANAD,IACCjC,EAAQ8B,gBAAkB,8BACzB9B,EAAQ8B,gBAAkBrC,GAK5B0C,cAAeF,GAAsBjC,EAAQmC,kBAGjDC,SAAU,UAGNC,EAKF,CACFd,OAAQ,CAAC7B,EAAgBC,EAAgB,8BACzC6B,QAAS,CAACxmD,EAAMglD,K,MACd,OAAAA,EAAQ0B,OAAO,CAAE5iB,QAASkhB,EAAQ8B,gBAAkB,iCA9N9B,aA+NC,QAAtB,EAAA9B,EAAQC,sBAAc,eAAEpyD,OACvBmyD,EAAQ8B,gBAAkB,+BAC9Bb,QAAUjB,I,UACR,MAAO,CACLsC,UAAWtC,EAAQE,cAnOC,aAmOqC,QAAtB,EAAAF,EAAQC,sBAAc,eAAEpyD,MAC3D4zD,WAAYzB,EAAQ0B,OAAO,CAAE5iB,QAASkhB,EAAQ8B,gBAAkB,+BAChEN,QACExB,EAAQE,eAtOU,aAuOK,QAAtB,EAAAF,EAAQC,sBAAc,eAAEpyD,OACvBmyD,EAAQ8B,gBAAkB,8BAC9BS,gBAAiBvC,EAAQE,eAAiC,QAAjB,EAAAF,EAAQG,iBAAS,eAAEG,gBAGhE8B,SAAU,UAGNI,EAAqB,CACzB30D,EACA5B,EAKAw2D,KAOG,CACHznD,KAAM,CAAEnN,KAAM8xD,GACdE,UAAW,CAAEhyD,KAhQkB,gBAgQc2yD,MAAM,EAAMJ,cAAeR,GACxEc,MAAO,CAACV,EAASzvD,KACfA,EAAMxF,QAAQ23D,QACPnyD,EAAMxF,SAEf43D,KAAM,CAAC/gD,EAAOo+C,EAASzvD,KACpBA,EAAMxF,QAAiB63D,YAAYhhD,EAAMy0B,EAAGz0B,EAAMw0B,IAErDI,IAAK,CAACmqB,EAAYX,EAASzvD,K,MACzB,MAAMyL,EAAOzL,EAAMxF,QAEnB,GADAiR,EAAK4mD,cAEH5C,EAAQa,WACRF,GACAf,EAAwC,QAAtB,EAAAI,EAAQC,sBAAc,eAAEpyD,KAAMmO,EAAM2kD,GACtD,CACA,MAAMpxD,OACanE,IAAjBq3D,EAA6BA,EAAe,IAAQp0D,EAAE,oCACxDpC,EAAS+P,EAAK1Q,YAAaq1D,EAAY3kD,EAAKC,aAAanP,MAAOE,IAC9D,YAAW,CAAEuC,QAAOvC,MAAOA,EAAMC,QAAS41D,UAAU,QAI1D5B,QAAUjB,IAAY,CACpBkB,SAAUlB,EAAQE,iBAIhB4C,EAAqF,CACzFvB,OAAQ,CAAC7B,EAAgBC,EAAgB,8BACzC6B,QAAS,KACA,GAILuB,EAAa,IACV,sBAA8CD,GAGjDE,EAA2C/3D,GACxC,YACLA,EACAg4D,SAASC,eAAe,oBACxB,6BAIEC,EAAwB,CAACvnD,EAAcC,IACvC,kBAAQA,GACH,YAAiBA,EAAQD,GAE9BC,EAAO+jC,UACF,YAAiB/jC,EAAQD,IAGlC,YAAiBA,EAAQC,EAAQ,MAAM/O,MAAOE,IAC5C,YAAW,CAAEuC,MAAO,IAAQlB,EAAE,sCAAuCrB,MAAOA,EAAMC,YAG7E,MAGHm2D,EAA0B,IAAM,CACpCxnD,EACAC,EACA+F,EACAyhD,K,YAEA,GAAIznD,IAAWC,EACb,OAAO,KAET,MAAMynD,EAAoD,QAA5B,EAAiB,QAAjB,EAAAznD,EAAOkkC,kBAAU,eAAEllC,iBAAS,eAAE0oD,+BACtDC,EAAiBF,aAAqB,EAArBA,EAAuB/xC,KAAK,EAAGxhB,SAAUszD,EAAUvpD,SAAS/J,IACnF,GAAIyzD,EACF,OAAOA,EAAetd,WAAWud,OAAO7nD,EAAQC,GAGlD,MAAM6nD,EAA+C,QAA5B,EAAiB,QAAjB,EAAA7nD,EAAOkkC,kBAAU,eAAEllC,iBAAS,eAAE8oD,0BACvD,GAAI,kBAAQ9nD,KAAY6nD,EACtB,OAAOxoD,QAAQmV,QAAQ8yC,EAAsBvnD,EAAQC,IAEvD,MAAM+nD,EAAUF,EAAiBnyC,KAAMsyC,KAAaA,EAAOR,EAAWznD,EAAQC,IAC9E,OAAI+nD,EACKA,EAAQP,EAAWznD,EAAQC,EAA3B+nD,CAAmChoD,EAAQC,GAE7CX,QAAQmV,QAAQ8yC,EAAsBvnD,EAAQC,M,kCCzXvD,uJAMO,MAAMioD,EAAyBlpD,GACpC,kBAAQA,aAAI,EAAJA,EAAMypC,eAAgBzpC,aAAI,EAAJA,EAAMypC,YAAYn5C,aAAc,IAEnD64D,EAAmB,CAACh5D,EAAe2vD,IAA2B,CACzE,gBAAC,IAAqB,CACpB5qD,IAAI,WACJ4B,QAAS,CAAE,2BAA4B,CAAE3G,UAAS2vD,qBAEjD,EAAG/oD,UAASC,YAAaA,GAAU,YAAuBD,KAIlDqyD,EAAmB,CAACvJ,EAAcC,IAA2B,CACxE,gBAAC,IAAqB,CACpB5qD,IAAI,WACJ4B,QAAS,CAAE,2BAA4B,CAAE3G,QAAS0vD,EAAOC,qBAExD,EAAG/oD,UAASC,YAAaA,GAAU,YAAuBD,M,kCCvB/D,6S,kCCAA,qH,kCCAA,+DAKA,MAAMsyD,EAAoB,KACxB,MAAM,QAAErvC,GAAY,qBAAW,KAC/B,OAAO,aAAsBA,K,kCCP/B,yCAgBA,MAAMsvC,EAAY,iCAuDH,iBArDkC,EAC7Cv1D,YAAW0nC,IAAGD,IAAGlH,QAAOC,SAAQkvB,YAAWtD,OAAMzrB,UAAU,GAC7D60B,KAEA,MAAOC,EAAeC,GAAgB,kBAAQ,IAE9C,IAAIvG,EAAY,EACZC,EAAa,EAMjB,OAJIqG,KACCl1B,MAAO4uB,EAAW3uB,OAAQ4uB,GAAeqG,GAI5C,qBAAGz1D,UAAWA,GACZ,gBAAC,IAAmB,CAACqF,GAAIkwD,IACzB,0BACEp0D,IAAK,UAAUo0D,EACfl4C,IAAKm4C,EACL/pD,OAAQ,yBAAe8pD,GACvBtI,GAAIvlB,EAAIynB,EAAY,EACpBjC,GAAIzlB,EAAI2nB,EAAa,EACrB9wC,EAAG6wC,EAAY,EAAIxuB,IAEpByrB,EACC,qBAAG/uC,IAAKq4C,GACN,iCACEv0D,IAAK,SAASo0D,EACd7tB,EAAGA,EAAIynB,EAAY,EACnB1nB,EAAGA,EACHlH,MAAOA,EACPC,OAAQA,GAEP4rB,IAIL,qBAAG/uC,IAAKq4C,GACN,yBACEv0D,IAAK,SAASo0D,EACd7tB,EAAGA,EAAIynB,EACP1nB,EAAGA,EACHlH,MAAOA,EACPC,OAAQA,EACRguB,UAAW,YAAqBkB,IAAcA,EAC9CjkD,OAAQ,yBAAe8pD,U,kCC/DnC,cAEA,MAAMI,UAAwB,iBAK5B,YAAY3qD,EAAau1B,EAAeC,EAAgBo1B,EAAiB,GACvE1/C,MAAMlL,EAAO4qD,GACbrmD,KAAKgxB,MAAQA,EACbhxB,KAAKixB,OAASA,EAGhB,YAAY3O,GACV,MAAMgkC,EAAS,IAAI,QACjBtmD,KAAKvE,MAAMgnC,cAActK,EAAIn4B,KAAKgxB,MAAQ,EAC1ChxB,KAAKvE,MAAMgnC,cAAcvK,EAAIl4B,KAAKixB,OAAS,GAGvCs1B,EAAyB,EAAdvmD,KAAKqmD,OACtB,OAAO,6BAAmBC,EAAQtmD,KAAKgxB,MAAQu1B,EAAUvmD,KAAKixB,OAASs1B,EAAUjkC,IAItE,O,kCCxBf,2DA2Ee,IA1D6C,EAAGllB,iBAAgBkiD,iBAC7E,MAAMkH,EAAgB,GACtB,IAAUppD,EAAiBV,I,MACzB,IAAKA,EACH,OAEF,MAAM9O,EAAO8O,EAAKzF,eAA6B,QAAb,EAAAyF,EAAK5P,gBAAQ,eAAEc,MACjD44D,EAAc54D,GAAQ,IAAK44D,EAAc54D,GAAQ44D,EAAc54D,GAAQ,GAAK8O,EAAK5P,YAEnF,MAAM25D,EAAgB,IAAOD,GAE7B,OAAKC,EAAcpqD,OAYjB,iCACE20B,MAhCiC,IAiCjCC,OAlC+B,GAEG,GAgCFw1B,EAAcpqD,QAE9C,uBAAK5L,UAAU,2BACb,yBAAOA,UAAU,kCACf,yBAAOA,UAAU,iCACdg2D,EAAc33C,IAAKld,IAClB,MAAMvE,EAAU,aAASuE,GACzB,IAAIhE,EACA8C,EAQJ,OAPIrD,GACFO,EAAOP,EAAQ0uB,IAAM,aAAkB1uB,GAAWA,EAAQO,KAC1D8C,EAAQ81D,EAAc50D,GAAKyK,OAAS,EAAIhP,EAAQyuB,YAAczuB,EAAQqD,QAEtE9C,EAAOgE,EACPlB,EAAQ81D,EAAc50D,GAAKyK,OAAS,EAAI,aAAczK,GAAO,IAAYA,IAGzE,sBAAIA,IAAKA,EAAKnB,UAAU,gCACtB,sBAAIA,UAAU,kCAAkC+1D,EAAc50D,GAAKyK,QACnE,sBAAI5L,UAAU,0CACZ,gBAAC,KAAY,CAAC7C,KAAMA,KAEtB,sBAAI6C,UAAU,iCAAiCC,UAlC3D,iCACEsgC,MAtB+B,IAuB/BC,OAAQy1B,IAER,uBAAKj2D,UAAU,2BAA2B6uD,M,kCClClD,oEA0BA,MAAMqH,EAAgC,CACpCC,EACAC,KAEA,MAEMC,EAA4BF,EADI,EAItC,MAAO,CAAEE,4BAA2BC,0BAFFD,EAHgB,GAAtBD,IAQjBG,EAAoB,CAAC/hB,EAAcjpC,KAC9C,MAAM,qBAAEirD,EAAoB,qBAAEC,GAAyB,aAAgBjiB,GACvE,IAAI4B,EAASogB,EAEb,GAAIjrD,GAAQ,aAAkBA,EAAKnO,IAAKmO,EAAK+nC,QAAS/nC,EAAKgpC,cAAe,CACxE,MAAM,0BAAE+hB,GAA8BJ,EACpC9f,EACAqgB,GAEFrgB,EAASkgB,EAGX,MAAQG,qBAAsBC,EAAgB,eAAEC,GAAmB,aAAyB,EAATvgB,GAEnF,OAAOA,EAASsgB,EAAmBC,GAG/BC,EAAgC,QAAW,UAAgB,KAC/DpiB,EAAI,KACJjpC,EAAI,EACJm8B,EAAI,EAAC,EACLD,EAAI,EAAC,aACLovB,I,oBAEA,MAAM,EAAEn3D,GAAM,4BACR,qBAAEo3D,EAAoB,qBAAEN,EAAoB,qBAAEC,GAAyB,aAC3EjiB,IAEI,0BAAE6hB,EAAyB,0BAAEC,GAA8BJ,EAC/DM,EACAC,IAEI,yBAAEziB,EAAwB,wBAAEC,GAA4B,aAAW1oC,IAElEolD,GAAO,aACJ,QAAR,EAAAplD,EAAKnO,WAAG,eAAEK,WACF,QAAR,EAAA8N,EAAKnO,WAAG,eAAED,KACQ,QAAlB,EAAQ,QAAR,EAAAoO,EAAKnO,WAAG,eAAEO,gBAAQ,eAAED,KACF,QAAlB,EAAQ,QAAR,EAAA6N,EAAKnO,WAAG,eAAEO,gBAAQ,eAAEK,WAEhB+4D,IAAyBpG,EAEzBvzD,GAAkB,QAAZ,EAAAmO,EAAK+nC,eAAO,eAAEl2C,MAAOmO,EAAKnO,IAChC45D,EAAY,IAAc75D,QAAiB,QAAR,EAAAoO,EAAKnO,WAAG,eAAED,MAAOoO,EAAKnO,IAAID,KAAOC,EAAID,MACxE,MAAEyD,EAAK,SAAEq2D,EAAQ,eAAEC,GAAmB,aAC1C95D,EACA45D,EACAzrD,aAAI,EAAJA,EAAM9I,KACNs0D,EACAr3D,EACAixD,GAEF,OACE,gCACE,gBAAC,KAAS,CACRxvD,IAAK6yC,EAA2B,SAAW,YAC3CtM,EAAGA,EAAI8M,EAAO,EACd/M,EAAGA,EAAI+M,EAAO,EACd2X,YAAaqK,EACbW,YAAaL,EACbvrD,KAAM0oC,EACNO,KAAMA,EACNyiB,SAAUJ,EAAeI,OAAWx6D,EACpCmE,MAAOi2D,EAAej2D,OAAQnE,EAC9By6D,eAAgBL,EAAeK,OAAiBz6D,IAEjDu3C,GACC,gBAAC,KAAS,CACRtM,EAAGA,EAAI8M,EAAO,EACd/M,EAAGA,EAAI+M,EAAO,EACd2X,YAAamK,EACba,YAAad,EACb9qD,KAAMyoC,EACNQ,KAAMA,QAOD,O,kCCtHf,WAyCe,IAlC6B,EAAG9T,QAAOmqB,cAElD,uBACEuM,MAAM,6BACNC,QAASxM,EAAW,eAAiB,eACrC0D,KAAK,eAAc,cACP,OACZ3X,KAAK,MACLrW,MAAM,MACNC,OAAO,MACPE,MAAOA,GAEP,wBACEgI,EAAE,uPACFhI,MAAO,CACL6tB,KAAM,UAGV,wBACE7lB,EAAE,2+BACFhI,MAAO,CACL6tB,KAAM,kBAGV,wBACE7lB,EAAE,4sBACFhI,MAAO,CACL6tB,KAAM,oB,kCClChB,wBAKA,MAAM+I,UAAoB,WAKxB,cACEphD,QALK,KAAA7Z,cAAyCI,EAEzC,KAAA+J,kBAAsD/J,EAK3D,YAAe8S,KAAM,CACnBlT,SAAU,IAAWghB,IACrB7W,aAAc,MAIlB,cACE,OAAO+I,KAAKlT,SAGd,YAAYA,GACVkT,KAAKlT,SAAWA,EAGlB,kBACE,OAAOkT,KAAK/I,aAGd,gBAAgBrJ,GACdoS,KAAK/I,aAAerJ,EAGtB,SAAS+D,GACPgV,MAAMw0B,SAASxpC,GAEX,aAAcA,IAChBqO,KAAKlT,SAAW6E,EAAM7E,UAEpB,iBAAkB6E,IACpBqO,KAAK/I,aAAetF,EAAMsF,eAKjB,O,kCC/Cf,+yB,kCCAA,2GAMA,MAaM+wD,EAAqBtxC,IACpBA,aAAO,EAAPA,EAASra,QAIPqa,EAAQzV,OAAO,CAACqL,EAAKpQ,KAC1BoQ,EAAIpQ,EAAOpG,IAAMoG,EAAO4G,MACjBwJ,GACN,IANM,GAYL27C,EAAyB,KAM7B,MAAOC,EAAgBC,EAAmBC,GAAwB,aAjCjB,8BAmC/C,IACAJ,EAAkB,OAEbK,EAAeC,GAAoB,YAAwB,IAC3D5xC,EAAS6xC,GAAc,WAA+B,IAE7D,YAAgB,KACVH,IAAyBC,IAC3BE,EAzCqB,CAACL,IAC1B,MAAMxxC,EAAU,IAAI,KAOpB,OANAA,EAAQuI,QAAS/iB,SACmBhP,IAA9Bg7D,EAAehsD,EAAOpG,MACxBoG,EAAO4G,MAAQolD,EAAehsD,EAAOpG,OAIlC4gB,GAiCQ8xC,CAAmBN,IAC9BI,GAAiB,KAElB,CAACJ,EAAgBE,EAAsBC,IAE1C,MAAMI,EAAqB,cACxBC,IACCH,EAAWG,GACXP,EAAkBH,EAAkBU,KAEtC,CAACP,IAGH,MAAO,CAACzxC,EAASwxC,EAAgBA,GAAkBG,EAAeI,IASvDE,EAAgB,gBAAuC,IAEvDC,EAA2B,EAAG93B,eACzC,MAAOpa,EAASwxC,EAAgBx0D,EAAQ+0D,GAAsBR,IAC9D,OACE,gBAACU,EAAcE,SAAQ,CAAC/lD,MAAO,CAAE4T,UAASwxC,iBAAgBO,uBACvD/0D,EAASo9B,EAAW,Q,kCC7E3B,+L,kCCAA,8EAKA,MAAMg4B,EAAgBvL,IACpB,MAAMmL,EAAiB,cAEjB1K,EADa,uCACanc,WAAWoc,kBACrC8K,EAAmB,YAAc,IAAuBL,GAE9D,OAAOnL,GAAUS,IAAiB,oBAAkBW,OAAQoK,aAAgB,EAAhBA,EAAkBjmD,S,kCCXhF,qDAGO,MAAMkmD,EACXp7D,IAEA,MAAMP,EAAU,aAASO,GACnBywD,EAAU,YAAIhxD,EAAS,OAAQO,GAC/B2wD,EAAY,YAAIlxD,EAAS,aAASH,GAExC,MAAO,CAAEmxD,UAASQ,SADAxxD,GAAWA,EAAQuuB,MAAS,aAAWyiC,GAC7BE,e,kCCV9B,uFAcA,MAAM0K,EAA8D,EAAGC,cACrE,MAAM,EAAE/4D,GAAM,2BAEd,OACE,uBAAKM,UAAU,uDACb,uBAAKA,UAAU,iCACb,gBAAC,IAAU,CAACmB,IAAKs3D,EAAQ96D,SAASyD,IAAKhE,IAAKq7D,EAASx6D,KAAK,MAE5D,gBAAC,KAAe,CAAC5B,SAAUo8D,EAASp3D,iBAAe,GACjD,gBAAC,IAAW,CAACpB,MAAOP,EAAE,qBAAsBtC,IAAKq7D,EAASx6D,KAAK,kBAC/D,gBAAC,IAAW,CACVgC,MAAOP,EAAE,+BACTtC,IAAKq7D,EACLx6D,KAAK,2BAEP,gBAAC,IAAW,CACVgC,MAAOP,EAAE,sCACTtC,IAAKq7D,EACLx6D,KAAK,gCAEJw6D,EAAQ55D,KAAK65D,wBACVh5D,EAAE,kBAAmB,CAAEU,MAAOq4D,EAAQ55D,KAAK65D,0BAC3Ch5D,EAAE,4BAER,gBAAC,IAAW,CACVO,MAAOP,EAAE,+BACTtC,IAAKq7D,EACLx6D,KAAK,2BAEL,gBAAC,KAAS,CAAC+G,UAAWyzD,EAAQr5D,OAAOu5D,uBAOlCC,EAA4Dx8D,IACvE,MAAMC,EAAW,YAAyBD,GAC1C,IAAKC,GAAYA,EAASc,OAAS,eAAaA,KAC9C,MAAO,MAACV,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAAC+7D,EAAqB,CAACC,QAASp8D,KAC/B,OAAMI,K,kCCxDzB,wFAcA,MAAMo8D,EAAmE,EAAGzyD,S,MAC1E,MAAM,UAAEpI,GAAcoI,EAAGzI,UACnB,QAAE4I,EAAO,OAAEtD,EAAM,UAAE6zB,GAAc,aAAe1wB,EAAI,YAAapI,GAEvE,OACE,uBAAKgC,UAAU,uDACb,uBAAKA,UAAU,iCACb,gBAAC,KAAS,CAACiD,OAAQA,EAAQsI,KAAMhF,EAASuwB,UAAWA,GACnD,gBAAC,KAAO,CACNr0B,KAAmB,QAAb,EAAA8D,aAAO,EAAPA,EAAS9D,YAAI,QAAI,GACvB+D,aAAc,iBACdpJ,IAAKgJ,EACLK,eAAe,MAIrB,uBAAKzG,UAAU,8BACb,gBAAC,KAAe,CAAC3D,SAAU+J,EAAI/E,iBAAe,EAACC,kBAAgB,EAACC,iBAAe,KAEjF,uBAAKvB,UAAU,8BACb,gBAAC,uBAAoB,CAACoG,GAAIA,OAMrB0yD,EACX18D,IAEA,MAAMC,EAAW,YAA2BD,GAC5C,IAAKC,GAAYA,EAASc,OAAS,iBAAeA,KAChD,MAAO,MAACV,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAACo8D,EAAuB,CAACzyD,GAAI/J,KAC5B,OAAMI,K,kCChDzB,iGAmBA,MAAMs8D,EAAgF,EAAGx7D,SACvF,MAAM,EAAEmC,GAAM,2BACd,OACE,uBAAKM,UAAU,uDACZzC,EAAGsB,KAAKC,QAAU,gBAAC,KAAmB,CAAC1B,IAAKG,EAAI2D,MAAO,0BACxD,uBAAKlB,UAAU,iCACb,gBAAC,IAAU,CAACmB,IAAK5D,EAAGI,SAASyD,IAAKhE,IAAKG,EAAIU,KAAK,oBAElD,uBAAK+B,UAAU,8BACb,gBAAC,KAAe,CAAC3D,SAAUkB,EAAI8D,iBAAe,EAACC,kBAAgB,EAACC,iBAAe,GAC7E,0BAAK7B,EAAE,oBACP,0BACGnC,EAAG6B,OAAOE,oBAAsB/B,EAAG6B,OAAOG,gBACzCG,EAAE,mBAEF,2BACE,wBAAMM,UAAU,mBACd,gBAAC,IAAa,OACR,IACPN,EAAE,yBAMb,uBAAKM,UAAU,8BACb,gBAAC,8BAA2B,CAACzC,GAAIA,OAM5By7D,EACX58D,IAEA,MAAMC,EAAW,YAAYD,GAC7B,IAAKC,GAAYA,EAASc,OAAS,wBAAsBA,KACvD,MAAO,MAACV,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAACs8D,EAA8B,CAACx7D,GAAIlB,KACnC,OAAMI,K,kCC3DzB,iGAmBA,MAAMw8D,EAAoE,EAAG3xD,WAAYohC,MACvF,MAAM,EAAEhpC,GAAM,2BACd,OACE,uBAAKM,UAAU,uDACZ0oC,EAAE7pC,KAAKC,QAAU,gBAAC,KAAmB,CAAC1B,IAAKsrC,EAAGxnC,MAAO,oBACtD,uBAAKlB,UAAU,iCACb,gBAAC,IAAU,CAACmB,IAAKunC,EAAE/qC,SAASyD,IAAKhE,IAAKsrC,EAAGzqC,KAAK,oBAEhD,uBAAK+B,UAAU,8BACb,gBAAC,KAAe,CAAC3D,SAAUqsC,EAAGrnC,iBAAe,EAACC,kBAAgB,EAACC,iBAAe,GAC5E,0BAAK7B,EAAE,oBACP,0BACGgpC,EAAEtpC,OAAOE,oBAAsBopC,EAAEtpC,OAAOG,gBACvCG,EAAE,mBAEF,2BACE,wBAAMM,UAAU,mBACd,gBAAC,IAAa,OACR,IACPN,EAAE,yBAMb,uBAAKM,UAAU,8BACb,gBAAC,wBAAqB,CAACsH,WAAYohC,OAM9BwwB,EACX98D,IAEA,MAAMC,EAAW,YAA4BD,GAC7C,IAAKC,GAAYA,EAASc,OAAS,kBAAgBA,KACjD,MAAO,MAACV,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAACw8D,EAAwB,CAAC3xD,WAAYjL,KACrC,OAAMI,K,kCC3DzB,+FAoBA,MAAM08D,EAAsD,EAAGC,U,MAC7D,MAAM,UAAEp7D,GAAco7D,EAAIz7D,UACpB,QAAE4I,EAAO,OAAEtD,EAAM,UAAE6zB,GAAc,aAAesiC,EAAK,MAAOp7D,IAC5D,EAAE0B,GAAM,2BACd,OACE,uBAAKM,UAAU,uDACb,uBAAKA,UAAU,iCACb,gBAAC,KAAS,CAACiD,OAAQA,EAAQsI,KAAMhF,EAASuwB,UAAWA,GACnD,gBAAC,IAAU,CAAC31B,IAAKi4D,EAAIz7D,SAASyD,IAAKhE,IAAKg8D,EAAKn7D,KAAK,OAGtD,gBAAC,KAAe,CAAC5B,SAAU+8D,EAAK/3D,iBAAe,GAC7C,gBAAC,IAAW,CAACpB,MAAOP,EAAE,gCAAiCtC,IAAKg8D,EAAKn7D,KAAK,qBACtE,gBAAC,IAAW,CAACgC,MAAOP,EAAE,wBAAyBtC,IAAKg8D,EAAKn7D,KAAK,qBAC9D,gBAAC,IAAW,CACVgC,MAAOP,EAAE,oCACTtC,IAAKg8D,EACLn7D,KAAK,+BAEI,QAAR,EAAAm7D,EAAIv6D,YAAI,eAAEw6D,uBACP,aAAUD,EAAIv6D,KAAKw6D,sBAAuB,UAC1C35D,EAAE,+BAOH45D,EAAwDl9D,IACnE,MAAMC,EAAW,YAAqBD,GACtC,IAAKC,GAAYA,EAASc,OAAS,WAASA,KAC1C,MAAO,MAACV,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAAC08D,EAAiB,CAACC,IAAK/8D,KACvB,OAAMI,K,kCCtDzB,6FAgBA,MAAM88D,EAID,EAAGl0D,KAAIm0D,aAAYC,kCACtB,OAASluD,KAAMmuD,EAAUz2D,OAAQ02D,GAAkBC,GAAc,WAG9D,CAAE32D,QAAQ,IAEP42D,EAAwB,cAC3BtuD,I,MACoC,aAAX,QAApB,EAAAiuD,aAAU,EAAVA,EAAYn9D,gBAAQ,eAAEc,MAExB28D,WAAW,IAAMF,EAAW,CAAEruD,OAAMtI,QAAQ,IAAS,KAErD22D,EAAW,CAAEruD,OAAMtI,QAAQ,KAG/B,CAACu2D,IAGH,OAAOA,EACL,gBAAC,IAAyB,KACvBC,GACC,gBAAC,IAAc,CACbt4D,IAAKkE,EACLhJ,SAAUm9D,EAAWn9D,SACrBkP,KAAMiuD,EAAWjuD,KACjBwuD,eAAgBP,EAAW7hB,SAC3BqiB,sBAAuBH,IAG1BF,GAAkBD,EAASz2D,SAAWy2D,EAAS5iC,WAC9C,gBAAC,IAAmB,eAAC15B,IAAKo8D,EAAWn9D,UAAcq9D,KAGrD,MAGOO,EAA4D79D,IACvE,MAAO89D,EAAqBT,GAA+B,aACzD,MAEID,EAAa,UACjB,IACE,YAA8Ep9D,EAAS,CACrF89D,EACAT,IAEJ,CAACr9D,EAAS89D,EAAqBT,IAEjC,IAAKD,EACH,MAAO,MAAC/8D,GAAW,OAAMA,GAS3B,MAAO,CANL,gBAAC88D,EAAc,CACbl0D,GAAIjJ,EAAQitD,QACZmQ,WAAYA,EACZC,4BAA6BA,KAGhB,OAAMh9D,K,kCC9EzB,WA6Be,IAnBQ,EACrBJ,WACAkP,KAAM+/C,EACNyO,iBACAC,4BAEA,MAAMzuD,EAAOwuD,EAAe19D,EAAUivD,GAUtC,OARA,YAAgB,KACV//C,GACFyuD,EAAsBzuD,IAIvB,CAACA,IAEG,O,kCC1BT,gFAaA,MAAM4uD,EAAsE,EAAGC,QAC7E,uBAAKp6D,UAAU,uDACb,uBAAKA,UAAU,iCACb,gBAAC,IAAU,CAACmB,IAAKi5D,EAAGz8D,SAASyD,IAAKhE,IAAKg9D,EAAIn8D,KAAK,oBAElD,gBAAC,KAAe,CAAC5B,SAAU+9D,EAAI/4D,iBAAe,EAACC,kBAAgB,EAACC,iBAAe,KAItE84D,EACXj+D,IAEA,MAAMC,EAAW,YAAYD,GAC7B,IAAKC,GAAYA,EAASc,OAAS,mBAAiBA,KAClD,MAAO,MAACV,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAAC09D,EAAyB,CAACC,GAAI/9D,KAC9B,OAAMI,K,kCC9BzB,6EAOO,MAAM69D,EAA2Bl+D,IACtC,MAAMC,EAAW,YAAYD,GAC7B,IAAKC,EACH,OAAO,KAET,MAAMk+D,EAAgB,aAAal+D,GACnC,OACE,gCACE,gBAAC,KAAY,CAAC2D,UAAU,yBAAyB7C,KAAMo9D,IACvD,gBAAC,OAAI,CACHz2D,GAAI,aAAay2D,EAAel+D,EAASsB,SAASD,KAAMrB,EAASsB,SAASK,WAC1EgC,UAAU,mCAET3D,EAASsB,SAASD,S,kCCpB3B,6FAeA,MAAM88D,EAID,EAAGn1D,KAAIo1D,eAAcC,yBACxB,OACInvD,KAAMqqB,EAAc3yB,OAAQ03D,GAC9BC,GACE,WAGD,CAAE33D,QAAQ,IACP42D,EAAwB,cAAmBtuD,IAC/CqvD,EAAoB,CAAErvD,OAAMtI,QAAQ,KACnC,IAEH,OAAOw3D,EACL,gBAAC,IAAyB,KACvBC,GACC,gBAAC,IAAc,CACbv5D,IAAKkE,EACLhJ,SAAUo+D,EAAap+D,SACvB09D,eAAgBU,EAAa9iB,SAC7BqiB,sBAAuBH,IAG1Bc,GAA0B,gBAAC,IAAa,CAAC/kC,aAAcA,EAAaA,gBAErE,MAGOilC,EACXz+D,IAEA,MAAO0+D,EAAwBJ,GAAsB,aACnD,KAEID,EAAe,UACnB,IACE,YAAmEr+D,EAAS,CAC1E0+D,EACAJ,IAEJ,CAACI,EAAwB1+D,EAASs+D,IAEpC,IAAKD,EACH,MAAO,MAACh+D,GAAW,OAAMA,GAS3B,MAAO,CANL,gBAAC+9D,EAAe,CACdn1D,GAAIjJ,EAAQitD,QACZoR,aAAcA,EACdC,mBAAoBA,KAGP,OAAMj+D,K,kCCtEzB,mFAaA,MAAMs+D,EAID,EAAGC,oBACCA,EACL,gBAAC,IAAyB,KACxB,gBAAC,IAAkB,CAAC59D,IAAK49D,EAAe3+D,YAExC,KAGO4+D,EACX7+D,IAEA,MAAO8+D,EAA0BC,GAAoB,aACnD,MAEIH,EAAiB,UACrB,IACE,YAAoE5+D,EAAS,CAC3E8+D,EACAC,IAEJ,CAAC/+D,EAAS++D,EAAkBD,IAE9B,IAAKF,EACH,MAAO,MAACv+D,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAACs+D,EAAiB,CAACC,eAAgBA,KAClC,OAAMv+D,K,kCC3CzB,2FAUA,MAAM2+D,EAA4D,EAAG/+D,eACnE,MAAM,KAAE2mC,GAAS,aAAyB3mC,GAC1C,OACE,gBAAC,IAAyB,KACxB,gBAAC,IAAY,CAACe,IAAKf,EAAU2mC,KAAMA,MAK5Bq4B,EAA4Dj/D,IACvE,MAAMC,EAAW,YAAYD,GAC7B,IAAKC,GAAYA,EAASc,OAAS,eAAaA,KAC9C,MAAO,MAACV,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAAC2+D,EAAc,CAAC/+D,SAAUA,KACzB,OAAMI,K,kCCzBzB,mFAaA,MAAM6+D,EAAsD,EAAGC,SAE3D,uBAAKv7D,UAAU,uDACb,uBAAKA,UAAU,iCACb,gBAAC,IAAU,CAACmB,IAAKo6D,EAAI59D,SAASyD,IAAKhE,IAAKm+D,EAAKt9D,KAAK,MAEpD,uBAAK+B,UAAU,8BACb,gBAAC,qBAAkB,CAACu7D,IAAKA,KAE3B,uBAAKv7D,UAAU,8BACb,gBAAC,iBAAc,CAACu7D,IAAKA,MAMhBC,EAAwDp/D,IACnE,MAAMC,EAAW,YAAqBD,GACtC,IAAKC,GAAYA,EAASc,OAAS,WAASA,KAC1C,MAAO,MAACV,GAAW,OAAMA,GAG3B,MAAO,CADS,gBAAC6+D,EAAiB,CAACC,IAAKl/D,KACvB,OAAMI,K,kCCnCzB,gLAwBA,MAAMg/D,EAAsB,CAC1B,aAAkB,yBAClB,aAAkB,mBAClB,aAAkB,kBAClB,aAAkB,oBAClB,aAAkB,MAGPC,EAAwBt/D,I,cACnC,MAAMC,EAAW,YAAYD,GACvBe,EAAOd,aAAQ,EAARA,EAAUc,KACjBO,EAAyB,QAAlB,EAAArB,aAAQ,EAARA,EAAUsB,gBAAQ,eAAED,KAC3BM,EAA8B,QAAlB,EAAA3B,aAAQ,EAARA,EAAUsB,gBAAQ,eAAEK,WAChC,EAAE0B,GAAM,2BACRi8D,EAAqBt/D,EAAW,aAAaA,QAAYI,EACzDo6B,EAAgB8kC,EAAqB,aAASA,QAAsBl/D,EACpE+J,GAAeqwB,aAAa,EAAbA,EAAevL,KAAMqwC,EAAqBx+D,GAExDy+D,EAAoBC,GAA6B,aAAgB,CACtEr9D,MAAOq4B,aAAa,EAAbA,EAAep4B,SACtBpC,SAAUw6B,aAAa,EAAbA,EAAen4B,OACzBV,YACAN,OACAkB,KAAM,WAGR,IAAKvC,IAAao/D,EAAoBtwD,SAAS,aAAa9O,IAC1D,OAAO,KAGT,MAAMmF,EAA2C,QAA9B,EAAwB,QAAxB,EAAc,QAAd,EAAAnF,aAAQ,EAARA,EAAUwC,YAAI,eAAE4C,gBAAQ,eAAE5C,YAAI,eAAE2C,WAC7Cs6D,EAAiBt6D,aAAU,EAAVA,EAAY6c,IAAK0Q,GAAcA,EAAUrxB,MAK1Dq+D,IAJmBv6D,aAAU,EAAVA,EAAY6wC,MAClCtjB,GAAcA,EAAU4e,gBAAkB5e,EAAU6e,eAAiB7e,EAAU8e,gBAG3C+tB,IAAuBC,EAExDG,EAAsB,WAAWh+D,KAAawI,KAAgB9I,gBAAmBo+D,EAAe,mBAEhGG,GACJH,aAAc,EAAdA,EAAgBlwD,QAAS,EACrBlM,EACE,mGAEFA,EACE,qHACA,CAAEo8D,mBAGV,OAAOC,EACH,CACEn7D,MAAOlB,EAAE,0BACTw8D,aAAa,EACb19B,QACE,gCACGy9B,E,IAAc,gBAAC,OAAI,CAACn4D,GAAIk4D,GAAsBt8D,EAAE,gCAGrDiB,QAAS,UAEX,MAGOw7D,EAAyB//D,I,kBACpC,MAAM,EAAEsD,GAAM,2BACR08D,EAAqB,cACrB//D,EAAW,YAAYD,GACvBsB,EAAyB,QAAlB,EAAArB,aAAQ,EAARA,EAAUsB,gBAAQ,eAAED,KAC3BM,EAA8B,QAAlB,EAAA3B,aAAQ,EAARA,EAAUsB,gBAAQ,eAAEK,WAE/Bq+D,EAAmBC,GAA4B,aAAgB,CACpE99D,MAAO,kBAAgBC,SACvBpC,SAAU,kBAAgBqC,OAC1BV,YACAN,OACAkB,KAAM,UAGR,IAAKvC,GAAY,aAAkB,qBAAqB,aAAaA,GAAW,OAAO,KAEvF,MACMgD,GADsE,QAA3B,EAAe,QAAf,EAAAhD,EAAS+C,cAAM,eAAEJ,kBAAU,QAAI,IACxC4jB,KAAMsR,GAAiC,mBAAnBA,EAAUh1B,MAChEq9D,EAAmD,QAAvB,EAAAl9D,aAAc,EAAdA,EAAgBf,eAAO,QAAI,GACvDk+D,EAA0D,QAAjC,EAA4B,QAA5B,EAAAD,EAAkBzzC,MAAM,YAAI,eAAG,UAAE,QAAI,GAEpE,IAAI2zC,EACAD,EAAuBrxD,SAAS,UAClCsxD,EAAc,IAAwB1M,mBAAmB,kBAAiB1zD,GACjEmgE,EAAuBrxD,SAAS,UACzCsxD,EAAc,IAAoB3/D,YAAY,kBAAiBT,IAGjE,MAAMqgE,EAAsBD,GAAeJ,IAAsBC,EAE3DK,EAAiBF,aAAW,EAAXA,EAAa9U,IAO9BiV,EAAkBF,EACtB,gBAAC,IAAe,CAACtoD,QANQ,KACzBgoD,EAAmB,oDACnBO,MAI+CF,EAAYx8D,YACzDxD,EAEJ,OAAO4C,EACH,CACEuB,MAAOlB,EAAE,4BACTw8D,aAAa,EACb19B,QAAS+9B,EACTM,YAAaD,EACbj8D,QAAS,WAEX,O,kCC1IN,kHAiBA,MAAMm8D,EAA8C,EAAGC,WACrD,MAAM,EAAEr9D,GAAM,2BACd,OACE,gCACE,gBAAC,KAAqB,CAACqB,KAAMrB,EAAE,qCAC/B,sBAAIM,UAAU,cACX+8D,EAAK1+C,IAAK2+C,GACT,sBAAI77D,IAAK67D,EAAIr/D,SAASD,KAAMsC,UAAU,mBACpC,gBAAC,KAAY,CACXi9D,iBAAkB,YAA+BD,GACjDt/D,KAAMs/D,EAAIr/D,SAASD,KACnBM,UAAWg/D,EAAIr/D,SAASK,iBASzBk/D,EAA2D9gE,IACtE,MAAO2gE,GAAQ,YAAyC,CACtDE,iBAAkB,CAChBz+D,MAAO,qBACPu5B,QAAS,KACT56B,KAAM,yBAER2/B,QAAQ,EACR1R,YAAY,IAGd,GAAIhvB,EAAQG,YAAc,IACxB,MAAO,MAACE,GAAW,OAAMA,GAG3B,MAAMJ,EAAW,YAAYD,GACvB+gE,EAAyB,aAAqCJ,EAAM1gE,GAQ1E,MAAO,CALL8gE,EAAuBvxD,OAAS,EAC9B,gBAAC,IAAyB,KACxB,gBAACkxD,EAAa,CAACC,KAAMI,UAErB1gE,GACW,OAAMA,K,kCC7DzB,sJAEO,MAAM2gE,EAAc,IACdC,EAAe,IACfC,EAAgB,IAEhBC,EAAgC,mB,kCCN7C,qEA+Ce,IA9BuC,EAAGnhE,UAASg6C,SAAQ1O,IAAGD,Q,UAC3E,MAAMpqB,EAAM,YACN,EAAE3d,GAAM,2BACRrD,EAAW,YAAYD,IACvB,aAAEw5B,GAAiB,aAAuBv5B,GAC1CytB,EAAiC,QAAzB,EAAiB,QAAjB,EAAA8L,aAAY,EAAZA,EAAe,UAAE,eAAEe,cAAM,eAAG,GAE1C,IAAK7M,EACH,OAAO,KAGT,MAAM7pB,EAAQP,EAAE,4BAA6B,CAAEN,OAAoB,QAAZ,EAAA0qB,EAAM1qB,cAAM,eAAEqF,QAE/D+4D,EAAU,aACd,aACA1zC,EAAMnsB,SAASD,KACfosB,EAAMnsB,SAASK,WAHJ,QAMb,OACE,gBAAC,IAAO,CAAC6xD,WAAYxyC,EAAKmhB,QAASv+B,EAAO+vC,SAAU,IAAgBytB,MAClE,qBAAGpgD,IAAKA,GACN,gBAAC,IAAoB,CAACqqB,EAAGA,EAAGD,EAAGA,EAAG2O,OAAQA,EAAQC,UAAWp2C,EAAOY,KAAM28D,GACxE,gBAAC,KAAM,CAACp+D,OAAQ0qB,EAAM1qB,OAAOqF,MAAOi5D,UAAQ,EAACC,WAAS,S,kCCxChE,gFAgDe,IA9BwC,EAAGvhE,UAASg6C,SAAQ1O,IAAGD,QAC5E,MAAMpqB,EAAM,YACN,EAAE3d,GAAM,4BACPwK,GAAgB,YAAuC,CAC5D4yB,QAAQ,EACR3/B,KAAM,aAAkB,oBACxB0lC,UAAU,KAEN,OAAEz4B,EAAM,WAAEC,GAAe,YAAoBH,GAC7C0zD,EAAexhE,EAAQ8P,UAAUX,MACjC,QAAEw0B,EAAO,OAAEt1B,EAAM,OAAEu1B,EAAM,WAAEr1B,GAAeizD,EAC1CC,IAAezzD,EACf0zD,EAAU/9B,GAAW,YAAWt1B,EAAQu1B,EAAQ51B,EAAQO,GACxDozD,EAAW,YAAmBD,EAAS1nB,EAAQ12C,EAAGm+D,EAAYxzD,GAEpE,IAAK0zD,EACH,OAAO,KAET,MAAM99D,EAAQP,EAAE,6BAChB,OACE,gBAAC,IAAO,CAACmwD,WAAYxyC,EAAKmhB,QAASv+B,EAAO+vC,SAAU,IAAgBguB,OAClE,qBAAG3gD,IAAKA,GACN,gBAAC,IAAS,CAACqqB,EAAGA,EAAGD,EAAGA,EAAG2O,OAAQA,EAAQv1C,KAAMi9D,EAASxnB,UAAQ,EAACD,UAAWp2C,GACxE,qBAAGmnB,UAAW,cAAcgvB,EAAS,OAAOA,EAAS,MAAO2nB,Q,kCCzCtE,sEAoEe,sBACb,KAlDuBE,IAAsC,CAC7DC,uBAAwB,IAAMD,EAAS,YAAyB,cAgDnD,CApC4D,EACzE7hE,UACAg6C,SACA1O,IACAD,IACAy2B,6BAEA,MAAM7gD,EAAM,YACN,EAAE3d,GAAM,2BACRk+D,EAAexhE,EAAQ8P,UAAUX,MACjC,iBAAEk0B,GAAqBm+B,EACvBO,EAAe,aAAgB1+B,GAC/B2+B,EAAoB,aAAqBD,GAQ/C,GAAI,aAAmCC,GAAoB,OAAO,KAElE,MAAMn+D,EAAQP,EAAE,6BAChB,OACE,gBAAC,IAAO,CAACmwD,WAAYxyC,EAAKlc,IAAI,kBAAkBq9B,QAASv+B,EAAO+vC,SAAU,IAAgBytB,MACxF,qBAAGpgD,IAAKA,GACN,gBAAC,IAAS,CAACqqB,EAAGA,EAAGD,EAAGA,EAAG2O,OAAQA,EAAQhiC,QAZxBnE,IACnBA,EAAE0mC,kBACFunB,IACA9hE,EAAQg1C,WAAWe,gBAAgBC,UAAU,kBAAiB,CAACh2C,EAAQitD,WASNhT,UAAWp2C,GACtE,qBAAGmnB,UAAW,cAAcgvB,EAAS,OAAOA,EAAS,MACnD,gBAAC,IAAiB,CAACgoB,kBAAmBA,EAAmB1P,SAAUtY,W,kCC5D/E,iEAsCe,IAtBuC,EAAGh6C,UAASg6C,SAAQ1O,IAAGD,QAC3E,MAAMpqB,EAAM,YACN,EAAE3d,GAAM,2BACR63B,EAAc,YAAYn7B,GAC1B6gB,EAAM,YAAasa,GACzB,IAAKta,EACH,OAAO,KAET,MAAMhd,EAAQP,EAAE,qBAChB,OACE,gBAAC,IAAO,CAACmwD,WAAYxyC,EAAKlc,IAAI,QAAQq9B,QAASv+B,EAAO+vC,SAAU,IAAgBguB,OAC9E,qBAAG3gD,IAAKA,GACN,gBAAC,IAAS,CAACqqB,EAAGA,EAAGD,EAAGA,EAAG2O,OAAQA,EAAQv1C,KAAMoc,EAAKq5B,UAAQ,EAACD,UAAWp2C,GACpE,qBAAGmnB,UAAW,cAAcgvB,EAAS,OAAOA,EAAS,MACnD,gBAAC,IAAmB,CAAC1V,MAAO,CAAEguB,SAAUtY,GAAUx1C,MAAOX,U,kCC9BrE,oJAiBA,MAsCao+D,EAAe,CAACn9D,EAAgB9D,IAqBpC,YAAiB,CACtB8D,QACA7E,SAAUe,EACVmO,KAvBY,CACZ,CACEtN,KAAM,uDACN62B,GAAI,UACJziB,MAAO,OAET,CACEpU,KAAM,2DACN62B,GAAI,MACJziB,MAAO,IAET,CACEpU,KAAM,2DACN62B,GAAI,UAEN,CACE72B,KAAM,+DACN62B,GAAI,aAUGwpC,EAAiD,CAC5DC,eAAgB,CAACphE,EAAeC,KAAiC,CAC/DiI,GAAI,kBACJpF,MAAO,IAAQP,EAAE,4BAA6B,CAAEvC,KAAMA,EAAKA,OAC3DwqD,IAAK,CACH9mD,KAAS,aAAgBzD,EAAKD,EAAKmuB,IAAM,aAAkBnuB,GAAQA,EAAKA,MAAlE,SAGRoB,aAAc,aAAepB,EAAMC,EAAK,YAE1CohE,eAAgB,CAACrhE,EAAeC,KAAiC,CAC/DiI,GAAI,uBACJpF,MAAO,IAAQP,EAAE,oCACjBioD,IAAK,IAAM,YAA6B,CAAErgD,WAAYlK,IACtDmB,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,WAGV6/D,aAAc,CAACthE,EAAeC,KAAiC,CAC7DiI,GAAI,gBACJpF,MAAO7C,EAAIyB,KAAKC,OACZ,IAAQY,EAAE,+BACV,IAAQA,EAAE,8BACdioD,IAAK,IAAM,aAAaxqD,EAAMC,GAAKe,MAAOC,GAAQ,YAAW,CAAEC,MAAOD,EAAIE,WAC1EC,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,WAGV8/D,eAAgB,CAACvhE,EAAeC,KAAiC,CAC/DiI,GAAI,kBACJpF,MAAO,IAAQP,EAAE,+BACjBioD,IAAK,IAzFc,EAACzmD,EAAgB9D,KACtC,MAAMy3B,EAAQ,GAcd,MAbM,gBAAiBz3B,EAAIyB,KAAK4C,SAAS9D,UACvCk3B,EAAMnoB,KAAK,CACTzO,KAAM,sCACN62B,GAAI,MACJziB,MAAO,KAGXwiB,EAAMnoB,KAAK,CACTzO,KAAM,0EACN62B,GAAI,MACJziB,MAAO,IAAI6b,OAGN,YAAiB,CACtBhtB,QACA7E,SAAUe,EACVmO,KAAMspB,KAuEK8pC,CAAexhE,EAAMC,GAAKe,MAAOC,GAAQ,YAAW,CAAEC,MAAOD,EAAIE,WAC5EmV,SAAUrW,EAAIyB,KAAKC,SAAU,EAC7B8/D,gBAAiB,oDACjBrgE,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,WAGVigE,eAAgB,CAAC1hE,EAAeC,KAAiC,CAC/DiI,GAAI,gBACJpF,MAAO,IAAQP,EAAE,6BACjBioD,IAAK,IAvHuB,CAACpqD,IAC/B,MAAMC,EAAM,CACVL,KAAM,oBACNM,WAAY,uBACZC,KAAMH,EAAGI,SAASD,KAClBE,QAAQ,EACRC,OAAO,GAEHC,EAAO,CACXJ,KAAMH,EAAGI,SAASD,KAClBK,GAAIR,EAAGI,SAASK,UAChBC,KAAM,eAER,OAAO,aAAU,wBAAuBT,EAAKM,IA2GzCghE,CAAwB1hE,GAAKe,MAAOC,IAClC,MAAMC,EAAQD,EAAIE,QAClB,YAAW,CAAED,YAEjBE,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfC,YAAa,cACbjB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,YAGVmxD,mBAAoB,CAAC5yD,EAAeC,KAAiC,CACnEiI,GAAI,uBACJpF,MAAO,IAAQP,EAAE,oCACjBioD,IAAK,IACH,YAAoB,CAClBzmD,MAAO/D,EACPd,SAAUe,IAEdmB,aAAc,CACZC,MAAOrB,EAAKsB,SACZpC,SAAUc,EAAKuB,OACfhB,KAAMN,EAAIO,SAASD,KACnBM,UAAWZ,EAAIO,SAASK,UACxBY,KAAM,WAGVmgE,qBAAsB,CAAC5hE,EAAeC,KAAiC,CACrEiI,GAAI,yBACJpF,MAAO,IAAQP,EAAE,sCACjBioD,IAAK,IACH,YAAoB,CAClBzmD,MAAO/D,EACP8P,OAAQ7P,IAEZmB,aAAc,aAAe,IAAqBnB,EAAK,c,kCC9K3D,iB,kCCAA,qBAQA,MAAM4hE,EAAe,GAqFN,IAnFE,CACfC,EAAkB,IAClBC,EAAmB,IACnBjhC,EAAsB+gC,KAEtB,MAAOlS,EAAOqS,GAAY,YAAwB,GAC5CC,EAAW,UAAa,GAG9B,YACE,IAAM,KACJA,EAAS9rB,SAAU,GAErB,IAGF,YAAgB,KACd6rB,GAAS,IAGRlhC,GAGH,MAAMohC,EAAc,WAyDpB,MAAO,CAACvS,EAvDY,yBAClB,cACG7gD,IACC,GAAIA,EAAM,CAER,IAAIqzD,EAEJ,MAAMC,EAAqB,CAACC,EAAmBC,KAC7CC,aAAaL,EAAY/rB,SACzBosB,aAAaJ,GAEA,MAATG,EACFH,EAAc1W,OAAOkR,WAAW,KAC9B4F,aAAaL,EAAY/rB,SACzB6rB,EAASK,IACRC,GAEHN,EAASK,IAIPG,EAAe,KACnBJ,GAAmB,EAAMN,IAGrBW,EAAe,KACnBL,GAAmB,EAAOL,IAM5B,OAHAjzD,EAAK4zD,iBAAiB,aAAcF,GACpC1zD,EAAK4zD,iBAAiB,aAAcD,GAE7B,KACL3zD,EAAK6zD,oBAAoB,aAAcH,GACvC1zD,EAAK6zD,oBAAoB,aAAcF,GACvCF,aAAaJ,GACTF,EAAS9rB,UAKX+rB,EAAY/rB,QAAUsV,OAAOkR,WAAW,KAClCsF,EAAS9rB,SACX6rB,GAAS,IAEV9wD,KAAK2Y,IAAIi4C,EAASC,QAM7B,CAACD,EAASC,Q,+uBCnDT,MA2DDa,EAAuB1xD,KAAK2xD,GAAK,IACjCC,EAA2B,IAAM5xD,KAAK2xD,GACtCE,EAAwB,GAExBC,EAA6E,YAChFv+D,IACC,MAAM,QACJxF,EAAO,YACPgkE,EAAW,SACXC,EAAQ,mBACRC,EAAkB,YAClBC,EAAcR,EAAoB,eAClCS,EAAiBP,EAAwB,aACzCQ,EAAeP,EAAqB,iBACpCQ,EAAgB,SAChBC,EAAQ,cACRC,EAAa,kBACbC,GACEj/D,GACGk/D,EAAQC,GAAa,WAAkC,OACvD3hD,EAAQ4hD,GAAa,YAAe,GACrCC,EAAW,WAEXpiE,EAAO,UAAc,KAOrB,CACFwN,KAAMs0D,GAAY,CAAEzhE,KAzFc,qBA0FlCgyD,UAAW0P,GAAiB,CAAE1hE,KA3FI,qBA4FlC6yD,MAAO,CAACV,EAA4B6P,KAClCF,GAAU,GACHE,EAAU9kE,SAEnB43D,KAAM,CAAC/gD,EAAkBo+C,EAA4Br/B,KACnDA,EAAE51B,QAAQ23D,SAEZlsB,IAAK,CACHmqB,EACAX,EACA6P,IACG,OAAD,6BACF,MAAMjuD,EAAQo+C,EAAQ8P,eACtB,IAAK,iBAAOnP,IAAe,kBAAQA,KAAgB/+C,EAAO,CACxD,MAAMmuD,QAAgBF,EAAUb,SAC9Ba,EAAU9kE,QACV41D,EACA/+C,EACAo+C,EAAQgQ,gBAEV,GAAID,GAAWA,EAAQx1D,SAAWi1D,EAEhC,YADAE,EAAU,CAAE3kE,QAAS8kE,EAAU9kE,QAAS8Q,OAAQ8kD,EAAY/+C,QAAOmuD,YAIvEJ,GAAU,GACVE,EAAUd,aAAY,MAExB9N,QAAUjB,IAAY,CACpBkB,WAAYlB,EAAQG,UACpBv+C,MAAOo+C,EAAQE,aAAeF,EAAQ8P,oBAAiB1kE,EACvD6kE,MAAOjQ,EAAQgQ,mBAIlB,CAACL,EAAWL,EAAUC,EAAeC,MACjC,SAAEtO,EAAQ,MAAEt/C,EAAK,MAAEquD,GAASC,GAAW,qBAAW1iE,EAAM+C,IACxDkrD,EAAOT,GAAY,qBACpBmV,EAAO,yBAAeD,EAASlV,GAErC,IAAKjtC,GAAUmzC,IAAat/C,EAE1B,OAAO,KAGLs/C,IAEF0O,EAAS3tB,QAAUguB,GAGrB,MAAMG,EAAYX,EAASA,EAAO7tD,MAAQA,EAE1C,IAAIyuD,EACAC,EAEJ,GAAIF,EACFE,EAAW,IAAI,QAAMF,EAAU/5B,EAAG+5B,EAAUh6B,GAC5Ci6B,EAAatlE,EAAQwlE,UAAU,YAAU30D,QAAQ40D,YAAYF,OACxD,CACL,MAAMlwB,EAASr1C,EAAQ40C,YACjB8wB,EAAe1lE,EAAQ2lE,qBAAuB,gBAAc/D,MAC5DgE,EAAiBF,EACnB,IAAI,QAAMrwB,EAAO/J,EAAI+J,EAAOlR,MAAQ,EAAGkR,EAAOhK,GAC9C,IAAI,QACFgK,EAAOusB,QACP3vD,KAAK4zD,IAAI1B,IAAgB9uB,EAAOlR,MAAQ,GAAKkR,EAAOhK,EAAIgK,EAAOjR,OAAS,GAE9EkhC,EAAatlE,EAAQwlE,UAAU,YAAU30D,QAAQ40D,YAAYG,GAC7DL,EAAW,IAAI,QACbtzD,KAAK6zD,IAAIJ,EAAetB,EAAiBD,GAAeE,EAAeiB,EAAWh6B,EAClFr5B,KAAK8zD,IAAIL,EAAetB,EAAiBD,GAAeE,EAAeiB,EAAWj6B,GAKtFrrC,EAAQgmE,oBAAoBV,GAC5BtlE,EAAQgmE,oBAAoBT,GAE5B,MAAMhmB,EACJ,qBACE37C,UAAW,cAAI,IAAOqiE,gCACtBhlD,IAAKmkD,EACL7B,aAAevgD,OAAmC3iB,EAA1B,IAAM2jE,GAAY,GAC1CR,aAAexgD,OAAoC3iB,EAA3B,IAAM2jE,GAAY,IAE1C,gBAACE,EAAkB,CACjBoB,WAAYA,EACZC,SAAUA,EACVpP,SAAUA,EACV+O,MAAOL,EAAS3tB,SAAW,GAC3BwZ,MAAOA,IAET,wBACEpkB,EAAG,mBACD,CACE,CAACg5B,EAAWh6B,EAAGg6B,EAAWj6B,GAC1B,CAACk6B,EAASj6B,EAAGi6B,EAASl6B,IAExB,GAEF66B,YAAY,OAKlB,OACE,gCACGljD,EAAS,gBAAC,QAAK,CAAC/Z,GAAI,aAAYs2C,GAAqBA,EACrDmlB,GACC,gBAAC,cAAW,CACVjvC,UAAW,CAAE6V,EAAGo5B,EAAO7tD,MAAMsvD,MAAO96B,EAAGq5B,EAAO7tD,MAAMuvD,OACpDxiE,UAAW0gE,EACX+B,MAAI,EACJC,eAAgB,KACd1B,GAAU,GACVZ,GAAY,MAvJxBgB,EA0J+BN,EAAOM,QAzJF,iBAAqBA,EAAQ,IA0JnDN,EAAOM,QACPN,EAAOM,QAAQ/iD,IAAKtc,GAClB,gBAAC,kBAAe,CACdZ,IAAKY,EAAE9B,MACPmU,QAAS,KACPisD,EAASS,EAAO1kE,QAAS0kE,EAAO5zD,OAAQ4zD,EAAO7tD,MAAOguD,EAAS3tB,QAASvxC,KAGzEA,EAAE9B,WApKK,IAC1BmhE,IAuLWuB,EAAsB,CACjCtC,EACAC,EAA8C,yBAC9CI,EACA19D,IACI6xC,IACJ,MAAMC,EAA+E,I,IAAA,SACnFzU,GAAQ,EACLz+B,EAAK,IAF2E,cAInF,MAAOggB,EAAMghD,GAAW,YAAe,IAChCC,EAAOC,GAAgB,YAAe,GACvCxW,EAAwB,cAAkB,IAAMsW,GAAQ,GAAO,IAC/DG,EAAwB,cAAkB,IAAMH,GAAQ,GAAQ,IAChExC,EAAc,cACjB4C,IACCF,EAAc/U,IACRA,IAASiV,GACXD,IAEKC,KAGX,CAACD,IAEH,OACE,gBAACluB,EAAgB,iBACVjzC,EAAa,CAClB0qD,sBAAuBA,EACvByW,sBAAuBA,EACvBrW,oBAAqBmW,IAEpBxiC,GACCze,GAAQihD,IACR,gBAAC1C,EAAqB,iBAChBn9D,EAAO,CACX5G,QAASwF,EAAMxF,QACfikE,SAAUA,EACVD,YAAaA,EACbE,mBAAoBA,EACpBI,iBAAkBA,OAS5B,OAHA5rB,EAAUzxC,YAAc,uBACtBwxC,EAAiBxxC,aAAewxC,EAAiBn3C,QAE5C,YAASo3C,K,kCCnUlB,4JAuCO,MAAMmuB,EAAqC,CAAC9lE,EAAM+B,KACvD,OAAQA,GACN,KAAK,IACH,OAAO,sBAAY,IAAZ,CACL,uBAAa,YAAmBA,GAAM,GAAO,GAA7C,CACE,wBAAc,CAAEk4C,YAAY,GAA5B,CAAoC,YAAgB,IAAhB,CAAoC,QAG9E,KAAK,IACH,OAAO,YACL,cACA,IAFK,CAIL,sBAKE,IALF,CAME,YAAqB,QAArB,CACE,uBAAa,YAAmBl4C,GAAhC,CACE,wBAAc,CAAEk4C,YAAY,GAA5B,CACE,YAAgB,IAAhB,CAAoC,UAMhD,KAAK,IACH,OAAO,yBACL,YAAmB,IAA0B,KADxC,CAEL,YAAgB,IAAhB,CAAoC,MACxC,KAAK,IACH,OAAO,IACT,KAAK,IACH,OAAO,IACT,QACE,OAAQj6C,GACN,KAAK,YAAU2uD,MACb,OAAO,sBAAY,IAAZ,CACL,wBACE,wBAAc,CAAE1U,YAAY,GAA5B,CACE,YAAgB,IAAhB,CAAoC,QAI5C,QACE,W,uZCzDK,uBAnBsC,I,IAAA,QAAEh7C,GAAO,EAAK8mE,EAAM,IAApB,aACnD,MAAM,cAAEC,GAAkB/mE,EAAQ8P,UAE5B2qC,EACHssB,GAAmB/mE,EAAQO,YAAY+zC,eAAkBt0C,EAAQkR,YAAYojC,cAE1E,mBAAiB0yB,KADjB,mBAAiBtsB,YAGvB,OACE,gBAAC,IAAQ,8BACM,eACb16C,QAASA,EACT4D,UAAU,mCACV62C,gBAAiBA,GACbqsB,O,kCCxBV,uCA2Be,uBARgCthE,GAC7C,gBAAC,IAAQ,eACP5B,UAAU,kBACV62C,gBAAiB,mBAAiBwsB,gBAC9BzhE,M,kCCvBR,4BAgCe,IApByC,EACtD8/D,aACAC,WACApP,WACAzF,QACAwU,YAEA,MAAM,EAAE5hE,GAAM,2BACd,OACE,gBAAC,yBAAsB,CACrBgiE,WAAYA,EACZC,SAAUA,EACVpP,SAAUA,EACV+O,MAAOA,EACPxU,MAAOA,EACPwW,YAAaxW,GAASyF,EAAW7yD,EAAE,0BAA4B,S,kCC3BrE,qFAmFe,uBAtDwCkC,IACrD,MAAM,IAAE2hE,GAAQ3hE,EAAMxF,QAAQ8P,UAExBs3D,EAAW,YAAgCD,KAAS,IAA6BE,MAEvF,IAAIC,EACJ,GAAIF,EAAU,CACZ,MAAM9B,EAAa9/D,EAAMxF,QAAQunE,gBAC3BhC,EAAW//D,EAAMxF,QAAQwnE,cACzBC,GAAWnC,EAAWh6B,EAAIi6B,EAASj6B,GAAK,EACxCo8B,GAAWpC,EAAWj6B,EAAIk6B,EAASl6B,GAAK,EACxCs8B,EACJ11D,KAAK21D,MAAMrC,EAASl6B,EAAIi6B,EAAWj6B,EAAGk6B,EAASj6B,EAAIg6B,EAAWh6B,IAAM,IAAMr5B,KAAK2xD,IAE3EiE,EAAa,cAEjB,IAAOC,aACP,iBAAe,aAAWC,QAE1B,IAAOC,wBAGTV,EACE,qBAAGt8C,UAAW,aAAay8C,MAAYC,aAAmBC,KAAa/jE,UAAWikE,GAChF,wBACEI,IAnCe,EAoCfC,IApCe,EAqCfC,GArCe,EAsCfC,GAtCe,EAuCfC,YAtCuB,IAwCzB,wBACEJ,IA1Ce,EA2CfC,GA3Ce,EA4CfC,GA5Ce,EA6CfC,IA7Ce,EA8CfC,YA7CuB,KAmD/B,OACE,gBAAC,IAAQ,eACPzkE,UAAU,sBACV0kE,kBAAmBlB,EAAW,aAAWW,YAAS1nE,EAClDo6C,gBAAiB,mBAAiBC,aAC9Bl1C,GAEH8hE,M,kCC9EP,uCAiBe,IAR4C9hE,GACzD,gBAAC,IAAQ,eACP5B,UAAU,wBACV62C,gBAAiB,mBAAiBwsB,gBAC9BzhE,K,kCCbR,uDAGA,MAAM+iE,EAA2B,IACxB,qBAAW,KAAelN,gB,kCCJnC,uEAKA,MAAMmN,EAAqB,GAIrBC,EAAkB,CACtBnnE,EACAqI,EAAoC,M,QAEpC,MAAMuvB,EAAc,eACdk1B,EAAcl1B,EAAYtrB,IAAI,eAC9B86D,EAAmD,QAArC,EAAyB,QAAzB,EAAAxvC,EAAYtrB,IAAI,iBAAS,eAAE8e,MAAM,YAAI,QAAI87C,EAEvDG,EAAgB,UAAc,KAClC,MAAMC,EAAe10D,OAAOwpC,QAAQ/zC,GAAQsY,IAAKpe,GAAUA,EAAMF,KAAK,MACtE,OAAO+kE,EAAYzyB,MAAOpyC,GAAU+kE,EAAa75D,SAASlL,KACzD,CAAC8F,EAAQ++D,IAOZ,MAAO,CALU,UAAc,KAAMG,OAfTn1D,EAe8B06C,EAfnBz6C,EAegCrS,EAfT,EAAM,YAAQoS,GAAI,YAAQC,IAA7D,IAACD,EAAWC,GAeuC,CAC5Ey6C,EACA9sD,OAGqB8sD,GAAiBua,GAAiBD,EAAYl5D,OAAS,EAAI4+C,K,ihBCwErE,uBAhEkC,I,IAAA,QAC/CpuD,EAAO,YACP8oE,EAAW,QACXrS,EAAO,WACPC,EAAU,gBACVc,GAAe,EACZsP,EAAM,IANsC,oEAQ/C,MAAOpW,EAAOT,GAAY,qBACpBmV,EAAO,yBAAe0D,EAAa7Y,IAClCe,GAAY,YAAgBhxD,EAAQy5C,YACrCsvB,EAAe,UAAsB,GAC3C,YAAgB,KACd,MAAMC,EAAYtS,IAAeD,GAAWe,EACxCwR,IAAcD,EAAa7xB,UAC7B6xB,EAAa7xB,QAAU8xB,EACvBhpE,EACG+1C,gBACAC,UAAU,IAA0Bh2C,EAASgpE,EAAY,gBAAC,IAAW,MAAM,QAE/E,CAACtS,EAAYD,EAASz2D,EAASw3D,IAClC,MAAMvG,EAAY,YAAaP,IACzB,SAAEsB,EAAQ,QAAER,EAAO,UAAEE,GAAc,YAA6B,mBAAiB3wD,MACjFwwD,EAAiB,IAAW,oBAAqB,CACrD,CAAC,qBAAqBC,EAAQC,gBAAmBC,IAG7CuX,EAAe,IAAW,wBAAyB,CACvD,cAAejY,IAGjB,OAAIhxD,EAAQs0C,cAER,gBAAC,IAAS,eACRke,YAAY,4BACZxyD,QAASA,EACTy2D,QAASA,EACTC,WAAYA,EACZ3E,MAAOC,EACPC,WAAYP,EACZH,eAAgBA,EAChBuX,YAAa1D,GACT0B,IAOR,gBAAC,IAAwB,eACvBljE,UAAWqlE,EACXhY,UAAWA,EACXjxD,QAASA,EACTy2D,QAASA,EACTC,WAAYA,EACZoS,YAAa1D,EACbrT,MAAOC,EACPC,WAAYP,EACZH,eAAgBA,GACZuV,O,4kBCzDV,MAIMoC,EAAmB,CACvBnB,OAAQ,CACN,qBACA,mBACA,WACA,eACA,QACA,SACA,UACA,mBACA,qBACA,OACA,WACA,iBAEFoB,QAAS,CACP,YACA,WACA,UACA,YACA,cACA,UACA,oBAEFC,OAAQ,CACN,MACA,UACA,WACA,oBACA,iBACA,cACA,aACA,eACA,YACA,UACA,WACA,YACA,WACA,SACA,QACA,WACA,YACA,UACA,UACA,YACA,QACA,aACA,sBACA,YACA,YACA,OACA,UACA,uBAgBSC,EAAqB,CAChCC,EACAC,EACAC,EACAC,EACAC,K,QAEA,MAAMC,EAGiB,QAFrB,EAAiB,QAAjB,EAAAL,aAAW,EAAXA,EAAajjE,YAAI,eAAE+N,OAAO,CAACqL,EAAK0/C,IACvBltD,KAAK2Y,IAAInL,EArBU,CAACmqD,IAC/B,OAAQA,GACN,KAAK,IAAarhD,OAClB,KAAK,IAAashD,iBAChB,OA9DoB,EA+DtB,KAAK,IAAaC,QAChB,OAjEqB,EAkEvB,QACE,OApEoB,IAiFCC,CAAiB,aAAa5K,KAjF/B,UAkFD,QAAI,aAAW7rC,QAEtC,OAlFwB,IAmFtBq2C,GACAJ,IAAkB,IAAcS,UAChCd,EAAiBnB,OAAOh5D,SAASy6D,IACjCN,EAAiBnB,OAAOh5D,SAAS06D,GAE1B,aAAW1B,OAzFK,IA4FvB4B,GACAJ,IAAkB,IAAcO,SAChCZ,EAAiBC,QAAQp6D,SAASy6D,IAClCN,EAAiBC,QAAQp6D,SAAS06D,IAClCC,IAA2B,aAAWP,QAE/B,aAAWA,QAEb,aAAW71C,SAqBd22C,EAAoD,oBAAS,SAA0B,G,uBAAA,YAC3FX,EAAW,QACXtpE,EAAO,SACPikC,EAAQ,aACRimC,EAAY,QACZzT,EAAO,WACPC,EAAU,YACVyT,EAAW,gBACX/Z,GAAe,EACZjW,EAAI,IAToF,4GAW3F,MAAM,EAAE72C,GAAM,4BACR,MAAE6gC,EAAK,OAAEC,GAAWpkC,EAAQ22C,gBAC5B6qB,EAAexhE,EAAQ8P,UAAUX,KACjC0a,EAAU,eACT6mC,EAAOT,GAAY,qBACpB7X,EAAOnmC,KAAKiZ,IAAIiZ,EAAOC,IACvB,OAAE4V,EAAM,gBAAEowB,GAAoB,aAAgBhyB,GAC9CyY,EAAK1sB,EAAQ,EACb2sB,EAAK1sB,EAAS,EACdimC,EAAaF,GAAe7mE,EAAE,sCAC9BgnE,EAAqB,YAAc,IAA0BzgD,GAC7D4wC,EAAwC,QAAzB,EAAA6P,aAAkB,EAAlBA,EAAoBr0D,aAAK,UACxC,WAAEs0D,GAAevqE,EAAQg1C,WAAWllC,UAEpCqhD,EADa,uCACanc,WAAWoc,kBACrCoZ,EAA8D,QAA/C,cAAqBhJ,EAAa39B,qBAAa,QAAI29B,EAAa39B,aAC/EwtB,EAAcX,GAASN,GAAmBe,IAAiB,oBAAkBG,IAC7EmZ,EAAiBpZ,EACnB,YAAkBrxD,EAASuqE,EAAY1Z,EAAIC,EAAI9W,EAAQowB,GACvD,MACE,iBAAE/mC,GAAqBm+B,EACvBO,GAAe,aAAgB1+B,GAC/B2+B,GAAoB,aAAqBD,IACzC9hE,GAAW,YAAYD,IACvB,aAAEw5B,IAAiB,aAAuBv5B,IAC1CupE,GAAoD,QAAtC,EAA8B,QAA9B,EAAyB,QAAzB,EAAiB,QAAjB,EAAAhwC,cAAY,EAAZA,GAAe,UAAE,eAAEe,cAAM,eAAG,UAAE,eAAEv3B,cAAM,eAAEqF,MACtDohE,GAAgE,QAA/C,EAA4B,QAA5B,EAAiB,QAAjB,EAAAzpE,EAAQ8P,iBAAS,eAAEH,iBAAS,eAAEoY,yBAAiB,QAAI,UACpE2iD,GAAkB,gCAAsB1qE,GACxC0pE,IAA0BgB,cAAe,EAAfA,GAAiBnmE,UAA0B,aAAW+uB,QAEtF,OACE,qBAAG1vB,UAAU,qBACX,gBAAC,IAAO,CACNw+B,QAASioC,EACTnkB,QAAQ,SACR1R,UAAWkiB,GAAcD,EACzBkU,kBAAmB,GAEnB,gBAAC,IAAQ,eACP/mE,UAAU,oBACVqsD,SAAUA,EACVF,YAAa,YAAkB3X,EAAMkxB,GACrCtZ,KAAMqB,IAAgBoJ,EAAe+P,OAAenqE,EACpDU,KAAMygE,EAAazgE,KACnBf,QAASA,EACT02D,WAAYA,EACZD,QAASA,EACTmU,YACGvZ,GACDgY,EACEC,EACAtH,GACAwH,GACAC,GACAC,IAGJmB,YAAaJ,EACbra,gBAAiBA,EACjBG,aAAcmZ,IACVvvB,GAEHmvB,GAAejY,EACd,gBAAC,IAAM,CAACjZ,KAAMA,EAAM9M,EAAGulB,EAAIxlB,EAAGylB,EAAI3hD,KAAMm6D,EAAa7O,aAAcA,IACjE,KACHx2B,QAOL6mC,EAA4C,oBAAS,SAAsB,G,IAAA,QAC/E9qE,GAAO,EACJm6C,EAAI,IAFwE,aAI/E,MAAMl6C,EAAW,YAA0BD,EAAQ8P,YAC7C,QAAE3F,EAAO,UAAEuwB,EAAS,OAAE7zB,GAAW,aACrC5G,EACAA,EAASc,KACTd,EAASsB,SAASK,WAEpB,OACE,gBAACqoE,EAAgB,eACfjqE,QAASA,EACTspE,YAAaziE,IAAW6zB,EAAYvwB,EAAU,MAC1CgwC,Q,yDChQV,qI,kCCAA,2HAGO,MAAM4wB,EAAwB,sBACxBC,EAA8B,6BAErCC,EAAwB,IAC5B,gCACE,gBAAC,IAAmB,CAAChiE,GAAI8hE,IACzB,gBAAC,IAAmB,CAClB9hE,GAAI+hE,EACJ5e,GAAI,EACJC,aAAc,EACdE,aAAc,Q,kCCbpB,0KAgDA,MAAM2e,EAA4B,CAAC,KAAM,IAAK,KAoCxCC,EAAsD,OAC1D,EAAGC,qBAAoBC,gBAAeC,mBAAkBC,aAAYC,cAC7DJ,EAIH,uBAAKxnE,UAAU,2BACb,gBAAC,wBAAqB,CAACmyD,WAAYsV,GACjC,gBAAC,uBAAoB,CAACtxD,MAAO,CAAE0xD,YAAa,CAACF,MAC5CC,GACC,uBAAK5nE,UAAU,gCACb,uBAAKA,UAAU,iCAAiC4nE,IAGpD,gBAAC,IAAkB,CAACH,cAAeA,EAAevzD,WAAYwzD,MAX3D,MAmBP1lC,EAAoB,CACxB8pB,MAAO,CACLzmD,GAHsB,qBAItBnG,KAAM,QACN4oE,OAAQ,IACRC,OAAQ,CAAC,eAAc,eAAc,UAAW,gBAAe,eAoRpD,gBACb,kBAb4B5xD,IACrB,CACL6xD,oBAAsBhqE,GAAsB,YAAsBmY,EAAOnY,KAI5CigE,IAA4B,CAC3DgK,mBAAoB,CAACjqE,EAAmBkD,KACtC+8D,EAAS,YAAsBjgE,EAAWkD,OAK5C,CAIE,aAIE,IACA,IACA,GANF,CAOE,OA1QF,EACFA,QACAsK,cACAxN,YACAm5C,WACA+wB,mBACAD,qBACAD,sBACAG,iBAAkBC,EAClBC,oBAAqBC,MAErB,MAAMC,EAAiB,SAAqB,OACrCf,EAAoBgB,GAAyB,YAAwB,IACrEZ,EAAUa,GAAe,WAAuB,IACjDC,EAAsB,UAAsB,GAE5Cf,EADc,eACW39D,IAAI,aAC5B2+D,EAA4BC,GAAoB,aAErD,MACKC,EAAmCC,GAAqB,aAE7D,MAEIC,EAAsB,cAAkB,KAC5C,MAAMC,EAAeZ,aAAsB,EAAtBA,EAAyBpqE,GACxCirE,EAAmB,IAAI,gBAC7BA,EAAiBC,uBAAuB,KACxCD,EAAiBE,sBAAsB,KAEvC,MAAMC,EAA4B,IAAW,KAC3C,MAAMC,EAAWJ,EAAiBp2B,UAC5By2B,EAAiB,CACrBjkE,GAAIgkE,EAASvd,MAAMzmD,GACnBnG,KAAMmqE,EAASvd,MAAM5sD,KACrBwoC,EAAG2hC,EAASvd,MAAMpkB,EAClBD,EAAG4hC,EAASvd,MAAMrkB,EAClB8hC,MAAOF,EAASvd,MAAMyd,MACtBC,YAAaH,EAASvd,MAAM0d,aAE9BvB,EAAmBjqE,EAAWsrE,IAC7B,KAEGG,EAA8B,IAAW,KAC7C,MAAMJ,EAAWJ,EAAiBp2B,UAC5B62B,EAhIc,EAAC1rE,EAAmBkkC,EAAoB4lC,KAChE,MAAM6B,EAAe,GAYrB,OAXAA,EAAa3rE,GAAa,CACxBkkC,MAAOA,aAAK,EAALA,EAAO7jB,IAAK8jB,GACjB7xB,OAAOC,KAAK4xB,GAAG3xB,OAAO,CAACqL,EAAK1a,KACtBmmE,EAA0Bn8D,SAAShK,KACrC0a,EAAI1a,GAAOghC,EAAEhhC,IAER0a,GACN,KAELisD,UAEK6B,GAmHuBC,CAAkB5rE,EAAWqrE,EAASnnC,MAAOmnC,EAASvd,MAAMgc,QACtFQ,EAAuBuB,GACd,OAAP,wBAAYA,GAAcH,KAE3B,KAsBH,OApBAT,EAAiBpJ,iBAAiB,wBAAuB4J,GACzDR,EAAiBpJ,iBAAiB,8BAA6BuJ,GAE3DJ,IAGG,IAAkB79D,SAAS69D,EAAalB,QAM3C9lC,EAAW8pB,MAAMgc,OAASkB,EAAalB,QALvC9lC,EAAW8pB,MAAMgc,OAAS,IAC1BQ,EAAuBuB,GACd,OAAP,wBAAYA,GAAS,CAAE/B,OAAQ,SAMrCmB,EAAiBa,UAAU9nC,GAC3BinC,EAAiBpJ,iBAAyC,kBAAkBkK,IAC1E,MAAMC,EAAiBD,EAAI,GAAKd,EAAiB1U,eAAewV,EAAI,IAAM,KAC1E5yB,EAAS6yB,KAEJf,GACN,CAACjrE,EAAWiqE,EAAoB9wB,EAAUmxB,EAAuBF,IAE9D6B,EAAmB,WACpBA,EAAiB32B,UACpB22B,EAAiB32B,QAAUy1B,KAE7B,MAAMtB,EAAgBwC,EAAiB32B,QAyJvC,OAxJA,YAAgB,KACVm0B,GACFS,EAAiBT,IAElB,CAACS,EAAkBT,IAEtB,YAAgB,K,MACd,GAAIvmE,GAASsmE,EAAoB,CAC/B,IAAKkB,EAAoBp1B,QAAS,CAChC,MAAM42B,EAAmBlC,EAAoBhqE,GACzCksE,IACFhpE,EAAM4qD,MAAQ,OAAH,wBACN9pB,EAAW8pB,OAAK,CACnBpkB,EAAGwiC,EAAiBxiC,EACpBD,EAAGyiC,EAAiBziC,EACpB8hC,MAAOW,EAAiBX,MACxBC,YAAaU,EAAiBV,YAC9Bj+D,KAA8B,QAAxB,EAAAk8D,EAAcr2B,kBAAU,eAAEllC,aAGpC,MAAM88D,EAAeZ,aAAsB,EAAtBA,EAAyBpqE,GAC1CgrE,GACF9nE,EAAMghC,MAAM1T,QAAS2T,IACnB,MAAMgoC,EAAanB,EAAa9mC,MAAMtf,KAAMwnD,GAAOA,EAAG/kE,KAAO88B,EAAE98B,IAC3D8kE,GACF7C,EAA0B94C,QAASrtB,IACjCghC,EAAEhhC,GAAOgpE,EAAWhpE,OAuB9B,GAhBAD,EAAMghC,MAAM1T,QAAS2T,IACnB,MAAMkoC,EAAU5C,EAAcrV,YAAYjwB,EAAE98B,IACxCglE,GAAW,IAAUA,EAAQn+D,UAAWi2B,EAAE52B,QAC5C42B,EAAE52B,KAAO8+D,EAAQn+D,aAGrBhL,EAAM2/B,MAAMrS,QAASve,IACnB,MAAMq6D,EAAU7C,EAAc8C,YAAYt6D,EAAE5K,IACxCilE,GAAW,IAAUA,EAAQp+D,UAAW+D,EAAE1E,QAC5C0E,EAAE1E,KAAO++D,EAAQp+D,aAIrBu7D,EAAcqC,UAAU5oE,IAGnBwnE,EAAoBp1B,UACvBo1B,EAAoBp1B,SAAU,EAC1B80B,aAAsB,EAAtBA,EAAyBpqE,IAAY,CACvC,MAAM8tD,EAAQ2b,EAAcr2B,WACtBlP,EAAQulC,EAAc/d,cAAcj+C,OAAO,UACjD,GAAIy2B,EAAMt2B,OAAQ,CAEhB,IADqBs2B,EAAMtf,KAAMuf,GAAM2pB,EAAM0e,aAAaroC,EAAG,CAAExB,QAAS,KACrD,CACjB,MAAM8pC,EAAc3e,EAAM9a,aACnB05B,GAAYxoC,EAAM1xB,OACvB,EAAEm6D,EAAaC,GAAkBC,KAC/B,MAAMC,EA9MK,EAAC7+D,EAAYwlC,KACxC,MAAMs5B,EAAa9+D,EAAK+kC,YAClBg6B,EAAQD,EAAWrjC,EAAIqjC,EAAWxqC,MAAQ,EAC1C0qC,EAAQF,EAAWtjC,EAAIsjC,EAAWvqC,OAAS,EAE3C+nB,EAAKl6C,KAAK2Y,IAAIyqB,EAAO/J,EAAIsjC,EAAO,EAAGA,GAASv5B,EAAO/J,EAAI+J,EAAOlR,QAC9DioB,EAAKn6C,KAAK2Y,IAAIyqB,EAAOhK,EAAIwjC,EAAO,EAAGA,GAASx5B,EAAOhK,EAAIgK,EAAOjR,SACpE,OAAOnyB,KAAK68D,KAAK3iB,EAAKA,EAAKC,EAAKA,IAuMC2iB,CAAqBN,EAAUJ,GAChD,OAAKE,GAAeG,EAAWF,EACtB,CAACC,EAAUC,GAEb,CAACH,EAAaC,IAEvB,CAAC,KAAM,IAET9e,EAAMsf,YAAYV,KAM1B,MAAMW,EAAe1D,EAAaF,EAAclT,eAAeoT,GAAc,KACxE0D,GAAiBA,EAAaz6B,YAGjCuG,EAASk0B,GAFTl0B,MAOH,CAACj2C,EAAOumE,EAAeD,IAE1B,YAAgB,KACToB,GAAqBE,IAI1BrB,EAAc6D,yBAAyB,KACvC,IAAI3C,KAA+BE,GAAmCr6C,QAASvxB,IAC7EwqE,EAAc6D,yBAAyBruE,EAAQs6C,WAAWg0B,cAG5D9D,EAAc5H,iBACZ,IACA,CAACzjE,EAASovE,KACR/C,EAAY+C,KAGhBhD,GAAsB,KACrB,CACDf,EACAmB,EACAE,EACAH,EACAE,IAGF,YAAgB,KACTN,EAAej1B,QAIhB9nC,IAAgB+8D,EAAej1B,UACjCi1B,EAAej1B,QAAU9nC,EACrBi8D,IACFA,EAAcr2B,WAAWq6B,QACzBhE,EAAcr2B,WAAW02B,WAP3BS,EAAej1B,QAAU9nC,GAU1B,CAACA,EAAai8D,IAEjB,YAAgB,KACd,IAAIiE,EAAgB,KACpB,GAAIjE,GACEE,EAAY,CACd,MAAMqC,EAAiBvC,EAAclT,eAAeoT,GACpD,GAAIqC,EAAgB,CAClB,MAAM2B,EAAgB,iBAAO3B,GACzBA,EACCA,EAA4BrtE,YACjC+uE,EAAgB5R,WACd,YAAO,KACL2N,EACGr2B,WACAg6B,YAAYO,EAAe,CAAE/V,OAAQ,GAAIgW,eAAgB,MAC5DF,EAAgB,OAElB,MAKR,MAAO,KACDA,GACFhM,aAAagM,KAGhB,CAAC/D,EAAYF,IAGd,gBAACF,EAAiB,CAChBC,mBAAoBA,EACpBC,cAAeA,EACfC,mBAAmBxmE,aAAK,EAALA,EAAOghC,MAAMt2B,QAChCg8D,SAAUA,EACVD,WAAYA,QA+BhB,M,kCCjZF,kCAiBe,IAb4BxqE,IACzC,OAAQA,GACN,KAAK,YAAU2uD,MACb,OAAO,IAAI,YACb,KAAK,YAAU7/C,KACb,OAAO,IAAI,IACb,KAAK,YAAUoB,KACb,OAAO,IAAI,IACb,QACE,U,kCCbN,6HAWO,MAAMw+D,EAAqB,CAChCC,EACA11B,EACA12C,EACAm+D,EACAxzD,KAEA,GAAIwzD,GAAciO,EAChB,OAAOzhE,EACL,yBAAOmkD,UAAWnkD,EAAYk2B,MAAO6V,EAAQ5V,OAAQ4V,IAErD,gBAAC,IAAO,CAAC1V,MAAO,CAAEguB,SAAUtY,KAGhC,OAAQ,YAAc01B,IACpB,KAAK,IAAYxnC,QAEf,OAAO,KACT,KAAK,IAAY/vB,OACf,OAAO,gBAAC,IAAU,CAACmsB,MAAO,CAAEguB,SAAUtY,GAAUx1C,MAAOlB,EAAE,iCAC3D,KAAK,IAAYgV,UACf,OACE,gBAAC,IAAa,CAACgsB,MAAO,CAAEguB,SAAUtY,GAAUx1C,MAAOlB,EAAE,iCAEzD,KAAK,IAAY8U,OACf,OAAO,gBAAC,IAAU,CAACksB,MAAO,CAAEguB,SAAUtY,GAAUx1C,MAAOlB,EAAE,iCAC3D,KAAK,IAAY+U,MACf,OAAO,gBAAC,IAAS,CAACisB,MAAO,CAAEguB,SAAUtY,GAAUyU,UAAQ,IACzD,QACE,OAAO,gBAAC,IAAU,CAACnqB,MAAO,CAAEguB,SAAUtY,GAAUx1C,MAAOlB,EAAE,oC,kCCxC/D,WAmBe,IAjBwC,EAAGghC,WAEtD,uBAAKF,OAAO,MAAMD,MAAM,MAAMxI,QAAQ,MAAMs/B,QAAQ,YAAY32B,MAAOA,GACrE,qBAAGqrC,SAAS,UAAUC,OAAO,OAAOvH,YAAY,IAAIlW,KAAK,QACvD,wBACE7lB,EAAE,sGACF6lB,KAAK,YAEP,wBACE7lB,EAAE,qFACF6lB,KAAK,e,kCCZf,+yBAqBO,MAAM0d,EAA0B,CACrC,CAAC,IAAkBC,UAAW,WAC9B,CAAC,IAAkBvnD,QAAS,SAC5B,CAAC,IAAkBwnD,gBAAiB,iBACpC,CAAC,IAAkBC,gBAAiB,iBACpC,CAAC,IAAkBC,iBAAkB,kBACrC,CAAC,IAAkBzmD,OAAQ,SAGhB0mD,EAA0B,CACrC,IAAkBJ,SAClB,IAAkBvnD,OAClB,IAAkBwnD,eAClB,IAAkBC,eAClB,IAAkBC,gBAClB,IAAkBzmD,OAGP2mD,EAAuB,CAAC,UAAW,cAAe,aAAc,gBAEhEC,EAAiBptE,GACvBA,EAGEA,EACJ0pB,MAAM,KACNzK,IAAK/K,GAAM,aAAYA,IACvBvT,KAAK,IALC,UAQE0sE,EAAwBC,GAC/BH,EAAqBphE,SAASuhE,EAAQC,KAAKvtE,QACtC,IAAkBwmB,MAEpB8mD,EAAQC,KAAKvtE,OAGTwtE,EAA0BltE,GAC9B,CACL,CACEmtE,gBAAiBntE,EAAE,sBACnBR,KAAM,sBACN4tE,QAASL,EACTh2D,MAAO61D,EAAwBjuD,IAAKjf,IAAW,CAC7CiG,GAAIjG,EACJwB,MAAOqrE,EAAwB7sE,QAM1B2tE,EAA6B,CAACC,EAAyBvhE,IAC3DuhE,EAASvhE,OAAQihE,GACfH,EAAqBphE,SAASuhE,EAAQC,KAAKvtE,QAC9CqM,EAAON,SAAS,IAAkBya,OAClCna,EAAON,SAASuhE,EAAQC,KAAKvtE,SAIxB6tE,EAA2B,CAACD,EAAyBvhE,IACzDuhE,EAASvhE,OAAQihE,GAAyB,EAAMjhE,EAAQihE,EAAQhvE,OAG5DwvE,EAAoB,CAC/BlvE,EACAmvE,KAEA,MAAMC,EAAc,yBAAyBpvE,eAAuBmvE,IAAa,IACjF,OAAO,YAAYC,IAGRC,EAAmB,CAC9BrvE,EACAsvE,KAEA,MAAMF,EAAc,wBAAwBpvE,UAAkBsvE,IAC9D,OAAO,YAAYF,IAGRG,EAAc,CACzBC,EACAC,EACAC,KAEA,MAAMC,EAA+BH,EAAc5qD,KAChDxlB,GAAQA,EAAI26B,UAAY01C,GAAgBrwE,EAAI8f,WAAawwD,GAE5D,OAAOC,aAAS,EAATA,EAAWC,KAAK,IAGZC,EAA0B,CACrCC,EACAJ,K,MAEA,MAAMK,EAAkBD,aAAiB,EAAjBA,EAAmBlrD,KAAMjF,GAASA,EAAKhgB,SAASD,OAASgwE,GACjF,OAAyB,QAArB,EAAAK,aAAe,EAAfA,EAAiBlvE,YAAI,eAAEnB,MAClBqwE,EAAgBlvE,KAAKnB,KAE1BgwE,EACK,aAAYA,GAEd,MAGIM,EAAqB,CAChCC,EACAC,EACAR,KAEA,MAAMxwD,EAAWwwD,EAAc7f,cAAc/kC,MAAM,KAAK/oB,KAAK,KAI7D,OAHmBuQ,OAAOC,KAAK09D,GAAcrrD,KAAM0mB,GACjDA,EAAIn+B,SAAS,GAAG+iE,MAAchxD,OAKrBixD,EAAwB,CACnCF,EACAC,EACAR,EACAI,EACAM,EACAC,K,QAEA,GAAIH,GAAaR,EAAe,CAC9B,MAAMY,EAAuBT,EAAwBC,EAAmBJ,GAClEa,EAAaP,EAAmBC,EAAcC,EAAWR,GAC/D,OAIK,QAHH,EAA0B,QAA1B,EAAAO,aAAY,EAAZA,EAAeM,UAAW,eAAElwD,IAAKpO,GAAO,OAAD,wBAClCA,GAAC,CACJiN,SAAUoxD,YACT,QAAI,GAuBX,OApBgB,IACdL,EACA,CAACpyD,EAAK2yD,EAAQrtE,KACZ,MAAM+b,EAAW/b,EAAI2nB,MAAM,MAAMkd,MAC3BsoC,EAAuBT,EAAwBC,EAAmB5wD,GAYxE,OAXAsxD,EAAOhgD,QAASigD,I,SAEZA,EAAM/wE,OAASwwE,GACdE,GACCC,IACkB,QAAlB,EAAAI,aAAK,EAALA,EAAOnqE,mBAAW,eAAG,QAA2B8pE,IAC9B,QAAlB,EAAAK,aAAK,EAALA,EAAOnqE,mBAAW,eAAG,QAA8B+pE,IAErDxyD,EAAInP,KAAK,OAAD,wBAAM+hE,GAAK,CAAEvxD,SAAUoxD,OAG5BzyD,GAET,KAKS6yD,EAAiB,CAC5BjB,EACAkB,EACAjvE,EACAguE,KAEA,IAAI9sE,EAAQ6sE,EAAa3kD,MAAM,MAAM,GASrC,OARI6lD,IACF/tE,GAASlB,EAAE,4CAA6C,CAAEivE,gBAExDjB,IACF9sE,GAASlB,EAAE,+CAAgD,CACzDguE,cAAe,aAAYA,MAGxB9sE,GAGIguE,EAAmB,CAACX,EAAmCvuE,IAC5C,IACpBuuE,EACA,CAAC7wE,EAAKqxE,KACJrxE,EAAI,GAAGqxE,EAAM12C,YAAY02C,EAAMvxD,YAAcwxD,EAC3CD,EAAM12C,QACN02C,EAAME,WACNjvE,EACA+uE,EAAMvxD,UAED9f,GAET,IAKSyxE,EAAuB,CAClCC,EACA9wE,EACA+wE,KAEA,OAAQD,GACN,KAAK,IAAkBjkB,SACrB,MAAO,gBAAgB7sD,EACzB,KAAK,IAAkBo3B,KACrB,MAAO,qBAAqBp3B,EAC9B,KAAK,IAAkBkE,QACrB,MAAO,qBAAqBlE,aAAqB+wE,IACnD,QACE,MAAO,qBAAqB/wE,IAIrBgxE,EAAsB,CACjCC,EACAF,EACA/wE,EACA0B,EACAovE,EACAI,EACAC,KAEA,OAAQF,GACN,KAAK,IAAeG,OAClB,MAAO,CACLlwE,KAAM,IAAekwE,OACrBxuE,MAAOlB,EAAE,mCACTu3D,SAAU,CACRoY,KAAM3vE,EACJ,iIAEF4vE,KAAM5vE,EACJ,+FAGJ6vE,eAAgB,uBAAuBtwB,mBACrCiwB,gBACalxE,gBAAwBihD,mBAAmBkwB,KAC1DtuD,MAAO,IAAYhQ,KACnB2+D,YAAaX,EAAqB,IAAkBhkB,SAAU7sD,EAAW+wE,IAE7E,KAAK,IAAeU,QAClB,MAAO,CACLvwE,KAAM,IAAeuwE,QACrB7uE,MAAOlB,EAAE,oCACTu3D,SAAU,CACRoY,KAAM3vE,EACJ,8FAEF4vE,KAAM5vE,EACJ,oFAGJ6vE,eAAgB,wBAAwBvxE,UAAkB+wE,IAC1DluD,MAAO,IAAY6uD,IACnBF,YAAaX,EAAqBC,EAAc9wE,EAAW+wE,IAG/D,KAAK,IAAeY,SAClB,MAAO,CACLzwE,KAAM,IAAeywE,SACrB/uE,MAAOlB,EAAE,qCACTu3D,SAAU,GACVsY,eAAgB,gCAAgCvxE,UAAkB+wE,IAClEluD,MAAO,IAAYgU,MACnB26C,YAAaX,EAAqBC,EAAc9wE,EAAW+wE,IAE/D,QACE,SAIOa,EAAoC7jE,GAC/CuE,OAAOC,KAAKxE,GAAWyE,OAAO,CAACqL,EAAK1e,KAC7B,IAAU4O,EAAU5O,GAAMoO,OAC7BsQ,EAAInP,KAAKX,EAAU5O,GAAMoO,MAEpBsQ,GACN,IAEQg0D,EAAsBpB,I,MACjC,MAAMqB,EAAgC,QAAZ,EAAArB,aAAK,EAALA,EAAO9+D,aAAK,eAAEiT,KAAMR,GAAuB,wBAAdA,EAAK1kB,MACtDqyE,EAAgBD,EAAoBE,KAAKF,EAAkBvkE,MAAQ,GAEzE,OAAIwkE,IAEI,IAAUtB,aAAK,EAALA,EAAOvtD,QAAoC,GAA1B,mBAASutD,aAAK,EAALA,EAAOvtD,UAGxC+uD,EAA6BvD,IACxC,IAAKA,IAAYA,EAAQwD,SACvB,MAAO,GAGT,OADkB,kBAAQxD,EAAQwD,SAAU,KAAM,CAAEC,OAAQ,sBAAqBpvD,MAAM,IACtEtV,OAAO2kE,UAGbC,EAAkB5B,I,QAC7B,MAAM6B,EAAyB,QAAZ,EAAA7B,aAAK,EAALA,EAAO9+D,aAAK,eAAEiT,KAAMR,GAAuB,cAAdA,EAAK1kB,MACrD,OAAmD,QAA3C,GAAA4yE,aAAU,EAAVA,EAAY/kE,OAAQykE,KAAKM,aAAU,EAAVA,EAAY/kE,aAAM,QAAI,IAG5CglE,EAAoB7wE,IAAiB,CAChD0vE,OAAQ1vE,EAAE,sBACV+vE,QAAS/vE,EAAE,uBACXiwE,SAAUjwE,EAAE,0BAGD8wE,EAA0B,CACrCzB,EACA/wE,KAEA,MAAMuxE,EAAyB,gCAAgCvxE,UAAkB+wE,IACjF,OAAO,YAAYQ,IAGRkB,EAAqB1kE,KAC9BA,EAAU6W,KAAMvmB,GAChB,KAAe8O,SAAS,IAAa,IAAM,aAAS,aAAa9O,IAAY,mB,kCC/UjF,0KA6CA,MAAMq0E,EAAYzkE,I,MAAe,OAC/B,4BACE,wBAAMjM,UAAU,mBACd,gBAAC,KAAY,CAAC7C,KAAyB,QAAnB,EAAA8O,EAAKC,UAAUX,YAAI,eAAEpO,QAE1C8O,EAAK4pC,aAIJ86B,EAEF,EACFC,eACAC,eACAC,gBACAl+D,SACAsO,SACA7T,OACAs8C,mBACAvqD,aAEA,MAAM,EAAEM,GAAM,4BACPqxE,EAAQC,GAAW,YAAwB,GAC5CC,EAAU/vD,EAAOhU,OAAOm8C,UAAYh8C,EAAKC,YAAY+7C,QAC3DynB,EAAcpxE,GAEd,MAYMo2C,EAAczoC,EAAK1Q,YAAYk5C,WACrC,OACE,wBAAM9hC,SAAU68D,EAAc5wE,UAAU,iBACtC,gBAAC,IAAU,KAAEN,EAAE,4BACf,gBAAC,IAAS,KACR,gBAAC,IAAK,CAACwxE,aAAa,KAAK18B,KAAK,KAAKx0C,UAAU,iBAC3C,gBAAC,QAAK,CAACjC,GAAG,WAAW2B,EAAGA,G,WACd,8BAAS,CAAEo2C,gB,QAGvB,uBAAK91C,UAAU,gBACb,gBAAC,IAAS,CAACmxE,QAAQ,cAAclxE,MAAM,UACrC,gBAAC,IAAM,CACLoF,GAAG,uBACHrF,UAAU,uBACVm3C,SAAU,CAACi6B,EAAG/+D,KACRA,IACF6O,EAAOhU,OAASmF,GAElB2+D,GAAQ,IAEVK,OAjCIC,GACd,gBAAC,IAAU,CACTjsE,GAAG,YACHgY,IAAKi0D,EACLl9D,QAAS,IAAM48D,GAASD,GACxB5lB,WAAY4lB,EACZQ,aAAW,GAEVb,EAASxvD,EAAOhU,SA0BT6jE,OAAQA,EACRS,aAAe/O,GAASuO,EAAQvO,IAEhC,gBAAC,IAAU,KACR9Y,EAAiBtrC,IAAKpS,GACrB,gBAAC,IAAY,CACX9K,IAAK8K,EAAKo9C,QACVh3C,MAAOpG,EACPwlE,WAAYvwD,EAAOhU,OAAOm8C,UAAYp9C,EAAKo9C,SAE1CqnB,EAASzkE,UAQxB,gBAAC,IAAiB,CAChBgI,WAAYvU,EAAE,iBACdgyE,gBAAiBT,GAAWJ,EAC5Bj+D,OAAQA,EACRX,WAAY4+D,EACZ78D,aAAc5U,GAAUA,EAAOuyE,gBAMvC,MAAMC,UAA4B,KAAlC,c,oBAMU,KAAA79D,SAAY89D,IAClB,MAAM,KAAExkE,GAASkC,KAAK3N,MACtB,OAAQyL,EAAK9Q,WACX,KAAK,IAEL,KAAK,IACH,OAAO,YAAiB8Q,EAAK1Q,YAAak1E,EAAWxkE,EAAKC,aAC5D,KAAK,IACH,OAAO,YAAqBD,EAAK1Q,YAAak1E,GAChD,KAAK,IACH,OAAO,YAAiCxkE,EAAK1Q,YAAak1E,GAC5D,QACE,OAAOtlE,QAAQC,OACb,IAAIM,MACFyC,KAAK7P,EAAE,sDAAuD,CAC5DR,KAAMmO,EAAK9Q,gBAOf,KAAAq0E,aAAe,CAAC1vD,EAAQ5kB,KAC9B,MAAM,MAAE05C,GAAUzmC,KAAK3N,MACvB,OAAO2N,KAAKuiE,cAAcviE,KAAKwE,SAASmN,EAAOhU,SAC5CpL,KAAK,KACJk0C,MAED73C,MAAOC,IACN9B,EAAQy1E,UAAU,CAAEJ,YAAavzE,OAI/B,KAAA0yE,cAAiBpxE,IACvB6P,KAAK7P,EAAIA,GAGX,SACE,MAAM,KAAE2N,GAASkC,KAAK3N,MAChBowE,EAAgB,CACpB9kE,OAAQG,EAAKC,aAEf,OACE,gBAAC,IAAM,CAAC0kE,cAAeA,EAAej+D,SAAUxE,KAAKqhE,cACjDqB,GACA,gBAACtB,EAAkB,eAACG,cAAevhE,KAAKuhE,eAAmBmB,EAAiB1iE,KAAK3N,UAOpF,MAAMswE,EAAsB,YAAqBtwE,GACtD,gBAACgwE,EAAmB,iBAAKhwE,M,kCCjM3B,kCAAO,MAAMuwE,EAAwBvwE,GACnC,iCAA2EE,KAAMkoD,GAC/EA,EAAEmoB,qBAAqBvwE,K,kCCF3B,qFAQA,MAAMwwE,EAAuE,EAAGh1E,U,UAC9E,MAAM,EAAEsC,GAAM,2BACR2yE,EAAuE,QAArD,EAA2B,QAA3B,EAAW,QAAX,EAAAj1E,aAAG,EAAHA,EAAKgC,cAAM,eAAEkzE,sBAAc,eAAEC,gCAAwB,QAAI,GACjF,OACE,gCACGF,EAAgBzmE,OAAS,GAAK,yBAAIlM,EAAE,4BACpC2yE,EAAgBh0D,IAAKi0D,GACpB,gBAAC,WAAc,CAACnxE,IAAKmxE,EAAe3lC,eAClC,2BACGjtC,EAAE,8B,KAAiC4yE,EAAe3lC,eAErD,2BACGjtC,EAAE,mB,KAAsB4yE,EAAeplE,OAAOqc,KAEjD,2BACG7pB,EAAE,sB,KAAyB4yE,EAAeplE,OAAO0c,YAQjD4oD,EAA4F,EACvGp1E,U,MAEA,MAAM,EAAEsC,GAAM,4BACPq9D,GAAQ,YAAuC,CACpDE,iBAAkB,CAChBz+D,MAAO,qBACPu5B,QAAS,KACT56B,KAAM,yBAERa,UAAwB,QAAb,EAAAZ,aAAG,EAAHA,EAAKO,gBAAQ,eAAEK,UAC1B8+B,QAAQ,EACR1R,YAAY,IAGR+xC,EAAyB,aAAqCJ,EAAM3/D,GAE1E,OACE,gCACE,0BAAKsC,EAAE,uCACP,0BACGy9D,EAAuBvxD,OAAS,EAC7BuxD,EAAuB9+C,IAAK2+C,I,QAAQ,OAClC,gCACE,yBACE,gBAAC,eAAY,CACXC,iBAAkB,YAA+BD,GACjDt/D,KAAmB,QAAb,EAAAs/D,aAAG,EAAHA,EAAKr/D,gBAAQ,eAAED,KACrBM,UAAwB,QAAb,EAAAg/D,aAAG,EAAHA,EAAKr/D,gBAAQ,eAAEK,aAG9B,gBAACo0E,EAAe,CAACh1E,IAAK4/D,OAG1Bt9D,EAAE,6C,kCCjEd,uJ,kCCCA,8KAGY+yE,EAHZ,SAGA,SAAYA,GACV,oCACA,sDACA,kDACA,0CAJF,CAAYA,MAAO,KAOZ,MAAMC,EAA+BC,GACnC,iBAAOF,EAAQG,yBAA0B,CAAED,qBAGvCE,EAA6BC,GACjC,iBAAOL,EAAQM,uBAAwB,CAAED,mBAGrCE,EAAwB,CAACh1E,EAAmBgkC,IAChD,iBAAOywC,EAAQQ,mBAAoB,CAAEj1E,YAAWgkC,eAG5CkxC,EAAwB,CAAC/8D,EAAkBnY,K,UACtD,MAAM6sD,EAAqC,QAA1B,EAAc,QAAd,EAAA10C,aAAK,EAALA,EAAO20C,eAAO,eAAEC,kBAAU,eAAEF,SAC7C,OAA0C,QAAnC,EAAAA,aAAQ,EAARA,EAAU7gD,IAAI,6BAAqB,eAAGhM,K,2PCH/C,MAIMm1E,EAAiB5X,IACrB,MAAM6X,EAAc,IACf,IAAM7X,EAAK,2BAA4B,OACvC,IAAMA,EAAK,+BAAgC,KAE1C8X,EAAc,IAClBD,EACA,CAACE,EAAOC,IACFA,EAAWp9D,MAAMq9D,QACZ,IAAIF,EAAO,IAAMC,EAAY,4BAElCA,EAAWp9D,MAAM+Y,WACZ,IAAIokD,EAAO,IAAMC,EAAY,gCAElCA,EAAWvkD,UAAUwkD,QAChB,IAAIF,EAAO,IAAMC,EAAY,gCAElCA,EAAWvkD,UAAUE,WAChB,IAAIokD,EAAO,IAAMC,EAAY,oCAE/B,IAAID,EAAO,IAAMC,EAAY,IAAMhY,EAAK,eAEjD,IAGF,OAAO,IAAO,IAAU8X,EAAYxkE,UAGhC4kE,EAAc,CAClB,qBACA,mBACA,WACA,QACA,SACA,qBACA,YACA,UACA,YACA,eAGIC,EAAcnY,GAAiB,IAAWkY,EAAa,aAASlY,IAEhEoY,EAAapY,GAAmC,YAAlB,aAASA,GAUhCqY,EAAa,CAACC,EAAeC,KACxC,MAAMC,EAASL,EAAWG,GAG1B,GAAIE,IAFWL,EAAWI,GAGxB,OAAOC,GAAU,EAAI,EAGvB,MAAMC,EAAWL,EAAUE,GAG3B,GAAIG,IAFaL,EAAUG,GAGzB,OAAOE,EAAW,GAAK,EAGzB,MAAMC,EAAWd,EAAcU,GACzBK,EAAWf,EAAcW,GAE/B,OAAIG,EAAWC,EACN,EAELD,EAAWC,GACL,EAGHL,EAAKl2E,SAASD,KAAK8rD,cAAcsqB,EAAKn2E,SAASD,OAGlDy2E,EAAkD,EAAG5Y,UACzD,MACE59D,UAAU,KAAED,EAAI,UAAEM,IAChBu9D,GACE,EAAE77D,GAAM,2BACd,OACE,sBAAIM,UAAU,mCACZ,uBAAKA,UAAU,OACb,wBAAMA,UAAU,YACd,gBAAC,KAAY,CAAC7C,KA9FH,MA8FeO,KAAMA,EAAMM,UAAWA,KAEnD,wBAAMgC,UAAU,YACd,gBAAC,YAAS,CAACu7D,IAAKA,KAElB,wBAAMv7D,UAAU,YACd,gBAAC,IAAU,CAACo0E,QAAS12E,EAAMM,UAAWA,EAAWq2E,aAAW,KAE9D,wBAAMr0E,UAAU,uBACd,gBAAC,OAAI,CAAC8D,GAAO,aAvGF,MAuGqBpG,EAAMM,GAA5B,SAAgD0B,EAAE,yBAOtEy0E,EAAgB9wE,YAAc,kBAM9B,MAAMixE,EAAmD,EAAG7xE,UAC1D,sBAAIzC,UAAU,cACX,IAAMyC,EAAO84D,GACZ,gBAAC4Y,EAAe,CAAChzE,IAAKo6D,EAAI59D,SAASyD,IAAKm6D,IAAKA,MAKnD+Y,EAAiBjxE,YAAc,mBAE/B,MAyDakxE,EAA0D,EACrEn3E,MACAqF,OACAQ,SACA6zB,YACA09C,cACAC,YACAx1C,sB,MAEA,MACEthC,UAAU,KAAED,EAAI,UAAEM,IAChBZ,GACE,EAAEsC,GAAM,4BACPg1E,EAAiBC,GAAsB,YAAe,GACvDC,EAjEuB,EAAC52E,EAAmBN,KACjD,MAAMw6C,EAAmB,CACvB28B,aAAc,CACZ5X,iBAAkB,CAChBz+D,MAAO,gBACPu5B,QAAS,UACT56B,KAAM,YAERa,aAEF82E,cAAe,CACb7X,iBAAkB,CAChBz+D,MAAO,gBACPu5B,QAAS,WACT56B,KAAM,YAERa,cAKE+2E,EAAmB,YAAqB78B,GAgB9C,OAdkB,UAAc,KAC9B,MAAM88B,EAAe,OAAH,wBACXD,EAAiBF,aAAatpE,MAAmB,IACjDwpE,EAAiBD,cAAcvpE,MAAmB,IAGzD,OAAO+E,OAAOC,KAAKykE,GAChBvpE,OAAQtK,I,QAEP,OAA2B,QAApB,EAAa,QAAb,EADU6zE,EAAa7zE,GACdtC,YAAI,eAAEirB,aAAK,eAAEpsB,QAASA,IAEvC2gB,IAAKld,GAAQ6zE,EAAa7zE,KAC5B,CAAC4zE,EAAkBr3E,KA8BGu3E,CAAuBj3E,EAAWN,GAErDw3E,GACyB,QAA7B,EAAAj2C,aAAe,EAAfA,EAAiBrJ,oBAAY,eAAEhqB,QAAS,IACvCqzB,EAAgBrJ,aAAa,GAAGe,OAAO/E,KAAM9H,GA3E/B,CAACA,IAA0B,MAAC,OAAY,QAAZ,EAAAA,EAAM1qB,cAAM,eAAE+1E,qBA2EDC,CAAWtrD,IAE/DurD,GACJT,aAAgB,EAAhBA,EAAkBhpE,QAAS,IAC1BgpE,EAAiBhjD,KAAM0jD,GAjCD,CAACA,I,QAC1B,MAAM/6C,EAAiD,QAA5B,EAAgB,QAAhB,EAAA+6C,aAAQ,EAARA,EAAUl2E,cAAM,eAAEJ,kBAAU,eAAE4jB,KACtDsR,GAAiC,cAAnBA,EAAUh1B,MAG3B,OACkC,UAA/Bq7B,aAAkB,EAAlBA,EAAoBn7B,SAAoD,WAA/Bm7B,aAAkB,EAAlBA,EAAoBn7B,UAC/B,eAA/Bm7B,aAAkB,EAAlBA,EAAoBp7B,SA0BiBo2E,CAAmBD,IAEpDE,GACHN,GAAyBG,IA/JY,CAACj4E,I,QACzC,MAAa,eAAbA,EAAID,MACyD,yBAApC,QAAzB,EAAY,QAAZ,EAAAC,EAAIO,gBAAQ,eAAE2G,mBAAW,eAAG,+BA6JyBmxE,CAAkCr4E,GAEvF,IAAIs4E,EAAe,IAAIjzE,GACnB+yE,IAA6Bd,IAC/BgB,EAAeA,EAAajqE,OAAQ8vD,IA/JZ,CAACA,I,UAC3B,MAAsB,aAAZ,QAAV,EAAAA,EAAIn8D,cAAM,eAAEqF,SACiB,QAA7B,EAAU,QAAV,EAAA82D,EAAIn8D,cAAM,eAAEu2E,yBAAiB,eAAE/jD,KAAMgkD,IAAqBA,EAAgBC,WA6J3BC,CAAoBva,KAEnEma,EAAa7mE,KAAK+kE,GAElB,MAAMmC,EAAgB,IAAO,IAAStzE,EAAO84D,GAAQmY,EAAWnY,KAC1Dya,EAAY3nE,KAAK2Y,IAAI3Y,KAAKiZ,IAAIyuD,EAvNP,IADN,GAyNjBE,EAASzB,GAAkB,aAAa,aAAap3E,GAAMM,EAAMM,GAAzC,QACxBk4E,EAAezB,GAAa/0E,EAAE,mDAE9By2E,EAAWX,EACf,gBAAC,IAAK,CACJ90E,UAAQ,EACRC,QAAQ,OACRC,MAAOlB,EAAE,gCACTm9D,YACE,gBAAC,IAAe,CACdzoD,QAAS,IAAMugE,GAAoBD,GAAgB,YACzC,gBAGNh1E,EADHg1E,EACK,+CACA,kDAITh1E,EACC,wJAGF,KAEJ,OACE,gCACE,gBAAC,KAAqB,CAACqB,KAAMrB,EAAE,gBAC5B,IAAO+C,GAAQuzE,GACd,gBAAC,OAAI,CAACh2E,UAAU,4BAA4B8D,GAAImyE,GAC7Cv2E,EAAE,sCAAuC,CAAE02E,QAAS,IAAO3zE,QAIjEw8B,aAAe,EAAfA,EAAiBh8B,WAAWg8B,aAAe,EAAfA,EAAiBnI,YAAaq/C,EAC1D,IAAUT,GACT,wBAAM11E,UAAU,cAAciD,GAAY6zB,EAAYo/C,EAAe,gBAAC,IAAU,OAEhF,gBAAC5B,EAAgB,CAAC7xE,KAAM,IAAOizE,EAAcM,OAKrDzB,EAAoBlxE,YAAc,uB,kCC3RlC,yJAoBA,MAEMgzE,EAAc,EAAGvsD,Y,QACrB,MAAM,EAAEpqB,GAAM,2BACd,OAAQoqB,EAAM1qB,OAAOqF,OACnB,KAAK,IAAWqgB,UACd,OACE,gBAAC,QAAK,CAACplB,EAAGA,EAAG3B,GAAG,Y,SACR,gBAAC,kBAAe,CAAC+rB,MAAOA,I,kBAGpC,KAAK,IAAWwsD,SACd,OACE,gBAAC,QAAK,CAAC52E,EAAGA,EAAG3B,GAAG,Y,SACR,gBAAC,kBAAe,CAAC+rB,MAAOA,I,iBAGpC,KAAK,IAAWhd,MACd,OACE,gBAAC,QAAK,CAACpN,EAAGA,EAAG3B,GAAG,Y,SACR,gBAAC,kBAAe,CAAC+rB,MAAOA,I,yBAGpC,KAAK,IAAWnF,OACd,OACE,gBAAC,QAAK,CAACjlB,EAAGA,EAAG3B,GAAG,Y,SACR,gBAAC,kBAAe,CAAC+rB,MAAOA,I,WAGpC,KAAK,IAAWysD,IACd,OACE,gBAAC,QAAK,CAAC72E,EAAGA,EAAG3B,GAAG,Y,SACR,gBAAC,kBAAe,CAAC+rB,MAAOA,I,WAGpC,KAAK,IAAWzE,QACd,OACE,gBAAC,QAAK,CAAC3lB,EAAGA,EAAG3B,GAAG,Y,SACR,gBAAC,kBAAe,CAAC+rB,MAAOA,I,eAGpC,KAAK,IAAWlF,QACd,OACE,gBAAC,QAAK,CAACllB,EAAGA,EAAG3B,GAAG,Y,SACR,gBAAC,kBAAe,CAAC+rB,MAAOA,I,eAGpC,QACE,OACE,gBAAC,QAAK,CAACpqB,EAAGA,EAAG3B,GAAG,Y,SACR,gBAAC,kBAAe,CAAC+rB,MAAOA,I,OAAiC,QAAnB,EAAY,QAAZ,EAAAA,EAAM1qB,cAAM,eAAEqF,aAAK,a,EAAEopD,iBAMrE2oB,EAAc,EAAG1sD,YACrB,MACE1qB,QAAQ,WAAEq3E,EAAU,QAAEn4E,EAAO,MAAEmG,IAC7BqlB,EAEJ,MADqB,CAAC,IAAWhd,MAAO,IAAW6X,QAAQxZ,SAAS1G,GAC9C,gBAAC,KAAU,CAACnG,QAASA,EAASm4E,WAAYA,IAAiB,MAG7EC,EAA0D,EAAG5sD,YACjE,MACEnsB,UAAU,kBAAEsH,GACZ7F,QAAQ,oBAAE+1E,EAAmB,eAAEwB,EAAc,MAAElyE,IAC7CqlB,EACE8sD,EAAczB,GAAuBwB,GAAkB1xE,EAC7D,OACE,sBAAIjF,UAAU,wCACZ,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,2CACb,uBAAKA,UAAU,6CACF,YAAVyE,EACC,gBAAC,IAAiB,CAAC2nD,KAAM,gBAAC,IAAW,MAAKxrD,MAAO6D,EAAOoyE,MAAI,EAACnZ,UAAQ,IAErE,gBAAC,KAAM,CAACt+D,OAAQqF,EAAOi5D,UAAQ,KAGnC,2BACE,gBAAC2Y,EAAW,CAACvsD,MAAOA,IACnB8sD,GACC,gCACG,IACD,wBAAM52E,UAAU,wC,IACZ,YAAQ42E,G,QAMpB,2BACE,gBAAC,eAAY,CAAC9sD,MAAOA,MAGzB,gBAAC0sD,EAAW,CAAC1sD,MAAOA,MAKpBgtD,EAAsD,EAAG53C,kBAC7D,MACEvhC,UAAU,KAAED,EAAI,UAAEM,GAAW,OAC7B24B,GACEuI,GACE,EAAEx/B,GAAM,2BAERq3E,EAAgB,aAAgB,CACpCv4E,MAAO,mBAAiBC,SACxBpC,SAAU,mBAAiBqC,OAC3BC,YAAa,cACbjB,OACAM,YACAY,KAAM,WAQR,OACE,sBAAIoB,UAAU,cACZ,sBAAIA,UAAU,wCACZ,uBAAKA,UAAU,8BACb,2BACE,gBAAC,KAAY,CAACg3E,QAAM,EAAC75E,KAAK,cAAcO,KAAMA,EAAMM,UAAWA,KAEhE24B,EAAO/qB,OAlIE,GAmIR,2BACE,gBAAC,OAAI,CACH5L,UAAU,4BACV8D,GAAO,aAAa,aAAao7B,GAAcxhC,EAAMM,GAAjD,WAEH0B,EAAE,qCAAsC,CACvCu3E,aAActgD,EAAO/qB,WAK5BmrE,GACC,2BACE,gBAAC,IAAM,CAACp2E,QAAQ,YAAYyT,QA3BxB,KACd,YAAW8qB,GAAa/gC,MAAOC,IAC7B,MAAMC,EAAQD,EAAIE,QAClB,qBAAW,CAAED,aAwBuC,eAAe,sBACxDqB,EAAE,6BAMVi3B,aAAM,EAANA,EAAQ/qB,QAAS,EAKlB+qB,EACGmS,MAAM,EA7JG,GA8JTzqB,IAAKyL,GAAU,gBAAC4sD,EAAiB,CAACv1E,IAAK2oB,EAAMnsB,SAASyD,IAAK0oB,MAAOA,KANrE,sBAAI9pB,UAAU,mBACZ,wBAAMA,UAAU,cAAcN,EAAE,uDAU7Bw3E,EAAqD,EAAGthD,mBACnE,MAAM,EAAEl2B,GAAM,2BACd,OAAMk2B,aAAY,EAAZA,EAAchqB,QAAS,EAI3B,uBAAK5L,UAAU,kBACb,gBAAC,KAAqB,CAACe,KAAMrB,EAAE,qBAC9Bk2B,EAAavX,IAAK6gB,GACjB,gBAAC43C,EAAiB,CAAC31E,IAAK+9B,EAAYvhC,SAASyD,IAAK89B,YAAaA,MAN5D,O,kCC1LX,uFAQA,MAAMi4C,EAAkD,EAAGC,c,QACzD,MAAMC,EAA2B,QAAnB,EAAY,QAAZ,EAAAD,EAAQv4E,YAAI,eAAEw4E,aAAK,QAAI,IAC/B,EAAE33E,GAAM,2BACd,OACE,sBAAIM,UAAU,aACXq3E,EAAMh5D,IAAI,EAAG3gB,OAAM4vC,OAAMgqC,WAAUC,gBAClC,sBAAIp2E,IAAKzD,GAAQ,GAAG45E,KAAYhqC,KAC9B,wBAAMttC,UAAU,cAAcN,EAAE,2BAAkC,IACjEhC,GAAQ,GAAG45E,KAAYhqC,I,IAExB,gBAAC,IAAqB,M,IAEtB,wBAAMttC,UAAU,cAAcN,EAAE,uB,IAA+B63E,MAOnEC,EAAmE,EAAGJ,cAC1E,MAAM,KAAE15E,EAAI,UAAEM,GAAco5E,EAAQz5E,SACpC,OACE,sBAAIqC,UAAU,mBACZ,gBAAC,KAAY,CAAC7C,KAAK,UAAUO,KAAMA,EAAMM,UAAWA,IACpD,gBAACm5E,EAAe,CAACC,QAASA,MAK1BK,EAA2D,EAAGt0C,cAClE,sBAAInjC,UAAU,cACXmjC,aAAQ,EAARA,EAAU9kB,IAAK+4D,GACd,gBAACI,EAAwB,CAACr2E,IAAKi2E,EAAQz5E,SAASyD,IAAKg2E,QAASA,MAK9DM,EAAgE,EAAGtyC,YACvE,MAAM,KAAE1nC,EAAI,UAAEM,GAAconC,EAAMznC,UAC5B,EAAE+B,GAAM,2BACd,OACE,sBAAIM,UAAU,mBACZ,gBAAC,KAAY,CAAC7C,KAAK,QAAQO,KAAMA,EAAMM,UAAWA,IAClD,wBAAMgC,UAAU,cAAcN,EAAE,uBAChC,gBAAC,IAAa,CAACtC,IAAKgoC,MAKpBuyC,EAAwD,EAAGhsE,YAC/D,sBAAI3L,UAAU,cACX2L,aAAM,EAANA,EAAQ0S,IAAK+mB,GACZ,gBAACsyC,EAAsB,CAACv2E,IAAKikC,EAAMznC,SAASyD,IAAKgkC,MAAOA,MAKjDwyC,EAAwD,EAAGx6E,UACtE,MAAM,EAAEsC,GAAM,2BACRm4E,EAAmB,aAAmBz6E,GACtC+lC,EACJ00C,EAAiB50E,SAAW40E,EAAiB/gD,UAAY+gD,EAAiB10C,SAAW,GACjF20C,EAAiB,aAAiB16E,GAClCuO,EAASmsE,EAAe70E,SAAW60E,EAAehhD,UAAYghD,EAAensE,OAAS,GAC5F,OACE,gCACE,gBAAC,KAAqB,CAAC5K,KAAMrB,EAAE,wBAC5ByjC,aAAQ,EAARA,EAAUv3B,QAAS,EAGpB,gBAAC6rE,EAAoB,CAACt0C,SAAUA,IAFhC,wBAAMnjC,UAAU,cAAcN,EAAE,kDAKlC,gBAAC,KAAqB,CAACqB,KAAMrB,EAAE,sBAC5BiM,aAAM,EAANA,EAAQC,QAAS,EAGlB,gBAAC+rE,EAAkB,CAAChsE,OAAQA,IAF5B,wBAAM3L,UAAU,cAAcN,EAAE,mD,kCCnFxC,2FAYA,MAGMq4E,EAAkD,EAAG3e,UACzD,MACEz7D,UAAU,KAAED,EAAI,UAAEM,IAChBo7D,EACE4e,EAAc,aAAa,aAAa5e,GAAM17D,EAAMM,GAAzC,SACX,QAAEuI,EAAO,OAAEtD,EAAM,UAAE6zB,GAAc,aAAesiC,EAAK,MAAOp7D,GAElE,OAAOiF,IAAW6zB,EAChB,sBAAI92B,UAAU,mCACZ,uBAAKA,UAAU,sBACb,gBAAC,KAAY,CAAC7C,KAbD,MAaaO,KAAMA,EAAMM,UAAWA,IACjD,gBAAC,OAAI,CAAC8F,GAAIk0E,EAAUh4E,UAAU,0BAC5B,gBAAC,KAAS,CACRi4E,YAAU,EACV1sE,KAAMhF,EAAQ9D,KACd+xC,KAAM,GACN2X,YAAa,EACbgL,YAAa,GACbv2D,MAAO,GAAG2F,EAAQ9D,KAAKmJ,OACvBsrD,eAAgB,gBAAC,IAAU,CAACx2B,MAAO,CAAEguB,SAAU,UAC/CwpB,aAAa,OAKnB,MAGNH,EAAgB10E,YAAc,kBAM9B,MAAM80E,EAAoD,EAAGn1C,UAC3D,sBAAIhjC,UAAU,cACXgjC,aAAI,EAAJA,EAAM3kB,IAAK+6C,GACV,gBAAC2e,EAAe,CAAC52E,IAAKi4D,EAAIz7D,SAASyD,IAAKg4D,IAAKA,MAKnD+e,EAAiB90E,YAAc,mBAExB,MAAM+0E,EAA4C,EACvDp1C,OACA5lC,MACAi7E,cACA5D,gBAEA,MACE92E,UAAU,KAAED,EAAI,UAAEM,IAChBZ,GACE,EAAEsC,GAAM,2BACRu2E,EAASoC,GAAkB,aAAa,aAAaj7E,GAAMM,EAAMM,GAAzC,QACxBk4E,EAAezB,GAAa/0E,EAAE,6CAEpC,OACE,gCACE,gBAAC,KAAqB,CAACqB,KAAK,SACzBiiC,aAAI,EAAJA,EAAMp3B,QA9DU,GA+Df,gBAAC,OAAI,CAAC5L,UAAU,4BAA4B8D,GAAImyE,GAC7Cv2E,EAAE,mCAAoC,CAAE44E,SAAUt1C,EAAKp3B,YAI3Do3B,aAAI,EAAJA,EAAMp3B,QAAS,EAGhB,gBAACusE,EAAgB,CAACn1C,KAAMA,EAAK8F,MAAM,EAvElB,KAqEjB,wBAAM9oC,UAAU,cAAck2E,M,kCClFtC,uDAIA,MA+CaqC,EAAoB,CAC/Bn8E,EACAuqE,EACA9C,EACAC,EACA0U,EACAhS,EACAiS,EACAC,KAEA,MAAMnoE,EAAOo2D,EAAar2D,OAAOC,KAAKo2D,GAAc,GACpD,OACE,gCACGp2D,EAAK8N,IAAKld,GA5DwB,EACvCw3E,EACAv8E,EACAuqE,EACA9C,EACAC,EACA0U,EACAhS,EACAiS,EACAC,K,QAEA,IAAIhxC,EACAD,EACJ,MAAMmxC,EAASJ,EAAa,EAAIA,EAAaC,EAAY,EACnDI,EAASL,EAAa,EAAIA,EAAaE,EAAa,EACpD9iB,EAAS4iB,EAAa,EAAsB,GAAlBhS,EAAwB,EACxD,OAAQmS,GACN,KAAK,IAAiBG,WACpBpxC,EAAIm8B,EAAU+U,EAAShjB,EACvBnuB,EAAIq8B,EAAU+U,EAASjjB,EACvB,MACF,KAAK,IAAiBmjB,WACpBrxC,EAAIm8B,EAAU+U,EAAShjB,EACvBnuB,EAAIq8B,EAAU+U,EAASjjB,EACvB,MACF,KAAK,IAAiBojB,UACpBtxC,EAAIm8B,EAAU+U,EAAShjB,EACvBnuB,EAAIq8B,EAAU+U,EAASjjB,EACvB,MACF,KAAK,IAAiBqjB,UACpBvxC,EAAIm8B,EAAU+U,EAAShjB,EACvBnuB,EAAIq8B,EAAU+U,EAASjjB,EACvB,MACF,QACEluB,EAAIm8B,EACJp8B,EAAIq8B,EAGR,IAAIoV,EACAxqD,EAAI,EACR,MAAM9iB,EAAuC,QAA9B,EAAsB,QAAtB,EAAA+6D,aAAU,EAAVA,EAAagS,UAAS,eAAE/sE,cAAM,QAAI,EACjD,MAAQstE,GAAgBxqD,EAAI9iB,GAC1BstE,EAAevS,EAAWgS,GAAUjqD,KAAK8nB,UAAUp6C,EAASoqE,EAAiB9+B,EAAGD,GAElF,OAAOyxC,GAiBDC,CACEh4E,EACA/E,EACAuqE,EACA9C,EACAC,EACA0U,EACAhS,EACAiS,EACAC,O,yDC1EV,yEAMO,MAAMU,EAAgB/8E,I,YAC3B,MAAMoX,EAA4E,UAAlC,QAA/B,EAAkB,QAAlB,EAAApX,aAAQ,EAARA,EAAUsB,gBAAQ,eAAE2G,mBAAW,eAAG,MAC7C+0E,EAA+C,QAA/B,EAAkB,QAAlB,EAAAh9E,aAAQ,EAARA,EAAUsB,gBAAQ,eAAE2G,mBAAW,eAAG,KAElDwzE,EAAiB,aAAiBz7E,GAClCsP,EAAS,UACb,IAAOmsE,EAAe70E,SAAW60E,EAAehhD,UAAYghD,EAAensE,OAAS,GACpF,CAACmsE,IAEGwB,EAAa,UAAc,IAAM,YAAaj9E,EAAUsP,GAAS,CAACtP,EAAUsP,IAE5EsR,EAAMo8D,GAAiBC,EAC7B,OAAI7lE,IAAawJ,IAASA,EAAIyoB,WAAW,aAAczoB,EAAIyoB,WAAW,YAC7D,KAEFzoB,I,kCC+CT,IAAYs8D,EASAC,EAeAC,EAxBZ,+GAAYF,GACV,sBACA,kBACA,mCACA,mCACA,qCACA,gBANF,CAAYA,MAAiB,KAS7B,SAAYC,GACV,kBACA,oBACA,sBAHF,CAAYA,MAAc,KAe1B,SAAYC,GACV,oBACA,cACA,sBAHF,CAAYA,MAAiB,M,kCC5F7B,iDAoEe,IAvDS,CACtBC,EACA3qD,EACA/uB,EACA25E,GAAmB,IACiB9kC,IACpC,MAAMC,EAA4DlzC,IAChE,MAAMxF,EAAU,aAAiB,mBAC1By1B,EAAW+nD,GAAgB,WAAiC,MAC7DrtB,EAAgB,cAAmBt8C,IACvCA,EAAEmD,iBACFnD,EAAE0mC,kBACFijC,EACED,EACI,CACEjyC,EAAGz3B,EAAEsyD,MACL96B,EAAGx3B,EAAEuyD,OAEPvyD,EAAEsK,gBAEP,IAEH,OACE,gCACE,gBAACs6B,EAAgB,iBACVjzC,EAAa,CAClB2qD,cAAeA,EACfC,kBAAmB36B,KAEpBA,EACC,gBAAC,IAAqB,CAAC9uB,QAAS22E,EAAct9E,IAC3C,EAAG4G,UAASC,YACXA,EACE,gBAAC,cAAW,CACV4uB,UAAWA,EACX9C,UAAWA,EACX/uB,UAAWA,EACXyiE,MAAI,EACJC,eAAgB,IAAMkX,EAAa,OAElC,YAAuB52E,IAExB,MAGN,OAOV,OAHA8xC,EAAUzxC,YAAc,mBACtBwxC,EAAiBxxC,aAAewxC,EAAiBn3C,QAE5C,YAASo3C,K,4KCjElB,6BAiDe,IAhCwClzC,IACrD,MAAM,eAAEyxD,EAAc,mBAAEC,EAAkB,cAAEE,EAAa,WAAED,GAAe3xD,EACpEi4E,EAAe,EAAW,YAAa,CAAE,oBAAqBtmB,IAC9DpB,EAAavwD,EAAMxF,QAAQ+1C,gBAsBjC,OApBA,YAAgB,KACdggB,EAAW2nB,qBAAqBzmB,IAC/B,CAAClB,EAAYkB,IAEhB,YAAgB,KACd,MAAM0mB,EAAe,GACfC,EAAkB,GAExB1mB,EACIymB,EAAartE,KAjBK,qBAkBlBstE,EAAgBttE,KAlBE,qBAmBtB8mD,EAAgBumB,EAAartE,KAlBR,2BAkBiCstE,EAAgBttE,KAlBjD,2BAoBjBqtE,EAAanuE,QACfmuE,EAAavrD,QAASxuB,GAAcs0D,SAASjjD,KAAK4oE,UAAUC,IAAIl6E,IAE9Dg6E,EAAgBpuE,QAClBouE,EAAgBxrD,QAASxuB,GAAcs0D,SAASjjD,KAAK4oE,UAAUE,OAAOn6E,KAEvE,CAACszD,EAAoBE,IAEtB,qBAAGxzD,UAAW65E,GACZ,gBAAC,iBAAkB,iBAAKj4E,O,kCC5C9B,kCAAO,MAAMw4E,EAA6C,mC,gFCA1D,2CAuBe,IAhBe,KAC5B,MAAM,EAAE16E,GAAM,2BACd,OACE,uBAAKM,UAAU,oBACb,gBAAC,IAAc,CAACA,UAAU,2BAC1B,wBAAMA,UAAU,0BACd,gBAAC,KAAa,KACZ,gBAAC,KAAQ,CAACq6E,OAAK,EAACrmB,MAAI,GACjBt0D,EAAE,4C,yDCff,yGAgPe,gBA5J0E,EACvFM,YACA5D,UACAk+E,cACAp0D,WACAixB,WACA2V,QACA7sD,QACAs6E,iBACAltB,aAAY,EACZW,iBACAwsB,aACA7mB,YACAd,UACAC,aACAvG,gBACAC,kBACA+F,WACA2S,cACA/W,QACAE,aACAosB,iBACAC,mBACA/sB,iBACAgtB,gBACAC,iBACAC,YACAC,mBACAC,uBAEA,MAAOC,EAAS3uB,GAAY,sBACrB4uB,EAAYC,GAAiB,qBAC9BC,EAAe,wBAAc,GAC7B3Z,EAAO,yBAA+BnV,EAAU6Y,GAChDkW,OAAoB3+E,IAAVqwD,EAAsBA,EAAQkuB,EACxCK,EAAY,yBACZC,EAAa,yBAAed,EAAYa,GACxCE,EAAgB,WAChBC,EAAU,WAEhB,IAAIvzD,EAAS7rB,EAAQs5C,YACjB+lC,GAAW,EACf,MAAQ,kBAAQxzD,IACdwzD,GAAYA,EACZxzD,EAASA,EAAOytB,YAIlB,MAAM/U,EAAU,qBAAWvkC,EAAQ20C,WAAsBpQ,SACnD+6C,EAAe/pC,IAAuCA,EAAM,IAAM,GAAKhR,EAE7E,IAAKgzB,IAAc6nB,EAAQloC,UAAYioC,EAAcjoC,QAAS,CAC5D,MAAMjT,EAAWjkC,EAAQu/E,WAAWlwE,OAAQ1J,GAAMA,EAAE6uC,aACpD,GAAwB,IAApBvQ,EAASz0B,OACX,OAAO,KAET,MAAMgwE,EAAyC,GAC/C,IAAUv7C,EAAWt+B,IACnB,GAAIA,EAAE85E,iBAAmB,YAAU7iC,OAAQ,CACzC,MAAMvH,EAAS1vC,EAAEivC,aACX,MAAEzQ,EAAK,OAAEC,GAAWiR,GACpB,EAAE/J,EAAC,EAAED,GAAMgK,EAAOC,YAClB0E,EAAS/nC,KAAK2Y,IAAIuZ,EAAOC,GAAU,EACzCo7C,EAAOlvE,KAAK,CAACg7B,EAAGD,EAAG2O,QACd,CAEL,MAAM,MAAE7V,EAAK,OAAEC,EAAM,EAAEkH,EAAC,EAAED,GAAM1lC,EAAEivC,YAClC4qC,EAAOlvE,KAAK,CAACg7B,EAAGD,EAAG,IACnBm0C,EAAOlvE,KAAK,CAACg7B,EAAInH,EAAOkH,EAAG,IAC3Bm0C,EAAOlvE,KAAK,CAACg7B,EAAGD,EAAIjH,EAAQ,IAC5Bo7C,EAAOlvE,KAAK,CAACg7B,EAAInH,EAAOkH,EAAIjH,EAAQ,OAGxC,MAAMs7C,EACJF,EAAOhwE,OAAS,EAAI,YAAYgwE,GAA2BA,EAC7D,IAAKE,EACH,OAAO,KAITN,EAAQloC,QAAU,mBAASwoC,EAA4BJ,GAGvDH,EAAcjoC,QAvGX,SAA8BsoC,GACnC,IAAIG,EAWJ,OARA,IAAUH,EAAS5pD,IACjB,MAAMgqD,EAASD,EAAuB1tE,KAAKo6B,MAAMzW,EAAE,IAAM3jB,KAAKo6B,MAAMszC,EAAU,GAAG,IAAtDE,IACvBD,EAJY,EAKdD,EAAY,CAAC/pD,GACJ3jB,KAAK44B,IAAI+0C,IANJ,GAOdD,EAAUrvE,KAAKslB,KAGZ,EACJ,IAAQ+pD,EAAY/pD,GAAMA,EAAE,IAAI,GAAK,IAAQ+pD,EAAY/pD,GAAMA,EAAE,IAAI,IAAM,EAC5E+pD,EAAU,GAAG,GAEb,IAAQA,EAAY/pD,GAAMA,EAAE,IAAI,IAuFRkqD,CAAqBJ,GAG/C,MAAMK,EAAiB,cACrB,IAAOC,cACPp8E,EACAy7E,GAAY,iBACZ5oB,GAAW,iBACXN,GAAY,gBACZrsC,GAAY,iBAERm2D,EAAsB,cAC1B,IAAOD,cACPp8E,EACAy7E,GAAY,iBACZ5oB,GAAW,iBACXN,GAAY,gBACZrsC,GAAY,iBACXk1D,GAAWH,IAAe,aAC3BpoB,GAAWC,GAAc,oBAG3B,OACE,qBACEz1C,IAAK69D,EACL3uB,cAAeA,EACfn4C,QAAS+iC,EACTn3C,UAAWm8E,GAEX,gBAAC,QAAK,CAAC92E,GAAI,gBACT,qBACEgY,IAAKmkD,EACLjV,cAAeA,EACfn4C,QAAS+iC,EACTn3C,UAAWq8E,GAEX,wBAAMh/D,IAAKi+D,EAAYt7E,UAAW,IAAOs8E,wBAAyB5zC,EAAG8yC,EAAQloC,YAGhF+Z,GACC,gBAAC,YAAS,CACRrtD,UAAW,IAAOu8E,mBAAkB,YACzB,mBACX70C,EAAG6zC,EAAcjoC,QAAQ,GACzB7L,EAAG8zC,EAAcjoC,QAAQ,GAAKooC,EAAYH,EAAcjoC,SAAW,GACnEkpC,SAAU,EACVC,SAAU,EACVlb,QAAS2D,EAAciW,OAAe1+E,EACtC2C,OAAQhD,EAAQsgF,gBAChBnC,eAAgBA,EAChBvsB,eAAgBA,EAChBG,MAAOA,EACPE,WAAYA,EACZosB,eAAgBA,EAChBC,iBAAkBA,EAClB/sB,eAAgBA,EAChBgtB,cAAeA,EACfC,eAAgBA,EAChBC,UAAWA,EACXC,iBAAkBA,EAClBvuB,cAAeA,EACfC,gBAAiBA,EACjBM,MAAOsuB,GAAWH,EAClB0B,WAAYrC,EAAc,gBAAC,IAAY,WAAM79E,EAC7CmgF,kBAAmB,IAAM7B,EAAiB3+E,GAAS,IAElD6D,GAAS7D,EAAQy5C,gB,8HCxO5B,oHAEA,MAEMgnC,EAFc,OAIdC,EAAoB,CAJN,QAMdC,EAA+B,CAAC79E,EAAc4sD,IANhC,SAOX5sD,EAAuB,IAAI,IAAmB4sD,EAAO,CAAEkxB,cAAc,SAAWvgF,G,kCCVzF,wBAUA,MAAMwgF,UAA2B,aACrB,eAAe/6C,EAAmBg7C,EAAqBr8C,GAC/D,OAAO,YAAkBqB,EAAOg7C,EAAQr8C,EAAOtxB,KAAKvM,SAG5C,YACR8oD,EACAqxB,EACAC,G,MAE8D,KAA1C,QAAhB,EAAAtxB,EAAM6vB,kBAAU,eAAElwE,OAAQ02B,GAAMA,EAAEyO,aAAahlC,SAGnDsK,MAAMmnE,YAAYvxB,EAAOqxB,EAAYC,IAI1B,O,kCC3Bf,4EAiBA,MAAME,EAAoBrxE,IACxB,MAAMV,EAAOU,EAAK7P,QAAQ8P,UAC1B,OAAO,IAAIgiB,KAAK,IAAM3iB,EAAM,2CAA4C,KAIpEgyE,EAAa,CAACC,EAAiBC,IACnCH,EAAiBE,GAASF,EAAiBG,IAAU,EAAI,EAErDC,EAAqB,CACzB78C,EACA3hC,EACAuiC,EACAz+B,EACA26E,KAEA,MAAMC,EAAc,GACdC,EAAiBh9C,EACpBp1B,OACEwE,KACCA,EAAE7T,QAAQG,YAAc2C,GACvB+Q,EAAE/C,OAAO4wE,SACT7tE,EAAEhD,OAAO6wE,SACT7tE,EAAE/C,OAAO9Q,UAAYqlC,EAAErlC,SACtB6T,EAAEhD,OAAO7Q,UAAYqlC,EAAErlC,SACvB6T,EAAE/C,OAAO9Q,QAAQs5C,cAAgBjU,EAAErlC,UAExCyS,KAAK,CAACkvE,EAAcC,IAAiBT,EAAWQ,EAAG9wE,OAAQ+wE,EAAG/wE,SACjE,GAAI4wE,EAAejyE,OAAQ,CACzB,MAAM40B,EAASq9C,EAAertE,OAAO,CAAC8iC,EAAiB2qC,IAC9C3qC,EAAU2qC,EAAShxE,OAAOuzB,OAChC,GACG09C,EACJz8C,aAAa,YACRk8C,EAA0BvnC,OAAS,0BAAgB3U,EAAErlC,SACrDuhF,EAA0Bp9C,MAAQ,EAEnC49C,EAA0B,CAC9Bj/E,KAAM,YACNk/E,KAAM,IACNC,QAAS,CAAC,CAAEpyE,KAAM4xE,EAAe,GAAG3wE,OAAO2M,MAAO+7C,OAAQ,KAE5D,IAAI0oB,GAAc99C,EAAS,EAC3Bq9C,EAAervD,QAASgvC,IAElBt+D,IAAS,IACXi/E,EAAmBE,QAAQ3xE,KAAK,CAC9BT,KAAMuxD,EAAKtwD,OAAO2M,MAClB+7C,OAAQ0oB,EAAa9gB,EAAKtwD,OAAOszB,OAAS,IAG5C29C,EAAmBE,QAAQ3xE,KAAK,CAC9BT,KAAMuxD,EAAKvwD,OAAO4M,MAClB+7C,OAAQ0oB,EAAa9gB,EAAKvwD,OAAOuzB,OAAS,IAI1CthC,IAAS,IAEX0+E,EAAYlxE,KAAK,CACf0xE,KAAM,IACN3gB,KAAMD,EAAKvwD,OAAO4M,MAClBmkD,MAAOR,EAAKtwD,OAAO2M,MACnB0kE,IAAKL,EAAkB1gB,EAAKvwD,OAAOszB,MAAQ,EAAIv9B,EAAQw7E,aACvDC,UAAU,IAIZb,EAAYlxE,KAAK,CACf0xE,KAAM,IACN3gB,KAAMD,EAAKvwD,OAAO4M,MAClBmkD,MAAO2f,EAAa9jE,MACpB0kE,IAAKL,EAAkB1gB,EAAKvwD,OAAOszB,MAAQ,EAAIv9B,EAAQw7E,aACvDC,UAAU,IAGdH,GAAc9gB,EAAKvwD,OAAOuzB,SAE5Bo9C,EAAYlxE,KAAKyxE,GAEnB,OAAOP,GAGIc,EAAoB,CAC/Bx8C,EACAg7C,EACAr8C,EACA79B,KAEA,IAAI46E,EAAqB,GAqEzB,MAnEA,IAAIV,KAAWh7C,GACZz2B,OAAQg2B,GACP,CAAC,IAAoB,IAAe,KAAsBt2B,SAASs2B,EAAErlC,QAAQG,YAE9EiyB,QAASiT,IACR,MAAMk9C,EACJl9C,aAAa,aAAaA,EAAEm9C,OAAO/vE,KAAK0uE,GAAY9xE,OAAQ02B,IAAOA,EAAE27C,SACjEH,EAAgBgB,GAAa,IAAQA,IAAel9C,EAC1D,GAAIA,EAAErlC,QAAQG,YAAc,IAAsB,CAChD,MAAMsiF,EAAyB,CAC7B3/E,KAAM,YACNk/E,KAAM,IACNC,QAAS,IAIX,GAAIM,EAAW,CACb,IAAK,IAAIjwD,EAAI,EAAGA,EAAIiwD,EAAU/yE,OAAQ8iB,IACpCmwD,EAAkBR,QAAQ3xE,KAAK,CAAET,KAAM0yE,EAAUjwD,GAAG7U,MAAO+7C,OAAQ,IAC/DlnC,EAAIiwD,EAAU/yE,OAAS,GAEzBgyE,EAAYlxE,KAAK,CACf0xE,KAAM,IACN3gB,KAAMkhB,EAAUjwD,GAAG7U,MACnBmkD,MAAO2gB,EAAUjwD,EAAI,GAAG7U,MACxB0kE,IAAKI,EAAUjwD,GAAG6R,MAClBk+C,UAAU,IAIZI,EAAkBR,QAAQzyE,QAC5BgyE,EAAYlxE,KAAKmyE,IAKvB,MAAMC,EAA4BpB,EAChC78C,EACA,IACAY,EACAz+B,EACA26E,GAGIoB,EAAuBrB,EAC3B78C,EACA,IACAY,EACAz+B,EACA26E,GAGIqB,EAA0BtB,EAC9B78C,EACA,IACAY,EACAz+B,EACA26E,GAGFC,EAAc,IACTA,KACAkB,KACAC,KACAC,KAGFpB,I,kCC/KT,oCAkBA,MAAMqB,EAAgD,mBAAS,EAAGxX,gBAAevzD,iBAC/E,MAAM,EAAExU,GAAM,2BACd,OACE,wBAAMM,UAAU,oDACd,gBAAC,qBAAoB,CACnBk/E,eAAgB,IACX,uCAA6B,OAAD,wBAC1B,gCAA4B,CAC/BC,eAAgB,iBAAO,KACrB1X,EAAcr2B,WAAWguC,QAAQ,EAAI,KAEvCC,UAAW3/E,EAAE,oBACb4/E,gBAAiB5/E,EAAE,oBACnB6/E,eAAgBrrE,EAChBsrE,gBAAiB,iBAAO,KACtB/X,EAAcr2B,WAAWguC,QAAQ,OAEnCK,WAAY//E,EAAE,qBACdggF,iBAAkBhgF,EAAE,qBACpBigF,gBAAiBzrE,EACjB0rE,oBAAqB,iBAAO,KAC1BnY,EAAcr2B,WAAWyuC,IAAI,MAE/BC,eAAgBpgF,EAAE,0BAClBqgF,qBAAsBrgF,EAAE,0BACxBsgF,oBAAqB9rE,EACrB+rE,kBAAmB,iBAAO,KACxBxY,EAAcr2B,WAAWq6B,QACzBhE,EAAcr2B,WAAW02B,WAE3BoY,aAAcxgF,EAAE,uBAChBygF,mBAAoBzgF,EAAE,uBACtB0gF,kBAAmBlsE,EACnBmsE,QAAQ,WAQL,O,gFC3Df,wLAEO,MAAMC,EAAoB,eACpBC,EAAqB,gBAErBC,EAAmB,IACnBC,EAAoB,IACpBC,EAAqB,K,kCCPlC,4MACO,MAAMC,EAAwB,2BAExBC,EAA2B,mCAE3BC,EAA2B,+BAE3BC,EAAyB,iCAEtC,IAAYC,GAAZ,SAAYA,GACV,kBACA,oBACA,wBAHF,CAAYA,MAAa,KAMlB,MAAMC,EAAqB,CAEhCC,UAAW,wBAEXC,QAAS,sBAETC,OAAQ,wB,kCCrBV,qG,kCCCA,sGAIO,MAEMppB,EAAqB,IACzB,CACL,CACE74D,KAAM,IAA0BgoD,OAChC7hD,GANoC,eAQpChI,SAAU,4BACVmmB,SAAU,IACVnR,OAAO,IAKA+uE,EAA0B,CAAClgF,EAAc+kB,KACpD,IAAIo7D,GAAQ,EACZ,MAAM5pB,EAAiB,GACjB6pB,EAAW,YAlBuB,eAkBgBr7D,GAUxD,OATA/kB,EAAMghC,MAAM1T,QAASka,IACfA,EAAExpC,OAAS,MACRmiF,IACHA,GAAQ,EACR5pB,EAAe/qD,KAvBmB,iBAyBpCg8B,EAAErH,WAAaigD,KAGZ7pB,I,kCChCT,4GAkBO,MAAM8pB,EAA0B,CACrCpkF,EACA+B,KAEA,OAAQA,GACN,KAAK,IACH,OAAO,wBAAc,CAAEk4C,YAAY,GAA5B,CACL,YAAgB,IAAhB,CACE,cAAa,uBAAa,IAAb,CAAsC,QAGzD,KAAK,IACH,OAAO,YACL,cACA,IAFK,CAIL,sBAKE,IALF,CAME,YAAqB,QAArB,CACE,uBAAa,YAAmBl4C,GAAM,GAAtC,CACE,wBAAc,CAAEk4C,YAAY,GAA5B,CACE,YAAgB,IAAhB,CAAoC,UAMhD,QACE,U,kCCjDN,8CAGO,MAAMoqC,EAAwB,CAACnlF,EAA2B6E,MAC1D,aAAe7E,MAGX6E,EAAMghC,MAAMtf,KAAM3W,I,UACzB,OAAgD,QAAzC,EAA+B,QAA/B,EAACA,EAAsB5P,gBAAQ,eAAEsB,gBAAQ,eAAEyD,QAA0B,QAAlB,EAAA/E,aAAQ,EAARA,EAAUsB,gBAAQ,eAAEyD,Q,kCCVlF,iEAKO,MAAMqgF,EAAgC,CAC3CrlF,EACAg6C,EACA1O,EACAD,IAEIrrC,EAAQG,YAAc,KAAqBH,EAAQs0C,cAC9C,KAGF,gBAAC,IAA0B,CAACt0C,QAASA,EAASg6C,OAAQA,EAAQ1O,EAAGA,EAAGD,EAAGA,K,kCCdhF,qGAwBA,MAAMi6C,EAAqBrlF,GAAa,GAAGA,EAASc,UAAUd,EAASsB,SAASD,OAgFnEikF,EAA2B,CACtCC,EACA71E,K,QAEA,MAAM81E,EAAuB,CAC3B3/C,MAAO,GACPrB,MAAO,IAGHihD,EAAgB,GAEhBpxD,EAAkC,QAAxB,EAAkB,QAAlB,EAAA3kB,aAAS,EAATA,EAAW2kB,eAAO,eAAEnlB,YAAI,QAAI,GAuC5C,OAtCA,KAAeijB,QAASrtB,I,MAEtB,GADA2gF,EAAc3gF,GAAO,IACH,QAAd,EAAA4K,EAAU5K,UAAI,eAAEoK,OAAQQ,EAAU5K,GAAKoK,KAAKK,OAAQ,CACtD,MAAMm2E,EAAwB,CAC5B7/C,MAAO,GACPrB,MAAO,IAET90B,EAAU5K,GAAKoK,KAAKijB,QAASnyB,I,UAC3B,GAlGyB,EAC/Be,EACAwkF,MAEIA,GACKA,EAAiBI,eAAeN,EAAkBtkF,IA6FjD6kF,CAAkB5lF,EAAUulF,GAAmB,CACjD,MAAMv1E,EAAO,aAA0BlL,EAAK9E,EAAU0P,GAChD3K,EAAwB,QAAlB,EAAA/E,aAAQ,EAARA,EAAUsB,gBAAQ,eAAEyD,IAC1B8gF,EAAoBN,EAAiBF,EAAkBrlF,IACvDsjC,EAA8C,QAA1B,EAAkB,QAAlB,EAAAtjC,aAAQ,EAARA,EAAUsB,gBAAQ,eAAEoI,cAAM,QAAI,GAClDo8E,EACJ,YAAqB,QAAQxiD,EAAkB,8BAC/C,YAAqB,QAAQA,EAAkB,6BAC/CuiD,aAAiB,EAAjBA,EAAmBE,YACnB,YAAqB,aACvBN,EAAc3gF,GAAKuL,KAAKtL,GACxB,MAAMmK,EAAO,YAAuBlP,EAAUgQ,EAAM,IAAoB81E,GACxEJ,EAAe7/C,MAAMx1B,KACnB,YAAoBrQ,EAAU,IAAoBkP,EAAM,MAE1D,MAAM2xE,EAvG+B,EAC7C9/E,EACAwkF,EACAlxD,K,QAEA,MACMoxD,EAAgBF,EADGF,EAAkBtkF,IAErC2xE,EAAc+S,aAAa,EAAbA,EAAe/S,YAC7BsT,EAAeP,aAAa,EAAbA,EAAeO,aAC9BjhF,EAAwB,QAAlB,EAAa,QAAb,EAAAhE,aAAG,EAAHA,EAAKO,gBAAQ,eAAEyD,WAAG,QAAI,KAC5BkhF,EAAa,GAEnB,IAAKvT,EACH,OAAOuT,EAGT,MAAMx0E,EAAS4iB,EAAQ9N,KAAM2/D,I,MAC3B,OAAiC,QAA1B,EAAAA,EAAW5kF,SAASoI,cAAM,eAAErI,QAASqxE,IAG9C,GAAIjhE,EAAQ,CACV,MAAM00E,EAAW,YAAsB10E,GACnC00E,GACF,YAAWA,EAAUF,GAElBx0E,EAAOrQ,aACVqQ,EAAOrQ,WAAa,YAAmB,gBAEpCqQ,EAAO3Q,OACV2Q,EAAO3Q,KAAO,cAAYA,MAI9B,MAAM,KAAEA,EAAI,WAAEM,GAAe,cACvBglF,EAA0B,CAC9Bp9E,GAAIyI,EAASA,EAAOnQ,SAASyD,IAAM,GAAG,OAAqB2tE,IAC3D7vE,KAAM,IACNsH,aAAc,cACdhI,OAAO,EACPyB,MAAO8uE,EACP1uC,SAAU,CAACj/B,GACXm/B,MAAO,IACPC,OAAQ,IACRC,SAAS,EACTC,MAAO,CACLC,QAAS,KAEXp1B,KAAM,CACJQ,UAAW,CACT3O,IAAK0Q,EAAS,OAAD,wBAAMA,GAAM,CAAE3Q,OAAMM,eAAe,KAChDm4B,aAAc,KACduN,SAAU,KACVx3B,OAAQ,MAEVJ,KAAM,CACJ62E,UAAWN,aAAa,EAAbA,EAAeM,UAC1BhjF,OAAQ0iF,aAAa,EAAbA,EAAe1iF,OACvBsjF,mBAAmBZ,aAAa,EAAbA,EAAeY,oBAAqB,GACvDL,kBAON,OAFAC,EAAW51E,KAAK+1E,GAETH,GAsCgBK,CAAgCtmF,EAAUulF,EAAkBlxD,GAC3E,YAAYwsD,EAAQ6E,EAAe7/C,UAGvC,YAAuB6/C,EAAgBF,MAI3CA,EAAc3/C,MAAM1T,QAASviB,I,QACvBA,EAAK/M,OAAS,MAChB+M,EAAKV,KAAKoB,eACgE,QAAxE,EAAa,QAAb,EAAAV,EAAKo0B,gBAAQ,eAAEhiB,IAAKhZ,GAAOw8E,EAAc3/C,MAAMtf,KAAMuf,GAAM98B,IAAO88B,EAAE98B,YAAI,QAAI,MAI3Ew8E,GAgCI3lF,EAA2B,KACtC,IAAI0mF,GAAe,EACfC,EAAe,GACfjB,EAAmB,GAEvB,MAAO,CAAC5jF,EAAmB+N,K,gBACzB,MAAM+2E,EACyE,QAA7E,EAAwB,QAAxB,EAAkB,QAAlB,EAAA/2E,aAAS,EAATA,EAAW2kB,eAAO,eAAEnlB,YAAI,eAAEE,OAAQ6H,IAAK,QAAC,MAA8B,UAAZ,QAAlB,EAAU,QAAV,EAAAA,EAAE3V,gBAAQ,eAAEoI,cAAM,eAAEiF,gBAAiB,QAAI,GAC7E+3E,EAAmBzyE,OAAOC,KAAKqxE,GAAkBpxE,OAAO,CAACqL,EAAK1a,KAC7D0a,EAAI1Q,SAASy2E,EAAiBzgF,GAAK4tE,cACtClzD,EAAInP,KAAKk1E,EAAiBzgF,GAAK4tE,aAE1BlzD,GACN,IAAIjQ,OACDxL,EAAQ0iF,EAAYl3E,OAC1B,IAAIo3E,GAAwB,EAe5B,OAbEhlF,IAAc6kF,IACI,QAAjB,EAAA92E,EAAU2kB,eAAO,eAAEztB,SAAU7C,IAAUwiF,IACvB,QAAjB,EAAA72E,EAAU2kB,eAAO,eAAEoG,YACnB8rD,IAAgBG,KAEhBH,EAAcxiF,EACdyiF,EAAe7kF,GACM,QAAjB,EAAA+N,EAAU2kB,eAAO,eAAEoG,YAAuB,IAAV12B,EAClCwhF,EAAmB,GAEnBoB,GAAwB,GAGxBA,EA3DkB,CAAChlF,GAClB,YAAkBA,GACtB8D,KAAMkrE,GACLA,EAASx8D,OAAO,CAACqL,EAAK6wD,KACpB,IACE,MAAMgW,EAAoB,YAA0BhW,GACpDgW,EAAkBl0D,QAASnyB,IACzB,MAAM4mF,EAAmBvB,EAAkBrlF,GACtCwf,EAAImmE,eAAeiB,KACtBpnE,EAAIonE,GAAoB,CACtBlU,YAAarC,EAAQhvE,KACrBwlF,eAAgBxW,EAAQ30C,QACxBqqD,UAAW1V,EAAQ+B,MAAM9wE,SAASyuD,KAClCs2B,oBACAL,aAAc3V,EAAQC,KAAKwW,MAC3B/jF,OAAQstE,EAAQC,KAAKvtE,WAI3B,MAAO6Q,GAEPmT,QAAQ/kB,MAAM,+CAAgD4R,GAEhE,OAAO4L,GACN,KAEJ1d,MAAM,KAAM,KAkCJilF,CAAkBplF,GAAW8D,KAAMuc,IACxCujE,EAAmBvjE,EACZsjE,EAAyBC,EAAkB71E,KAI/CQ,QAAQmV,QAAQigE,EAAyBC,EAAkB71E,O,kCChOtE,2FAyDe,uBA/BkCnK,IAC/C,MAAMwpC,EAAY,YAAYxpC,EAAMxF,SAC9By6B,EAAgBuU,EAAY,aAAS,aAAaA,IAAc,KAChE2J,EAAa,aAAgB,CACjCv2C,MAAOq4B,aAAa,EAAbA,EAAep4B,SACtBG,KAAM,QACNvC,SAAUw6B,aAAa,EAAbA,EAAen4B,OACzBhB,KAAM0tC,aAAS,EAATA,EAAWztC,SAASD,KAC1BM,UAAWotC,aAAS,EAATA,EAAWztC,SAASK,aAE3B,SAAEowD,EAAQ,QAAER,EAAO,UAAEE,GAAc,YAA6B,eAChEH,EAAiB,EAAW,oBAAqB,CACrD,CAAC,qBAAqBC,EAAQC,gBAAmBC,IAGnD,OAAIlsD,EAAMxF,QAAQs0C,cAEd,gBAAC,IAAS,iBACJ9uC,EAAK,CACT2qD,cAAexX,EAAanzC,EAAM2qD,cAAgB,KAClDqC,YAAY,uBACZT,MAAOC,EACPC,WAAYP,EACZH,eAAgBA,KAKf,gBAAC,IAAgB,eAAC5Y,WAAYA,GAAgBnzC,O,kCCtDvD,yFAkJe,uBAzG2C,EACxDxF,UACA+xD,QACAE,aACAV,iBACA5Y,aACA7uB,WACAixB,WACAoV,gBACAC,kBACAguB,aACAjoB,WACA2S,kB,UAEA,MAAOpY,EAAOT,GAAY,sBACnBg3B,EAAYC,GAAiB,uBAC3B/wB,SAAUgxB,GAAiBpI,GAAgB,sBAAY,KAC1DqI,EAAW,yBAAeF,EAAepe,IACxC9X,GAAY,YAAgBhxD,EAAQy5C,WAA0C,QAA9B,EAAoB,QAApB,cAAYz5C,UAAQ,eAAEuB,gBAAQ,eAAEoI,QACjFsnD,EAAY,YAAaP,GACzB22B,GAAmC,QAArB,EAAArnF,EAAQu0C,qBAAa,eAAE/kC,QAAS,GAC9C,EAAE87B,EAAC,EAAED,EAAC,MAAElH,EAAK,OAAEC,GAAWpkC,EAAQ40C,YAClC8d,EAAgB1yD,EAAQ8P,UAAUX,KAAK62E,WAAa,YAEpDzb,EAAa,YACjBvqE,EACAA,EAAQg1C,WAAWllC,UAAUy6D,WAC7Bj/B,EAAInH,EAAQ,EACZkH,EAAIjH,EAAS,GACZ,EA9BoB,GAgCrBD,EACAC,GAGF,OACE,qBACEnjB,IAAKgvC,EACLj4C,QAAS+iC,EACToV,cAAexX,EAAawX,EAAgB,KAC5CvsD,UAAW,EAAW,sCAAuC,CAC3D,gBAAiBuyD,GAAYgxB,EAC7B,cAAen2B,KAGjB,gBAAC,IAAW,MACZ,gBAAC,QAAK,CAAC/nD,GAAIktD,GAAYgxB,OAAgB9mF,EAAY,WACjD,qBACE4gB,IAAKmmE,EACLxjF,UAAW,EAAW,mBAAoB,CACxC,gBAAiBkmB,EACjB,gBAAiBqsC,GAAYgxB,EAC7B,cAAen2B,KAGjB,wBACEjsD,IACE2rD,GAASu2B,GAAc72B,GAAmB+F,GAAYgxB,EAClD,aACA,OAENlmE,IAAKm9D,EACLx6E,UAAU,uBACV0nC,EAAGA,EACHD,EAAGA,EACHlH,MAAOA,EACPC,OAAQA,EACRgvB,GAAG,IACHC,GAAG,IACHhkD,OAAQ,yBACNqhD,GAASu2B,GAAc72B,GAAmB+F,GAAYgxB,EAClD,IACA,QAGNE,GACA,wBAAM/7C,EAAGA,EAAInH,EAAQ,EAAGkH,EAAGA,EAAIjH,EAAS,EAAGgoB,GAAG,SAASsH,WAAW,UAAQ,kBAM/E6W,EACAtZ,GAAajxD,EAAQy5C,YACpB,gBAAC,YAAS,CACR71C,UAAU,iDACVusD,cAAeA,EACfC,gBAAiBA,EACjB9kB,EAAGA,EAAInH,EAAQ,EACfkH,EAAGA,EAAIjH,EAAS,GAChBg8C,SAAU,EACVC,SAAU,EACV7B,eAAgB,YAAqB9rB,IAAkBA,EACvDX,MAAOA,EACPE,WAAYA,EACZV,eAAgBA,EAChB4T,QAAS4Z,GAER/+E,EAAQy5C,gB,yDC3InB,sDA0Ce,IA3B+D,EAC5Ez5C,UACAg6C,SACA1O,IACAD,QAEA,MAAMpqB,EAAM,YACN,EAAE3d,GAAM,4BACR,KAAE6L,GAASnP,EAAQ8P,UAEzB,IAAKX,EACH,OAAO,KAET,MAAMnM,EAAS,YAAcmM,EAAKnM,QAC5Ba,EAAQP,EAAE,yCAA0C,CAAEN,WAE5D,OACE,gBAAC,IAAO,CAACywD,WAAYxyC,EAAKmhB,QAASv+B,EAAO+vC,SAAU,IAAgBytB,MAClE,qBAAGpgD,IAAKA,GACN,gBAAC,IAAoB,CAACqqB,EAAGA,EAAGD,EAAGA,EAAG2O,OAAQA,EAAQC,UAAWp2C,GAC3D,gBAAC,KAAM,CAACb,OAAQA,EAAQs+D,UAAQ,EAACC,WAAS","file":"helm-plugin/code-refs/helmTopology-chunk-e1425a0fab84d07e977a.min.js","sourcesContent":["import { getHelmTopologyDataModel as getTopologyDataModel } from './helm-data-transformer';\n\nexport { getHelmComponentFactory } from './components/helmComponentFactory';\nexport { isHelmResourceInModel } from './isHelmResource';\nexport { getTopologyFilters, applyHelmDisplayOptions } from './helmFilters';\nexport { getHelmReleaseStatusDecorator } from './components/getHelmReleaseStatusDecorator';\n\nexport const getHelmTopologyDataModel = getTopologyDataModel();\n","export * from './CronJobSideBarDetails';\nexport * from './DaemonSetSideBarDetails';\nexport * from './DeploymentConfigSideBarDetails';\nexport * from './DeploymentSideBarDetails';\nexport * from './JobSideBarDetails';\nexport * from './pods-tab-section';\nexport * from './StatefulSetSideBarDetails';\nexport * from './workload-resource-link';\nexport * from './utils';\nexport * from './build-tab-section';\nexport * from './network-tab-section';\nexport * from './jobs-tab-section';\nexport * from './PodSideBarDetails';\nexport * from './resource-alert';\nexport * from './vpa-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import { useMemo } from 'react';\nimport { Edge, GraphElement } from '@patternfly/react-topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { TYPE_WORKLOAD, TYPE_CONNECTS_TO } from '../const';\nimport { getResource } from '../utils';\nimport { DeleteConnectorAction, MoveConnectorAction } from './edgeActions';\nimport { getModifyApplicationAction } from './modify-application';\n\nexport const useTopologyWorkloadActionProvider = (element: GraphElement) => {\n  const resource = getResource(element);\n  const actions = useMemo(() => {\n    if (element.getType() !== TYPE_WORKLOAD) return undefined;\n    if (!resource) {\n      return [];\n    }\n    const k8sKind = modelFor(referenceFor(resource));\n    return [getModifyApplicationAction(k8sKind, resource)];\n  }, [element, resource]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useTopologyVisualConnectorActionProvider = (element: Edge) => {\n  const resource = getResource(element.getSource?.());\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource ?? {}));\n  const actions = useMemo(() => {\n    if (!kindObj || element.getType() !== TYPE_CONNECTS_TO) return undefined;\n    return [MoveConnectorAction(kindObj, element), DeleteConnectorAction(kindObj, element)];\n  }, [element, kindObj]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, !inFlight, undefined];\n  }, [actions, inFlight]);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport {\n  usePodsWatcher,\n  PodRing,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  usePrometheusGate,\n} from '@console/shared';\nimport { K8sResourceKind, referenceFor, referenceForModel, DaemonSetKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  detailsPage,\n  LabelList,\n  navFactory,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  LoadingInline,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nexport const menuActions: KebabAction[] = [\n  AddHealthChecks,\n  Kebab.factory.AddStorage,\n  ...Kebab.getExtensionsActionsForKind(DaemonSetModel),\n  EditHealthChecks,\n  ...Kebab.factory.common,\n];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem\n        label={t('public~Current count')}\n        obj={ds}\n        path=\"status.currentNumberScheduled\"\n      />\n      <DetailsItem\n        label={t('public~Desired count')}\n        obj={ds}\n        path=\"status.desiredNumberScheduled\"\n      />\n      <PodDisruptionBudgetField obj={ds} />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const { podData, loaded } = usePodsWatcher(daemonset);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DaemonSet details')} />\n        {loaded ? (\n          <PodRing\n            key={daemonset.metadata.uid}\n            pods={podData?.pods || []}\n            obj={daemonset}\n            resourceKind={DaemonSetModel}\n            enableScaling={false}\n          />\n        ) : (\n          <LoadingInline />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary\n              resource={daemonset}\n              showPodSelector\n              showNodeSelector\n              showTolerations\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst DaemonSetTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(daemonset);\n  const context = { [resourceKind]: daemonset };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={daemonset.metadata.name}\n          namespace={daemonset.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{currentNumber}} of {{desiredNumber}} pods', {\n            currentNumber: daemonset.status.currentNumberScheduled,\n            desiredNumber: daemonset.status.desiredNumberScheduled,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const DaemonSets: React.FC = (props) => {\n  const { t } = useTranslation();\n  const DaemonSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DaemonSets')}\n      Header={DaemonSetTableHeader}\n      Row={DaemonSetTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = (props) => (\n  <ListPage canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />\n);\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = (props) => (\n  <PodsComponent {...props} showNodes />\n);\n\nexport const DaemonSetsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(detailsPage(DaemonSetDetails)),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        navFactory.pods(DaemonSetPods),\n        navFactory.envEditor(EnvironmentTab),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\ntype DaemonSetDetailsListProps = {\n  ds: DaemonSetKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: DaemonSetKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport './TopologySideBarTabSection.scss';\n\nconst TopologySideBarTabSection: React.FC = ({ children }) => {\n  return <div className=\"ocs-sidebar-tabsection\">{children}</div>;\n};\n\nexport default TopologySideBarTabSection;\n","import * as React from 'react';\nimport {\n  Graph,\n  Node,\n  Model,\n  EdgeModel,\n  NodeModel,\n  EventListener,\n  ModelKind,\n  GraphElement,\n  TopologyQuadrant,\n} from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { ExtPodKind, OverviewItem } from '@console/shared';\n\nexport type Point = [number, number];\n\nexport interface OdcNodeModel extends NodeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport interface OdcEdgeModel extends EdgeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport type TopologyResourcesObject = { [key: string]: K8sResourceKind[] };\n\nexport type TopologyDataResources = WatchK8sResults<TopologyResourcesObject>;\n\nexport type TopologyDataModelGetter = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n) => Promise<Model>;\n\nexport enum TopologyViewType {\n  graph = 'graph',\n  list = 'list',\n}\nexport type ViewComponentFactory = (\n  kind: ModelKind,\n  type: string,\n  view?: TopologyViewType,\n) => React.ComponentType<{ element: GraphElement }> | undefined;\n\nexport type TopologyDataModelDepicted = (resource: K8sResourceKind, model: Model) => boolean;\n\nexport type TopologyDataModelReconciler = (model: Model, resources: TopologyDataResources) => void;\n\nexport type CreateConnection = (\n  source: Node,\n  target: Node | Graph,\n) => Promise<React.ReactElement[] | null>;\n\nexport type CreateConnectionGetter = (\n  createHints: string[],\n  source?: Node,\n  target?: Node,\n) => CreateConnection;\n\nexport enum TopologyDisplayFilterType {\n  show = 'show',\n  expand = 'expand',\n  kind = 'kind',\n}\n\nexport type TopologyDisplayOption = {\n  type: TopologyDisplayFilterType;\n  id: string;\n  label?: string;\n  labelKey?: string;\n  priority: number;\n  value: boolean;\n};\n\nexport type DisplayFilters = TopologyDisplayOption[];\n\n// Applies the filters on the model and returns the ids of filters that were relevant\nexport type TopologyApplyDisplayOptions = (model: Model, filters: DisplayFilters) => string[];\n\nexport type TopologyDecoratorGetter = (\n  element: Node,\n  radius: number,\n  centerX: number,\n  centerY: number,\n) => React.ReactElement;\n\nexport type TopologyDecorator = {\n  id: string;\n  priority: number;\n  quadrant: TopologyQuadrant;\n  decorator: TopologyDecoratorGetter;\n};\n\nexport interface TopologyDataObject<D = {}> {\n  id: string;\n  name: string;\n  type: string;\n  resources: OverviewItem;\n  pods?: ExtPodKind[];\n  data: D;\n  resource: K8sResourceKind | null;\n  groupResources?: OdcNodeModel[];\n}\n\nexport interface TopologyApplicationObject {\n  id: string;\n  name: string;\n  resources: OdcNodeModel[];\n}\n\nexport interface WorkloadData {\n  editURL?: string;\n  vcsURI?: string;\n  vcsRef?: string;\n  builderImage?: string;\n  kind?: string;\n  isKnativeResource?: boolean;\n}\n\nexport type TrafficData = {\n  nodes: KialiNode[];\n  edges: KialiEdge[];\n};\n\nexport type KialiNode = {\n  data: {\n    id: string;\n    nodeType: string;\n    namespace: string;\n    workload: string;\n    app: string;\n    version?: string;\n    destServices?: { [key: string]: any }[];\n    traffic?: { [key: string]: any }[];\n  };\n};\n\nexport type KialiEdge = {\n  data: {\n    id: string;\n    source: string;\n    target: string;\n    traffic: { [key: string]: any };\n  };\n};\n\nexport type GraphData = {\n  namespace: string;\n  createResourceAccess: string[];\n  eventSourceEnabled: boolean;\n  createConnectorExtensions?: CreateConnectionGetter[];\n  decorators?: { [key: string]: TopologyDecorator[] };\n};\n\nexport const SHOW_GROUPING_HINT_EVENT = 'show-regroup-hint';\nexport type ShowGroupingHintEventListener = EventListener<[Node, string]>;\n","import * as React from 'react';\nimport { Decorator as PfDecorator } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\n\nimport './Decorator.scss';\n\ntype DecoratorTypes = {\n  x: number;\n  y: number;\n  radius: number;\n  onClick?(event: React.MouseEvent<SVGGElement, MouseEvent>): void;\n  href?: string;\n  ariaLabel?: string;\n  external?: boolean;\n  circleRef?: React.Ref<SVGCircleElement>;\n};\n\nconst Decorator: React.FunctionComponent<DecoratorTypes> = ({\n  x,\n  y,\n  radius,\n  href,\n  ariaLabel,\n  external,\n  ...rest\n}) => {\n  const decorator = (\n    <PfDecorator x={x} y={y} radius={radius} className=\"odc-decorator\" showBackground {...rest} />\n  );\n\n  if (href) {\n    return external ? (\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      <a\n        className=\"odc-decorator__link\"\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        role=\"button\"\n        aria-label={ariaLabel}\n      >\n        {decorator}\n      </a>\n    ) : (\n      <Link className=\"odc-decorator__link\" to={href} role=\"button\" aria-label={ariaLabel}>\n        {decorator}\n      </Link>\n    );\n  }\n  return decorator;\n};\n\nexport default Decorator;\n","export * from './const';\nexport * from './filter-utils';\nexport * from './useAppliedDisplayFilters';\nexport * from './useSearchFilter';\nexport * from './useDisplayFilters';\nexport * from './useAllowEdgeCreation';\n","import * as React from 'react';\nimport {\n  Edge,\n  WithRemoveConnectorProps,\n  observer,\n  useSelection,\n  WithContextMenuProps,\n  DefaultEdge,\n  EdgeTerminalType,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  NodeStatus,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useAccessReviewAllowed } from '@console/dynamic-plugin-sdk';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../../../utils/topology-utils';\nimport './BaseEdge.scss';\n\ntype BaseEdgeProps = {\n  element: GraphElement;\n  dragging?: boolean;\n  className?: string;\n  animationDuration?: number;\n  startTerminalType?: EdgeTerminalType;\n  startTerminalClass?: string;\n  startTerminalStatus?: NodeStatus;\n  endTerminalType?: EdgeTerminalType;\n  endTerminalClass?: string;\n  endTerminalStatus?: NodeStatus;\n  tag?: string;\n  tagClass?: string;\n  tagStatus?: NodeStatus;\n} & WithRemoveConnectorProps &\n  Partial<WithSourceDragProps> &\n  Partial<WithTargetDragProps> &\n  Partial<WithContextMenuProps>;\n\nconst BaseEdge: React.FC<BaseEdgeProps> = ({\n  className,\n  element,\n  endTerminalType = EdgeTerminalType.directional,\n  onShowRemoveConnector,\n  onHideRemoveConnector,\n  targetDragRef,\n  sourceDragRef,\n  ...rest\n}) => {\n  const resourceObj = getResource((element as Edge).getSource());\n  const resourceModel = resourceObj && modelFor(referenceFor(resourceObj));\n  const [selected, onSelect] = useSelection({ controlled: true });\n\n  const editAccess = useAccessReviewAllowed({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: resourceObj?.metadata.name,\n    namespace: resourceObj?.metadata.namespace,\n  });\n\n  return (\n    <DefaultEdge\n      className={classNames('odc-base-edge', className)}\n      element={element}\n      onShowRemoveConnector={editAccess ? onShowRemoveConnector : undefined}\n      onHideRemoveConnector={editAccess ? onHideRemoveConnector : undefined}\n      targetDragRef={editAccess ? targetDragRef : undefined}\n      sourceDragRef={editAccess ? sourceDragRef : undefined}\n      endTerminalType={endTerminalType}\n      selected={selected}\n      onSelect={onSelect}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(BaseEdge);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  K8sResourceCommon,\n  NetworkAdapterType,\n  PodsAdapterDataType,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { Extension } from '@console/dynamic-plugin-sdk/src/types';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  PodModel,\n} from '@console/internal/models';\nimport {\n  BuildConfigData,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  useBuildConfigsWatcher,\n  useJobsForCronJobWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { getResource } from '../../utils';\n\nexport const getDataFromAdapter = <T extends { resource: K8sResourceCommon }, E extends Extension>(\n  element: GraphElement,\n  [resolvedExtensions, loaded]: [ResolvedExtension<E>[], boolean],\n): T | undefined =>\n  loaded\n    ? resolvedExtensions.reduce<T>((acc, { properties: { adapt } }) => {\n        const values = (adapt as (element: GraphElement) => T)(element);\n        return values ?? acc;\n      }, undefined)\n    : undefined;\n\nconst usePodsAdapterForWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const buildConfigData = useBuildConfigsWatcher(resource);\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n  return React.useMemo(() => ({ pods: podData?.pods, loaded, loadError, buildConfigData }), [\n    buildConfigData,\n    loadError,\n    loaded,\n    podData,\n  ]);\n};\n\nexport const podsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      JobModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: usePodsAdapterForWorkloads };\n};\n\nexport const buildsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<BuildConfigData> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      CronJobModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: useBuildConfigsWatcher };\n};\n\nexport const networkAdapterForWorkloads = (\n  element: GraphElement,\n): NetworkAdapterType | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource };\n};\n\nconst usePodsAdapterForCronJobWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  const {\n    metadata: { namespace },\n  } = resource;\n\n  const [pods, setPods] = React.useState([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      const updatedPods = jobs?.length\n        ? jobs.reduce((acc, res) => {\n            acc.push(...getPodsForResource(res, resources));\n            return acc;\n          }, [])\n        : [];\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [jobs, resources]);\n  return { pods, loaded, loadError };\n};\n\nexport const podsAdapterForCronJobWorkload = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) return undefined;\n  return { resource, provider: usePodsAdapterForCronJobWorkloads };\n};\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { TopologyDisplayFilterType } from '../topology-types';\n\nexport const SHOW_POD_COUNT_FILTER_ID = 'show-pod-count';\nexport const SHOW_LABELS_FILTER_ID = 'show-labels';\nexport const EXPAND_APPLICATION_GROUPS_FILTER_ID = 'expand-app-groups';\nexport const EXPAND_GROUPS_FILTER_ID = 'expand-groups';\n\nexport const DEFAULT_TOPOLOGY_FILTERS = [\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_GROUPS_FILTER_ID,\n    // t('topology~Expand groups')\n    labelKey: 'topology~Expand groups',\n    priority: 1,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_POD_COUNT_FILTER_ID,\n    // t('topology~Pod count')\n    labelKey: 'topology~Pod count',\n    priority: 10,\n    value: false,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_LABELS_FILTER_ID,\n    // t('topology~Labels')\n    labelKey: 'topology~Labels',\n    priority: 900,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_APPLICATION_GROUPS_FILTER_ID,\n    // t('topology~Application groupings')\n    labelKey: 'topology~Application groupings',\n    priority: 10,\n    value: true,\n  },\n];\n\nexport const DEFAULT_SUPPORTED_FILTER_IDS = [SHOW_POD_COUNT_FILTER_ID, SHOW_LABELS_FILTER_ID];\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","import { Edge, isNode, Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '@console/rhoas-plugin/src/topology/components/const';\nimport { moveConnectionModal } from '../components/modals/MoveConnectionModal';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING, TYPE_TRAFFIC_CONNECTOR } from '../const';\nimport { removeConnection } from '../utils';\nimport { getResource } from '../utils/topology-utils';\n\n/**\n * @deprecated migrated to use new Action extension, use MoveConnectorAction\n */\nconst moveConnection = (edge: Edge, availableTargets: Node[]) => {\n  const resourceObj = getResource(edge.getSource());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n\n  return {\n    // t('topology~Move connector')\n    labelKey: 'topology~Move connector',\n    callback: () => {\n      moveConnectionModal({ edge, availableTargets });\n    },\n    isDisabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(resourceModel, resourceObj, 'delete'),\n  };\n};\n\nconst getAvailableTargetForEdge = (edge: Edge, nodes: Node[]) => {\n  const currentTargets = edge\n    .getSource()\n    .getSourceEdges()\n    .map((e) => e.getTarget().getId());\n\n  return nodes\n    .filter((n) => {\n      if (n.getId() === edge.getSource().getId()) {\n        return false;\n      }\n      if (n.getId() !== edge.getTarget().getId() && currentTargets.includes(n.getId())) {\n        return false;\n      }\n      if (n.getType() === TYPE_EVENT_SOURCE) {\n        return false;\n      }\n      switch (edge.getType()) {\n        case TYPE_CONNECTS_TO:\n          return n.getType() !== TYPE_KNATIVE_REVISION && n.getType() !== TYPE_KNATIVE_SERVICE;\n        case TYPE_SERVICE_BINDING:\n          return false;\n        case TYPE_EVENT_SOURCE_LINK:\n          return n.getType() === TYPE_KNATIVE_SERVICE || n.getType() === TYPE_EVENT_PUB_SUB;\n        case TYPE_REVISION_TRAFFIC:\n          return false;\n        case TYPE_TRAFFIC_CONNECTOR:\n          return false;\n        case TYPE_KAFKA_CONNECTION_LINK:\n          return n.getType() === TYPE_MANAGED_KAFKA_CONNECTION;\n        default:\n          return true;\n      }\n    })\n    .sort((n1, n2) => n1.getLabel().localeCompare(n2.getLabel()));\n};\n\nexport const MoveConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n\n  const nodes = element\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n  const availableTargets = getAvailableTargetForEdge(element, nodes);\n\n  return {\n    id: 'move-visual-connector',\n    label: i18next.t('topology~Move connector'),\n    cta: () => {\n      moveConnectionModal({ edge: element, availableTargets });\n    },\n    disabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\nexport const DeleteConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n  return {\n    id: 'delete-connector',\n    label: i18next.t('topology~Delete connector'),\n    cta: () => {\n      removeConnection(element);\n    },\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\n/**\n * @deprecated remove this after migrating the Traffic connector side-panel to dynamic extensions\n */\nexport const edgeActions = (edge: Edge, nodes: Node[]): KebabOption[] => {\n  const actions: KebabOption[] = [];\n  const availableTargets = getAvailableTargetForEdge(edge, nodes);\n  actions.push(moveConnection(edge, availableTargets));\n  return actions;\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { editApplicationModal } from '@console/topology/src/components/modals';\n\nexport const getModifyApplicationAction = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  insertBefore?: string | string[],\n): Action => {\n  return {\n    id: 'modify-application',\n    label: i18next.t('topology~Edit application grouping'),\n    insertBefore: insertBefore ?? 'edit-pod-count',\n    cta: () =>\n      editApplicationModal({\n        resourceKind: kind,\n        resource: obj,\n        blocking: true,\n        initialApplication: '',\n      }),\n    accessReview: {\n      verb: 'patch',\n      group: kind.apiGroup,\n      resource: kind.plural,\n      namespace: obj?.metadata?.namespace,\n    },\n  };\n};\n","import {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport {\n  DisplayFilters,\n  TopologyDisplayFilterType,\n  TopologyDisplayOption,\n} from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS, EXPAND_GROUPS_FILTER_ID } from './const';\n\nexport const TOPOLOGY_SEARCH_FILTER_KEY = 'searchQuery';\nexport const TOPOLOGY_LABELS_FILTER_KEY = 'labels';\n\nexport enum NameLabelFilterValues {\n  // t('topology~Name')\n  Name = 'Name',\n  // t('topology~Label')\n  Label = 'Label',\n}\n\nexport const onSearchChange = (searchQuery: string): void => {\n  if (searchQuery.length > 0) {\n    setQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY, searchQuery);\n  } else {\n    removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n  }\n};\n\nexport const clearNameFilter = () => {\n  onSearchChange('');\n};\nexport const clearLabelFilter = () => {\n  removeQueryArgument(TOPOLOGY_LABELS_FILTER_KEY);\n};\n\nexport const clearAll = () => {\n  clearNameFilter();\n  clearLabelFilter();\n};\n\nexport const getSupportedTopologyFilters = (state: RootState): string[] => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedFilters') : DEFAULT_TOPOLOGY_FILTERS.map((f) => f.id);\n};\n\nexport const getSupportedTopologyKinds = (state: RootState): { [key: string]: number } => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedKinds') : {};\n};\n\nexport const getTopologySearchQuery = () =>\n  getQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY) ??\n  getQueryArgument(TOPOLOGY_LABELS_FILTER_KEY) ??\n  '';\n\nexport const getFilterById = (id: string, filters: DisplayFilters): TopologyDisplayOption => {\n  if (!filters) {\n    return null;\n  }\n  return filters.find((f) => f.id === id);\n};\n\nexport const isExpanded = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const groupsExpanded = getFilterById(EXPAND_GROUPS_FILTER_ID, filters)?.value ?? true;\n  if (!groupsExpanded) {\n    return false;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.expand) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const isShown = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.show) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const showKind = (kind: K8sResourceKindReference, filters: DisplayFilters): boolean => {\n  if (!filters || !kind) {\n    return true;\n  }\n  // If no kinds are shown, show all\n  const shownKinds = filters.filter((f) => f.type === TopologyDisplayFilterType.kind && f.value);\n  if (shownKinds.length === 0) {\n    return true;\n  }\n\n  // Return filter value if it exists, otherwise filter it out since there are other set filters\n  return getFilterById(kind, filters)?.value ?? false;\n};\n","export { default as BaseNode } from './BaseNode';\nexport * from './WorkloadNode';\nexport { default as PodSet } from './PodSet';\nexport * from './decorators';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import * as React from 'react';\nimport {\n  Node,\n  ContextSubMenuItem,\n  ContextMenuItem,\n  Graph,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport {\n  Action,\n  GroupedMenuOption,\n  MenuOption,\n  MenuOptionType,\n} from '@console/dynamic-plugin-sdk/src';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getMenuOptionType, orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport ActionMenuItem from '@console/shared/src/components/actions/menu/ActionMenuItem';\nimport { getResource } from '../utils';\n\nexport const createContextMenuItems = (actions: MenuOption[]) => {\n  const sortedOptions = orderExtensionBasedOnInsertBeforeAndAfter(actions);\n  return sortedOptions.map((option: MenuOption) => {\n    const optionType = getMenuOptionType(option);\n    switch (optionType) {\n      case MenuOptionType.SUB_MENU:\n        return (\n          <ContextSubMenuItem label={option.label} key={option.id}>\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </ContextSubMenuItem>\n        );\n      case MenuOptionType.GROUP_MENU:\n        return (\n          <React.Fragment key={option.id}>\n            {option.label && <h1 className=\"pf-v5-c-dropdown__group-title\">{option.label}</h1>}\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </React.Fragment>\n        );\n      default:\n        return (\n          <ActionMenuItem key={option.id} action={option as Action} component={ContextMenuItem} />\n        );\n    }\n  });\n};\n\nexport const graphActionContext = (graph: Graph, connectorSource?: Node) => ({\n  'topology-context-actions': { element: graph, connectorSource },\n});\n\nexport const groupActionContext = (element: Node, connectorSource?: Node) => ({\n  'topology-context-actions': { element, connectorSource },\n});\n\nexport const contextMenuActions = (element: GraphElement) => {\n  const resource = getResource(element);\n  const { csvName } = element.getData()?.data ?? {};\n  return {\n    'topology-actions': element,\n    ...(resource ? { [referenceFor(resource)]: resource } : {}),\n    ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n  };\n};\n","import * as React from 'react';\nimport {\n  BadgeLocation,\n  DEFAULT_LAYER,\n  DefaultNode,\n  Layer,\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  TOP_LAYER,\n  useCombineRefs,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  StatusModifier,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { K8sVerb, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport useHover from '../../../../behavior/useHover';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { getKindStringAndAbbreviation } from './nodeUtils';\n\nimport '../../../svg/SvgResourceIcon.scss';\nimport './BaseNode.scss';\n\ntype BaseNodeProps = {\n  className?: string;\n  innerRadius?: number;\n  icon?: string;\n  kind?: string;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: React.ReactNode;\n  labelIconPadding?: number;\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  children?: React.ReactNode;\n  attachments?: React.ReactNode;\n  element: Node;\n  hoverRef?: (node: Element) => () => void;\n  dragging?: boolean;\n  dropTarget?: boolean;\n  canDrop?: boolean;\n  createConnectorAccessVerb?: K8sVerb;\n  nodeStatus?: NodeStatus;\n  showStatusBackground?: boolean;\n  alertVariant?: NodeStatus;\n} & Partial<WithSelectionProps> &\n  Partial<WithDragNodeProps> &\n  Partial<WithDndDropProps> &\n  Partial<WithContextMenuProps> &\n  Partial<WithCreateConnectorProps>;\n\nconst BaseNode: React.FC<BaseNodeProps> = ({\n  className,\n  innerRadius,\n  icon,\n  kind,\n  element,\n  hoverRef,\n  children,\n  onShowCreateConnector,\n  onContextMenu,\n  contextMenuOpen,\n  createConnectorAccessVerb = 'patch',\n  createConnectorDrag,\n  alertVariant,\n  ...rest\n}) => {\n  const [hoverChange, setHoverChange] = React.useState<boolean>(false);\n  const [hover, internalHoverRef] = useHover(200, 200, [hoverChange]);\n  const nodeHoverRefs = useCombineRefs(internalHoverRef, hoverRef);\n  const { width, height } = element.getDimensions();\n  const cx = width / 2;\n  const cy = height / 2;\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconRadius = innerRadius * 0.9;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: createConnectorAccessVerb,\n    resource: resourceModel?.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  const [filtered] = useSearchFilter(element.getLabel(), resourceObj?.metadata?.labels);\n  const showLabel = useShowLabel(hover || contextMenuOpen);\n  const kindData = kind && getKindStringAndAbbreviation(kind);\n\n  const detailsLevel = element.getController().getGraph().getDetailsLevel();\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const badgeClassName = kindData\n    ? classNames('odc-resource-icon', {\n        [`odc-resource-icon-${kindData.kindStr.toLowerCase()}`]: !kindData.kindColor,\n      })\n    : '';\n  React.useEffect(() => {\n    if (!createConnectorDrag) {\n      setHoverChange((prev) => !prev);\n    }\n  }, [createConnectorDrag]);\n  return (\n    <Layer id={hover || contextMenuOpen ? TOP_LAYER : DEFAULT_LAYER}>\n      <g ref={nodeHoverRefs} data-test-id={element.getLabel()}>\n        <DefaultNode\n          className={classNames(\n            'odc-base-node',\n            className,\n            alertVariant && StatusModifier[alertVariant],\n            {\n              'is-filtered': filtered,\n            },\n          )}\n          truncateLength={RESOURCE_NAME_TRUNCATE_LENGTH}\n          element={element}\n          showLabel={showLabel}\n          scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n          onShowCreateConnector={\n            editAccess && detailsLevel !== ScaleDetailsLevel.low && onShowCreateConnector\n          }\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          badge={kindData?.kindAbbr}\n          badgeColor={kindData?.kindColor}\n          badgeClassName={badgeClassName}\n          showStatusBackground={!showDetails}\n          {...rest}\n        >\n          <g data-test-id=\"base-node-handler\">\n            {icon && showDetails && (\n              <>\n                <circle\n                  fill=\"var(--pf-v5-global--palette--white)\"\n                  cx={cx}\n                  cy={cy}\n                  r={innerRadius + 6}\n                />\n                <image\n                  x={cx - iconRadius}\n                  y={cy - iconRadius}\n                  width={iconRadius * 2}\n                  height={iconRadius * 2}\n                  xlinkHref={icon}\n                />\n              </>\n            )}\n            {showDetails && children}\n          </g>\n        </DefaultNode>\n      </g>\n    </Layer>\n  );\n};\n\nexport default observer(BaseNode);\n","import * as React from 'react';\nimport Decorator from './Decorator';\n\ntype BuildDecoratorBubbleProps = React.ComponentProps<typeof Decorator> & {\n  children: React.ReactNode;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst BuildDecoratorBubble: React.FC<BuildDecoratorBubbleProps> = ({\n  children,\n  radius,\n  x,\n  y,\n  ...otherDecoratorProps\n}) => (\n  <Decorator x={x} y={y} radius={radius} {...otherDecoratorProps}>\n    <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n      <foreignObject width={radius} height={radius} style={{ fontSize: radius }}>\n        {children}\n      </foreignObject>\n    </g>\n  </Decorator>\n);\n\nexport default BuildDecoratorBubble;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport {\n  Node,\n  useSize,\n  useHover,\n  DefaultNode,\n  LabelBadge,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n  useAnchor,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport {\n  truncateMiddle,\n  shouldTruncate,\n  TruncateOptions,\n} from '@console/internal/components/utils';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport { useSearchFilter } from '../../../../filters';\nimport { OdcNodeModel } from '../../../../topology-types';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport GroupNodeAnchor from './GroupNodeAnchor';\nimport ResourceKindsInfo from './ResourceKindsInfo';\n\nimport './GroupNode.scss';\n\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\n\nconst truncateOptions: TruncateOptions = {\n  length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\n\ntype GroupNodeProps = {\n  element: Node;\n  bgClassName: string;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  emptyValue?: React.ReactNode;\n  groupResources?: OdcNodeModel[];\n  children?: React.ReactNode;\n  typeIconClass?: string;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & Partial<WithSelectionProps & WithDndDropProps & WithContextMenuProps & WithDragNodeProps>;\n\nconst GroupNode: React.FC<GroupNodeProps> = ({\n  element,\n  bgClassName,\n  badge,\n  badgeColor,\n  badgeClassName,\n  children,\n  emptyValue,\n  typeIconClass,\n  ...rest\n}) => {\n  const ref = React.useRef();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const [textHover, textHoverRef] = useHover();\n  const [iconSize, iconRef] = useSize([badge]);\n  const iconWidth = iconSize ? iconSize.width : 0;\n  const iconHeight = iconSize ? iconSize.height : 0;\n  const title = element.getLabel();\n  const { groupResources } = element.getData();\n  const [groupSize, groupRef] = useSize([groupResources]);\n  const width = groupSize ? groupSize.width : 0;\n  const height = groupSize ? groupSize.height : 0;\n  useAnchor(\n    React.useCallback((node: Node) => new GroupNodeAnchor(node, width, height, 1.5), [\n      width,\n      height,\n    ]),\n  );\n\n  const getCustomShape = () => () => (\n    <rect\n      className={classNames('odc-group-node__bg', bgClassName)}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      rx=\"5\"\n      ry=\"5\"\n    />\n  );\n\n  return (\n    <DefaultNode\n      element={element}\n      className={classNames('odc-group-node', { 'is-filtered': filtered })}\n      badge={badge}\n      badgeColor={badgeColor}\n      badgeClassName={badgeClassName}\n      showLabel={false}\n      getCustomShape={getCustomShape}\n      {...rest}\n    >\n      <g ref={groupRef}>\n        {typeIconClass && (\n          <SvgCircledIcon\n            className=\"odc-group-node__type-icon\"\n            x={10}\n            y={-10}\n            width={20}\n            height={20}\n            iconClass={typeIconClass}\n          />\n        )}\n        <g ref={groupRef}>\n          <LabelBadge\n            ref={iconRef}\n            x={LEFT_MARGIN}\n            y={TOP_MARGIN - 2}\n            badge={badge}\n            badgeClassName={badgeClassName}\n            badgeColor={badgeColor}\n          />\n          {title && (\n            <g ref={textHoverRef}>\n              <Tooltip\n                content={title}\n                position={TooltipPosition.top}\n                trigger=\"manual\"\n                isVisible={textHover && shouldTruncate(title, truncateOptions)}\n                triggerRef={ref}\n              >\n                <text\n                  ref={ref}\n                  className=\"odc-group-node__title\"\n                  x={LEFT_MARGIN + iconWidth + TEXT_MARGIN}\n                  y={TOP_MARGIN + iconHeight}\n                  textAnchor=\"start\"\n                  dy=\"-0.25em\"\n                >\n                  {truncateMiddle(title, truncateOptions)}\n                </text>\n              </Tooltip>\n            </g>\n          )}\n          {(children || groupResources || emptyValue) && (\n            <g transform={`translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})`}>\n              {(groupResources || emptyValue) && (\n                <ResourceKindsInfo groupResources={groupResources} emptyValue={emptyValue} />\n              )}\n              {children}\n            </g>\n          )}\n        </g>\n      </g>\n    </DefaultNode>\n  );\n};\n\nexport default observer(GroupNode);\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","export * from './componentUtils';\nexport * from './componentFactory';\nexport * from './nodeContextMenu';\nexport * from './nodes';\nexport * from './edges';\nexport * from './groups';\nexport * from './NodeShadows';\n","import * as React from 'react';\nimport {\n  Modifiers,\n  Edge,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n  Graph,\n  DragSourceSpec,\n  DragObjectWithType,\n  DropTargetSpec,\n  DropTargetMonitor,\n  DragSpecOperationType,\n  CREATE_CONNECTOR_DROP_TYPE,\n  CREATE_CONNECTOR_OPERATION,\n  isGraph,\n  withDndDrop,\n  DragEvent,\n  DragOperationWithType,\n} from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { action } from 'mobx';\nimport { errorModal } from '@console/internal/components/modals';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ActionContext } from '@console/shared';\nimport { createConnection, moveNodeToGroup } from '../../../utils';\nimport { isWorkloadRegroupable, graphContextMenu, groupContextMenu } from './nodeContextMenu';\nimport withTopologyContextMenu from './withTopologyContextMenu';\nimport './GraphComponent.scss';\n\nconst MOVE_CONNECTOR_DROP_TYPE = '#moveConnector#';\n\nconst NODE_DRAG_TYPE = '#node#';\nconst EDGE_DRAG_TYPE = '#edge#';\n\nconst MOVE_CONNECTOR_OPERATION = 'moveconnector';\nconst REGROUP_OPERATION = 'regroup';\n\ntype GraphComponentProps = {\n  element: GraphElement;\n};\n\ntype NodeComponentProps = {\n  element: GraphElement;\n};\n\ntype EdgeComponentProps = {\n  element: GraphElement;\n};\n\n/**\n * type: the drag operation type\n * edit: true if the operation performs an edit, used to dim invalid drop targets\n * canDropOnNode: true if the drag object can be dropped on node, used to highlight valid drop nodes\n */\ntype EditableDragOperationType = DragOperationWithType & {\n  edit?: boolean;\n  canDropOnNode?: (operationType: string, dragElement: GraphElement, node: Node) => boolean;\n};\n\ntype DragNodeObject = {\n  element: GraphElement;\n  allowRegroup: boolean;\n};\n\nconst canDropEdgeOnNode = (operation: string, edge: Edge, node: Node): boolean => {\n  if (edge.getSource() === node) {\n    return false;\n  }\n\n  if (edge.getTarget() === node) {\n    return true;\n  }\n\n  return !node.getTargetEdges().find((e) => e.getSource() === edge.getSource());\n};\n\nconst highlightNode = (monitor: DropTargetMonitor, element: Node): boolean => {\n  const operation = monitor.getOperation() as EditableDragOperationType;\n  if (!monitor.isDragging() || !operation) {\n    return false;\n  }\n\n  if (operation.type === CREATE_CONNECTOR_OPERATION) {\n    return (\n      monitor.getItem() !== element &&\n      monitor.getItem().getParent() !== element &&\n      !monitor\n        .getItem()\n        .getSourceEdges()\n        .find((e) => e.getTarget() === element)\n    );\n  }\n\n  return (\n    operation.canDropOnNode && operation.canDropOnNode(operation.type, monitor.getItem(), element)\n  );\n};\n\nexport type NodeDragSourceSpecType = DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  GraphElement,\n  {\n    dragging?: boolean;\n    regrouping?: boolean;\n  },\n  NodeComponentProps & { canEdit?: boolean }\n>;\n\nconst nodeDragSourceSpec = (\n  type: string,\n  allowRegroup: boolean = true,\n  canEdit: boolean = false,\n): NodeDragSourceSpecType => ({\n  item: { type: NODE_DRAG_TYPE },\n  operation: (monitor, props) => {\n    return (canEdit || props.canEdit) &&\n      allowRegroup &&\n      isWorkloadRegroupable(props.element as Node)\n      ? {\n          [Modifiers.SHIFT]: { type: REGROUP_OPERATION, edit: true },\n        }\n      : undefined;\n  },\n  canCancel: (monitor) => monitor.getOperation()?.type === REGROUP_OPERATION,\n  begin: (monitor, props): DragNodeObject => {\n    return {\n      element: props.element,\n      allowRegroup:\n        (canEdit || props.canEdit) && allowRegroup && isWorkloadRegroupable(props.element as Node),\n    };\n  },\n  end: async (dropResult, monitor, props) => {\n    if (!monitor.isCancelled() && monitor.getOperation()?.type === REGROUP_OPERATION) {\n      if (monitor.didDrop() && dropResult && props && props.element.getParent() !== dropResult) {\n        const controller = props.element.getController();\n        await moveNodeToGroup(\n          props.element as Node,\n          isNode(dropResult) ? (dropResult as Node) : null,\n        );\n\n        // perform the optimistic update in an action so as not to render too soon\n        action(() => {\n          // FIXME: check shouldn't be necessary if we handled the async and backend data refresh correctly\n          if (controller.getNodeById(props.element.getId())) {\n            dropResult.appendChild(props.element);\n          }\n        })();\n      } else {\n        // cancel operation\n        return Promise.reject();\n      }\n    }\n    return undefined;\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n    regrouping: monitor.getOperation()?.type === REGROUP_OPERATION,\n  }),\n});\n\nconst noRegroupDragSourceSpec: DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  {\n    dragging?: boolean;\n  },\n  NodeComponentProps\n> = {\n  item: { type: NODE_DRAG_TYPE },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n};\n\nconst nodesEdgeIsDragging = (monitor, props) => {\n  if (!monitor.isDragging()) {\n    return false;\n  }\n  if (monitor.getOperation()?.type === MOVE_CONNECTOR_OPERATION) {\n    return monitor.getItem().getSource() === props.element;\n  }\n  if (monitor.getOperation()?.type === CREATE_CONNECTOR_OPERATION) {\n    return monitor.getItem() === props.element;\n  }\n  return false;\n};\n\nconst nodeDropTargetSpec: DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean },\n  NodeComponentProps\n> = {\n  accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor, props) => {\n    if (isEdge(item)) {\n      return canDropEdgeOnNode(monitor.getOperation()?.type, item as Edge, props.element as Node);\n    }\n    if (!props.element || item === props.element) {\n      return false;\n    }\n    return !(props.element as Node).getTargetEdges().find((e) => e.getSource() === item);\n  },\n  collect: (monitor, props) => ({\n    canDrop: highlightNode(monitor, props.element as Node),\n    dropTarget: monitor.isOver({ shallow: true }),\n    edgeDragging: nodesEdgeIsDragging(monitor, props),\n  }),\n};\n\nconst graphDropTargetSpec: DropTargetSpec<\n  DragNodeObject,\n  any,\n  { dragEditInProgress: boolean },\n  GraphComponentProps\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  hitTest: () => true,\n  canDrop: (item, monitor, props) => {\n    return (\n      monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n      ((monitor.getOperation()?.type === REGROUP_OPERATION &&\n        // FIXME: the hasParent check is necessary due to model updates during async actions\n        item.element.hasParent() &&\n        item.element.getParent() !== props.element) ||\n        monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE)\n    );\n  },\n  collect: (monitor) => {\n    const operation = monitor.getOperation() as EditableDragOperationType;\n    const dragInProgress = monitor.isDragging();\n    const dragEditInProgress =\n      monitor.isDragging() && (operation?.type === CREATE_CONNECTOR_OPERATION || operation?.edit);\n    const dragCreate =\n      dragEditInProgress &&\n      (monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE ||\n        monitor.getItemType() === MOVE_CONNECTOR_DROP_TYPE);\n    return {\n      dragInProgress,\n      dragEditInProgress,\n      dragCreate,\n      hasDropTarget: dragEditInProgress && monitor.hasDropTarget(),\n    };\n  },\n  dropHint: 'create',\n};\n\nconst applicationGroupDropTargetSpec: DropTargetSpec<\n  any,\n  any,\n  { droppable: boolean; dropTarget: boolean; canDrop: boolean },\n  any\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor) =>\n    monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n    (monitor.getOperation()?.type === REGROUP_OPERATION ||\n      monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n  collect: (monitor) => {\n    return {\n      droppable: monitor.isDragging() && monitor.getOperation()?.type === REGROUP_OPERATION,\n      dropTarget: monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }),\n      canDrop:\n        monitor.isDragging() &&\n        (monitor.getOperation()?.type === REGROUP_OPERATION ||\n          monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n      dragRegroupable: monitor.isDragging() && monitor.getItem()?.allowRegroup,\n    };\n  },\n  dropHint: 'create',\n};\n\nconst edgeDragSourceSpec = (\n  type: string,\n  callback: (\n    sourceNode: Node,\n    targetNode: Node,\n    replaceTargetNode?: Node,\n  ) => Promise<K8sResourceKind[] | K8sResourceKind>,\n  failureTitle?: string,\n): DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  { dragging: boolean },\n  EdgeComponentProps\n> => ({\n  item: { type: EDGE_DRAG_TYPE },\n  operation: { type: MOVE_CONNECTOR_OPERATION, edit: true, canDropOnNode: canDropEdgeOnNode },\n  begin: (monitor, props) => {\n    props.element.raise();\n    return props.element;\n  },\n  drag: (event, monitor, props) => {\n    (props.element as Edge).setEndPoint(event.x, event.y);\n  },\n  end: (dropResult, monitor, props) => {\n    const edge = props.element as Edge;\n    edge.setEndPoint();\n    if (\n      monitor.didDrop() &&\n      dropResult &&\n      canDropEdgeOnNode(monitor.getOperation()?.type, edge, dropResult)\n    ) {\n      const title =\n        failureTitle !== undefined ? failureTitle : i18next.t('topology~Error moving connection');\n      callback(edge.getSource(), dropResult, edge.getTarget()).catch((error) => {\n        errorModal({ title, error: error.message, showIcon: true });\n      });\n    }\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n});\n\nconst noDropTargetSpec: DropTargetSpec<GraphElement, any, {}, { element: GraphElement }> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: () => {\n    return false;\n  },\n};\n\nconst withNoDrop = () => {\n  return withDndDrop<any, any, {}, NodeComponentProps>(noDropTargetSpec);\n};\n\nconst withContextMenu = <E extends GraphElement>(actions: (element: E) => ActionContext) => {\n  return withTopologyContextMenu(\n    actions,\n    document.getElementById('popper-container'),\n    'odc-topology-context-menu',\n  );\n};\n\nconst createVisualConnector = (source: Node, target: Node | Graph): React.ReactElement[] | null => {\n  if (isGraph(target)) {\n    return graphContextMenu(target, source);\n  }\n  if (target.isGroup()) {\n    return groupContextMenu(target, source);\n  }\n\n  createConnection(source, target, null).catch((error) => {\n    errorModal({ title: i18next.t('topology~Error creating connection'), error: error.message });\n  });\n\n  return null;\n};\n\nconst createConnectorCallback = () => (\n  source: Node,\n  target: Node | Graph,\n  event: DragEvent,\n  dropHints: string[] | undefined,\n): Promise<React.ReactElement[] | null> => {\n  if (source === target) {\n    return null;\n  }\n  const relationshipProviders = target.getGraph()?.getData()?.relationshipProviderExtensions;\n  const curRelProvider = relationshipProviders?.find(({ uid }) => dropHints.includes(uid));\n  if (curRelProvider) {\n    return curRelProvider.properties.create(source, target);\n  }\n\n  const createConnectors = target.getGraph()?.getData()?.createConnectorExtensions;\n  if (isGraph(target) || !createConnectors) {\n    return Promise.resolve(createVisualConnector(source, target));\n  }\n  const creator = createConnectors.find((getter) => !!getter(dropHints, source, target));\n  if (creator) {\n    return creator(dropHints, source, target)(source, target);\n  }\n  return Promise.resolve(createVisualConnector(source, target));\n};\n\nexport {\n  GraphComponentProps,\n  NodeComponentProps,\n  EdgeComponentProps,\n  EditableDragOperationType,\n  DragNodeObject,\n  nodesEdgeIsDragging,\n  noRegroupDragSourceSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  graphDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  noDropTargetSpec,\n  createConnectorCallback,\n  REGROUP_OPERATION,\n  MOVE_CONNECTOR_DROP_TYPE,\n  NODE_DRAG_TYPE,\n  EDGE_DRAG_TYPE,\n  withNoDrop,\n  withContextMenu,\n  canDropEdgeOnNode,\n  highlightNode,\n};\n","import * as React from 'react';\nimport { Node, Graph, isGraph } from '@patternfly/react-topology';\nimport { ActionServiceProvider } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP } from '@console/topology/src/const';\nimport { createContextMenuItems } from '../../../actions/contextMenuActions';\n\nexport const isWorkloadRegroupable = (node: Node): boolean =>\n  isGraph(node?.getParent()) || node?.getParent().getType() === TYPE_APPLICATION_GROUP;\n\nexport const groupContextMenu = (element: Node, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n\nexport const graphContextMenu = (graph: Graph, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element: graph, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n","export { default as BaseEdge } from './BaseEdge';\nexport { default as AggregateEdge } from './AggregateEdge';\nexport { default as ConnectsTo } from './ConnectsTo';\nexport { default as CreateConnector } from './CreateConnector';\nexport { default as ServiceBinding } from './ServiceBinding';\nexport { default as TrafficConnector } from './TrafficConnector';\n","export { default as GroupNode } from './GroupNode';\nexport { default as GroupNodeAnchor } from './GroupNodeAnchor';\nexport { default as Application } from './Application';\nexport { default as ResourceKindsInfo } from './ResourceKindsInfo';\n","import { useContext } from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { DisplayFilters } from '../topology-types';\nimport { FilterContext } from './FilterProvider';\n\nconst useDisplayFilters = (): DisplayFilters => {\n  const { filters } = useContext(FilterContext);\n  return useDeepCompareMemoize(filters);\n};\n\nexport { useDisplayFilters };\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import { Node, Point, AbstractAnchor, getRectAnchorPoint } from '@patternfly/react-topology';\n\nclass GroupNodeAnchor extends AbstractAnchor<Node> {\n  protected readonly width: number;\n\n  protected readonly height: number;\n\n  constructor(owner: Node, width: number, height: number, offset: number = 0) {\n    super(owner, offset);\n    this.width = width;\n    this.height = height;\n  }\n\n  getLocation(reference: Point): Point {\n    const center = new Point(\n      this.owner.getPosition().x + this.width / 2,\n      this.owner.getPosition().y + this.height / 2,\n    );\n\n    const offset2x = this.offset * 2;\n    return getRectAnchorPoint(center, this.width + offset2x, this.height + offset2x, reference);\n  }\n}\n\nexport default GroupNodeAnchor;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { modelFor, pluralizeKind, referenceForModel } from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../../../../topology-types';\n\nimport './ResourceKindsInfo.scss';\n\nexport const RESOURCE_INFO_PADDING = 32;\nexport const RESOURCE_KIND_ROW_WIDTH = 250;\nexport const RESOURCE_KIND_ROW_HEIGHT = 29;\n\ntype ResourceKindsInfoProps = {\n  groupResources: OdcNodeModel[];\n  emptyValue?: React.ReactNode;\n};\n\nconst ResourceKindsInfo: React.FC<ResourceKindsInfoProps> = ({ groupResources, emptyValue }) => {\n  const resourcesData = {};\n  _.forEach(groupResources, (node: OdcNodeModel) => {\n    if (!node) {\n      return;\n    }\n    const kind = node.resourceKind || node.resource?.kind;\n    resourcesData[kind] = [...(resourcesData[kind] ? resourcesData[kind] : []), node.resource];\n  });\n  const resourceTypes = _.keys(resourcesData);\n\n  if (!resourceTypes.length) {\n    return (\n      <foreignObject\n        width={RESOURCE_KIND_ROW_WIDTH}\n        height={RESOURCE_INFO_PADDING + RESOURCE_KIND_ROW_HEIGHT}\n      >\n        <div className=\"odc-resource-kinds-info\">{emptyValue}</div>\n      </foreignObject>\n    );\n  }\n\n  return (\n    <foreignObject\n      width={RESOURCE_KIND_ROW_WIDTH}\n      height={RESOURCE_INFO_PADDING + resourceTypes.length * RESOURCE_KIND_ROW_HEIGHT}\n    >\n      <div className=\"odc-resource-kinds-info\">\n        <table className=\"odc-resource-kinds-info__table\">\n          <tbody className=\"odc-resource-kinds-info__body\">\n            {resourceTypes.map((key) => {\n              const kindObj = modelFor(key);\n              let kind;\n              let label;\n              if (kindObj) {\n                kind = kindObj.crd ? referenceForModel(kindObj) : kindObj.kind;\n                label = resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label;\n              } else {\n                kind = key;\n                label = resourcesData[key].length > 1 ? pluralizeKind(key) : _.startCase(key);\n              }\n              return (\n                <tr key={key} className=\"odc-resource-kinds-info__row\">\n                  <td className=\"odc-resource-kinds-info__count\">{resourcesData[key].length}</td>\n                  <td className=\"odc-resource-kinds-info__resource-icon\">\n                    <ResourceIcon kind={kind} />\n                  </td>\n                  <td className=\"odc-resource-kinds-info__kind\">{label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </foreignObject>\n  );\n};\n\nexport default ResourceKindsInfo;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RevisionModel } from '@console/knative-plugin/src/models';\nimport {\n  PodRCData,\n  PodStatus,\n  calculateRadius,\n  getPodData,\n  podDataInProgress,\n  usePodRingLabel,\n  useRelatedHPA,\n} from '@console/shared';\n\ninterface PodSetProps {\n  size: number;\n  data: PodRCData;\n  showPodCount?: boolean;\n  x?: number;\n  y?: number;\n}\n\ninterface InnerPodStatusRadius {\n  innerPodStatusOuterRadius: number;\n  innerPodStatusInnerRadius: number;\n}\n\nconst calculateInnerPodStatusRadius = (\n  outerPodStatusInnerRadius: number,\n  outerPodStatusWidth: number,\n): InnerPodStatusRadius => {\n  const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n  const spaceBwOuterAndInnerPodStatus = 3;\n  const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n  const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n\n  return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\n\nexport const podSetInnerRadius = (size: number, data?: PodRCData) => {\n  const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  let radius = podStatusInnerRadius;\n\n  if (data && podDataInProgress(data.obj, data.current, data.isRollingOut)) {\n    const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n      radius,\n      podStatusStrokeWidth,\n    );\n    radius = innerPodStatusInnerRadius;\n  }\n\n  const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n\n  return radius - innerStrokeWidth - podStatusInset;\n};\n\nconst PodSet: React.FC<PodSetProps> = React.memo(function PodSet({\n  size,\n  data,\n  x = 0,\n  y = 0,\n  showPodCount,\n}) {\n  const { t } = useTranslation();\n  const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(\n    size,\n  );\n  const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n    podStatusInnerRadius,\n    podStatusStrokeWidth,\n  );\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(data);\n\n  const [hpa] = useRelatedHPA(\n    data.obj?.apiVersion,\n    data.obj?.kind,\n    data.obj?.metadata?.name,\n    data.obj?.metadata?.namespace,\n  );\n  const hpaControlledScaling = !!hpa;\n\n  const obj = data.current?.obj || data.obj;\n  const ownerKind = RevisionModel.kind === data.obj?.kind ? data.obj.kind : obj.kind;\n  const { title, subTitle, titleComponent } = usePodRingLabel(\n    obj,\n    ownerKind,\n    data?.pods,\n    hpaControlledScaling,\n    t,\n    hpa,\n  );\n  return (\n    <>\n      <PodStatus\n        key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n        x={x - size / 2}\n        y={y - size / 2}\n        innerRadius={podStatusInnerRadius}\n        outerRadius={podStatusOuterRadius}\n        data={completedDeploymentData}\n        size={size}\n        subTitle={showPodCount ? subTitle : undefined}\n        title={showPodCount ? title : undefined}\n        titleComponent={showPodCount ? titleComponent : undefined}\n      />\n      {inProgressDeploymentData && (\n        <PodStatus\n          x={x - size / 2}\n          y={y - size / 2}\n          innerRadius={innerPodStatusInnerRadius}\n          outerRadius={innerPodStatusOuterRadius}\n          data={inProgressDeploymentData}\n          size={size}\n        />\n      )}\n    </>\n  );\n});\n\nexport default PodSet;\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import { BaseEdge } from '@patternfly/react-topology';\nimport { observable, makeObservable } from 'mobx';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { OdcEdgeModel } from '../topology-types';\n\nclass OdcBaseEdge extends BaseEdge {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind;\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcEdgeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseEdge;\n","export * from './components';\nexport { default as Topology } from './Topology';\n","import * as React from 'react';\nimport { useUserSettingsCompatibility } from '@console/shared';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from '../redux/const';\nimport { DisplayFilters } from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS } from './const';\n\nconst TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY = `devconsole.topology.filters`;\n\nconst getTopologyFilters = (appliedFilters: AppliedFilters) => {\n  const filters = [...DEFAULT_TOPOLOGY_FILTERS];\n  filters.forEach((filter) => {\n    if (appliedFilters[filter.id] !== undefined) {\n      filter.value = appliedFilters[filter.id];\n    }\n  });\n\n  return filters;\n};\n\nconst getAppliedFilters = (filters: DisplayFilters): { [id: string]: boolean } => {\n  if (!filters?.length) {\n    return {};\n  }\n\n  return filters.reduce((acc, filter) => {\n    acc[filter.id] = filter.value;\n    return acc;\n  }, {});\n};\n\ntype AppliedFilters = { [filterKey: string]: boolean };\ntype SetTopologyFilters = (filters: DisplayFilters) => void;\n\nconst useFilterContextValues = (): [\n  DisplayFilters,\n  AppliedFilters,\n  boolean,\n  SetTopologyFilters,\n] => {\n  const [appliedFilters, setAppliedFilters, appliedFiltersLoaded] = useUserSettingsCompatibility(\n    TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY,\n    TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY,\n    getAppliedFilters(DEFAULT_TOPOLOGY_FILTERS),\n  );\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const [filters, setFilters] = React.useState<DisplayFilters>([]);\n\n  React.useEffect(() => {\n    if (appliedFiltersLoaded && !filtersLoaded) {\n      setFilters(getTopologyFilters(appliedFilters));\n      setFiltersLoaded(true);\n    }\n  }, [appliedFilters, appliedFiltersLoaded, filtersLoaded]);\n\n  const setTopologyFilters = React.useCallback(\n    (displayFilters: DisplayFilters) => {\n      setFilters(displayFilters);\n      setAppliedFilters(getAppliedFilters(displayFilters));\n    },\n    [setAppliedFilters],\n  );\n\n  return [filters, appliedFilters, appliedFilters && filtersLoaded, setTopologyFilters];\n};\n\ntype FilterContextType = {\n  filters?: DisplayFilters;\n  appliedFilters?: AppliedFilters;\n  setTopologyFilters?: SetTopologyFilters;\n};\n\nexport const FilterContext = React.createContext<FilterContextType>({});\n\nexport const FilterProvider: React.FC = ({ children }) => {\n  const [filters, appliedFilters, loaded, setTopologyFilters] = useFilterContextValues();\n  return (\n    <FilterContext.Provider value={{ filters, appliedFilters, setTopologyFilters }}>\n      {loaded ? children : null}\n    </FilterContext.Provider>\n  );\n};\n","export * from './edgeActions';\nexport * from './nodeActions';\nexport * from './modify-application';\nexport * from './contextMenuActions';\nexport * from './provider';\n","import { ScaleDetailsLevel, useVisualizationController } from '@patternfly/react-topology';\nimport { SHOW_LABELS_FILTER_ID } from './const';\nimport { getFilterById } from './filter-utils';\nimport { useDisplayFilters } from './useDisplayFilters';\n\nconst useShowLabel = (hover: boolean): boolean => {\n  const displayFilters = useDisplayFilters();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const showLabelsFilter = getFilterById(SHOW_LABELS_FILTER_ID, displayFilters);\n\n  return hover || (detailsLevel === ScaleDetailsLevel.high && showLabelsFilter?.value);\n};\n\nexport { useShowLabel };\n","import { get } from 'lodash';\nimport { kindToAbbr, modelFor } from '@console/internal/module/k8s';\n\nexport const getKindStringAndAbbreviation = (\n  kind: string,\n): { kindStr: string; kindAbbr: string; kindColor: string } => {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DetailsItem, ResourceSummary, Timestamp } from '@console/internal/components/utils';\nimport { CronJobModel } from '@console/internal/models';\nimport { CronJobKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype CronJobSideBarDetailsProps = {\n  cronjob: CronJobKind;\n};\n\nconst CronJobSideBarDetails: React.FC<CronJobSideBarDetailsProps> = ({ cronjob }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={cronjob.metadata.uid} obj={cronjob} path=\"\" />\n      </div>\n      <ResourceSummary resource={cronjob} showPodSelector>\n        <DetailsItem label={t('topology~Schedule')} obj={cronjob} path=\"spec.schedule\" />\n        <DetailsItem\n          label={t('topology~Concurrency policy')}\n          obj={cronjob}\n          path=\"spec.concurrencyPolicy\"\n        />\n        <DetailsItem\n          label={t('topology~Starting deadline seconds')}\n          obj={cronjob}\n          path=\"spec.startingDeadlineSeconds\"\n        >\n          {cronjob.spec.startingDeadlineSeconds\n            ? t('topology~second', { count: cronjob.spec.startingDeadlineSeconds })\n            : t('topology~Not configured')}\n        </DetailsItem>\n        <DetailsItem\n          label={t('topology~Last schedule time')}\n          obj={cronjob}\n          path=\"status.lastScheduleTime\"\n        >\n          <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useCronJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<CronJobKind>(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <CronJobSideBarDetails cronjob={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DaemonSetDetailsList } from '@console/internal/components/daemon-set';\nimport { ResourceSummary, StatusBox } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { DaemonSetKind } from '@console/internal/module/k8s';\nimport { PodRing, usePodsWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\n\ntype DaemonSetOverviewDetailsProps = {\n  ds: DaemonSetKind;\n};\n\nconst DaemonSetSideBarDetails: React.FC<DaemonSetOverviewDetailsProps> = ({ ds }) => {\n  const { namespace } = ds.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(ds, 'DaemonSet', namespace);\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRing\n            pods={podData?.pods ?? []}\n            resourceKind={DaemonSetModel}\n            obj={ds}\n            enableScaling={false}\n          />\n        </StatusBox>\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={ds} showPodSelector showNodeSelector showTolerations />\n      </div>\n      <div className=\"resource-overview__details\">\n        <DaemonSetDetailsList ds={ds} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDaemonSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DaemonSetKind>(element);\n  if (!resource || resource.kind !== DaemonSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DaemonSetSideBarDetails ds={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentConfigDetailsList } from '@console/internal/components/deployment-config';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentConfigSideBarDetailsProps = {\n  dc: K8sResourceKind;\n};\n\nconst DeploymentConfigSideBarDetails: React.FC<DeploymentConfigSideBarDetailsProps> = ({ dc }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {dc.status.availableReplicas === dc.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentConfigDetailsList dc={dc} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentConfigSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== DeploymentConfigModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentConfigSideBarDetails dc={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentDetailsList } from '@console/internal/components/deployment';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentModel } from '@console/internal/models';\nimport { DeploymentKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentSideBarDetailsProps = {\n  deployment: DeploymentKind;\n};\n\nconst DeploymentSideBarDetails: React.FC<DeploymentSideBarDetailsProps> = ({ deployment: d }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {d.spec.paused && <WorkloadPausedAlert obj={d} model={DeploymentModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={d.metadata.uid} obj={d} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={d} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {d.status.availableReplicas === d.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentDetailsList deployment={d} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DeploymentKind>(element);\n  if (!resource || resource.kind !== DeploymentModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentSideBarDetails deployment={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DetailsItem,\n  ResourceSummary,\n  StatusBox,\n  pluralize,\n} from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport { JobKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype JobSideBarDetailsProps = {\n  job: JobKind;\n};\n\nconst JobSideBarDetails: React.FC<JobSideBarDetailsProps> = ({ job }) => {\n  const { namespace } = job.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRingSet key={job.metadata.uid} obj={job} path=\"\" />\n        </StatusBox>\n      </div>\n      <ResourceSummary resource={job} showPodSelector>\n        <DetailsItem label={t('topology~Desired completions')} obj={job} path=\"spec.completions\" />\n        <DetailsItem label={t('topology~Parallelism')} obj={job} path=\"spec.parallelism\" />\n        <DetailsItem\n          label={t('topology~Active deadline seconds')}\n          obj={job}\n          path=\"spec.activeDeadlineSeconds\"\n        >\n          {job.spec?.activeDeadlineSeconds\n            ? pluralize(job.spec.activeDeadlineSeconds, 'second')\n            : t('topology~Not configured')}\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<JobKind>(element);\n  if (!resource || resource.kind !== JobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobSideBarDetails job={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  isPodAdapter,\n  PodsAdapterDataType,\n  PodAdapter,\n  useResolvedExtensions,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { PodsOverviewContent } from '@console/shared/src/components/pod/PodsOverview';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst PodsTabSection: React.FC<{\n  id: string;\n  podAdapter: AdapterDataType<PodsAdapterDataType<PodKind>>;\n  podAdapterExtensionResolved: boolean;\n}> = ({ id, podAdapter, podAdapterExtensionResolved }) => {\n  const [{ data: podsData, loaded: podsDataLoaded }, setPodData] = React.useState<{\n    data?: PodsAdapterDataType<PodKind>;\n    loaded: boolean;\n  }>({ loaded: false });\n\n  const handleAdapterResolved = React.useCallback(\n    (data) => {\n      if (podAdapter?.resource?.kind === 'CronJob') {\n        // Fixes the issue of Topology page crashing.\n        setTimeout(() => setPodData({ data, loaded: true }), 3000);\n      } else {\n        setPodData({ data, loaded: true });\n      }\n    },\n    [podAdapter],\n  );\n\n  return podAdapter ? (\n    <TopologySideBarTabSection>\n      {podAdapterExtensionResolved && (\n        <ResolveAdapter<PodsAdapterDataType<PodKind>>\n          key={id}\n          resource={podAdapter.resource}\n          data={podAdapter.data}\n          useAdapterHook={podAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {podsDataLoaded && podsData.loaded && !podsData.loadError && (\n        <PodsOverviewContent obj={podAdapter.resource} {...podsData} />\n      )}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const usePodsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [podAdapterExtension, podAdapterExtensionResolved] = useResolvedExtensions<PodAdapter>(\n    isPodAdapter,\n  );\n  const podAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<PodsAdapterDataType<PodKind>>, PodAdapter>(element, [\n        podAdapterExtension,\n        podAdapterExtensionResolved,\n      ]),\n    [element, podAdapterExtension, podAdapterExtensionResolved],\n  );\n  if (!podAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <PodsTabSection\n      id={element.getId()}\n      podAdapter={podAdapter}\n      podAdapterExtensionResolved={podAdapterExtensionResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\ntype ResolveAdapterProps<D, T> = {\n  resource: K8sResourceCommon;\n  data?: T;\n  useAdapterHook: (resource: K8sResourceCommon, data: T) => D;\n  onAdapterDataResolved: (data: D) => void;\n};\n\nconst ResolveAdapter = <D extends {}, T = {}>({\n  resource,\n  data: customData,\n  useAdapterHook,\n  onAdapterDataResolved,\n}: ResolveAdapterProps<D, T>) => {\n  const data = useAdapterHook(resource, customData);\n\n  React.useEffect(() => {\n    if (data) {\n      onAdapterDataResolved(data);\n    }\n    // We do not want to run the effect every time onAdapterDataResolved changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return null;\n};\n\nexport default ResolveAdapter;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { StatefulSetModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype StatefulSetSideBarDetailsProps = {\n  ss: K8sResourceKind;\n};\n\nconst StatefulSetSideBarDetails: React.FC<StatefulSetSideBarDetailsProps> = ({ ss }) => (\n  <div className=\"overview__sidebar-pane-body resource-overview__body\">\n    <div className=\"resource-overview__pod-counts\">\n      <PodRingSet key={ss.metadata.uid} obj={ss} path=\"/spec/replicas\" />\n    </div>\n    <ResourceSummary resource={ss} showPodSelector showNodeSelector showTolerations />\n  </div>\n);\n\nexport const useStatefulSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== StatefulSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <StatefulSetSideBarDetails ss={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../utils';\n\nexport const getWorkloadResourceLink = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource) {\n    return null;\n  }\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  BuildAdapter,\n  isBuildAdapter,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { BuildConfigData } from '@console/shared';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { BuildOverview } from './BuildOverview';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst BuildTabSection: React.FC<{\n  id: string;\n  buildAdapter: AdapterDataType<BuildConfigData>;\n  extensionsResolved: boolean;\n}> = ({ id, buildAdapter, extensionsResolved }) => {\n  const [\n    { data: buildConfigs, loaded: buildConfigsDataLoaded },\n    setBuildConfigsData,\n  ] = React.useState<{\n    data?: BuildConfigData;\n    loaded: boolean;\n  }>({ loaded: false });\n  const handleAdapterResolved = React.useCallback((data) => {\n    setBuildConfigsData({ data, loaded: true });\n  }, []);\n\n  return buildAdapter ? (\n    <TopologySideBarTabSection>\n      {extensionsResolved && (\n        <ResolveAdapter<BuildConfigData>\n          key={id}\n          resource={buildAdapter.resource}\n          useAdapterHook={buildAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {buildConfigsDataLoaded && <BuildOverview buildConfigs={buildConfigs.buildConfigs} />}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useBuildsSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [buildAdapterExtensions, extensionsResolved] = useResolvedExtensions<BuildAdapter>(\n    isBuildAdapter,\n  );\n  const buildAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<BuildConfigData>, BuildAdapter>(element, [\n        buildAdapterExtensions,\n        extensionsResolved,\n      ]),\n    [buildAdapterExtensions, element, extensionsResolved],\n  );\n  if (!buildAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <BuildTabSection\n      id={element.getId()}\n      buildAdapter={buildAdapter}\n      extensionsResolved={extensionsResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  isNetworkAdapter,\n  useResolvedExtensions,\n  NetworkAdapter,\n  K8sResourceCommon,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { NetworkingOverview } from './NetworkingOverview';\nimport { getDataFromAdapter } from './utils';\n\nconst NetworkTabSection: React.FC<{\n  networkAdapter: {\n    resource: K8sResourceCommon;\n  };\n}> = ({ networkAdapter }) => {\n  return networkAdapter ? (\n    <TopologySideBarTabSection>\n      <NetworkingOverview obj={networkAdapter.resource} />\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useNetworkingSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [networkAdapterExtensions, extensionsLoaded] = useResolvedExtensions<NetworkAdapter>(\n    isNetworkAdapter,\n  );\n  const networkAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<{ resource: K8sResourceCommon }, NetworkAdapter>(element, [\n        networkAdapterExtensions,\n        extensionsLoaded,\n      ]),\n    [element, extensionsLoaded, networkAdapterExtensions],\n  );\n  if (!networkAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = <NetworkTabSection networkAdapter={networkAdapter} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { CronJobModel } from '@console/internal/models';\nimport { useJobsForCronJobWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { JobsOverview } from './JobsOverview';\n\nconst JobsTabSection: React.FC<{ resource: K8sResourceCommon }> = ({ resource }) => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  return (\n    <TopologySideBarTabSection>\n      <JobsOverview obj={resource} jobs={jobs} />\n    </TopologySideBarTabSection>\n  );\n};\n\nexport const useJobsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobsTabSection resource={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { PodDetailsList, PodResourceSummary } from '@console/internal/components/pod';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype PodSideBarDetailsProps = {\n  pod: PodKind;\n};\n\nconst PodSideBarDetails: React.FC<PodSideBarDetailsProps> = ({ pod }) => {\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={pod.metadata.uid} obj={pod} path=\"\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <PodResourceSummary pod={pod} />\n      </div>\n      <div className=\"resource-overview__details\">\n        <PodDetailsList pod={pod} />\n      </div>\n    </div>\n  );\n};\n\nexport const usePodSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<PodKind>(element);\n  if (!resource || resource.kind !== PodModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <PodSideBarDetails pod={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { CommonActionFactory } from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { Action, DetailsResourceAlertContent, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceCondition,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnativeServiceModel } from '@console/knative-plugin';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getResource } from '../../utils';\n\nconst addHealthChecksRefs = [\n  referenceForModel(DeploymentConfigModel),\n  referenceForModel(DeploymentModel),\n  referenceForModel(DaemonSetModel),\n  referenceForModel(StatefulSetModel),\n  referenceForModel(KnativeServiceModel),\n];\n\nexport const useHealthChecksAlert = (element: GraphElement): DetailsResourceAlertContent | null => {\n  const resource = getResource(element);\n  const kind = resource?.kind;\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n  const { t } = useTranslation();\n  const kindForCRDResource = resource ? referenceFor(resource) : undefined;\n  const resourceModel = kindForCRDResource ? modelFor(kindForCRDResource) : undefined;\n  const resourceKind = resourceModel?.crd ? kindForCRDResource : kind;\n\n  const [canAddHealthChecks, canAddHealthChecksLoading] = useAccessReview({\n    group: resourceModel?.apiGroup,\n    resource: resourceModel?.plural,\n    namespace,\n    name,\n    verb: 'update',\n  });\n\n  if (!resource || !addHealthChecksRefs.includes(referenceFor(resource))) {\n    return null;\n  }\n\n  const containers = resource?.spec?.template?.spec?.containers;\n  const containersName = containers?.map((container) => container.name);\n  const healthCheckAdded = containers?.every(\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n\n  const showAlert = !healthCheckAdded && canAddHealthChecks && !canAddHealthChecksLoading;\n\n  const addHealthChecksLink = `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containersName[0]}/health-checks`;\n\n  const alertMessage =\n    containersName?.length > 1\n      ? t(\n          'topology~Not all Containers have health checks to ensure your application is running correctly.',\n        )\n      : t(\n          'topology~Container {{containersName}} does not have health checks to ensure your application is running correctly.',\n          { containersName },\n        );\n\n  return showAlert\n    ? {\n        title: t('topology~Health checks'),\n        dismissible: true,\n        content: (\n          <>\n            {alertMessage} <Link to={addHealthChecksLink}>{t('topology~Add health checks')}</Link>\n          </>\n        ),\n        variant: 'custom',\n      }\n    : null;\n};\n\nexport const useResourceQuotaAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const resource = getResource(element);\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n\n  const [canUseAlertAction, canUseAlertActionLoading] = useAccessReview({\n    group: DeploymentModel.apiGroup,\n    resource: DeploymentModel.plural,\n    namespace,\n    name,\n    verb: 'patch',\n  });\n\n  if (!resource || referenceForModel(DeploymentModel) !== referenceFor(resource)) return null;\n\n  const statusConditions: K8sResourceCondition[] = resource.status?.conditions ?? [];\n  const replicaFailure = statusConditions.find((condition) => condition.type === 'ReplicaFailure');\n  const replicaFailureMsg: string = replicaFailure?.message ?? '';\n  const resourceQuotaRequested = replicaFailureMsg.split(':')?.[3] ?? '';\n\n  let alertAction: Action;\n  if (resourceQuotaRequested.includes('limits')) {\n    alertAction = DeploymentActionFactory.EditResourceLimits(DeploymentModel, resource);\n  } else if (resourceQuotaRequested.includes('pods')) {\n    alertAction = CommonActionFactory.ModifyCount(DeploymentModel, resource);\n  }\n\n  const showAlertActionLink = alertAction && canUseAlertAction && !canUseAlertActionLoading;\n\n  const alertActionCta = alertAction?.cta as () => void;\n\n  const onAlertActionClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Alert Action Link Clicked');\n    alertActionCta();\n  };\n\n  const alertActionLink = showAlertActionLink ? (\n    <AlertActionLink onClick={onAlertActionClick}>{alertAction.label as string}</AlertActionLink>\n  ) : undefined;\n\n  return replicaFailure\n    ? {\n        title: t('topology~Resource Quotas'),\n        dismissible: true,\n        content: replicaFailureMsg,\n        actionLinks: alertActionLink,\n        variant: 'warning',\n      }\n    : null;\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\n\ntype VPATabSectionProps = {\n  vpas: K8sResourceCommon[];\n};\n\nconst VPATabSection: React.FC<VPATabSectionProps> = ({ vpas }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~VerticalPodAutoscalers')} />\n      <ul className=\"list-group\">\n        {vpas.map((vpa: K8sResourceCommon) => (\n          <li key={vpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              groupVersionKind={getGroupVersionKindForResource(vpa)}\n              name={vpa.metadata.name}\n              namespace={vpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport const useVpaSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [vpas] = useK8sWatchResource<K8sResourceCommon[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    isList: true,\n    namespaced: true,\n  });\n\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n\n  const resource = getResource(element);\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, resource);\n\n  const section =\n    verticalPodAutoscalers.length > 0 ? (\n      <TopologySideBarTabSection>\n        <VPATabSection vpas={verticalPodAutoscalers} />\n      </TopologySideBarTabSection>\n    ) : undefined;\n  return [section, true, undefined];\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { BuildModel } from '@console/internal/models';\nimport { Status, useBuildConfigsWatcher } from '@console/shared';\nimport { getResource } from '../../../../../utils';\nimport BuildDecoratorBubble from './BuildDecoratorBubble';\n\ninterface BuildDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst BuildDecorator: React.FC<BuildDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const build = buildConfigs?.[0]?.builds?.[0];\n\n  if (!build) {\n    return null;\n  }\n\n  const label = t('topology~Build {{status}}', { status: build.status?.phase });\n\n  const link = `${resourcePathFromModel(\n    BuildModel,\n    build.metadata.name,\n    build.metadata.namespace,\n  )}/logs`;\n\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={label} href={link}>\n          <Status status={build.status.phase} iconOnly noTooltip />\n        </BuildDecoratorBubble>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default BuildDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { getCheDecoratorData, getEditURL } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst EditDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const { cheURL, cheIconURL } = getCheDecoratorData(consoleLinks);\n  const workloadData = element.getData().data;\n  const { editURL, vcsURI, vcsRef, contextDir } = workloadData;\n  const cheEnabled = !!cheURL;\n  const editUrl = editURL || getEditURL(vcsURI, vcsRef, cheURL, contextDir);\n  const repoIcon = routeDecoratorIcon(editUrl, radius, t, cheEnabled, cheIconURL);\n\n  if (!repoIcon) {\n    return null;\n  }\n  const label = t('topology~Edit source code');\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={editUrl} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>{repoIcon}</g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default EditDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node, SELECTION_EVENT } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getSeverityAlertType,\n  getFiringAlerts,\n  AlertSeverityIcon,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport Decorator from './Decorator';\n\ntype DispatchProps = {\n  showMonitoringOverview?: () => void;\n};\n\nconst dispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  showMonitoringOverview: () => dispatch(selectOverviewDetailsTab('Observe')),\n});\n\ninterface MonitoringAlertsDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\ntype MonitoringAlertsDecoratorType = MonitoringAlertsDecoratorProps & DispatchProps;\n\nconst MonitoringAlertsDecorator: React.FC<MonitoringAlertsDecoratorType> = ({\n  element,\n  radius,\n  x,\n  y,\n  showMonitoringOverview,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const workloadData = element.getData().data;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n\n  const showSidebar = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    showMonitoringOverview();\n    element.getGraph().getController().fireEvent(SELECTION_EVENT, [element.getId()]);\n  };\n\n  if (shouldHideMonitoringAlertDecorator(severityAlertType)) return null;\n\n  const label = t('topology~Monitoring alert');\n  return (\n    <Tooltip triggerRef={ref} key=\"monitoringAlert\" content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} onClick={showSidebar} ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <AlertSeverityIcon severityAlertType={severityAlertType} fontSize={radius} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default connect<null, DispatchProps, MonitoringAlertsDecoratorProps>(\n  null,\n  dispatchToProps,\n)(MonitoringAlertsDecorator);\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { useRoutesURL } from '../../../../../data-transforms/useRoutesURL';\nimport { getResource } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst UrlDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resourceObj = getResource(element);\n  const url = useRoutesURL(resourceObj);\n  if (!url) {\n    return null;\n  }\n  const label = t('topology~Open URL');\n  return (\n    <Tooltip triggerRef={ref} key=\"route\" content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={url} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <ExternalLinkAltIcon style={{ fontSize: radius }} title={label} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default UrlDecorator;\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","import * as _ from 'lodash';\nimport { Kebab, KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\n\nexport const nodeActions = (contextMenuResource: K8sResourceKind): KebabOption[] => {\n  if (!contextMenuResource) {\n    return null;\n  }\n  const resourceKind = modelFor(referenceFor(contextMenuResource));\n  const menuActions = [...Kebab.getExtensionsActionsForKind(resourceKind), ...Kebab.factory.common];\n\n  return _.map(menuActions, (a) => a(resourceKind, contextMenuResource));\n};\n","import * as React from 'react';\nimport { useCallbackRef } from '@patternfly/react-topology';\n\n//\n// Local version of the @patternfly/react-topology useHover\n// Updated to provide the capability to reset the hover state based on a dependency change\n//\n\nconst EMPTY: any[] = [];\n\nconst useHover = <T extends Element>(\n  delayIn: number = 200,\n  delayOut: number = 200,\n  dependencies: any[] = EMPTY,\n): [boolean, (node: T) => (() => void) | undefined] => {\n  const [hover, setHover] = React.useState<boolean>(false);\n  const mountRef = React.useRef(true);\n\n  // need to ensure we do not start the unset timer on unmount\n  React.useEffect(\n    () => () => {\n      mountRef.current = false;\n    },\n    [],\n  );\n\n  React.useEffect(() => {\n    setHover(false);\n    // dynamic dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  // The unset handle needs to be referred by listeners in different closures.\n  const unsetHandle = React.useRef<number>();\n\n  const callbackRef = useCallbackRef(\n    React.useCallback(\n      (node: T) => {\n        if (node) {\n          // store locally instead of a ref because it only needs to be referred by inner closures\n          let delayHandle: any;\n\n          const delayedStateChange = (newState: boolean, delay: number) => {\n            clearTimeout(unsetHandle.current);\n            clearTimeout(delayHandle);\n\n            if (delay != null) {\n              delayHandle = window.setTimeout(() => {\n                clearTimeout(unsetHandle.current);\n                setHover(newState);\n              }, delay);\n            } else {\n              setHover(newState);\n            }\n          };\n\n          const onMouseEnter = () => {\n            delayedStateChange(true, delayIn);\n          };\n\n          const onMouseLeave = () => {\n            delayedStateChange(false, delayOut);\n          };\n\n          node.addEventListener('mouseenter', onMouseEnter);\n          node.addEventListener('mouseleave', onMouseLeave);\n\n          return () => {\n            node.removeEventListener('mouseenter', onMouseEnter);\n            node.removeEventListener('mouseleave', onMouseLeave);\n            clearTimeout(delayHandle);\n            if (mountRef.current) {\n              // Queue the unset in case reattaching to a new node in the same location.\n              // This can happen with layers. Rendering a node to a new layer will unmount the old node\n              // and remount a new node at the same location. This will prevent flickering and getting\n              // stuck in a hover state.\n              unsetHandle.current = window.setTimeout(() => {\n                if (mountRef.current) {\n                  setHover(false);\n                }\n              }, Math.max(delayIn, delayOut));\n            }\n          };\n        }\n        return undefined;\n      },\n      [delayIn, delayOut],\n    ),\n  );\n\n  return [hover, callbackRef];\n};\n\nexport default useHover;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  hullPath,\n  DefaultCreateConnector,\n  Point,\n  Layer,\n  ContextMenu,\n  ContextMenuItem,\n  AnchorEnd,\n  Graph,\n  GraphElement,\n  isGraph,\n  isNode,\n  LabelPosition,\n  Node,\n  DragEvent,\n  DragObjectWithType,\n  DragOperationWithType,\n  DragSourceMonitor,\n  DragSourceSpec,\n  DragSpecOperationType,\n  useDndDrag,\n  TOP_LAYER,\n  useCombineRefs,\n  useHover,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { observer } from 'mobx-react';\n\n//\n// Local version of the @patternfly/react-topology withCreateConnector\n// Updated to notify the wrapped component when the create connector is being dragged\n//\n\nexport const CREATE_CONNECTOR_OPERATION = '#createconnector#';\nexport const CREATE_CONNECTOR_DROP_TYPE = '#createConnector#';\n\nexport interface ConnectorChoice {\n  label: string;\n}\n\nexport interface CreateConnectorOptions {\n  handleAngle?: number;\n  handleAngleTop?: number;\n  handleLength?: number;\n  dragItem?: DragObjectWithType;\n  dragOperation?: DragOperationWithType;\n  hideConnectorMenu?: boolean;\n}\n\ninterface ConnectorComponentProps {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging: boolean;\n  hover?: boolean;\n}\n\ntype CreateConnectorRenderer = React.ComponentType<ConnectorComponentProps>;\n\ntype OnCreateResult = ConnectorChoice[] | void | undefined | null | React.ReactElement[];\n\ntype CreateConnectorWidgetProps = {\n  element: Node;\n  onKeepAlive: (isAlive: boolean) => void;\n  onCreate: (\n    element: Node,\n    target: Node | Graph,\n    event: DragEvent,\n    dropHints?: string[] | undefined,\n    choice?: ConnectorChoice,\n  ) => Promise<OnCreateResult> | OnCreateResult;\n  ConnectorComponent: CreateConnectorRenderer;\n  contextMenuClass?: string;\n} & CreateConnectorOptions;\n\ninterface CollectProps {\n  event?: DragEvent;\n  dragging: boolean;\n  hints?: string[] | undefined;\n}\n\ninterface PromptData {\n  element: Node;\n  target: Node | Graph;\n  event: DragEvent;\n  choices: ConnectorChoice[] | React.ReactElement[];\n}\n\nconst isReactElementArray = (\n  choices: ConnectorChoice[] | React.ReactElement[],\n): choices is React.ReactElement[] => React.isValidElement(choices[0]);\n\nconst DEFAULT_HANDLE_ANGLE = Math.PI / 180;\nconst DEFAULT_HANDLE_ANGLE_TOP = 1.5 * Math.PI;\nconst DEFAULT_HANDLE_LENGTH = 32;\n\nconst CreateConnectorWidget: React.FunctionComponent<CreateConnectorWidgetProps> = observer(\n  (props) => {\n    const {\n      element,\n      onKeepAlive,\n      onCreate,\n      ConnectorComponent,\n      handleAngle = DEFAULT_HANDLE_ANGLE,\n      handleAngleTop = DEFAULT_HANDLE_ANGLE_TOP,\n      handleLength = DEFAULT_HANDLE_LENGTH,\n      contextMenuClass,\n      dragItem,\n      dragOperation,\n      hideConnectorMenu,\n    } = props;\n    const [prompt, setPrompt] = React.useState<PromptData | null>(null);\n    const [active, setActive] = React.useState(false);\n    const hintsRef = React.useRef<string[] | undefined>();\n\n    const spec = React.useMemo(() => {\n      const dragSourceSpec: DragSourceSpec<\n        DragObjectWithType,\n        DragSpecOperationType<DragOperationWithType>,\n        GraphElement,\n        CollectProps,\n        CreateConnectorWidgetProps\n      > = {\n        item: dragItem || { type: CREATE_CONNECTOR_DROP_TYPE },\n        operation: dragOperation || { type: CREATE_CONNECTOR_OPERATION },\n        begin: (monitor: DragSourceMonitor, dragProps: any) => {\n          setActive(true);\n          return dragProps.element;\n        },\n        drag: (event: DragEvent, monitor: DragSourceMonitor, p: CreateConnectorWidgetProps) => {\n          p.element.raise();\n        },\n        end: async (\n          dropResult: GraphElement,\n          monitor: DragSourceMonitor,\n          dragProps: CreateConnectorWidgetProps,\n        ) => {\n          const event = monitor.getDragEvent();\n          if ((isNode(dropResult) || isGraph(dropResult)) && event) {\n            const choices = await dragProps.onCreate(\n              dragProps.element,\n              dropResult,\n              event,\n              monitor.getDropHints(),\n            );\n            if (choices && choices.length && !hideConnectorMenu) {\n              setPrompt({ element: dragProps.element, target: dropResult, event, choices });\n              return;\n            }\n          }\n          setActive(false);\n          dragProps.onKeepAlive(false);\n        },\n        collect: (monitor) => ({\n          dragging: !!monitor.getItem(),\n          event: monitor.isDragging() ? monitor.getDragEvent() : undefined,\n          hints: monitor.getDropHints(),\n        }),\n      };\n      return dragSourceSpec;\n    }, [setActive, dragItem, dragOperation, hideConnectorMenu]);\n    const [{ dragging, event, hints }, dragRef] = useDndDrag(spec, props);\n    const [hover, hoverRef] = useHover();\n    const refs = useCombineRefs(dragRef, hoverRef);\n\n    if (!active && dragging && !event) {\n      // another connector is dragging right now\n      return null;\n    }\n\n    if (dragging) {\n      // store the latest hints\n      hintsRef.current = hints;\n    }\n\n    const dragEvent = prompt ? prompt.event : event;\n\n    let startPoint: Point;\n    let endPoint: Point;\n\n    if (dragEvent) {\n      endPoint = new Point(dragEvent.x, dragEvent.y);\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(endPoint);\n    } else {\n      const bounds = element.getBounds();\n      const isRightLabel = element.getLabelPosition() === LabelPosition.right;\n      const referencePoint = isRightLabel\n        ? new Point(bounds.x + bounds.width / 2, bounds.y)\n        : new Point(\n            bounds.right(),\n            Math.tan(handleAngle) * (bounds.width / 2) + bounds.y + bounds.height / 2,\n          );\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(referencePoint);\n      endPoint = new Point(\n        Math.cos(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.x,\n        Math.sin(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.y,\n      );\n    }\n\n    // bring into the coordinate space of the element\n    element.translateFromParent(startPoint);\n    element.translateFromParent(endPoint);\n\n    const connector = (\n      <g\n        className={css(styles.topologyDefaultCreateConnector)}\n        ref={refs}\n        onMouseEnter={!active ? () => onKeepAlive(true) : undefined}\n        onMouseLeave={!active ? () => onKeepAlive(false) : undefined}\n      >\n        <ConnectorComponent\n          startPoint={startPoint}\n          endPoint={endPoint}\n          dragging={dragging}\n          hints={hintsRef.current || []}\n          hover={hover}\n        />\n        <path\n          d={hullPath(\n            [\n              [startPoint.x, startPoint.y],\n              [endPoint.x, endPoint.y],\n            ],\n            7,\n          )}\n          fillOpacity=\"0\"\n        />\n      </g>\n    );\n\n    return (\n      <>\n        {active ? <Layer id={TOP_LAYER}>{connector}</Layer> : connector}\n        {prompt && (\n          <ContextMenu\n            reference={{ x: prompt.event.pageX, y: prompt.event.pageY }}\n            className={contextMenuClass}\n            open\n            onRequestClose={() => {\n              setActive(false);\n              onKeepAlive(false);\n            }}\n          >\n            {isReactElementArray(prompt.choices)\n              ? prompt.choices\n              : prompt.choices.map((c: ConnectorChoice) => (\n                  <ContextMenuItem\n                    key={c.label}\n                    onClick={() => {\n                      onCreate(prompt.element, prompt.target, prompt.event, hintsRef.current, c);\n                    }}\n                  >\n                    {c.label}\n                  </ContextMenuItem>\n                ))}\n          </ContextMenu>\n        )}\n      </>\n    );\n  },\n);\n\ninterface ElementProps {\n  element: Node;\n}\n\nexport interface WithCreateConnectorProps {\n  onShowCreateConnector: () => void;\n  onHideCreateConnector: () => void;\n  createConnectorDrag: boolean;\n}\n\nexport const withCreateConnector = <P extends WithCreateConnectorProps & ElementProps>(\n  onCreate: React.ComponentProps<typeof CreateConnectorWidget>['onCreate'],\n  ConnectorComponent: CreateConnectorRenderer = DefaultCreateConnector,\n  contextMenuClass?: string,\n  options?: CreateConnectorOptions,\n) => (WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FunctionComponent<Omit<P, keyof WithCreateConnectorProps>> = ({\n    children,\n    ...props\n  }) => {\n    const [show, setShow] = React.useState(false);\n    const [alive, setKeepAlive] = React.useState(false);\n    const onShowCreateConnector = React.useCallback(() => setShow(true), []);\n    const onHideCreateConnector = React.useCallback(() => setShow(false), []);\n    const onKeepAlive = React.useCallback(\n      (isAlive: boolean) => {\n        setKeepAlive((prev) => {\n          if (prev && !isAlive) {\n            onHideCreateConnector();\n          }\n          return isAlive;\n        });\n      },\n      [onHideCreateConnector],\n    );\n    return (\n      <WrappedComponent\n        {...(props as any)}\n        onShowCreateConnector={onShowCreateConnector}\n        onHideCreateConnector={onHideCreateConnector}\n        createConnectorDrag={alive}\n      >\n        {children}\n        {(show || alive) && (\n          <CreateConnectorWidget\n            {...options}\n            element={props.element}\n            onCreate={onCreate}\n            onKeepAlive={onKeepAlive}\n            ConnectorComponent={ConnectorComponent}\n            contextMenuClass={contextMenuClass}\n          />\n        )}\n      </WrappedComponent>\n    );\n  };\n  Component.displayName = `withCreateConnector(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import {\n  ModelKind,\n  withPanZoom,\n  withDragNode,\n  withTargetDrag,\n  withSelection,\n  withDndDrop,\n  DragObjectWithType,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport { contextMenuActions, graphActionContext, groupActionContext } from '../../../actions';\nimport { withCreateConnector } from '../../../behavior/withCreateConnector';\nimport {\n  TYPE_WORKLOAD,\n  TYPE_CONNECTS_TO,\n  TYPE_APPLICATION_GROUP,\n  TYPE_AGGREGATE_EDGE,\n  TYPE_TRAFFIC_CONNECTOR,\n} from '../../../const';\nimport { createConnection } from '../../../utils/createConnection';\nimport { withEditReviewAccess } from '../../../utils/withEditReviewAccess';\nimport {\n  NodeComponentProps,\n  graphDropTargetSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  MOVE_CONNECTOR_DROP_TYPE,\n  withContextMenu,\n  createConnectorCallback,\n} from './componentUtils';\nimport { AggregateEdge, ConnectsTo, CreateConnector, TrafficConnector } from './edges';\nimport GraphComponent from './GraphComponent';\nimport { Application } from './groups';\nimport { WorkloadNode } from './nodes';\n\nimport './ContextMenu.scss';\n\nexport const componentFactory: ComponentFactory = (kind, type) => {\n  switch (type) {\n    case TYPE_APPLICATION_GROUP:\n      return withDndDrop(applicationGroupDropTargetSpec)(\n        withDragNode(nodeDragSourceSpec(type, false, false))(\n          withSelection({ controlled: true })(withContextMenu(groupActionContext)(Application)),\n        ),\n      );\n    case TYPE_WORKLOAD:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withDndDrop<\n          any,\n          any,\n          { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n          NodeComponentProps\n        >(nodeDropTargetSpec)(\n          withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type))(\n              withSelection({ controlled: true })(\n                withContextMenu(contextMenuActions)(WorkloadNode),\n              ),\n            ),\n          ),\n        ),\n      );\n    case TYPE_CONNECTS_TO:\n      return withTargetDrag<DragObjectWithType>(\n        edgeDragSourceSpec(MOVE_CONNECTOR_DROP_TYPE, createConnection),\n      )(withContextMenu(contextMenuActions)(ConnectsTo));\n    case TYPE_AGGREGATE_EDGE:\n      return AggregateEdge;\n    case TYPE_TRAFFIC_CONNECTOR:\n      return TrafficConnector;\n    default:\n      switch (kind) {\n        case ModelKind.graph:\n          return withDndDrop(graphDropTargetSpec)(\n            withPanZoom()(\n              withSelection({ controlled: true })(\n                withContextMenu(graphActionContext)(GraphComponent),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n  }\n};\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType, observer } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './AggregateEdge.scss';\n\ntype AggregateEdgeProps = {\n  element: Edge;\n};\n\nconst AggregateEdge: React.FC<AggregateEdgeProps> = ({ element, ...others }) => {\n  const { bidirectional } = element.getData();\n\n  const endTerminalType =\n    !bidirectional && (!element.getSource().isCollapsed() || !element.getTarget().isCollapsed())\n      ? EdgeTerminalType.directional\n      : EdgeTerminalType.none;\n\n  return (\n    <BaseEdge\n      data-test-id=\"edge-handler\"\n      element={element}\n      className=\"odc-base-edge odc-aggregate-edge\"\n      endTerminalType={endTerminalType}\n      {...others}\n    />\n  );\n};\n\nexport default observer(AggregateEdge);\n","import * as React from 'react';\nimport {\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n  Edge,\n  observer,\n  EdgeTerminalType,\n} from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './ConnectsTo.scss';\n\ntype ConnectsToProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\nconst ConnectsTo: React.FC<ConnectsToProps> = (props) => (\n  <BaseEdge\n    className=\"odc-connects-to\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default observer(ConnectsTo);\n","import * as React from 'react';\nimport { DefaultCreateConnector, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\ntype CreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging?: boolean;\n  hover?: boolean;\n};\n\nconst CreateConnector: React.FC<CreateConnectorProps> = ({\n  startPoint,\n  endPoint,\n  dragging,\n  hover,\n  hints,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DefaultCreateConnector\n      startPoint={startPoint}\n      endPoint={endPoint}\n      dragging={dragging}\n      hints={hints}\n      hover={hover}\n      tipContents={hover && dragging ? t('topology~Add resources') : null}\n    />\n  );\n};\n\nexport default CreateConnector;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  Edge,\n  EdgeTerminalType,\n  NodeStatus,\n  StatusModifier,\n  observer,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { ComputedServiceBindingStatus } from '@console/service-binding-plugin/src/types';\nimport { getComputedServiceBindingStatus } from '@console/service-binding-plugin/src/utils';\nimport BaseEdge from './BaseEdge';\n\nimport './ServiceBinding.scss';\n\nconst ERROR_CROSS_SIZE = 8;\nconst ERROR_CROSS_STROKE_WIDTH = 2;\n\ntype ServiceBindingProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\n\nconst ServiceBinding: React.FC<ServiceBindingProps> = (props) => {\n  const { sbr } = props.element.getData();\n\n  const hasError = getComputedServiceBindingStatus(sbr) === ComputedServiceBindingStatus.ERROR;\n\n  let errorCross: JSX.Element;\n  if (hasError) {\n    const startPoint = props.element.getStartPoint();\n    const endPoint = props.element.getEndPoint();\n    const centerX = (startPoint.x + endPoint.x) / 2;\n    const centerY = (startPoint.y + endPoint.y) / 2;\n    const angleDeg =\n      Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) * (180 / Math.PI);\n\n    const classNames = css(\n      // required to make it red\n      styles.topologyEdge,\n      StatusModifier[NodeStatus.danger],\n      // required to make it blue when the edge is selected\n      styles.topologyConnectorArrow,\n    );\n\n    errorCross = (\n      <g transform={`translate(${centerX}, ${centerY}) rotate(${angleDeg})`} className={classNames}>\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={-ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={-ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n      </g>\n    );\n  }\n\n  return (\n    <BaseEdge\n      className=\"odc-service-binding\"\n      endTerminalStatus={hasError ? NodeStatus.danger : undefined}\n      endTerminalType={EdgeTerminalType.directional}\n      {...props}\n    >\n      {errorCross}\n    </BaseEdge>\n  );\n};\n\nexport default observer(ServiceBinding);\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\nimport './TrafficConnector.scss';\n\ntype TrafficConnectorProps = {\n  element: Edge;\n};\n\nconst TrafficConnector: React.FC<TrafficConnectorProps> = (props) => (\n  <BaseEdge\n    className=\"odc-traffic-connector\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default TrafficConnector;\n","import { useContext } from 'react';\nimport { FilterContext } from './FilterProvider';\n\nconst useAppliedDisplayFilters = (): { [filterKey: string]: boolean } => {\n  return useContext(FilterContext).appliedFilters;\n};\n\nexport { useAppliedDisplayFilters };\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { toLower } from 'lodash';\nimport { useQueryParams } from '@console/shared/src';\n\nconst EMPTY_QUERY_PARAMS = [];\n\nconst fuzzyCaseInsensitive = (a: string, b: string): boolean => fuzzy(toLower(a), toLower(b));\n\nconst useSearchFilter = (\n  name: string,\n  labels: { [key: string]: string } = {},\n): [boolean, string] => {\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get('searchQuery');\n  const labelsQuery = queryParams.get('labels')?.split(',') ?? EMPTY_QUERY_PARAMS;\n\n  const labelsMatched = React.useMemo(() => {\n    const labelsString = Object.entries(labels).map((label) => label.join('='));\n    return labelsQuery.every((label) => labelsString.includes(label));\n  }, [labels, labelsQuery]);\n\n  const filtered = React.useMemo(() => fuzzyCaseInsensitive(searchQuery, name), [\n    searchQuery,\n    name,\n  ]);\n\n  return [(filtered && !!searchQuery) || (labelsMatched && labelsQuery.length > 0), searchQuery];\n};\n\nexport { useSearchFilter };\n","import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  WithContextMenuProps,\n  useHover,\n  useCombineRefs,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { ApplicationModel } from '../../../../models';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../../../topology-types';\nimport { getKindStringAndAbbreviation } from '../nodes/nodeUtils';\nimport RegroupHint from '../RegroupHint';\nimport ApplicationGroupExpanded from './ApplicationGroupExpanded';\nimport GroupNode from './GroupNode';\n\nimport './Application.scss';\n\ntype ApplicationProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithDragNodeProps &\n  WithContextMenuProps;\n\nconst Application: React.FC<ApplicationProps> = ({\n  element,\n  dragNodeRef,\n  canDrop,\n  dropTarget,\n  dragRegroupable,\n  ...others\n}) => {\n  const [hover, hoverRef] = useHover();\n  const refs = useCombineRefs(dragNodeRef, hoverRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const needsHintRef = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    const needsHint = dropTarget && !canDrop && dragRegroupable;\n    if (needsHint !== needsHintRef.current) {\n      needsHintRef.current = needsHint;\n      element\n        .getController()\n        .fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? <RegroupHint /> : null);\n    }\n  }, [dropTarget, canDrop, element, dragRegroupable]);\n  const showLabel = useShowLabel(hover);\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(ApplicationModel.kind);\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  const groupClasses = classNames('odc-application-group', {\n    'is-filtered': filtered,\n  });\n\n  if (element.isCollapsed()) {\n    return (\n      <GroupNode\n        bgClassName=\"odc-application-group__bg\"\n        element={element}\n        canDrop={canDrop}\n        dropTarget={dropTarget}\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n        dragNodeRef={refs}\n        {...others}\n      />\n    );\n  }\n\n  // Use local version of DefaultGroupExpanded until we have a fix for https://github.com/patternfly/patternfly-react/issues/7300\n  return (\n    <ApplicationGroupExpanded\n      className={groupClasses}\n      showLabel={showLabel}\n      element={element}\n      canDrop={canDrop}\n      dropTarget={dropTarget}\n      dragNodeRef={refs}\n      badge={kindAbbr}\n      badgeColor={kindColor}\n      badgeClassName={badgeClassName}\n      {...others}\n    />\n  );\n};\n\nexport default observer(Application);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  useHover,\n  useVisualizationController,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { AlertSeverity } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  AllPodStatus,\n  calculateRadius,\n  getFiringAlerts,\n  getPodStatus,\n  getSeverityAlertType,\n  PodRCData,\n  useBuildConfigsWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { getFilterById, SHOW_POD_COUNT_FILTER_ID, useDisplayFilters } from '../../../../filters';\nimport { getResource, getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { useResourceQuotaAlert } from '../../../workload';\nimport BaseNode from './BaseNode';\nimport { getNodeDecorators } from './decorators/getNodeDecorators';\nimport PodSet, { podSetInnerRadius } from './PodSet';\n\nimport './WorkloadNode.scss';\n\nconst POD_STATUS_NORMAL = 1;\nconst POD_STATUS_WARNING = 2;\nconst POD_STATUS_DANGER = 3;\n\nconst StatusSeverities = {\n  danger: [\n    'ContainerCannotRun',\n    'CrashLoopBackOff',\n    'Critical',\n    'ErrImagePull',\n    'Error',\n    'Failed',\n    'Failure',\n    'ImagePullBackOff',\n    'InstallCheckFailed',\n    'Lost',\n    'Rejected',\n    'UpgradeFailed',\n  ],\n  warning: [\n    'Cancelled',\n    'Deleting',\n    'Expired',\n    'Not Ready',\n    'Terminating',\n    'Warning',\n    'RequiresApproval',\n  ],\n  normal: [\n    'New',\n    'Pending',\n    'Planning',\n    'ContainerCreating',\n    'UpgradePending',\n    'In Progress',\n    'Installing',\n    'InstallReady',\n    'Replacing',\n    'Running',\n    'Updating',\n    'Upgrading',\n    'Accepted',\n    'Active',\n    'Bound',\n    'Complete',\n    'Completed',\n    'Created',\n    'Enabled',\n    'Succeeded',\n    'Ready',\n    'Up to date',\n    'Provisioned as node',\n    'Preferred',\n    'Connected',\n    'Info',\n    'Unknown',\n    'PipelineNotStarted',\n  ],\n};\n\nexport const getNodePodStatus = (podStatus: AllPodStatus): number => {\n  switch (podStatus) {\n    case AllPodStatus.Failed:\n    case AllPodStatus.CrashLoopBackOff:\n      return POD_STATUS_DANGER;\n    case AllPodStatus.Warning:\n      return POD_STATUS_WARNING;\n    default:\n      return POD_STATUS_NORMAL;\n  }\n};\n\nexport const getAggregateStatus = (\n  donutStatus: PodRCData,\n  alertSeverity: AlertSeverity,\n  buildStatus: string,\n  pipelineStatus: string,\n  workloadRqAlertVariant: NodeStatus,\n): NodeStatus => {\n  const worstPodStatus =\n    donutStatus?.pods?.reduce((acc, pod) => {\n      return Math.max(acc, getNodePodStatus(getPodStatus(pod)));\n    }, POD_STATUS_NORMAL) ?? NodeStatus.default;\n\n  if (\n    worstPodStatus === POD_STATUS_DANGER ||\n    alertSeverity === AlertSeverity.Critical ||\n    StatusSeverities.danger.includes(buildStatus) ||\n    StatusSeverities.danger.includes(pipelineStatus)\n  ) {\n    return NodeStatus.danger;\n  }\n  if (\n    worstPodStatus === POD_STATUS_WARNING ||\n    alertSeverity === AlertSeverity.Warning ||\n    StatusSeverities.warning.includes(buildStatus) ||\n    StatusSeverities.warning.includes(pipelineStatus) ||\n    workloadRqAlertVariant === NodeStatus.warning\n  ) {\n    return NodeStatus.warning;\n  }\n  return NodeStatus.default;\n};\n\ntype WorkloadNodeProps = {\n  element: Node;\n  dragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n  dropTooltip?: React.ReactNode;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\ntype WorkloadPodsNodeProps = WorkloadNodeProps & {\n  donutStatus: PodRCData;\n};\n\nconst WorkloadPodsNode: React.FC<WorkloadPodsNodeProps> = observer(function WorkloadPodsNode({\n  donutStatus,\n  element,\n  children,\n  urlAnchorRef,\n  canDrop,\n  dropTarget,\n  dropTooltip,\n  contextMenuOpen,\n  ...rest\n}) {\n  const { t } = useTranslation();\n  const { width, height } = element.getDimensions();\n  const workloadData = element.getData().data;\n  const filters = useDisplayFilters();\n  const [hover, hoverRef] = useHover();\n  const size = Math.min(width, height);\n  const { radius, decoratorRadius } = calculateRadius(size);\n  const cx = width / 2;\n  const cy = height / 2;\n  const tipContent = dropTooltip || t('topology~Create a visual connector');\n  const showPodCountFilter = getFilterById(SHOW_POD_COUNT_FILTER_ID, filters);\n  const showPodCount = showPodCountFilter?.value ?? false;\n  const { decorators } = element.getGraph().getData();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const iconImageUrl = getImageForIconClass(workloadData.builderImage) ?? workloadData.builderImage;\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const nodeDecorators = showDetails\n    ? getNodeDecorators(element, decorators, cx, cy, radius, decoratorRadius)\n    : null;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const buildStatus = buildConfigs?.[0]?.builds?.[0]?.status?.phase;\n  const pipelineStatus = element.getData()?.resources?.pipelineRunStatus ?? 'Unknown';\n  const workloadRqAlert = useResourceQuotaAlert(element);\n  const workloadRqAlertVariant = (workloadRqAlert?.variant as NodeStatus) || NodeStatus.default;\n\n  return (\n    <g className=\"odc-workload-node\">\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        animationDuration={0}\n      >\n        <BaseNode\n          className=\"odc-workload-node\"\n          hoverRef={hoverRef}\n          innerRadius={podSetInnerRadius(size, donutStatus)}\n          icon={showDetails && !showPodCount ? iconImageUrl : undefined}\n          kind={workloadData.kind}\n          element={element}\n          dropTarget={dropTarget}\n          canDrop={canDrop}\n          nodeStatus={\n            !showDetails &&\n            getAggregateStatus(\n              donutStatus,\n              severityAlertType,\n              buildStatus,\n              pipelineStatus,\n              workloadRqAlertVariant,\n            )\n          }\n          attachments={nodeDecorators}\n          contextMenuOpen={contextMenuOpen}\n          alertVariant={workloadRqAlertVariant}\n          {...rest}\n        >\n          {donutStatus && showDetails ? (\n            <PodSet size={size} x={cx} y={cy} data={donutStatus} showPodCount={showPodCount} />\n          ) : null}\n          {children}\n        </BaseNode>\n      </Tooltip>\n    </g>\n  );\n});\n\nconst WorkloadNode: React.FC<WorkloadNodeProps> = observer(function WorkloadNode({\n  element,\n  ...rest\n}) {\n  const resource = getTopologyResourceObject(element.getData());\n  const { podData, loadError, loaded } = usePodsWatcher(\n    resource,\n    resource.kind,\n    resource.metadata.namespace,\n  );\n  return (\n    <WorkloadPodsNode\n      element={element}\n      donutStatus={loaded && !loadError ? podData : null}\n      {...rest}\n    />\n  );\n});\n\nexport { WorkloadNode, WorkloadPodsNode };\n","export { default as Decorator } from './Decorator';\nexport { default as BuildDecorator } from './BuildDecorator';\nexport { default as BuildDecoratorBubble } from './BuildDecoratorBubble';\nexport { default as EditDecorator } from './EditDecorator';\nexport { default as MonitoringAlertsDecorator } from './MonitoringAlertsDecorator';\nexport { default as UrlDecorator } from './UrlDecorator';\n","import * as React from 'react';\nimport SvgDropShadowFilter from '../../svg/SvgDropShadowFilter';\n\nexport const NODE_SHADOW_FILTER_ID = 'NodeShadowsFilterId';\nexport const NODE_SHADOW_FILTER_ID_HOVER = 'NodeShadowsFilterId--hover';\n\nconst NodeShadows: React.FC = () => (\n  <>\n    <SvgDropShadowFilter id={NODE_SHADOW_FILTER_ID} />\n    <SvgDropShadowFilter\n      id={NODE_SHADOW_FILTER_ID_HOVER}\n      dy={3}\n      stdDeviation={7}\n      floodOpacity={0.24}\n    />\n  </>\n);\n\nexport { NodeShadows };\n","import * as React from 'react';\nimport {\n  Visualization,\n  VisualizationSurface,\n  GraphElement,\n  isNode,\n  BaseEdge,\n  VisualizationProvider,\n  Model,\n  GraphModel,\n  NodeModel,\n  BOTTOM_LAYER,\n  GROUPS_LAYER,\n  DEFAULT_LAYER,\n  TOP_LAYER,\n  SelectionEventListener,\n  SELECTION_EVENT,\n  NODE_POSITIONED_EVENT,\n  GRAPH_POSITION_CHANGE_EVENT,\n  Node,\n  Rect,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { action } from 'mobx';\nimport { connect } from 'react-redux';\nimport {\n  useResolvedExtensions,\n  isTopologyComponentFactory as isDynamicTopologyComponentFactory,\n  TopologyComponentFactory as DynamicTopologyComponentFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { RootState } from '@console/internal/redux';\nimport {\n  useQueryParams,\n  withUserSettingsCompatibility,\n  WithUserSettingsCompatibilityProps,\n} from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY, TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { isTopologyComponentFactory, TopologyComponentFactory } from '../../extensions/topology';\nimport { getTopologyGraphModel, setTopologyGraphModel } from '../../redux/action';\nimport { SHOW_GROUPING_HINT_EVENT, ShowGroupingHintEventListener } from '../../topology-types';\nimport { componentFactory } from './components';\nimport { DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory } from './layouts/layoutFactory';\nimport TopologyControlBar from './TopologyControlBar';\n\nimport './Topology.scss';\n\nconst STORED_NODE_LAYOUT_FIELDS = ['id', 'x', 'y'];\n\nconst setTopologyLayout = (namespace: string, nodes: NodeModel[], layout: string) => {\n  const currentStore = {};\n  currentStore[namespace] = {\n    nodes: nodes?.map((n) =>\n      Object.keys(n).reduce((acc, key) => {\n        if (STORED_NODE_LAYOUT_FIELDS.includes(key)) {\n          acc[key] = n[key];\n        }\n        return acc;\n      }, {} as NodeModel),\n    ),\n    layout,\n  };\n  return currentStore;\n};\n\nconst nodeDistanceToBounds = (node: Node, bounds: Rect): number => {\n  const nodeBounds = node.getBounds();\n  const nodeX = nodeBounds.x + nodeBounds.width / 2;\n  const nodeY = nodeBounds.y + nodeBounds.height / 2;\n\n  const dx = Math.max(bounds.x - nodeX, 0, nodeX - (bounds.x + bounds.width));\n  const dy = Math.max(bounds.y - nodeY, 0, nodeY - (bounds.y + bounds.height));\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  controlsDisabled?: boolean;\n  selectedId?: string;\n  dragHint?: string;\n}\n\nconst TopologyGraphView: React.FC<TopologyGraphViewProps> = React.memo(\n  ({ visualizationReady, visualization, controlsDisabled, selectedId, dragHint }) => {\n    if (!visualizationReady) {\n      return null;\n    }\n    return (\n      <div className=\"odc-topology-graph-view\">\n        <VisualizationProvider controller={visualization}>\n          <VisualizationSurface state={{ selectedIds: [selectedId] }} />\n          {dragHint && (\n            <div className=\"odc-topology__hint-container\">\n              <div className=\"odc-topology__hint-background\">{dragHint}</div>\n            </div>\n          )}\n          <TopologyControlBar visualization={visualization} isDisabled={controlsDisabled} />\n        </VisualizationProvider>\n      </div>\n    );\n  },\n);\n\nconst TOPOLOGY_GRAPH_ID = 'odc-topology-graph';\nconst graphModel: Model = {\n  graph: {\n    id: TOPOLOGY_GRAPH_ID,\n    type: 'graph',\n    layout: DEFAULT_LAYOUT,\n    layers: [BOTTOM_LAYER, GROUPS_LAYER, 'groups2', DEFAULT_LAYER, TOP_LAYER],\n  },\n};\n\ninterface StateProps {\n  getStoredGraphModel: (namespace: string) => GraphModel;\n}\n\ninterface DispatchProps {\n  onGraphModelChange: (namespace: string, model: GraphModel) => void;\n}\n\ninterface TopologyProps {\n  model: Model;\n  application: string;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst Topology: React.FC<\n  TopologyProps & StateProps & DispatchProps & WithUserSettingsCompatibilityProps<object>\n> = ({\n  model,\n  application,\n  namespace,\n  onSelect,\n  setVisualization,\n  onGraphModelChange,\n  getStoredGraphModel,\n  userSettingState: topologyLayoutDataJson,\n  setUserSettingState: setTopologyLayoutData,\n}) => {\n  const applicationRef = React.useRef<string>(null);\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n  const [dragHint, setDragHint] = React.useState<string>('');\n  const storedLayoutApplied = React.useRef<boolean>(false);\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [componentFactoryExtensions, isStaticResolved] = useResolvedExtensions<\n    TopologyComponentFactory\n  >(isTopologyComponentFactory);\n  const [dynamicComponentFactoryExtensions, isDynamicResolved] = useResolvedExtensions<\n    DynamicTopologyComponentFactory\n  >(isDynamicTopologyComponentFactory);\n\n  const createVisualization = React.useCallback(() => {\n    const storedLayout = topologyLayoutDataJson?.[namespace];\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.registerLayoutFactory(layoutFactory);\n\n    const onCurrentGraphModelChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const saveGraphModel = {\n        id: visModel.graph.id,\n        type: visModel.graph.type,\n        x: visModel.graph.x,\n        y: visModel.graph.y,\n        scale: visModel.graph.scale,\n        scaleExtent: visModel.graph.scaleExtent,\n      };\n      onGraphModelChange(namespace, saveGraphModel);\n    }, 200);\n\n    const onVisualizationLayoutChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const updatedLayoutData = setTopologyLayout(namespace, visModel.nodes, visModel.graph.layout);\n      setTopologyLayoutData((prevState) => {\n        return { ...prevState, ...updatedLayoutData };\n      });\n    }, 200);\n\n    newVisualization.addEventListener(NODE_POSITIONED_EVENT, onVisualizationLayoutChange);\n    newVisualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, onCurrentGraphModelChange);\n\n    if (storedLayout) {\n      // Cleanup removed layouts, otherwise the `newVisualization.fromModel` call\n      // will crash in @patternfly/react-topology Visualization `getLayout(type: string)`\n      if (!SUPPORTED_LAYOUTS.includes(storedLayout.layout)) {\n        graphModel.graph.layout = DEFAULT_LAYOUT;\n        setTopologyLayoutData((prevState) => {\n          return { ...prevState, layout: DEFAULT_LAYOUT };\n        });\n      } else {\n        graphModel.graph.layout = storedLayout.layout;\n      }\n    }\n    newVisualization.fromModel(graphModel);\n    newVisualization.addEventListener<SelectionEventListener>(SELECTION_EVENT, (ids: string[]) => {\n      const selectedEntity = ids[0] ? newVisualization.getElementById(ids[0]) : null;\n      onSelect(selectedEntity);\n    });\n    return newVisualization;\n  }, [namespace, onGraphModelChange, onSelect, setTopologyLayoutData, topologyLayoutDataJson]);\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n  const visualization = visualizationRef.current;\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model && visualizationReady) {\n      if (!storedLayoutApplied.current) {\n        const storedGraphModel = getStoredGraphModel(namespace);\n        if (storedGraphModel) {\n          model.graph = {\n            ...graphModel.graph,\n            x: storedGraphModel.x,\n            y: storedGraphModel.y,\n            scale: storedGraphModel.scale,\n            scaleExtent: storedGraphModel.scaleExtent,\n            data: visualization.getGraph()?.getData(),\n          };\n        }\n        const storedLayout = topologyLayoutDataJson?.[namespace];\n        if (storedLayout) {\n          model.nodes.forEach((n) => {\n            const storedNode = storedLayout.nodes.find((sn) => sn.id === n.id);\n            if (storedNode) {\n              STORED_NODE_LAYOUT_FIELDS.forEach((key) => {\n                n[key] = storedNode[key];\n              });\n            }\n          });\n        }\n      }\n\n      model.nodes.forEach((n) => {\n        const oldNode = visualization.getNodeById(n.id);\n        if (oldNode && _.isEqual(oldNode.getData(), n.data)) {\n          n.data = oldNode.getData();\n        }\n      });\n      model.edges.forEach((e) => {\n        const oldEdge = visualization.getEdgeById(e.id);\n        if (oldEdge && _.isEqual(oldEdge.getData(), e.data)) {\n          e.data = oldEdge.getData();\n        }\n      });\n\n      visualization.fromModel(model);\n\n      // Make sure something is visible in the case where stored locations are off the screen\n      if (!storedLayoutApplied.current) {\n        storedLayoutApplied.current = true;\n        if (topologyLayoutDataJson?.[namespace]) {\n          const graph = visualization.getGraph();\n          const nodes = visualization.getElements().filter(isNode);\n          if (nodes.length) {\n            const nodesVisible = nodes.find((n) => graph.isNodeInView(n, { padding: 0 }));\n            if (!nodesVisible) {\n              const graphBounds = graph.getBounds();\n              const [viewNode] = nodes.reduce(\n                ([closestNode, closestDistance], nextNode) => {\n                  const distance = nodeDistanceToBounds(nextNode, graphBounds);\n                  if (!closestNode || distance < closestDistance) {\n                    return [nextNode, distance];\n                  }\n                  return [closestNode, closestDistance];\n                },\n                [null, 0],\n              );\n              graph.panIntoView(viewNode);\n            }\n          }\n        }\n      }\n\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    // Do not update on selectedId change or stored layout change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, visualization, visualizationReady]);\n\n  React.useEffect(() => {\n    if (!isStaticResolved || !isDynamicResolved) {\n      return;\n    }\n\n    visualization.registerComponentFactory(componentFactory);\n    [...componentFactoryExtensions, ...dynamicComponentFactoryExtensions].forEach((factory) => {\n      visualization.registerComponentFactory(factory.properties.getFactory);\n    });\n\n    visualization.addEventListener<ShowGroupingHintEventListener>(\n      SHOW_GROUPING_HINT_EVENT,\n      (element, hint) => {\n        setDragHint(hint);\n      },\n    );\n    setVisualizationReady(true);\n  }, [\n    visualization,\n    isStaticResolved,\n    isDynamicResolved,\n    componentFactoryExtensions,\n    dynamicComponentFactoryExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (!applicationRef.current) {\n      applicationRef.current = application;\n      return;\n    }\n    if (application !== applicationRef.current) {\n      applicationRef.current = application;\n      if (visualization) {\n        visualization.getGraph().reset();\n        visualization.getGraph().layout();\n      }\n    }\n  }, [application, visualization]);\n\n  React.useEffect(() => {\n    let resizeTimeout = null;\n    if (visualization) {\n      if (selectedId) {\n        const selectedEntity = visualization.getElementById(selectedId);\n        if (selectedEntity) {\n          const visibleEntity = isNode(selectedEntity)\n            ? selectedEntity\n            : (selectedEntity as BaseEdge).getSource();\n          resizeTimeout = setTimeout(\n            action(() => {\n              visualization\n                .getGraph()\n                .panIntoView(visibleEntity, { offset: 20, minimumVisible: 100 });\n              resizeTimeout = null;\n            }),\n            500,\n          );\n        }\n      }\n    }\n    return () => {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n      }\n    };\n  }, [selectedId, visualization]);\n\n  return (\n    <TopologyGraphView\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      controlsDisabled={!model?.nodes.length}\n      dragHint={dragHint}\n      selectedId={selectedId}\n    />\n  );\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    getStoredGraphModel: (namespace: string) => getTopologyGraphModel(state, namespace),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onGraphModelChange: (namespace: string, model: GraphModel) => {\n    dispatch(setTopologyGraphModel(namespace, model));\n  },\n});\n\nexport default withFallback(\n  connect<StateProps, DispatchProps, TopologyProps>(\n    TopologyStateToProps,\n    TopologyDispatchToProps,\n  )(\n    withUserSettingsCompatibility<\n      TopologyProps & WithUserSettingsCompatibilityProps<object>,\n      object\n    >(\n      TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY,\n      TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY,\n      {},\n    )(React.memo(Topology)),\n  ),\n  ErrorBoundaryFallbackPage,\n);\n","import { ElementFactory, GraphElement, ModelKind, BaseGraph } from '@patternfly/react-topology';\nimport OdcBaseEdge from './OdcBaseEdge';\nimport OdcBaseNode from './OdcBaseNode';\n\nconst odcElementFactory: ElementFactory = (kind: ModelKind): GraphElement | undefined => {\n  switch (kind) {\n    case ModelKind.graph:\n      return new BaseGraph();\n    case ModelKind.node:\n      return new OdcBaseNode();\n    case ModelKind.edge:\n      return new OdcBaseEdge();\n    default:\n      return undefined;\n  }\n};\n\nexport default odcElementFactory;\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { TFunction } from 'i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport CheIcon from './CheIcon';\nimport GiteaIcon from './GiteaIcon';\nimport { detectGitType } from './import-validation-utils';\n\nexport const routeDecoratorIcon = (\n  routeURL: string,\n  radius: number,\n  t: TFunction,\n  cheEnabled?: boolean,\n  cheIconURL?: string,\n): React.ReactElement => {\n  if (cheEnabled && routeURL) {\n    return cheIconURL ? (\n      <image xlinkHref={cheIconURL} width={radius} height={radius} />\n    ) : (\n      <CheIcon style={{ fontSize: radius }} />\n    );\n  }\n  switch (detectGitType(routeURL)) {\n    case GitProvider.INVALID:\n      // Not a valid url and thus not safe to use\n      return null;\n    case GitProvider.GITHUB:\n      return <GithubIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.BITBUCKET:\n      return (\n        <BitbucketIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />\n      );\n    case GitProvider.GITLAB:\n      return <GitlabIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.GITEA:\n      return <GiteaIcon style={{ fontSize: radius }} topology />;\n    default:\n      return <GitAltIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n  }\n};\n","import * as React from 'react';\n\nconst CheIcon: React.FC<React.HTMLProps<SVGElement>> = ({ style }): React.ReactElement => {\n  return (\n    <svg height=\"1em\" width=\"1em\" version=\"1.1\" viewBox=\"0 0 47 57\" style={style}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\">\n        <path\n          d=\"M0.032227,30.88l-0.032227-17.087,23.853-13.793,23.796,13.784-14.691,8.51-9.062-5.109-23.864,13.695z\"\n          fill=\"#fdb940\"\n        />\n        <path\n          d=\"M0,43.355l23.876,13.622,23.974-13.937v-16.902l-23.974,13.506-23.876-13.506v17.217z\"\n          fill=\"#525c86\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default CheIcon;\n","import * as fuzzy from 'fuzzysearch';\nimport { TFunction } from 'i18next';\nimport { loadAll, safeDump, DEFAULT_SAFE_SCHEMA } from 'js-yaml';\nimport * as _ from 'lodash';\nimport { coFetchJSON } from '@console/internal/co-fetch';\nimport { Flatten } from '@console/internal/components/factory/list-page';\nimport { RowFilter } from '@console/internal/components/filter-toolbar';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { toTitleCase, WORKLOAD_TYPES } from '@console/shared';\nimport { CHART_NAME_ANNOTATION, PROVIDER_NAME_ANNOTATION } from '../catalog/utils/const';\nimport {\n  HelmRelease,\n  HelmChart,\n  HelmReleaseStatus,\n  HelmChartMetaData,\n  HelmActionType,\n  HelmActionConfigType,\n  HelmActionOrigins,\n  HelmChartEntries,\n} from '../types/helm-types';\n\nexport const HelmReleaseStatusLabels = {\n  [HelmReleaseStatus.Deployed]: 'Deployed',\n  [HelmReleaseStatus.Failed]: 'Failed',\n  [HelmReleaseStatus.PendingInstall]: 'PendingInstall',\n  [HelmReleaseStatus.PendingUpgrade]: 'PendingUpgrade',\n  [HelmReleaseStatus.PendingRollback]: 'PendingRollback',\n  [HelmReleaseStatus.Other]: 'Other',\n};\n\nexport const SelectedReleaseStatuses = [\n  HelmReleaseStatus.Deployed,\n  HelmReleaseStatus.Failed,\n  HelmReleaseStatus.PendingInstall,\n  HelmReleaseStatus.PendingUpgrade,\n  HelmReleaseStatus.PendingRollback,\n  HelmReleaseStatus.Other,\n];\n\nexport const OtherReleaseStatuses = ['unknown', 'uninstalled', 'superseded', 'uninstalling'];\n\nexport const releaseStatus = (status: string) => {\n  if (!status) {\n    return 'Unknown';\n  }\n  return status\n    .split('-')\n    .map((s) => toTitleCase(s))\n    .join('');\n};\n\nexport const releaseStatusReducer = (release: HelmRelease) => {\n  if (OtherReleaseStatuses.includes(release.info.status)) {\n    return HelmReleaseStatus.Other;\n  }\n  return release.info.status;\n};\n\nexport const helmReleasesRowFilters = (t: TFunction): RowFilter[] => {\n  return [\n    {\n      filterGroupName: t('helm-plugin~Status'),\n      type: 'helm-release-status',\n      reducer: releaseStatusReducer,\n      items: SelectedReleaseStatuses.map((status) => ({\n        id: status,\n        title: HelmReleaseStatusLabels[status],\n      })),\n    },\n  ];\n};\n\nexport const filterHelmReleasesByStatus = (releases: HelmRelease[], filter: string | string[]) => {\n  return releases.filter((release: HelmRelease) => {\n    return OtherReleaseStatuses.includes(release.info.status)\n      ? filter.includes(HelmReleaseStatus.Other)\n      : filter.includes(release.info.status);\n  });\n};\n\nexport const filterHelmReleasesByName = (releases: HelmRelease[], filter: string) => {\n  return releases.filter((release: HelmRelease) => fuzzy(filter, release.name));\n};\n\nexport const fetchHelmReleases = (\n  namespace: string,\n  limitInfo?: boolean,\n): Promise<HelmRelease[]> => {\n  const fetchString = `/api/helm/releases?ns=${namespace}&limitInfo=${limitInfo || false}`;\n  return coFetchJSON(fetchString);\n};\n\nexport const fetchHelmRelease = (\n  namespace: string,\n  helmReleaseName: string,\n): Promise<HelmRelease> => {\n  const fetchString = `/api/helm/release?ns=${namespace}&name=${helmReleaseName}`;\n  return coFetchJSON(fetchString);\n};\n\nexport const getChartURL = (\n  helmChartData: HelmChartMetaData[],\n  chartVersion: string,\n  chartRepoName: string,\n): string => {\n  const chartData: HelmChartMetaData = helmChartData.find(\n    (obj) => obj.version === chartVersion && obj.repoName === chartRepoName,\n  );\n  return chartData?.urls[0];\n};\n\nexport const getChartRepositoryTitle = (\n  chartRepositories: K8sResourceKind[],\n  chartRepoName: string,\n) => {\n  const chartRepository = chartRepositories?.find((repo) => repo.metadata.name === chartRepoName);\n  if (chartRepository?.spec?.name) {\n    return chartRepository.spec.name;\n  }\n  if (chartRepoName) {\n    return toTitleCase(chartRepoName);\n  }\n  return null;\n};\n\nexport const getChartIndexEntry = (\n  chartEntries: HelmChartEntries,\n  chartName: string,\n  chartRepoName: string,\n) => {\n  const repoName = chartRepoName.toLowerCase().split(' ').join('-');\n  const indexEntry = Object.keys(chartEntries).find((val) =>\n    val.includes(`${chartName}--${repoName}`),\n  );\n  return indexEntry;\n};\n\nexport const getChartEntriesByName = (\n  chartEntries: HelmChartEntries,\n  chartName: string,\n  chartRepoName?: string,\n  chartRepositories?: K8sResourceKind[],\n  annotatedName?: string,\n  providerName?: string,\n): HelmChartMetaData[] => {\n  if (chartName && chartRepoName) {\n    const chartRepositoryTitle = getChartRepositoryTitle(chartRepositories, chartRepoName);\n    const indexEntry = getChartIndexEntry(chartEntries, chartName, chartRepoName);\n    return (\n      chartEntries?.[indexEntry]?.map((e) => ({\n        ...e,\n        repoName: chartRepositoryTitle,\n      })) ?? []\n    );\n  }\n  const entries = _.reduce(\n    chartEntries,\n    (acc, charts, key) => {\n      const repoName = key.split('--').pop();\n      const chartRepositoryTitle = getChartRepositoryTitle(chartRepositories, repoName);\n      charts.forEach((chart: HelmChartMetaData) => {\n        if (\n          chart.name === chartName ||\n          (annotatedName &&\n            providerName &&\n            chart?.annotations?.[CHART_NAME_ANNOTATION] === annotatedName &&\n            chart?.annotations?.[PROVIDER_NAME_ANNOTATION] === providerName)\n        ) {\n          acc.push({ ...chart, repoName: chartRepositoryTitle });\n        }\n      });\n      return acc;\n    },\n    [],\n  );\n  return entries;\n};\n\nexport const concatVersions = (\n  chartVersion: string,\n  appVersion: string,\n  t: TFunction,\n  chartRepoName?: string,\n): string => {\n  let title = chartVersion.split('--')[0];\n  if (appVersion) {\n    title += t('helm-plugin~ / App Version {{appVersion}}', { appVersion });\n  }\n  if (chartRepoName) {\n    title += t('helm-plugin~ (Provided by {{chartRepoName}})', {\n      chartRepoName: toTitleCase(chartRepoName),\n    });\n  }\n  return title;\n};\n\nexport const getChartVersions = (chartEntries: HelmChartMetaData[], t: TFunction) => {\n  const chartVersions = _.reduce(\n    chartEntries,\n    (obj, chart) => {\n      obj[`${chart.version}--${chart.repoName}`] = concatVersions(\n        chart.version,\n        chart.appVersion,\n        t,\n        chart.repoName,\n      );\n      return obj;\n    },\n    {},\n  );\n  return chartVersions;\n};\n\nexport const getOriginRedirectURL = (\n  actionOrigin: string,\n  namespace: string,\n  releaseName?: string,\n) => {\n  switch (actionOrigin) {\n    case HelmActionOrigins.topology:\n      return `/topology/ns/${namespace}`;\n    case HelmActionOrigins.list:\n      return `/helm-releases/ns/${namespace}`;\n    case HelmActionOrigins.details:\n      return `/helm-releases/ns/${namespace}/release/${releaseName}`;\n    default:\n      return `/helm-releases/ns/${namespace}`;\n  }\n};\n\nexport const getHelmActionConfig = (\n  helmAction: HelmActionType,\n  releaseName: string,\n  namespace: string,\n  t: TFunction,\n  actionOrigin?: HelmActionOrigins,\n  chartURL?: string,\n  chartIndexEntry?: string,\n): HelmActionConfigType | undefined => {\n  switch (helmAction) {\n    case HelmActionType.Create:\n      return {\n        type: HelmActionType.Create,\n        title: t('helm-plugin~Create Helm Release'),\n        subTitle: {\n          form: t(\n            'helm-plugin~The Helm Release can be created by completing the form. Default values may be provided by the Helm chart authors.',\n          ),\n          yaml: t(\n            'helm-plugin~The Helm Release can be created by manually entering YAML or JSON definitions.',\n          ),\n        },\n        helmReleaseApi: `/api/helm/chart?url=${encodeURIComponent(\n          chartURL,\n        )}&namespace=${namespace}&indexEntry=${encodeURIComponent(chartIndexEntry)}`,\n        fetch: coFetchJSON.post,\n        redirectURL: getOriginRedirectURL(HelmActionOrigins.topology, namespace, releaseName),\n      };\n    case HelmActionType.Upgrade:\n      return {\n        type: HelmActionType.Upgrade,\n        title: t('helm-plugin~Upgrade Helm Release'),\n        subTitle: {\n          form: t(\n            'helm-plugin~Upgrade by selecting a new chart version or manually changing the form values.',\n          ),\n          yaml: t(\n            'helm-plugin~Upgrade by selecting a new chart version or manually changing YAML.',\n          ),\n        },\n        helmReleaseApi: `/api/helm/release?ns=${namespace}&name=${releaseName}`,\n        fetch: coFetchJSON.put,\n        redirectURL: getOriginRedirectURL(actionOrigin, namespace, releaseName),\n      };\n\n    case HelmActionType.Rollback:\n      return {\n        type: HelmActionType.Rollback,\n        title: t('helm-plugin~Rollback Helm Release'),\n        subTitle: ``,\n        helmReleaseApi: `/api/helm/release/history?ns=${namespace}&name=${releaseName}`,\n        fetch: coFetchJSON.patch,\n        redirectURL: getOriginRedirectURL(actionOrigin, namespace, releaseName),\n      };\n    default:\n      return undefined;\n  }\n};\n\nexport const flattenReleaseResources: Flatten = (resources) =>\n  Object.keys(resources).reduce((acc, kind) => {\n    if (!_.isEmpty(resources[kind].data)) {\n      acc.push(resources[kind].data);\n    }\n    return acc;\n  }, []);\n\nexport const getChartValuesYAML = (chart: HelmChart): string => {\n  const orderedValuesFile = chart?.files?.find((file) => file.name === 'ordered-values.yaml');\n  const orderedValues = orderedValuesFile ? atob(orderedValuesFile.data) : '';\n\n  if (orderedValues) return orderedValues;\n\n  return !_.isEmpty(chart?.values) ? safeDump(chart?.values) : '';\n};\n\nexport const loadHelmManifestResources = (release: HelmRelease): K8sResourceKind[] => {\n  if (!release || !release.manifest) {\n    return [];\n  }\n  const manifests = loadAll(release.manifest, null, { schema: DEFAULT_SAFE_SCHEMA, json: true });\n  return manifests.filter(Boolean);\n};\n\nexport const getChartReadme = (chart: HelmChart): string => {\n  const readmeFile = chart?.files?.find((file) => file.name === 'README.md');\n  return (readmeFile?.data && atob(readmeFile?.data)) ?? '';\n};\n\nexport const helmActionString = (t: TFunction) => ({\n  Create: t('helm-plugin~Create'),\n  Upgrade: t('helm-plugin~Upgrade'),\n  Rollback: t('helm-plugin~Rollback'),\n});\n\nexport const fetchHelmReleaseHistory = (\n  releaseName: string,\n  namespace: string,\n): Promise<HelmRelease[]> => {\n  const helmReleaseApi: string = `/api/helm/release/history?ns=${namespace}&name=${releaseName}`;\n  return coFetchJSON(helmReleaseApi);\n};\n\nexport const isGoingToTopology = (resources: K8sResourceKind[]) =>\n  !!resources.find((resource) =>\n    WORKLOAD_TYPES.includes(_.lowerFirst(_.get(modelFor(referenceFor(resource)), 'labelPlural'))),\n  );\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Title,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { Edge, Node } from '@patternfly/react-topology';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { PromiseComponent, ResourceIcon } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport {\n  createEventSourceKafkaConnection,\n  createSinkConnection,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport { createConnection } from '../../utils';\n\ntype MoveConnectionModalProps = {\n  edge: Edge;\n  availableTargets: Node[];\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype MoveConnectionModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst nodeItem = (node: Node) => (\n  <span>\n    <span className=\"co-icon-space-r\">\n      <ResourceIcon kind={node.getData().data?.kind} />\n    </span>\n    {node.getLabel()}\n  </span>\n);\n\nconst MoveConnectionForm: React.FC<\n  FormikProps<FormikValues> & MoveConnectionModalProps & { setTranslator: (t: TFunction) => void }\n> = ({\n  handleSubmit,\n  isSubmitting,\n  setTranslator,\n  cancel,\n  values,\n  edge,\n  availableTargets,\n  status,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const isDirty = values.target.getId() !== edge.getTarget().getId();\n  setTranslator(t);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={() => setOpen(!isOpen)}\n      isExpanded={isOpen}\n      isFullWidth\n    >\n      {nodeItem(values.target)}\n    </MenuToggle>\n  );\n\n  const sourceLabel = edge.getSource().getLabel();\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content\">\n      <ModalTitle>{t('topology~Move connector')}</ModalTitle>\n      <ModalBody>\n        <Title headingLevel=\"h2\" size=\"md\" className=\"co-m-form-row\">\n          <Trans ns=\"topology\" t={t}>\n            Connect <strong>{{ sourceLabel }}</strong> to\n          </Trans>\n        </Title>\n        <div className=\"pf-v5-c-form\">\n          <FormGroup fieldId=\"target-node\" label=\"Target\">\n            <Select\n              id=\"target-node-dropdown\"\n              className=\"dropdown--full-width\"\n              onSelect={(_, value: Node) => {\n                if (value) {\n                  values.target = value;\n                }\n                setOpen(false);\n              }}\n              toggle={toggle}\n              isOpen={isOpen}\n              onOpenChange={(open) => setOpen(open)}\n            >\n              <SelectList>\n                {availableTargets.map((node) => (\n                  <SelectOption\n                    key={node.getId()}\n                    value={node}\n                    isSelected={values.target.getId() === node.getId()}\n                  >\n                    {nodeItem(node)}\n                  </SelectOption>\n                ))}\n              </SelectList>\n            </Select>\n          </FormGroup>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('topology~Move')}\n        submitDisabled={!isDirty || isSubmitting}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass MoveConnectionModal extends PromiseComponent<\n  MoveConnectionModalProps,\n  MoveConnectionModalState\n> {\n  private t: TFunction;\n\n  private onSubmit = (newTarget: Node): Promise<K8sResourceKind[] | K8sResourceKind> => {\n    const { edge } = this.props;\n    switch (edge.getType()) {\n      case TYPE_CONNECTS_TO:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_SERVICE_BINDING:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_EVENT_SOURCE_LINK:\n        return createSinkConnection(edge.getSource(), newTarget);\n      case TYPE_KAFKA_CONNECTION_LINK:\n        return createEventSourceKafkaConnection(edge.getSource(), newTarget);\n      default:\n        return Promise.reject(\n          new Error(\n            this.t('topology~Unable to move connector of type {{type}}.', {\n              type: edge.getType(),\n            }),\n          ),\n        );\n    }\n  };\n\n  private handleSubmit = (values, actions) => {\n    const { close } = this.props;\n    return this.handlePromise(this.onSubmit(values.target))\n      .then(() => {\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err });\n      });\n  };\n\n  private setTranslator = (t: TFunction) => {\n    this.t = t;\n  };\n\n  render() {\n    const { edge } = this.props;\n    const initialValues = {\n      target: edge.getTarget(),\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formikProps) => (\n          <MoveConnectionForm setTranslator={this.setTranslator} {...formikProps} {...this.props} />\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport const moveConnectionModal = createModalLauncher((props: MoveConnectionModalProps) => (\n  <MoveConnectionModal {...props} />\n));\n","export const editApplicationModal = (props) =>\n  import('./EditApplicationModal' /* webpackChunkName: \"topology-modals\" */).then((m) =>\n    m.editApplicationModal(props),\n  );\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n","export { default as OdcBaseEdge } from './OdcBaseEdge';\nexport { default as OdcBaseNode } from './OdcBaseNode';\nexport { default as odcElementFactory } from './odcElementFactory';\n","import { GraphModel } from '@patternfly/react-topology';\nimport { action, ActionType } from 'typesafe-actions';\nimport { RootState } from '@console/internal/redux';\n\nexport enum Actions {\n  topologyFilters = 'topologyFilters',\n  supportedTopologyFilters = 'supportedTopologyFilters',\n  supportedTopologyKinds = 'supportedTopologyKinds',\n  topologyGraphModel = 'topologyGraphModel',\n}\n\nexport const setSupportedTopologyFilters = (supportedFilters: string[]) => {\n  return action(Actions.supportedTopologyFilters, { supportedFilters });\n};\n\nexport const setSupportedTopologyKinds = (supportedKinds: { [key: string]: number }) => {\n  return action(Actions.supportedTopologyKinds, { supportedKinds });\n};\n\nexport const setTopologyGraphModel = (namespace: string, graphModel: GraphModel) => {\n  return action(Actions.topologyGraphModel, { namespace, graphModel });\n};\n\nexport const getTopologyGraphModel = (state: RootState, namespace: string): GraphModel => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology?.get('topologyGraphModel')?.[namespace];\n};\n\nconst actions = {\n  setSupportedTopologyFilters,\n  setSupportedTopologyKinds,\n  setTopologyGraphModel,\n};\n\nexport type TopologyAction = ActionType<typeof actions>;\n","import * as React from 'react';\nimport { Alert, AlertActionLink } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { PodStatus } from '@console/internal/components/pod';\nimport { PodTraffic } from '@console/internal/components/pod-traffic';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  LoadingBox,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { podPhase, PodKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport {\n  usePodsWatcher,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  BuildConfigData,\n} from '@console/shared';\n\nconst kind: string = 'Pod';\nconst MAX_PODS: number = 3;\nconst MAX_ERROR_PODS: number = 10;\n\nconst podUpdateTime = (pod: PodKind) => {\n  const allStatuses = [\n    ..._.get(pod, 'status.containerStatuses', []),\n    ..._.get(pod, 'status.initContainerStatuses', []),\n  ];\n  const updateTimes = _.reduce(\n    allStatuses,\n    (times, nextStatus) => {\n      if (nextStatus.state.running) {\n        return [...times, _.get(nextStatus, 'state.running.startedAt')];\n      }\n      if (nextStatus.state.terminated) {\n        return [...times, _.get(nextStatus, 'state.terminated.finishedAt')];\n      }\n      if (nextStatus.lastState.running) {\n        return [...times, _.get(nextStatus, 'lastState.running.startedAt')];\n      }\n      if (nextStatus.lastState.terminated) {\n        return [...times, _.get(nextStatus, 'lastState.terminated.finishedAt')];\n      }\n      return [...times, _.get(nextStatus, _.get(pod, 'startTime'))];\n    },\n    [],\n  );\n\n  return _.head(_.reverse(updateTimes.sort()));\n};\n\nconst errorPhases = [\n  'ContainerCannotRun',\n  'CrashLoopBackOff',\n  'Critical',\n  'Error',\n  'Failed',\n  'InstallCheckFailed',\n  'Cancelled',\n  'Expired',\n  'Not Ready',\n  'Terminating',\n];\n\nconst isPodError = (pod: PodKind) => _.includes(errorPhases, podPhase(pod));\n\nconst isEvicted = (pod: PodKind) => podPhase(pod) === 'Evicted';\n\nconst isDeploymentGeneratedByWebConsole = (obj: K8sResourceKind) =>\n  obj.kind === 'Deployment' &&\n  obj.metadata?.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole';\n\nconst isPodWithoutImageId = (pod: PodKind) =>\n  pod.status?.phase === 'Pending' &&\n  pod.status?.containerStatuses?.some((containerStatus) => !containerStatus.imageID);\n\nexport const podCompare = (pod1: PodKind, pod2: PodKind): number => {\n  const error1 = isPodError(pod1);\n  const error2 = isPodError(pod2);\n\n  if (error1 !== error2) {\n    return error1 ? -1 : 1;\n  }\n\n  const evicted1 = isEvicted(pod1);\n  const evicted2 = isEvicted(pod2);\n\n  if (evicted1 !== evicted2) {\n    return evicted1 ? 1 : -1;\n  }\n\n  const runtime1 = podUpdateTime(pod1);\n  const runtime2 = podUpdateTime(pod2);\n\n  if (runtime1 < runtime2) {\n    return 1;\n  }\n  if (runtime1 > runtime2) {\n    return -1;\n  }\n\n  return pod1.metadata.name.localeCompare(pod2.metadata.name);\n};\n\nconst PodOverviewItem: React.FC<PodOverviewItemProps> = ({ pod }) => {\n  const {\n    metadata: { name, namespace },\n  } = pod;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-5\">\n          <ResourceLink kind={kind} name={name} namespace={namespace} />\n        </span>\n        <span className=\"col-xs-3\">\n          <PodStatus pod={pod} />\n        </span>\n        <span className=\"col-xs-1\">\n          <PodTraffic podName={name} namespace={namespace} tooltipFlag />\n        </span>\n        <span className=\"col-xs-3 text-right\">\n          <Link to={`${resourcePath(kind, name, namespace)}/logs`}>{t('public~View logs')}</Link>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nPodOverviewItem.displayName = 'PodOverviewItem';\n\ntype PodOverviewItemProps = {\n  pod: PodKind;\n};\n\nconst PodsOverviewList: React.FC<PodOverviewListProps> = ({ pods }) => (\n  <ul className=\"list-group\">\n    {_.map(pods, (pod) => (\n      <PodOverviewItem key={pod.metadata.uid} pod={pod} />\n    ))}\n  </ul>\n);\n\nPodsOverviewList.displayName = 'PodsOverviewList';\n\nconst isComplete = (build: K8sResourceKind) => build.status?.completionTimestamp;\n\n/**\n * Get the Shipwright BuildRun status for a pod's image if it exists, otherwise\n * return an empty object\n */\nconst useGetShipwrightBuilds = (namespace: string, name: string): K8sResourceKind[] => {\n  const watchedResources = {\n    buildRunBeta: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1beta1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n    buildRunAlpha: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1alpha1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n  };\n\n  // get all shipwright buildrun CRDs and concatenate into a list\n  const watchedBuildRuns = useK8sWatchResources(watchedResources);\n\n  const buildRuns = React.useMemo(() => {\n    const allBuildRuns = {\n      ...((watchedBuildRuns.buildRunBeta.data as object) || {}),\n      ...((watchedBuildRuns.buildRunAlpha.data as object) || {}),\n    };\n\n    return Object.keys(allBuildRuns)\n      .filter((key) => {\n        const buildRun = allBuildRuns[key] as K8sResourceKind;\n        return buildRun.spec?.build?.name === name;\n      })\n      .map((key) => allBuildRuns[key] as K8sResourceKind);\n  }, [watchedBuildRuns, name]);\n\n  return buildRuns;\n};\n\nconst buildRunIsComplete = (buildRun: K8sResourceKind) => {\n  const succeededCondition = buildRun?.status?.conditions?.find(\n    (condition) => condition.type === 'Succeeded',\n  );\n\n  return (\n    (succeededCondition?.status === 'True' || succeededCondition?.status === 'False') &&\n    succeededCondition?.reason === 'Succeeded'\n  );\n};\n\nexport const PodsOverviewContent: React.FC<PodsOverviewContentProps> = ({\n  obj,\n  pods,\n  loaded,\n  loadError,\n  allPodsLink,\n  emptyText,\n  buildConfigData,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const [showWaitingPods, setShowWaitingPods] = React.useState(false);\n  const shipwrightBuilds = useGetShipwrightBuilds(namespace, name);\n\n  const waitingForBuildConfig =\n    buildConfigData?.buildConfigs?.length > 0 &&\n    !buildConfigData.buildConfigs[0].builds.some((build) => isComplete(build));\n\n  const waitingForShipwright =\n    shipwrightBuilds?.length > 0 &&\n    !shipwrightBuilds.some((buildRun) => buildRunIsComplete(buildRun));\n\n  const showWaitingForBuildAlert =\n    (waitingForBuildConfig || waitingForShipwright) && isDeploymentGeneratedByWebConsole(obj);\n\n  let filteredPods = [...pods];\n  if (showWaitingForBuildAlert && !showWaitingPods) {\n    filteredPods = filteredPods.filter((pod) => !isPodWithoutImageId(pod));\n  }\n  filteredPods.sort(podCompare);\n\n  const errorPodCount = _.size(_.filter(pods, (pod) => isPodError(pod)));\n  const podsShown = Math.max(Math.min(errorPodCount, MAX_ERROR_PODS), MAX_PODS);\n  const linkTo = allPodsLink || `${resourcePath(referenceFor(obj), name, namespace)}/pods`;\n  const emptyMessage = emptyText || t('console-shared~No Pods found for this resource.');\n\n  const podAlert = showWaitingForBuildAlert ? (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~Waiting for the build')}\n      actionLinks={\n        <AlertActionLink\n          onClick={() => setShowWaitingPods(!showWaitingPods)}\n          data-test=\"waiting-pods\"\n        >\n          {showWaitingPods\n            ? t('console-shared~Hide waiting pods with errors')\n            : t('console-shared~Show waiting pods with errors')}\n        </AlertActionLink>\n      }\n    >\n      {t(\n        'console-shared~Waiting for the first build to run successfully. You may temporarily see \"ImagePullBackOff\" and \"ErrImagePull\" errors while waiting.',\n      )}\n    </Alert>\n  ) : null;\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('public~Pods')}>\n        {_.size(pods) > podsShown && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('console-shared~View all {{podSize}}', { podSize: _.size(pods) })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {buildConfigData?.loaded && !buildConfigData?.loadError && podAlert}\n      {_.isEmpty(filteredPods) ? (\n        <span className=\"text-muted\">{loaded || !!loadError ? emptyMessage : <LoadingBox />}</span>\n      ) : (\n        <PodsOverviewList pods={_.take(filteredPods, podsShown)} />\n      )}\n    </>\n  );\n};\nPodsOverviewContent.displayName = 'PodsOverviewContent';\n\nexport const PodsOverview: React.FC<PodsOverviewProps> = ({\n  obj,\n  podsFilter,\n  hideIfEmpty = false,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const { podData, loadError, loaded } = usePodsWatcher(obj, obj.kind, namespace);\n\n  React.useEffect(() => {\n    if (!loadError && loaded) {\n      let updatedPods = podData.pods as PodKind[];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n    }\n  }, [podData, loadError, loaded, podsFilter]);\n\n  if (!pods.length && hideIfEmpty) {\n    return null;\n  }\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\nexport const PodsOverviewMultiple: React.FC<PodsOverviewMultipleProps> = ({\n  obj,\n  podResources,\n  podsFilter,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      let updatedPods = podResources?.length\n        ? podResources.reduce((acc, resource) => {\n            acc.push(...getPodsForResource(resource, resources));\n            return acc;\n          }, [])\n        : [];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [podResources, podsFilter, resources]);\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\ntype PodOverviewListProps = {\n  pods: PodKind[];\n};\n\ntype PodsOverviewContentProps = {\n  obj: K8sResourceKind;\n  pods: PodKind[];\n  loaded: boolean;\n  loadError: string;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n\ntype PodsOverviewProps = {\n  obj: K8sResourceKind;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n  hideIfEmpty?: boolean;\n};\n\ntype PodsOverviewMultipleProps = {\n  obj: K8sResourceKind;\n  podResources: K8sResourceKind[];\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { BuildLogLink, BuildNumberLink } from '@console/internal/components/build';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { BuildConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { BuildPhase, startBuild } from '@console/internal/module/k8s/builds';\nimport { LogSnippet, Status, BuildConfigOverviewItem } from '@console/shared';\n\nconst MAX_VISIBLE = 3;\n\nconst StatusTitle = ({ build }: { build: K8sResourceKind }) => {\n  const { t } = useTranslation();\n  switch (build.status.phase) {\n    case BuildPhase.Cancelled:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was cancelled\n        </Trans>\n      );\n    case BuildPhase.Complete:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was complete\n        </Trans>\n      );\n    case BuildPhase.Error:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> encountered an error\n        </Trans>\n      );\n    case BuildPhase.Failed:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> failed\n        </Trans>\n      );\n    case BuildPhase.New:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is new\n        </Trans>\n      );\n    case BuildPhase.Pending:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is pending\n        </Trans>\n      );\n    case BuildPhase.Running:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is running\n        </Trans>\n      );\n    default:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is {build.status?.phase?.toLowerCase()}\n        </Trans>\n      );\n  }\n};\n\nconst BuildStatus = ({ build }: { build: K8sResourceKind }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? <LogSnippet message={message} logSnippet={logSnippet} /> : null;\n};\n\nconst BuildOverviewItem: React.FC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          <div>\n            <StatusTitle build={build} />\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"build-overview__item-time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.FC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n  const { t } = useTranslation();\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {builds.length > MAX_VISIBLE && (\n            <div>\n              <Link\n                className=\"sidebar__section-view-all\"\n                to={`${resourcePath(referenceFor(buildConfig), name, namespace)}/builds`}\n              >\n                {t('topology~View all {{buildsLength}}', {\n                  buildsLength: builds.length,\n                })}\n              </Link>\n            </div>\n          )}\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick} data-test-id=\"start-build-action\">\n                {t('topology~Start Build')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {!(builds?.length > 0) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">{t('topology~No Builds found for this Build Config.')}</span>\n        </li>\n      ) : (\n        builds\n          .slice(0, MAX_VISIBLE)\n          .map((build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\nexport const BuildOverview: React.FC<BuildConfigsOverviewProps> = ({ buildConfigs }) => {\n  const { t } = useTranslation();\n  if (!(buildConfigs?.length > 0)) {\n    return null;\n  }\n  return (\n    <div className=\"build-overview\">\n      <SidebarSectionHeading text={t('topology~Builds')} />\n      {buildConfigs.map((buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))}\n    </div>\n  );\n};\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n  loaded?: boolean;\n  loadError?: string;\n};\n","import * as React from 'react';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLocation } from '@console/internal/components/routes';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher, useServicesWatcher } from '@console/shared';\n\nconst ServicePortList: React.FC<ServicePortListProps> = ({ service }) => {\n  const ports = service.spec?.ports ?? [];\n  const { t } = useTranslation();\n  return (\n    <ul className=\"port-list\">\n      {ports.map(({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">{t('topology~Service port:')}</span>{' '}\n          {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">{t('topology~Pod port:')}</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.FC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.FC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {services?.map((service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.FC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{t('topology~Location:')}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.FC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {routes?.map((route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.FC<NetworkingOverviewProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const serviceResources = useServicesWatcher(obj);\n  const services =\n    serviceResources.loaded && !serviceResources.loadError ? serviceResources.services : [];\n  const routeResources = useRoutesWatcher(obj);\n  const routes = routeResources.loaded && !routeResources.loadError ? routeResources.routes : [];\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~Services')} />\n      {!(services?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Services found for this resource.')}</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text={t('topology~Routes')} />\n      {!(routes?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Routes found for this resource.')}</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  obj: K8sResourceKind;\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, JobKind } from '@console/internal/module/k8s';\nimport { PodStatus, usePodsWatcher } from '@console/shared';\n\nconst kind: string = 'Job';\nconst MAX_JOBS: number = 3;\n\nconst JobOverviewItem: React.FC<JobOverviewItemProps> = ({ job }) => {\n  const {\n    metadata: { name, namespace },\n  } = job;\n  const podsLink = `${resourcePath(referenceFor(job), name, namespace)}/pods`;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n\n  return loaded && !loadError ? (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"job-overview__item\">\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n        <Link to={podsLink} className=\"overview__pod-donut-sm\">\n          <PodStatus\n            standalone\n            data={podData.pods}\n            size={25}\n            innerRadius={8}\n            outerRadius={12}\n            title={`${podData.pods.length}`}\n            titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n            showTooltip={false}\n          />\n        </Link>\n      </div>\n    </li>\n  ) : null;\n};\n\nJobOverviewItem.displayName = 'JobOverviewItem';\n\ntype JobOverviewItemProps = {\n  job: JobKind;\n};\n\nconst JobsOverviewList: React.FC<JobsOverviewListProps> = ({ jobs }) => (\n  <ul className=\"list-group\">\n    {jobs?.map((job) => (\n      <JobOverviewItem key={job.metadata.uid} job={job} />\n    ))}\n  </ul>\n);\n\nJobsOverviewList.displayName = 'JobsOverviewList';\n\nexport const JobsOverview: React.FC<JobsOverviewProps> = ({\n  jobs,\n  obj,\n  allJobsLink,\n  emptyText,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const linkTo = allJobsLink || `${resourcePath(referenceFor(obj), name, namespace)}/jobs`;\n  const emptyMessage = emptyText || t('topology~No Jobs found for this resource.');\n\n  return (\n    <>\n      <SidebarSectionHeading text=\"Jobs\">\n        {jobs?.length > MAX_JOBS && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('topology~View all ({{jobCount}})', { jobCount: jobs.length })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {!(jobs?.length > 0) ? (\n        <span className=\"text-muted\">{emptyMessage}</span>\n      ) : (\n        <JobsOverviewList jobs={jobs.slice(0, MAX_JOBS)} />\n      )}\n    </>\n  );\n};\n\ntype JobsOverviewListProps = {\n  jobs: JobKind[];\n};\n\ntype JobsOverviewProps = {\n  jobs: JobKind[];\n  obj: K8sResourceKind;\n  allJobsLink?: string;\n  emptyText?: string;\n};\n","import * as React from 'react';\nimport { Node, TopologyQuadrant } from '@patternfly/react-topology/dist/esm/types';\nimport { TopologyDecorator } from '../../../../../topology-types';\n\nconst getExtensionDecoratorForQuadrant = (\n  location: string,\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number,\n  decoratorRadius: number,\n  nodeWidth: number,\n  nodeHeight: number,\n): React.ReactElement => {\n  let x: number;\n  let y: number;\n  const deltaX = nodeRadius > 0 ? nodeRadius : nodeWidth / 2;\n  const deltaY = nodeRadius > 0 ? nodeRadius : nodeHeight / 2;\n  const offset = nodeRadius > 0 ? decoratorRadius * 0.7 : 0;\n  switch (location) {\n    case TopologyQuadrant.upperRight:\n      x = centerX + deltaX - offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerRight:\n      x = centerX + deltaX - offset;\n      y = centerY + deltaY - offset;\n      break;\n    case TopologyQuadrant.upperLeft:\n      x = centerX - deltaX + offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerLeft:\n      x = centerX - deltaX + offset;\n      y = centerY + deltaY - offset;\n      break;\n    default:\n      x = centerX;\n      y = centerY;\n  }\n\n  let retDecorator;\n  let i = 0;\n  const length = decorators?.[location]?.length ?? 0;\n  while (!retDecorator && i < length) {\n    retDecorator = decorators[location][i++].decorator(element, decoratorRadius, x, y);\n  }\n  return retDecorator;\n};\n\nexport const getNodeDecorators = (\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number, // -1 to use width/height\n  decoratorRadius: number,\n  nodeWidth?: number,\n  nodeHeight?: number,\n): React.ReactNode => {\n  const keys = decorators ? Object.keys(decorators) : [];\n  return (\n    <>\n      {keys.map((key) =>\n        getExtensionDecoratorForQuadrant(\n          key,\n          element,\n          decorators,\n          centerX,\n          centerY,\n          nodeRadius,\n          decoratorRadius,\n          nodeWidth,\n          nodeHeight,\n        ),\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION, ROUTE_URL_ANNOTATION } from '../const';\nimport { getRoutesURL } from '../utils/topology-utils';\n\nexport const useRoutesURL = (resource: K8sResourceKind): string => {\n  const disabled = resource?.metadata?.annotations?.[ROUTE_DISABLED_ANNOTATION] === 'true';\n  const annotationURL = resource?.metadata?.annotations?.[ROUTE_URL_ANNOTATION];\n\n  const routeResources = useRoutesWatcher(resource);\n  const routes = React.useMemo(\n    () => (routeResources.loaded && !routeResources.loadError ? routeResources.routes : []),\n    [routeResources],\n  );\n  const watchedURL = React.useMemo(() => getRoutesURL(resource, routes), [resource, routes]);\n\n  const url = annotationURL || watchedURL;\n  if (disabled || !url || !(url.startsWith('http://') || url.startsWith('https://'))) {\n    return null;\n  }\n  return url;\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\n\nexport interface HelmRelease {\n  name: string;\n  namespace: string;\n  chart: HelmChart;\n  info: {\n    description: string;\n    deleted: string;\n    first_deployed: string;\n    last_deployed: string;\n    status: string;\n    notes: string;\n  };\n  version: number | string;\n  hooks?: object[];\n  manifest?: string;\n}\n\nexport interface HelmChart {\n  files: { name: string; data: string }[];\n  metadata: HelmChartMetaData;\n  templates: object[];\n  values: object;\n  lock?: object;\n  schema?: string;\n}\n\nexport interface HelmChartMetaData {\n  name: string;\n  version: string;\n  created?: string;\n  description?: string;\n  digest?: string;\n  apiVersion: string;\n  appVersion?: string;\n  annotations?: {\n    [key: string]: string;\n  };\n  keywords?: string[];\n  home?: string;\n  icon?: string;\n  sources?: string[];\n  maintainers?: { name: string; email?: string; url?: string }[];\n  dependencies?: object[];\n  type?: string;\n  urls: string[];\n  kubeVersion?: string;\n  repoName?: string;\n}\n\nexport type HelmChartEntries = {\n  [name: string]: HelmChartMetaData[];\n};\n\nexport interface HelmReleaseResourcesData {\n  releaseName: string;\n  releaseVersion: number | string;\n  chartIcon: string;\n  manifestResources: K8sResourceKind[];\n  releaseNotes: string;\n  status: string;\n}\n\nexport interface HelmReleaseResourcesMap {\n  [name: string]: HelmReleaseResourcesData;\n}\n\nexport enum HelmReleaseStatus {\n  Deployed = 'deployed',\n  Failed = 'failed',\n  PendingInstall = 'pending-install',\n  PendingUpgrade = 'pending-upgrade',\n  PendingRollback = 'pending-rollback',\n  Other = 'other',\n}\n\nexport enum HelmActionType {\n  Create = 'Create',\n  Upgrade = 'Upgrade',\n  Rollback = 'Rollback',\n}\n\nexport interface HelmActionConfigType {\n  type: HelmActionType;\n  title: string;\n  subTitle: string | { form: string; yaml: string };\n  helmReleaseApi: string;\n  fetch: (url: string, json: any, options?: {}, timeout?: number) => Promise<any>;\n  redirectURL: string;\n}\n\nexport enum HelmActionOrigins {\n  details = 'details',\n  list = 'list',\n  topology = 'topology',\n}\n\nexport interface HelmChartRepositoryType {\n  apiVersion: string;\n  kind: string;\n  metadata: {\n    name: string;\n    namespace?: string;\n    labels?: { [key: string]: string };\n    annotations?: { [key: string]: string };\n  };\n  spec: {\n    connectionConfig: {\n      url: string;\n      ca?: { name: string };\n      tlsClientConfig?: { name: string };\n    };\n    description?: string;\n    disabled?: boolean;\n    name?: string;\n  };\n}\n\nexport interface HelmChartRepositoryFormData {\n  repoName: string;\n  repoUrl: string;\n  repoDisplayName?: string;\n  scope: string;\n  repoDescription?: string;\n  ca?: string;\n  tlsClientConfig?: string;\n  disabled?: boolean;\n  metadata?: object;\n}\n\nexport interface HelmChartRepositoryData {\n  editorType: string;\n  yamlData: string;\n  formData: HelmChartRepositoryFormData;\n  formReloadCount?: number;\n}\n","import * as React from 'react';\nimport { GraphElement, ElementContext, ContextMenu } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { ActionContext, ActionServiceProvider } from '@console/shared';\nimport { createContextMenuItems } from '../../../actions';\n\ntype Reference = React.ComponentProps<typeof ContextMenu>['reference'];\n\nexport interface WithContextMenuProps {\n  onContextMenu: (e: React.MouseEvent) => void;\n  contextMenuOpen: boolean;\n}\n\nconst withContextMenu = <E extends GraphElement>(\n  actionContext: (element: E) => ActionContext,\n  container?: Element | null | undefined | (() => Element),\n  className?: string,\n  atPoint: boolean = true,\n) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FC<Omit<P, keyof WithContextMenuProps>> = (props) => {\n    const element = React.useContext(ElementContext);\n    const [reference, setReference] = React.useState<Reference | null>(null);\n    const onContextMenu = React.useCallback((e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setReference(\n        atPoint\n          ? {\n              x: e.pageX,\n              y: e.pageY,\n            }\n          : e.currentTarget,\n      );\n    }, []);\n\n    return (\n      <>\n        <WrappedComponent\n          {...(props as any)}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={!!reference}\n        />\n        {reference ? (\n          <ActionServiceProvider context={actionContext(element as E)}>\n            {({ options, loaded }) =>\n              loaded ? (\n                <ContextMenu\n                  reference={reference}\n                  container={container}\n                  className={className}\n                  open\n                  onRequestClose={() => setReference(null)}\n                >\n                  {createContextMenuItems(options)}\n                </ContextMenu>\n              ) : null\n            }\n          </ActionServiceProvider>\n        ) : null}\n      </>\n    );\n  };\n  Component.displayName = `withContextMenu(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n\nexport default withContextMenu;\n","import * as React from 'react';\nimport {\n  GraphComponent as BaseGraphComponent,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\n\ntype GraphComponentProps = React.ComponentProps<typeof BaseGraphComponent> & {\n  dragInProgress?: boolean;\n  dragEditInProgress?: boolean;\n  hasDropTarget?: boolean;\n  dragCreate?: boolean;\n} & WithContextMenuProps;\n\nconst DRAG_ACTIVE_CLASS = 'odc-m-drag-active';\nconst VALID_DROP_CLASS = 'odc-m-valid-drop-target';\n\nconst GraphComponent: React.FC<GraphComponentProps> = (props) => {\n  const { dragInProgress, dragEditInProgress, hasDropTarget, dragCreate } = props;\n  const graphClasses = classNames('odc-graph', { 'odc-m-drag-create': dragCreate });\n  const controller = props.element.getController();\n\n  React.useEffect(() => {\n    controller.setRenderConstraint(!dragInProgress);\n  }, [controller, dragInProgress]);\n\n  React.useEffect(() => {\n    const addClassList = [];\n    const removeClassList = [];\n\n    dragEditInProgress\n      ? addClassList.push(DRAG_ACTIVE_CLASS)\n      : removeClassList.push(DRAG_ACTIVE_CLASS);\n    hasDropTarget ? addClassList.push(VALID_DROP_CLASS) : removeClassList.push(VALID_DROP_CLASS);\n\n    if (addClassList.length) {\n      addClassList.forEach((className) => document.body.classList.add(className));\n    }\n    if (removeClassList.length) {\n      removeClassList.forEach((className) => document.body.classList.remove(className));\n    }\n  }, [dragEditInProgress, hasDropTarget]);\n  return (\n    <g className={graphClasses}>\n      <BaseGraphComponent {...props} />\n    </g>\n  );\n};\n\nexport default GraphComponent;\n","export const TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY = `bridge/topology-display-filters`;\n","import * as React from 'react';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '@console/shared';\n\nimport './RegroupHint.scss';\n\nconst RegroupHint: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-regroup-hint\">\n      <InfoCircleIcon className=\"odc-regroup-hint__icon\" />\n      <span className=\"odc-regroup-hint__text\">\n        <ShortcutTable>\n          <Shortcut shift drag>\n            {t('topology~Edit application grouping')}\n          </Shortcut>\n        </ShortcutTable>\n      </span>\n    </div>\n  );\n};\n\nexport default RegroupHint;\n","import * as React from 'react';\nimport CollapseIcon from '@patternfly/react-icons/dist/esm/icons/compress-alt-icon';\nimport { css } from '@patternfly/react-styles';\nimport {\n  NodeLabel,\n  Layer,\n  GROUPS_LAYER,\n  hullPath,\n  maxPadding,\n  useCombineRefs,\n  useHover,\n  BadgeLocation,\n  isGraph,\n  Node,\n  NodeShape,\n  NodeStyle,\n  PointTuple,\n  useDragNode,\n  useSvgAnchor,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  CollapsibleGroupProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { polygonHull } from 'd3-polygon';\nimport * as _ from 'lodash';\nimport { observer } from 'mobx-react';\n\ntype ApplicationGroupExpandedProps = {\n  className?: string;\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  hover?: boolean;\n  label?: string; // Defaults to element.getLabel()\n  secondaryLabel?: string;\n  showLabel?: boolean; // Defaults to true\n  truncateLength?: number; // Defaults to 13\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: string;\n  labelIconPadding?: number;\n} & Partial<\n  CollapsibleGroupProps &\n    WithDragNodeProps &\n    WithSelectionProps &\n    WithDndDropProps &\n    WithContextMenuProps\n>;\n\ntype PointWithSize = [number, number, number];\n\n// Return the point whose Y is the largest value.\n// If multiple points are found, compute the center X between them\n// export for testing only\nexport function computeLabelLocation(points: PointWithSize[]): PointWithSize {\n  let lowPoints: PointWithSize[];\n  const threshold = 5;\n\n  _.forEach(points, (p) => {\n    const delta = !lowPoints ? Infinity : Math.round(p[1]) - Math.round(lowPoints[0][1]);\n    if (delta > threshold) {\n      lowPoints = [p];\n    } else if (Math.abs(delta) <= threshold) {\n      lowPoints.push(p);\n    }\n  });\n  return [\n    (_.minBy(lowPoints, (p) => p[0])[0] + _.maxBy(lowPoints, (p) => p[0])[0]) / 2,\n    lowPoints[0][1],\n    // use the max size value\n    _.maxBy(lowPoints, (p) => p[2])[2],\n  ];\n}\n\nconst ApplicationGroupExpanded: React.FunctionComponent<ApplicationGroupExpandedProps> = ({\n  className,\n  element,\n  collapsible,\n  selected,\n  onSelect,\n  hover,\n  label,\n  secondaryLabel,\n  showLabel = true,\n  truncateLength,\n  dndDropRef,\n  droppable,\n  canDrop,\n  dropTarget,\n  onContextMenu,\n  contextMenuOpen,\n  dragging,\n  dragNodeRef,\n  badge,\n  badgeColor,\n  badgeTextColor,\n  badgeBorderColor,\n  badgeClassName,\n  badgeLocation,\n  labelIconClass,\n  labelIcon,\n  labelIconPadding,\n  onCollapseChange,\n}) => {\n  const [hovered, hoverRef] = useHover();\n  const [labelHover, labelHoverRef] = useHover();\n  const dragLabelRef = useDragNode()[1];\n  const refs = useCombineRefs<SVGPathElement>(hoverRef, dragNodeRef);\n  const isHover = hover !== undefined ? hover : hovered;\n  const anchorRef = useSvgAnchor();\n  const outlineRef = useCombineRefs(dndDropRef, anchorRef);\n  const labelLocation = React.useRef<PointWithSize>();\n  const pathRef = React.useRef<string>();\n\n  let parent = element.getParent();\n  let altGroup = false;\n  while (!isGraph(parent)) {\n    altGroup = !altGroup;\n    parent = parent.getParent();\n  }\n\n  // cast to number and coerce\n  const padding = maxPadding(element.getStyle<NodeStyle>().padding);\n  const hullPadding = (point: PointWithSize | PointTuple) => (point[2] || 0) + padding;\n\n  if (!droppable || !pathRef.current || !labelLocation.current) {\n    const children = element.getNodes().filter((c) => c.isVisible());\n    if (children.length === 0) {\n      return null;\n    }\n    const points: (PointWithSize | PointTuple)[] = [];\n    _.forEach(children, (c) => {\n      if (c.getNodeShape() === NodeShape.circle) {\n        const bounds = c.getBounds();\n        const { width, height } = bounds;\n        const { x, y } = bounds.getCenter();\n        const radius = Math.max(width, height) / 2;\n        points.push([x, y, radius] as PointWithSize);\n      } else {\n        // add all 4 corners\n        const { width, height, x, y } = c.getBounds();\n        points.push([x, y, 0] as PointWithSize);\n        points.push([x + width, y, 0] as PointWithSize);\n        points.push([x, y + height, 0] as PointWithSize);\n        points.push([x + width, y + height, 0] as PointWithSize);\n      }\n    });\n    const hullPoints: (PointWithSize | PointTuple)[] =\n      points.length > 2 ? polygonHull(points as PointTuple[]) : (points as PointTuple[]);\n    if (!hullPoints) {\n      return null;\n    }\n\n    // change the box only when not dragging\n    pathRef.current = hullPath(hullPoints as PointTuple[], hullPadding);\n\n    // Compute the location of the group label.\n    labelLocation.current = computeLabelLocation(hullPoints as PointWithSize[]);\n  }\n\n  const groupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n  );\n  const innerGroupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n    (isHover || labelHover) && 'pf-m-hover',\n    canDrop && dropTarget && 'pf-m-drop-target',\n  );\n\n  return (\n    <g\n      ref={labelHoverRef}\n      onContextMenu={onContextMenu}\n      onClick={onSelect}\n      className={groupClassName}\n    >\n      <Layer id={GROUPS_LAYER}>\n        <g\n          ref={refs}\n          onContextMenu={onContextMenu}\n          onClick={onSelect}\n          className={innerGroupClassName}\n        >\n          <path ref={outlineRef} className={styles.topologyGroupBackground} d={pathRef.current} />\n        </g>\n      </Layer>\n      {showLabel && (\n        <NodeLabel\n          className={styles.topologyGroupLabel}\n          data-test={`group-label-text`}\n          x={labelLocation.current[0]}\n          y={labelLocation.current[1] + hullPadding(labelLocation.current) + 24}\n          paddingX={8}\n          paddingY={5}\n          dragRef={dragNodeRef ? dragLabelRef : undefined}\n          status={element.getNodeStatus()}\n          secondaryLabel={secondaryLabel}\n          truncateLength={truncateLength}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeTextColor={badgeTextColor}\n          badgeBorderColor={badgeBorderColor}\n          badgeClassName={badgeClassName}\n          badgeLocation={badgeLocation}\n          labelIconClass={labelIconClass}\n          labelIcon={labelIcon}\n          labelIconPadding={labelIconPadding}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          hover={isHover || labelHover}\n          actionIcon={collapsible ? <CollapseIcon /> : undefined}\n          onActionIconClick={() => onCollapseChange(element, true)}\n        >\n          {label || element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(ApplicationGroupExpanded);\n","import { Graph, Layout, LayoutFactory } from '@patternfly/react-topology';\nimport TopologyColaLayout from './TopologyColaLayout';\n\nconst COLA_LAYOUT = 'Cola';\n\nconst DEFAULT_LAYOUT = COLA_LAYOUT;\n\nconst SUPPORTED_LAYOUTS = [COLA_LAYOUT];\n\nconst layoutFactory: LayoutFactory = (type: string, graph: Graph): Layout | undefined => {\n  return type === COLA_LAYOUT ? new TopologyColaLayout(graph, { layoutOnDrag: false }) : undefined;\n};\n\nexport { COLA_LAYOUT, DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory };\n","import {\n  ColaLayout,\n  ColaNode,\n  ColaGroup,\n  ColaLink,\n  Graph,\n  GraphModel,\n} from '@patternfly/react-topology';\nimport { layoutConstraints } from '@console/knative-plugin/src/topology/layouts/layoutConstraints';\n\nclass TopologyColaLayout extends ColaLayout {\n  protected getConstraints(nodes: ColaNode[], groups: ColaGroup[], edges: ColaLink[]): any[] {\n    return layoutConstraints(nodes, groups, edges, this.options);\n  }\n\n  protected startLayout(\n    graph: Graph<GraphModel, any>,\n    initialRun: boolean,\n    addingNodes: boolean,\n  ): void {\n    if (graph.getNodes()?.filter((n) => n.isVisible()).length === 0) {\n      return;\n    }\n    super.startLayout(graph, initialRun, addingNodes);\n  }\n}\n\nexport default TopologyColaLayout;\n","import {\n  ColaGroup,\n  ColaLink,\n  ColaNode,\n  getGroupPadding,\n  LayoutOptions,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\n\nconst getNodeTimeStamp = (node: ColaNode): Date => {\n  const data = node.element.getData();\n  return new Date(_.get(data, 'resources.obj.metadata.creationTimestamp', 0));\n};\n\n// Sort nodes most recent to least recent\nconst nodeSorter = (node1: ColaNode, node2: ColaNode) =>\n  getNodeTimeStamp(node1) > getNodeTimeStamp(node2) ? -1 : 1;\n\nconst alignNodeConnector = (\n  edges: ColaLink[],\n  type: string,\n  g: ColaGroup | ColaNode,\n  options: LayoutOptions,\n  filteredNode,\n): any[] => {\n  const constraints = [];\n  const connectorLinks = edges\n    .filter(\n      (e) =>\n        e.element.getType() === type &&\n        !e.target.isFixed &&\n        !e.source.isFixed &&\n        (e.target.element === g.element ||\n          e.source.element === g.element ||\n          e.target.element.getParent() === g.element),\n    )\n    .sort((l1: ColaLink, l2: ColaLink) => nodeSorter(l1.source, l2.source));\n  if (connectorLinks.length) {\n    const height = connectorLinks.reduce((current: number, nextLink: ColaLink) => {\n      return current + nextLink.source.height;\n    }, 0);\n    const serviceDistance =\n      g instanceof ColaGroup\n        ? (filteredNode as ColaNode).radius + getGroupPadding(g.element)\n        : (filteredNode as ColaNode).width / 2;\n\n    const linkNodeConstraint: any = {\n      type: 'alignment',\n      axis: 'y',\n      offsets: [{ node: connectorLinks[0].target.index, offset: 0 }],\n    };\n    let nextOffset = -height / 2;\n    connectorLinks.forEach((link: ColaLink) => {\n      // Evenly space out the nodes vertically\n      if (type === TYPE_EVENT_PUB_SUB_LINK) {\n        linkNodeConstraint.offsets.push({\n          node: link.target.index,\n          offset: nextOffset + link.target.height / 2,\n        });\n      } else {\n        linkNodeConstraint.offsets.push({\n          node: link.source.index,\n          offset: nextOffset + link.source.height / 2,\n        });\n      }\n\n      if (type === TYPE_EVENT_SINK_LINK) {\n        // Keep the event sink to the right\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: link.target.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      } else {\n        // Keep the event sources to the left\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: filteredNode.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      }\n      nextOffset += link.source.height;\n    });\n    constraints.push(linkNodeConstraint);\n  }\n  return constraints;\n};\n\nexport const layoutConstraints = (\n  nodes: ColaNode[],\n  groups: ColaGroup[],\n  edges: ColaLink[],\n  options: LayoutOptions,\n): any[] => {\n  let constraints: any[] = [];\n\n  [...groups, ...nodes]\n    .filter((g) =>\n      [TYPE_EVENT_PUB_SUB, TYPE_SINK_URI, TYPE_KNATIVE_SERVICE].includes(g.element.getType()),\n    )\n    .forEach((g) => {\n      const leafNodes =\n        g instanceof ColaGroup && g.leaves.sort(nodeSorter).filter((n) => !n.isFixed);\n      const filteredNode = (leafNodes && _.first(leafNodes)) || g;\n      if (g.element.getType() === TYPE_KNATIVE_SERVICE) {\n        const serviceConstraint: any = {\n          type: 'alignment',\n          axis: 'y',\n          offsets: [],\n        };\n\n        // Sort revisions such that most recent is to the left\n        if (leafNodes) {\n          for (let i = 0; i < leafNodes.length; i++) {\n            serviceConstraint.offsets.push({ node: leafNodes[i].index, offset: 0 });\n            if (i < leafNodes.length - 1) {\n              // Space out each revision horizontally\n              constraints.push({\n                axis: 'x',\n                left: leafNodes[i].index,\n                right: leafNodes[i + 1].index,\n                gap: leafNodes[i].width,\n                equality: true,\n              });\n            }\n          }\n          if (serviceConstraint.offsets.length) {\n            constraints.push(serviceConstraint);\n          }\n        }\n      }\n\n      const eventSourceLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SOURCE_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const pubSubLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_PUB_SUB_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const eventSinkLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SINK_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      constraints = [\n        ...constraints,\n        ...eventSourceLinksConnector,\n        ...pubSubLinksConnector,\n        ...eventSinkLinksConnector,\n      ];\n    });\n  return constraints;\n};\n","import * as React from 'react';\nimport {\n  TopologyControlBar as PfTopologyControlBar,\n  observer,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  Visualization,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\nimport './TopologyControlBar.scss';\n\ninterface ControlBarProps {\n  visualization: Visualization;\n  isDisabled: boolean;\n}\n\nconst TopologyControlBar: React.FC<ControlBarProps> = observer(({ visualization, isDisabled }) => {\n  const { t } = useTranslation();\n  return (\n    <span className=\"pf-topology-control-bar odc-topology-control-bar\">\n      <PfTopologyControlBar\n        controlButtons={[\n          ...createTopologyControlButtons({\n            ...defaultControlButtonsOptions,\n            zoomInCallback: action(() => {\n              visualization.getGraph().scaleBy(4 / 3);\n            }),\n            zoomInTip: t('topology~Zoom in'),\n            zoomInAriaLabel: t('topology~Zoom in'),\n            zoomInDisabled: isDisabled,\n            zoomOutCallback: action(() => {\n              visualization.getGraph().scaleBy(0.75);\n            }),\n            zoomOutTip: t('topology~Zoom out'),\n            zoomOutAriaLabel: t('topology~Zoom out'),\n            zoomOutDisabled: isDisabled,\n            fitToScreenCallback: action(() => {\n              visualization.getGraph().fit(80);\n            }),\n            fitToScreenTip: t('topology~Fit to screen'),\n            fitToScreenAriaLabel: t('topology~Fit to screen'),\n            fitToScreenDisabled: isDisabled,\n            resetViewCallback: action(() => {\n              visualization.getGraph().reset();\n              visualization.getGraph().layout();\n            }),\n            resetViewTip: t('topology~Reset view'),\n            resetViewAriaLabel: t('topology~Reset view'),\n            resetViewDisabled: isDisabled,\n            legend: false,\n          }),\n        ]}\n      />\n    </span>\n  );\n});\n\nexport default TopologyControlBar;\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_HELM_RELEASE = 'helm-release';\nexport const TYPE_HELM_WORKLOAD = 'helm-workload';\n\nexport const HELM_GROUP_WIDTH = GROUP_WIDTH;\nexport const HELM_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const HELM_GROUP_PADDING = GROUP_PADDING;\n","// Annotation for human readable chart name, ready to be displayed in UI\nexport const CHART_NAME_ANNOTATION = 'charts.openshift.io/name';\n// Annotation for chart category, e.g. redhat, partner, community\nexport const PROVIDER_TYPE_ANNOTATION = 'charts.openshift.io/providerType';\n// Annotation for provider name, e.g. Fortanix, HashiCorp, etc\nexport const PROVIDER_NAME_ANNOTATION = 'charts.openshift.io/provider';\n// Annotation for support URL by the provider\nexport const SUPPORT_URL_ANNOTATION = 'charts.openshift.io/supportURL';\n\nexport enum PROVIDER_TYPE {\n  redhat = 'redhat',\n  partner = 'partner',\n  community = 'community',\n}\n\nexport const PROVIDER_TYPE_KEYS = {\n  // t('helm-plugin~Community')\n  community: 'helm-plugin~Community',\n  // t('helm-plugin~Partner')\n  partner: 'helm-plugin~Partner',\n  // t('helm-plugin~Red Hat')\n  redhat: 'helm-plugin~Red Hat',\n};\n","export { default as useHover } from './useHover';\nexport * from './withCreateConnector';\n","import { Model } from '@patternfly/react-topology';\nimport { isExpanded } from '@console/topology/src/filters';\nimport { TopologyDisplayFilterType, DisplayFilters } from '@console/topology/src/topology-types';\nimport { TYPE_HELM_RELEASE } from './components/const';\n\nexport const EXPAND_HELM_RELEASE_FILTER = 'helmGrouping';\n\nexport const getTopologyFilters = () => {\n  return [\n    {\n      type: TopologyDisplayFilterType.expand,\n      id: EXPAND_HELM_RELEASE_FILTER,\n      // t('helm-plugin~Helm Releases')\n      labelKey: 'helm-plugin~Helm Releases',\n      priority: 300,\n      value: true,\n    },\n  ];\n};\n\nexport const applyHelmDisplayOptions = (model: Model, filters: DisplayFilters): string[] => {\n  let found = false;\n  const appliedFilters = [];\n  const expanded = isExpanded(EXPAND_HELM_RELEASE_FILTER, filters);\n  model.nodes.forEach((d) => {\n    if (d.type === TYPE_HELM_RELEASE) {\n      if (!found) {\n        found = true;\n        appliedFilters.push(EXPAND_HELM_RELEASE_FILTER);\n      }\n      d.collapsed = !expanded;\n    }\n  });\n  return appliedFilters;\n};\n","import * as React from 'react';\nimport { GraphElement, withDragNode, withSelection, withDndDrop } from '@patternfly/react-topology';\nimport { contextMenuActions } from '@console/topology/src/actions/contextMenuActions';\nimport { withCreateConnector } from '@console/topology/src/behavior';\nimport {\n  WorkloadNode,\n  createConnectorCallback,\n  NodeComponentProps,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  withContextMenu,\n  withNoDrop,\n  CreateConnector,\n  noRegroupDragSourceSpec,\n} from '@console/topology/src/components/graph-view';\nimport { withEditReviewAccess } from '@console/topology/src/utils';\nimport { TYPE_HELM_RELEASE, TYPE_HELM_WORKLOAD } from './const';\nimport HelmRelease from './HelmRelease';\n\nexport const getHelmComponentFactory = (\n  kind,\n  type,\n): React.ComponentType<{ element: GraphElement }> | undefined => {\n  switch (type) {\n    case TYPE_HELM_RELEASE:\n      return withSelection({ controlled: true })(\n        withContextMenu(contextMenuActions)(\n          withNoDrop()(withDragNode(noRegroupDragSourceSpec)(HelmRelease)),\n        ),\n      );\n    case TYPE_HELM_WORKLOAD:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withDndDrop<\n          any,\n          any,\n          { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n          NodeComponentProps\n        >(nodeDropTargetSpec)(\n          withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type, false))(\n              withSelection({ controlled: true })(\n                withContextMenu(contextMenuActions)(WorkloadNode),\n              ),\n            ),\n          ),\n        ),\n      );\n    default:\n      return undefined;\n  }\n};\n","import { Model } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { isHelmResource } from '@console/shared';\nimport { OdcNodeModel } from '@console/topology/src/topology-types';\n\nexport const isHelmResourceInModel = (resource: K8sResourceKind, model: Model): boolean => {\n  if (!isHelmResource(resource)) {\n    return false;\n  }\n  return !!model.nodes.find((node) => {\n    return (node as OdcNodeModel).resource?.metadata?.uid === resource?.metadata?.uid;\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology/src/types';\nimport { TYPE_HELM_RELEASE } from './const';\nimport HelmReleaseStatusDecorator from './HelmReleaseStatusDecorator';\n\nexport const getHelmReleaseStatusDecorator = (\n  element: Node,\n  radius: number,\n  x: number,\n  y: number,\n) => {\n  if (element.getType() !== TYPE_HELM_RELEASE || element.isCollapsed()) {\n    return null;\n  }\n\n  return <HelmReleaseStatusDecorator element={element} radius={radius} x={x} y={y} />;\n};\n","import { Model, NodeModel } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { SecretModel } from '@console/internal/models';\nimport { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType, WORKLOAD_TYPES } from '@console/shared';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  mergeGroups,\n  WorkloadModelProps,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { OdcNodeModel, TopologyDataResources } from '@console/topology/src/topology-types';\nimport { HelmReleaseResourcesMap } from '../types/helm-types';\nimport { fetchHelmReleases, loadHelmManifestResources } from '../utils/helm-utils';\nimport {\n  HELM_GROUP_HEIGHT,\n  HELM_GROUP_WIDTH,\n  HELM_GROUP_PADDING,\n  TYPE_HELM_RELEASE,\n  TYPE_HELM_WORKLOAD,\n} from './components/const';\n\nconst getHelmReleaseKey = (resource) => `${resource.kind}---${resource.metadata.name}`;\n\nexport const isHelmReleaseNode = (\n  obj: K8sResourceKind,\n  helmResourcesMap: HelmReleaseResourcesMap,\n): boolean => {\n  if (helmResourcesMap) {\n    return helmResourcesMap.hasOwnProperty(getHelmReleaseKey(obj));\n  }\n  return false;\n};\n\nexport const getTopologyHelmReleaseGroupItem = (\n  obj: K8sResourceKind,\n  helmResourcesMap: HelmReleaseResourcesMap,\n  secrets: K8sResourceKind[],\n): NodeModel[] => {\n  const resourceKindName = getHelmReleaseKey(obj);\n  const helmResources = helmResourcesMap[resourceKindName];\n  const releaseName = helmResources?.releaseName;\n  const releaseNotes = helmResources?.releaseNotes;\n  const uid = obj?.metadata?.uid ?? null;\n  const returnData = [];\n\n  if (!releaseName) {\n    return returnData;\n  }\n\n  const secret = secrets.find((nextSecret) => {\n    return nextSecret.metadata.labels?.name === releaseName;\n  });\n\n  if (secret) {\n    const appGroup = getTopologyGroupItems(secret);\n    if (appGroup) {\n      mergeGroup(appGroup, returnData);\n    }\n    if (!secret.apiVersion) {\n      secret.apiVersion = apiVersionForModel(SecretModel);\n    }\n    if (!secret.kind) {\n      secret.kind = SecretModel.kind;\n    }\n  }\n\n  const { kind, apiVersion } = SecretModel;\n  const helmGroup: OdcNodeModel = {\n    id: secret ? secret.metadata.uid : `${TYPE_HELM_RELEASE}:${releaseName}`,\n    type: TYPE_HELM_RELEASE,\n    resourceKind: 'HelmRelease',\n    group: true,\n    label: releaseName,\n    children: [uid],\n    width: HELM_GROUP_WIDTH,\n    height: HELM_GROUP_HEIGHT,\n    visible: true,\n    style: {\n      padding: HELM_GROUP_PADDING,\n    },\n    data: {\n      resources: {\n        obj: secret ? { ...secret, kind, apiVersion } : null,\n        buildConfigs: null,\n        services: null,\n        routes: null,\n      },\n      data: {\n        chartIcon: helmResources?.chartIcon,\n        status: helmResources?.status,\n        manifestResources: helmResources?.manifestResources || [],\n        releaseNotes,\n      },\n    },\n  };\n\n  returnData.push(helmGroup);\n\n  return returnData;\n};\n\nexport const getHelmGraphModelFromMap = (\n  helmResourcesMap: HelmReleaseResourcesMap,\n  resources: TopologyDataResources,\n) => {\n  const helmDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  const helmResources = {};\n\n  const secrets = resources?.secrets?.data ?? [];\n  WORKLOAD_TYPES.forEach((key) => {\n    helmResources[key] = [];\n    if (resources[key]?.data && resources[key].data.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n      resources[key].data.forEach((resource) => {\n        if (isHelmReleaseNode(resource, helmResourcesMap)) {\n          const item = createOverviewItemForType(key, resource, resources);\n          const uid = resource?.metadata?.uid;\n          const helmResourcesData = helmResourcesMap[getHelmReleaseKey(resource)];\n          const deploymentsLabels = resource?.metadata?.labels ?? {};\n          const nodeIcon =\n            getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n            getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`) ||\n            helmResourcesData?.chartIcon ||\n            getImageForIconClass(`icon-helm`);\n          helmResources[key].push(uid);\n          const data = createTopologyNodeData(resource, item, TYPE_HELM_WORKLOAD, nodeIcon);\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_HELM_WORKLOAD, data, WorkloadModelProps),\n          );\n          const groups = getTopologyHelmReleaseGroupItem(resource, helmResourcesMap, secrets);\n          mergeGroups(groups, typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, helmDataModel);\n    }\n  });\n\n  helmDataModel.nodes.forEach((node) => {\n    if (node.type === TYPE_HELM_RELEASE) {\n      node.data.groupResources =\n        node.children?.map((id) => helmDataModel.nodes.find((n) => id === n.id)) ?? [];\n    }\n  });\n\n  return helmDataModel;\n};\n\nconst getHelmReleaseMap = (namespace: string) => {\n  return fetchHelmReleases(namespace)\n    .then((releases) =>\n      releases.reduce((acc, release) => {\n        try {\n          const manifestResources = loadHelmManifestResources(release);\n          manifestResources.forEach((resource) => {\n            const resourceKindName = getHelmReleaseKey(resource);\n            if (!acc.hasOwnProperty(resourceKindName)) {\n              acc[resourceKindName] = {\n                releaseName: release.name,\n                releaseVersion: release.version,\n                chartIcon: release.chart.metadata.icon,\n                manifestResources,\n                releaseNotes: release.info.notes,\n                status: release.info.status,\n              };\n            }\n          });\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error('Could not fetch or parse helm chart releases', e);\n        }\n        return acc;\n      }, {}),\n    )\n    .catch(() => ({}));\n};\n\nexport const getHelmTopologyDataModel = () => {\n  let secretCount = -1;\n  let mapNamespace = '';\n  let helmResourcesMap = {};\n\n  return (namespace: string, resources: TopologyDataResources): Promise<Model> => {\n    const helmSecrets =\n      resources?.secrets?.data?.filter((s) => s.metadata?.labels?.owner === 'helm') ?? [];\n    const helmReleaseCount = Object.keys(helmResourcesMap).reduce((acc, key) => {\n      if (!acc.includes(helmResourcesMap[key].releaseName)) {\n        acc.push(helmResourcesMap[key].releaseName);\n      }\n      return acc;\n    }, []).length;\n    const count = helmSecrets.length;\n    let retrieveNewReleaseMap = false;\n    if (\n      namespace !== mapNamespace ||\n      (resources.secrets?.loaded && count !== secretCount) ||\n      resources.secrets?.loadError ||\n      secretCount !== helmReleaseCount\n    ) {\n      secretCount = count;\n      mapNamespace = namespace;\n      if (resources.secrets?.loadError || count === 0) {\n        helmResourcesMap = {};\n      } else {\n        retrieveNewReleaseMap = true;\n      }\n    }\n    if (retrieveNewReleaseMap) {\n      return getHelmReleaseMap(namespace).then((map) => {\n        helmResourcesMap = map;\n        return getHelmGraphModelFromMap(helmResourcesMap, resources);\n      });\n    }\n\n    return Promise.resolve(getHelmGraphModelFromMap(helmResourcesMap, resources));\n  };\n};\n","import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithContextMenuProps,\n  WithDragNodeProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport GroupNode from '@console/topology/src/components/graph-view/components/groups/GroupNode';\nimport { getKindStringAndAbbreviation } from '@console/topology/src/components/graph-view/components/nodes/nodeUtils';\nimport { getResource } from '@console/topology/src/utils/topology-utils';\nimport HelmReleaseGroup from './HelmReleaseGroup';\n\nimport './HelmRelease.scss';\n\ntype HelmReleaseProps = {\n  element: Node;\n} & WithSelectionProps &\n  WithContextMenuProps &\n  WithDragNodeProps &\n  WithDndDropProps;\n\nconst HelmRelease: React.FC<HelmReleaseProps> = (props) => {\n  const secretObj = getResource(props.element);\n  const resourceModel = secretObj ? modelFor(referenceFor(secretObj)) : null;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: secretObj?.metadata.name,\n    namespace: secretObj?.metadata.namespace,\n  });\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation('HelmRelease');\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  if (props.element.isCollapsed()) {\n    return (\n      <GroupNode\n        {...props}\n        onContextMenu={editAccess ? props.onContextMenu : null}\n        bgClassName=\"odc-helm-release__bg\"\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n      />\n    );\n  }\n\n  return <HelmReleaseGroup editAccess={editAccess} {...props} />;\n};\n\nexport default observer(HelmRelease);\n","import * as React from 'react';\nimport {\n  Layer,\n  useHover,\n  Node,\n  createSvgIdUrl,\n  useDragNode,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n  observer,\n  useCombineRefs,\n  NodeLabel,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  NodeShadows,\n  NODE_SHADOW_FILTER_ID_HOVER,\n  NODE_SHADOW_FILTER_ID,\n  noRegroupDragSourceSpec,\n} from '@console/topology/src/components/graph-view';\nimport { getNodeDecorators } from '@console/topology/src/components/graph-view/components/nodes/decorators/getNodeDecorators';\nimport { useSearchFilter } from '@console/topology/src/filters';\nimport { useShowLabel } from '@console/topology/src/filters/useShowLabel';\nimport { getResource } from '@console/topology/src/utils';\n\ntype HelmReleaseGroupProps = {\n  element: Node;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  editAccess: boolean;\n  dragging?: boolean;\n} & WithSelectionProps &\n  WithContextMenuProps &\n  WithDragNodeProps &\n  WithDndDropProps;\n\nconst DECORATOR_RADIUS = 13;\nconst HelmReleaseGroup: React.FC<HelmReleaseGroupProps> = ({\n  element,\n  badge,\n  badgeColor,\n  badgeClassName,\n  editAccess,\n  selected,\n  onSelect,\n  onContextMenu,\n  contextMenuOpen,\n  dndDropRef,\n  dragging,\n  dragNodeRef,\n}) => {\n  const [hover, hoverRef] = useHover();\n  const [innerHover, innerHoverRef] = useHover();\n  const [{ dragging: labelDragging }, dragLabelRef] = useDragNode(noRegroupDragSourceSpec);\n  const nodeRefs = useCombineRefs(innerHoverRef, dragNodeRef);\n  const [filtered] = useSearchFilter(element.getLabel(), getResource(element)?.metadata?.labels);\n  const showLabel = useShowLabel(hover);\n  const hasChildren = element.getChildren()?.length > 0;\n  const { x, y, width, height } = element.getBounds();\n  const typeIconClass = element.getData().data.chartIcon || 'icon-helm';\n\n  const decorators = getNodeDecorators(\n    element,\n    element.getGraph().getData().decorators,\n    x + width / 2,\n    y + height / 2,\n    -1,\n    DECORATOR_RADIUS,\n    width,\n    height,\n  );\n\n  return (\n    <g\n      ref={hoverRef}\n      onClick={onSelect}\n      onContextMenu={editAccess ? onContextMenu : null}\n      className={classNames('pf-topology__group odc-helm-release', {\n        'pf-m-dragging': dragging || labelDragging,\n        'is-filtered': filtered,\n      })}\n    >\n      <NodeShadows />\n      <Layer id={dragging || labelDragging ? undefined : 'groups2'}>\n        <g\n          ref={nodeRefs}\n          className={classNames('odc-helm-release', {\n            'pf-m-selected': selected,\n            'pf-m-dragging': dragging || labelDragging,\n            'is-filtered': filtered,\n          })}\n        >\n          <rect\n            key={\n              hover || innerHover || contextMenuOpen || dragging || labelDragging\n                ? 'rect-hover'\n                : 'rect'\n            }\n            ref={dndDropRef}\n            className=\"odc-helm-release__bg\"\n            x={x}\n            y={y}\n            width={width}\n            height={height}\n            rx=\"5\"\n            ry=\"5\"\n            filter={createSvgIdUrl(\n              hover || innerHover || contextMenuOpen || dragging || labelDragging\n                ? NODE_SHADOW_FILTER_ID_HOVER\n                : NODE_SHADOW_FILTER_ID,\n            )}\n          />\n          {!hasChildren && (\n            <text x={x + width / 2} y={y + height / 2} dy=\"0.35em\" textAnchor=\"middle\">\n              No Resources\n            </text>\n          )}\n        </g>\n      </Layer>\n      {decorators}\n      {showLabel && element.getLabel() && (\n        <NodeLabel\n          className=\"pf-topology__group__label odc-base-node__label\"\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          x={x + width / 2}\n          y={y + height + 20}\n          paddingX={8}\n          paddingY={4}\n          labelIconClass={getImageForIconClass(typeIconClass) || typeIconClass}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeClassName={badgeClassName}\n          dragRef={dragLabelRef}\n        >\n          {element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(HelmReleaseGroup);\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Status } from '@console/shared';\nimport { BuildDecoratorBubble } from '@console/topology/src/components/graph-view';\nimport { releaseStatus } from '../../utils/helm-utils';\n\ntype HelmReleaseStatusDecoratorProps = {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst HelmReleaseStatusDecorator: React.FC<HelmReleaseStatusDecoratorProps> = ({\n  element,\n  radius,\n  x,\n  y,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const { data } = element.getData();\n\n  if (!data) {\n    return null;\n  }\n  const status = releaseStatus(data.status);\n  const label = t('helm-plugin~Helm release is {{status}}', { status });\n\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={label}>\n          <Status status={status} iconOnly noTooltip />\n        </BuildDecoratorBubble>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default HelmReleaseStatusDecorator;\n"],"sourceRoot":""}