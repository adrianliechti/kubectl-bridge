(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{5416:function(e,t,a){"use strict";a.r(t),a.d(t,"approveCSR",(function(){return O})),a.d(t,"denyCSR",(function(){return j})),a.d(t,"useNodeActions",(function(){return f}));var c=a(0),n=a(7),o=a(83),s=a(77),d=a(5),i=a(10),l=a(8),r=a(15),u=a(5722),b=a(6271),p=a(6518);const h=(e,t)=>{var a;const c=Object.assign(Object.assign({},e),{status:Object.assign(Object.assign({},e.status||{}),{conditions:[{lastUpdateTime:(new Date).toISOString(),message:`This CSR was ${t.toLowerCase()} via OpenShift Console`,reason:"OpenShiftConsoleCSRApprove",status:"True",type:t},...(null===(a=e.status)||void 0===a?void 0:a.conditions)||[]]})});return Object(s.r)({data:c,model:i.CertificateSigningRequestModel,path:"approval"})},O=e=>h(e,"Approved"),j=e=>h(e,"Denied"),f=e=>{const[t,a]=Object(o.useK8sModel)(Object(l.Db)(e)),{t:s}=Object(n.useTranslation)();return[c.useMemo(()=>{const a=[];Object(r.Td)(e)?a.push({id:"mark-as-schedulable",label:s("console-app~Mark as schedulable"),cta:()=>Object(b.a)(e),accessReview:Object(d.Eb)(t,e,"patch")}):a.push({id:"mark-as-unschedulable",label:s("console-app~Mark as unschedulable"),cta:()=>Object(p.a)({resource:e}),accessReview:Object(d.Eb)(t,e,"patch")});const n=c.createElement("p",null,s("console-app~This action cannot be undone. Deleting a node will instruct Kubernetes that the node is down or unrecoverable and delete all pods scheduled to that node. If the node is still running but unresponsive and the node is deleted, stateful workloads and persistent volumes may suffer corruption or data loss. Only delete a node that you have confirmed is completely stopped and cannot be restored."));return a.push(...Object(u.b)(t,e,n)),a},[t,e,s]),!a,void 0]}},5722:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return i}));var c=a(29),n=a(131),o=a(5),s=a(8);const d={Delete:(e,t,a,s)=>({id:"delete-resource",label:c.a.t("console-app~Delete {{kind}}",{kind:e.kind}),cta:()=>Object(n.q)({kind:e,resource:t,message:s}),accessReview:Object(o.Eb)(e,t,"delete")}),Edit:(e,t)=>({id:"edit-resource",label:c.a.t("console-app~Edit {{kind}}",{kind:e.kind}),cta:{href:Object(o.sc)(t,e.crd?Object(s.Hb)(e):e.kind)+"/yaml"},accessReview:Object(o.Eb)(e,t,"update")}),ModifyLabels:(e,t)=>({id:"edit-labels",label:c.a.t("console-app~Edit labels"),cta:()=>Object(n.v)({kind:e,resource:t,blocking:!0}),accessReview:Object(o.Eb)(e,t,"patch")}),ModifyAnnotations:(e,t)=>({id:"edit-annotations",label:c.a.t("console-app~Edit annotations"),cta:()=>Object(n.b)({kind:e,resource:t,blocking:!0}),accessReview:Object(o.Eb)(e,t,"patch")}),ModifyCount:(e,t)=>({id:"edit-pod-count",label:c.a.t("console-app~Edit Pod count"),cta:()=>Object(n.l)({resourceKind:e,resource:t}),accessReview:Object(o.Eb)(e,t,"patch","scale")}),ModifyPodSelector:(e,t)=>({id:"edit-pod-selector",label:c.a.t("console-app~Edit Pod selector"),cta:()=>Object(n.x)({kind:e,resource:t,blocking:!0}),accessReview:Object(o.Eb)(e,t,"patch")}),ModifyTolerations:(e,t)=>({id:"edit-toleration",label:c.a.t("console-app~Edit tolerations"),cta:()=>Object(n.D)({resourceKind:e,resource:t,modalClassName:"modal-lg"}),accessReview:Object(o.Eb)(e,t,"patch")}),AddStorage:(e,t)=>({id:"add-storage",label:c.a.t("console-app~Add storage"),cta:{href:Object(o.sc)(t,e.crd?Object(s.Hb)(e):e.kind)+"/attach-storage"},accessReview:Object(o.Eb)(e,t,"patch")})},i=(e,t,a)=>[d.ModifyLabels(e,t),d.ModifyAnnotations(e,t),d.Edit(e,t),d.Delete(e,t,void 0,a)]},6271:function(e,t,a){"use strict";a.d(t,"b",(function(){return s})),a.d(t,"a",(function(){return d}));var c=a(225),n=a(10),o=a(8);const s=e=>{const t=c.a(e,"spec.unschedulable")?"replace":"add";return Object(o.pb)(n.NodeModel,e,[{op:t,path:"/spec/unschedulable",value:!0}])},d=e=>{const t=c.a(e,"spec.unschedulable")?"replace":"add";return Object(o.pb)(n.NodeModel,e,[{op:t,path:"/spec/unschedulable",value:!1}])}},6518:function(e,t,a){"use strict";a.d(t,"a",(function(){return c}));const c=e=>a.e(118).then(a.bind(null,7569)).then(t=>t.default(e))}}]);
//# sourceMappingURL=nodeActions-chunk-5b42b541d6f0574a06ba.min.js.map