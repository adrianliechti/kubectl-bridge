{"version":3,"sources":["webpack:///./packages/topology/src/components/workload/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./public/components/replicaset.jsx","webpack:///./public/components/daemon-set.tsx","webpack:///./public/components/deployment.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarTabSection.tsx","webpack:///./packages/topology/src/components/workload/utils.ts","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon.js","webpack:///./packages/topology/src/components/workload/CronJobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DaemonSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentConfigSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/JobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/pods-tab-section.tsx","webpack:///./packages/topology/src/components/workload/ResolveAdapter.ts","webpack:///./packages/topology/src/components/workload/StatefulSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/workload-resource-link.tsx","webpack:///./packages/topology/src/components/workload/build-tab-section.tsx","webpack:///./packages/topology/src/components/workload/network-tab-section.tsx","webpack:///./packages/topology/src/components/workload/jobs-tab-section.tsx","webpack:///./packages/topology/src/components/workload/PodSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/resource-alert.tsx","webpack:///./packages/topology/src/components/workload/vpa-tab-section.tsx","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx","webpack:///./packages/console-shared/src/components/pod/PodsOverview.tsx","webpack:///./packages/topology/src/components/workload/BuildOverview.tsx","webpack:///./packages/topology/src/components/workload/NetworkingOverview.tsx","webpack:///./packages/topology/src/components/workload/JobsOverview.tsx"],"names":["ModifyCount","AddStorage","common","factory","menuActions","kind","obj","labelKey","callback","dc","req","apiVersion","name","metadata","latest","force","opts","ns","namespace","path","rollout","catch","err","error","message","accessReview","group","apiGroup","resource","plural","subresource","verb","spec","paused","getDeploymentConfigStatus","conditions","progressingFailure","type","reason","status","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","t","timeout","updatePeriod","interval","triggers","join","className","label","hideEmpty","strategy","count","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","isInline","variant","title","href","deprecatedDeploymentConfig","text","additionalClassName","DeploymentConfigsDetails","model","key","uid","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","props","loader","then","c","envPath","pages","details","editYaml","nameKey","component","showTitle","selector","canCreate","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","kindObj","context","actions","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","displayName","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","Header","Row","virtualize","DeploymentConfigsPage","createProps","to","ListComponent","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","annotations","replicationController","revision","phase","tableColumnClasses","columnClass","ReplicationControllerTableRow","columnID","statusReplicas","specReplicas","timestamp","creationTimestamp","ReplicationControllersList","sortField","transforms","id","sortFunc","ReplicationControllersPage","Details","replicaSet","ReplicaSetPods","ReplicaSetsDetailsPage","ReplicaSetTableRow","count1","count2","labels","ReplicaSetsList","ReplicaSetsPage","getExtensionsActionsForKind","DaemonSetDetailsList","ds","DaemonSetDetails","daemonset","podData","resourceKind","enableScaling","EnvironmentTab","DaemonSetTableRow","currentNumber","currentNumberScheduled","desiredNumber","desiredNumberScheduled","DaemonSets","DaemonSetsPage","DaemonSetPods","DaemonSetsDetailsPage","prometheusIsAvailable","metrics","deployment","DeploymentDetailsList","rollingUpdate","progressDeadlineSeconds","DeploymentDetails","ReplicaSetsTab","DeploymentsDetailsPage","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","push","getType","groupResources","groupResource","nextResource","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","labelPluralKey","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","n","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","collapsed","labelPosition","bottom","shallow","nodes","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","children","isVisible","getInternalBounds","rect","padding","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","width","height","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","deploymentData","inProgressDeploymentData","completedDeploymentData","previous","progressRC","completedRC","hasGutter","rc","isRollingOut","size","createConnection","sourceNode","targetNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","element","editAccess","canEdit","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","getDataFromAdapter","resolvedExtensions","properties","adapt","usePodsAdapterForWorkloads","buildConfigData","podsAdapterForWorkloads","provider","buildsAdapterForWorkloads","networkAdapterForWorkloads","usePodsAdapterForCronJobWorkloads","jobs","setPods","setLoaded","setLoadError","watchedResources","errorKey","updatedPods","res","podsAdapterForCronJobWorkload","healthChecksAdded","healthChecksUrl","AddHealthChecks","hidden","EditHealthChecks","CommonActionFactory","Delete","relatedResource","cta","Edit","ModifyLabels","blocking","ModifyAnnotations","ModifyPodSelector","ModifyTolerations","modalClassName","getCommonResourceActions","resourceLimitsModal","m","WorkloadTableRow","customData","WorkloadTableHeader","EditResourceLimits","hasHPAs","mapOfResources","hpas","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","action","actionOptions","LongArrowAltRightIcon","svgPath","CronJobSideBarDetails","cronjob","startingDeadlineSeconds","lastScheduleTime","useCronJobSideBarDetails","DaemonSetSideBarDetails","useDaemonSetSideBarDetails","DeploymentConfigSideBarDetails","useDeploymentConfigSideBarDetails","DeploymentSideBarDetails","useDeploymentSideBarDetails","JobSideBarDetails","job","activeDeadlineSeconds","useJobSideBarDetails","PodsTabSection","podAdapter","podAdapterExtensionResolved","podsData","podsDataLoaded","setPodData","handleAdapterResolved","setTimeout","useAdapterHook","onAdapterDataResolved","usePodsSideBarTabSection","podAdapterExtension","getId","StatefulSetSideBarDetails","ss","useStatefulSetSideBarDetails","getWorkloadResourceLink","kindReference","BuildTabSection","buildAdapter","extensionsResolved","buildConfigsDataLoaded","setBuildConfigsData","useBuildsSideBarTabSection","buildAdapterExtensions","NetworkTabSection","networkAdapter","useNetworkingSideBarTabSection","networkAdapterExtensions","extensionsLoaded","JobsTabSection","useJobsSideBarTabSection","PodSideBarDetails","pod","usePodSideBarDetails","addHealthChecksRefs","useHealthChecksAlert","kindForCRDResource","canAddHealthChecks","canAddHealthChecksLoading","containersName","showAlert","addHealthChecksLink","alertMessage","dismissible","useResourceQuotaAlert","fireTelemetryEvent","canUseAlertAction","canUseAlertActionLoading","replicaFailureMsg","resourceQuotaRequested","alertAction","showAlertActionLink","alertActionCta","alertActionLink","actionLinks","VPATabSection","vpas","vpa","groupVersionKind","useVpaSideBarTabSection","verticalPodAutoscalers","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","deploymentConfigRollout","CreateServiceBinding","exports","__esModule","global_Color_200","Recommendations","recommendations","recommendation","containerRecommendations","VerticalPodAutoscalerRecommendations","podUpdateTime","allStatuses","updateTimes","times","nextStatus","running","errorPhases","isPodError","isEvicted","podCompare","pod1","pod2","error1","evicted1","runtime1","runtime2","localeCompare","PodOverviewItem","podName","tooltipFlag","PodsOverviewList","PodsOverviewContent","allPodsLink","emptyText","showWaitingPods","setShowWaitingPods","shipwrightBuilds","buildRunBeta","buildRunAlpha","watchedBuildRuns","allBuildRuns","useGetShipwrightBuilds","waitingForBuildConfig","completionTimestamp","isComplete","waitingForShipwright","buildRun","buildRunIsComplete","showWaitingForBuildAlert","isDeploymentGeneratedByWebConsole","filteredPods","containerStatuses","containerStatus","imageID","isPodWithoutImageId","errorPodCount","podsShown","linkTo","emptyMessage","podAlert","podSize","StatusTitle","Complete","New","toLowerCase","BuildStatus","logSnippet","BuildOverviewItem","startTimestamp","lastUpdated","icon","spin","iconOnly","BuildOverviewList","buildConfig","canStartBuild","inline","buildsLength","BuildOverview","ServicePortList","service","ports","protocol","targetPort","ServicesOverviewListItem","ServicesOverviewList","services","RoutesOverviewListItem","RoutesOverviewList","NetworkingOverview","serviceResources","routeResources","JobOverviewItem","podsLink","standalone","innerRadius","outerRadius","titleComponent","style","fontSize","showTooltip","JobsOverviewList","JobsOverview","allJobsLink","jobCount"],"mappings":"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","file":"topology/code-refs/workload-chunk-cf2a2a85d517cf7cd426.min.js","sourcesContent":["export * from './CronJobSideBarDetails';\nexport * from './DaemonSetSideBarDetails';\nexport * from './DeploymentConfigSideBarDetails';\nexport * from './DeploymentSideBarDetails';\nexport * from './JobSideBarDetails';\nexport * from './pods-tab-section';\nexport * from './StatefulSetSideBarDetails';\nexport * from './workload-resource-link';\nexport * from './utils';\nexport * from './build-tab-section';\nexport * from './network-tab-section';\nexport * from './jobs-tab-section';\nexport * from './PodSideBarDetails';\nexport * from './resource-alert';\nexport * from './vpa-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport {\n  usePodsWatcher,\n  PodRing,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  usePrometheusGate,\n} from '@console/shared';\nimport { K8sResourceKind, referenceFor, referenceForModel, DaemonSetKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  detailsPage,\n  LabelList,\n  navFactory,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  LoadingInline,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nexport const menuActions: KebabAction[] = [\n  AddHealthChecks,\n  Kebab.factory.AddStorage,\n  ...Kebab.getExtensionsActionsForKind(DaemonSetModel),\n  EditHealthChecks,\n  ...Kebab.factory.common,\n];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem\n        label={t('public~Current count')}\n        obj={ds}\n        path=\"status.currentNumberScheduled\"\n      />\n      <DetailsItem\n        label={t('public~Desired count')}\n        obj={ds}\n        path=\"status.desiredNumberScheduled\"\n      />\n      <PodDisruptionBudgetField obj={ds} />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const { podData, loaded } = usePodsWatcher(daemonset);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DaemonSet details')} />\n        {loaded ? (\n          <PodRing\n            key={daemonset.metadata.uid}\n            pods={podData?.pods || []}\n            obj={daemonset}\n            resourceKind={DaemonSetModel}\n            enableScaling={false}\n          />\n        ) : (\n          <LoadingInline />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary\n              resource={daemonset}\n              showPodSelector\n              showNodeSelector\n              showTolerations\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst DaemonSetTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(daemonset);\n  const context = { [resourceKind]: daemonset };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={daemonset.metadata.name}\n          namespace={daemonset.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{currentNumber}} of {{desiredNumber}} pods', {\n            currentNumber: daemonset.status.currentNumberScheduled,\n            desiredNumber: daemonset.status.desiredNumberScheduled,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const DaemonSets: React.FC = (props) => {\n  const { t } = useTranslation();\n  const DaemonSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DaemonSets')}\n      Header={DaemonSetTableHeader}\n      Row={DaemonSetTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = (props) => (\n  <ListPage canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />\n);\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = (props) => (\n  <PodsComponent {...props} showNodes />\n);\n\nexport const DaemonSetsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(detailsPage(DaemonSetDetails)),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        navFactory.pods(DaemonSetPods),\n        navFactory.envEditor(EnvironmentTab),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\ntype DaemonSetDetailsListProps = {\n  ds: DaemonSetKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: DaemonSetKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport './TopologySideBarTabSection.scss';\n\nconst TopologySideBarTabSection: React.FC = ({ children }) => {\n  return <div className=\"ocs-sidebar-tabsection\">{children}</div>;\n};\n\nexport default TopologySideBarTabSection;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  K8sResourceCommon,\n  NetworkAdapterType,\n  PodsAdapterDataType,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { Extension } from '@console/dynamic-plugin-sdk/src/types';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  PodModel,\n} from '@console/internal/models';\nimport {\n  BuildConfigData,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  useBuildConfigsWatcher,\n  useJobsForCronJobWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { getResource } from '../../utils';\n\nexport const getDataFromAdapter = <T extends { resource: K8sResourceCommon }, E extends Extension>(\n  element: GraphElement,\n  [resolvedExtensions, loaded]: [ResolvedExtension<E>[], boolean],\n): T | undefined =>\n  loaded\n    ? resolvedExtensions.reduce<T>((acc, { properties: { adapt } }) => {\n        const values = (adapt as (element: GraphElement) => T)(element);\n        return values ?? acc;\n      }, undefined)\n    : undefined;\n\nconst usePodsAdapterForWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const buildConfigData = useBuildConfigsWatcher(resource);\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n  return React.useMemo(() => ({ pods: podData?.pods, loaded, loadError, buildConfigData }), [\n    buildConfigData,\n    loadError,\n    loaded,\n    podData,\n  ]);\n};\n\nexport const podsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      JobModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: usePodsAdapterForWorkloads };\n};\n\nexport const buildsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<BuildConfigData> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      CronJobModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: useBuildConfigsWatcher };\n};\n\nexport const networkAdapterForWorkloads = (\n  element: GraphElement,\n): NetworkAdapterType | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource };\n};\n\nconst usePodsAdapterForCronJobWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  const {\n    metadata: { namespace },\n  } = resource;\n\n  const [pods, setPods] = React.useState([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      const updatedPods = jobs?.length\n        ? jobs.reduce((acc, res) => {\n            acc.push(...getPodsForResource(res, resources));\n            return acc;\n          }, [])\n        : [];\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [jobs, resources]);\n  return { pods, loaded, loadError };\n};\n\nexport const podsAdapterForCronJobWorkload = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) return undefined;\n  return { resource, provider: usePodsAdapterForCronJobWorkloads };\n};\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","import { createIcon } from '../createIcon';\n\nexport const LongArrowAltRightIconConfig = {\n  name: 'LongArrowAltRightIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LongArrowAltRightIcon = createIcon(LongArrowAltRightIconConfig);\n\nexport default LongArrowAltRightIcon;","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DetailsItem, ResourceSummary, Timestamp } from '@console/internal/components/utils';\nimport { CronJobModel } from '@console/internal/models';\nimport { CronJobKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype CronJobSideBarDetailsProps = {\n  cronjob: CronJobKind;\n};\n\nconst CronJobSideBarDetails: React.FC<CronJobSideBarDetailsProps> = ({ cronjob }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={cronjob.metadata.uid} obj={cronjob} path=\"\" />\n      </div>\n      <ResourceSummary resource={cronjob} showPodSelector>\n        <DetailsItem label={t('topology~Schedule')} obj={cronjob} path=\"spec.schedule\" />\n        <DetailsItem\n          label={t('topology~Concurrency policy')}\n          obj={cronjob}\n          path=\"spec.concurrencyPolicy\"\n        />\n        <DetailsItem\n          label={t('topology~Starting deadline seconds')}\n          obj={cronjob}\n          path=\"spec.startingDeadlineSeconds\"\n        >\n          {cronjob.spec.startingDeadlineSeconds\n            ? t('topology~second', { count: cronjob.spec.startingDeadlineSeconds })\n            : t('topology~Not configured')}\n        </DetailsItem>\n        <DetailsItem\n          label={t('topology~Last schedule time')}\n          obj={cronjob}\n          path=\"status.lastScheduleTime\"\n        >\n          <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useCronJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<CronJobKind>(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <CronJobSideBarDetails cronjob={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DaemonSetDetailsList } from '@console/internal/components/daemon-set';\nimport { ResourceSummary, StatusBox } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { DaemonSetKind } from '@console/internal/module/k8s';\nimport { PodRing, usePodsWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\n\ntype DaemonSetOverviewDetailsProps = {\n  ds: DaemonSetKind;\n};\n\nconst DaemonSetSideBarDetails: React.FC<DaemonSetOverviewDetailsProps> = ({ ds }) => {\n  const { namespace } = ds.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(ds, 'DaemonSet', namespace);\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRing\n            pods={podData?.pods ?? []}\n            resourceKind={DaemonSetModel}\n            obj={ds}\n            enableScaling={false}\n          />\n        </StatusBox>\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={ds} showPodSelector showNodeSelector showTolerations />\n      </div>\n      <div className=\"resource-overview__details\">\n        <DaemonSetDetailsList ds={ds} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDaemonSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DaemonSetKind>(element);\n  if (!resource || resource.kind !== DaemonSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DaemonSetSideBarDetails ds={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentConfigDetailsList } from '@console/internal/components/deployment-config';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentConfigSideBarDetailsProps = {\n  dc: K8sResourceKind;\n};\n\nconst DeploymentConfigSideBarDetails: React.FC<DeploymentConfigSideBarDetailsProps> = ({ dc }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {dc.status.availableReplicas === dc.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentConfigDetailsList dc={dc} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentConfigSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== DeploymentConfigModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentConfigSideBarDetails dc={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentDetailsList } from '@console/internal/components/deployment';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentModel } from '@console/internal/models';\nimport { DeploymentKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentSideBarDetailsProps = {\n  deployment: DeploymentKind;\n};\n\nconst DeploymentSideBarDetails: React.FC<DeploymentSideBarDetailsProps> = ({ deployment: d }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {d.spec.paused && <WorkloadPausedAlert obj={d} model={DeploymentModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={d.metadata.uid} obj={d} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={d} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {d.status.availableReplicas === d.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentDetailsList deployment={d} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DeploymentKind>(element);\n  if (!resource || resource.kind !== DeploymentModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentSideBarDetails deployment={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DetailsItem,\n  ResourceSummary,\n  StatusBox,\n  pluralize,\n} from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport { JobKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype JobSideBarDetailsProps = {\n  job: JobKind;\n};\n\nconst JobSideBarDetails: React.FC<JobSideBarDetailsProps> = ({ job }) => {\n  const { namespace } = job.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRingSet key={job.metadata.uid} obj={job} path=\"\" />\n        </StatusBox>\n      </div>\n      <ResourceSummary resource={job} showPodSelector>\n        <DetailsItem label={t('topology~Desired completions')} obj={job} path=\"spec.completions\" />\n        <DetailsItem label={t('topology~Parallelism')} obj={job} path=\"spec.parallelism\" />\n        <DetailsItem\n          label={t('topology~Active deadline seconds')}\n          obj={job}\n          path=\"spec.activeDeadlineSeconds\"\n        >\n          {job.spec?.activeDeadlineSeconds\n            ? pluralize(job.spec.activeDeadlineSeconds, 'second')\n            : t('topology~Not configured')}\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<JobKind>(element);\n  if (!resource || resource.kind !== JobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobSideBarDetails job={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  isPodAdapter,\n  PodsAdapterDataType,\n  PodAdapter,\n  useResolvedExtensions,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { PodsOverviewContent } from '@console/shared/src/components/pod/PodsOverview';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst PodsTabSection: React.FC<{\n  id: string;\n  podAdapter: AdapterDataType<PodsAdapterDataType<PodKind>>;\n  podAdapterExtensionResolved: boolean;\n}> = ({ id, podAdapter, podAdapterExtensionResolved }) => {\n  const [{ data: podsData, loaded: podsDataLoaded }, setPodData] = React.useState<{\n    data?: PodsAdapterDataType<PodKind>;\n    loaded: boolean;\n  }>({ loaded: false });\n\n  const handleAdapterResolved = React.useCallback(\n    (data) => {\n      if (podAdapter?.resource?.kind === 'CronJob') {\n        // Fixes the issue of Topology page crashing.\n        setTimeout(() => setPodData({ data, loaded: true }), 3000);\n      } else {\n        setPodData({ data, loaded: true });\n      }\n    },\n    [podAdapter],\n  );\n\n  return podAdapter ? (\n    <TopologySideBarTabSection>\n      {podAdapterExtensionResolved && (\n        <ResolveAdapter<PodsAdapterDataType<PodKind>>\n          key={id}\n          resource={podAdapter.resource}\n          data={podAdapter.data}\n          useAdapterHook={podAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {podsDataLoaded && podsData.loaded && !podsData.loadError && (\n        <PodsOverviewContent obj={podAdapter.resource} {...podsData} />\n      )}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const usePodsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [podAdapterExtension, podAdapterExtensionResolved] = useResolvedExtensions<PodAdapter>(\n    isPodAdapter,\n  );\n  const podAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<PodsAdapterDataType<PodKind>>, PodAdapter>(element, [\n        podAdapterExtension,\n        podAdapterExtensionResolved,\n      ]),\n    [element, podAdapterExtension, podAdapterExtensionResolved],\n  );\n  if (!podAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <PodsTabSection\n      id={element.getId()}\n      podAdapter={podAdapter}\n      podAdapterExtensionResolved={podAdapterExtensionResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\ntype ResolveAdapterProps<D, T> = {\n  resource: K8sResourceCommon;\n  data?: T;\n  useAdapterHook: (resource: K8sResourceCommon, data: T) => D;\n  onAdapterDataResolved: (data: D) => void;\n};\n\nconst ResolveAdapter = <D extends {}, T = {}>({\n  resource,\n  data: customData,\n  useAdapterHook,\n  onAdapterDataResolved,\n}: ResolveAdapterProps<D, T>) => {\n  const data = useAdapterHook(resource, customData);\n\n  React.useEffect(() => {\n    if (data) {\n      onAdapterDataResolved(data);\n    }\n    // We do not want to run the effect every time onAdapterDataResolved changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return null;\n};\n\nexport default ResolveAdapter;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { StatefulSetModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype StatefulSetSideBarDetailsProps = {\n  ss: K8sResourceKind;\n};\n\nconst StatefulSetSideBarDetails: React.FC<StatefulSetSideBarDetailsProps> = ({ ss }) => (\n  <div className=\"overview__sidebar-pane-body resource-overview__body\">\n    <div className=\"resource-overview__pod-counts\">\n      <PodRingSet key={ss.metadata.uid} obj={ss} path=\"/spec/replicas\" />\n    </div>\n    <ResourceSummary resource={ss} showPodSelector showNodeSelector showTolerations />\n  </div>\n);\n\nexport const useStatefulSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== StatefulSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <StatefulSetSideBarDetails ss={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../utils';\n\nexport const getWorkloadResourceLink = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource) {\n    return null;\n  }\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  BuildAdapter,\n  isBuildAdapter,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { BuildConfigData } from '@console/shared';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { BuildOverview } from './BuildOverview';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst BuildTabSection: React.FC<{\n  id: string;\n  buildAdapter: AdapterDataType<BuildConfigData>;\n  extensionsResolved: boolean;\n}> = ({ id, buildAdapter, extensionsResolved }) => {\n  const [\n    { data: buildConfigs, loaded: buildConfigsDataLoaded },\n    setBuildConfigsData,\n  ] = React.useState<{\n    data?: BuildConfigData;\n    loaded: boolean;\n  }>({ loaded: false });\n  const handleAdapterResolved = React.useCallback((data) => {\n    setBuildConfigsData({ data, loaded: true });\n  }, []);\n\n  return buildAdapter ? (\n    <TopologySideBarTabSection>\n      {extensionsResolved && (\n        <ResolveAdapter<BuildConfigData>\n          key={id}\n          resource={buildAdapter.resource}\n          useAdapterHook={buildAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {buildConfigsDataLoaded && <BuildOverview buildConfigs={buildConfigs.buildConfigs} />}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useBuildsSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [buildAdapterExtensions, extensionsResolved] = useResolvedExtensions<BuildAdapter>(\n    isBuildAdapter,\n  );\n  const buildAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<BuildConfigData>, BuildAdapter>(element, [\n        buildAdapterExtensions,\n        extensionsResolved,\n      ]),\n    [buildAdapterExtensions, element, extensionsResolved],\n  );\n  if (!buildAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <BuildTabSection\n      id={element.getId()}\n      buildAdapter={buildAdapter}\n      extensionsResolved={extensionsResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  isNetworkAdapter,\n  useResolvedExtensions,\n  NetworkAdapter,\n  K8sResourceCommon,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { NetworkingOverview } from './NetworkingOverview';\nimport { getDataFromAdapter } from './utils';\n\nconst NetworkTabSection: React.FC<{\n  networkAdapter: {\n    resource: K8sResourceCommon;\n  };\n}> = ({ networkAdapter }) => {\n  return networkAdapter ? (\n    <TopologySideBarTabSection>\n      <NetworkingOverview obj={networkAdapter.resource} />\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useNetworkingSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [networkAdapterExtensions, extensionsLoaded] = useResolvedExtensions<NetworkAdapter>(\n    isNetworkAdapter,\n  );\n  const networkAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<{ resource: K8sResourceCommon }, NetworkAdapter>(element, [\n        networkAdapterExtensions,\n        extensionsLoaded,\n      ]),\n    [element, extensionsLoaded, networkAdapterExtensions],\n  );\n  if (!networkAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = <NetworkTabSection networkAdapter={networkAdapter} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { CronJobModel } from '@console/internal/models';\nimport { useJobsForCronJobWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { JobsOverview } from './JobsOverview';\n\nconst JobsTabSection: React.FC<{ resource: K8sResourceCommon }> = ({ resource }) => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  return (\n    <TopologySideBarTabSection>\n      <JobsOverview obj={resource} jobs={jobs} />\n    </TopologySideBarTabSection>\n  );\n};\n\nexport const useJobsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobsTabSection resource={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { PodDetailsList, PodResourceSummary } from '@console/internal/components/pod';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype PodSideBarDetailsProps = {\n  pod: PodKind;\n};\n\nconst PodSideBarDetails: React.FC<PodSideBarDetailsProps> = ({ pod }) => {\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={pod.metadata.uid} obj={pod} path=\"\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <PodResourceSummary pod={pod} />\n      </div>\n      <div className=\"resource-overview__details\">\n        <PodDetailsList pod={pod} />\n      </div>\n    </div>\n  );\n};\n\nexport const usePodSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<PodKind>(element);\n  if (!resource || resource.kind !== PodModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <PodSideBarDetails pod={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { CommonActionFactory } from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { Action, DetailsResourceAlertContent, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceCondition,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnativeServiceModel } from '@console/knative-plugin';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getResource } from '../../utils';\n\nconst addHealthChecksRefs = [\n  referenceForModel(DeploymentConfigModel),\n  referenceForModel(DeploymentModel),\n  referenceForModel(DaemonSetModel),\n  referenceForModel(StatefulSetModel),\n  referenceForModel(KnativeServiceModel),\n];\n\nexport const useHealthChecksAlert = (element: GraphElement): DetailsResourceAlertContent | null => {\n  const resource = getResource(element);\n  const kind = resource?.kind;\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n  const { t } = useTranslation();\n  const kindForCRDResource = resource ? referenceFor(resource) : undefined;\n  const resourceModel = kindForCRDResource ? modelFor(kindForCRDResource) : undefined;\n  const resourceKind = resourceModel?.crd ? kindForCRDResource : kind;\n\n  const [canAddHealthChecks, canAddHealthChecksLoading] = useAccessReview({\n    group: resourceModel?.apiGroup,\n    resource: resourceModel?.plural,\n    namespace,\n    name,\n    verb: 'update',\n  });\n\n  if (!resource || !addHealthChecksRefs.includes(referenceFor(resource))) {\n    return null;\n  }\n\n  const containers = resource?.spec?.template?.spec?.containers;\n  const containersName = containers?.map((container) => container.name);\n  const healthCheckAdded = containers?.every(\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n\n  const showAlert = !healthCheckAdded && canAddHealthChecks && !canAddHealthChecksLoading;\n\n  const addHealthChecksLink = `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containersName[0]}/health-checks`;\n\n  const alertMessage =\n    containersName?.length > 1\n      ? t(\n          'topology~Not all Containers have health checks to ensure your application is running correctly.',\n        )\n      : t(\n          'topology~Container {{containersName}} does not have health checks to ensure your application is running correctly.',\n          { containersName },\n        );\n\n  return showAlert\n    ? {\n        title: t('topology~Health checks'),\n        dismissible: true,\n        content: (\n          <>\n            {alertMessage} <Link to={addHealthChecksLink}>{t('topology~Add health checks')}</Link>\n          </>\n        ),\n        variant: 'custom',\n      }\n    : null;\n};\n\nexport const useResourceQuotaAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const resource = getResource(element);\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n\n  const [canUseAlertAction, canUseAlertActionLoading] = useAccessReview({\n    group: DeploymentModel.apiGroup,\n    resource: DeploymentModel.plural,\n    namespace,\n    name,\n    verb: 'patch',\n  });\n\n  if (!resource || referenceForModel(DeploymentModel) !== referenceFor(resource)) return null;\n\n  const statusConditions: K8sResourceCondition[] = resource.status?.conditions ?? [];\n  const replicaFailure = statusConditions.find((condition) => condition.type === 'ReplicaFailure');\n  const replicaFailureMsg: string = replicaFailure?.message ?? '';\n  const resourceQuotaRequested = replicaFailureMsg.split(':')?.[3] ?? '';\n\n  let alertAction: Action;\n  if (resourceQuotaRequested.includes('limits')) {\n    alertAction = DeploymentActionFactory.EditResourceLimits(DeploymentModel, resource);\n  } else if (resourceQuotaRequested.includes('pods')) {\n    alertAction = CommonActionFactory.ModifyCount(DeploymentModel, resource);\n  }\n\n  const showAlertActionLink = alertAction && canUseAlertAction && !canUseAlertActionLoading;\n\n  const alertActionCta = alertAction?.cta as () => void;\n\n  const onAlertActionClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Alert Action Link Clicked');\n    alertActionCta();\n  };\n\n  const alertActionLink = showAlertActionLink ? (\n    <AlertActionLink onClick={onAlertActionClick}>{alertAction.label as string}</AlertActionLink>\n  ) : undefined;\n\n  return replicaFailure\n    ? {\n        title: t('topology~Resource Quotas'),\n        dismissible: true,\n        content: replicaFailureMsg,\n        actionLinks: alertActionLink,\n        variant: 'warning',\n      }\n    : null;\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\n\ntype VPATabSectionProps = {\n  vpas: K8sResourceCommon[];\n};\n\nconst VPATabSection: React.FC<VPATabSectionProps> = ({ vpas }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~VerticalPodAutoscalers')} />\n      <ul className=\"list-group\">\n        {vpas.map((vpa: K8sResourceCommon) => (\n          <li key={vpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              groupVersionKind={getGroupVersionKindForResource(vpa)}\n              name={vpa.metadata.name}\n              namespace={vpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport const useVpaSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [vpas] = useK8sWatchResource<K8sResourceCommon[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    isList: true,\n    namespaced: true,\n  });\n\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n\n  const resource = getResource(element);\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, resource);\n\n  const section =\n    verticalPodAutoscalers.length > 0 ? (\n      <TopologySideBarTabSection>\n        <VPATabSection vpas={verticalPodAutoscalers} />\n      </TopologySideBarTabSection>\n    ) : undefined;\n  return [section, true, undefined];\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-v5-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-v5-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { Alert, AlertActionLink } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { PodStatus } from '@console/internal/components/pod';\nimport { PodTraffic } from '@console/internal/components/pod-traffic';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  LoadingBox,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { podPhase, PodKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport {\n  usePodsWatcher,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  BuildConfigData,\n} from '@console/shared';\n\nconst kind: string = 'Pod';\nconst MAX_PODS: number = 3;\nconst MAX_ERROR_PODS: number = 10;\n\nconst podUpdateTime = (pod: PodKind) => {\n  const allStatuses = [\n    ..._.get(pod, 'status.containerStatuses', []),\n    ..._.get(pod, 'status.initContainerStatuses', []),\n  ];\n  const updateTimes = _.reduce(\n    allStatuses,\n    (times, nextStatus) => {\n      if (nextStatus.state.running) {\n        return [...times, _.get(nextStatus, 'state.running.startedAt')];\n      }\n      if (nextStatus.state.terminated) {\n        return [...times, _.get(nextStatus, 'state.terminated.finishedAt')];\n      }\n      if (nextStatus.lastState.running) {\n        return [...times, _.get(nextStatus, 'lastState.running.startedAt')];\n      }\n      if (nextStatus.lastState.terminated) {\n        return [...times, _.get(nextStatus, 'lastState.terminated.finishedAt')];\n      }\n      return [...times, _.get(nextStatus, _.get(pod, 'startTime'))];\n    },\n    [],\n  );\n\n  return _.head(_.reverse(updateTimes.sort()));\n};\n\nconst errorPhases = [\n  'ContainerCannotRun',\n  'CrashLoopBackOff',\n  'Critical',\n  'Error',\n  'Failed',\n  'InstallCheckFailed',\n  'Cancelled',\n  'Expired',\n  'Not Ready',\n  'Terminating',\n];\n\nconst isPodError = (pod: PodKind) => _.includes(errorPhases, podPhase(pod));\n\nconst isEvicted = (pod: PodKind) => podPhase(pod) === 'Evicted';\n\nconst isDeploymentGeneratedByWebConsole = (obj: K8sResourceKind) =>\n  obj.kind === 'Deployment' &&\n  obj.metadata?.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole';\n\nconst isPodWithoutImageId = (pod: PodKind) =>\n  pod.status?.phase === 'Pending' &&\n  pod.status?.containerStatuses?.some((containerStatus) => !containerStatus.imageID);\n\nexport const podCompare = (pod1: PodKind, pod2: PodKind): number => {\n  const error1 = isPodError(pod1);\n  const error2 = isPodError(pod2);\n\n  if (error1 !== error2) {\n    return error1 ? -1 : 1;\n  }\n\n  const evicted1 = isEvicted(pod1);\n  const evicted2 = isEvicted(pod2);\n\n  if (evicted1 !== evicted2) {\n    return evicted1 ? 1 : -1;\n  }\n\n  const runtime1 = podUpdateTime(pod1);\n  const runtime2 = podUpdateTime(pod2);\n\n  if (runtime1 < runtime2) {\n    return 1;\n  }\n  if (runtime1 > runtime2) {\n    return -1;\n  }\n\n  return pod1.metadata.name.localeCompare(pod2.metadata.name);\n};\n\nconst PodOverviewItem: React.FC<PodOverviewItemProps> = ({ pod }) => {\n  const {\n    metadata: { name, namespace },\n  } = pod;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-5\">\n          <ResourceLink kind={kind} name={name} namespace={namespace} />\n        </span>\n        <span className=\"col-xs-3\">\n          <PodStatus pod={pod} />\n        </span>\n        <span className=\"col-xs-1\">\n          <PodTraffic podName={name} namespace={namespace} tooltipFlag />\n        </span>\n        <span className=\"col-xs-3 text-right\">\n          <Link to={`${resourcePath(kind, name, namespace)}/logs`}>{t('public~View logs')}</Link>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nPodOverviewItem.displayName = 'PodOverviewItem';\n\ntype PodOverviewItemProps = {\n  pod: PodKind;\n};\n\nconst PodsOverviewList: React.FC<PodOverviewListProps> = ({ pods }) => (\n  <ul className=\"list-group\">\n    {_.map(pods, (pod) => (\n      <PodOverviewItem key={pod.metadata.uid} pod={pod} />\n    ))}\n  </ul>\n);\n\nPodsOverviewList.displayName = 'PodsOverviewList';\n\nconst isComplete = (build: K8sResourceKind) => build.status?.completionTimestamp;\n\n/**\n * Get the Shipwright BuildRun status for a pod's image if it exists, otherwise\n * return an empty object\n */\nconst useGetShipwrightBuilds = (namespace: string, name: string): K8sResourceKind[] => {\n  const watchedResources = {\n    buildRunBeta: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1beta1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n    buildRunAlpha: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1alpha1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n  };\n\n  // get all shipwright buildrun CRDs and concatenate into a list\n  const watchedBuildRuns = useK8sWatchResources(watchedResources);\n\n  const buildRuns = React.useMemo(() => {\n    const allBuildRuns = {\n      ...((watchedBuildRuns.buildRunBeta.data as object) || {}),\n      ...((watchedBuildRuns.buildRunAlpha.data as object) || {}),\n    };\n\n    return Object.keys(allBuildRuns)\n      .filter((key) => {\n        const buildRun = allBuildRuns[key] as K8sResourceKind;\n        return buildRun.spec?.build?.name === name;\n      })\n      .map((key) => allBuildRuns[key] as K8sResourceKind);\n  }, [watchedBuildRuns, name]);\n\n  return buildRuns;\n};\n\nconst buildRunIsComplete = (buildRun: K8sResourceKind) => {\n  const succeededCondition = buildRun?.status?.conditions?.find(\n    (condition) => condition.type === 'Succeeded',\n  );\n\n  return (\n    (succeededCondition?.status === 'True' || succeededCondition?.status === 'False') &&\n    succeededCondition?.reason === 'Succeeded'\n  );\n};\n\nexport const PodsOverviewContent: React.FC<PodsOverviewContentProps> = ({\n  obj,\n  pods,\n  loaded,\n  loadError,\n  allPodsLink,\n  emptyText,\n  buildConfigData,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const [showWaitingPods, setShowWaitingPods] = React.useState(false);\n  const shipwrightBuilds = useGetShipwrightBuilds(namespace, name);\n\n  const waitingForBuildConfig =\n    buildConfigData?.buildConfigs?.length > 0 &&\n    !buildConfigData.buildConfigs[0].builds.some((build) => isComplete(build));\n\n  const waitingForShipwright =\n    shipwrightBuilds?.length > 0 &&\n    !shipwrightBuilds.some((buildRun) => buildRunIsComplete(buildRun));\n\n  const showWaitingForBuildAlert =\n    (waitingForBuildConfig || waitingForShipwright) && isDeploymentGeneratedByWebConsole(obj);\n\n  let filteredPods = [...pods];\n  if (showWaitingForBuildAlert && !showWaitingPods) {\n    filteredPods = filteredPods.filter((pod) => !isPodWithoutImageId(pod));\n  }\n  filteredPods.sort(podCompare);\n\n  const errorPodCount = _.size(_.filter(pods, (pod) => isPodError(pod)));\n  const podsShown = Math.max(Math.min(errorPodCount, MAX_ERROR_PODS), MAX_PODS);\n  const linkTo = allPodsLink || `${resourcePath(referenceFor(obj), name, namespace)}/pods`;\n  const emptyMessage = emptyText || t('console-shared~No Pods found for this resource.');\n\n  const podAlert = showWaitingForBuildAlert ? (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~Waiting for the build')}\n      actionLinks={\n        <AlertActionLink\n          onClick={() => setShowWaitingPods(!showWaitingPods)}\n          data-test=\"waiting-pods\"\n        >\n          {showWaitingPods\n            ? t('console-shared~Hide waiting pods with errors')\n            : t('console-shared~Show waiting pods with errors')}\n        </AlertActionLink>\n      }\n    >\n      {t(\n        'console-shared~Waiting for the first build to run successfully. You may temporarily see \"ImagePullBackOff\" and \"ErrImagePull\" errors while waiting.',\n      )}\n    </Alert>\n  ) : null;\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('public~Pods')}>\n        {_.size(pods) > podsShown && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('console-shared~View all {{podSize}}', { podSize: _.size(pods) })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {buildConfigData?.loaded && !buildConfigData?.loadError && podAlert}\n      {_.isEmpty(filteredPods) ? (\n        <span className=\"text-muted\">{loaded || !!loadError ? emptyMessage : <LoadingBox />}</span>\n      ) : (\n        <PodsOverviewList pods={_.take(filteredPods, podsShown)} />\n      )}\n    </>\n  );\n};\nPodsOverviewContent.displayName = 'PodsOverviewContent';\n\nexport const PodsOverview: React.FC<PodsOverviewProps> = ({\n  obj,\n  podsFilter,\n  hideIfEmpty = false,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const { podData, loadError, loaded } = usePodsWatcher(obj, obj.kind, namespace);\n\n  React.useEffect(() => {\n    if (!loadError && loaded) {\n      let updatedPods = podData.pods as PodKind[];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n    }\n  }, [podData, loadError, loaded, podsFilter]);\n\n  if (!pods.length && hideIfEmpty) {\n    return null;\n  }\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\nexport const PodsOverviewMultiple: React.FC<PodsOverviewMultipleProps> = ({\n  obj,\n  podResources,\n  podsFilter,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      let updatedPods = podResources?.length\n        ? podResources.reduce((acc, resource) => {\n            acc.push(...getPodsForResource(resource, resources));\n            return acc;\n          }, [])\n        : [];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [podResources, podsFilter, resources]);\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\ntype PodOverviewListProps = {\n  pods: PodKind[];\n};\n\ntype PodsOverviewContentProps = {\n  obj: K8sResourceKind;\n  pods: PodKind[];\n  loaded: boolean;\n  loadError: string;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n\ntype PodsOverviewProps = {\n  obj: K8sResourceKind;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n  hideIfEmpty?: boolean;\n};\n\ntype PodsOverviewMultipleProps = {\n  obj: K8sResourceKind;\n  podResources: K8sResourceKind[];\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { BuildLogLink, BuildNumberLink } from '@console/internal/components/build';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { BuildConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { BuildPhase, startBuild } from '@console/internal/module/k8s/builds';\nimport { LogSnippet, Status, BuildConfigOverviewItem } from '@console/shared';\n\nconst MAX_VISIBLE = 3;\n\nconst StatusTitle = ({ build }: { build: K8sResourceKind }) => {\n  const { t } = useTranslation();\n  switch (build.status.phase) {\n    case BuildPhase.Cancelled:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was cancelled\n        </Trans>\n      );\n    case BuildPhase.Complete:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was complete\n        </Trans>\n      );\n    case BuildPhase.Error:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> encountered an error\n        </Trans>\n      );\n    case BuildPhase.Failed:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> failed\n        </Trans>\n      );\n    case BuildPhase.New:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is new\n        </Trans>\n      );\n    case BuildPhase.Pending:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is pending\n        </Trans>\n      );\n    case BuildPhase.Running:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is running\n        </Trans>\n      );\n    default:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is {build.status?.phase?.toLowerCase()}\n        </Trans>\n      );\n  }\n};\n\nconst BuildStatus = ({ build }: { build: K8sResourceKind }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? <LogSnippet message={message} logSnippet={logSnippet} /> : null;\n};\n\nconst BuildOverviewItem: React.FC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          <div>\n            <StatusTitle build={build} />\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"build-overview__item-time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.FC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n  const { t } = useTranslation();\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {builds.length > MAX_VISIBLE && (\n            <div>\n              <Link\n                className=\"sidebar__section-view-all\"\n                to={`${resourcePath(referenceFor(buildConfig), name, namespace)}/builds`}\n              >\n                {t('topology~View all {{buildsLength}}', {\n                  buildsLength: builds.length,\n                })}\n              </Link>\n            </div>\n          )}\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick} data-test-id=\"start-build-action\">\n                {t('topology~Start Build')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {!(builds?.length > 0) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">{t('topology~No Builds found for this Build Config.')}</span>\n        </li>\n      ) : (\n        builds\n          .slice(0, MAX_VISIBLE)\n          .map((build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\nexport const BuildOverview: React.FC<BuildConfigsOverviewProps> = ({ buildConfigs }) => {\n  const { t } = useTranslation();\n  if (!(buildConfigs?.length > 0)) {\n    return null;\n  }\n  return (\n    <div className=\"build-overview\">\n      <SidebarSectionHeading text={t('topology~Builds')} />\n      {buildConfigs.map((buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))}\n    </div>\n  );\n};\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n  loaded?: boolean;\n  loadError?: string;\n};\n","import * as React from 'react';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLocation } from '@console/internal/components/routes';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher, useServicesWatcher } from '@console/shared';\n\nconst ServicePortList: React.FC<ServicePortListProps> = ({ service }) => {\n  const ports = service.spec?.ports ?? [];\n  const { t } = useTranslation();\n  return (\n    <ul className=\"port-list\">\n      {ports.map(({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">{t('topology~Service port:')}</span>{' '}\n          {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">{t('topology~Pod port:')}</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.FC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.FC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {services?.map((service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.FC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{t('topology~Location:')}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.FC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {routes?.map((route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.FC<NetworkingOverviewProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const serviceResources = useServicesWatcher(obj);\n  const services =\n    serviceResources.loaded && !serviceResources.loadError ? serviceResources.services : [];\n  const routeResources = useRoutesWatcher(obj);\n  const routes = routeResources.loaded && !routeResources.loadError ? routeResources.routes : [];\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~Services')} />\n      {!(services?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Services found for this resource.')}</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text={t('topology~Routes')} />\n      {!(routes?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Routes found for this resource.')}</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  obj: K8sResourceKind;\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, JobKind } from '@console/internal/module/k8s';\nimport { PodStatus, usePodsWatcher } from '@console/shared';\n\nconst kind: string = 'Job';\nconst MAX_JOBS: number = 3;\n\nconst JobOverviewItem: React.FC<JobOverviewItemProps> = ({ job }) => {\n  const {\n    metadata: { name, namespace },\n  } = job;\n  const podsLink = `${resourcePath(referenceFor(job), name, namespace)}/pods`;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n\n  return loaded && !loadError ? (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"job-overview__item\">\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n        <Link to={podsLink} className=\"overview__pod-donut-sm\">\n          <PodStatus\n            standalone\n            data={podData.pods}\n            size={25}\n            innerRadius={8}\n            outerRadius={12}\n            title={`${podData.pods.length}`}\n            titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n            showTooltip={false}\n          />\n        </Link>\n      </div>\n    </li>\n  ) : null;\n};\n\nJobOverviewItem.displayName = 'JobOverviewItem';\n\ntype JobOverviewItemProps = {\n  job: JobKind;\n};\n\nconst JobsOverviewList: React.FC<JobsOverviewListProps> = ({ jobs }) => (\n  <ul className=\"list-group\">\n    {jobs?.map((job) => (\n      <JobOverviewItem key={job.metadata.uid} job={job} />\n    ))}\n  </ul>\n);\n\nJobsOverviewList.displayName = 'JobsOverviewList';\n\nexport const JobsOverview: React.FC<JobsOverviewProps> = ({\n  jobs,\n  obj,\n  allJobsLink,\n  emptyText,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const linkTo = allJobsLink || `${resourcePath(referenceFor(obj), name, namespace)}/jobs`;\n  const emptyMessage = emptyText || t('topology~No Jobs found for this resource.');\n\n  return (\n    <>\n      <SidebarSectionHeading text=\"Jobs\">\n        {jobs?.length > MAX_JOBS && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('topology~View all ({{jobCount}})', { jobCount: jobs.length })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {!(jobs?.length > 0) ? (\n        <span className=\"text-muted\">{emptyMessage}</span>\n      ) : (\n        <JobsOverviewList jobs={jobs.slice(0, MAX_JOBS)} />\n      )}\n    </>\n  );\n};\n\ntype JobsOverviewListProps = {\n  jobs: JobKind[];\n};\n\ntype JobsOverviewProps = {\n  jobs: JobKind[];\n  obj: K8sResourceKind;\n  allJobsLink?: string;\n  emptyText?: string;\n};\n"],"sourceRoot":""}