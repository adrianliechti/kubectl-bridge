(window.webpackJsonp=window.webpackJsonp||[]).push([[301],{11511:function(o,t,e){"use strict";var n=e(61),p=e(5703),r=e(5924);t.a=(o,t)=>{if(!o)return Object(n.Map)({supportedFilters:p.b.map(o=>o.id),supportedKinds:{}});if(t.type===r.a.supportedTopologyFilters)return o.set("supportedFilters",t.payload.supportedFilters);if(t.type===r.a.supportedTopologyKinds)return o.set("supportedKinds",t.payload.supportedKinds);if(t.type===r.a.topologyGraphModel){const e=o.get("topologyGraphModel"),n=Object.assign(Object.assign({},e),{[t.payload.namespace]:t.payload.graphModel});return o.set("topologyGraphModel",n)}return o}},5462:function(o,t,e){"use strict";e.r(t);var n=e(420),p=e(11511);t.default=Object(n.combineReducers)({topology:p.a})},5693:function(o,t,e){"use strict";var n,p;e.d(t,"c",(function(){return n})),e.d(t,"b",(function(){return p})),e.d(t,"a",(function(){return r})),function(o){o.graph="graph",o.list="list"}(n||(n={})),function(o){o.show="show",o.expand="expand",o.kind="kind"}(p||(p={}));const r="show-regroup-hint"},5703:function(o,t,e){"use strict";e.d(t,"f",(function(){return p})),e.d(t,"e",(function(){return r})),e.d(t,"c",(function(){return i})),e.d(t,"d",(function(){return u})),e.d(t,"b",(function(){return d})),e.d(t,"a",(function(){return s}));var n=e(5693);const p="show-pod-count",r="show-labels",i="expand-app-groups",u="expand-groups",d=[{type:n.b.expand,id:u,labelKey:"topology~Expand groups",priority:1,value:!0},{type:n.b.show,id:p,labelKey:"topology~Pod count",priority:10,value:!1},{type:n.b.show,id:r,labelKey:"topology~Labels",priority:900,value:!0},{type:n.b.expand,id:i,labelKey:"topology~Application groupings",priority:10,value:!0}],s=[p,r]},5924:function(o,t,e){"use strict";e.d(t,"a",(function(){return n})),e.d(t,"c",(function(){return r})),e.d(t,"d",(function(){return i})),e.d(t,"e",(function(){return u})),e.d(t,"b",(function(){return d}));var n,p=e(42);!function(o){o.topologyFilters="topologyFilters",o.supportedTopologyFilters="supportedTopologyFilters",o.supportedTopologyKinds="supportedTopologyKinds",o.topologyGraphModel="topologyGraphModel"}(n||(n={}));const r=o=>Object(p.action)(n.supportedTopologyFilters,{supportedFilters:o}),i=o=>Object(p.action)(n.supportedTopologyKinds,{supportedKinds:o}),u=(o,t)=>Object(p.action)(n.topologyGraphModel,{namespace:o,graphModel:t}),d=(o,t)=>{var e,n,p;const r=null===(n=null===(e=null==o?void 0:o.plugins)||void 0===e?void 0:e.devconsole)||void 0===n?void 0:n.topology;return null===(p=null==r?void 0:r.get("topologyGraphModel"))||void 0===p?void 0:p[t]}}}]);
//# sourceMappingURL=reduxReducer-chunk-f4219a3edee55eacccdc.min.js.map